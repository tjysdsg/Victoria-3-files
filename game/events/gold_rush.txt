namespace = goldrush

goldrush.1 = { #gold rush in state. Gold Discovery itself is a notification.
	type = state_event
	placement = ROOT
	title = goldrush.1.t
	desc = goldrush.1.d
	flavor = goldrush.1.f

	duration = 3

	cooldown = { days = stupidly_long_modifier_time }  #State Cooldown

	event_image = {
		video = "europenorthamerica_gold_prospectors"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_trade.dds"

	trigger = {
		has_building = building_gold_fields #A gold rush is triggered when gold is discovered where there already is some gold.
		owner = {  #If these top two are true, will do hidden event goldrush.6. The last is the National cooldown
			NOR = {
				has_variable = gold_always_exploit
				has_variable = gold_always_attract
			}
			NOT = { has_variable = goldrush_active}
		}
	}

	immediate = {
		set_variable = gold_rush_state #Allows gold rush ended events
		save_scope_as = goldrush_state
		owner = {
			save_scope_as = goldrush_country
			set_variable = {
				name = goldrush_active
				days = very_long_modifier_time #National Cooldown. Not every discovery leads to a gold rush.
			}
		}
	}

	option = { #move everyone there
		name = goldrush.1.a
		default_option = yes
		add_modifier = {
			name = state_gold_rush
			days = normal_modifier_time
		}
	}

	option = { #exploit it
		name = goldrush.1.b
		add_modifier = {
			name = state_gold_rush_less_migration
			days = normal_modifier_time
		}
		add_modifier = {
			name = state_gold_rush_exploitation
			days = normal_modifier_time
		}
	}

	option = { #always attract people
		name = goldrush.1.c
		add_modifier = {
			name = state_gold_rush
			days = normal_modifier_time
		}
		custom_tooltip = {
			text = gold_always_attract_tt
			owner = {
				set_variable = gold_always_attract
			}
		}
	}

	option = { #always exploit it.
		name = goldrush.1.e
		add_modifier = {
			name = state_gold_rush_less_migration
			days = normal_modifier_time
		}
		add_modifier = {
			name = state_gold_rush_exploitation
			days = normal_modifier_time
		}
		custom_tooltip = {
			text = gold_always_exploit_tt
			owner = {
				set_variable = gold_always_exploit
			}
		}
	}
}

goldrush.2 = { #gold fields depleted
	type = state_event
	placement = ROOT
	title = goldrush.2.t
	desc = goldrush.2.d
	flavor = goldrush.2.f

	duration = 3

	cooldown = { days = very_long_modifier_time } #state cooldown

	event_image = {
		video = "europenorthamerica_gold_prospectors"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_trade.dds"

	trigger = { #Triggered by resources depleted
		has_variable = gold_rush_state
		owner = {
			NOR = { #If these are true, will do hidden event goldrush.7
				has_variable = gold_always_let_go
				has_variable = gold_always_make_stay
			}
		}
	}

	immediate = {
		save_scope_as = goldrush_no_more_state
		owner = {
			save_scope_as = goldrush_country
		}
		remove_variable = gold_rush_state
	}

	option = { #let them go
		name = goldrush.2.a
		default_option = yes
		if = {
			limit = {
				has_modifier = state_gold_rush
			}
			remove_modifier = state_gold_rush
		}
		add_modifier = {
			name = state_gold_depleted
			days = normal_modifier_time
		}
	}

	option = { #try to retain them
		name = goldrush.2.b
		if = {
			limit = {
				has_modifier = state_gold_rush
			}
			remove_modifier = state_gold_rush
		}
		add_radicals_in_state = {
			pop_type = laborers
			value = very_large_radicals
		}
	}

	option = { #always let them go
		name = goldrush.2.c
		if = {
			limit = {
				has_modifier = state_gold_rush
			}
			remove_modifier = state_gold_rush
		}
		add_modifier = {
			name = state_gold_depleted
			days = normal_modifier_time
		}
		custom_tooltip = {
			text = gold_always_let_go_tt
			owner = {
				set_variable = gold_always_let_go
			}
		}
	}

	option = { #always try to retain them
		name = goldrush.2.e
		if = {
			limit = {
				has_modifier = state_gold_rush
			}
			remove_modifier = state_gold_rush
		}
		add_radicals_in_state = {
			pop_type = laborers
			value = very_large_radicals
		}
		custom_tooltip = {
			text = gold_always_make_stay_tt
			owner = {
				set_variable = gold_always_make_stay
			}
		}
	}
}

goldrush.3 = { #foreign influx provokes outcry
	type = country_event
	placement = ROOT
	title = goldrush.3.t
	desc = goldrush.3.d
	flavor = goldrush.3.f

	cooldown = { days = stupidly_long_modifier_time }

	duration = 3

	event_image = {
		video = "europenorthamerica_gold_prospectors"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	trigger = {
		any_scope_state = {
			has_variable = gold_rush_state
		}
		OR = {
			ig:ig_landowners = {
				is_powerful = yes
			}
			ig:ig_armed_forces = {
				is_powerful = yes
			}
			ig:ig_devout = {
				is_powerful = yes
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				has_modifier = state_gold_rush
			}
			save_scope_as = pb_gold_state
		}
		if = {
			limit = {
				ig:ig_landowners = {
					is_powerful = yes
				}
			}
			ig:ig_landowners = {
				save_scope_as = petty_ig
			}
		}
		else_if = {
			limit = {
				ig:ig_devout = {
					is_powerful = yes
				}
			}
			ig:ig_devout = {
				save_scope_as = petty_ig
			}
		}
		else = {
			ig:ig_armed_forces = {
				save_scope_as = petty_ig
			}
		}
	}

	option = { #we need them
		name = goldrush.3.a
		default_option = yes
		ig:ig_petty_bourgeoisie = {
			add_modifier = {
				name = pb_angry_at_foreign_miners
				days = normal_modifier_time
			}
		}
	}

	option = { #limit migration
		name = goldrush.3.b
		scope:pb_gold_state = {
			remove_modifier = state_gold_rush
			add_modifier = {
				name = state_limited_gold_rush
				days = normal_modifier_time
			}
		}
	}
}

goldrush.4 = { #miners get organized
	type = country_event
	placement = ROOT
	title = goldrush.4.t
	desc = goldrush.4.d
	flavor = goldrush.4.f

	duration = 3

	cooldown = { days = stupidly_long_modifier_time }

	event_image = {
		video = "europenorthamerica_gold_prospectors"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	trigger = {
		any_scope_state = {
			has_variable = gold_rush_state
		}
		NOR = {
			ig:ig_trade_unions = {
				has_modifier = tu_mining_syndicates_formed
			}
			ig:ig_industrialists = {
				has_modifier = in_mining_conglomerates_formed
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				OR = {
					has_modifier = state_gold_rush
					has_modifier = state_limited_gold_rush
				}
			}
			save_scope_as = gr4_gold_state
		}
		ig:ig_trade_unions = {
			save_scope_as = trade_unions_ig
		}
		ig:ig_industrialists = {
			save_scope_as = industrialists_ig
		}
	}

	option = { #trade unions
		name = goldrush.4.a
		default_option = yes
		ig:ig_trade_unions = {
			add_modifier = {
				name = tu_mining_syndicates_formed
				days = normal_modifier_time
			}
		}
		ig:ig_industrialists = {
			add_modifier = {
				name = in_disrupted_paradigms
				days = normal_modifier_time
			}
		}
	}

	option = { #industralists
		name = goldrush.4.b
		ig:ig_industrialists = {
			add_modifier = {
				name = in_mining_conglomerates_formed
				days = normal_modifier_time
			}
		}
		ig:ig_trade_unions = {
			add_modifier = {
				name = tu_miners_exploited
				days = normal_modifier_time
			}
		}
	}
}

# The COUNTRY_ADJ Dream
goldrush.5 = {
	type = state_event
	placement = ROOT
	title = goldrush.5.t
	desc = goldrush.5.d
	flavor = goldrush.5.f

	duration = 3

	cooldown = { days = never_fire_again_modifier_time } #applies to state

	event_image = {
		video = "europenorthamerica_gold_prospectors"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"

	trigger = {
		has_variable = gold_rush_state #must fire in gold rush state
		owner = {
			NOT = {
				has_variable = goldrush_dream_fired #only fires once
			}
		}
	}

	immediate = {
		save_scope_as = gold_rush_state
		owner = {
			save_scope_as = owner_country_scope
			set_variable = {
				name = goldrush_dream_fired
				days = stupidly_long_modifier_time #national cooldown
			}
		}
	}

	option = { #worrying
		name = goldrush.5.a
		default_option = yes
		add_modifier = {
			name = expecting_riches
			days = normal_modifier_time
		}
		add_modifier = {
			name = expecting_riches_forever
			days = long_modifier_time
			multiplier = 2
		}
	}

	option = { #tell them to tone it down
		name = goldrush.5.b
		add_modifier = {
			name = expecting_riches_angry
			days = normal_modifier_time
		}
		add_modifier = {
			name = expecting_riches_forever
			days = long_modifier_time
		}
	}
}

goldrush.6 = { #hidden event that does the effects if the player chooses to always exploit or always extract
	type = state_event
	hidden = yes

	cooldown = { days = stupidly_long_modifier_time } #state cooldown

	trigger = {
		has_building = building_gold_fields
		owner = {
			OR = {
				has_variable = gold_always_exploit
				has_variable = gold_always_attract
			}
			NOT = {
				has_variable = goldrush_active
			}
		}
	}

	immediate = {
		set_variable = gold_rush_state #Allows gold rush ended events
		save_scope_as = goldrush_state
		#Notification is done directly in on-action
		owner = {
			save_scope_as = goldrush_country
			set_variable = {
				name = goldrush_active
				days = very_long_modifier_time #National Cooldown. Not every discovery leads to a gold rush.
			}
		}
		if = {
			limit = {
				owner = {
					has_variable = gold_always_exploit
				}
			}
			add_modifier = {
				name = state_gold_rush_less_migration
				days = normal_modifier_time
			}
			add_modifier = {
				name = state_gold_rush_exploitation
				days = normal_modifier_time
			}
		}
		else = {
			add_modifier = {
				name = state_gold_rush
				days = normal_modifier_time
			}
		}
	}
}

goldrush.7 = { #hidden event that does the effects if the player chooses to always let the people go or always keep them in. Triggered by resource depleted.
	type = state_event
	hidden = yes
	trigger = {
		has_variable = gold_rush_state
		owner = {
			OR = {
				has_variable = gold_always_let_go
				has_variable = gold_always_make_stay
			}
		}
	}

	cooldown = { days = very_long_modifier_time }#state cooldown

	immediate = {
		#notification is handled by on_actions
		save_scope_as = goldrush_state
		if = {
			limit = {
				has_modifier = state_gold_rush
			}
			remove_modifier = state_gold_rush
		}
		if = {
			limit = {
				owner = {
					has_variable = gold_always_let_go
				}
			}
			add_modifier = {
				name = state_gold_depleted
				days = normal_modifier_time
			}
		}
		else = {
			add_radicals_in_state = {
				pop_type = laborers
				value = very_large_radicals
			}
		}
	}
}
