namespace = sol_events

sol_events.1 = { #people are poor
	type = country_event
	placement = scope:slums_state

	title = sol_events.1.t
	desc = sol_events.1.d
	flavor = sol_events.1.f

	duration = 3

	event_image = {
		video = "europenorthamerica_rich_and_poor"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	trigger = {
		#triggered by journal entry
		any_scope_state = {
			is_capital = yes
			any_scope_pop = {
				standard_of_living < 10
			}
		}
		NOR = {
			has_modifier = supports_sol_improvements_modifier
			has_modifier = disapproves_of_poverty_dismissed_modifier
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				is_capital = yes
				any_scope_pop = {
					standard_of_living < 10
				}
			}
			save_scope_as = slums_state
			random_scope_pop = {
				limit = {
					standard_of_living < 10
				}
				save_scope_as = begging_woman_scope
			}
		}
	}

	option = { #yes
		name = sol_events.1.a
		default_option = yes
		add_modifier = {
			name = poverty_relief_modifier
			days = short_modifier_time
		}
		every_interest_group = {
			limit = {
				law_stance = {
					law = law_type:law_no_health_system
					value < neutral
				}
			}
			add_modifier = {
				name = supports_sol_improvements_modifier
				days = normal_modifier_time
			}
		}
	}

	option = { #no
		name = sol_events.1.b
		set_variable = {
			name = dismissed_poverty_variable
			days = normal_modifier_time
		}
		scope:slums_state = {
			add_radicals_in_state = {
				strata = lower
				value = medium_radicals
			}
		}
		every_interest_group = {
			limit = {
				law_stance = {
					law = law_type:law_no_health_system
					value < neutral
				}
			}
			add_modifier = {
				name = disapproves_of_poverty_dismissed_modifier
				days = normal_modifier_time
			}
		}
	}

	option = { #send the police - she's a martyr now
		name = sol_events.1.c
		set_variable = {
			name = begging_woman_martyr_variable
			days = normal_modifier_time
		}
		scope:slums_state = {
			add_radicals_in_state = {
				strata = lower
				value = large_radicals
			}
		}
		ig:ig_armed_forces = {
			add_modifier = {
				name = repressed_sol_protester_modifier
				days = normal_modifier_time
			}
		}
		every_interest_group = {
			limit = {
				OR = {
					law_stance = {
						law = law_type:law_militarized_police
						value < neutral
					}
					law_stance = {
						law = law_type:law_dedicated_police
						value < neutral
					}
					law_stance = {
						law = law_type:law_local_police
						value < neutral
					}
				}
			}
			add_modifier = {
				name = disapproves_of_repression_modifier
				days = normal_modifier_time
			}
		}
	}
}

sol_events.2 = { #people are less poor
	type = country_event
	placement = scope:slums_state

	title = sol_events.2.t
	desc = sol_events.2.desc
	flavor = sol_events.2.f

	duration = 3

	event_image = {
		video = "europenorthamerica_london_center"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"

	trigger = {
		#triggered by journal entry
	}

	immediate = {
		random_scope_state = {
			limit = {
				is_capital = yes
			}
			save_scope_as = slums_state
		}
	}

	option = { #reward 1: loyalty
		name = sol_events.2.a
		default_option = yes
		capital = {
			add_modifier = {
				name = sol_increased_modifier
				days = normal_modifier_time
			}
		}
		if = {
			limit = {
				any_scope_state = {
					is_incorporated = yes
					owner = ROOT
					is_capital = no
				}
			}
			random_scope_state = {
				limit = {
					is_incorporated = yes
					owner = ROOT
					is_capital = no
				}
				set_variable = sol_state_1
				add_modifier = {
					name = sol_increased_modifier
					days = normal_modifier_time
				}
			}
		}
		if = {
			limit = {
				any_scope_state = {
					is_incorporated = yes
					owner = ROOT
					is_capital = no
					NOT = { has_variable = sol_state_1 }
				}
			}
			random_scope_state = {
				limit = {
					is_incorporated = yes
					owner = ROOT
					is_capital = no
					NOT = { has_variable = sol_state_1 }
				}
				add_modifier = {
					name = sol_increased_modifier
					days = normal_modifier_time
				}
			}
		}
	}

	option = { #reward 2: bureaucracy cost
		name = sol_events.2.b
		add_modifier = {
			name = sol_institution_modifier
			days = normal_modifier_time
		}
	}

	option = { #we're fine
		name = sol_events.2.c
		if = {
			limit = {
				any_interest_group = {
					leader = {
						OR = {
							has_ideology = ideology:ideology_radical
							has_ideology = ideology:ideology_reformer
							has_ideology = ideology:ideology_communist
							has_ideology = ideology:ideology_social_democrat
						}
					}
				}
			}
			every_interest_group = {
				limit = {
					leader = {
						OR = {
							has_ideology = ideology:ideology_radical
							has_ideology = ideology:ideology_reformer
							has_ideology = ideology:ideology_communist
							has_ideology = ideology:ideology_social_democrat
						}
					}
				}
				add_modifier = {
					name = sol_improved_modifier
					days = normal_modifier_time
				}
			}
		}
	}
}

sol_events.3 = { #church wants to help
	type = country_event
	placement = scope:slums_state

	title = sol_events.3.t
	desc = sol_events.3.d
	flavor = sol_events.3.f

	duration = 3

	event_image = {
		trigger = {
			religion = rel:jewish
		}
		video = "europenorthamerica_judaism"
	}
	event_image = {
		trigger = {
			OR = {
				religion = rel:protestant
				religion = rel:catholic
				religion = rel:orthodox
				religion = rel:oriental_orthodox
			}
		}
		video = "southamerica_christianity"
	}
	event_image = {
		trigger = {
			OR = {
				religion = rel:hindu
				religion = rel:sikh
			}
		}
		video = "asia_hinduism_sikhism"
	}
	event_image = {
		trigger = {
			OR = {
				religion = rel:shinto
				religion = rel:confucian
			}
		}
		video = "asia_confucianism_shinto"
	}
	event_image = {
		trigger = {
			OR = {
				religion = rel:mahayana
				religion = rel:gelugpa
				religion = rel:theravada
			}
		}
		video = "asia_buddhism"
	}
	event_image = {
		trigger = {
			OR = {
				religion = rel:sunni
				religion = rel:shiite
			}
		}
		video = "middleeast_islam"
	}
	event_image = {
		trigger = {
			NOR = {
				religion = rel:jewish
				religion = rel:protestant
				religion = rel:catholic
				religion = rel:orthodox
				religion = rel:oriental_orthodox
				religion = rel:mahayana
				religion = rel:gelugpa
				religion = rel:theravada
				religion = rel:shinto
				religion = rel:hindu
				religion = rel:sikh
				religion = rel:sunni
				religion = rel:shiite
			}
		}
		video = "africa_animism"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"

	trigger = {
		#triggered by journal entry
		NOT = { has_variable = church_sol_variable }
	}

	immediate = {
		random_scope_state = {
			limit = {
				is_capital = yes
			}
			save_scope_as = slums_state
		}
		set_variable = {
			name = church_sol_variable
			days = normal_modifier_time
		}
		ig:ig_devout = {
			save_scope_as = ig_devout
		}
	}

	option = { #yes
		name = sol_events.3.a
		default_option = yes
		ig:ig_devout = {
			add_modifier = {
				name = charitable_slums_modifier
				days = normal_modifier_time
			}
		}
		ig:ig_petty_bourgeoisie = {
			add_modifier = {
				name = bad_charitable_slums_modifier
				days = normal_modifier_time
			}
		}
		add_modifier = {
			name = charity_slums_modifier
			multiplier = money_amount_multiplier_small
			days = normal_modifier_time
		}
		scope:slums_state = {
			add_modifier = {
				name = charitable_slums_state_modifier
				days = normal_modifier_time
			}
		}
	}

	option = { #no
		name = sol_events.3.b
		ig:ig_devout = {
			add_modifier = {
				name = rejected_charitable_slums_modifier
				days = normal_modifier_time
			}
		}
		scope:slums_state = {
			add_modifier = {
				name = rejected_charitable_slums_state_modifier
				days = normal_modifier_time
			}
		}
	}
}

sol_events.4 = { #people sleeping on the stairs
	type = country_event
	placement = scope:slums_state

	title = sol_events.4.t
	desc = sol_events.4.d
	flavor = sol_events.4.f

	duration = 3

	event_image = {
		video = "unspecific_factory_closed"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"

	trigger = {
		#triggered by journal entry
		NOT = { has_variable = stairs_sol_variable }
	}

	immediate = {
		random_scope_state = {
			limit = {
				is_capital = yes
			}
			save_scope_as = slums_state
		}
		set_variable = {
			name = stairs_sol_variable
			days = normal_modifier_time
		}
	}

	option = { #build more houses
		name = sol_events.4.a
		default_option = yes
		ig:ig_industrialists = {
			add_modifier = {
				name = slums_housing_opposed_modifier
				days = normal_modifier_time
			}
		}
		ig:ig_petty_bourgeoisie = {
			add_modifier = {
				name = slums_housing_opposed_modifier
				days = normal_modifier_time
			}
		}
		scope:slums_state = {
			add_modifier = {
				name = slums_housing_modifier
				days = normal_modifier_time
			}
		}
	}

	option = { #no
		name = sol_events.4.b
		ig:ig_intelligentsia = {
			add_modifier = {
				name = slums_housing_rejected_modifier
				days = normal_modifier_time
			}
		}
		ig:ig_trade_unions = {
			add_modifier = {
				name = slums_housing_rejected_modifier
				days = normal_modifier_time
			}
		}
	}
}

sol_events.5 = { #article about slums
	type = country_event
	placement = scope:slums_state

	title = sol_events.5.t
	desc = sol_events.5.d
	flavor = sol_events.5.f

	duration = 3

	event_image = {
		video = "asia_union_leader"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"

	trigger = {
		#triggered by journal entry
		NOT = { has_variable = article_sol_variable }
		has_technology_researched = modern_sewerage
	}

	immediate = {
		random_scope_state = {
			limit = {
				is_capital = yes
			}
			save_scope_as = slums_state
		}
		set_variable = {
			name = article_sol_variable
			days = normal_modifier_time
		}
	}

	option = { #approve drainage levels
		name = sol_events.5.a
		default_option = yes
		every_interest_group = {
			limit = {
				law_stance = {
					law = law_type:law_no_health_system
					value < neutral
				}
			}
			add_modifier = {
				name = approves_of_drainage_modifier
				days = normal_modifier_time
			}
		}
		scope:slums_state = {
			add_modifier = {
				name = better_drainage_levels_modifier
				days = normal_modifier_time
			}
		}
		add_modifier = {
			name = drainage_levels_cost_modifier
			multiplier = money_amount_multiplier_small
			days = normal_modifier_time
		}
	}

	option = { #look the other way
		name = sol_events.5.b
		every_interest_group = {
			limit = {
				law_stance = {
					law = law_type:law_no_health_system
					value > neutral
				}
			}
			add_modifier = {
				name = approves_of_ignoring_drainage_modifier
				days = normal_modifier_time
			}
		}
		scope:slums_state = {
			add_modifier = {
				name = bad_drainage_levels_modifier
				days = short_modifier_time
			}
			add_radicals_in_state = {
				strata = lower
				value = medium_radicals
			}
		}
	}
}

sol_events.6 = { #bread riots
	type = country_event
	placement = scope:slums_state

	title = sol_events.6.t
	desc = sol_events.6.d
	flavor = sol_events.6.f

	duration = 3

	event_image = {
		video = "unspecific_vandalized_storefront"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	trigger = {
		#triggered by journal entry
		NOT = { has_variable = bread_riots_variable }
	}

	immediate = {
		random_scope_state = {
			limit = {
				is_capital = yes
			}
			save_scope_as = slums_state
		}
		set_variable = {
			name = bread_riots_variable
			days = normal_modifier_time
		}
	}

	option = { #give them food
		name = sol_events.6.a
		default_option = yes
		add_modifier = {
			name = starvation_palliative_modifier
			multiplier = money_amount_multiplier_small
			days = normal_modifier_time
		}
		scope:slums_state = {
			add_modifier = {
				name = bread_riots_modifier
				days = normal_modifier_time
			}
		}
	}

	option = { #no
		name = sol_events.6.b
		scope:slums_state = {
			add_radicals_in_state = {
				strata = lower
				value = medium_radicals
			}
		}
	}
}
