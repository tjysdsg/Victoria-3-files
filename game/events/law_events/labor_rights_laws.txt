namespace = labor_rights

# Mistreatment of Serfs
labor_rights.1 = {
	type = country_event
	placement = ROOT

	title = labor_rights.1.t
	desc = labor_rights.1.d
	flavor = labor_rights.1.f

	category = enactment

	event_image = {
		video = "europenorthamerica_russian_serfs"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_skull.dds"

	duration = 3

	cooldown = { days = normal_modifier_time }

	trigger = {
		has_law = law_type:law_serfdom
		OR = {
			is_enacting_law = law_type:law_tenant_farmers
			is_enacting_law = law_type:law_commercialized_agriculture
			is_enacting_law = law_type:law_homesteading
			is_enacting_law = law_type:law_collectivized_agriculture
		}
		any_scope_state = {
			any_scope_pop = {
				is_pop_type = peasants
			}
		}
		NOT = {
			has_modifier = serf_mistreaters_demonized_enactment
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				any_scope_pop = {
					is_pop_type = peasants
				}
			}
			save_scope_as = serf_state
		}
		ig:ig_landowners = {
			save_scope_as = serf_mistreaters
		}
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
	}

	cancellation_trigger = {
		NOT = { currently_enacting_law = scope:current_law_scope }
	}

	option = {
		name = labor_rights.1.a
		default_option = yes
		# law success chance
		add_enactment_modifier = {
			name = serf_mistreaters_demonized_enactment
			multiplier = 2
		}
	}

	option = {
		name = labor_rights.1.b
		# negative pop attraction
		scope:serf_mistreaters = {
			add_modifier = {
				name = serf_mistreaters_demonized
				days = short_modifier_time
			}
		}
		# law success chance
		add_enactment_modifier = {
			name = serf_mistreaters_demonized_enactment
		}
	}
}


# Serfdom Debated
labor_rights.2 = {
	type = country_event
	placement = ROOT

	title = labor_rights.2.t
	desc = labor_rights.2.d
	flavor = labor_rights.2.f

	category = enactment

	event_image = {
		video = "europenorthamerica_russian_serfs"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_portrait.dds"

	duration = 3

	cooldown = { days = normal_modifier_time }

	trigger = {
		has_law = law_type:law_serfdom
		OR = {
			is_enacting_law = law_type:law_tenant_farmers
			is_enacting_law = law_type:law_commercialized_agriculture
			is_enacting_law = law_type:law_homesteading
			is_enacting_law = law_type:law_collectivized_agriculture
		}
		any_interest_group = {
			is_marginal = no
			law_stance = {
				law = law_type:law_serfdom
				value < neutral
			}
		}
		NOT = {
			has_modifier = anti_serfdom_debate
		}
	}

	immediate = {
		random_interest_group = {
			limit = {
				is_marginal = no
				law_stance = {
					law = law_type:law_serfdom
					value < neutral
				}
			}
			save_scope_as = anti_serfdom_ig
			leader = {
				save_scope_as = anti_serfdom_advocate
			}
		}
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
	}

	cancellation_trigger = {
		NOT = { currently_enacting_law = scope:current_law_scope }
	}

	option = {
		name = labor_rights.2.a
		default_option = yes
		# law success chance
		add_enactment_modifier = {
			name = anti_serfdom_debate
			multiplier = 1
		}
	}

	option = {
		name = labor_rights.2.b
		# ig leader popularity
		scope:anti_serfdom_advocate = {
			add_modifier = {
				name = anti_serfdom_popularity
				days = normal_modifier_time
			}
		}
		# law success chance
		random_list = {
			1 = {
				add_enactment_modifier = {
					name = anti_serfdom_debate
					multiplier = 3
				}
			}
			2 = {
				add_enactment_modifier = {
					name = anti_serfdom_debate
					multiplier = -1
				}
			}
		}
	}
}

# Landowners demand compensation for lost serfs
labor_rights.3 = {
	type = country_event
	placement = ROOT

	title = labor_rights.3.t
	desc = labor_rights.3.d
	flavor = labor_rights.3.f

	category = enactment

	event_image = {
		video = "europenorthamerica_russian_serfs"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_scales.dds"

	duration = 3

	cooldown = { days = normal_modifier_time }

	trigger = {
		has_law = law_type:law_serfdom
		OR = {
			is_enacting_law = law_type:law_tenant_farmers
			is_enacting_law = law_type:law_commercialized_agriculture
			is_enacting_law = law_type:law_homesteading
			is_enacting_law = law_type:law_collectivized_agriculture
		}
		ig:ig_landowners = {
			is_marginal = no
		}
		NOT = { has_modifier = government_buying_serfs }
		NOT = { has_modifier = serfs_buying_serfs }
		NOT = { has_modifier = no_buying_serfs }
	}

	immediate = {
		ig:ig_landowners = {
			save_scope_as = serf_owners
		}
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
	}

	cancellation_trigger = {
		NOT = { currently_enacting_law = scope:current_law_scope }
	}

	option = { # pay them off
		name = labor_rights.3.a
		# small success chance but big bureaucracy hit
		add_enactment_modifier = {
			name = government_buying_serfs
		}
	}

	option = { # serfs should buy their emancipation
		name = labor_rights.3.b
		default_option = yes
		# small success chance but low SoL
		add_enactment_modifier = {
			name = serfs_buying_serfs
		}
	}
	option = { # no deal
		name = labor_rights.3.c
		# Significant delay
		trigger = {
			enactment_phase < 2
		}
		highlighted_option = yes
		add_enactment_phase = 1
		add_enactment_modifier = {
			name = no_buying_serfs
		}
		add_radicals = {
			value = large_radicals
			pop_type = aristocrats
		}
	}
}

# Direct action for workers protections
labor_rights.4 = {
	type = country_event
	placement = ROOT

	title = labor_rights.4.t
	desc = labor_rights.4.d
	flavor = labor_rights.4.f

	category = enactment

	event_image = {
		video = "asia_union_leader"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	duration = 3

	cooldown = { days = normal_modifier_time }

	trigger = {
		OR = {
			AND = {
				is_enacting_law = law_type:law_regulatory_bodies
				has_law = law_type:law_no_workers_rights
			}
			is_enacting_law = law_type:law_worker_protections
		}
		ig:ig_trade_unions = {
			is_marginal = no
		}
		NOT = { has_modifier = enactment_strikes_modifier }
		NOT = { has_modifier = enactment_strikes_deterred_modifier }
	}

	immediate = {
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		ig:ig_trade_unions = {
			save_scope_as = unions_scope
		}
	}

	cancellation_trigger = {
		NOT = { currently_enacting_law = scope:current_law_scope }
	}

	option = {
		name = labor_rights.4.a
		default_option = yes
		# big success chance but industries crippled
		add_enactment_modifier = {
			name = enactment_strikes_modifier
		}
	}

	option = {
		name = labor_rights.4.b
		# moderate success chance but slowdown law
		add_enactment_modifier = {
			name = enactment_strikes_deterred_modifier
		}
	}
}

# Unions negotiate with industrialists
labor_rights.5 = {
	type = country_event
	placement = ROOT

	title = labor_rights.5.t
	desc = labor_rights.5.d
	flavor = labor_rights.5.f

	category = enactment

	event_image = {
		video = "asia_union_leader"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	duration = 3

	cooldown = { days = normal_modifier_time }

	trigger = {
		OR = {
			AND = {
				is_enacting_law = law_type:law_regulatory_bodies
				has_law = law_type:law_no_workers_rights
			}
			is_enacting_law = law_type:law_worker_protections
		}
		ig:ig_trade_unions = {
			is_marginal = no
		}
		ig:ig_industrialists = {
			is_marginal = no
		}
		NOT = { has_modifier = worker_protection_negotiations }
	}

	immediate = {
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		ig:ig_trade_unions = {
			save_scope_as = unions_scope
		}
		ig:ig_industrialists = {
			save_scope_as = capitalists_scope
		}
	}

	cancellation_trigger = {
		NOT = { currently_enacting_law = scope:current_law_scope }
	}

	option = { # support the unions
		name = labor_rights.5.a
		default_option = yes
		# increase enactment speed and gain some loyalists but lose success chance
		add_enactment_modifier = {
			name = worker_protection_negotiations
		}
		add_loyalists = {
			strata = lower
			value = 0.05
		}
	}

	option = { # make concessions to the industrialists
		name = labor_rights.5.b
		# slow down enactment speed and create some radicals, but add success chance
		add_enactment_modifier = {
			name = worker_protection_negotiations
			multiplier = -1
		}
		add_loyalists = {
			strata = upper
			value = 0.1
		}
	}
}


# Strikbreakers discourage worker movement
labor_rights.6 = {
	type = country_event
	placement = ROOT

	title = labor_rights.6.t
	desc = labor_rights.6.d
	flavor = labor_rights.6.f

	category = enactment

	event_image = {
		video = "middleeast_police_breaking_door"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	duration = 3

	cooldown = { days = normal_modifier_time }

	trigger = {
		OR = {
			AND = {
				is_enacting_law = law_type:law_regulatory_bodies
				has_law = law_type:law_no_workers_rights
			}
			is_enacting_law = law_type:law_worker_protections
		}
		ig:ig_trade_unions = {
			is_marginal = no
		}
		ig:ig_industrialists = {
			is_marginal = no
		}
		NOT = { has_modifier = strikbreakers_enactment }
	}

	immediate = {
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		ig:ig_trade_unions = {
			save_scope_as = unions_scope
		}
		ig:ig_industrialists = {
			save_scope_as = capitalists_scope
		}
	}

	cancellation_trigger = {
		NOT = { currently_enacting_law = scope:current_law_scope }
	}

	option = { # call off the strikebreakers
		name = labor_rights.6.a
		default_option = yes
		scope:capitalists_scope = {
			add_modifier = {
				name = strikebreakers_called_off
				days = short_modifier_time
				multiplier = -1
			}
		}
		scope:unions_scope = {
			add_modifier = {
				name = strikebreakers_called_off
				days = short_modifier_time
			}
		}
		# decrease enactment time
		add_enactment_modifier = {
			name = strikbreakers_enactment
		}
	}

	option = { # don't
		name = labor_rights.6.b
		scope:capitalists_scope = {
			add_modifier = {
				name = strikebreakers_allowed
				days = short_modifier_time
			}
		}
		scope:unions_scope = {
			add_modifier = {
				name = strikebreakers_allowed
				days = short_modifier_time
				multiplier = -1
			}
		}
		# increase enactment time
		add_enactment_modifier = {
			name = strikbreakers_enactment
			multiplier = -1
		}
	}
}
