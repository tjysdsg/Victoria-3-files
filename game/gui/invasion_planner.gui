default_popup = {
	name = "invasion_planner_popup"

	blockoverride "header_close_button" {
		onclick = "[PopupManager.HideInvasionPlannerPopup]"
	}

	blockoverride "header_close_button_visibility" {}

	blockoverride "window_header_name" {
		text = "INVASION_PLANNER_HEADER"
	}

	blockoverride "scrollarea_content"
	{
		flowcontainer = {
			direction = vertical
			resizeparent = yes
			margin_top = 10

			flowcontainer = {
				parentanchor = hcenter

				### LEFT SIDE
				flowcontainer = {
					visible = "[InvasionPlannerPopup.CanNavalInvade]"
					direction = vertical
					spacing = 10

					default_header_clean_faded = {
						size = { 380 44 }
						blockoverride "text" {
							text = "SELECT_FLEET"
						}
					}

					# SELECTED FLEET(S)
					dynamicgridbox = {
						visible = "[Not(IsDataModelEmpty(InvasionPlannerPopup.GetSelectedFleets))]"
						parentanchor = hcenter
						datamodel = "[InvasionPlannerPopup.GetSelectedFleets]"

						item = {
							widget = {
								using = standard_formation_item_size

								military_formation_right_click_item = {

									blockoverride "onclick" {
										onclick = "[RightClickMenuManager.ShowForSelectFleet]"
									}

									blockoverride "tooltip" {
							        	tooltipwidget = {
			                        		FancyTooltip_MilitaryFormation = {
			                        			blockoverride "text_before" {
			                        				visible = "[Not(StringIsEmpty(InvasionPlannerPopup.GetCanMilitaryFormationBeSelectedTooltip(MilitaryFormation.Self)))]"
			                        				text =  "[InvasionPlannerPopup.GetCanMilitaryFormationBeSelectedTooltip(MilitaryFormation.Self)]"
			                        				margin_bottom = 15
			                        			}
			                        		}
			                        	}
									}
								}
							}
						}
					}

                    # SELECT FLEET (+) BUTTON
					button = {
						visible = "[IsDataModelEmpty(InvasionPlannerPopup.GetSelectedFleets)]"
						tooltip = "ADD_MILITARY_FORMATION_FLEET"
						using = default_button
						parentanchor = hcenter
						size = { 320 80 }
						using = fontsize_large
						onclick = "[RightClickMenuManager.ShowForSelectFleet]"
						using = default_content_fade

						icon = {
							size = { 40 40 }
							texture = "gfx/interface/buttons/button_icons/plus.dds"
							parentanchor = center
						}
					}

					dynamicgridbox = {
						parentanchor = hcenter
						flipdirection = yes
						datamodel_wrap = 4

						datamodel = "[InvasionPlannerPopup.GetSelectedAdmirals]"

						item = {
							widget = {
								size = { 90 90 }

								military_formation_commander = {
									parentanchor = center
									size = { 80 80 }

									blockoverride "portrait" {
										character_portrait_medium = {
											parentanchor = center
											using = tooltip_above

											blockoverride "highlight" {}
										}
									}

									blockoverride "widget_size" {
										size = { 30 30 }
									}

									blockoverride "warning_icon_properties" {
									    visible = "[Not(InvasionPlannerPopup.HasInterceptingAdmiral)]"
										tooltip = "NAVAL_INVASION_NO_ADMIRAL_INTERCEPTION_CHANCE_WARNING"
									}
								}
							}
						}
					}
				}

				vertical_divider = {
					visible = "[InvasionPlannerPopup.CanNavalInvade]"
				}

				### RIGHT SIDE
				flowcontainer = {
					direction = vertical
					spacing = 10

					default_header_clean_faded = {
						size = { 380 44 }
						blockoverride "text" {
							text = "SELECT_ARMY"
						}
					}

					# SELECTED ARMIES
					dynamicgridbox = {
						parentanchor = hcenter
						datamodel = "[InvasionPlannerPopup.GetSelectedArmies]"
						allow_outside = yes

						item = {
							widget = {
								allow_outside = yes
								using = standard_formation_item_size

								military_formation_right_click_item = {
									enabled = "[Not(InvasionPlannerPopup.CanLandInvade)]"
									
									blockoverride "onclick" {
										onclick = "[RightClickMenuManager.ShowForSelectArmy]"
									}

									blockoverride "tooltip" {
							        	tooltipwidget = {
			                        		FancyTooltip_MilitaryFormation = {
			                        			blockoverride "text_before" {
			                        				visible = "[Not(StringIsEmpty(InvasionPlannerPopup.GetCanMilitaryFormationBeSelectedTooltip(MilitaryFormation.Self)))]"
			                        				text =  "[InvasionPlannerPopup.GetCanMilitaryFormationBeSelectedTooltip(MilitaryFormation.Self)]"
			                        				margin_bottom = 15
			                        			}
			                        		}
			                        	}
									}

									blockoverride "status_visibility" {
										visible = "[MilitaryFormation.IsMobilized]"
									}

									blockoverride "mobilization_info_visibliity" {
										visible = "[Not(MilitaryFormation.IsMobilized)]"
									}
								}
								
								button_icon_round_action = {
									visible = "[InvasionPlannerPopup.CanLandInvade]"
									size = { 25 25 }
									position = { -10 -10 }
									tooltip = "REMOVE_FORMATION"
									using = tooltip_above
									allow_outside = yes

									onclick = "[InvasionPlannerPopup.RemoveFormation(MilitaryFormation.Self)]"
									blockoverride "icon" {
										texture = "gfx/interface/buttons/button_icons/close.dds"
									}

									blockoverride "icon_size" {
										size = { 100% 100% }
									}
								}
							}
						}
					}

					# SELECT ARMY (+) BUTTON
					button = {
						visible = "[Or(IsDataModelEmpty(InvasionPlannerPopup.GetSelectedArmies), InvasionPlannerPopup.CanLandInvade)]"
						tooltip = "ADD_MILITARY_FORMATION_ARMY"
						using = default_button
						parentanchor = hcenter
						size = { 320 80 }
						using = fontsize_large
						onclick = "[RightClickMenuManager.ShowForSelectArmy]"
						using = default_content_fade

						icon = {
							size = { 40 40 }
							texture = "gfx/interface/buttons/button_icons/plus.dds"
							parentanchor = center
						}
					}

					dynamicgridbox = {
						parentanchor = hcenter
						flipdirection = yes
						datamodel_wrap = 4

						datamodel = "[InvasionPlannerPopup.GetSelectedGenerals]"

						item = {
							widget = {
								size = { 90 90 }

								military_formation_commander = {
									parentanchor = center
									size = { 80 80 }

									blockoverride "portrait" {
										character_portrait_medium = {
											parentanchor = center
											using = tooltip_above

											blockoverride "highlight" {}
										}
									}

									blockoverride "widget_size" {
										size = { 30 30 }
									}

									blockoverride "warning_icon_properties" {
                						visible = "[Not(InvasionPlannerPopup.HasAdvancingGeneral)]"
										tooltip = "NAVAL_INVASION_NO_GENERAL_ADVANCING_WARNING"
									}
								}
							}
						}
					}
				}
			}

			widget = {
				size = { 20 20 }
			}

			divider_decorative = {}
		}
	}

	blockoverride "fixed_bottom" {
		flowcontainer = {
			using = default_list_position
			direction = vertical
			margin_top = 20
			parentanchor = hcenter

			flowcontainer = {
				minimumsize = { 680 -1}
				direction = vertical
				parentanchor = hcenter
				spacing = 20
				margin = { 20 20 }

				background = {
					using = entry_bg_simple
				}

				textbox = {
					visible = "[InvasionPlannerPopup.CanNavalInvade]"
					autoresize = yes
					align = nobaseline
					multiline = yes
					max_width = 600
					text = "INVASION_PLANNER_EFFICIENCY_LABEL"
				}

				textbox = {
					visible = "[InvasionPlannerPopup.CanLandInvade]"
					autoresize = yes
					align = nobaseline
					multiline = yes
					max_width = 600
					text = "INVASION_PLANNER_INVASION_FROM_STATE"
				}

				flowcontainer = {
					visible = "[Not(IsDataModelEmpty(InvasionPlannerPopup.GetSelectedArmies))]"
					direction = vertical
					datamodel = "[InvasionPlannerPopup.GetSelectedArmies]"

					item = {
						flowcontainer = {
							icon = {
								parentanchor = vcenter
								size = { 30 30 }
								texture = "[MilitaryFormation.GetFlag]"
								color = "[MilitaryFormation.GetFlagColor]"
							}

							textbox = {
								visible = "[Not(MilitaryFormation.IsMobilized)]"
								parentanchor = vcenter
								autoresize = yes
								align = nobaseline
								multiline = yes
								max_width = 550
								text = "INVASION_PLANNER_ARMY_WILL_MOBILIZE"
							}

							textbox = {
								visible = "[MilitaryFormation.IsMobilized]"
								parentanchor = vcenter
								autoresize = yes
								align = nobaseline
								multiline = yes
								max_width = 550
								text = "INVASION_PLANNER_ARMY_IS_MOBILIZED"
							}
						}
					}
				}

				textbox = {
					visible = "[And(And(InvasionPlannerPopup.HasNavalInvasionContext, InvasionPlannerPopup.HasSelectedNecessaryFormations), LessThan_CFixedPoint(InvasionPlannerPopup.GetEfficiencyRaw,'(CFixedPoint)1'))]"
					autoresize = yes
					align = nobaseline
					multiline = yes
					max_width = 600
					text = "INVASION_PLANNER_PENALTIES_LABEL"
				}
			}

			flowcontainer = {
				direction = vertical
				margin = { 20 20 }
				parentanchor = hcenter
				spacing = 10

				textbox = {
					visible = "[InvasionPlannerPopup.HasSelectedNecessaryFormations]"
					parentanchor = hcenter
					autoresize = yes
					align = nobaseline
					text = "[InvasionPlannerPopup.GetTravelTimeDesc]"
				}

				button = {
					parentanchor = hcenter
					using = default_button_primary_action
					using = ui_pointer_over
					size = { 170 42 }

					clicksound = "[SelectSound(InvasionPlannerPopup.HasNavalInvasionContext, 'event:/SFX/UI/Military/formation_actions_naval_invasion', 'event:/SFX/UI/Military/formation_actions_land_invasion')]"

					onclick = "[Execute(InvasionPlannerPopup.StartInvasion)]"
					onclick = "[PopupManager.HideInvasionPlannerPopup]"
					enabled = "[IsValid(InvasionPlannerPopup.StartInvasion)]"
					tooltip = "INVASION_PLANNER_CONFIRM_TOOLTIP"
					input_action = "confirm"
					text = "CONFIRM"
				}
			}
		}
	}
}