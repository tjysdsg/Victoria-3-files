types outliner_tabs {
	type outliner_tab_button = container {
		# button if selected
		button = {
			size = { 59 30 }
			texture = "gfx/interface/tabs/tab_button_outliner_selected.dds"
			using = tooltip_above

			block "outliner_tab_button_state_for_when_selected" {
				visible = yes # override me
			}

			block "onclick" {
				onclick = "[GetVariableSystem.Clear('outliner_tab')]"
			}

			icon = {
				parentanchor = center
				size = { 22 22 }
				block "outliner_tab_button_icon" {
					texture = "gfx/interface/outliner/outliner_all.dds"
				}
			}
		}

		# button if not selected
		button = {
			size = { 59 30 }
			texture = "gfx/interface/tabs/tab_button_outliner_not_selected.dds"
			using = tooltip_above

			block "outliner_tab_button_state_for_when_not_selected" {
				visible = yes # override me
			}

			block "onclick" {
				onclick = "[GetVariableSystem.Clear('outliner_tab')]"
			}

			icon = {
				parentanchor = center
				size = { 22 22 }
				alpha = 0.3
				block "outliner_tab_button_icon" {
					texture = "gfx/interface/outliner/outliner_all.dds"
				}
			}
		}
	}
}

types outliner_types {
	type outliner = outliner_type {
		blockoverride "items" {

			# The framework for the Outliner and the items reusable parts within it are defined in outliner_framework.gui
			# Implementation of the items not defined here are defined in either outliner_pinnable_types.gui or outliner_ongoing_types.gui

			### Ongoing
			flowcontainer = {
				direction = vertical
				margin = { 5 5 }
				margin_bottom = 0
				spacing = 3
				parentanchor = right
				
				outliner_journal_entries = {
					margin = { 5 0 }
					
					background = {
						using = paper_bg
						alpha = 0.85
						margin = { 0 5 }
					}
				}
				
				outliner_events = {}
				outliner_players = {}
				outliner_diplomatic_plays = {}
				outliner_diplomatic_pacts = {}
				outliner_law_enactment = {}
				outliner_revolutionary_political_movement_item = {}
				outliner_election = {}
			}
			
			flowcontainer = {
				direction = vertical
				margin = { 5 5 }
				
				background = {
					using = default_background
					alpha = 1
					margin_right = 15
					
					modify_texture = {
						texture = "gfx/interface/masks/fade_horizontal_left.dds"
						spriteType = Corneredstretched
						spriteborder = { 0 0 }
						blend_mode = alphamultiply
						alpha = 0.5
					}
				}

				### OUTLINER TABS
				flowcontainer = {
					margin_top = 2

					# PINNNED
					outliner_tab_button = {

						blockoverride "outliner_tab_button_state_for_when_selected" {
							visible = "[Not(GetVariableSystem.Exists('outliner_tab'))]"
						}

						blockoverride "outliner_tab_button_state_for_when_not_selected" {
							visible = "[GetVariableSystem.Exists('outliner_tab')]"
						}

						blockoverride "outliner_tab_button_icon" {
							texture = "gfx/interface/outliner/outliner_pinned.dds"
						}

						blockoverride "onclick" {
							onclick = "[GetVariableSystem.Clear('outliner_tab')]"
							input_action = "outliner_toggle_pinned"
							tooltip = "OUTLINER_TOGGLE_PINNED_TOOLTIP"
						}
					}

					# ECONOMY
					outliner_tab_button = {

						blockoverride "outliner_tab_button_state_for_when_selected" {
							visible = "[GetVariableSystem.HasValue('outliner_tab', 'economy')]"
						}

						blockoverride "outliner_tab_button_state_for_when_not_selected" {
							visible = "[Not(GetVariableSystem.HasValue('outliner_tab', 'economy'))]"
						}

						blockoverride "outliner_tab_button_icon" {
							texture = "gfx/interface/outliner/outliner_economy.dds"
						}

						blockoverride "onclick" {
							onclick = "[GetVariableSystem.Set('outliner_tab', 'economy')]"
							input_action = "outliner_toggle_economy"
							tooltip = "OUTLINER_TOGGLE_ECONOMY_TOOLTIP"
						}
					}

					# POLITICS
					outliner_tab_button = {

						blockoverride "outliner_tab_button_state_for_when_selected" {
							visible = "[GetVariableSystem.HasValue('outliner_tab', 'politics')]"
						}

						blockoverride "outliner_tab_button_state_for_when_not_selected" {
							visible = "[Not(GetVariableSystem.HasValue('outliner_tab', 'politics'))]"
						}

						blockoverride "outliner_tab_button_icon" {
							texture = "gfx/interface/outliner/outliner_politics.dds"
						}

						blockoverride "onclick" {
							onclick = "[GetVariableSystem.Set('outliner_tab', 'politics')]"
							input_action = "outliner_toggle_politics"
							tooltip = "OUTLINER_TOGGLE_POLITICS_TOOLTIP"
						}
					}

					# DIPLOMACY
					outliner_tab_button = {

						blockoverride "outliner_tab_button_state_for_when_selected" {
							visible = "[GetVariableSystem.HasValue('outliner_tab', 'diplomacy')]"
						}

						blockoverride "outliner_tab_button_state_for_when_not_selected" {
							visible = "[Not(GetVariableSystem.HasValue('outliner_tab', 'diplomacy'))]"
						}

						blockoverride "outliner_tab_button_icon" {
							texture = "gfx/interface/outliner/outliner_diplomacy.dds"
						}

						blockoverride "onclick" {
							onclick = "[GetVariableSystem.Set('outliner_tab', 'diplomacy')]"
							input_action = "outliner_toggle_diplomacy"
							tooltip = "OUTLINER_TOGGLE_DIPLOMACY_TOOLTIP"
						}
					}

					# MILITARY
					outliner_tab_button = {

						blockoverride "outliner_tab_button_state_for_when_selected" {
							visible = "[GetVariableSystem.HasValue('outliner_tab', 'military')]"
						}

						blockoverride "outliner_tab_button_state_for_when_not_selected" {
							visible = "[Not(GetVariableSystem.HasValue('outliner_tab', 'military'))]"
						}

						blockoverride "outliner_tab_button_icon" {
							texture = "gfx/interface/outliner/outliner_military.dds"
						}

						blockoverride "onclick" {
							onclick = "[GetVariableSystem.Set('outliner_tab', 'military')]"
							input_action = "outliner_toggle_military"
							tooltip = "OUTLINER_TOGGLE_MILITARY_TOOLTIP"
						}
					}

					# ALL
					outliner_tab_button = {

						blockoverride "outliner_tab_button_state_for_when_selected" {
							visible = "[GetVariableSystem.HasValue('outliner_tab', 'all')]"
						}

						blockoverride "outliner_tab_button_state_for_when_not_selected" {
							visible = "[Not(GetVariableSystem.HasValue('outliner_tab', 'all'))]"
						}

						blockoverride "outliner_tab_button_icon" {
							texture = "gfx/interface/outliner/outliner_all.dds"
						}

						blockoverride "onclick" {
							onclick = "[GetVariableSystem.Set('outliner_tab', 'all')]"
							input_action = "outliner_toggle_all"
							tooltip = "OUTLINER_TOGGLE_ALL_TOOLTIP"
						}
					}
				}

				### PINNED
				flowcontainer = {
					visible = "[Not(GetVariableSystem.Exists('outliner_tab'))]"
					direction = vertical
					parentanchor = hcenter 

					blockoverride "outliner_datamodel" {
						datamodel = "[OutlinerEntry.GetPinnedSubEntries]"
					}
					
					outliner_countries = {
						blockoverride "visibility" {
							visible = "[OutlinerEntry.IsShownPinned]"
						}

						blockoverride "title_click" {
							onclick = "[OutlinerEntry.TogglePinnedExpanded]"
						}

						blockoverride "list_visibility" {
							visible = "[OutlinerEntry.IsPinnedExpanded]"
						}

						blockoverride "pinnable_expand_buttons" {
							pinned_expand_buttons = {}
						}
					}

					outliner_countries = {
						datacontext = "[Outliner.AccessCategory('unrecognized_countries')]"

						blockoverride "visibility" {
							visible = "[OutlinerEntry.IsShownPinned]"
						}

						blockoverride "title_click" {
							onclick = "[OutlinerEntry.TogglePinnedExpanded]"
						}

						blockoverride "list_visibility" {
							visible = "[OutlinerEntry.IsPinnedExpanded]"
						}

						blockoverride "pinnable_expand_buttons" {
							pinned_expand_buttons = {}
						}
					}

					outliner_markets = {
						blockoverride "visibility" {
							visible = "[OutlinerEntry.IsShownPinned]"
						}

						blockoverride "title_click" {
							onclick = "[OutlinerEntry.TogglePinnedExpanded]"
						}

						blockoverride "list_visibility" {
							visible = "[OutlinerEntry.IsPinnedExpanded]"
						}

						blockoverride "pinnable_expand_buttons" {
							pinned_expand_buttons = {}
						}
					}

					outliner_goods = {
						blockoverride "visibility" {
							visible = "[OutlinerEntry.IsShownPinned]"
						}

						blockoverride "title_click" {
							onclick = "[OutlinerEntry.TogglePinnedExpanded]"
						}

						blockoverride "list_visibility" {
							visible = "[OutlinerEntry.IsPinnedExpanded]"
						}

						blockoverride "pinnable_expand_buttons" {
							pinned_expand_buttons = {}
						}
					}
					
					outliner_interest_groups = {
						blockoverride "visibility" {
							visible = "[OutlinerEntry.IsShownPinned]"
						}

						blockoverride "title_click" {
							onclick = "[OutlinerEntry.TogglePinnedExpanded]"
						}

						blockoverride "list_visibility" {
							visible = "[OutlinerEntry.IsPinnedExpanded]"
						}

						blockoverride "pinnable_expand_buttons" {
							pinned_expand_buttons = {}
						}
					}

					outliner_interest_groups = {
						datacontext = "[Outliner.AccessCategory('marginalized_interest_groups')]"

						blockoverride "visibility" {
							visible = "[OutlinerEntry.IsShownPinned]"
						}

						blockoverride "title_click" {
							onclick = "[OutlinerEntry.TogglePinnedExpanded]"
						}

						blockoverride "list_visibility" {
							visible = "[OutlinerEntry.IsPinnedExpanded]"
						}

						blockoverride "pinnable_expand_buttons" {
							pinned_expand_buttons = {}
						}
					}

					outliner_non_revolutionary_political_movements = {
						blockoverride "visibility" {
							visible = "[OutlinerEntry.IsShownPinned]"
						}

						blockoverride "title_click" {
							onclick = "[OutlinerEntry.TogglePinnedExpanded]"
						}

						blockoverride "list_visibility" {
							visible = "[OutlinerEntry.IsPinnedExpanded]"
						}

						blockoverride "pinnable_expand_buttons" {
							pinned_expand_buttons = {}
						}
					}

					outliner_political_lobbies = {
						blockoverride "visibility" {
							visible = "[OutlinerEntry.IsShownPinned]"
						}

						blockoverride "title_click" {
							onclick = "[OutlinerEntry.TogglePinnedExpanded]"
						}

						blockoverride "list_visibility" {
							visible = "[OutlinerEntry.IsPinnedExpanded]"
						}

						blockoverride "pinnable_expand_buttons" {
							pinned_expand_buttons = {}
						}
					}

					outliner_treaties = {
						blockoverride "visibility" {
							visible = "[OutlinerEntry.IsShownPinned]"
						}

						blockoverride "title_click" {
							onclick = "[OutlinerEntry.TogglePinnedExpanded]"
						}

						blockoverride "list_visibility" {
							visible = "[OutlinerEntry.IsPinnedExpanded]"
						}

						blockoverride "pinnable_expand_buttons" {
							pinned_expand_buttons = {}
						}
					}

					outliner_formations = {
						datacontext = "[Outliner.AccessCategory('army')]"

						blockoverride "visibility" {
							visible = "[OutlinerEntry.IsShownPinned]"
						}

						blockoverride "title_click" {
							onclick = "[OutlinerEntry.TogglePinnedExpanded]"
						}

						blockoverride "list_visibility" {
							visible = "[OutlinerEntry.IsPinnedExpanded]"
						}

						blockoverride "pinnable_expand_buttons" {
							pinned_expand_buttons = {}
						}
					}

					outliner_formations = {
						datacontext = "[Outliner.AccessCategory('navy')]"

						blockoverride "visibility" {
							visible = "[OutlinerEntry.IsShownPinned]"
						}

						blockoverride "title_click" {
							onclick = "[OutlinerEntry.TogglePinnedExpanded]"
						}

						blockoverride "list_visibility" {
							visible = "[OutlinerEntry.IsPinnedExpanded]"
						}

						blockoverride "pinnable_expand_buttons" {
							pinned_expand_buttons = {}
						}
					}

					outliner_commanders = {
						datacontext = "[Outliner.AccessCategory('generals')]"

						blockoverride "visibility" {
							visible = "[OutlinerEntry.IsShownPinned]"
						}

						blockoverride "title_click" {
							onclick = "[OutlinerEntry.TogglePinnedExpanded]"
						}

						blockoverride "list_visibility" {
							visible = "[OutlinerEntry.IsPinnedExpanded]"
						}

						blockoverride "pinnable_expand_buttons" {
							pinned_expand_buttons = {}
						}
					}

					outliner_commanders = {
						datacontext = "[Outliner.AccessCategory('admirals')]"

						blockoverride "visibility" {
							visible = "[OutlinerEntry.IsShownPinned]"
						}

						blockoverride "title_click" {
							onclick = "[OutlinerEntry.TogglePinnedExpanded]"
						}

						blockoverride "list_visibility" {
							visible = "[OutlinerEntry.IsPinnedExpanded]"
						}

						blockoverride "pinnable_expand_buttons" {
							pinned_expand_buttons = {}
						}
					}

					outliner_agitators = {
						blockoverride "visibility" {
							visible = "[OutlinerEntry.IsShownPinned]"
						}

						blockoverride "title_click" {
							onclick = "[OutlinerEntry.TogglePinnedExpanded]"
						}

						blockoverride "list_visibility" {
							visible = "[OutlinerEntry.IsPinnedExpanded]"
						}

						blockoverride "pinnable_expand_buttons" {
							pinned_expand_buttons = {}
						}
					}

					outliner_politicians = {
						blockoverride "visibility" {
							visible = "[OutlinerEntry.IsShownPinned]"
						}

						blockoverride "title_click" {
							onclick = "[OutlinerEntry.TogglePinnedExpanded]"
						}

						blockoverride "list_visibility" {
							visible = "[OutlinerEntry.IsPinnedExpanded]"
						}

						blockoverride "pinnable_expand_buttons" {
							pinned_expand_buttons = {}
						}
					}

					outliner_companies = {
						blockoverride "visibility" {
							visible = "[OutlinerEntry.IsShownPinned]"
						}

						blockoverride "title_click" {
							onclick = "[OutlinerEntry.TogglePinnedExpanded]"
						}

						blockoverride "list_visibility" {
							visible = "[OutlinerEntry.IsPinnedExpanded]"
						}

						blockoverride "pinnable_expand_buttons" {
							pinned_expand_buttons = {}
						}
					}

					outliner_colonies = {
						blockoverride "visibility" {
							visible = "[OutlinerEntry.IsShownPinned]"
						}

						blockoverride "title_click" {
							onclick = "[OutlinerEntry.TogglePinnedExpanded]"
						}

						blockoverride "list_visibility" {
							visible = "[OutlinerEntry.IsPinnedExpanded]"
						}

						blockoverride "pinnable_expand_buttons" {
							pinned_expand_buttons = {}
						}
					}

					outliner_states = {
						blockoverride "visibility" {
							visible = "[OutlinerEntry.IsShownPinned]"
						}

						blockoverride "title_click" {
							onclick = "[OutlinerEntry.TogglePinnedExpanded]"
						}

						blockoverride "list_visibility" {
							visible = "[OutlinerEntry.IsPinnedExpanded]"
						}

						blockoverride "pinnable_expand_buttons" {
							pinned_expand_buttons = {}
						}
					}

					outliner_states = {
						datacontext = "[Outliner.AccessCategory('unincorporated_states')]"

						blockoverride "visibility" {
							visible = "[OutlinerEntry.IsShownPinned]"
						}

						blockoverride "title_click" {
							onclick = "[OutlinerEntry.TogglePinnedExpanded]"
						}

						blockoverride "list_visibility" {
							visible = "[OutlinerEntry.IsPinnedExpanded]"
						}

						blockoverride "pinnable_expand_buttons" {
							pinned_expand_buttons = {}
						}
					}

					outliner_buildings = {
						blockoverride "visibility" {
							visible = "[OutlinerEntry.IsShownPinned]"
						}

						blockoverride "title_click" {
							onclick = "[OutlinerEntry.TogglePinnedExpanded]"
						}

						blockoverride "list_visibility" {
							visible = "[OutlinerEntry.IsPinnedExpanded]"
						}

						blockoverride "pinnable_expand_buttons" {
							pinned_expand_buttons = {}
						}
					}
				}

				### ECONOMY
				flowcontainer = {
					direction = vertical
					parentanchor = hcenter
					visible = "[GetVariableSystem.HasValue('outliner_tab', 'economy')]"

					outliner_markets = {}
					outliner_goods = {}
					outliner_companies = {}
					outliner_colonies = {}
					outliner_states = {}
					outliner_states = {
						datacontext = "[Outliner.AccessCategory('unincorporated_states')]"
					}
					outliner_buildings = {}
				}

				### POLITICS
				flowcontainer = {
					direction = vertical
					parentanchor = hcenter
					visible = "[GetVariableSystem.HasValue('outliner_tab', 'politics')]"
					
					outliner_interest_groups = {}
					outliner_interest_groups = {
						datacontext = "[Outliner.AccessCategory('marginalized_interest_groups')]"
					}
					outliner_non_revolutionary_political_movements = {}
					outliner_political_lobbies = {}
					outliner_agitators = {}
					outliner_politicians = {}
				}


				### DIPLOMACY
				flowcontainer = {
					direction = vertical
					parentanchor = hcenter
					visible = "[GetVariableSystem.HasValue('outliner_tab', 'diplomacy')]"
					
					outliner_treaties = {}
					outliner_countries = {}
					outliner_countries = {
						datacontext = "[Outliner.AccessCategory('unrecognized_countries')]"
					}
					outliner_colonies = {}
					outliner_states = {}
					outliner_states = {
						datacontext = "[Outliner.AccessCategory('unincorporated_states')]"
					}
				}


				### MILITARY
				flowcontainer = {
					direction = vertical
					parentanchor = hcenter
					visible = "[GetVariableSystem.HasValue('outliner_tab', 'military')]"
					

					### Regular
					outliner_formations = {
						datacontext = "[Outliner.AccessCategory('army')]"
					}

					outliner_formations = {
						datacontext = "[Outliner.AccessCategory('navy')]"
					}

					outliner_commanders = {
						datacontext = "[Outliner.AccessCategory('generals')]"
					}
					outliner_commanders = {
						datacontext = "[Outliner.AccessCategory('admirals')]"
					}
				}

				### ALL
				flowcontainer = {
					direction = vertical
					parentanchor = hcenter
					visible = "[GetVariableSystem.HasValue('outliner_tab', 'all')]"
					
					### Regular
					outliner_countries = {}
					outliner_countries = {
						datacontext = "[Outliner.AccessCategory('unrecognized_countries')]"
					}

					outliner_markets = {}
					outliner_goods = {}

					outliner_interest_groups = {}
					outliner_interest_groups = {
						datacontext = "[Outliner.AccessCategory('marginalized_interest_groups')]"
					}

					outliner_non_revolutionary_political_movements = {}
					outliner_political_lobbies = {}

					outliner_formations = {
						datacontext = "[Outliner.AccessCategory('army')]"
					}

					outliner_formations = {
						datacontext = "[Outliner.AccessCategory('navy')]"
					}

					outliner_commanders = {
						datacontext = "[Outliner.AccessCategory('generals')]"
					}

					outliner_commanders = {
						datacontext = "[Outliner.AccessCategory('admirals')]"
					}

					outliner_agitators = {}
					outliner_politicians = {}
					outliner_companies = {}
					outliner_colonies = {}
					outliner_states = {}
					outliner_states = {
						datacontext = "[Outliner.AccessCategory('unincorporated_states')]"
					}
					outliner_buildings = {}
				}
			}
		}
	}
}
