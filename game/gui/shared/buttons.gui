# COPY-PASTED FOR NOW
@panel_width_minus_10 = 530			# used to be 450
@panel_width = 540  				# used to be 460
@panel_width_half = 270				# used to be 230
@panel_width_plus_10 = 550  		# used to be 470
@panel_width_plus_14 = 554			# used to be 474
@panel_width_plus_14_half = 277		# used to be 237
@panel_width_plus_20 = 560			# used to be 480
@panel_width_plus_30 = 570			# used to be 490
@panel_width_plus_70 = 610			# used to be 530

types default_buttons
{
	type sort_button = button {
		block "tooltip_placement"{
			using = tooltip_ne
		}

		block "sound" {
			using = sort_button_sound
		}

		block "background" {
			using = sort_button_bg
		}

		### HIGHLIGHT
		icon = {
			block "selected_visibility" {
				visible = no
			}

			using = highlighted_square_selection
		}
		
		minimumsize = { -1 30 }
		maximumsize = { -1 30 }
		align = hcenter|nobaseline
		margin_left = 10
		margin_right = 10
		elide = right
	}

	type sort_button_with_textbox = button {
		minimumsize = { -1 30 }
		maximumsize = { -1 30 }
		margin_left = 10
		margin_right = 10

		block "tooltip_placement"{
			using = tooltip_ne
		}

		block "sound" {
			using = sort_button_sound
		}

		block "background" {
			using = sort_button_bg
		}

		### HIGHLIGHT
		icon = {
			block "selected_visibility" {
				visible = no
			}

			using = highlighted_square_selection
		}

		textbox = {
			parentanchor = center
			size = { 100% 100% }
			margin = { 3 0 }
			align = hcenter|nobaseline
			elide = right
			fontsize_min = 12

			block "label_text" {
				raw_text = "#todo Label#!"
			}
		}
	}
	
	type tab_button = button {
		block "sound" {
			using = tab_button_sound
		}
		gfxtype = buttongfx
		effectname = "NoHighlight"
		texture = "gfx/interface/tabs/tab_button_1.dds"
		framesize = { 80 44 }
		spriteType = Corneredstretched
		spriteborder = { 10 30 }
		spriteborder_bottom = 9
		
		state = {
			name = _show
			duration = 0
			frame = 1
		}		
		state = {
			name = _mouse_enter
			duration = 0
			frame = 2
		}		
		state = {
			name = _mouse_leave
			duration = 0
			frame = 1
		}		
		state = {
			name = _mouse_press
			duration = 0
			frame = 3
		}		
		state = {
			name = _mouse_release
			duration = 0
			frame = 2
		}
		
		using = disabled_stripes
	}

	type section_header_button = button {

		block "background" {
			using = expand_button_bg
		}

		block "layout" {
			parentanchor = hcenter
			size = { @panel_width_plus_14 38 }
		}
		
		block "onclick" {}	

		### SOUND
		widget = {
			name = "expand_button"
			block "onclick_showmore" {}
		}
		clicksound = "[SelectSound(PdxGuiWidget.FindChild('expand_button').IsVisible, 'event:/SFX/UI/Global/increment', 'event:/SFX/UI/Global/decrement')]"
		blockoverride  "sound" {
			using = ui_pointer_over
		}
		
		### TRIGGERS
		blockoverride "mouse_enter" {
			on_start = "[PdxGuiWidget.FindChild('expand_arrow').TriggerAnimation('mouse_enter')]"
			on_start = "[PdxGuiWidget.FindChild('collapse_arrow').TriggerAnimation('mouse_enter')]"
		}
		blockoverride "mouse_leave" {
			on_start = "[PdxGuiWidget.FindChild('expand_arrow').TriggerAnimation('mouse_leave')]"
			on_start = "[PdxGuiWidget.FindChild('collapse_arrow').TriggerAnimation('mouse_leave')]"
		}
		
		### ARROW
		widget = {
			block "arrow_size" {
				size = { 25 25 }
			}

			block "arrow_position" {
				position = { 5 0 }
				parentanchor = left|vcenter
			}
			
			button = {
				using = expand_arrow
				size = { 100% 100% }
				alwaystransparent = yes
				block "onclick_showmore" {}
				tooltip = "SHOW_MORE"
			}
			button = {
				using = expand_arrow_expanded
				size = { 100% 100% }
				alwaystransparent = yes
				block "onclick_showless" {}
				tooltip = "SHOW_LESS"
			}
		}
		
		### TEXT
		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = preferred
			
			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				
				block "left_textbox" {
					# title
					textbox = {
						layoutstretchfactor_horizontal = 5
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						margin_right = 5
						elide = right
						alwaystransparent = yes
						fontsize_min = 12

						block "left_text_alignment" {
							align = nobaseline
						}

						block "left_text" {}

						block "left_textbox_margin_left" {
							margin_left = 40
						}

						block "fontsize" {
							using = fontsize_large
						}

						block "left_textbox_default_format"{
							default_format = "#title"
						}
					}
				}
				# block for values
				block "right_text" {}
			}
			block "below_textbox" {}
		}
	}
	
	type section_header_right_text = textbox {
		margin_left = 5
		margin_right = 20
		autoresize = yes
		align = nobaseline
		#using = fontsize_large
		default_format = "#v"
		alwaystransparent = yes
	}
}

### TEMPLATES

### EXPAND / DROPDOWNS
template expand_arrow
{
	block "sound" {
		using = expand_button_sound
	}
	texture = "gfx/interface/buttons/expand_arrow.dds"
	gfxtype = buttongfx
	framesize = { 100 100 }
	size = { 24 24 }
}

template expand_arrow_expanded
{
	block "sound" {
		using = expanded_button_sound
	}
	texture = "gfx/interface/buttons/expand_arrow_expanded.dds"
	gfxtype = buttongfx
	framesize = { 100 100 }
	size = { 24 24 }
}

template sort_button_bg 
{
	texture = "gfx/interface/buttons/sort_button.dds"
	size = { -1 30 }
	spriteType = Corneredtiled
	spriteborder = { 12 12 }
	texture_density = 2
	using = disabled_stripes
	gfxtype = buttongfx
	effectname = "NoHighlight"
	
	modify_texture = {
		name = "bg_gradient"
		texture = "gfx/interface/buttons/default_button_bg_gradient.dds"
		spriteType = Corneredstretched
		spriteborder = { 0 0 }
		blend_mode = overlay
		alpha = 0.5
	}
	modify_texture = {
		name = "texture"
		texture = "gfx/interface/textures/default_noise_texture.dds"
		spriteType = Corneredtiled
		spriteborder = { 0 0 }
		blend_mode = overlay
	}

	### mouse states
	modify_texture = {
		name = "mouse_enter"
		texture = "gfx/interface/buttons/expand_button_bg_mouse_enter.dds"
		spriteType = Corneredstretched
		spriteborder = { 0 0 }
		blend_mode = colordodge
		alpha = 0
	}
	modify_texture = {
		name = "mouse_press"
		texture = "gfx/interface/buttons/default_button_mousepress.dds"
		spriteType = Corneredstretched
		spriteborder = { 0 0 }
		blend_mode = overlay
		alpha = 0
	}		
	using = default_mouse_states_animation
}

template expand_button_bg 
{
	texture = "gfx/interface/buttons/expand_button_bg.dds"
	spriteType = Corneredtiled
	spriteborder = { 20 20 }
	texture_density = 2
	using = disabled_stripes
	gfxtype = buttongfx
	effectname = "NoHighlight"
	
	modify_texture = {
		name = "bg_gradient"
		texture = "gfx/interface/buttons/default_button_bg_gradient.dds"
		spriteType = Corneredstretched
		spriteborder = { 0 0 }
		blend_mode = overlay
		alpha = 0.5
	}
	modify_texture = {
		name = "texture"
		texture = "gfx/interface/textures/default_noise_texture.dds"
		spriteType = Corneredtiled
		spriteborder = { 0 0 }
		blend_mode = overlay
	}
	block "fade" {
		modify_texture = {
			texture = "gfx/interface/masks/fade_horizontal_center.dds"
			spriteType = Corneredstretched
			spriteborder = { 0 0 }
			blend_mode = alphamultiply
			alpha = 1.0
		}
	}

	### mouse states
	modify_texture = {
		name = "mouse_enter"
		texture = "gfx/interface/buttons/expand_button_bg_mouse_enter.dds"
		spriteType = Corneredstretched
		spriteborder = { 0 0 }
		blend_mode = colordodge
		alpha = 0
	}
	modify_texture = {
		name = "mouse_press"
		texture = "gfx/interface/buttons/default_button_mousepress.dds"
		spriteType = Corneredstretched
		spriteborder = { 0 0 }
		blend_mode = overlay
		alpha = 0
	}		
	using = default_mouse_states_animation
}

template expand_button_bg_right_fade
{
	using = expand_button_bg
	blockoverride "fade" {
		modify_texture = {
			texture = "gfx/interface/masks/fade_horizontal_right.dds"
			spriteType = Corneredstretched
			spriteborder = { 0 0 }
			blend_mode = alphamultiply
			alpha = 0.9
		}
	}
}

template expand_button_bg_dropdown 
{
	using = expand_button_bg
	texture = "gfx/interface/buttons/expand_button_bg_dropdown.dds"
	blockoverride "fade" {}
}

template expand_button_bg_left_fade
{
	using = expand_button_bg
	blockoverride "fade" {
		modify_texture = {
			texture = "gfx/interface/masks/fade_horizontal_left.dds"
			spriteType = Corneredstretched
			spriteborder = { 0 0 }
			blend_mode = alphamultiply
			alpha = 0.9
		}
	}
}
template expand_button_bg_no_fade
{
	using = expand_button_bg
	blockoverride "fade" {}
}

###
template check_button
{
	block "sound" {
		using = check_button_sound
	}
	gfxtype = checkbuttongfx
	shaderfile = "gfx/FX/pdxgui_pushbutton.shader"
	texture = "gfx/interface/buttons/check_button.dds"
	framesize = { 80 80 }
	size = { 40 40 }	
}

template default_button_texture_alpha {
	alpha = 0.7
}

template default_button_properties
{
	effectname = "NoHighlight"
	spriteType = Corneredtiled
	texture_density = 2

	modify_texture = {
		name = "bg_gradient"
		texture = "gfx/interface/buttons/default_button_bg_gradient.dds"
		spriteType = Corneredstretched
		spriteborder = { 0 0 }
		blend_mode = overlay
		alpha = 0.5
	}
	modify_texture = {
		name = "texture"
		texture = "gfx/interface/buttons/default_button_texture.dds"
		spriteType = Corneredtiled
		texture_density = 2
		spriteborder = { 0 0 }
		blend_mode = overlay
		translate_uv = { 0 0 }
		using = default_button_texture_alpha
	}
	modify_texture = {
		name = "wood_border"
		texture = "gfx/interface/buttons/default_button_wood_border.dds"
		spriteType = Corneredtiled
		texture_density = 2
		spriteborder = { 250 0 }
		blend_mode = overlay
		translate_uv = { 0 0 }
		using = default_button_texture_alpha
	}
	
	### animation textures
	modify_texture = {
		name = "mouse_enter"
		texture = "gfx/interface/buttons/default_button_mouseover.dds"
		spriteType = Corneredstretched
		spriteborder = { 0 0 }
		blend_mode = colordodge
		alpha = 0
	}
	modify_texture = {
		name = "mouse_press"
		texture = "gfx/interface/buttons/default_button_mousepress.dds"
		spriteType = Corneredstretched
		spriteborder = { 0 0 }
		blend_mode = overlay
		alpha = 0
	}
	
	### disabled stripes
	using = disabled_stripes
}

template default_button
{
	block "sound" {
		using = select_button_sound
	}
	using = default_button_properties
	texture = "gfx/interface/buttons/default_button_bg.dds"

	gfxtype = togglepushbuttongfx
	upframe = 1
	uphoverframe = 1
	uppressedframe = 1
	downframe = 2
	downhoverframe = 2
	downpressedframe = 2
	disableframe = 3
	
	spriteborder = { 7 7 }
	framesize = { 19 19 }
	
	### show
	state = {
		name = _show
		using = Animation_Curve_Default
		using = button_animation_duration
		modify_texture = {
			name = mouse_press
			alpha = 0
		}
		modify_texture = {
			name = mouse_enter
			alpha = 0
		}
		modify_texture = {
			name = "texture"
			translate_uv = { 0 0 }
			using = default_button_texture_alpha
		}
		modify_texture = {
			name = "wood_border"
			translate_uv = { 0 0 }
			using = default_button_texture_alpha
		}
		
		on_start = "[PdxGuiWidget.AccessChild('frame').TriggerAnimation('show')]"
		on_start = "[PdxGuiWidget.AccessChild('primary_dec').TriggerAnimation('show')]"
		on_start = "[PdxGuiWidget.AccessChild('bevel').TriggerAnimation('show')]"
		on_start = "[PdxGuiWidget.AccessChild('icon').TriggerAnimation('show')]"
	}
	
	### mouse enter
	state = {
		name = _mouse_enter
		using = Animation_Curve_Default
		using = button_animation_duration
		modify_texture = {
			name = mouse_press
			alpha = 0
		}
		modify_texture = {
			name = mouse_enter
			alpha = 0.5
		}
		modify_texture = {
			name = "texture"
			translate_uv = { 0 0 }
			using = default_button_texture_alpha
		}
		modify_texture = {
			name = "wood_border"
			translate_uv = { 0 0 }
			using = default_button_texture_alpha
		}
		
		on_start = "[PdxGuiWidget.AccessChild('frame').TriggerAnimation('mouse_enter')]"
		on_start = "[PdxGuiWidget.AccessChild('primary_dec').TriggerAnimation('mouse_enter')]"
		on_start = "[PdxGuiWidget.AccessChild('bevel').TriggerAnimation('mouse_enter')]"
		on_start = "[PdxGuiWidget.AccessChild('icon').TriggerAnimation('enter')]"
	}
	
	### mouse leave
	state = {
		name = _mouse_leave
		using = Animation_Curve_Default
		using = button_animation_duration_slow
		modify_texture = {
			name = mouse_press
			alpha = 0
		}
		modify_texture = {
			name = mouse_enter
			alpha = 0
		}
		modify_texture = {
			name = "texture"
			translate_uv = { 0 0 }
			using = default_button_texture_alpha
		}
		modify_texture = {
			name = "wood_border"
			translate_uv = { 0 0 }
			using = default_button_texture_alpha
		}
		
		on_start = "[PdxGuiWidget.AccessChild('frame').InterruptThenTriggerAnimation('mouse_enter','mouse_leave')]"
		on_start = "[PdxGuiWidget.AccessChild('primary_dec').InterruptThenTriggerAnimation('mouse_enter','mouse_leave')]"
		on_start = "[PdxGuiWidget.AccessChild('bevel').InterruptThenTriggerAnimation('mouse_enter','mouse_leave')]"
		on_start = "[PdxGuiWidget.AccessChild('icon').InterruptThenTriggerAnimation('enter','leave')]"
	}
	
	### mouse press
	state = {
		name = _mouse_press
		using = Animation_Curve_Default
		using = button_animation_duration
		modify_texture = {
			name = mouse_press
			alpha = 1
		}
		modify_texture = {
			name = mouse_enter
			alpha = 0
		}
		modify_texture = {
			name = "texture"
			translate_uv = { -0.005 -0.02 }
			using = default_button_texture_alpha
		}
		modify_texture = {
			name = "wood_border"
			translate_uv = { -0.005 -0.02 }
			using = default_button_texture_alpha
		}
		
		on_start = "[PdxGuiWidget.AccessChild('frame').TriggerAnimation('mouse_press')]"
		on_start = "[PdxGuiWidget.AccessChild('primary_dec').TriggerAnimation('mouse_press')]"
		on_start = "[PdxGuiWidget.AccessChild('bevel').TriggerAnimation('mouse_press')]"
		on_start = "[PdxGuiWidget.AccessChild('icon').TriggerAnimation('press')]"
	}
	
	### mouse release
	state = {
		name = _mouse_release
		using = Animation_Curve_Default
		using = button_animation_duration
		modify_texture = {
			name = mouse_press
			alpha = 0
		}
		modify_texture = {
			name = mouse_enter
			alpha = 0.3
		}
		modify_texture = {
			name = "texture"
			translate_uv = { 0 0 }
			using = default_button_texture_alpha
		}
		modify_texture = {
			name = "wood_border"
			translate_uv = { 0 0 }
			using = default_button_texture_alpha
		}
		
		on_start = "[PdxGuiWidget.AccessChild('frame').TriggerAnimation('mouse_release')]"
		on_start = "[PdxGuiWidget.AccessChild('primary_dec').TriggerAnimation('mouse_release')]"
		on_start = "[PdxGuiWidget.AccessChild('bevel').TriggerAnimation('mouse_release')]"
		on_start = "[PdxGuiWidget.AccessChild('icon').TriggerAnimation('release')]"
	}
	
	### bevel
	margin_widget = {
		name = "bevel"
		size = { 100% 100% }
		alpha = 0.7
		position = { 0 0 }
		
		block "bevel_margin" {
			margin = { 2 2 }
		}
		
		state = {
			name = show
			using = Animation_Curve_Default
			using = button_animation_duration
			alpha = 0.7
			position = { 0 0 }
		}
		state = {
			name = mouse_enter
			using = Animation_Curve_Default
			using = button_animation_duration
			alpha = 1
			position = { 0 0 }
		}
		state = {
			name = mouse_leave
			using = Animation_Curve_Default
			using = button_animation_duration
			alpha = 0.7
			position = { 0 0 }
		}
		state = {
			name = mouse_press
			using = Animation_Curve_Default
			using = button_animation_duration
			alpha = 0.2
			position = { 1 1 }
		}
		state = {
			name = mouse_release
			using = Animation_Curve_Default
			using = button_animation_duration
			alpha = 0.7
			position = { 0 0 }
		}
		
		icon = {
			size = { 100% 100% }
			block "bevel_texture" {
				texture = "gfx/interface/buttons/default_button_bevel.dds"
			}
			spriteType = Corneredtiled
			texture_density = 2
			spriteborder = { 75 35 }
		}
	}
	
	### primary decoration
	icon = {
		name = "primary_dec"
		block "primary_visible" {
			visible = no #only visible for primary buttons
		}
		block "primary_texture" {
			texture = "gfx/interface/buttons/default_button_frame_fancy_small.dds"
		}
		spriteborder = { 50 20 }
		spriteType = Corneredstretched
		size = { 100% 100% }
		texture_density = 2
		alwaystransparent = yes
		
		modify_texture = {
			name = "mouse_enter"
			texture = "gfx/interface/buttons/default_button_frame_mouse_enter.dds"
			spriteType = Corneredstretched
			spriteborder = { 0 0 }
			blend_mode = overlay
			alpha = 0
			translate_uv = { 0 1 }
		}
		
		state = {
			name = show
			using = Animation_Curve_Default
			using = button_animation_duration
			
			modify_texture = {
				name = "mouse_enter"
				alpha = 0
				translate_uv = { 0 1 }
			}
		}
		state = {
			name = mouse_enter
			using = Animation_Curve_Default
			using = button_animation_duration
			
			modify_texture = {
				name = "mouse_enter"
				alpha = 1
				translate_uv = { 0 0 }
			}
		}
		state = {
			name = mouse_leave
			using = Animation_Curve_Default
			using = button_animation_duration
			
			modify_texture = {
				name = "mouse_enter"
				alpha = 0
				translate_uv = { 0 1 }
			}
		}
		state = {
			name = mouse_press
			using = Animation_Curve_Default
			using = button_animation_duration
			
			modify_texture = {
				name = "mouse_enter"
				alpha = 0
				translate_uv = { 0 1 }
			}
		}
		state = {
			name = mouse_release
			using = Animation_Curve_Default
			using = button_animation_duration
			
			modify_texture = {
				name = "mouse_enter"
				alpha = 0
				translate_uv = { 0 1 }
			}
		}
	}
	
	### frame
	icon = {
		block "frame_visible" {
			visible = no #only used for action buttons
		}
		block "frame_texture" {
			texture = "gfx/interface/buttons/default_button_frame.dds"
		}
		spriteborder = { 12 12 }
		name = "frame"
		spriteType = Corneredstretched
		size = { 100% 100% }
		texture_density = 2
		alwaystransparent = yes
		
		modify_texture = {
			name = "mouse_enter"
			texture = "gfx/interface/buttons/default_button_frame_mouse_enter.dds"
			spriteType = Corneredstretched
			spriteborder = { 0 0 }
			blend_mode = overlay
			alpha = 0
			translate_uv = { 0 1 }
		}
		
		state = {
			name = show
			using = Animation_Curve_Default
			using = button_animation_duration
			
			modify_texture = {
				name = "mouse_enter"
				alpha = 0
				translate_uv = { 0 1 }
			}
		}
		state = {
			name = mouse_enter
			using = Animation_Curve_Default
			using = button_animation_duration
			
			modify_texture = {
				name = "mouse_enter"
				alpha = 1
				translate_uv = { 0 0 }
			}
		}
		state = {
			name = mouse_leave
			using = Animation_Curve_Default
			using = button_animation_duration
			
			modify_texture = {
				name = "mouse_enter"
				alpha = 0
				translate_uv = { 0 1 }
			}
		}
		state = {
			name = mouse_press
			using = Animation_Curve_Default
			using = button_animation_duration
			blockoverride "sound" {
				clicksound = "event:/SFX/DLC/1.3_ip1/UI/character_invite"
			}
			modify_texture = {
				name = "mouse_enter"
				alpha = 0
				translate_uv = { 0 1 }
			}
		}
		state = {
			name = mouse_release
			using = Animation_Curve_Default
			using = button_animation_duration
			
			modify_texture = {
				name = "mouse_enter"
				alpha = 0
				translate_uv = { 0 1 }
			}
		}
	}
	
	#Hack for the type "button_icon_square" which needs the animation triggers above
	block "hack_icon" {
		icon = {
			name = icon
			size = { 1 1 }
			texture = "gfx/interface/icons/generic_icons/transparent.dds"
			alwaystransparent = yes
		}
	}
}

template elide_fontsize_min {
	elide = right
	fontsize_min = 14
}

template default_button_primary
{
	using = default_button
	blockoverride "primary_visible" {}
}
template default_button_primary_big
{
	using = default_button
	blockoverride "primary_visible" {}
	blockoverride "primary_texture" {
		texture = "gfx/interface/buttons/default_button_frame_fancy_big.dds"
	}
}

### ACTION BUTTON
template default_button_action
{
	using = default_button
	
	texture = "gfx/interface/buttons/default_button_bg_action.dds"
	blockoverride "bevel_texture" {
		texture = "gfx/interface/buttons/default_button_bevel_action.dds"
	}
	blockoverride "frame_visible" {}
	blockoverride "bevel_margin" {
		margin = { 4 4 }
	}
}

template default_button_primary_action
{
	using = default_button_action
	blockoverride "primary_visible" {}
}
template default_button_primary_big_action
{
	using = default_button_action
	blockoverride "primary_visible" {}
	blockoverride "primary_texture" {
		texture = "gfx/interface/buttons/default_button_frame_fancy_big.dds"
	}
}

### MAP INTERACTION BUTTON
template default_button_map_interaction
{
	using = default_button
	texture = "gfx/interface/buttons/default_button_bg_map_interaction.dds"
	blockoverride "bevel_texture" {
		texture = "gfx/interface/buttons/default_button_bevel_map_interaction.dds"
	}
	blockoverride "frame_visible" {}
	blockoverride "frame_texture" {
		texture = "gfx/interface/buttons/default_button_frame_map_interaction.dds"
	}
	blockoverride "bevel_margin" {
		margin = { 3 3 }
	}
}

### RED BUTTON
template red_button
{
	using = default_button
	texture = "gfx/interface/buttons/red_button_bg.dds"
	blockoverride "bevel_texture" {
		texture = "gfx/interface/buttons/red_button_bevel.dds"
	}
}

### MISC
template glow_button
{
	block "sound" {
		using = glow_button_sound
	}
	texture = "gfx/interface/buttons/glow_button.dds"
	spriteType = CorneredStretched
	spriteborder = { 0 0 }
	gfxtype = buttongfx
	effectname = "NoHighlight"
	framesize = { 180 100 }
	using = default_button_animation
}

template glow_button_border
{
	block "sound" {
		using = glow_button_sound
	}
	texture = "gfx/interface/buttons/glow_button_border.dds"
	spriteType = CorneredStretched
	spriteborder = { 60 60 }
	gfxtype = buttongfx
	effectname = "NoHighlight"
	framesize = { 150 150 }
	using = default_button_animation
}

template flag_button_glow
{
	texture = "gfx/interface/flag/flag_button_glow.dds"
	spriteType = CorneredStretched
	spriteborder = { 0 0 }
	gfxtype = buttongfx
	effectname = "NoHighlight"
	framesize = { 250 250 }
	using = default_button_animation
}

# remove?
template clean_button
{
	using = default_button
}

#remove ?
template default_button_tertiary
{
	using = default_button
}
template default_button_alternate
{
	using = default_button
	texture = "gfx/interface/buttons/default_button_bg_action.dds"
	blockoverride "bevel_texture" {
		texture = "gfx/interface/buttons/default_button_bevel_action.dds"
	}
}

template disabled_stripes
{
	button = {
		alwaystransparent = yes
		size = { 100% 100% }
		gfxtype = togglepushbuttongfx
		effectname = "NoHighlight"
		texture = "gfx/interface/buttons/button_disabled_stripes.dds"
		spriteType = Corneredtiled
		spriteborder = { 2 2 }
		framesize  = { 238 63 } 
		using = zoom_button_sound

		upframe = 1
		uphoverframe = 1
		uppressedframe = 1
		downframe = 1
		downhoverframe = 1
		downpressedframe = 1
		disableframe = 2

		alpha = 0.2
	}
}