# message: loc key of the message to show on the map at the location specified in code. Can be overridden from code and omitted in these cases.
# widget: name of the widget that should be shown when the notification spawns. Default is "map_event_notification".
# max_height: the maximum zoom level this notification will still show at. Default is set by NGUI:MAP_NOTIFICATIONS_MAX_ZOOM define. Somewhat strange name, but it's the max value if not specified differently (in this file right here). A negative value means it will show at any zoom. Note that open lenses block all map notifications.
# max_height values should usually be one of these as they specify our zoom steps (as defined in NCamera defines): ZOOM_STEPS = {24 32 40 50 75 100 200 300 400 600 800 1000 1200 1500 2500 4500}
# sound: the sound to play when the message spawns on the map, assuming it's visible to the player. Can be omitted.

@three_dee_map_zoom_start = 600	# the value at which you can still see the notifications on the highest 3D map zoom level but not on the papermap anymore.

map_notification_interaction = {
	widget = "map_interaction_notification"
	max_height = -1
	# map interaction notifications get their text and sound from the map_interaction_types.txt database
}

map_notification_building_fully_employed = {
	message = NOTIFICATION_BUILDING_FULLY_EMPLOYED
}

map_notification_harvest_condition_finished = {
	message = NOTIFICATION_HARVEST_CONDITION_FINISHED
	max_height = 600 # 600 is the value at which you can still see the notifications on the highest 3D map zoom level but not on the papermap anymore.
}

map_notification_harvest_condition_started = {
	message = NOTIFICATION_HARVEST_CONDITION_STARTED
	max_height = 600 # 600 is the value at which you can still see the notifications on the highest 3D map zoom level but not on the papermap anymore.
}

map_notification_average_sol_increased = {
	message = NOTIFICATION_STATE_AVERAGE_SOL_INCREASED
}

map_notification_average_sol_decreased = {
	message = NOTIFICATION_STATE_AVERAGE_SOL_DECREASED
}

map_notification_literacy_increased = {
	message = NOTIFICATION_STATE_LITERACY_INCREASED
}

map_notification_population_increased = {
	message = NOTIFICATION_STATE_POPULATION_INCREASED
}

map_notification_population_decreased = {
	message = NOTIFICATION_STATE_POPULATION_DECREASED
}

map_notification_in_turmoil = {
	message = NOTIFICATION_STATE_IN_TURMOIL
}

map_notification_building_expanded = {
	message = NOTIFICATION_BUILDING_EXPANDED
}

## A foreign country (government or private actors) makes an investment to expand a building in your country
map_notification_building_foreign_investment = {
	message = NOTIFICATION_BUILDING_FOREIGN_INVESTMENT
	sound = "event:/SFX/UI/Alerts/FloatyText/notification_ft_foreign_investment_received"
}

## Investors in a foreign country privatizes a level of a building in your country
map_notification_building_foreign_investment_privatization = {
	message = NOTIFICATION_BUILDING_FOREIGN_INVESTMENT_PRIVATIZATION
	sound = "event:/SFX/UI/Alerts/FloatyText/notification_ft_foreign_investment_received"
}

## Investors in your country expands a level of a building in a foreign country
map_notification_building_foreign_investment_made = {
	message = NOTIFICATION_BUILDING_FOREIGN_INVESTMENT
	sound = "event:/SFX/UI/Alerts/FloatyText/notification_ft_foreign_investment_made"
}

## Investors in your country privatizes a level of a building in a foreign country
map_notification_building_foreign_investment_made_privatization = {
	message = NOTIFICATION_BUILDING_FOREIGN_INVESTMENT_PRIVATIZATION
	sound = "event:/SFX/UI/Alerts/FloatyText/notification_ft_foreign_investment_made"
}

## First pops of a given culture move into the state, lowest to highest acceptance level
map_notification_first_pop_of_culture_in_state_status_1 = {
	message = NOTIFICATION_BUILDING_FIRST_POPS_OF_CULTURE_IN_STATE
	sound = "event:/SFX/UI/Alerts/FloatyText/notification_ft_culture_created_violent_hostility"
	max_height = @[three_dee_map_zoom_start]
}

map_notification_first_pop_of_culture_in_state_status_2 = {
	message = NOTIFICATION_BUILDING_FIRST_POPS_OF_CULTURE_IN_STATE
	sound = "event:/SFX/UI/Alerts/FloatyText/notification_ft_culture_created_cultural_erasure"
	max_height = @[three_dee_map_zoom_start]
}

map_notification_first_pop_of_culture_in_state_status_3 = {
	message = NOTIFICATION_BUILDING_FIRST_POPS_OF_CULTURE_IN_STATE
	sound = "event:/SFX/UI/Alerts/FloatyText/notification_ft_culture_created_open_prejudice"
	max_height = @[three_dee_map_zoom_start]
}

map_notification_first_pop_of_culture_in_state_status_4 = {
	message = NOTIFICATION_BUILDING_FIRST_POPS_OF_CULTURE_IN_STATE
	sound = "event:/SFX/UI/Alerts/FloatyText/notification_ft_culture_created_second_rate_citizen"
	max_height = @[three_dee_map_zoom_start]
}

map_notification_first_pop_of_culture_in_state_status_5 = {
	message = NOTIFICATION_BUILDING_FIRST_POPS_OF_CULTURE_IN_STATE
	sound = "event:/SFX/UI/Alerts/FloatyText/notification_ft_culture_created_full_acceptance"
	max_height = @[three_dee_map_zoom_start]
}
