l_russian:
 PRESTIGE_FROM_COUNTRY_GDP: "#variable $VALUE|+=$#! от [Concept( 'concept_gdp', 'валового внутреннего продукта')]"
 PRESTIGE_FROM_ARMY_POWER_PROJECTION: "#variable $VALUE|+=$#! от [Concept('concept_power_projection', 'демонстрации силы')] армии"
 PRESTIGE_FROM_NAVY_POWER_PROJECTION: "#variable $VALUE|+=$#! от [Concept('concept_power_projection', 'демонстрации силы')] военно-морского флота"
 PRESTIGE_FROM_COUNTRY_TIER: "#variable $VALUE|+=$#! от [Concept('concept_country_tier', 'уровня государства')]: $TIER|v$"
 PRESTIGE_FROM_SUBJECT_GDP: "#variable $VALUE|+=$#! от [Concept('concept_gdp', 'валового внутреннего продукта')] [Concept('concept_subject', 'субъектов')]"
 PRESTIGE_FROM_SUBJECT_ARMY_POWER_PROJECTION: "#variable $VALUE|+=$#! от [Concept('concept_power_projection', 'демонстрации силы')] армий [Concept('concept_subject', 'субъектов')]"
 PRESTIGE_FROM_SUBJECT_NAVY_POWER_PROJECTION: "#variable $VALUE|+=$#! от [Concept('concept_power_projection', 'демонстрации силы')] военно-морского флота [Concept('concept_subject', 'субъектов')]"
 PRESTIGE_FROM_GOODS_LEADERBOARDS: "#tooltippable #tooltip:[Country.GetTooltipTag],PRESTIGE_FROM_GOODS_LEADERBOARDS_BREAKDOWN #v $VAL|+=$#!#!#! от статуса ведущего производителя товаров"
 PRESTIGE_FROM_GOODS_LEADERBOARDS_BREAKDOWN: "[Country.GetGoodsLeaderboardDesc]"
 PRESTIGE_FROM_PRESTIGE_GOODS_LEADERBOARDS: "#tooltippable #tooltip:[Country.GetTooltipTag],PRESTIGE_FROM_PRESTIGE_GOODS_LEADERBOARDS_BREAKDOWN #v $VAL|+=$#!#!#! от статуса ведущего производителя [Concept('concept_prestige_good', 'люксовых товаров')]"
 PRESTIGE_FROM_PRESTIGE_GOODS_LEADERBOARDS_BREAKDOWN: "[Country.GetPrestigeGoodsLeaderboardDesc]"
 NO_PRESTIGE_RANKING: "Это #variable $COUNTRY_TYPE$#!, в силу этого рейтинг [Concept('concept_prestige', 'престижа')] отсутствует"
 ARMY_POWER_PROJECTION_DESC: "#header #tooltippable_name $ADJECTIVE$ая#! [concept_power_projection|l] армии: $VALUE|v0$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 NAVY_POWER_PROJECTION_DESC: "#header #tooltippable_name $ADJECTIVE$ая#! [concept_power_projection|l] флота: $VALUE|v0$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 great_power: "[concept_great_power]"
 great_power_desc: "[concept_great_power_desc]"
 major_power: "[concept_major_power]"
 major_power_desc: "[concept_major_power_desc]"
 minor_power: "[concept_minor_power]"
 minor_power_desc: "[concept_minor_power_desc]"
 insignificant_power: "[concept_insignificant_power]"
 insignificant_power_desc: "[concept_insignificant_power_desc]"
 decentralized_nation: "[concept_decentralized_nation]"
 decentralized_nation_desc: "[concept_decentralized_nation_desc]"
 unrecognized_power: "[concept_unrecognized_power]"
 unrecognized_power_desc: "[concept_unrecognized_power_desc]"
 unrecognized_regional_power: "[Concept('concept_unrecognized_power','Местная непризнанная держава')]"
 unrecognized_regional_power_desc: "[concept_unrecognized_power_desc]"
 unrecognized_major_power: "[Concept('concept_unrecognized_power','Крупная непризнанная держава')]"
 unrecognized_major_power_desc: "[concept_unrecognized_power_desc]"
 country_humiliated: "Унижение соперником"
 country_cut_down_to_size: "Сокращение территории"
 forced_market_opening: "Государство принуждено к [Concept('concept_open_market', 'открытию рынков')]"
 forced_slavery_ban: "Государство принуждено к отмене [Concept('concept_slavery', 'рабства')]"
 forced_regime_change: "Принудить к смене режима"
 centralized: "Централизованная страна"
 colonial: "Колониальная страна"
 decentralized: "Децентрализованное государство"
 unrecognized: "Непризнанная страна"
 recognized: "Признанная"
 company: "Компания"
 country_tier_city_state: "Город-государство"
 country_tier_principality: "Княжество"
 country_tier_grand_principality: "Великое княжество"
 country_tier_kingdom: "Королевство"
 country_tier_empire: "Империя"
 country_tier_hegemony: "Гегемония"
 DIPLO_PLAY_GREAT_POWER_TRIGGER: "Чтобы воспользоваться этой [Concept('concept_diplomatic_play', 'дипломатической игрой')], мы должны стать [Concept('concept_great_power', 'великой державой')]."
 DIPLO_PLAY_OUTRAGED_TRIGGER: "Их [concept_infamy|l] должна быть на уровне $infamy_pariah$"
 DIPLOMATIC_PACT_REDUCED_LIBERTY_DESIRE: "Мы внесли вклад в снижение [Concept('concept_liberty_desire','желания свободы')] [SCOPE.sCountry('target_country').GetAltName('RU_CL_RP')]"
 DIPLOMATIC_PACT_REQUIREMENT_MORE_TECHS_RESEARCHED: "У [SCOPE.sCountry('actor').GetAltName('RU_CL_RP')] должно быть больше открытых [Concept('concept_technology','технологий')], чем у [SCOPE.sCountry('target_country').GetAltName('RU_CL_RP')]"
 DIPLOMATIC_PACT_REQUIREMENT_HIGH_LIBERTY_DESIRE: "[Concept('concept_liberty_desire','Желание свободы')] у [SCOPE.sCountry('actor').GetAltName('RU_CL_RP')] должно быть не ниже, чем [GetDefine('NDiplomacy','WAR_GOAL_INCREASE_AUTONOMY_MIN_LIBERTY_DESIRE')]"
 DIPLOMATIC_PACT_REQUIREMENT_TARGET_HIGH_LIBERTY_DESIRE: "[Concept('concept_liberty_desire','Желание свободы')] у [SCOPE.sCountry('target_country').GetAltName('RU_CL_RP')] должно быть не ниже, чем [GetDefine('NDiplomacy','WAR_GOAL_INCREASE_AUTONOMY_MIN_LIBERTY_DESIRE')]"
 DIPLOMATIC_PACT_REQUIREMENT_DURATION_NOT_EXPIRED: "Срок действия навязанного [Concept('concept_diplomatic_pact', 'дипломатического пакта')] не истёк"
 DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED: "Ни одна из двух [Concept('concept_country', 'стран')] не является [Concept('concept_decentralized_nation', 'децентрализованным государством')]"
 DIPLOMATIC_PACT_REQUIREMENT_NO_SUBJECT_RELATION: "Ни одна из двух [Concept('concept_country', 'стран')] не является [Concept('concept_subject', 'субъектом')] другой"
 DIPLOMATIC_PACT_REQUIREMENT_DIPLOMATIC_AUTONOMY: "Ни одна из двух [Concept('concept_country', 'стран')] не является дипломатически несамостоятельным [Concept('concept_subject', 'субъектом')]"
 DIPLOMATIC_PACT_REQUIREMENT_VALID_RIVALS: "Разница [Concept('concept_rank', 'рейтингов')] двух [Concept('concept_country', 'стран')] позволяет им быть [Concept('concept_rivalry', 'соперниками')]"
 DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE: "Две [Concept( 'concept_country', 'страны' )] не должны находиться по разные стороны в [Concept('concept_war', 'войне')]"
 DIPLOMATIC_PACT_REQUIREMENT_SUBJECT_WITH_INCOME_TRANSFER: "[Concept('concept_subject', 'Субъект')] относится к типу, выплачивающему дань [Concept('concept_overlord', 'сюзерену')]"
 DIPLOMATIC_PACT_REQUIREMENT_NO_SUPPORT_FOR_INDEPENDENCE: "Независимость [Concept('concept_subject','субъекта')] поддерживается"
 EQUAL_OR_BETTER_RANK_THAN_TARGET: "[SCOPE.sCountry('actor').GetName] более высокого или равного [Concept('concept_rank', 'ранга')] в сравнении с [SCOPE.sCountry('target_country').GetAltName('RU_CL_TP')] ([SCOPE.sCountry('target_country').GetRank])"
 DIPLO_ACTION_RELATIONS: "[concept_relations] между [SCOPE.GetRootScope.GetCountry.GetAltName('RU_CL_TP')] и [SCOPE.sC('target_country').GetAltName('RU_CL_TP')]"
 DIPLO_ACTION_RELATIONS_CORDIAL: "$DIPLO_ACTION_RELATIONS$: #P радушные#!"
 DIPLO_ACTION_RELATIONS_CORDIAL_NOT: "$DIPLO_ACTION_RELATIONS$: НЕ #P радушные#!"
 DIPLO_ACTION_RELATIONS_AMICABLE: "$DIPLO_ACTION_RELATIONS$: #P приязненные#!"
 DIPLO_ACTION_RELATIONS_AMICABLE_NOT: "$DIPLO_ACTION_RELATIONS$: НЕ #P приязненные#!"
 DIPLO_ACTION_RELATIONS_FRIENDLY: "$DIPLO_ACTION_RELATIONS$: #P дружеские#!"
 DIPLO_ACTION_RELATIONS_FRIENDLY_NOT: "$DIPLO_ACTION_RELATIONS$: НЕ #P дружеские#!"
 DIPLO_ACTION_RELATIONS_POOR: "$DIPLO_ACTION_RELATIONS$: #N плохие#!"
 DIPLO_ACTION_RELATIONS_POOR_NOT: "$DIPLO_ACTION_RELATIONS$: НЕ #N плохие#!"
 DIPLO_ACTION_RELATIONS_COLD: "$DIPLO_ACTION_RELATIONS$: #N прохладные#!"
 DIPLO_ACTION_RELATIONS_COLD_NOT: "$DIPLO_ACTION_RELATIONS$: НЕ #N прохладные#!"
 DIPLO_ACTION_RELATIONS_HOSTILE: "$DIPLO_ACTION_RELATIONS$: #N враждебные#!"
 DIPLO_ACTION_RELATIONS_HOSTILE_NOT: "$DIPLO_ACTION_RELATIONS$: НЕ #N враждебные#!"
 DIPLO_ACTION_RELATIONS_CORDIAL_OR_GREATER: "$DIPLO_ACTION_RELATIONS$: #P радушные#! и лучше"
 DIPLO_ACTION_RELATIONS_CORDIAL_OR_GREATER_NOT: "$DIPLO_ACTION_RELATIONS$: хуже, чем #P радушные#!"
 DIPLO_ACTION_RELATIONS_AMICABLE_OR_GREATER: "$DIPLO_ACTION_RELATIONS$: #P приязненные#! и лучше"
 DIPLO_ACTION_RELATIONS_AMICABLE_OR_GREATER_NOT: "$DIPLO_ACTION_RELATIONS$: хуже, чем #P приязненные#!"
 DIPLO_ACTION_RELATIONS_POOR_OR_LESS: "$DIPLO_ACTION_RELATIONS$: #N плохие#! и хуже"
 DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT: "$DIPLO_ACTION_RELATIONS$: лучше, чем #N плохие#!"
 DIPLO_ACTION_RELATIONS_COLD_OR_LESS: "$DIPLO_ACTION_RELATIONS$: #N прохладные#! и хуже"
 DIPLO_ACTION_RELATIONS_COLD_OR_LESS_NOT: "$DIPLO_ACTION_RELATIONS$: лучше, чем #N прохладные#!"
 DIPLO_ACTION_MARKET_CONNECTION_REQUIRED: "Нам необходимо наличие сухопутной связи между нашими [Concept('concept_market_capital','рыночными столицами')] или возможность создать [Concept('concept_port_connection', 'связь порта')] с #tooltippable_name #tooltip:[SCOPE.sC('target_country').GetCapital.GetMarket.GetTooltipTag],DATA_MARKET_NAME_TOOLTIP,MarketTooltip [SCOPE.sC('target_country').GetCapital.GetMarket.GetOwner.GetAdjectiveNoFormatting|l]ом рынке#!#!"
 DIPLO_ACTION_MARKET_CONNECTION_REQUIRED_CHANGE: "Нам необходимо наличие сухопутной связи между нашими [Concept('concept_market_capital','рыночными столицами')] или возможность создать [Concept('concept_port_connection', 'связь порта')] с городом [SCOPE.sC('target_country').GetCapital.GetName|l]"
 DIPLO_ACTION_OVERLORD_RELATIONS: "[concept_relations] между [SCOPE.GetRootScope.GetCountry.GetAltName('RU_CL_TP')] и [SCOPE.sC('target_country').GetOverlord.GetAltName('RU_CL_TP')]"
 DIPLO_ACTION_OVERLORD_RELATIONS_CORDIAL: "$DIPLO_ACTION_OVERLORD_RELATIONS$: #P радушные#!"
 DIPLO_ACTION_OVERLORD_RELATIONS_CORDIAL_NOT: "$DIPLO_ACTION_OVERLORD_RELATIONS$: НЕ #P радушные#!"
 DIPLO_ACTION_OVERLORD_RELATIONS_AMICABLE: "$DIPLO_ACTION_OVERLORD_RELATIONS$: #P приязненные#!"
 DIPLO_ACTION_OVERLORD_RELATIONS_AMICABLE_NOT: "$DIPLO_ACTION_OVERLORD_RELATIONS$: НЕ #P приязненные#!"
 DIPLO_ACTION_OVERLORD_RELATIONS_FRIENDLY: "$DIPLO_ACTION_OVERLORD_RELATIONS$: #P дружеские#!"
 DIPLO_ACTION_OVERLORD_RELATIONS_FRIENDLY_NOT: "$DIPLO_ACTION_OVERLORD_RELATIONS$: НЕ #P дружеские#!"
 DIPLO_ACTION_OVERLORD_RELATIONS_POOR: "$DIPLO_ACTION_OVERLORD_RELATIONS$: #N плохие#!"
 DIPLO_ACTION_OVERLORD_RELATIONS_POOR_NOT: "$DIPLO_ACTION_OVERLORD_RELATIONS$: НЕ #N плохие#!"
 DIPLO_ACTION_OVERLORD_RELATIONS_COLD: "$DIPLO_ACTION_OVERLORD_RELATIONS$: #N прохладные#!"
 DIPLO_ACTION_OVERLORD_RELATIONS_COLD_NOT: "$DIPLO_ACTION_OVERLORD_RELATIONS$: НЕ #N прохладные#!"
 DIPLO_ACTION_OVERLORD_RELATIONS_HOSTILE: "$DIPLO_ACTION_OVERLORD_RELATIONS$: #N враждебные#!"
 DIPLO_ACTION_OVERLORD_RELATIONS_HOSTILE_NOT: "$DIPLO_ACTION_OVERLORD_RELATIONS$: НЕ #N враждебные#!"
 DIPLO_ACTION_OVERLORD_RELATIONS_CORDIAL_OR_GREATER: "$DIPLO_ACTION_OVERLORD_RELATIONS$: #P радушные#! и лучше"
 DIPLO_ACTION_OVERLORD_RELATIONS_CORDIAL_OR_GREATER_NOT: "$DIPLO_ACTION_OVERLORD_RELATIONS$: хуже, чем #P радушные#!"
 DIPLO_ACTION_OVERLORD_RELATIONS_AMICABLE_OR_GREATER: "$DIPLO_ACTION_OVERLORD_RELATIONS$: #P приязненные#! и лучше"
 DIPLO_ACTION_OVERLORD_RELATIONS_AMICABLE_OR_GREATER_NOT: "$DIPLO_ACTION_OVERLORD_RELATIONS$: хуже, чем #P приязненные#!"
 DIPLO_ACTION_OVERLORD_RELATIONS_POOR_OR_LESS: "$DIPLO_ACTION_OVERLORD_RELATIONS$: #N плохие#! и хуже"
 DIPLO_ACTION_OVERLORD_RELATIONS_POOR_OR_LESS_NOT: "$DIPLO_ACTION_OVERLORD_RELATIONS$: лучше, чем #N плохие#!"
 DIPLO_ACTION_OVERLORD_RELATIONS_COLD_OR_LESS: "$DIPLO_ACTION_OVERLORD_RELATIONS$: #N прохладные#! и хуже"
 DIPLO_ACTION_OVERLORD_RELATIONS_COLD_OR_LESS_NOT: "$DIPLO_ACTION_OVERLORD_RELATIONS$: лучше, чем #N прохладные#!"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS: "[concept_relations] между [SCOPE.GetRootScope.GetCountry.GetAltName('RU_CL_TP')] и [SCOPE.sC('target_country').GetTopOverlord.GetAltName('RU_CL_TP')]"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_CORDIAL: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$: #P радушные#!"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_CORDIAL_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$: НЕ #P радушные#!"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_AMICABLE: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$: #P приязненные#!"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_AMICABLE_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$: НЕ #P приязненные#!"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_FRIENDLY: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$: #P дружеские#!"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_FRIENDLY_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$: НЕ #P дружеские#!"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_POOR: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$: #N плохие#!"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_POOR_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$: НЕ #N плохие#!"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_COLD: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$: #N прохладные#!"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_COLD_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$: НЕ #N прохладные#!"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_HOSTILE: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$: #N враждебные#!"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_HOSTILE_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$: НЕ #N враждебные#!"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_CORDIAL_OR_GREATER: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$: #P радушные#! и лучше"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_CORDIAL_OR_GREATER_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$: хуже, чем #P радушные#!"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_AMICABLE_OR_GREATER: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$: #P приязненные#! и лучше"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_AMICABLE_OR_GREATER_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$: хуже, чем #P приязненные#!"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_POOR_OR_LESS: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$: #N плохие#! и хуже"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_POOR_OR_LESS_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$: лучше, чем #N плохие#!"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_COLD_OR_LESS: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$: #N прохладные#! и хуже"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_COLD_OR_LESS_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$: лучше, чем #N прохладные#!"
 DIPLO_ACTION_TRADE_STATES_NOT_SAME_REGION: "Предлагаемые к обмену [Concept('concept_state','области')] должны принадлежать к разным [Concept('concept_state_region','регионам')]"
 DIPLO_ACTION_TRADE_STATES_WOULD_BREAK_CONNECTION: "После торговли обе [Concept('concept_country', 'страны')] должны иметь связь с выбранными [Concept('concept_state','областями')] по суше или по морю"
 APPOINT_COLONIAL_GOVERNOR_ON_COOLDOWN: "Прошло слишком мало времени с последнего назначения губернатора"
 relations_friendly: "#P Дружеские#!"
 relations_amicable: "#P Приязненные#!"
 relations_cordial: "#P Радушные#!"
 relations_neutral: "#V Нейтральные#!"
 relations_poor: "#N Плохие#!"
 relations_cold: "#N Прохладные#!"
 relations_hostile: "#N Враждебные#!"
 tension_calm: "#G Спокойствие#!"
 tension_uneasy: "#V Сложности#!"
 tension_tense: "#N Трения#!"
 tension_volatile: "#N Конфликт#!"
 infamy_reputable: "#V Хороший#!"
 infamy_infamous: "#N Сомнительный#!"
 infamy_notorious: "#N Плохой#!"
 infamy_pariah: "#N Презренный#!"
 subject_type_protectorate: "@protectorate! $subject_type_protectorate_no_icon$"
 subject_type_protectorate_no_icon: "$concept_protectorate$"
 subject_type_puppet: "@puppet! $subject_type_puppet_no_icon$"
 subject_type_puppet_no_icon: "$concept_puppet$"
 subject_type_tributary: "@tributary! $subject_type_tributary_no_icon$"
 subject_type_tributary_no_icon: "$concept_tributary$"
 subject_type_vassal: "@vassal! $subject_type_vassal_no_icon$"
 subject_type_vassal_no_icon: "$concept_vassal$"
 subject_type_dominion: "@dominion! $subject_type_dominion_no_icon$"
 subject_type_dominion_no_icon: "$concept_dominion$"
 subject_type_personal_union: "@personal_union! $subject_type_personal_union_no_icon$"
 subject_type_personal_union_no_icon: "$concept_personal_union$"
 subject_type_chartered_company: "@chartered_company! $subject_type_chartered_company_no_icon$"
 subject_type_chartered_company_no_icon: "$concept_chartered_company$"
 subject_type_colony: "@colony! $subject_type_colony_no_icon$"
 subject_type_colony_no_icon: "$concept_colony_subject$"
 SUBJECT_CANNOT_HAVE_SUBJECTS: " [COUNTRY.GetName] — $SUBJECT_TYPE|v$ и не может иметь собственных [Concept('concept_subject', 'субъектов')]!"
 SUBJECT_MUST_BE_HIGHER_COUNTRY_RANK: " Чтобы сделать государство $COUNTRY_OTHER_NAME$ [Concept('concept_subject', 'субъектом')] типа «$SUBJECT_TYPE|v$», государство $COUNTRY_NAME$ должно обладать более высоким [Concept('concept_rank', 'рейтингом')]"
 SUBJECT_INVALID_OVERLORD_RANK: " Государство $COUNTRY_NAME$ не может иметь [Concept('concept_subject', 'субъектов')] типа «$SUBJECT_TYPE|v$», так как его [Concept('concept_rank', 'рейтинг')] — $RANK|v$"
 SUBJECT_INVALID_SUBJECT_RANK: " Государство $COUNTRY_NAME$ не может стать [Concept('concept_subject', 'субъектом')] типа «$SUBJECT_TYPE|v$», так как его [Concept('concept_rank', 'рейтинг')] — $RANK|v$"
 SUBJECT_MUST_BE_SAME_COUNTRY_TYPE: " Государство $COUNTRY_NAME$ — это $COUNTRY_TYPE|v$, оно не может сделать государство $COUNTRY_OTHER_NAME$ [Concept('concept_subject', 'субъектом')] типа «$SUBJECT_TYPE|v$»"
 SUBJECT_INVALID_OVERLORD_COUNTRY_TYPE: " Государство $COUNTRY_NAME$ — это $COUNTRY_TYPE|v$, оно не может иметь [Concept('concept_subject', 'субъектов')] типа «$SUBJECT_TYPE|v$»"
 SUBJECT_INVALID_SUBJECT_COUNTRY_TYPE: " Государство $COUNTRY_NAME$ — это $COUNTRY_TYPE|v$, оно не может стать [Concept('concept_subject', 'субъектом')] типа «$SUBJECT_TYPE|v$»"
 SUBJECT_IS_ALREADY_SUBJECT: " [TARGET_COUNTRY.GetName] уже явля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_subject', 'субъектом')] другой державы"
 SUBJECT_NOT_VALID_CHANGE: " [Concept('concept_subject', 'Субъекта')] типа «$SUBJECT_TYPE_FROM|v$» нельзя превратить в [Concept('concept_subject', 'субъекта')] типа «$SUBJECT_TYPE|v$»"
 SUBJECT_OVERLORD_IS_SUBJECT: "[COUNTRY.GetName] не мо[COUNTRY.GetAltNameNoFormatting('RU_CL_END_GUT')]т сделать [TARGET_COUNTRY.GetAltName('RU_CL_VP')] — своего сюзерена — своим [Concept('concept_subject', 'субъектом')]"
 protector: "Протектор"
 suzerain: "Сюзерен"
 obligation: "[Concept('concept_obligation', 'Обязательство')]"
 RELEASE: "Отпустить"
 CONFIRM: "Подтвердить"
 CANCEL: "Отменить"
 USE_OBLIGATION: "Воспользоваться [Concept('concept_obligation', 'обязательством')]"
 OWE_OBLIGATION: "Дать [Concept('concept_obligation', 'обязательство')]"
 CALLING_IN_OBLIGATION: "Воспользоваться [Concept('concept_obligation', 'обязательством')]"
 OFFERING_OBLIGATION: "Предложение [Concept('concept_obligation', 'обязательства')]"
 THEY_DO_NOT_OWE_OBLIGATION: "У них нет [Concept('concept_obligation', 'обязательств')] перед нами."
 THEY_OWE_OBLIGATION: "У них уже есть [Concept('concept_obligation', 'обязательства')] перед нами."
 WE_OWE_OBLIGATION: "У нас уже есть [Concept('concept_obligation', 'обязательства')] перед ними."
 EXISTING_PACT: "Ценность действующего пакта «[DIPLOMATIC_PACT.GetName]»"
 NO_PACT_TO_TRANSFER: "Нет действующего [Concept('concept_diplomatic_pact', 'дипломатического пакта')] этого типа, который можно передать"
 AI_ACCEPTANCE_LIBERTY_DESIRE_LEVEL: "$LIBERTY_DESIRE_LEVEL$"
 NO_STATE_SELECTED_FOR_COUNTRY: "Нужно выбрать [Concept('concept_state', 'область')] [COUNTRY.GetAltName('RU_CL_RP')]"
 NO_STATE_SELECTED_FOR_ANY_COUNTRY: "Нужно выбрать [Concept('concept_state', 'область')] хотя бы одной из стран: [COUNTRY.GetName] и [TARGET_COUNTRY.GetName]"
 STATE_NOT_SELECTABLE_FOR_COUNTRY: "Выбранная [Concept('concept_state', 'область')] [COUNTRY.GetAltName('RU_CL_RP')] не подходит, причина:\n$DESC$"
 CONFIRM_DIPLOMATIC_ACTION: "#header Подтвердить#!\n$TOOLTIP_DELIMITER$[ConcatIfNeitherEmpty('\n','$DESC$')]"
 DIPLOMATIC_ACTION_STATE_DESC: "[COUNTRY.GetNameNoFormatting]: [STATE.GetName]"
 TREATY_COUNTRY_HAS_CALLED_IN_OBLIGATION: "[Country.GetName] использовал[Country.GetAltNameNoFormatting('RU_CL_END_FEM')] @obligation! [Concept('concept_obligation', 'обязательство')], данное [Treaty.GetOtherCountry(Country.Self).GetAltName('RU_CL_TP')]"
 TREATY_COUNTRY_HAS_OWED_OBLIGATION: "[Country.GetName] дал[Country.GetAltNameNoFormatting('RU_CL_END_FEM')] [Treaty.GetOtherCountry(Country.Self).GetAltName('RU_CL_DP')] @obligation! [Concept('concept_obligation', 'обязательство')]"
 TREATY_COUNTRY_WILL_CALL_IN_OBLIGATION: "[Country.GetName] использу[Country.GetAltNameNoFormatting('RU_CL_END_T')] @obligation! [Concept('concept_obligation', 'обязательство')], данное [Treaty.GetOtherCountry(Country.Self).GetAltName('RU_CL_TP')]"
 TREATY_COUNTRY_WILL_OWE_OBLIGATION: "[Country.GetName] пообеща[Country.GetAltNameNoFormatting('RU_CL_END_T')] [Treaty.GetOtherCountry(Country.Self).GetAltName('RU_CL_DP')] @obligation! [Concept('concept_obligation', 'обязательство')]"
 OBLIGATION_DELAY_EXPLANATION: "[Concept('concept_obligation', 'Обязательство')] вступит в силу по истечении [Concept('concept_binding_period', 'срока исполнения обязательств')] [Concept('concept_treaty','договора')] или не позднее #v [Divide_int32(GetDefine('NDiplomacy', 'MAX_TREATY_OBLIGATIONS_DELAY_DAYS'), '(int32)365')|0]#! л. с даты подписания ([Treaty.GetStartDate])"
 TREATY_COUNTRY_HAS_OWED_OBLIGATION_WITH_EXPLANATION: "#header $TREATY_COUNTRY_HAS_OWED_OBLIGATION$#!\n$TOOLTIP_DELIMITER$\n$OBLIGATION_DELAY_EXPLANATION$"
 TREATY_COUNTRY_WILL_OWE_OBLIGATION_WITH_EXPLANATION: "#header $TREATY_COUNTRY_WILL_OWE_OBLIGATION$#!\n$TOOLTIP_DELIMITER$\n$OBLIGATION_DELAY_EXPLANATION$"
 TREATY_HAS_OR_WILL_CALL_IN_OBLIGATION: "[SelectLocalization(Treaty.AreObligationsEffectuated, 'TREATY_COUNTRY_HAS_CALLED_IN_OBLIGATION', 'TREATY_COUNTRY_WILL_CALL_IN_OBLIGATION')]"
 TREATY_HAS_OR_WILL_OWE_OBLIGATION: "[SelectLocalization(Treaty.AreObligationsEffectuated, 'TREATY_COUNTRY_HAS_OWED_OBLIGATION', 'TREATY_COUNTRY_WILL_OWE_OBLIGATION')]"
 AI_WILL_ACCEPT_GENERIC: "@approves! [Country.GetName] прим[Country.GetAltNameNoFormatting('RU_CL_END_UT')]"
 AI_WILL_NOT_ACCEPT_GENERIC: "@disapproves! [Country.GetName] #bold #n НЕ#!#! прим[Country.GetAltNameNoFormatting('RU_CL_END_UT')]"
 AI_WILL_ACCEPT: "@approves! [COUNTRY.GetName] прим[COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')]"
 AI_WILL_ACCEPT_WITH_OWE_OBLIGATION: "@obligation! [COUNTRY.GetName] прим[COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')], если мы дадим [Concept('concept_obligation','обязательство')]"
 AI_WILL_ACCEPT_WITH_CALL_IN_OBLIGATION: "@obligation! [COUNTRY.GetName] прим[COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')], если мы #b воспользуемся#! [Concept('concept_obligation','обязательством')]"
 AI_MIGHT_ACCEPT: "@indifferent! [COUNTRY.GetName] мо[COUNTRY.GetAltNameNoFormatting('RU_CL_END_GUT')]т принять (шанс [DiplomaticAction.GetRandomAcceptanceChanceNoObligation|%0v])"
 AI_MIGHT_ACCEPT_WITH_OWE_OBLIGATION: "@obligation! [COUNTRY.GetName] мо[COUNTRY.GetAltNameNoFormatting('RU_CL_END_GUT')]т принять, если мы дадим [Concept('concept_obligation','обязательство')] (шанс [DiplomaticAction.GetRandomAcceptanceChanceWithOweObligation|%0v])"
 AI_MIGHT_ACCEPT_WITH_CALL_IN_OBLIGATION: "@obligation! [COUNTRY.GetName] мо[COUNTRY.GetAltNameNoFormatting('RU_CL_END_GUT')]т принять, если мы #b воспользуемся#! [Concept('concept_obligation','обязательством')] (шанс )"
 AI_MIGHT_ACCEPT_WITH_ACTION: "@indifferent! [COUNTRY.GetName] мо[COUNTRY.GetAltNameNoFormatting('RU_CL_END_GUT')]т согласиться (шанс [DiplomaticAction.GetRandomAcceptanceChanceNoObligation|%0v])"
 AI_WILL_NOT_ACCEPT: "@disapproves! [COUNTRY.GetName] #bold #n НЕ#!#! прим[COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')]"
 AI_WILL_ACCEPT_TOOLTIP: "[DiplomaticAction.GetWillAcceptDesc]\n$TOOLTIP_DELIMITER$\n[DiplomaticAction.GetWillAcceptBreakdown]"
 AI_WILL_ACCEPT_BREAKDOWN: "Расчёт принятия составляет $SCORE|=+$, причина:\n$DETAILS$"
 PLAYER_MIGHT_ACCEPT: "Они могут принять данное предложение"
 PLAYER_MIGHT_ACCEPT_DESC: "[DiplomaticAction.GetSecondCountry.GetName] управля[DiplomaticAction.GetSecondCountry.GetAltNameNoFormatting('RU_CL_END_T')]ся другим игроком ([DiplomaticAction.GetSecondCountry.GetPlayedByDesc]) — ему решать, принимать предложение или нет"
 AI_WILL_ACCEPT_ENTRY_FORMAT: "$SCRIPT_VALUE_KEY_AFTER_FORMAT$"
 AI_DIPLOMATIC_PLAY_SUPPORT_FORMAT: "$VALUE|+=0$ ед. от: $KEY$"
 DIPLOMATIC_ACCEPTANCE_RELATIONS: "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting]о-[SCOPE.sCountry('actor').GetAdjectiveNoFormatting|l]ие [Concept('concept_relations', 'отношения')] — [SCOPE.GetRootScope.GetCountry.GetRelationsWithDesc(SCOPE.sCountry('actor'))]"
 DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH: "[Concept('concept_power_projection', 'Демонстрация силы')] армии [SCOPE.sCountry('target').GetAltNameNoFormatting('RU_CL_RP')] в сравнении с нашей"
 DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH_AGAINST_OVERLORD: "[Concept('concept_power_projection', 'Демонстрация силы')] армии [SCOPE.sCountry('target').GetOverlord.GetAltNameNoFormatting('RU_CL_RP')] в сравнении с нашей"
 DIPLOMATIC_ACCEPTANCE_NAVY_STRENGTH: "[Concept('concept_power_projection', 'Демонстрация силы')] флота [SCOPE.sCountry('target').GetAltNameNoFormatting('RU_CL_RP')] в сравнении с нашей"
 DIPLOMATIC_ACCEPTANCE_ANTI_IMPERIALISM: "Они придерживаются [Concept('concept_ai_strategy', 'стратегии')] #v антиимпериализма#!"
 DIPLOMATIC_ACCEPTANCE_TERRITORIAL_EXPANSION: "Они придерживаются [Concept('concept_ai_strategy', 'стратегии')] #v расширения ядра нации#!"
 DIPLOMATIC_ACCEPTANCE_WORLD_REVOLUTION: "Они придерживаются [Concept('concept_ai_strategy', 'стратегии')] #v мировой революции#!"
 DIPLOMATIC_ACCEPTANCE_COLONIAL_EXPANSION: "Они придерживаются [Concept('concept_ai_strategy', 'стратегии')] #v колониальной экспансии#!"
 DIPLOMATIC_ACCEPTANCE_INDUSTRIAL_EXPANSION: "Они придерживаются [Concept('concept_ai_strategy', 'стратегии')] #v индустриализации#!"
 DIPLOMATIC_ACCEPTANCE_AGRICULTURAL_EXPANSION: "Они придерживаются [Concept('concept_ai_strategy', 'стратегии')] #v развития сельского хозяйства#!"
 DIPLOMATIC_ACCEPTANCE_RESOURCE_EXPANSION: "Они придерживаются [Concept('concept_ai_strategy', 'стратегии')] #v инвестиций в добывающую промышленность#!"
 DIPLOMATIC_ACCEPTANCE_PLANTATION_ECONOMY: "Они придерживаются [Concept('concept_ai_strategy', 'стратегии')] #v плантаторской экономики#!"
 DIPLOMATIC_ACCEPTANCE_ECONOMIC_IMPERIALISM: "Они придерживаются [Concept('concept_ai_strategy', 'стратегии')] #v экономического империализма#!"
 DIPLOMATIC_ACCEPTANCE_MAINTAIN_POWER_BALANCE: "Они придерживаются [Concept('concept_ai_strategy', 'стратегии')] #v поддержки равновесия сил#!"
 DIPLOMATIC_ACCEPTANCE_UNRECOGNIZED: "[SCOPE.sCountry('actor').GetName] — [Concept('concept_unrecognized_power','непризнанная держава')]"
 DIPLOMATIC_ACCEPTANCE_LEGITIMACY: "[Concept('concept_legitimacy','Легитимность')] [SCOPE.GetRootScope.GetCountry.GetAltName('RU_CL_RP')] ([SCOPE.GetRootScope.GetCountry.GetGovernmentLegitimacy|v])"
 DIPLOMATIC_ACCEPTANCE_NATIONAL_MILITIA: "Они приняли закон «[GetLawType('law_national_militia').GetName]»"
 DIPLOMATIC_ACCEPTANCE_DISALLOWED_TRADE: "Они запретили [Concept('concept_trade','торговлю')]"
 DIPLOMATIC_ACCEPTANCE_DISALLOWED_TRADE_FIRST: "Мы запретили [Concept('concept_trade','торговлю')]"
 DIPLOMATIC_ACCEPTANCE_HIGH_ECONOMIC_DEPENDENCE: "Они экономически зависят от нас"
 DIPLOMATIC_ACCEPTANCE_HIGH_ECONOMIC_DEPENDENCE_FIRST: "Мы экономически зависим от них"
 DIPLOMATIC_ACCEPTANCE_LOW_ECONOMIC_DEPENDENCE: "Они экономически независимы от нас"
 DIPLOMATIC_ACCEPTANCE_LOW_ECONOMIC_DEPENDENCE_FIRST: "Мы экономически независимы от них"
 DIPLOMATIC_ACCEPTANCE_MILITARY_SPENDING: "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting]ие военные расходы"
 DIPLOMATIC_ACCEPTANCE_MILITARY_SPENDING_FIRST: "Наши военные расходы"
 DIPLOMATIC_ACCEPTANCE_SAME_RELIGION: "У нас общая [Concept('concept_state_religion', 'государственная религия')] — [SCOPE.GetRootScope.GetCountry.GetStateReligion.GetName|l]"
 DIPLOMATIC_ACCEPTANCE_DIFFERENT_RELIGION_BUT_SAME_TRAIT: "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting|l]ая [Concept('concept_state_religion', 'государственная религия')] отличается от нашей, но обладает схожей [Concept('concept_religious_trait', 'религиозной особенностью')]"
 DIPLOMATIC_ACCEPTANCE_DIFFERENT_RELIGION: "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting|l]ая [Concept('concept_state_religion', 'государственная религия')] отличается от нашей"
 DIPLOMATIC_ACCEPTANCE_TECH_SPREAD_VALUE: "Их скорость [Concept('concept_technology_spread','распространения технологий')]"
 DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE: "Идеологические различия наших [Concept('concept_government', 'правительств')]"
 DIPLOMATIC_ACCEPTANCE_IS_IN_WAR_TOGETHER: "Мы на одной стороне в [Concept('concept_war', 'войне')]"
 DIPLOMATIC_ACCEPTANCE_NO_CUSTOMS_UNION: "Мы #b не#! состоим в [Concept('concept_customs_union', 'таможенном союзе')]"
 DIPLOMATIC_ACCEPTANCE_POWERFUL_PROTECTORS_US: "У нас могущественные покровители"
 DIPLOMATIC_ACCEPTANCE_TRUCE: "Мы заключили [Concept('concept_truce','перемирие')]"
 DIPLOMATIC_ACCEPTANCE_INFLUENCE_PAYMENTS: "[SCOPE.sCountry('actor').GetAdjectiveNoFormatting]ое финансовое влияние на эту страну"
 DIPLOMATIC_ACCEPTANCE_GIVING_AWAY_LAND: "[concept_state] в подарок"
 DIPLOMATIC_ACCEPTANCE_STATES_NOT_SET: "[Concept('concept_state','Области')] не выбраны"
 DIPLOMATIC_ACCEPTANCE_TRADE_STATE_FIRST_STATE: "Предложенная область [SCOPE.sState('first_state').GetName]"
 DIPLOMATIC_ACCEPTANCE_TRADE_STATE_SECOND_STATE: "Уступленная область [SCOPE.sState('second_state').GetName]"
 DIPLOMATIC_ACCEPTANCE_DOES_NOT_WANT_FIRST_STATE: "Не хочет #tooltippable_name #tooltip:[SCOPE.sState('first_state').GetTooltipTag],DATA_STATE_NAME_TOOLTIP,StateTooltip [SCOPE.sState('first_state').GetCustom('RU_SL_VP')]#!#!"
 DIPLOMATIC_ACCEPTANCE_TRADE_STATE_SPLIT_STATE_EXCHANGE: "Объединение [Concept('concept_split_state','разделённых регионов')] в регионах [SCOPE.sState('first_state').GetStateRegion.GetName] и [SCOPE.sState('second_state').GetStateRegion.GetName]"
 DIPLOMATIC_ACCEPTANCE_CHANCE_TO_WIN_DIPLOMATIC_PLAY: "Кажущаяся возможность победить [SCOPE.sCountry('actor').GetAltNameNoFormatting('RU_CL_VP')] в [Concept('concept_diplomatic_play', 'дипломатической игре')]"
 DIPLOMATIC_ACCEPTANCE_ACTOR_ECONOMIC_DEPENDENCE: "[Concept('concept_economic_dependence','Экономическая зависимость')] [SCOPE.sCountry('actor').GetAltNameNoFormatting('RU_CL_RP')] от [Concept('concept_overlord','сюзерена')]"
 DIPLOMATIC_ACCEPTANCE_TARGET_ECONOMIC_DEPENDENCE: "[Concept('concept_economic_dependence','Экономическая зависимость')] [SCOPE.GetRootScope.GetCountry.GetAltNameNoFormatting('RU_CL_RP')] от [Concept('concept_overlord','сюзерена')]"
 DIPLOMATIC_ACCEPTANCE_ACTOR_LIBERTY_DESIRE: "[Concept( 'concept_liberty_desire', 'Желание свободы' )] [SCOPE.sCountry('actor').GetAltNameNoFormatting('RU_CL_RP')]"
 DIPLOMATIC_ACCEPTANCE_TARGET_LIBERTY_DESIRE: "[Concept('concept_liberty_desire','Желание свободы' )] [SCOPE.GetRootScope.GetCountry.GetAltNameNoFormatting('RU_CL_RP')]"
 DIPLOMATIC_ACCEPTANCE_ACTOR_CAPITAL_MARKET_ACCESS: "[Concept('concept_market_access','Доступность рынка')] в городе [SCOPE.sCountry('other_country').GetCapital.GetNameNoFormatting]"
 #Shared with treaties
 DIPLOMATIC_ACCEPTANCE_BASE: "Базовое нежелание"
 DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION: "Идеологическое сходство наших [Concept('concept_government', 'правительств')]"
 DIPLOMATIC_ACCEPTANCE_ISOLATIONIST: "Они придерживаются [Concept('concept_ai_strategy', 'стратегии')] #v защиты границ#!"
 DIPLOMATIC_ACCEPTANCE_POWERFUL_PROTECTORS_THEM: "У них могущественные покровители"
 DIPLOMATIC_ACCEPTANCE_INFAMY: "Уровень нашей [Concept('concept_infamy', 'дурной славы')] — [SCOPE.sCountry('actor').GetInfamyLabel]"
 DIPLOMATIC_ACCEPTANCE_DECREASED_COHESION: "Снижение [Concept('concept_power_bloc_cohesion','сплочённости')] в случае присоединения [SCOPE.sCountry('target').GetAltName('RU_CL_RP')]"
 DIPLOMATIC_ACCEPTANCE_ATTITUDE: "[SCOPE.sCountry('target').GetAdjectiveNoFormatting]ие [Concept('concept_attitude','намерения')] по отношению к [SCOPE.sCountry('actor').GetAltName('RU_CL_DP')] — [SCOPE.sCountry('target').GetAttitudeTowards(SCOPE.sCountry('actor')).GetName]"
 DIPLOMATIC_ACCEPTANCE_FROM_IDENTITY: "[SCOPE.sCountry('actor').GetPowerBloc.GetIdentity.GetName]"
 DIPLOMATIC_ACCEPTANCE_RANK: "[SCOPE.sCountry('target').GetAdjectiveNoFormatting]ий [Concept('concept_rank', 'рейтинг')] ([SCOPE.sCountry('target').GetRank|l]) в сравнении с [SCOPE.sCountry('actor').GetAdjectiveNoFormatting|l]им [Concept('concept_rank', 'рейтингом')] ([SCOPE.sCountry('actor').GetRank|l])"
 DIPLOMATIC_ACCEPTANCE_HIGH_GDP: "Сумма, на которую #tooltippable_name [SCOPE.sCountry('target').GetAdjective|l]ий#! $GDP_SHORT$ превышает #v @money!2,0 млн#!"
 DIPLOMATIC_ACCEPTANCE_LEVERAGE: "[Concept('concept_power_bloc_leverage','Влияние')] блока «[SCOPE.sCountry('actor').GetPowerBloc.GetName]» на [SCOPE.sCountry('target').GetAltName('RU_CL_VP')]"
 DIPLOMATIC_ACCEPTANCE_LEVERAGE_OF_TARGET: "[Concept('concept_power_bloc_leverage','Влияние')] блока «[SCOPE.sCountry('target').GetPowerBloc.GetName]» на [SCOPE.sCountry('actor').GetAltName('RU_CL_VP')]"
 DIPLOMATIC_ACCEPTANCE_COHESION: "[Concept('concept_power_bloc_cohesion','Сплочённость')] блока «[SCOPE.sCountry('actor').GetPowerBloc.GetName]»"
 DIPLOMATIC_ACCEPTANCE_COHESION_OF_TARGET: "[Concept('concept_power_bloc_cohesion','Сплочённость')] блока «[SCOPE.sCountry('target').GetPowerBloc.GetName]»"
 DIPLOMATIC_ACCEPTANCE_IDENTITY_AFFINITY_TO_RANK: "Близость блока «[SCOPE.sCountry('actor').GetPowerBloc.GetName]» к [SCOPE.sCountry('target').GetAdjectiveNoFormatting|l]ому [Concept('concept_rank','рейтингу')] ([SCOPE.sCountry('target').GetRank|l])"
 DIPLOMATIC_ACCEPTANCE_FELLOW_SUBJECT: "[Concept('concept_subject','Субъект')] того же [Concept('concept_overlord','сюзерена')]"
 DIPLOMATIC_ACCEPTANCE_ATTITUDE_TOWARDS_OWN_OVERLORD: "[SCOPE.sCountry('target').GetAdjectiveNoFormatting]ие [Concept('concept_attitude','намерения')] по отношению к [SCOPE.sCountry('target').GetOverlord.GetAltName('RU_CL_DP')] — [SCOPE.sCountry('target').GetAttitudeTowards(SCOPE.sCountry('target').GetOverlord).GetName|l]"
 DIPLOMATIC_ACCEPTANCE_ATTITUDE_TOWARDS_ACTOR_OVERLORD: "[SCOPE.sCountry('target').GetAdjectiveNoFormatting]ие [Concept('concept_attitude','намерения')] по отношению к [SCOPE.sCountry('actor').GetOverlord.GetAltName('RU_CL_DP')] — [SCOPE.sCountry('target').GetAttitudeTowards(SCOPE.sCountry('actor').GetOverlord).GetName|l]"
 DIPLOMATIC_ACCEPTANCE_GDP: "[SCOPE.sCountry('target').GetAdjectiveNoFormatting]ий $GDP_SHORT$ (@money![SCOPE.sCountry('target').GetGDP|Dv]) в сравнении с нашим $GDP_SHORT$ (@money![SCOPE.sCountry('actor').GetGDP|Dv])"
 DIPLOMATIC_ACCEPTANCE_NEIGHBORS: "Мы и [SCOPE.sCountry('target').GetName] являемся [Concept('concept_neighbors','соседями')]."
 DIPLOMATIC_ACCEPTANCE_LOW_CONSTRUCTION: "[SCOPE.sCountry('target').GetNameNoFormatting] облада[SCOPE.sCountry('target').GetAltNameNoFormatting('RU_CL_END_T')] ограниченными строительными мощностями"
 DIPLOMATIC_ACCEPTANCE_ALLIED_TO_RIVALS: "Мы состоим в [Concept('concept_alliance', 'союзе')] или [Concept('concept_defensive_pact','оборонительном пакте')] с [Concept('concept_rivalry','соперниками')] [SCOPE.sCountry('target').GetAltNameNoFormatting('RU_CL_RP')]"
 DIPLOMATIC_ACCEPTANCE_ALLIED_TO_ALLIES: "Мы состоим в [Concept('concept_alliance', 'союзе')] или [Concept('concept_defensive_pact','оборонительном пакте')] с союзниками [SCOPE.sCountry('target').GetAltNameNoFormatting('RU_CL_RP')]"
 DIPLOMATIC_ACCEPTANCE_SHARED_RIVALS: "У нас общие [Concept('concept_rivalry','соперники')]"
 DIPLOMATIC_ACCEPTANCE_NUM_ALLIES: "Общее число [SCOPE.sCountry('target').GetAdjectiveNoFormatting|l]их [Concept('concept_alliance','союзов')]"
 DIPLOMATIC_ACCEPTANCE_NUM_MILITARY_ASSISTANCE_PACTS: "Общее число [SCOPE.sCountry('actor').GetAdjectiveNoFormatting|l]их договоров о [Concept('concept_military_assistance','военной помощи')]"
 DIPLOMATIC_ACCEPTANCE_NUM_MILITARY_ASSISTANCE_PACTS_TARGET: "Общее число [SCOPE.sCountry('target').GetAdjectiveNoFormatting|l]их договоров о [Concept('concept_military_assistance','военной помощи')]"
 DIPLOMATIC_ACCEPTANCE_NUM_DEFENSIVE_PACTS: "Общее число [SCOPE.sCountry('target').GetAdjectiveNoFormatting|l]их [Concept('concept_defensive_pact','оборонительных пактов')]"
 DIPLOMATIC_ACCEPTANCE_DEFENSIVE_PACT: "У нас заключён [Concept('concept_defensive_pact', 'оборонительный пакт')]"
 DIPLOMATIC_ACCEPTANCE_ALLIANCE: "Мы заключили [Concept('concept_alliance', 'союз')]"
 DIPLOMATIC_ACCEPTANCE_TRADE_PRIVILEGES: "Мы получаем [Concept('concept_trade_privilege','торговые привилегии')]"
 DIPLOMATIC_ACCEPTANCE_MUTUAL_TRADE_VALUE: "Суммарная денежная ценность нашей обоюдной [Concept('concept_trade','торговли')]"
 DIPLOMATIC_ACCEPTANCE_FOREIGN_INVESTMENT_RIGHTS: "У них есть [Concept('concept_foreign_investment_rights','права на зарубежные инвестиции')]"
 DIPLOMATIC_ACCEPTANCE_SAME_POWER_BLOC: "В одном [Concept('concept_power_bloc','блоке государств')]"
 DIPLOMATIC_ACCEPTANCE_DIFFERENT_POWER_BLOC: "В другом [Concept('concept_power_bloc','блоке государств')]"
 DIPLOMATIC_ACCEPTANCE_DEBT: "Количество #tooltippable_name [SCOPE.GetRootScope.GetCountry.GetAdjective|l]их#! [Concept('concept_loans', 'займов')]"
 DIPLOMATIC_ACCEPTANCE_GOLD_RESERVES: "Объём [SCOPE.GetRootScope.GetCountry.GetAdjective|l]ого [Concept('concept_gold_reserves', 'золотого запаса')]"
 DIPLOMATIC_ACCEPTANCE_INCOMPATIBLE_ECONOMIC_SYSTEMS: "У нас несовместимые экономические системы"
 DIPLOMATIC_ACCEPTANCE_IS_CHINA: "От внутренней политики Китая"
 DIPLOMATIC_ACCEPTANCE_POWERFUL_ENEMY_IN_WAR: "В состоянии [Concept('concept_war','войны')] с более сильным врагом"
 DIPLOMATIC_ACCEPTANCE_POWERFUL_ENEMY_IN_WAR_FIRST: "Мы ведём [Concept('concept_war','войну')] с более сильным врагом"
 DIPLOMATIC_ACCEPTANCE_LIBERTY_DESIRE: "[Concept('concept_liberty_desire','Желание свободы')] этой [Concept('concept_country','страны')]"
 DIPLOMATIC_ACCEPTANCE_TRADE_STATE_SOURCE: "Предложенная область"
 DIPLOMATIC_ACCEPTANCE_TRADE_STATE_TARGET: "Передача области"
 DIPLOMATIC_ACCEPTANCE_TRADE_STATE_REJECT: "Не хочет эту область"
 DIPLOMATIC_ACCEPTANCE_TARGET_PRO_LOBBY_CLOUT: "[Concept('concept_clout', 'Уровень влияния')] про[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting|l]ого [Concept('concept_political_lobby', 'лобби')] в [SCOPE.sCountry('other_country').GetAltNameNoFormatting('RU_CL_PP')]"
 DIPLOMATIC_ACCEPTANCE_TARGET_ANTI_LOBBY_CLOUT: "[Concept('concept_clout', 'Уровень влияния')] анти[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting|l]ого [Concept('concept_political_lobby', 'лобби')] в [SCOPE.sCountry('other_country').GetAltNameNoFormatting('RU_CL_PP')]"
 DIPLOMATIC_ACCEPTANCE_SOURCE_PRO_LOBBY_CLOUT: "[Concept('concept_clout', 'Уровень влияния')] про[SCOPE.sCountry('other_country').GetAdjectiveNoFormatting|l]ого [Concept('concept_political_lobby', 'лобби')] в [SCOPE.GetRootScope.GetCountry.GetAltNameNoFormatting('RU_CL_PP')]"
 DIPLOMATIC_ACCEPTANCE_SOURCE_ANTI_LOBBY_CLOUT: "[Concept('concept_clout', 'Уровень влияния')] про[SCOPE.sCountry('other_country').GetAdjectiveNoFormatting|l]ого [Concept('concept_political_lobby', 'лобби')] в [SCOPE.GetRootScope.GetCountry.GetAltNameNoFormatting('RU_CL_PP')]"
 ### Diplomatic Acceptance Strings for Treaties
 DIPLOMATIC_ACCEPTANCE_UNTRUSTWORTHY_COUNTRY: "$modifier_untrustworthy_country$"
 DIPLOMATIC_ACCEPTANCE_GIFT: "Рады получить этот [Concept('concept_article','пункт')]"
 DIPLOMATIC_ACCEPTANCE_BINDING_PERIOD: "От срока исполнения обязательств"
 DIPLOMATIC_ACCEPTANCE_BASE_ADDITIONAL: "Базовое нежелание подписать пункт"
 DIPLOMATIC_ACCEPTANCE_INPUT_QUANTITY: "От количества предложений"
 DIPLOMATIC_ACCEPTANCE_DOES_NOT_WANT_ARTICLE: "Отсутствует интерес к пункту"
 DIPLOMATIC_ACCEPTANCE_NO_LONGER_WANTS_ARTICLE: "Пункт больше не интересен"
 DIPLOMATIC_ACCEPTANCE_VALUE_OF_STATES_IN_REGION: "Стоимость #tooltippable_name [SCOPE.GetRootScope.GetCountry.GetAdjective|l]их#! [Concept('concept_state', 'областей')] в [Concept('concept_strategic_region','стратегическом регионе')]"
 DIPLOMATIC_ACCEPTANCE_BUDGET_SURPLUS: "От профицита #tooltippable_name [SCOPE.GetRootScope.GetCountry.GetAdjective|l]ого#! бюджета"
 DIPLOMATIC_ACCEPTANCE_BUDGET_DEFICIT: "От дефицита #tooltippable_name [SCOPE.GetRootScope.GetCountry.GetAdjective|l]ого#! бюджета"
 DIPLOMATIC_ACCEPTANCE_MONEY_TRANSFER_CAP: "Текущие #tooltippable_name [SCOPE.GetRootScope.GetCountry.GetAdjective|l]ие#! расходы на передачу денег"
 DIPLOMATIC_ACCEPTANCE_TRANSIT_RIGHTS_VALUE: "Ценность права на транзит"
 DIPLOMATIC_ACCEPTANCE_EQUAL_EXCHANGE: "Равный обмен"
 DIPLOMATIC_ACCEPTANCE_VALUE_OF_BUILDING_TYPE: "Ценность типа сооружений"
 DIPLOMATIC_ACCEPTANCE_WANTS_TO_EXPORT: "Желаемый экспорт"
 DIPLOMATIC_ACCEPTANCE_WANTS_TO_IMPORT: "Желаемый импорт"
 DIPLOMATIC_ACCEPTANCE_WANTS_TO_TRADE: "Хочет беспрепятственную торговлю этим товаром"
 DIPLOMATIC_ACCEPTANCE_DOMESTIC_PRODUCTION: "От затронутого внутреннего продукта"
 DIPLOMATIC_ACCEPTANCE_LIKES_LAW: "Правительство страны одобряет этот закон"
 DIPLOMATIC_ACCEPTANCE_ANTI_SLAVERY: "Хочет отмены рабства"
 DIPLOMATIC_ACCEPTANCE_RECENTLY_TRADED_STATES: "Недавний обмен областями"
 LOBBY_OPPORTUNITY_BONUS: "Дополнительная возможность от про[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting|l]ого [Concept('concept_political_lobby', 'лобби')]"
 AT_WAR_WITH_UNFRIENDLY_COUNTRY: "Мы ведём [Concept('concept_war','войну')] с общим врагом"
 AT_WAR_WITH_FRIENDLY_COUNTRY: "Мы ведём [Concept('concept_war','войну')] с их союзником"
 GREAT_GAME_BONUS: "От интересов в Большой игре"
 DIPLOMATIC_INCIDENT_WARGOAL_DESC: "Данное требование вызовет [Concept('concept_diplomatic_incident', 'дипломатический инцидент')] в регионе $STRATEGIC_REGION$. [concept_infamy] [COUNTRY.GetAltName('RU_CL_RP')] увеличится на #N #B #tooltippable #tooltip:$INFAMY_BREAKDOWN_TAG$ $INFAMY_AMOUNT|1$#!#!#!#!. $RELATIONS$ ухудшатся с #tooltippable #tooltip:$RELATIONS_BREAKDOWN_TAG$ $NUM_COUNTRIES_IMPACTED|v$ государствами#!#!"
 DIPLOMATIC_INCIDENT_NON_WARGOAL_DESC: "Вызовет [Concept('concept_diplomatic_incident', 'дипломатический инцидент')] в регионе $STRATEGIC_REGION$. [concept_infamy] [COUNTRY.GetAltName('RU_CL_RP')] увеличится на #N #B #tooltippable #tooltip:$INFAMY_BREAKDOWN_TAG$ $INFAMY_AMOUNT|1$#!#!#!#!. $RELATIONS$ ухудшатся с #tooltippable #tooltip:$RELATIONS_BREAKDOWN_TAG$ $NUM_COUNTRIES_IMPACTED|v$ государствами#!#!"
 DIPLOMATIC_INCIDENT_RELATIONS_IMPACT: "[COUNTRY.GetAdjectiveNoFormatting]ие [Concept('concept_relations', 'отношения')] с [COUNTRY_THIRD_PARTY.GetAltName('RU_CL_TP')]: $AMOUNT|=+$"
 WARGOAL_BASE_TYPE_VALUE: "Базовое значение ($TYPE$): #BOLD $VAL|Dv$#!"
 WARGOAL_MULT_FROM_POPULATION: "Умножается на #v x$MULT$#! за счёт суммарного населения цели"
 WARGOAL_PRIMARY_IS_FREE: "Первая [Concept('concept_war_goal', 'цель войны')] никогда не стоит [Concept('concept_maneuver', 'дипломатических манёвров')]"
 INFAMY_EFFECT_FROM_RANK: "[COUNTRY.GetName] име[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] ранг $RANK_NAME|v$: $EFFECT|%=-$"
 WARGOAL_MULT_FROM_HOMELANDS: "[COUNTRY.GetName] считает цель своей [Concept('concept_homeland', 'родиной')]: $EFFECT|%=-$"
 WARGOAL_MULT_FROM_UNINCORPORATED_STATE: "Цель является [Concept('concept_unincorporated_state', 'невключённой областью')]: $EFFECT|%=-$"
 WARGOAL_MULT_FROM_UNINCORPORATED_STATES: "Цель включает [Concept('concept_unincorporated_state','невключённые области')]: $EFFECT|%=-$"
 WARGOAL_MULT_FROM_OWN_SUBJECT: "Умножается на #v x$EFFECT$#!, поскольку [TARGET_COUNTRY.GetName] явля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_subject', 'субъектом')] [COUNTRY.GetAltName('RU_CL_RP')]"
 #Power Bloc Sacred Civics Principle
 DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS: "[Concept('concept_power_bloc_principle','Принцип')] «$principle_group_sacred_civics$»"
 RELATIONS: "[Concept('concept_relations', 'Отношения')]"
 ATTITUDE: "[Concept('concept_attitude', 'Намерения')]"
 AI_STRATEGIES: "[Concept('concept_ai_strategy', '$concept_ai_strategies$')]"
 DIPLO_ACTION_IS_ACTIVE: "#i Действует#!"
 DIPLO_ACTION: "[DIPLOMATIC_ACTION.GetName]"
 DIPLO_ACTION_PROPOSE: "[DIPLOMATIC_ACTION.GetProposeName]"
 DIPLO_ACTION_BREAK: "[DIPLOMATIC_ACTION.GetBreakName]"
 DIPLO_ACTION_ASK_TO_BREAK: "[DIPLOMATIC_ACTION.GetAskToBreakName]"
 DIPLOMATIC_ACTION_TOO_SOON: "Мы сможем продолжить дипломатические контакты с государством #variable $COUNTRY$#! после #variable $DATE$#!."
 TREATY_PROPOSAL_DECLINED_TOO_SOON: "Мы сможем отправить новое предложение #variable [COUNTRY.GetAltName('RU_CL_DP')]#! после #variable $DATE$#!"
 CANNOT_AFFORD_DIPLO_PACT: "Нужно хотя бы @inf!#BOLD #V $COST|1=+$#!#!, чтобы продолжать данное [Concept('concept_diplomatic_action', 'дипломатическое действие')]"
 NO_POSSIBLE_STATES_TO_SELECT: "Нет подходящих [Concept('concept_state', 'областей')]"
 COUNTRY_IS_A_SUBJECT_OF: "[COUNTRY.GetName] явля[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_subject', 'субъектом')] [TARGET_COUNTRY.GetAltName('RU_CL_RP')]"
 DIPLOMATIC_ACTION_MAINTENANCE_COST: "Стоимость содержания: @inf!$COST|v0$ [Concept('concept_influence', 'влияния')]"
 DIPLOMATIC_ACTION_MAINTENANCE_COST_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ @inf!$COST|0v$#!#!"
 DIPLOMATIC_ACTION_MAINTENANCE_COST_DESC: "#header Стоимость содержания ($NAME$): @inf!$COST|v0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 DIPLO_ACTION_REVERSE_PACT_ALREADY_ACTIVE: "Этот пакт уже заключён"
 DIPLO_ACTION_PENDING: "Наше предложение ждёт одобрения"
 DIPLO_ACTION_PENDING_OTHER: "Эта страна уже рассматривает наше предложение"
 DIPLO_ACTION_REVERSE_PENDING: "Их предложение ждёт одобрения"
 DIPLO_PACT_RELATIONS_CHANGE_POS: "Сейчас улучшает [Concept('concept_relations', 'отношения')] на #g 1#! раз в $DAYS|v$ дн. от суммарного прогресса, равного #v $PROGRESS_DAILY|%+=2$#!"
 DIPLO_PACT_RELATIONS_CHANGE_NEG: "Сейчас ухудшает [Concept('concept_relations', 'отношения')] на #r 1#! раз в $DAYS|v$ дн. от суммарного прогресса, равного #v $PROGRESS_DAILY|%+=2$#!"
 DIPLO_ACTION_FORCED_DURATION: "Мы не можем расторгнуть этот [Concept('concept_diplomatic_pact','пакт')] в течение $TIME_LEFT$ ($DATE$)"
 DIPLOMATIC_PACT_HEADER: "#header [DiplomaticPact.GetName]#!"
 DIPLOMATIC_PACT_DESC: "[DiplomaticPact.GetDesc]"
 DIPLOMATIC_PACT_TOOLTIP: "$DIPLOMATIC_PACT_HEADER$\n$TOOLTIP_DELIMITER$\n$DIPLOMATIC_PACT_DESC$"
 RELATIONS_CHANGE_MAX_CAP: "(Макс: $MAX_VALUE|=+$)"
 RELATIONS_CHANGE_MIN_CAP: "(Мин: $MIN_VALUE|=+$)"
 RELATIONS_CHANGE_EFFECT: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $PROGRESS_DAILY|%+=2$#!#!#! прогресса, источник: $NAME$$CAPDESC$"
 DIPLO_PACT_RELATIONS_EFFECT_BASE_VALUE: "#v $VAL|%2=+$#! базового значения"
 DIPLO_PACT_RELATIONS_BREAKDOWN_FORMAT: "#header Прогресс [Concept('concept_relations','отношений')]#!\n#v $DAYS$#! дн. до [SelectLocalization( LessThan_CFixedPoint( '(CFixedPoint)$PROGRESS_DAILY|5$', '(CFixedPoint)0' ), '#r -', '#g ' )]100%#!\n$TOOLTIP_DELIMITER$\nЕжедневный прогресс составляет #v $PROGRESS_DAILY|%2=+$#!, причины:\n$BREAKDOWN$"
 DIPLO_PACT_RELATIONS_CHANGE_TOTAL: "\n$DESC$, причины:#indent_newline:3  \n$DESC_DETAILS$#!"
 FORCE_REGIME_CHANGE_GOV_PRINCIPLES_DIST_POWER_PROGRESSIVENESS_DIFFERENCE: "#indent_newline:3 [SCOPE.GetRootScope.GetCountry.GetName] и [SCOPE.sC('target_country').GetName] обладают кардинально разными [Concept('concept_law','законами')] в категориях «[GetLawGroup('lawgroup_governance_principles').GetName]» и «[GetLawGroup('lawgroup_distribution_of_power').GetName]»\n[SCOPE.GetRootScope.GetCountry.GetName]: [SCOPE.GetRootScope.GetCountry.GetActiveLawFromGroup('lawgroup_governance_principles').GetName|l] и [SCOPE.GetRootScope.GetCountry.GetActiveLawFromGroup('lawgroup_distribution_of_power').GetName|l]\n[SCOPE.sC('target_country').GetName]: [SCOPE.sC('target_country').GetActiveLawFromGroup('lawgroup_governance_principles').GetName|l] и [SCOPE.sC('target_country').GetActiveLawFromGroup('lawgroup_distribution_of_power').GetName|l]#!"
 #Unilateral actions
 increase_relations: "Улучшение отношений"
 increase_relations_action_name: "Улучшение [Concept('concept_relations', 'отношений')]"
 increase_relations_action_propose_name: "Начать улучшение [Concept('concept_relations', 'отношений')]"
 increase_relations_action_break_name: "Прекратить улучшение [Concept('concept_relations', 'отношений')]"
 increase_relations_desc: "Постепенно улучшает [Concept('concept_relations', 'отношения')] между двумя [Concept('concept_country', 'странами')]."
 increase_relations_country_info: "Сейчас [TARGET_COUNTRY.GetRelationsWithDesc(GetPlayer.Self)] (#tooltippable #tooltip:[GetRawTextTooltipTag(TARGET_COUNTRY.GetRelationsTooltip(GetPlayer.Self))] [TARGET_COUNTRY.GetRelationsWith(GetPlayer.Self)|+]#!#!) [Concept('concept_relations', 'отношения')] с [TARGET_COUNTRY.GetAltName('RU_CL_TP')]"
 increase_relations_action_notification_name: "Государство [INITIATOR_COUNTRY.GetName] стремится улучшить [Concept('concept_relations', 'отношения')]"
 increase_relations_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] стара[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltNameNoFormatting('RU_CL_END_T')]ся улучшить [Concept('concept_relations', 'отношения')] с [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('RU_CL_TP')]."
 increase_relations_action_notification_desc: "[INITIATOR_COUNTRY.GetName] предпринима[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] попытки улучшить [Concept('concept_relations','отношения')] между нашими державами, которые сейчас находятся на уровне #tooltippable #tooltip:[GetRawTextTooltipTag(INITIATOR_COUNTRY.GetRelationsTooltip(GetPlayer))] [INITIATOR_COUNTRY.GetRelationsWithDesc( GetPlayer )|+]#!#! (#BOLD #tooltippable #tooltip:[GetRawTextTooltipTag(INITIATOR_COUNTRY.GetRelationsTooltip(GetPlayer))] [INITIATOR_COUNTRY.GetRelationsWith( GetPlayer )|+]#!#!#!). Их [Concept('concept_attitude','намерения')] по отношению к [GetPlayer.GetAltName('RU_CL_DP')] — #tooltippable #tooltip:[INITIATOR_COUNTRY.GetTooltipTag],COUNTRY_ATTITUDE_TOOLTIP [INITIATOR_COUNTRY.GetAttitudeTowards(GetPlayer).GetName]#!#!."
 increase_relations_action_notification_break_name: "[INITIATOR_COUNTRY.GetName] прекраща[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] попытки улучшить [Concept('concept_relations', 'отношения')]"
 increase_relations_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] прекраща[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] попытки улучшить [Concept('concept_relations', 'отношения')] между нашими державами."
 increase_relations_effect_desc_global: "Начинает улучшать [Concept('concept_relations', 'отношения')]"
 increase_relations_effect_desc_first: "[COUNTRY.GetName] начина[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] улучшать [Concept('concept_relations', 'отношения')] с [TARGET_COUNTRY.GetAltName('RU_CL_TP')]"
 increase_relations_effect_desc_third: "[COUNTRY.GetName] начина[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] улучшать [Concept('concept_relations', 'отношения')] с государством [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 increase_relations_trigger_desc_global: "Улучшает [Concept('concept_relation', 'отношения')]"
 increase_relations_trigger_false_desc_global: "Улучшает [Concept('concept_relation', 'отношения')]"
 increase_relations_trigger_desc_first: "[COUNTRY.GetName] #b не#! улучша[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_relations', 'отношения')] с [TARGET_COUNTRY.GetAltName('RU_CL_TP')]"
 increase_relations_trigger_false_desc_first: "[COUNTRY.GetName] улучша[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_relations', 'отношения')] с [TARGET_COUNTRY.GetAltName('RU_CL_TP')]"
 increase_relations_trigger_desc_third: "[COUNTRY.GetName] #b не#! улучша[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_relations', 'отношения')] с государством [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 increase_relations_trigger_false_desc_third: "[COUNTRY.GetName] #b не#! улучша[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_relations', 'отношения')] с государством [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 damage_relations: "Ухудшение отношений"
 damage_relations_action_name: "Ухудшение [Concept('concept_relations', 'отношений')]"
 damage_relations_action_propose_name: "Начать ухудшение [Concept('concept_relations', 'отношений')]"
 damage_relations_action_break_name: "Прекратить ухудшение [Concept('concept_relations', 'отношений')]"
 damage_relations_desc: "Постепенно ухудшает [Concept('concept_relations', 'отношения')] между двумя [Concept('concept_country', 'странами')]."
 damage_relations_country_info: "Сейчас [TARGET_COUNTRY.GetRelationsWithDesc(GetPlayer.Self)] (#tooltippable #tooltip:[GetRawTextTooltipTag(TARGET_COUNTRY.GetRelationsTooltip(GetPlayer.Self))] [TARGET_COUNTRY.GetRelationsWith(GetPlayer.Self)|+]#!#!) [Concept('concept_relations', 'отношения')] с [TARGET_COUNTRY.GetAltName('RU_CL_TP')]"
 damage_relations_action_notification_name: "Государство [INITIATOR_COUNTRY.GetName] стремится ухудшить [Concept('concept_relations', 'отношения')]"
 damage_relations_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] стара[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltNameNoFormatting('RU_CL_END_T')]ся ухудшить [Concept('concept_relations', 'отношения')] с [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('RU_CL_TP')]."
 damage_relations_action_notification_desc: "[INITIATOR_COUNTRY.GetName] предпринима[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] попытки ухудшить [Concept('concept_relations','отношения')] между нашими державами, которые сейчас находятся на уровне #tooltippable #tooltip:[GetRawTextTooltipTag(INITIATOR_COUNTRY.GetRelationsTooltip(GetPlayer))] [INITIATOR_COUNTRY.GetRelationsWithDesc( GetPlayer )|+]#!#! (#BOLD #tooltippable #tooltip:[GetRawTextTooltipTag(INITIATOR_COUNTRY.GetRelationsTooltip(GetPlayer))] [INITIATOR_COUNTRY.GetRelationsWith( GetPlayer )|+]#!#!#!). Их [Concept('concept_attitude','намерения')] по отношению к [GetPlayer.GetAltName('RU_CL_DP')] — #tooltippable #tooltip:[INITIATOR_COUNTRY.GetTooltipTag],COUNTRY_ATTITUDE_TOOLTIP [INITIATOR_COUNTRY.GetAttitudeTowards(GetPlayer).GetName]#!#!."
 damage_relations_action_notification_break_name: "[INITIATOR_COUNTRY.GetName] прекраща[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] попытки ухудшить [Concept('concept_relations', 'отношения')]"
 damage_relations_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] прекраща[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] попытки ухудшить [Concept('concept_relations', 'отношения')] между нашими державами."
 damage_relations_effect_desc_global: "Начинает ухудшать [Concept('concept_relations', 'отношения')]"
 damage_relations_effect_desc_first: "[COUNTRY.GetName] начина[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] ухудшать [Concept('concept_relations', 'отношения')] с [TARGET_COUNTRY.GetAltName('RU_CL_TP')]"
 damage_relations_effect_desc_third: "[COUNTRY.GetName] начина[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] ухудшать [Concept('concept_relations', 'отношения')] с государством [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 damage_relations_trigger_desc_global: "Ухудшает [Concept('concept_relation', 'отношения')]"
 damage_relations_trigger_false_desc_global: "#b Не#! ухудшает [Concept('concept_relations', 'отношений')]"
 damage_relations_trigger_desc_first: "[COUNTRY.GetName] ухудша[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_relations', 'отношения')] с [TARGET_COUNTRY.GetAltName('RU_CL_TP')]"
 damage_relations_trigger_false_desc_first: "[COUNTRY.GetName] #b не#! ухудша[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_relations', 'отношения')] с [TARGET_COUNTRY.GetAltName('RU_CL_TP')]"
 damage_relations_trigger_desc_third: "[COUNTRY.GetName] ухудша[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_relations', 'отношения')] с государством [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 damage_relations_trigger_false_desc_third: "[COUNTRY.GetName] #b не#! ухудша[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_relations', 'отношения')] с государством [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 redeem_obligation: "Простить обязательство"
 redeem_obligation_action_name: "Простить [Concept('concept_obligation', 'обязательство')]"
 redeem_obligation_action_propose_name: "Простить [Concept('concept_obligation', 'обязательство')]"
 redeem_obligation_desc: "Устраняет [Concept('concept_obligation', 'обязательство')] одной [Concept('concept_country', 'страны')] перед другой в обмен на моментальное улучшение [Concept('concept_relations', 'отношений')]."
 redeem_obligation_action_notification_name: "[Concept('concept_obligation', 'Обязательства')] прощены"
 redeem_obligation_action_notification_desc: "[INITIATOR_COUNTRY.GetName] проща[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наше [Concept('concept_obligation', 'обязательство')] по отношению к нему, что значительно улучшает отношения между нашими державами."
 expel_diplomats: "Высылка дипломатов"
 expel_diplomats_action_name: "Высылка дипломатов"
 expel_diplomats_action_propose_name: "Высылка дипломатов"
 expel_diplomats_desc: "Ухудшает [Concept('concept_relations', 'отношения')] с выбранной страной и не позволяет улучшать отношения с ней в течение ещё #v 5 лет#! ценой роста [Concept('concept_infamy', 'дурной славы')]."
 expel_diplomats_action_notification_name: "Высылка дипломатов"
 expel_diplomats_action_notification_desc: "[INITIATOR_COUNTRY.GetName] высыла[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наших дипломатов, в результате [Concept('concept_relations', 'отношения')] между нашими державами падают до уровня #BOLD [INITIATOR_COUNTRY.GetRelationsWithDesc( GetPlayer )]#! ([INITIATOR_COUNTRY.GetRelationsWith(GetPlayer)|+]). Их [Concept('concept_attitude', 'намерения')] по отношению к [GetPlayer.GetAltName('RU_CL_DP')] — #tooltippable #tooltip:[INITIATOR_COUNTRY.GetTooltipTag],COUNTRY_ATTITUDE_TOOLTIP [INITIATOR_COUNTRY.GetAttitudeTowards(GetPlayer).GetName]#!#!."
 rivalry: "Соперничество"
 rivalry_action_name: "[Concept('concept_rivalry', 'Соперничество')]"
 rivalry_action_propose_name: "Провозгласить [Concept('concept_rivalry', 'соперничество')]"
 rivalry_action_break_name: "Прекратить [Concept('concept_rivalry', 'соперничество')]"
 rivalry_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] счита[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltNameNoFormatting('RU_CL_END_T')] [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('RU_CL_VP')] своим [Concept('concept_rivalry', 'соперником')]."
 rivalry_desc: "Создаёт [Concept('concept_rivalry', 'соперничество')] между двумя [Concept('concept_country', 'странами')]."
 rivalry_action_notification_name: "[INITIATOR_COUNTRY.GetName] провозглаша[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_rivalry', 'соперничество')]"
 rivalry_action_notification_desc: "[INITIATOR_COUNTRY.GetName] объявил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [GetPlayer.GetAltName('RU_CL_VP')] своим [Concept('concept_rivalry','соперником')]. Их [Concept('concept_attitude', 'намерения')] по отношению к [GetPlayer.GetAltName('RU_CL_DP')] — #tooltippable #tooltip:[INITIATOR_COUNTRY.GetTooltipTag],COUNTRY_ATTITUDE_TOOLTIP [INITIATOR_COUNTRY.GetAttitudeTowards(GetPlayer).GetName]#!#!."
 rivalry_action_notification_third_party_name: "Объявлено [INITIATOR_COUNTRY.GetAdjectiveNoFormatting|l]о-[TARGET_COUNTRY.GetAdjectiveNoFormatting|l]ое [Concept('concept_rivalry', 'соперничество')]"
 rivalry_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetName] объявил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [TARGET_COUNTRY.GetAltNameNoFlag('RU_CL_VP')] своим [Concept('concept_rivalry', 'соперником')]."
 rivalry_action_notification_break_name: "[INITIATOR_COUNTRY.GetName] прекраща[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_rivalry', 'соперничество')]"
 rivalry_action_notification_break_desc: "Государство [INITIATOR_COUNTRY.GetName] больше не считает [GetPlayer.GetAltName('RU_CL_VP')] своим [Concept('concept_rivalry', 'соперником')]."
 rivalry_action_notification_third_party_break_name: "[INITIATOR_COUNTRY.GetAdjectiveNoFormatting]о-[TARGET_COUNTRY.GetAdjectiveNoFormatting|l]ое [Concept('concept_rivalry', 'соперничество')] завершилось"
 rivalry_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetName] прекраща[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_rivalry', 'соперничество')] с [TARGET_COUNTRY.GetAltName('RU_CL_TP')]."
 rivalry_effect_desc_global: "Провозглашает [Concept('concept_rivalry', 'соперничество')]"
 rivalry_effect_desc_first: "[COUNTRY.GetNameNoFlag] объявля[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_rivalry','соперничество')] [TARGET_COUNTRY.GetAltName('RU_CL_DP')]"
 rivalry_effect_desc_third: "[COUNTRY.GetName] объявля[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [concept_rivalry|l] с государством [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 rivalry_trigger_desc_global: "Имеет [Concept('concept_rivalry', 'соперничество')]"
 rivalry_trigger_false_desc_global: "#b Не#! имеет [Concept('concept_rivalry', 'соперничества')]"
 rivalry_trigger_desc_first: "[COUNTRY.GetNameNoFlag] #tooltippable_name [Concept('concept_rivalry','сопернича')][COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]#! с [TARGET_COUNTRY.GetAltName('RU_CL_TP')]"
 rivalry_trigger_false_desc_first: "[COUNTRY.GetNameNoFlag] #b не#! #tooltippable_name [Concept('concept_rivalry','сопернича')][COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]#! с [TARGET_COUNTRY.GetAltName('RU_CL_TP')]"
 rivalry_trigger_desc_third: "[COUNTRY.GetName] име[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_rivalry', 'соперничество')] с государством [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 rivalry_trigger_false_desc_third: "[COUNTRY.GetName] #b не#! име[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_rivalry', 'соперничества')] с государством [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 fund_lobbies_trigger_desc_global: "[Concept('concept_fund_lobbies','Финансирует лоббистов')]"
 fund_lobbies_trigger_false_desc_global: "#b Не#! [Concept('concept_fund_lobbies','финансирует лоббистов')]"
 fund_lobbies_trigger_desc_first: "[COUNTRY.GetName] #tooltippable_name [Concept('concept_fund_lobbies','финансиру')][COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] лоббистов#! в [TARGET_COUNTRY.GetAltName('RU_CL_PP')]"
 fund_lobbies_trigger_false_desc_first: "[COUNTRY.GetName] #b не#! #tooltippable_name [Concept('concept_fund_lobbies','финансиру')][COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] лоббистов#! в [TARGET_COUNTRY.GetAltName('RU_CL_PP')]"
 fund_lobbies_trigger_desc_third: "[COUNTRY.GetName] #tooltippable_name [Concept('concept_fund_lobbies','финансиру')][COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] лоббистов#! в государстве [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 fund_lobbies_trigger_false_desc_third: "[COUNTRY.GetName] #b не#! #tooltippable_name [Concept('concept_fund_lobbies','финансиру')][COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] лоббистов#! в государстве [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 embargo: "Эмбарго"
 embargo_action_name: "[concept_embargo]"
 embargo_action_propose_name: "[concept_embargo]"
 embargo_action_break_name: "Закончить [Concept('concept_embargo', 'эмбарго')]"
 embargo_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] объявля[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_embargo', 'эмбарго')] [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('RU_CL_DP')]."
 embargo_desc: "Накладывает [Concept('concept_embargo', 'эмбарго')] на другую [Concept('concept_country', 'страну')]."
 embargo_action_notification_name: "[concept_embargo]"
 embargo_action_notification_desc: "[INITIATOR_COUNTRY.GetName] объявил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [GetPlayer.GetAltName('RU_CL_DP')] [Concept('concept_embargo', 'эмбарго')]."
 embargo_action_notification_third_party_name: "[concept_embargo]"
 embargo_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetName] объявил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [Concept('concept_embargo', 'эмбарго')] [TARGET_COUNTRY.GetAltName('RU_CL_DP')]."
 embargo_action_notification_break_name: "[concept_embargo] окончено"
 embargo_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] прекратил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] объявленное [GetPlayer.GetAltName('RU_CL_DP')] [Concept('concept_embargo', 'эмбарго')]."
 embargo_action_notification_third_party_break_name: "[concept_embargo] окончено"
 embargo_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetName] прекратил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [Concept('concept_embargo', 'эмбарго')], объявленное [TARGET_COUNTRY.GetAltName('RU_CL_DP')]."
 embargo_effect_desc_global: "Налагает [Concept('concept_embargo', 'эмбарго')]"
 embargo_effect_desc_first: "[COUNTRY.GetName] налага[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_embargo', 'эмбарго')] на [TARGET_COUNTRY.GetAltName('RU_CL_VP')]"
 embargo_effect_desc_third: "[COUNTRY.GetName] налага[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_embargo', 'эмбарго')] на государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 embargo_trigger_desc_global: "Введено [Concept('concept_embargo', 'эмбарго')]"
 embargo_trigger_false_desc_global: "#b Не#! введено [Concept('concept_embargo', 'эмбарго')]"
 embargo_trigger_desc_first: "[COUNTRY.GetName] ввел[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [Concept('concept_embargo', 'эмбарго')] против [TARGET_COUNTRY.GetAltName('RU_CL_RP')]"
 embargo_trigger_false_desc_first: "[COUNTRY.GetName] #b не#! ввел[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [Concept('concept_embargo', 'эмбарго')] против [TARGET_COUNTRY.GetAltName('RU_CL_RP')]"
 embargo_trigger_desc_third: "[COUNTRY.GetName] ввел[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [Concept('concept_embargo', 'эмбарго')] против государства [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 embargo_trigger_false_desc_third: "[COUNTRY.GetName] #b не#! ввел[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [Concept('concept_embargo', 'эмбарго')] против государства [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 war_reparations: "Военные репарации"
 war_reparations_action_name: "[Concept('concept_war_reparations', 'Военные репарации')]"
 war_reparations_action_propose_name: "Потребовать [Concept('concept_war_reparations', 'военные репарации')]"
 war_reparations_action_break_name: "Прекратить [Concept('concept_war_reparations', 'военные репарации')]"
 war_reparations_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] выплачива[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltNameNoFormatting('RU_CL_END_T')] еженедельные [Concept('concept_war_reparations', 'военные репарации')] [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('RU_CL_DP')]."
 war_reparations_desc: "Вынуждает одну [Concept('concept_country', 'страну')] выплачивать честь своих доходов другой стране на время действия пакта."
 war_reparations_type_break_desc: "Остановить выплату [Concept('concept_war_reparations', 'военных репараций')], которые мы получаем от другого государства."
 war_reparations_action_notification_name: "[Concept('concept_war_reparations', 'Военные репарации')] от [TARGET_COUNTRY.GetAltName('RU_CL_RP')]"
 war_reparations_action_notification_desc: "[TARGET_COUNTRY.GetName] начина[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] выплачивать нам [Concept('concept_war_reparations', 'военные репарации')]."
 war_reparations_action_notification_break_name: "Прекращение [Concept('concept_war_reparations', 'военных репараций')]"
 war_reparations_action_notification_break_desc: "[TARGET_COUNTRY.GetName] прекраща[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наши [Concept('concept_war_reparations', 'военные репарации')]."
 colonization_rights: "Право колонизации"
 colonization_rights_action_name: "[concept_colonization_rights]"
 colonization_rights_action_propose_name: "Потребовать [Concept('concept_colonization_rights', 'право колонизации')]"
 colonization_rights_action_break_name: "Отказаться от [Concept('concept_colonization_rights', 'права колонизации')]"
 colonization_rights_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] да[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_colonization_rights', 'право колонизации')] [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('RU_CL_DP')]."
 colonization_rights_desc: "Одна [Concept('concept_country', 'страна')] предоставляет другой [Concept('concept_colonization_rights', 'права на колонизацию')] на время действия пакта."
 colonization_rights_type_break_desc: "Отказаться от [Concept('concept_colonization_rights', 'права колонизации')], которое мы получили от другого государства."
 colonization_rights_action_notification_name: "[concept_colonization_rights] [TARGET_COUNTRY.GetAltName('RU_CL_RP')]"
 colonization_rights_action_notification_desc: "[TARGET_COUNTRY.GetName] предоставля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] нам [Concept('concept_colonization_rights', 'право колонизации')]."
 colonization_rights_action_notification_break_name: "Отказ от [Concept('concept_colonization_rights', 'права колонизации')]"
 colonization_rights_action_notification_break_desc: "[TARGET_COUNTRY.GetName] прекраща[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] предоставлять нам [Concept('concept_colonization_rights', 'право колонизации')]."
 #military_assistance: "Military Assistance"
 #military_assistance_desc: "Grants [concept_military_assistance] to another [concept_country]."
 military_assistance_action_notification_name: "[Concept('concept_military_assistance','Военная помощь')] [TARGET_COUNTRY.GetAltName('RU_CL_DP')]"
 military_assistance_action_notification_desc: "[INITIATOR_COUNTRY.GetName] предоставля[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_military_assistance','военную помощь')] [TARGET_COUNTRY.GetAltName('RU_CL_DP')]"
 military_assistance_action_notification_third_party_name: "[Concept('concept_military_assistance','Военная помощь')] [TARGET_COUNTRY.GetAltName('RU_CL_DP')]"
 military_assistance_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetName] предоставля[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_military_assistance','военную помощь')] [TARGET_COUNTRY.GetAltName('RU_CL_DP')]"
 military_assistance_action_propose_name: "Предложить военную помощь"
 military_assistance_action_break_name: "Прекратить военную помощь"
 military_assistance_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] предоставля[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_military_assistance','военную помощь')] [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('RU_CL_DP')]"
 military_assistance_action_notification_break_name: "[INITIATOR_COUNTRY.GetName] прекратил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] военную помощь"
 military_assistance_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] прекратил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] оказание [Concept('concept_military_assistance','военной помощи')] нашей стране"
 military_assistance_action_notification_third_party_break_name: "Военная помощь [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')] и [TARGET_COUNTRY.GetAltName('RU_CL_DP')] прекратилась"
 military_assistance_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetName] прекратил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] оказание [Concept('concept_military_assistance','военной помощи')] [TARGET_COUNTRY.GetAltName('RU_CL_DP')]."
 military_assistance_action_name: "$military_assistance$"
 military_assistance_proposal_accepted_name: "[Concept('concept_military_assistance','Военная помощь')] принята"
 military_assistance_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] принял[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нашу просьбу о предоставлении им [Concept('concept_military_assistance','военной помощи')]."
 military_assistance_proposal_declined_name: "[Concept('concept_military_assistance','Военная помощь')] отклонена"
 military_assistance_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нашу просьбу о предоставлении им [Concept('concept_military_assistance','военной помощи')]."
 military_assistance_proposal_notification_name: "Предложение [Concept('concept_military_assistance','военной помощи')]"
 military_assistance_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] предлага[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] оказание [Concept('concept_military_assistance','военной помощи')] нашей [Concept('concept_country','стране')]."
 military_assistance_proposal_third_party_accepted_name: "[Concept('concept_military_assistance','Военная помощь')] [TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_DP')] одобрена"
 military_assistance_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] получил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [Concept('concept_military_assistance','военную помощь')] от [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')]."
 military_assistance_proposal_third_party_declined_name: "[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_DP')] отказано в [Concept('concept_military_assistance','военной помощи')]"
 military_assistance_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] не получил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [Concept('concept_military_assistance','военную помощь')] от [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')]."
 military_assistance_trigger_desc_global: "Предоставляет [Concept('concept_military_assistance','военную помощь')]"
 military_assistance_trigger_false_desc_global: "#bold Не#! предоставляет [Concept('concept_military_assistance','военную помощь')]"
 military_assistance_trigger_desc_first: "#tooltippable_name [COUNTRY.GetAdjectiveNoFlag]ая#! администрация предоставляет [Concept('concept_military_assistance','военную помощь')] [TARGET_COUNTRY.GetAltName('RU_CL_DP')]"
 military_assistance_trigger_false_desc_first: "#tooltippable_name [COUNTRY.GetAdjectiveNoFlag]ая#! администрация #b не#! предоставляет [Concept('concept_military_assistance','военную помощь')] [TARGET_COUNTRY.GetAltName('RU_CL_DP')]"
 military_assistance_trigger_desc_third: "[COUNTRY.GetName] предоставля[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_military_assistance','военную помощь')] государству [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 military_assistance_trigger_false_desc_third: "[COUNTRY.GetName] #bold не#! предоставля[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_military_assistance','военную помощь')] государству [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 military_assistance_request: "Запросить военную помощь"
 military_assistance_request_desc: "$military_assistance_desc$"
 military_assistance_request_action_name: "$request_military_assistance$"
 military_assistance_request_proposal_accepted_name: "[Concept('concept_military_assistance','Военная помощь')] предоставлена"
 military_assistance_request_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] принял[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нашу просьбу о [Concept('concept_military_assistance','военной помощи')]."
 military_assistance_request_proposal_declined_name: "В [Concept('concept_military_assistance','военной помощи')] отказано"
 military_assistance_request_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нашу просьбу о [Concept('concept_military_assistance','военной помощи')]."
 military_assistance_request_proposal_notification_name: "Просьба о [Concept('concept_military_assistance','военной помощи')]"
 military_assistance_request_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] запрашива[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] у нас [Concept('concept_military_assistance','военную помощь')]."
 military_assistance_request_proposal_third_party_accepted_name: "[Concept('concept_military_assistance','Военная помощь')] [INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_DP')] одобрена"
 military_assistance_request_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetName] получил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [Concept('concept_military_assistance','военную помощь')] от [TARGET_COUNTRY.GetAltName('RU_CL_RP')]."
 military_assistance_request_proposal_third_party_declined_name: "[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_DP')] отказано в [Concept('concept_military_assistance','военной помощи')]"
 military_assistance_request_proposal_third_party_declined_desc: "[INITIATOR_COUNTRY.GetName] не получил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [Concept('concept_military_assistance','военную помощь')] от [TARGET_COUNTRY.GetAltName('RU_CL_RP')]."
 military_assistance_effect_desc_global: "Начинает оказывать [Concept('concept_military_assistance','военную помощь')]"
 military_assistance_effect_desc_first: "[COUNTRY.GetName] начина[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] оказывать [Concept('concept_military_assistance','военную помощь')] [TARGET_COUNTRY.GetAltNameNoFlag('RU_CL_DP')]"
 military_assistance_effect_desc_third: "Государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, COUNTRY.Self),COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, COUNTRY.Self)),COUNTRY.GetName)] начинает оказывать [Concept('concept_military_assistance','военную помощь')] [TARGET_COUNTRY.GetAltNameNoFlag('RU_CL_DP')]"
 #foreign_investment_rights: "Investment Rights"
 foreign_investment_rights_action_name: "$foreign_investment_rights$"
 foreign_investment_rights_action_propose_name: "Попросить права на инвестиции"
 foreign_investment_rights_action_break_name: "Отменить права на инвестиции"
 foreign_investment_rights_action_notification_name: "[Concept('concept_foreign_investment_rights', 'Право на зарубежные инвестиции')] в [TARGET_COUNTRY.GetAltName('RU_CL_PP')]"
 foreign_investment_rights_action_notification_desc: "[INITIATOR_COUNTRY.GetName] теперь име[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_foreign_investment_rights', 'право на зарубежные инвестиции')] в [TARGET_COUNTRY.GetAltName('RU_CL_PP')]"
 #foreign_investment_rights_desc: "Establishes unilateral [concept_foreign_investment_rights] in a [concept_country]."
 foreign_investment_rights_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] получил[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltNameNoFormatting('RU_CL_END_FEM')] [Concept('concept_foreign_investment_rights', 'право на зарубежные инвестиции')] в [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('RU_CL_PP')]"
 foreign_investment_rights_proposal_notification_name: "Просьба о [Concept('concept_foreign_investment_rights', 'праве на зарубежные инвестиции')]"
 foreign_investment_rights_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] запрашива[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_foreign_investment_rights', 'право на зарубежные инвестиции')] в нашей [Concept('concept_country', 'стране')]"
 foreign_investment_rights_proposal_notification_effects_desc: "В случае нашего согласия предложившая сторона сможет возводить и приобретать [Concept('concept_building', 'сооружения')] в нашей [Concept('concept_country', 'стране')]."
 foreign_investment_rights_proposal_accepted_name: "[Concept('concept_foreign_investment_rights', 'Право на зарубежные инвестиции')] одобрено"
 foreign_investment_rights_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] принял[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нашу просьбу о предоставлении [Concept('concept_foreign_investment_rights', 'права на зарубежные инвестиции')] в этой [Concept('concept_country', 'стране')]."
 foreign_investment_rights_proposal_declined_name: "[Concept('concept_foreign_investment_rights', 'Право на зарубежные инвестиции')] отклонено"
 foreign_investment_rights_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нашу просьбу о предоставлении [Concept('concept_foreign_investment_rights', 'права на зарубежные инвестиции')] в этой [Concept('concept_country', 'стране')]."
 foreign_investment_rights_action_notification_break_name: "#tooltippable_name [INITIATOR_COUNTRY.GetAdjective]ое#! [Concept('concept_foreign_investment_rights', 'право на зарубежные инвестиции')] отозвано"
 foreign_investment_rights_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] отозвал[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] наше [Concept('concept_foreign_investment_rights', 'право на зарубежные инвестиции')]."
 foreign_investment_rights_proposal_third_party_accepted_name: "[Concept('concept_foreign_investment_rights', 'Права на зарубежные инвестиции')] выданы"
 foreign_investment_rights_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] предоставил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [INITIATOR_COUNTRY.GetAltName('RU_CL_DP')] [Concept('concept_foreign_investment_rights', 'право на зарубежные инвестиции')]."
 foreign_investment_rights_proposal_third_party_declined_name: "[Concept('concept_foreign_investment_rights', 'Право на зарубежные инвестиции')] отклонено"
 foreign_investment_rights_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] не пожелал[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] предоставить [INITIATOR_COUNTRY.GetAltName('RU_CL_DP')] [Concept('concept_foreign_investment_rights', 'право на зарубежные инвестиции')]."
 foreign_investment_rights_action_notification_third_party_break_name: "[Concept('concept_foreign_investment_rights', 'Право на зарубежные инвестиции')] отозвано"
 foreign_investment_rights_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetName] отозвал[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [Concept('concept_foreign_investment_rights', 'право на зарубежные инвестиции')], предоставленное [TARGET_COUNTRY.GetAltName('RU_CL_DP')]."
 foreign_investment_rights_trigger_desc_first: "[COUNTRY.GetNameNoFlag] облада[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_foreign_investment_rights','правом на зарубежные инвестиции')] в [TARGET_COUNTRY.GetAltName('RU_CL_PP')]"
 foreign_investment_rights_trigger_false_desc_first: "[COUNTRY.GetName] #b не#! име[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_foreign_investment_rights','прав на зарубежные инвестиции')] в [TARGET_COUNTRY.GetAltName('RU_CL_PP')]"
 foreign_investment_rights_trigger_desc_global: "Обладает [Concept('concept_foreign_investment_rights','правом на зарубежные инвестиции')] в этой стране"
 foreign_investment_rights_trigger_false_desc_global: "#b Не#! обладает [Concept('concept_foreign_investment_rights','правом на зарубежные инвестиции')] в этой стране"
 foreign_investment_rights_trigger_desc_third: "[COUNTRY.GetName] облада[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_foreign_investment_rights','правом на зарубежные инвестиции')] в государстве [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 foreign_investment_rights_trigger_false_desc_third: "[COUNTRY.GetName] #b не#! име[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_foreign_investment_rights','прав на зарубежные инвестиции')] в государстве [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 grant_foreign_investment_rights: "Дать права на инвестиции"
 grant_foreign_investment_rights_action_name: "$grant_foreign_investment_rights$"
 grant_foreign_investment_rights_action_propose_name: "$grant_foreign_investment_rights$"
 grant_foreign_investment_rights_desc: "Даёт [Concept('concept_foreign_investment_rights','права на зарубежные инвестиции')] другой [Concept('concept_country','стране')]."
 grant_foreign_investment_rights_proposal_notification_name: "Предложить предоставление [Concept('concept_foreign_investment_rights', 'права на зарубежные инвестиции')]"
 grant_foreign_investment_rights_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] жела[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] предоставить нам [Concept('concept_foreign_investment_rights', 'право на зарубежные инвестиции')] в своей [Concept('concept_country', 'стране')]."
 grant_foreign_investment_rights_proposal_accepted_name: "[Concept('concept_foreign_investment_rights', 'Право на зарубежные инвестиции')] одобрено"
 grant_foreign_investment_rights_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] принял[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] наше предложение о предоставлении [Concept('concept_foreign_investment_rights', 'права на зарубежные инвестиции')]."
 grant_foreign_investment_rights_proposal_declined_name: "[Concept('concept_foreign_investment_rights', 'Право на зарубежные инвестиции')] отклонено"
 grant_foreign_investment_rights_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] наше предложение о предоставлении [Concept('concept_foreign_investment_rights', 'права на зарубежные инвестиции')]."
 grant_foreign_investment_rights_proposal_notification_effects_desc: "В случае нашего согласия мы сможем возводить и приобретать [Concept('concept_building', 'сооружения')] в другой [Concept('concept_country', 'стране')]."
 grant_foreign_investment_rights_proposal_third_party_accepted_name: "[Concept('concept_foreign_investment_rights', 'Права на зарубежные инвестиции')] выданы"
 grant_foreign_investment_rights_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetName] предоставил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [TARGET_COUNTRY.GetAltName('RU_CL_DP')] [Concept('concept_foreign_investment_rights', 'право на зарубежные инвестиции')]."
 grant_foreign_investment_rights_proposal_third_party_declined_name: "[Concept('concept_foreign_investment_rights', 'Право на зарубежные инвестиции')] отклонено"
 grant_foreign_investment_rights_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] не пожелал[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] принять предоставленное [Concept('concept_foreign_investment_rights', 'право на зарубежные инвестиции')] в [INITIATOR_COUNTRY.GetAltName('RU_CL_PP')]."
 foreign_investment_agreement: "Двустороннее соглашение об инвестициях"
 foreign_investment_agreement_action_name: "Двустороннее соглашение о [Concept('concept_foreign_investment_rights', 'зарубежных инвестициях')]"
 foreign_investment_agreement_desc: "[Concept('concept_diplomatic_pact', 'Дипломатический пакт')] между двумя [Concept('concept_country','странами')], устанавливающий двустороннее соглашение о [Concept('concept_foreign_investment_rights', 'зарубежных инвестициях')]."
 foreign_investment_agreement_proposal_accepted_name: "Двустороннее соглашение о зарубежных инвестициях принято"
 foreign_investment_agreement_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] соглаша[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся заключить с нами двустороннее соглашение о [Concept('concept_foreign_investment_rights', 'зарубежных инвестициях')]."
 foreign_investment_agreement_proposal_declined_name: "Двустороннее соглашение о зарубежных инвестициях отклонено"
 foreign_investment_agreement_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся заключить с нами двустороннее соглашение о [Concept('concept_foreign_investment_rights', 'зарубежных инвестициях')]."
 foreign_investment_agreement_proposal_notification_name: "Двустороннее соглашение о [Concept('concept_foreign_investment_rights', 'зарубежных инвестициях')] с [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]"
 foreign_investment_agreement_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] предложил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нам заключить двустороннее соглашение о [Concept('concept_foreign_investment_rights', 'зарубежных инвестициях')]."
 foreign_investment_agreement_proposal_notification_effects_desc: "$foreign_investment_agreement_desc$"
 foreign_investment_agreement_action_propose_name: "Предложить соглашение об инвестициях"
 foreign_investment_agreement_action_break_name: "Разорвать соглашение об инвестициях"
 foreign_investment_agreement_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] и [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] заключили двустороннее соглашение о [Concept('concept_foreign_investment_rights', 'зарубежных инвестициях')]."
 foreign_investment_agreement_action_notification_break_name: "Соглашение о [Concept('concept_foreign_investment_rights', 'зарубежных инвестициях')] расторгнуто"
 foreign_investment_agreement_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] отозвал[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] наше двустороннее соглашение о [Concept('concept_foreign_investment_rights', 'зарубежных инвестициях')]"
 foreign_investment_agreement_proposal_third_party_accepted_name: "Двустороннее соглашение о зарубежных инвестициях принято"
 foreign_investment_agreement_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] принял[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] предложение заключить двустороннее [Concept('concept_foreign_investment_rights','соглашение о зарубежных инвестициях')] с [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]."
 foreign_investment_agreement_proposal_third_party_declined_name: "Двустороннее соглашение о зарубежных инвестициях отклонено"
 foreign_investment_agreement_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] предложение заключить двустороннее [Concept('concept_foreign_investment_rights','соглашение о зарубежных инвестициях')] с [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]."
 foreign_investment_agreement_action_notification_third_party_break_name: "Отозвать [Concept('concept_colonization_rights','право на зарубежные инвестиции')]"
 foreign_investment_agreement_action_notification_third_party_break_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] и [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] расторгли двустороннее соглашение о [Concept('concept_foreign_investment_rights','зарубежных инвестициях')]."
 humiliation: "Унижение"
 humiliation_action_name: "[Concept('concept_humiliation', 'Унижение')]"
 humiliation_action_propose_name: "Подвергнуть [Concept('concept_humiliation', 'унижению')]"
 humiliation_action_break_name: "Остановить [Concept('concept_humiliation', 'унижение')]"
 humiliation_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] подверга[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_humiliation', 'унижению')] со стороны [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('RU_CL_RP')]."
 humiliation_desc: "Запрещает [Concept('concept_country', 'стране')] выступать против другой страны в [Concept('concept_diplomatic_play','дипломатических играх')] на время действия пакта."
 humiliation_type_break_desc: "Прекратить [Concept('concept_humiliation', 'унижение')] другого государства."
 humiliation_action_notification_name: "Унижение"
 humiliation_action_notification_desc: "Мы [Concept('concept_humiliation', 'унизили')] [TARGET_COUNTRY.GetAltName('RU_CL_VP')]."
 humiliation_action_notification_break_name: "Прекращение [Concept('concept_humiliation', 'унижения')]"
 humiliation_action_notification_break_desc: "[TARGET_COUNTRY.GetName] останавлива[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наше [Concept('concept_humiliation', 'унижение')]."
 #guarantee_independence: "Guarantee Independence"
 guarantee_independence_action_name: "$guarantee_independence$"
 guarantee_independence_action_propose_name: "$guarantee_independence$"
 guarantee_independence_action_break_name: "Отозвать гарантию независимости"
 guarantee_independence_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] гарантиру[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltNameNoFormatting('RU_CL_END_T')] независимость [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('RU_CL_RP')]"
 #guarantee_independence_desc: "[concept_guarantee_independence_desc]"
 guarantee_independence_action_notification_name: "[INITIATOR_COUNTRY.GetName] гарантиру[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] нашу независимость"
 guarantee_independence_action_notification_desc: "[INITIATOR_COUNTRY.GetName] начал[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] гарантировать независимость нашей [Concept('concept_country', 'страны')]. Мы сможем обратиться за помощью к этой стране, если станем целью [Concept('concept_diplomatic_play', 'дипломатической игры')]."
 guarantee_independence_action_notification_break_name: "[INITIATOR_COUNTRY.GetName] прекратил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] гарантировать нашу независимость"
 guarantee_independence_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] больше не гарантиру[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] нашу независимость."
 guarantee_independence_effect_desc_global: "Начинает [Concept('concept_guarantee_independence','гарантировать независимость')]"
 guarantee_independence_effect_desc_first: "[COUNTRY.GetName] начина[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_guarantee_independence','гарантировать независимость')] [TARGET_COUNTRY.GetAltName('RU_CL_RP')]"
 guarantee_independence_effect_desc_third: "[COUNTRY.GetName] начина[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_guarantee_independence','гарантировать независимость')] государства [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 bankroll: "Финансирование"
 bankroll_action_name: "$bankroll$"
 bankroll_action_propose_name: "Начать финансирование"
 bankroll_action_break_name: "Прекратить финансирование"
 bankroll_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] финансиру[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltNameNoFormatting('RU_CL_END_T')] [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('RU_CL_VP')]."
 bankroll_desc: "[concept_bankroll_desc]"
 bankroll_action_notification_name: "[INITIATOR_COUNTRY.GetName] финансиру[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] нас"
 bankroll_action_notification_desc: "[INITIATOR_COUNTRY.GetName] начал[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] финансировать нашу страны, еженедельно выплачивая сумму в размере #v 10%#! нашего дохода от налогов. Со временем это может создать [Concept('concept_obligation', 'обязательство')] с нашей стороны."
 bankroll_action_notification_break_name: "[INITIATOR_COUNTRY.GetName] больше не финансиру[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] нас"
 bankroll_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] прекраща[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] финансировать нашу державу."
 bankroll_weekly_obligation_effect: "Вероятность в #v 0,2%#! получить или простить [Concept('concept_obligation', 'обязательство')] в отношении финансируемой страны"
 bankroll_effect_desc_global: "Начинает [Concept('concept_bankroll', 'финансировать')]"
 bankroll_effect_desc_first: "[COUNTRY.GetName] начина[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_bankroll', 'финансировать')] [TARGET_COUNTRY.GetAltName('RU_CL_VP')]"
 bankroll_effect_desc_third: "[COUNTRY.GetName] начина[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_bankroll', 'финансировать')] государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 bankroll_trigger_desc_global: "[Concept('concept_bankroll','Финансирует')]"
 bankroll_trigger_false_desc_global: "#b Не#! [Concept('concept_bankroll','финансирует')]"
 bankroll_trigger_desc_first: "[COUNTRY.GetName] #tooltippable_name [Concept('concept_bankroll', 'финансиру')][COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]#! [TARGET_COUNTRY.GetAltName('RU_CL_VP')]"
 bankroll_trigger_false_desc_first: "[COUNTRY.GetName] #b не#! #tooltippable_name [Concept('concept_bankroll', 'финансиру')][COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]#! [TARGET_COUNTRY.GetAltName('RU_CL_VP')]"
 bankroll_trigger_desc_third: "[COUNTRY.GetName] #tooltippable_name [Concept('concept_bankroll', 'финансиру')][COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]#! государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 bankroll_trigger_false_desc_third: "[COUNTRY.GetName] #b не#! #tooltippable_name [Concept('concept_bankroll', 'финансиру')][COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]#! государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 fund_lobbies: "Поддержать лобби"
 fund_lobbies_action_name: "$fund_lobbies$"
 fund_lobbies_action_propose_name: "Начать финансирование лоббистов"
 fund_lobbies_action_break_name: "Прекратить финансирование лоббистов"
 fund_lobbies_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] финансиру[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltNameNoFormatting('RU_CL_END_T')] лобби в [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('RU_CL_PP')]."
 fund_lobbies_desc: "[concept_fund_lobbies_desc]"
 fund_lobbies_action_notification_name: "[INITIATOR_COUNTRY.GetName] финансиру[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] лобби"
 fund_lobbies_action_notification_desc: "[INITIATOR_COUNTRY.GetName] начал[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] финансировать лобби. Со временем это может создать и укрепить в нашей [Concept('concept_country', 'стране')] [Concept('concept_political_lobby', 'лобби')], дружественные [INITIATOR_COUNTRY.GetAltName('RU_CL_DP')]."
 fund_lobbies_action_notification_break_name: "[INITIATOR_COUNTRY.GetName] прекратил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] финансирование лобби"
 fund_lobbies_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] прекратил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] финансировать лобби в нашей [Concept('concept_country','стране')]."
 fund_lobbies_weekly_create_lobby_effect: "Есть шанс от #v 0,25%#! до #v 1%#! (в зависимости от [Concept('concept_rank','рейтинга')] и географического положения) создать дружеское [Concept('concept_political_lobby','политическое лобби')] в выбранной [Concept('concept_country','стране')], если в ней есть [Concept('concept_interest_group','группы')], заинтересованные в нашей поддержке"
 fund_lobbies_increase_friendly_join_weight_effect: "Увеличивает желание [Concept('concept_interest_group', 'заинтересованной группы')] присоединиться к дружественным нам лобби"
 fund_lobbies_decrease_hostile_join_weight_effect: "Уменьшает желание [Concept('concept_interest_group', 'заинтересованной группы')] присоединиться к враждебным нам лобби"
 fund_lobbies_decrease_rival_friendly_join_weight_effect: "Уменьшает желание [Concept('concept_interest_group','заинтересованной группы')] присоединиться к лобби, дружественным с нашими [Concept('concept_rivalry','соперниками')]"
 fund_lobbies_increase_rival_hostile_join_weight_effect: "Увеличивает желание [Concept('concept_interest_group','заинтересованной группы')] присоединиться к лобби, враждебным к нашим [Concept('concept_rivalry','соперникам')]"
 #take_on_debt: "Take on Debt"
 take_on_debt_action_name: "Выкуп [Concept('concept_credit','долга')]"
 take_on_debt_action_propose_name: "Выкуп [Concept('concept_credit','долга')]"
 #take_on_debt_desc: "Take over another [Concept('concept_country','$concept_country_possessive$')] [concept_loans] in exchange for an [concept_obligation]."
 take_on_debt_proposal_notification_name: "Предложен выкуп [Concept('concept_credit','долга')]"
 take_on_debt_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] предложил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] взять на себя наш национальный [Concept('concept_credit','долг')], надеемся, что без злого умысла."
 take_on_debt_proposal_notification_effects_desc: "$take_on_debt_desc$"
 take_on_debt_proposal_accepted_name: "Выкуп [Concept('concept_credit','долга')] принят"
 take_on_debt_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] принял[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] наше предложение о выкупе национального [Concept('concept_credit','долга')]."
 take_on_debt_proposal_declined_name: "Выкуп [Concept('concept_credit','долга')] отклонён"
 take_on_debt_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] наше предложение о выкупе национального [Concept('concept_credit','долга')]."
 take_on_debt_proposal_third_party_accepted_name: "Выкуп [Concept('concept_credit','долга')] принят"
 take_on_debt_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetName] принял[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] на себя национальный [Concept('concept_credit','долг')] [TARGET_COUNTRY.GetAltName('RU_CL_RP')], теперь имеющ[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END')] [Concept('concept_obligation', 'обязательство')]."
 take_on_debt_proposal_third_party_declined_name: "Выкуп [Concept('concept_credit','долга')] отклонён"
 take_on_debt_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] предложение [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')] о выкупе национального [Concept('concept_credit','долга')]."
 trade_states: "Обмен областями"
 trade_states_action_name: "Обмен [Concept('concept_state','областями')]"
 trade_states_action_propose_name: "Обмен [Concept('concept_state','областями')]"
 trade_states_desc: "Предложить другой [Concept('concept_country', 'стране')] передачу или обмен [Concept('concept_state','областей')]."
 trade_states_proposal_notification_name: "Предложен обмен [Concept('concept_state','областями')]"
 trade_states_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] предложил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] передачу [Concept('concept_state','областей')]:\n$STATES_DESC$"
 trade_states_proposal_notification_effects_desc: "$trade_states_desc$"
 trade_states_proposal_accepted_name: "$trade_states_action_name$ принят"
 trade_states_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] принял[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] наше предложение по обмену [Concept('concept_state','областями')]:\n$STATES_DESC$"
 trade_states_proposal_declined_name: "$trade_states_action_name$ отклонён"
 trade_states_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] наше предложение по обмену [Concept('concept_state','областями')]:\n$STATES_DESC$"
 trade_states_proposal_third_party_accepted_name: "$trade_states_action_name$ принят"
 trade_states_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] принял[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] предложение по обмену [Concept('concept_state','областями')] с [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]:\n$STATES_DESC$"
 trade_states_proposal_third_party_declined_name: "$trade_states_action_name$ отклонён"
 trade_states_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] предложение по обмену [Concept('concept_state','областями')] с [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]:\n$STATES_DESC$"
 force_regime_change: "Принудить к смене режима"
 force_regime_change_action_name: "Принудить к [Concept('concept_regime_change', 'смене режима')]"
 force_regime_change_desc: "Принудить к немедленной [Concept('concept_regime_change', 'смене режима')] у [Concept('concept_power_bloc_member','члена блока государств' )], политическая система которого не совпадает с политикой остального [Concept('concept_power_bloc', 'блока')]."
 force_regime_change_action_notification_name: "[INITIATOR_COUNTRY.GetName] принудил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] к [Concept('concept_regime_change', 'смене режима')]"
 force_regime_change_action_notification_desc: "[INITIATOR_COUNTRY.GetName] принудил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нас к [Concept('concept_regime_change', 'смене режима')]"
 force_regime_change_action_notification_third_party_name: "[INITIATOR_COUNTRY.GetName] принудил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] к [Concept('concept_regime_change', 'смене режима')]"
 force_regime_change_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetName] принудил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [TARGET_COUNTRY.GetAltName('RU_CL_VP')] к [Concept('concept_regime_change', 'смене режима')]"
 force_state_religion: "Навязать государственную религию"
 force_state_religion_action_name: "Навязать [Concept('concept_state_religion','государственную религию')]"
 force_state_religion_desc: "Навязать немедленную смену [Concept('concept_state_religion','государственной религии')] в [Concept('concept_power_bloc_member','члене блока государств')] на нашу."
 force_state_religion_action_notification_name: "[INITIATOR_COUNTRY.GetName] навязал[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [Concept('concept_state_religion','государственную религию')]"
 force_state_religion_action_notification_desc: "[INITIATOR_COUNTRY.GetName] навязал[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нам [Concept('concept_state_religion','государственную религию')]"
 force_state_religion_action_notification_third_party_name: "[INITIATOR_COUNTRY.GetName] навязал[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [Concept('concept_state_religion','государственную религию')]"
 force_state_religion_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetName] навязал[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [TARGET_COUNTRY.GetAltName('RU_CL_DP')] [Concept('concept_state_religion','государственную религию')]"
 force_become_subject: "Подчинить"
 force_become_subject_action_name: "Подчинить"
 force_become_subject_desc: "Немедленно делает эту страну нашим [Concept('concept_subject','субъектом')]."
 force_become_subject_action_notification_name: "Подчинение [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]"
 force_become_subject_action_notification_desc: "[INITIATOR_COUNTRY.GetName] превратил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нас в свой [Concept('concept_subject','субъект')]"
 force_become_subject_action_notification_third_party_name: "Подчинение [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]"
 force_become_subject_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetName] превратил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [TARGET_COUNTRY.GetAltName('RU_CL_VP')] в #tooltippable_name #tooltip:[TARGET_COUNTRY.GetSubjectType.GetTooltipTag],DATA_SUBJECT_TYPE_TOOLTIP,SubjectTypeTooltip [TARGET_COUNTRY.GetSubjectType.RU_CL_SJ_VP|l]#!#!"
 grant_state: "Передать область"
 grant_state_action_name: "Передать [Concept( 'concept_state', 'область' )]"
 grant_state_desc: "Передать одну из ваших [Concept('concept_state','областей')] [Concept('concept_subject', 'субъекту')] или передать область от одного субъекта другому. Это повлияет на [Concept('concept_liberty_desire','желание свободы' )]. [Concept('concept_homeland', 'Родные')] области сильнее влияют на желание свободы."
 grant_state_action_notification_name: "[INITIATOR_COUNTRY.GetName] передал[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] область"
 grant_state_action_notification_desc: "[INITIATOR_COUNTRY.GetName] передал[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нам #tooltippable_name #tooltip:[INITIATOR_STATE.GetTooltipTag],DATA_STATE_NAME_TOOLTIP,StateTooltip [INITIATOR_STATE.GetCustom('RU_SL_VP')|l]#!#!"
 grant_state_action_notification_third_party_name: "[INITIATOR_COUNTRY.GetName] передал[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] область"
 grant_state_action_notification_third_party_desc: "[TARGET_COUNTRY.GetName] получил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] #tooltippable_name #tooltip:[INITIATOR_STATE.GetTooltipTag],DATA_STATE_NAME_TOOLTIP,StateTooltip [INITIATOR_STATE.GetCustom('RU_SL_VP')|l]#!#! от [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')]"
 take_state: "Отнять область"
 take_state_action_name: "Отнять [Concept('concept_state', 'область')]"
 take_state_desc: "Отнять [Concept('concept_state', 'область')] у [Concept('concept_subject', 'субъекта')]. Это повлияет на [Concept('concept_liberty_desire','желание свободы' )]. [Concept('concept_homeland', 'Родные')] области сильнее влияют на желание свободы."
 take_state_action_notification_name: "[INITIATOR_COUNTRY.GetName] отнял[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] область"
 take_state_action_notification_desc: "[INITIATOR_COUNTRY.GetName] отнял[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] у нас #tooltippable_name #tooltip:[TARGET_STATE.GetTooltipTag],DATA_STATE_NAME_TOOLTIP,StateTooltip [TARGET_STATE.GetCustom('RU_SL_VP')|l]#!#!"
 take_state_action_notification_third_party_name: "[INITIATOR_COUNTRY.GetName] отнял[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] область"
 take_state_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetName] отнял[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] #tooltippable_name #tooltip:[TARGET_STATE.GetTooltipTag],DATA_STATE_NAME_TOOLTIP,StateTooltip [TARGET_STATE.GetCustom('RU_SL_VP')|l]#!#! у [TARGET_COUNTRY.GetAltName('RU_CL_RP')]"
 demand_state: "Потребовать область"
 demand_state_action_name: "Потребовать [Concept('concept_state','область')]"
 demand_state_desc: "Потребовать от [Concept('concept_overlord','сюзерена')] передать вам одну из его [Concept('concept_state','областей')], либо область, принадлежащую одному из его субъектов. Если требование будет выполнено, ваше [Concept('concept_liberty_desire','желание свободы')] снизится."
 demand_state_proposal_notification_name: "[INITIATOR_COUNTRY.GetName] потребовал[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] область"
 demand_state_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] потребовал[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] у нас область $STATES_DESC$"
 demand_state_proposal_accepted_name: "Требование касательно области принято"
 demand_state_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] принял[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] наше требование передать область $STATES_DESC$"
 demand_state_proposal_declined_name: "Требование касательно области отвергнуто"
 demand_state_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] наше требование передать область $STATES_DESC$"
 demand_state_proposal_third_party_accepted_name: "Требование касательно области принято"
 demand_state_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] принял[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] требование [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')] передать область $STATES_DESC$"
 demand_state_proposal_third_party_declined_name: "Требование касательно области отвергнуто"
 demand_state_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] требование [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')] передать область $STATES_DESC$"
 customs_union: "Таможенный союз"
 customs_union_action_name: "[Concept('concept_customs_union', 'Таможенный союз')]"
 customs_union_action_propose_name: "Пригласить в [Concept('concept_customs_union', 'таможенный союз')]"
 customs_union_action_break_name: "Отменить [Concept('concept_customs_union', 'таможенный союз')]"
 customs_union_action_notification_name: "[Concept('concept_customs_union', 'Таможенный союз')] с [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]"
 customs_union_action_notification_desc: "Мы вступаем в [Concept('concept_customs_union', 'таможенный союз')] с [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]."
 customs_union_desc: "Заключает [Concept('concept_customs_union', 'таможенный союз')] между двумя [Concept('concept_country', 'странами')]."
 customs_union_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] явля[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_senior_partner', 'старшим партнёром')] в [Concept('concept_customs_union', 'таможенном союзе')] с [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('RU_CL_TP')]."
 customs_union_proposal_notification_name: "Предложение [Concept('concept_customs_union', 'таможенного союза')]"
 customs_union_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] приглаша[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] нас вступить в #variable [concept_customs_union|l]#!."
 customs_union_proposal_notification_effects_desc: "$customs_union_desc$"
 customs_union_proposal_accepted_name: "Приглашение в [Concept('concept_customs_union', 'таможенный союз')] принято"
 customs_union_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] соглаша[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся вступить с нами в #variable [concept_customs_union|l]#!."
 customs_union_proposal_declined_name: "Приглашение в [Concept('concept_customs_union', 'таможенный союз')] отвергнуто"
 customs_union_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся вступать с нами в #variable [concept_customs_union|l]#!."
 customs_union_action_notification_break_name: "[Concept('concept_customs_union', 'Таможенный союз')] с [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')] расторгнут"
 customs_union_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] расторга[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] #variable [concept_customs_union|l]#! с нашей державой."
 customs_union_proposal_third_party_accepted_name: "Вступление в [Concept('concept_customs_union', 'таможенный союз')]"
 customs_union_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] вступа[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] в [Concept('concept_customs_union', 'таможенный союз')] с [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]."
 customs_union_proposal_third_party_declined_name: "Отказ от [Concept('concept_customs_union', 'таможенного союза')]"
 customs_union_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся вступать в #variable [concept_customs_union|l]#! с [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]."
 customs_union_action_notification_third_party_break_name: "[concept_customs_union] расторгнут"
 customs_union_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetName] расторга[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] #variable [concept_customs_union|l]#! с [TARGET_COUNTRY.GetAltName('RU_CL_TP')]."
 customs_union_effect_desc_global: "Вступает в [concept_customs_union|l]"
 customs_union_effect_desc_first: "[TARGET_COUNTRY.GetName] вступа[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] в [Concept('concept_customs_union', 'таможенный союз')] [COUNTRY.GetAltNameNoFlag('RU_CL_RP')]"
 customs_union_effect_desc_third: "Государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] вступает в #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ий#! [concept_customs_union|l]"
 customs_union_trigger_desc_global: "В [Concept('concept_customs_union', 'таможенном союзе')]"
 customs_union_trigger_false_desc_global: "#b Не#! в [Concept('concept_customs_union', 'таможенном союзе')]"
 customs_union_trigger_desc_first: "[TARGET_COUNTRY.GetName] явля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся участником [Concept('concept_customs_union','таможенного союза')] [COUNTRY.GetAltNameNoFlag('RU_CL_RP')]"
 customs_union_trigger_false_desc_first: "[TARGET_COUNTRY.GetName] #b не#! явля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся участником [Concept('concept_customs_union','таможенного союза')] [COUNTRY.GetAltNameNoFlag('RU_CL_RP')]"
 customs_union_trigger_desc_third: "Государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] состоит в #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ом#! [Concept('concept_customs_union', 'таможенном союзе')]"
 customs_union_trigger_false_desc_third: "Государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] #b не#! состоит в #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ом#! [Concept('concept_customs_union', 'таможенном союзе')]"
 join_customs_union: "Присоединение к таможенному союзу"
 join_customs_union_action_name: "Присоединение к [Concept('concept_customs_union', 'таможенному союзу')]"
 join_customs_union_action_propose_name: "Присоединение к [Concept('concept_customs_union', 'таможенному союзу')]"
 join_customs_union_desc: "Заключает [Concept('concept_customs_union', 'таможенный союз')] между двумя [Concept('concept_country', 'странами')]. Страна, выдвинувшая предложение, становится младшим партнёром в союзе."
 join_customs_union_proposal_notification_name: "Просьба о вступлении в [Concept('concept_customs_union', 'таможенный союз')]"
 join_customs_union_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] жела[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] вступить с нами в #variable [concept_customs_union|l]#!."
 join_customs_union_proposal_notification_effects_desc: "Приняв это предложение, мы откроем для них наши рынки."
 join_customs_union_proposal_accepted_name: "Просьба о вступлении в [Concept('concept_customs_union', 'таможенный союз')] принята"
 join_customs_union_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] принима[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наше предложение вступить с ними в #variable [concept_customs_union|l]#!."
 join_customs_union_proposal_declined_name: "Просьба о вступлении в [Concept('concept_customs_union', 'таможенный союз')] отклонена"
 join_customs_union_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отклоня[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наше предложение вступить с ними в #variable [concept_customs_union|l]#!."
 join_customs_union_proposal_third_party_accepted_name: "Вступление в [Concept('concept_customs_union', 'таможенный союз')]"
 join_customs_union_proposal_third_party_accepted_desc: "Государство [INITIATOR_COUNTRY.GetName] состоит в [Concept('concept_customs_union', 'таможенном союзе')] с [TARGET_COUNTRY.GetAltName('RU_CL_TP')]."
 join_customs_union_proposal_third_party_declined_name: "Отказ от [Concept('concept_customs_union', 'таможенного союза')]"
 join_customs_union_proposal_third_party_declined_desc: "[INITIATOR_COUNTRY.GetName] отказыва[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся вступать в #variable [concept_customs_union|l]#! с [TARGET_COUNTRY.GetAltName('RU_CL_TP')]."
 change_customs_union: "Перейти в наш таможенный союз"
 change_customs_union_action_name: "Перейти в наш [Concept('concept_customs_union', 'таможенный союз')]"
 change_customs_union_action_propose_name: "Перейти в наш [Concept('concept_customs_union', 'таможенный союз')]"
 change_customs_union_desc: "Заключает [Concept('concept_customs_union', 'таможенный союз')] между двумя [Concept('concept_country', 'странами')], Получатель выходит из своего нынешнего [Concept( 'concept_customs_union', 'таможенного союза' )]."
 change_customs_union_proposal_notification_name: "Просьба сменить [Concept('concept_customs_union', 'таможенный союз')]"
 change_customs_union_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] приглаша[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] нас перейти в их #variable [concept_customs_union|l]#!."
 change_customs_union_proposal_notification_effects_desc: "В случае согласия мы покинем нынешний [Concept('concept_customs_union', 'таможенный союз')] и присоединимся к #tooltippable_name #tooltip:[INITIATOR_COUNTRY.GetCapital.GetMarket.GetTooltipTag],DATA_MARKET_NAME_TOOLTIP,MarketTooltip [INITIATOR_COUNTRY.GetCapital.GetMarket.GetOwner.GetAdjectiveNoFormatting|l]ому рынку#!#!."
 change_customs_union_proposal_accepted_name: "Просьба о переходе в таможенный союз принята"
 change_customs_union_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] принял[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] наше предложение перейти в наш #variable [Concept('concept_customs_union', 'таможенный союз')]#!."
 change_customs_union_proposal_declined_name: "Просьба о переходе в таможенный союз отвергнута"
 change_customs_union_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] наше предложение перейти в наш #variable [Concept('concept_customs_union', 'таможенный союз')]#!."
 change_customs_union_proposal_third_party_accepted_name: "Переход в таможенный союз принят"
 change_customs_union_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] изменил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] свой [Concept('concept_customs_union', 'таможенный союз')] на #tooltippable_name [INITIATOR_COUNTRY.GetAdjective|l]ий#!."
 change_customs_union_proposal_third_party_declined_name: "Переход в таможенный союз отклонён"
 change_customs_union_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] не захотел[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] менять свой [Concept('concept_customs_union', 'таможенный союз')] на #tooltippable_name [INITIATOR_COUNTRY.GetAdjective|l]ий#!."
 #alliance: "Alliance"
 alliance_action_name: "[Concept('concept_alliance', 'Союз')]"
 alliance_action_propose_name: "Заключить [Concept('concept_alliance', 'союз')]"
 alliance_action_break_name: "Разорвать [Concept('concept_alliance', 'союз')]"
 alliance_action_notification_name: "[Concept('concept_alliance', 'Союз')] с [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]"
 alliance_action_notification_desc: "Мы заключаем [Concept('concept_alliance', 'союз')] с [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]."
 #alliance_desc: "Establishes an [concept_alliance] between two [Concept('concept_country', '$concept_countries$')]."
 alliance_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] и [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] заключили друг с другом [Concept('concept_alliance', 'союз')]."
 alliance_proposal_notification_name: "Предложение [Concept('concept_alliance', 'союза')]"
 alliance_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] предлага[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] нам заключить [Concept('concept_alliance', 'союз')]."
 alliance_proposal_notification_effects_desc: "$alliance_desc$"
 alliance_proposal_accepted_name: "Предложение [Concept('concept_alliance', 'союза')] принято"
 alliance_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] соглаша[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся заключить с нами [Concept('concept_alliance', 'союз')]."
 alliance_proposal_declined_name: "Предложение [Concept('concept_alliance', 'союза')] отклонено"
 alliance_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся заключать с нами [Concept('concept_alliance', 'союз')]."
 alliance_action_notification_break_name: "[Concept('concept_alliance', 'Союз')] с [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')] расторгнут"
 alliance_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] расторга[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [concept_alliance|l] с нашей державой."
 alliance_proposal_third_party_accepted_name: "Заключён [Concept('concept_alliance', 'союз')]"
 alliance_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetName] и [TARGET_COUNTRY.GetName] заключили между собой [Concept('concept_alliance', 'союз')]."
 alliance_proposal_third_party_declined_name: "Отказ от [Concept('concept_alliance', 'союза')]"
 alliance_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся вступать в [concept_alliance|l] с [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]."
 alliance_action_notification_third_party_break_name: "[concept_alliance] расторгнут"
 alliance_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetName] расторга[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [concept_alliance|l] с [TARGET_COUNTRY.GetAltName('RU_CL_TP')]."
 alliance_effect_desc_global: "Вступает в [Concept('concept_alliance', 'союз')]"
 alliance_effect_desc_first: "[TARGET_COUNTRY.GetName] вступа[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] в [Concept('concept_alliance', 'союз')] с [COUNTRY.GetAltNameNoFlag('RU_CL_TP')]"
 alliance_effect_desc_third: "Государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] вступает в #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ий#! [Concept('concept_alliance', 'союз')]"
 alliance_trigger_desc_global: "В [Concept('concept_alliance', 'союзе')]"
 alliance_trigger_false_desc_global: "#b Не#! в [Concept('concept_alliance', 'союзе')]"
 alliance_trigger_desc_first: "[TARGET_COUNTRY.GetName] в одном [Concept('concept_alliance', 'союзе')] с [COUNTRY.GetAltNameNoFlag('RU_CL_TP')]"
 alliance_trigger_false_desc_first: "[TARGET_COUNTRY.GetName] #b не#! в одном [Concept('concept_alliance', 'союзе')] с [COUNTRY.GetAltNameNoFlag('RU_CL_TP')]"
 alliance_trigger_desc_third: "Государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] состоит в #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ом#! [Concept('concept_alliance', 'союзе')]"
 alliance_trigger_false_desc_third: "Государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] #b не#! состоит в #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ом#! [Concept('concept_alliance', 'союзе')]"
 alliance_support_independence_subject: "Ни одна из двух стран не #v поддерживает независимость#! [Concept('concept_subject','субъекта')] второй страны"
 support_independence_trigger_desc_global: "#v Поддерживает независимость#! этой страны"
 support_independence_trigger_false_desc_global: "#b Не#! #v поддерживает независимость#! этой страны"
 support_independence_trigger_desc_first: "[TARGET_COUNTRY.GetName] #v поддержива[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] независимость#! [COUNTRY.GetAltNameNoFlag('RU_CL_RP')]"
 support_independence_trigger_false_desc_first: "[TARGET_COUNTRY.GetName] #b не#! #v поддержива[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] независимость#! [COUNTRY.GetAltNameNoFlag('RU_CL_RP')]"
 support_independence_trigger_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] #v поддержива[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] независимость#! [COUNTRY.GetAltName('RU_CL_RP')]"
 support_independence_trigger_false_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] #b не#! #v поддержива[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] независимость#! [COUNTRY.GetAltName('RU_CL_RP')]"
 #defensive_pact: "Defensive Pact"
 defensive_pact_action_name: "[Concept('concept_defensive_pact', 'Оборонительный пакт')]"
 defensive_pact_action_propose_name: "Заключить [Concept('concept_defensive_pact', 'оборонительный пакт')]"
 defensive_pact_action_break_name: "Разорвать [Concept('concept_defensive_pact', 'оборонительный пакт')]"
 defensive_pact_action_notification_name: "[Concept('concept_defensive_pact', 'Оборонительный пакт')] с [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]"
 defensive_pact_action_notification_desc: "Мы заключаем [Concept('concept_defensive_pact', 'оборонительный пакт')] с [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]."
 #defensive_pact_desc: "Establishes a [concept_defensive_pact] between two [Concept('concept_country', '$concept_countries$')]."
 defensive_pact_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] и [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] заключили друг с другом [Concept('concept_defensive_pact', 'оборонительный пакт')]."
 defensive_pact_proposal_notification_name: "Предложение [Concept('concept_defensive_pact', 'оборонительного пакта')]"
 defensive_pact_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] предлага[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] нам заключить [Concept('concept_defensive_pact', 'оборонительный пакт')]."
 defensive_pact_proposal_notification_effects_desc: "$defensive_pact_desc$"
 defensive_pact_proposal_accepted_name: "Предложение [Concept('concept_defensive_pact', 'оборонительного пакта')] принято"
 defensive_pact_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] соглаша[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся заключить с нами [Concept('concept_defensive_pact', 'оборонительный пакт')]."
 defensive_pact_proposal_declined_name: "Предложение [Concept('concept_defensive_pact', 'оборонительного пакта')] отклонено"
 defensive_pact_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся заключать с нами [Concept('concept_defensive_pact', 'оборонительный пакт')]."
 defensive_pact_action_notification_break_name: "[Concept('concept_defensive_pact', 'Оборонительный пакт')] с [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')] расторгнут"
 defensive_pact_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] расторга[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_defensive_pact', 'оборонительный пакт')] с нашей державой."
 defensive_pact_proposal_third_party_accepted_name: "Заключён [Concept('concept_defensive_pact', 'оборонительный пакт')]"
 defensive_pact_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetName] и [TARGET_COUNTRY.GetName] заключили между собой [Concept('concept_defensive_pact', 'оборонительный пакт')]."
 defensive_pact_proposal_third_party_declined_name: "Отказ от [Concept('concept_defensive_pact', 'оборонительного пакта')]"
 defensive_pact_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся вступать в [Concept('concept_defensive_pact', 'оборонительный пакт')] с [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]."
 defensive_pact_action_notification_third_party_break_name: "[Concept('concept_defensive_pact', 'Оборонительный пакт')] расторгнут"
 defensive_pact_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetName] расторга[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_defensive_pact', 'оборонительный пакт')] с [TARGET_COUNTRY.GetAltName('RU_CL_TP')]."
 defensive_pact_effect_desc_global: "Вступает в [Concept('concept_defensive_pact', 'оборонительный пакт')]"
 defensive_pact_effect_desc_first: "[TARGET_COUNTRY.GetName] вступа[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] в [Concept('concept_defensive_pact', 'оборонительный пакт')] с [COUNTRY.GetAltNameNoFlag('RU_CL_TP')]."
 defensive_pact_effect_desc_third: "Государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] вступает в #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ий#! [Concept('concept_defensive_pact', 'оборонительный пакт')]"
 defensive_pact_trigger_desc_global: "В [Concept('concept_defensive_pact', 'оборонительном пакте')]"
 defensive_pact_trigger_false_desc_global: "#b Не#! в [Concept('concept_defensive_pact', 'оборонительном пакте')]"
 defensive_pact_trigger_desc_first: "[TARGET_COUNTRY.GetName] в [Concept('concept_defensive_pact', 'оборонительном пакте')] с [COUNTRY.GetAltNameNoFlag('RU_CL_TP')]."
 defensive_pact_trigger_false_desc_first: "[TARGET_COUNTRY.GetName] #b не#! в [Concept('concept_defensive_pact', 'оборонительном пакте')] с [COUNTRY.GetAltNameNoFlag('RU_CL_TP')]."
 defensive_pact_trigger_desc_third: "Государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] состоит в #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ом#! [Concept('concept_defensive_pact', 'оборонительном пакте')]"
 defensive_pact_trigger_false_desc_third: "Государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] #b не#! состоит в #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ом#! [Concept('concept_defensive_pact', 'оборонительном пакте')]"
 foreign_investment_agreement_trigger_desc_global: "Есть соглашение о [Concept('concept_foreign_investment_rights', 'зарубежных инвестициях')]"
 foreign_investment_agreement_trigger_false_desc_global: "#b Нет#! соглашения о [Concept('concept_foreign_investment_rights', 'зарубежных инвестициях')]"
 foreign_investment_agreement_trigger_desc_first: "[COUNTRY.GetNameNoFlag] име[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] соглашение о [Concept('concept_foreign_investment_rights', 'зарубежных инвестициях')] с [TARGET_COUNTRY.GetAltName('RU_CL_TP')]"
 foreign_investment_agreement_trigger_false_desc_first: "[COUNTRY.GetNameNoFlag] #b не#! име[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] соглашения о [Concept('concept_foreign_investment_rights', 'зарубежных инвестициях')] с [TARGET_COUNTRY.GetAltName('RU_CL_TP')]"
 foreign_investment_agreement_trigger_desc_third: "[COUNTRY.GetName] име[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] соглашение о [Concept('concept_foreign_investment_rights', 'зарубежных инвестициях')] с государством [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 foreign_investment_agreement_trigger_false_desc_third: "[COUNTRY.GetName] #b не#! име[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] соглашения о [Concept('concept_foreign_investment_rights', 'зарубежных инвестициях')] с государством [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 raise_payments: "Поднять выплаты субъекта"
 raise_payments_desc: "Увеличивает требования к выплатам [Concept('concept_subject', 'субъекта')] [Concept('concept_overlord', 'сюзерену')]."
 raise_payments_action_notification_name: "[INITIATOR_COUNTRY.GetName] повыша[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наши выплаты"
 raise_payments_action_notification_desc: "[INITIATOR_COUNTRY.GetName] потребовал[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] увеличить наши выплаты на #negative_value 100%#!. Это привело к увеличению нашего [Concept('concept_liberty_desire', 'желания свободы')]."
 raise_payments_action_propose_name: "$raise_payments$"
 raise_payments_action_break_name: "Восстановить выплаты субъекта"
 raise_payments_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] требу[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltNameNoFormatting('RU_CL_END_T')] увеличения регулярных выплат от [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('RU_CL_RP')]."
 #raise_payments_propose_name: "$raise_payments$"
 #raise_payments_break_name: "[INITIATOR_COUNTRY.GetName] restores regular payments"
 raise_payments_action_notification_break_name: "[INITIATOR_COUNTRY.GetName] восстановил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] выплаты"
 raise_payments_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] восстановил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] выплаты [Concept('concept_subject', 'субъекта')] [Concept('concept_overlord', 'сюзерену')] до обычного уровня."
 raise_payments_trigger_desc_global: "Увеличили выплаты субъекта"
 raise_payments_trigger_false_desc_global: "#b Не#! увеличили выплаты субъекта"
 raise_payments_trigger_desc_first: "[COUNTRY.GetNameNoFlag] потребовал[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] увеличения выплат со стороны своего субъекта [TARGET_COUNTRY.GetAltName('RU_CL_RP')]."
 raise_payments_trigger_false_desc_first: "[COUNTRY.GetNameNoFlag] #b не#! потребовал[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] увеличения выплат со стороны своего субъекта [TARGET_COUNTRY.GetAltName('RU_CL_RP')]."
 raise_payments_trigger_desc_third: "[COUNTRY.GetName] потребовал[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] увеличения выплат со стороны своего субъекта ([AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)])."
 raise_payments_trigger_false_desc_third: "[COUNTRY.GetName] #b не#! потребовал[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] увеличения выплат со стороны своего субъекта ([AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)])."
 RAISE_PAYMENTS_BREAK_ON_COOLDOWN: "Вы пока не можете расторгнуть этот [Concept('concept_diplomatic_pact', 'дипломатический пакт')], он был заключён недавно."
 CHANGE_AUTONOMY_ON_COOLDOWN_OVERLORD: "[Concept('concept_autonomy','Автономия')] не менялась в последние #v 5 лет#! (можно повторно использовать [SCOPE.sCountry('target_country').GetLastCatalystExpiryDate(GetPlayer,'catalyst_autonomy_change_imposed')|v])"
 CHANGE_AUTONOMY_ON_COOLDOWN_SUBJECT: "[Concept('concept_autonomy','Автономия')] не менялась в последние #v 5 лет#! (можно повторно использовать [GetPlayer.GetLastCatalystExpiryDate(SCOPE.sCountry('target_country'),'catalyst_autonomy_change_imposed')|v])"
 REQUEST_AUTONOMY_ON_COOLDOWN: "Мы не просили увеличить [Concept('concept_autonomy','автономию')] в последние #v 5 лет#! (можно повторно использовать [SCOPE.sCountry('target_country').GetLastCatalystExpiryDate(GetPlayer,'catalyst_autonomy_increase_requested')|v])"
 REQUEST_MARKET_ON_COOLDOWN: "Мы не просили передать контроль над рынком в последние #v 5 лет#! (можно повторно использовать [SCOPE.sCountry('target_country').GetLastCatalystExpiryDate(GetPlayer,'catalyst_market_control_requested')|v])"
 SUPPORT_REGIME_ON_COOLDOWN: "Мы не просили поддержки для нашего режима в последние #v 5 лет#! (можно повторно использовать [SCOPE.sCountry('target_country').GetLastCatalystExpiryDate(GetPlayer,'catalyst_support_regime_requested')|v])"
 REQUEST_RECOGNITION_ON_COOLDOWN: "Мы не просили открыть посольство в последние #v 10 лет#! (можно повторно использовать [SCOPE.sCountry('target_country').GetLastCatalystExpiryDate(GetPlayer,'catalyst_recognition_requested')|v])"
 REQUEST_AUTONOMY_RECENTLY_DENIED: "Нам отказали в просьбе увеличить [Concept('concept_autonomy','автономию')] в последние #v 5 лет#!"
 KNOWLEDGE_SHARING_ON_COOLDOWN: "Мы не просили о передаче знаний в последние #v 5 лет#! (можно повторно использовать [SCOPE.sCountry('target_country').GetLastCatalystExpiryDate(GetPlayer,'catalyst_knowledge_sharing_requested')|v])"
 decrease_payments: "Снизить выплаты субъекта"
 decrease_payments_desc: "Уменьшает требования к выплатам [Concept('concept_subject', 'субъекта')] [Concept('concept_overlord', 'сюзерену')]."
 decrease_payments_action_notification_name: "[INITIATOR_COUNTRY.GetName] снижа[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наши выплаты"
 decrease_payments_action_notification_desc: "[INITIATOR_COUNTRY.GetName] позволил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] снизить наши выплаты на #positive_value 90%#!. Это привело к снижению нашего [Concept('concept_liberty_desire', 'желания свободы')]."
 decrease_payments_action_propose_name: "$decrease_payments$"
 decrease_payments_action_break_name: "Восстановить выплаты субъекта"
 decrease_payments_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] позволил[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltNameNoFormatting('RU_CL_END_FEM')] снизить регулярные выплаты от [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('RU_CL_RP')]."
 decrease_payments_action_notification_break_name: "[INITIATOR_COUNTRY.GetName] восстановил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] выплаты"
 decrease_payments_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] восстановил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] наши выплаты до обычного уровня."
 decrease_payments_trigger_desc_global: "Снизили выплаты субъекта"
 decrease_payments_trigger_false_desc_global: "#b Не#! снизили выплаты субъекта"
 decrease_payments_trigger_desc_first: "[COUNTRY.GetNameNoFlag] позволил[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] сократить выплаты со стороны своего субъекта [TARGET_COUNTRY.GetAltName('RU_CL_RP')]."
 decrease_payments_trigger_false_desc_first: "[COUNTRY.GetNameNoFlag] #b не#! позволил[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] сократить выплаты со стороны своего субъекта [TARGET_COUNTRY.GetAltName('RU_CL_RP')]."
 decrease_payments_trigger_desc_third: "[COUNTRY.GetName] позволил[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] сократить выплаты со стороны своего субъекта ([AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)])."
 decrease_payments_trigger_false_desc_third: "[COUNTRY.GetName] #b не#! позволил[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] сократить выплаты со стороны своего субъекта ([AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)])."
 grant_own_market: "Выделить собственный рынок"
 grant_own_market_desc: "Предоставляет [Concept('concept_subject', 'субъекту')] контроль над собственным [Concept('concept_market', 'рынком')]."
 grant_own_market_action_notification_name: "[INITIATOR_COUNTRY.GetName] переда[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] контроль над рынком"
 grant_own_market_action_notification_desc: "[INITIATOR_COUNTRY.GetName] позволил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нам управлять нашим собственным [Concept('concept_market', 'рынком')], независимо от рынка метрополии. Это привело к снижению нашего [Concept('concept_liberty_desire', 'желания свободы')]."
 grant_own_market_action_propose_name: "$grant_own_market$"
 grant_own_market_action_break_name: "Отозвать контроль над рынком"
 grant_own_market_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] позволил[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltNameNoFormatting('RU_CL_END_FEM')] [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('RU_CL_DP')] взять контроль над собственным [Concept('concept_market', 'рынком')]."
 grant_own_market_action_notification_break_name: "[INITIATOR_COUNTRY.GetName] отозвал[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] контроль над рынком"
 grant_own_market_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] отозвал[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] наше право контролировать собственный рынок. Теперь мы зависимы от рынка метрополии."
 grant_own_market_increase_liberty_desire_effect: "Увеличенное [Concept('concept_liberty_desire', 'желание свободы')] из-за высокой [Concept('concept_economic_dependence','экономической зависимости')] от [Concept('concept_overlord','сюзерена')]"
 grant_own_market_decrease_liberty_desire_effect: "Уменьшенное [Concept('concept_liberty_desire', 'желание свободы')] из-за низкой [Concept('concept_economic_dependence','экономической зависимости')] от [Concept('concept_overlord','сюзерена')]"
 grant_own_market_trigger_desc_global: "Субъекту предоставлен собственный рынок"
 grant_own_market_trigger_false_desc_global: "Субъекту #b не#! предоставлен собственный рынок"
 grant_own_market_trigger_desc_first: "[COUNTRY.GetNameNoFlag] предоставил[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] своему субъекту [TARGET_COUNTRY.GetAltName('RU_CL_DP')] собственный рынок"
 grant_own_market_trigger_false_desc_first: "[COUNTRY.GetNameNoFlag] #b не#! предоставил[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] своему субъекту [TARGET_COUNTRY.GetAltName('RU_CL_DP')] собственный рынок"
 grant_own_market_trigger_desc_third: "[COUNTRY.GetName] предоставил[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] своему субъекту ([AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]) собственный рынок"
 grant_own_market_trigger_false_desc_third: "[COUNTRY.GetName] #b не#! предоставил[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] своему субъекту ([AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]) собственный рынок"
 exempt_from_service: "Освобождение от службы"
 exempt_from_service_desc: "Позволяет [Concept('concept_subject', 'субъекту')] самостоятельно решать, поддерживать ли [Concept('concept_overlord', 'сюзерена')] в [Concept('concept_diplomatic_play','дипломатических играх')]."
 exempt_from_service_action_notification_name: "[INITIATOR_COUNTRY.GetName] освобожда[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] от службы"
 exempt_from_service_action_notification_desc: "Мы больше не обязаны вступать в войны, начатые [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]. Это привело к снижению нашего [Concept('concept_liberty_desire', 'желания свободы')]."
 exempt_from_service_action_propose_name: "$exempt_from_service$"
 exempt_from_service_action_break_name: "Отменить освобождение от службы"
 exempt_from_service_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] допустил[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltNameNoFormatting('RU_CL_END_FEM')] освобождение от воинской службы, и [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] больше не име[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltNameNoFormatting('RU_CL_END_T')] обязательств участвовать в войнах метрополии."
 exempt_from_service_action_notification_break_name: "[INITIATOR_COUNTRY.GetName] отозвал[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] освобождение от воинской службы"
 exempt_from_service_action_notification_break_desc: "Мы вновь обязаны вступать в войны, начатые [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]. Это привело к увеличению нашего [Concept('concept_liberty_desire', 'желания свободы')]."
 exempt_from_service_trigger_desc_global: "Освободили субъект от воинской службы"
 exempt_from_service_trigger_false_desc_global: "#b Не#! освободили субъект от воинской службы"
 exempt_from_service_trigger_desc_first: "[COUNTRY.GetNameNoFlag] освободил[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] свой субъект [TARGET_COUNTRY.GetAltName('RU_CL_VP')] от воинской службы"
 exempt_from_service_trigger_false_desc_first: "[COUNTRY.GetNameNoFlag] #b не#! освободил[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] свой субъект [TARGET_COUNTRY.GetAltName('RU_CL_VP')] от воинской службы"
 exempt_from_service_trigger_desc_third: "[COUNTRY.GetName] освободил[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] свой субъект ([AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]) от воинской службы"
 exempt_from_service_trigger_false_desc_third: "[COUNTRY.GetName] #b не#! освободил[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] свой субъект ([AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]) от воинской службы"
 enforce_military_access: "Навязать военный проход"
 enforce_military_access_desc: "Заставляет [Concept('concept_subject', 'субъект')] вступать во все [Concept('concept_war','войны')] своего [Concept('concept_overlord','сюзерена')]."
 enforce_military_access_action_notification_name: "[INITIATOR_COUNTRY.GetName] навязыва[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] военный доступ"
 enforce_military_access_action_notification_desc: "Мы вынуждены вступать во все [Concept('concept_war','войны')], начатые [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]."
 enforce_military_access_action_notification_third_party_name: "Навязывание военного доступа в [TARGET_COUNTRY.GetAltName('RU_CL_PP')]."
 enforce_military_access_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetName] навязыва[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] военный доступ в [TARGET_COUNTRY.GetAltName('RU_CL_PP')]."
 da_evangelize: "Проповедовать"
 da_evangelize_desc: "Распространяет вашу [Concept('concept_religion', 'религию')] на землях [Concept('concept_subject', 'субъекта')]."
 da_evangelize_action_notification_name: "Проповеди в [TARGET_COUNTRY.GetAltName('RU_CL_PP')]"
 da_evangelize_action_notification_desc: "[INITIATOR_COUNTRY.GetName] распространя[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] свою веру в [TARGET_COUNTRY.GetAltName('RU_CL_PP')]."
 da_evangelize_action_notification_third_party_name: "Проповеди в [TARGET_COUNTRY.GetAltName('RU_CL_PP')]"
 da_evangelize_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetName] распространя[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] свою веру в [TARGET_COUNTRY.GetAltName('RU_CL_PP')]."
 da_evangelize_action_propose_name: "Проповедовать"
 da_evangelize_action_break_name: "Прекратить распространение веры"
 da_evangelize_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] использу[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltNameNoFormatting('RU_CL_END_T')] свои возможности сюзерена, чтобы распространять свою [Concept('concept_religion', 'религию')] в [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('RU_CL_PP')]."
 da_evangelize_action_notification_break_name: "#tooltippable_name [INITIATOR_COUNTRY.GetAdjective]ое#! проповедование останавливается."
 da_evangelize_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] прекратил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] распространение веры."
 da_evangelize_action_notification_third_party_break_name: "#tooltippable_name [INITIATOR_COUNTRY.GetAdjective]ое#! проповедование в [TARGET_COUNTRY.GetAltName('RU_CL_PP')] останавливается."
 da_evangelize_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetName] прекратил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] распространение веры в [TARGET_COUNTRY.GetAltName('RU_CL_PP')]."
 da_evangelize_action_trigger_desc_global: "Проповедует в своём субъекте"
 da_evangelize_action_trigger_false_desc_global: "#b Не#! проповедует в своём субъекте"
 da_evangelize_action_trigger_desc_first: "[COUNTRY.GetNameNoFlag] проповедует в своём субъекте [TARGET_COUNTRY.GetAltName('RU_CL_PP')]"
 da_evangelize_action_trigger_false_desc_first: "[COUNTRY.GetNameNoFlag] #b не#! проповедует в своём субъекте [TARGET_COUNTRY.GetAltName('RU_CL_PP')]"
 da_evangelize_action_trigger_desc_third: "[COUNTRY.GetName] проповедует в своём субъекте ([AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)])"
 da_evangelize_action_trigger_false_desc_third: "[COUNTRY.GetName] #b не#! проповедует в своём субъекте ([AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)])"
 da_evangelize_liberty_desire_decrease_custom_tooltip: "[SCOPE.sCountry('target_country').GetAdjectiveNoFormatting]ие чиновники одобрят, если [SCOPE.GetRootScope.GetCountry.GetName] начн[SCOPE.GetRootScope.GetCountry.GetAltNameNoFormatting('RU_CL_END_T')] распространять #tooltippable_name #tooltip:[ROOT.GetCountry.GetStateReligion.GetTooltipTag],DATA_RELIGION_NAME_TOOLTIP,ReligionTooltip [ROOT.GetCountry.GetStateReligion.GetCustom('RU_RL_VP')|l]#!#! и ценности этой религии в [SCOPE.sCountry('target_country').GetAltName('RU_CL_PP')]. [Concept('concept_liberty_desire','Желание свободы')] у этого [Concept('concept_subject','субъекта')] снизится."
 da_evangelize_liberty_desire_increase_custom_tooltip: "[SCOPE.sCountry('target_country').GetAdjectiveNoFormatting]ие чиновники не одобрят, если [SCOPE.GetRootScope.GetCountry.GetName] начн[SCOPE.GetRootScope.GetCountry.GetAltNameNoFormatting('RU_CL_END_T')] распространять #tooltippable_name #tooltip:[ROOT.GetCountry.GetStateReligion.GetTooltipTag],DATA_RELIGION_NAME_TOOLTIP,ReligionTooltip [ROOT.GetCountry.GetStateReligion.GetCustom('RU_RL_VP')|l]#!#! и ценности этой религии в [SCOPE.sCountry('target_country').GetAltName('RU_CL_PP')]. [Concept('concept_liberty_desire','Желание свободы')] у этого [Concept('concept_subject','субъекта')] увеличится."
 da_appoint_colonial_governor: "Назначить губернатора"
 da_appoint_colonial_governor_desc: "Меняет [Concept('concept_ruler', 'правителя')] [Concept('concept_subject', 'субъекта')]. [Concept('concept_liberty_desire', 'Желание свободы')] может измениться в зависимости от выбранного кандидата."
 da_appoint_colonial_governor_action_name: "Назначить губернатора"
 da_appoint_colonial_governor_action_notification_name: "[TARGET_COUNTRY.GetName] меня[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] губернаторов"
 da_appoint_colonial_governor_action_notification_desc: "[INITIATOR_COUNTRY.GetName] заменил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] губернатора [TARGET_COUNTRY.GetAltName('RU_CL_RP')] на нового кандидата."
 da_appoint_colonial_governor_action_notification_third_party_name: "[TARGET_COUNTRY.GetName] меня[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] губернаторов"
 da_appoint_colonial_governor_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetName] заменил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] губернатора [TARGET_COUNTRY.GetAltName('RU_CL_RP')] на нового кандидата."
 da_knowledge_sharing: "Передача знаний"
 da_knowledge_sharing_desc: "Помогает [Concept('concept_country','странам')] делиться открытыми технологиями."
 da_knowledge_sharing_action_notification_name: "Технологии распространяются в [TARGET_COUNTRY.GetAltName('RU_CL_PP')]"
 da_knowledge_sharing_action_notification_desc: "[INITIATOR_COUNTRY.GetName] способству[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] распространению технологий в [TARGET_COUNTRY.GetAltName('RU_CL_PP')]"
 da_knowledge_sharing_action_notification_third_party_name: "Технологии распространяются в [TARGET_COUNTRY.GetAltName('RU_CL_PP')]"
 da_knowledge_sharing_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetName] способству[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] распространению технологий в [TARGET_COUNTRY.GetAltName('RU_CL_PP')]"
 da_knowledge_sharing_action_propose_name: "Предложить передачу знаний"
 da_knowledge_sharing_action_break_name: "Прекратить передачу знаний"
 da_knowledge_sharing_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] активно поддержива[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltNameNoFormatting('RU_CL_END_T')] распространение технологий в [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('RU_CL_PP')]."
 da_knowledge_sharing_action_notification_break_name: "[INITIATOR_COUNTRY.GetName] прекратил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] передачу знаний"
 da_knowledge_sharing_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] прекратил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] поддерживать распространение технологий в нашей стране."
 da_knowledge_sharing_action_notification_third_party_break_name: "Передача знаний между [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')] и [TARGET_COUNTRY.GetAltName('RU_CL_TP')] прекратилась"
 da_knowledge_sharing_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetName] прекратил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] поддерживать распространение технологий в [TARGET_COUNTRY.GetAltName('RU_CL_PP')]."
 da_knowledge_sharing_trigger_desc_global: "Имеет пакт о передаче знаний с субъектом"
 da_knowledge_sharing_trigger_false_desc_global: "#b Не#! имеет пакта о передаче знаний с субъектом"
 da_knowledge_sharing_trigger_desc_first: "[COUNTRY.GetNameNoFlag] име[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] пакт о передаче знаний со своим субъектом [TARGET_COUNTRY.GetAltName('RU_CL_TP')]"
 da_knowledge_sharing_trigger_false_desc_first: "[COUNTRY.GetNameNoFlag] #b не#! име[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] пакта о передаче знаний со своим субъектом [TARGET_COUNTRY.GetAltName('RU_CL_TP')]"
 da_knowledge_sharing_trigger_desc_third: "[COUNTRY.GetName] име[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] пакт о передаче знаний со своим субъектом ([AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)])"
 da_knowledge_sharing_trigger_false_desc_third: "[COUNTRY.GetName] #b не#! име[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] пакта о передаче знаний со своим субъектом ([AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)])"
 da_request_knowledge_sharing: "Запросить передачу знаний"
 da_request_knowledge_sharing_desc: "$da_knowledge_sharing_desc$"
 da_request_knowledge_sharing_action_name: "$da_request_knowledge_sharing$"
 da_request_knowledge_sharing_proposal_accepted_name: "Просьба передать знания принята"
 da_request_knowledge_sharing_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] принял[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нашу просьбу о передаче знаний. [Concept('concept_technology_spread','Распространение технологий')] в нашей стране убыстряется."
 da_request_knowledge_sharing_proposal_declined_name: "В передаче знаний отказано"
 da_request_knowledge_sharing_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нашу просьбу о передаче знаний."
 da_request_knowledge_sharing_proposal_notification_name: "Запрос передачи знаний"
 da_request_knowledge_sharing_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] запрашива[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] подробную информацию о нашей [Concept('concept_technology','технологии')]."
 da_request_knowledge_sharing_proposal_third_party_accepted_name: "Передача знаний [INITIATOR_COUNTRY.GetAltName('RU_CL_DP')] одобрена"
 da_request_knowledge_sharing_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetName] получил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] информацию о [Concept('concept_technology','технологии')] [TARGET_COUNTRY.GetAltName('RU_CL_RP')]."
 da_request_knowledge_sharing_proposal_third_party_declined_name: "[INITIATOR_COUNTRY.GetAltName('RU_CL_DP')] отказано в передаче знаний"
 da_request_knowledge_sharing_proposal_third_party_declined_desc: "[INITIATOR_COUNTRY.GetName] получил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] отказ в ответ на просьбу передать информацию о [Concept('concept_technology','технологии')] [TARGET_COUNTRY.GetAltName('RU_CL_RP')]."
 request_market_control: "Запрос контроля над рынком"
 request_market_control_desc: "Просит [Concept('concept_overlord', 'сюзерена')] предоставить [Concept('concept_subject', 'субъекту')] контроль над собственным [Concept('concept_market', 'рынком')]."
 request_market_control_action_name: "$request_market_control$"
 request_market_control_action_propose_name: "$request_market_control$"
 request_market_control_action_notification_break_name: "Передан контроль над рынком"
 request_market_control_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] вернул[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нам контроль над своим [Concept('concept_market', 'рынком')]."
 request_market_control_action_break_name: "Передача контроля над рынком"
 request_market_control_pact_desc: "[SCOPE.sCountry('country').GetName] созда[SCOPE.sCountry('country').GetAltNameNoFormatting('RU_CL_END_T')] собственный рынок независимо от рынка [SCOPE.sCountry('target_country').GetAltName('RU_CL_RP')]."
 request_market_control_proposal_notification_name: "Запрос контроля над рынком"
 request_market_control_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] обраща[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся с просьбой получить контроль над своим [Concept('concept_market', 'рынком')]."
 request_market_control_proposal_accepted_name: "Согласие на контроль над рынком"
 request_market_control_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] принял[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нашу просьбу о передаче контроля над рынком. Мы сможем распоряжаться своим национальным [Concept('concept_market', 'рынком')]."
 request_market_control_proposal_declined_name: "Отказ в контроле над рынком"
 request_market_control_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нашу просьбу о контроле рынка. Это привело к росту нашего [Concept('concept_liberty_desire','желания свободы' )]."
 request_market_control_proposal_third_party_accepted_name: "Передан контроль над [INITIATOR_COUNTRY.GetAdjectiveNoFormatting|l]им рынком"
 request_market_control_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetName] получил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] от своего [Concept('concept_overlord','сюзерена')] [TARGET_COUNTRY.GetAltName('RU_CL_RP')] контроль над собственным [Concept('concept_market','рынком')]."
 request_market_control_proposal_third_party_declined_name: "Отказ в контроле над [INITIATOR_COUNTRY.GetAdjectiveNoFormatting|l]им рынком"
 request_market_control_proposal_third_party_declined_desc: "[INITIATOR_COUNTRY.GetName] получил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] от своего [Concept('concept_overlord','сюзерена')] [TARGET_COUNTRY.GetAltName('RU_CL_RP')] отказ на просьбу о передаче контроля над собственным [Concept('concept_market', 'рынком')]."
 request_market_control_trigger_desc_global: "Просили сюзерена о предоставлении собственного рынка"
 request_market_control_trigger_false_desc_global: "#b Не#! просили сюзерена о предоставлении собственного рынка"
 request_market_control_trigger_desc_first: "[COUNTRY.GetNameNoFlag] просил[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] сюзерена ([TARGET_COUNTRY.GetName]) о предоставлении собственного рынка"
 request_market_control_trigger_false_desc_first: "[COUNTRY.GetNameNoFlag] #b не#! просил[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] сюзерена ([TARGET_COUNTRY.GetName]) о предоставлении собственного рынка"
 request_market_control_trigger_desc_third: "[COUNTRY.GetName] просил[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] сюзерена ([AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]) о предоставлении собственного рынка"
 request_market_control_trigger_false_desc_third: "[COUNTRY.GetName] #b не#! просил[COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] сюзерена ([AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]) о предоставлении собственного рынка"
 da_support_regime: "Поддержка режима"
 da_support_regime_desc: "Укрепляет [Concept('concept_legitimacy', 'легитимность')] [Concept('concept_subject', 'субъекта')], снижая его [Concept('concept_liberty_desire', 'желание свободы')]."
 da_support_regime_action_notification_name: "[INITIATOR_COUNTRY.GetName] поддержива[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] режим [TARGET_COUNTRY.GetAltName('RU_CL_RP')]"
 da_support_regime_action_notification_desc: "[INITIATOR_COUNTRY.GetName] укрепля[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] легитимность своего субъекта, [TARGET_COUNTRY.GetAltName('RU_CL_RP')]."
 da_support_regime_action_notification_third_party_name: "[INITIATOR_COUNTRY.GetName] поддержал[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] правительство своего [Concept('concept_subject','субъекта')]"
 da_support_regime_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetName] укрепля[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_legitimacy', 'легитимность')] своего [Concept('concept_subject', 'субъекта')] [TARGET_COUNTRY.GetAltName('RU_CL_RP')]."
 da_support_regime_action_propose_name: "Поддержка режима"
 da_support_regime_action_break_name: "Прекратить поддержку режима"
 da_support_regime_pact_desc: "[SCOPE.sCountry('country').GetName] поддержива[SCOPE.sCountry('country').GetAltNameNoFormatting('RU_CL_END_T')] правительство [SCOPE.sCountry('target_country').GetAltName('RU_CL_RP')]."
 da_support_regime_action_notification_break_name: "[INITIATOR_COUNTRY.GetName] больше не поддержива[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_legitimacy', 'легитимность')] нашего правительства."
 da_support_regime_action_notification_break_desc: "Правительство [TARGET_COUNTRY.GetAltName('RU_CL_RP')] больше не пользуется нашей поддержкой."
 da_support_regime_action_notification_third_party_break_name: "Поддержка режима заканчивается"
 da_support_regime_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetName] прекратил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] поддержку правительства [TARGET_COUNTRY.GetAltName('RU_CL_RP')]."
 da_request_support_regime: "Запросить поддержку режима"
 da_request_support_regime_action_name: "$da_request_support_regime$"
 da_request_support_regime_desc: "Укрепляет [Concept('concept_legitimacy','легитимность')] [Concept('concept_subject','субъекта')], снижая его [Concept('concept_liberty_desire','желание свободы')]."
 da_request_support_regime_action_notification_name: "[TARGET_COUNTRY.GetName] поддержива[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] режим [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')]"
 da_request_support_regime_action_notification_desc: "[TARGET_COUNTRY.GetName] укрепля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] легитимность своего субъекта, [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')]."
 da_request_support_regime_action_notification_third_party_name: "[TARGET_COUNTRY.GetName] поддержал[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] правительство своего [Concept('concept_subject','субъекта')]"
 da_request_support_regime_action_notification_third_party_desc: "[TARGET_COUNTRY.GetName] укрепля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_legitimacy','легитимность')] своего [Concept('concept_subject','субъекта')] [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')]."
 da_request_support_regime_action_propose_name: "Поддержать режим"
 da_request_support_regime_action_break_name: "Прекратить поддержку режима"
 da_request_support_regime_proposal_notification_name: "Запрос поддержки режима"
 da_request_support_regime_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] запрашива[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] нашу поддержку своего режима."
 da_request_support_regime_proposal_accepted_name: "Поддержка режима одобрена"
 da_request_support_regime_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] одобрил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] наш запрос о поддержке нашего правящего режима. Наша [Concept('concept_legitimacy','легитимность')] укрепилась."
 da_request_support_regime_proposal_declined_name: "В поддержке режима отказано"
 da_request_support_regime_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нашу просьбу поддержать наш правящий режим. Это привело к росту нашего [Concept('concept_liberty_desire','желания свободы')]."
 da_request_support_regime_proposal_third_party_accepted_name: "[INITIATOR_COUNTRY.GetAdjectiveNoFormatting]ий режим получает поддержку"
 da_request_support_regime_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetName] получил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] от своего [Concept('concept_overlord','сюзерена')] [TARGET_COUNTRY.GetAltName('RU_CL_RP')] заверения в поддержке правящего режима."
 da_request_support_regime_proposal_third_party_declined_name: "[INITIATOR_COUNTRY.GetAdjectiveNoFormatting]ому режиму отказано в поддержке"
 da_request_support_regime_proposal_third_party_declined_desc: "[INITIATOR_COUNTRY.GetName] получил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] от своего [Concept('concept_overlord','сюзерена')] [TARGET_COUNTRY.GetAltName('RU_CL_RP')] отказ в ответ на просьбу о поддержке правящего режима."
 protectorate: "Протекторат"
 protectorate_action_name: "[Concept('concept_protectorate', 'Протекторат')]"
 protectorate_action_propose_name: "Сделать [Concept('concept_protectorate', 'протекторатом')]"
 protectorate_action_break_name: "Дать независимость"
 protectorate_action_ask_to_break_name: "Потребовать независимость"
 protectorate_desc: "Создаёт [Concept('concept_subject', 'субъектные')] отношения типа «[Concept('concept_protectorate', 'протекторат')]» между двумя [Concept( 'concept_country', 'странами' )]."
 protectorate_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] явля[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_protectorate', 'протекторатом')] [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('RU_CL_RP')]."
 protectorate_action_notification_name: "$protectorate_proposal_notification_name$"
 protectorate_action_notification_desc: "$protectorate_proposal_notification_desc$"
 protectorate_proposal_notification_name: "Требование покориться"
 protectorate_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')], чтобы мы стали их [Concept('concept_protectorate', 'протекторатом')]."
 protectorate_proposal_notification_effects_desc: "Согласившись, мы станем их субъектом."
 protectorate_proposal_accepted_name: "Изъявление покорности"
 protectorate_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] соглаша[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся стать нашим [Concept('concept_protectorate', 'протекторатом')]."
 protectorate_proposal_declined_name: "Отказ от подчинения"
 protectorate_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся становиться нашим [Concept('concept_protectorate', 'протекторатом')]."
 protectorate_action_notification_break_name: "Получена независимость"
 protectorate_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] отказыва[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся от [Concept('concept_protectorate', 'протектората')] над нами. Отныне мы снова независимая держава."
 protectorate_proposal_notification_break_name: "Требования независимости"
 protectorate_proposal_notification_break_desc: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')], чтобы мы отказались от [Concept('concept_protectorate', 'протектората')] над ними."
 protectorate_proposal_notification_break_effects_desc: "Согласившись, мы признаем независимость этой державы."
 protectorate_proposal_break_accepted_name: "Получена независимость"
 protectorate_proposal_break_accepted_desc: "[TARGET_COUNTRY.GetName] принима[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наши требования и отказывается от [Concept('concept_protectorate', 'протектората')] над нами. Отныне мы снова независимая держава."
 protectorate_proposal_break_declined_name: "Отказ в независимости"
 protectorate_proposal_break_declined_desc: "[TARGET_COUNTRY.GetName] отверга[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] требование отказаться от [Concept('concept_protectorate', 'протектората')] над нами."
 protectorate_proposal_third_party_accepted_name: "Подчинение страны"
 protectorate_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] соглаша[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся стать [Concept('concept_protectorate', 'протекторатом')] [INITIATOR_COUNTRY.GetAltNameNoFlag('RU_CL_RP')]."
 protectorate_proposal_third_party_declined_name: "Отказ от подчинения"
 protectorate_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся становиться [Concept('concept_protectorate', 'протекторатом')] [INITIATOR_COUNTRY.GetAltNameNoFlag('RU_CL_RP')]."
 protectorate_action_third_party_notification_break_name: "Получена независимость"
 protectorate_action_third_party_notification_break_desc: "[INITIATOR_COUNTRY.GetName] отказыва[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся от [Concept('concept_protectorate', 'протектората')] над [TARGET_COUNTRY.GetAltName('RU_CL_TP')]. Отныне [TARGET_COUNTRY.GetName] — независимая держава."
 protectorate_proposal_third_party_break_accepted_name: "Получена независимость"
 protectorate_proposal_third_party_break_accepted_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся от [Concept('concept_protectorate', 'протектората')] над [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]. Отныне [INITIATOR_COUNTRY.GetName] — независимая держава."
 protectorate_proposal_third_party_break_declined_name: "Отказ в независимости"
 protectorate_proposal_third_party_break_declined_desc: "[TARGET_COUNTRY.GetName] отверга[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] требование отказаться от [Concept('concept_protectorate', 'протектората')] над [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')]."
 protectorate_effect_desc_global: "Становится [Concept('concept_protectorate', 'протекторатом')]"
 protectorate_effect_desc_first: "[TARGET_COUNTRY.GetName] теперь #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ий#! [Concept('concept_protectorate', 'протекторат')]"
 protectorate_effect_desc_third: "Государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] теперь #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ий#! [Concept('concept_protectorate', 'протекторат')]"
 protectorate_trigger_desc_global: "Является [Concept('concept_protectorate', 'протекторатом')]"
 protectorate_trigger_false_desc_global: "#b Не#! является [Concept('concept_protectorate', 'протекторатом')]"
 protectorate_trigger_desc_first: "[TARGET_COUNTRY.GetName] явля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]им#! [Concept('concept_protectorate', 'протекторатом')]"
 protectorate_trigger_false_desc_first: "[TARGET_COUNTRY.GetName] #b не#! явля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]им#! [Concept('concept_protectorate', 'протекторатом')]"
 protectorate_trigger_desc_third: "Государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] является #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]им#! [Concept('concept_protectorate', 'протекторатом')]"
 protectorate_trigger_false_desc_third: "Государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] #b не#! является #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]им#! [Concept('concept_protectorate', 'протекторатом')]"
 become_protectorate: "Просьба принять протекторат"
 become_protectorate_action_name: "Просьба принять [Concept('concept_protectorate', 'протекторат')]"
 become_protectorate_action_propose_name: "Просьба принять [Concept('concept_protectorate', 'протекторат')]"
 become_protectorate_desc: "Создаёт [Concept('concept_subject_type', 'субъектные')] отношения типа «[Concept('concept_protectorate', 'протекторат')]» между двумя [Concept( 'concept_country', 'странами' )]. Предложившая сторона становится [Concept('concept_subject', 'субъектом')]."
 become_protectorate_proposal_notification_name: "Просьба о [Concept('concept_protectorate', 'протекторате')]"
 become_protectorate_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] жела[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] подчиниться и стать нашим [Concept('concept_protectorate', 'протекторатом')]."
 become_protectorate_proposal_notification_effects_desc: "Если мы согласимся, они станут нашим субъектом."
 become_protectorate_proposal_accepted_name: "Просьба о [Concept('concept_protectorate', 'протекторате')] принята"
 become_protectorate_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] принима[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наше прошение стать их [Concept('concept_protectorate', 'протекторатом')]."
 become_protectorate_proposal_declined_name: "Просьба о [Concept('concept_protectorate', 'протекторате')] отклонена"
 become_protectorate_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] нам в прошении стать их [Concept('concept_protectorate', 'протекторатом')]."
 become_protectorate_proposal_third_party_accepted_name: "Подчинение страны"
 become_protectorate_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] соглаша[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся принять [Concept('concept_protectorate', 'протекторат')] над [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')] и стать его сюзереном."
 become_protectorate_proposal_third_party_declined_name: "Отказ от подчинения"
 become_protectorate_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся становиться сюзереном [INITIATOR_COUNTRY.GetAltNameNoFlag('RU_CL_RP')]."
 puppet: "Марионетка"
 puppet_action_name: "[Concept('concept_puppet', 'Марионетка')]"
 puppet_action_propose_name: "Сделать [Concept('concept_puppet', 'марионеткой')]"
 puppet_action_break_name: "Дать независимость"
 puppet_action_ask_to_break_name: "Потребовать независимость"
 puppet_desc: "Создаёт [Concept('concept_subject_type', 'субъектные')] отношения типа «[Concept('concept_puppet', 'марионетка')]» между двумя [Concept( 'concept_country', 'странами' )]."
 puppet_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] явля[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_puppet', 'марионеткой')] [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('RU_CL_RP')]."
 puppet_action_notification_name: "Требование стать [Concept('concept_puppet', 'марионеткой')]"
 puppet_action_notification_desc: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')], чтобы мы стали их [Concept('concept_puppet', 'марионеткой')]."
 puppet_action_notification_break_name: "Получена независимость"
 puppet_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] прекраща[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] считать наше государство своей [Concept('concept_puppet', 'марионеткой')]. Отныне мы снова независимая держава."
 puppet_proposal_notification_break_name: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] независимости"
 puppet_proposal_notification_break_desc: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')], чтобы мы прекратили считать их [Concept('concept_puppet', 'марионеткой')]."
 puppet_proposal_notification_break_effects_desc: "Согласившись, мы признаем независимость этой державы."
 puppet_proposal_break_accepted_name: "Получена независимость"
 puppet_proposal_break_accepted_desc: "[TARGET_COUNTRY.GetName] принима[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наши требования и прекращает считать наше государство своей [Concept('concept_puppet', 'марионеткой')]. Отныне мы снова независимая держава."
 puppet_proposal_break_declined_name: "Отказ в независимости"
 puppet_proposal_break_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся дать нам независимость и перестать считать наше государство своей [Concept('concept_puppet', 'марионеткой')]."
 puppet_proposal_third_party_break_accepted_name: "Получена независимость"
 puppet_proposal_third_party_break_accepted_desc: "[TARGET_COUNTRY.GetName] прекраща[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] считать [INITIATOR_COUNTRY.GetAltName('RU_CL_DP')] своей [Concept('concept_puppet', 'марионеткой')]. Отныне [INITIATOR_COUNTRY.GetName] — независимая держава."
 puppet_proposal_third_party_break_declined_name: "Отказ в независимости"
 puppet_proposal_third_party_break_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся дать независимость [INITIATOR_COUNTRY.GetAltNameNoFlag('RU_CL_DP')] и перестать считать его своей [Concept('concept_puppet', 'марионеткой')]."
 puppet_effect_desc_global: "Становится [Concept('concept_puppet', 'марионеткой')]"
 puppet_effect_desc_first: "[TARGET_COUNTRY.GetName] теперь #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ая#! [Concept('concept_puppet', 'марионетка')]"
 puppet_effect_desc_third: "Государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] теперь #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ая#! [Concept('concept_puppet', 'марионетка')]"
 personal_union_effect_desc_global: "Становится участником [Concept('concept_personal_union', 'личной унии')]"
 personal_union_effect_desc_first: "[TARGET_COUNTRY.GetName] получа[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] статус младшего партнёра в [Concept('concept_personal_union', 'личной унии')] с [COUNTRY.GetAltNameNoFlag('RU_CL_TP')]"
 personal_union_effect_desc_third: "Государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] теперь младший партнёр в [Concept('concept_personal_union', 'личной унии')] с [COUNTRY.GetAltNameNoFlag('RU_CL_TP')]"
 puppet_trigger_desc_global: "Является [Concept('concept_puppet', 'марионеткой')]"
 puppet_trigger_false_desc_global: "#b Не#! является [Concept('concept_puppet', 'марионеткой')]"
 puppet_trigger_desc_first: "[TARGET_COUNTRY.GetName] явля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ой#! [Concept('concept_puppet', 'марионеткой')]"
 puppet_trigger_false_desc_first: "[TARGET_COUNTRY.GetName] #b не#! явля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ой#! [Concept('concept_puppet', 'марионеткой')]"
 puppet_trigger_desc_third: "[COUNTRY.GetNameNoFlag] явля[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_puppet', 'марионеткой')] государства [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetName)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 puppet_trigger_false_desc_third: "[COUNTRY.GetNameNoFlag] #b не#! явля[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_puppet', 'марионеткой')] государства [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetName)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 tributary: "Данник"
 tributary_action_name: "[Concept('concept_tributary', 'Данник')]"
 tributary_action_propose_name: "Сделать [Concept('concept_tributary', 'данником')]"
 tributary_action_break_name: "Дать независимость"
 tributary_action_ask_to_break_name: "Потребовать независимость"
 tributary_desc: "Создаёт [Concept('concept_subject_type', 'субъектные')] отношения типа «[Concept('concept_tributary', 'данник')]» между двумя [Concept( 'concept_country', 'странами' )]."
 tributary_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] явля[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_tributary', 'данником')] [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('RU_CL_RP')]."
 tributary_action_notification_name: "$tributary_proposal_notification_name$"
 tributary_action_notification_desc: "$tributary_proposal_notification_desc$"
 tributary_proposal_notification_name: "Требование покориться"
 tributary_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')], чтобы мы стали их [Concept('concept_tributary', 'данником')]."
 tributary_proposal_notification_effects_desc: "Согласившись, мы станем их субъектом."
 tributary_proposal_accepted_name: "Изъявление покорности"
 tributary_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] соглаша[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся стать нашим [Concept('concept_tributary', 'данником')]."
 tributary_proposal_declined_name: "Отказ от подчинения"
 tributary_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся становиться нашим [Concept('concept_tributary', 'данником')]."
 tributary_action_notification_break_name: "Получена независимость"
 tributary_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] прекраща[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] считать наше государство своим [Concept('concept_tributary', 'данником')]. Отныне мы снова независимая держава."
 tributary_proposal_notification_break_name: "Требования независимости"
 tributary_proposal_notification_break_desc: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')], чтобы мы прекратили считать их нашим [Concept('concept_tributary', 'данником')]."
 tributary_proposal_notification_break_effects_desc: "Согласившись, мы признаем независимость этой державы."
 tributary_proposal_break_accepted_name: "Получена независимость"
 tributary_proposal_break_accepted_desc: "[TARGET_COUNTRY.GetName] принима[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наши требования и прекращает считать наше государство своим [Concept('concept_tributary', 'данником')]. Отныне мы снова независимая держава."
 tributary_proposal_break_declined_name: "Отказ в независимости"
 tributary_proposal_break_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся дать нам независимость и перестать считать наше государство своим [Concept('concept_tributary', 'данником')]."
 tributary_proposal_third_party_accepted_name: "Подчинение страны"
 tributary_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] соглаша[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся стать [Concept('concept_tributary', 'данником')] [INITIATOR_COUNTRY.GetAltNameNoFlag('RU_CL_RP')]."
 tributary_proposal_third_party_declined_name: "Отказ от подчинения"
 tributary_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся становиться [Concept('concept_tributary', 'данником')] [INITIATOR_COUNTRY.GetAltNameNoFlag('RU_CL_RP')]."
 tributary_action_third_party_notification_break_name: "Получена независимость"
 tributary_action_third_party_notification_break_desc: "[INITIATOR_COUNTRY.GetName] прекраща[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] считать [TARGET_COUNTRY.GetAltName('RU_CL_VP')] своим [Concept('concept_tributary', 'данником')]. Отныне [TARGET_COUNTRY.GetName] — независимая держава."
 tributary_proposal_third_party_break_accepted_name: "Получена независимость"
 tributary_proposal_third_party_break_accepted_desc: "[TARGET_COUNTRY.GetName] прекраща[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] считать государство [INITIATOR_COUNTRY.GetName] своим [Concept('concept_tributary', 'данником')]. Отныне [INITIATOR_COUNTRY.GetName] — независимая держава."
 tributary_proposal_third_party_break_declined_name: "Отказ в независимости"
 tributary_proposal_third_party_break_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся дать независимость [INITIATOR_COUNTRY.GetAltNameNoFlag('RU_CL_DP')] и перестать считать его своим [Concept('concept_tributary', 'данником')]."
 tributary_effect_desc_global: "Становится [Concept('concept_tributary', 'данником')]"
 tributary_effect_desc_first: "[TARGET_COUNTRY.GetName] теперь #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ий#! [Concept('concept_tributary', 'данник')]"
 tributary_effect_desc_third: "Государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] теперь #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ий#! [Concept('concept_tributary', 'данник')]"
 tributary_trigger_desc_global: "Является [Concept('concept_tributary', 'данником')]"
 tributary_trigger_false_desc_global: "#b Не#! является [Concept('concept_tributary', 'данником')]"
 tributary_trigger_desc_first: "[TARGET_COUNTRY.GetName] явля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]им#! [Concept('concept_tributary', 'данником')]"
 tributary_trigger_false_desc_first: "[TARGET_COUNTRY.GetName] #b не#! явля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]им#! [Concept('concept_tributary', 'данником')]"
 tributary_trigger_desc_third: "Государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] является #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]им#! [Concept('concept_tributary', 'данником')]"
 tributary_trigger_false_desc_third: "Государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] #b не#! является #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]им#! [Concept('concept_tributary', 'данником')]"
 become_tributary: "Просьба взять в данники"
 become_tributary_action_name: "Просьба взять в [Concept('concept_tributary', 'данники')]"
 become_tributary_action_propose_name: "Просьба взять в [Concept('concept_tributary', 'данники')]"
 become_tributary_desc: "Создаёт [Concept('concept_subject_type', 'субъектные')] отношения типа «[Concept('concept_tributary', 'данник')]» между двумя [Concept( 'concept_country', 'странами' )]. Предложившая сторона становится [Concept('concept_subject', 'субъектом')]."
 become_tributary_proposal_notification_name: "Просьба взять в [Concept('concept_tributary', 'данники')]"
 become_tributary_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] жела[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] подчиниться и стать нашим [Concept('concept_tributary', 'данником')]."
 become_tributary_proposal_notification_effects_desc: "Если мы согласимся, они станут нашим субъектом."
 become_tributary_proposal_accepted_name: "Просьба взять в [Concept('concept_tributary', 'данники')] принята"
 become_tributary_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] принима[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наше прошение стать их [Concept('concept_tributary', 'данником')]."
 become_tributary_proposal_declined_name: "Просьба взять в [Concept('concept_tributary', 'данники')] отклонена"
 become_tributary_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] нам в прошении стать их [Concept('concept_tributary', 'данником')]."
 become_tributary_proposal_third_party_accepted_name: "Подчинение страны"
 become_tributary_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] соглаша[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся взять в [Concept('concept_tributary', 'данники')] [INITIATOR_COUNTRY.GetAltName('RU_CL_DP')] и стать его сюзереном."
 become_tributary_proposal_third_party_declined_name: "Отказ от подчинения"
 become_tributary_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся становиться сюзереном [INITIATOR_COUNTRY.GetAltNameNoFlag('RU_CL_RP')]."
 vassal: "Вассал"
 vassal_action_name: "[Concept('concept_vassal', 'Вассал')]"
 vassal_action_propose_name: "Сделать [Concept('concept_vassal', 'вассалом')]"
 vassal_action_break_name: "Дать независимость"
 vassal_action_ask_to_break_name: "Потребовать независимость"
 vassal_desc: "Создаёт [Concept('concept_subject_type', 'субъектные')] отношения типа «[Concept('concept_vassal', 'вассал')]» между двумя [Concept( 'concept_country', 'странами' )]."
 vassal_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] явля[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_vassal', 'вассалом')] [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('RU_CL_RP')]."
 vassal_action_notification_name: "Предложение стать [Concept('concept_vassal', 'вассалом')]"
 vassal_action_notification_desc: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')], чтобы мы стали их [Concept('concept_vassal', 'вассалом')]."
 vassal_action_notification_break_name: "Получена независимость"
 vassal_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] прекраща[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] считать наше государство своим [Concept('concept_vassal', 'вассалом')]. Отныне мы снова независимая держава."
 vassal_proposal_notification_break_name: "Требования независимости"
 vassal_proposal_notification_break_desc: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')], чтобы мы прекратили считать их своим [Concept('concept_vassal', 'вассалом')]."
 vassal_proposal_notification_break_effects_desc: "Согласившись, мы признаем независимость этой державы."
 vassal_proposal_break_accepted_name: "Получена независимость"
 vassal_proposal_break_accepted_desc: "[TARGET_COUNTRY.GetName] принима[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наши требования и прекращает считать наше государство своим [Concept('concept_vassal', 'вассалом')]. Отныне мы снова независимая держава."
 vassal_proposal_break_declined_name: "Отказ в независимости"
 vassal_proposal_break_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся дать нам независимость и перестать считать наше государство своим [Concept('concept_vassal', 'вассалом')]."
 vassal_proposal_third_party_break_accepted_name: "Получена независимость"
 vassal_proposal_third_party_break_accepted_desc: "[TARGET_COUNTRY.GetName] прекраща[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] считать [INITIATOR_COUNTRY.GetAltName('RU_CL_DP')] своим [Concept('concept_vassal', 'вассалом')]. Отныне [INITIATOR_COUNTRY.GetName] — независимая держава."
 vassal_proposal_third_party_break_declined_name: "Отказ в независимости"
 vassal_proposal_third_party_break_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся дать независимость [INITIATOR_COUNTRY.GetAltNameNoFlag('RU_CL_DP')] и перестать считать его своим [Concept('concept_vassal', 'вассалом')]."
 vassal_effect_desc_global: "Становится [Concept('concept_vassal', 'вассалом')]"
 vassal_effect_desc_first: "[TARGET_COUNTRY.GetName] теперь #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ий#! [Concept('concept_vassal', 'вассал')]"
 vassal_effect_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] теперь [Concept('concept_vassal', 'вассал')] [COUNTRY.GetAltName('RU_CL_RP')]"
 personal_union: "Личная уния"
 personal_union_action_name: "[Concept('concept_personal_union', 'Личная уния')]"
 personal_union_action_propose_name: "Сделать частью [Concept('concept_personal_union', 'личной унии')]"
 personal_union_action_break_name: "Дать независимость"
 personal_union_action_ask_to_break_name: "Потребовать независимость"
 personal_union_desc: "Создаёт [Concept('concept_subject_type', 'субъектные')] отношения типа «[Concept('concept_personal_union', 'личная уния')]» между двумя [Concept( 'concept_country', 'странами' )]."
 personal_union_pact_desc: "Государство [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] состоит в [Concept('concept_personal_union', 'личной унии')] с [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('RU_CL_TP')]."
 personal_union_action_notification_name: "Навязывание личного союза"
 personal_union_action_notification_desc: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')], чтобы мы вступили с ними в [Concept('concept_personal_union', 'личную унию')]."
 personal_union_action_notification_break_name: "Получена независимость"
 personal_union_action_notification_break_desc: "Государство [INITIATOR_COUNTRY.GetName] освобождает наше государство от [Concept('concept_personal_union', 'личной унии')]. Отныне мы снова независимая держава."
 personal_union_proposal_notification_break_name: "Требования независимости"
 personal_union_proposal_notification_break_desc: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')], чтобы мы освободили их от [Concept('concept_personal_union', 'личной унии')]."
 personal_union_proposal_notification_break_effects_desc: "Согласившись, мы признаем независимость этой державы."
 personal_union_proposal_break_accepted_name: "Получена независимость"
 personal_union_proposal_break_accepted_desc: "[TARGET_COUNTRY.GetName] принима[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наши требования и освобождает наше государство от [Concept('concept_personal_union', 'личной унии')]. Отныне мы снова независимая держава."
 personal_union_proposal_break_declined_name: "Отказ в независимости"
 personal_union_proposal_break_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся освобождать наше государство от [Concept('concept_personal_union', 'личной унии')]."
 personal_union_proposal_third_party_break_accepted_name: "Получена независимость"
 personal_union_proposal_third_party_break_accepted_desc: "[TARGET_COUNTRY.GetName] освобожда[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [INITIATOR_COUNTRY.GetAltName('RU_CL_DP')] от [Concept('concept_personal_union', 'личной унии')]. Отныне [INITIATOR_COUNTRY.GetName] — независимая держава."
 personal_union_proposal_third_party_break_declined_name: "Отказ в независимости"
 personal_union_proposal_third_party_break_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся освобождать [INITIATOR_COUNTRY.GetAltName('RU_CL_DP')] от [Concept('concept_personal_union', 'личной унии')]."
 dominion: "Доминион"
 dominion_action_name: "[Concept('concept_dominion', 'Доминион')]"
 dominion_action_propose_name: "Сделать [Concept('concept_dominion', 'доминионом')]"
 dominion_action_break_name: "Дать независимость"
 dominion_action_ask_to_break_name: "Потребовать независимость"
 dominion_desc: "Создаёт [Concept('concept_subject_type', 'субъектные')] отношения типа «[Concept('concept_dominion', 'доминион')]» между двумя [Concept( 'concept_country', 'странами' )]."
 dominion_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] явля[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_dominion', 'доминионом')] [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('RU_CL_RP')]."
 dominion_action_notification_name: "Предложение стать [Concept('concept_dominion', 'доминионом')]"
 dominion_action_notification_desc: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')], чтобы мы стали их [Concept('concept_dominion', 'доминионом')]."
 dominion_action_notification_break_name: "Получена независимость"
 dominion_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] прекраща[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] считать наше государство своим [Concept('concept_dominion', 'доминионом')]. Отныне мы снова независимая держава."
 dominion_proposal_notification_break_name: "Требования независимости"
 dominion_proposal_notification_break_desc: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')], чтобы мы прекратили считать их нашим [Concept('concept_dominion', 'доминионом')]."
 dominion_proposal_notification_break_effects_desc: "Согласившись, мы признаем независимость этой державы."
 dominion_proposal_break_accepted_name: "Получена независимость"
 dominion_proposal_break_accepted_desc: "[TARGET_COUNTRY.GetName] принима[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наши требования и прекращает считать наше государство своим [Concept('concept_dominion', 'доминионом')]. Отныне мы снова независимая держава."
 dominion_proposal_break_declined_name: "Отказ в независимости"
 dominion_proposal_break_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся дать нам независимость и перестать считать наше государство своим [Concept('concept_dominion', 'доминионом')]."
 dominion_action_third_party_notification_break_name: "Получена независимость"
 dominion_action_third_party_notification_break_desc: "[INITIATOR_COUNTRY.GetName] прекраща[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] считать [TARGET_COUNTRY.GetAltName('RU_CL_VP')] своим [Concept('concept_dominion', 'доминионом')]. Отныне [TARGET_COUNTRY.GetName] — независимая держава."
 dominion_proposal_third_party_break_accepted_name: "Получена независимость"
 dominion_proposal_third_party_break_accepted_desc: "[TARGET_COUNTRY.GetName] прекраща[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] считать государство [INITIATOR_COUNTRY.GetName] своим [Concept('concept_dominion', 'доминионом')]. Отныне [INITIATOR_COUNTRY.GetName] — независимая держава."
 dominion_proposal_third_party_break_declined_name: "Отказ в независимости"
 dominion_proposal_third_party_break_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся дать независимость [INITIATOR_COUNTRY.GetAltNameNoFlag('RU_CL_DP')] и перестать считать его своим [Concept('concept_dominion', 'доминионом')]."
 dominion_proposal_notification_name: "Требование покориться"
 dominion_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')], чтобы мы стали их [Concept('concept_dominion', 'доминионом')]."
 dominion_proposal_notification_effects_desc: "Согласившись, мы станем их субъектом."
 dominion_proposal_accepted_name: "Изъявление покорности"
 dominion_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] соглаша[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся стать нашим [Concept('concept_dominion', 'доминионом')]."
 dominion_proposal_declined_name: "Отказ от подчинения"
 dominion_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся становиться нашим [Concept('concept_dominion', 'доминионом')]."
 dominion_proposal_third_party_accepted_name: "Подчинение страны"
 dominion_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] соглаша[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся стать [Concept('concept_dominion', 'доминионом')] [INITIATOR_COUNTRY.GetAltNameNoFlag('RU_CL_RP')]."
 dominion_proposal_third_party_declined_name: "Отказ от подчинения"
 dominion_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся становиться [Concept('concept_dominion', 'доминионом')] [INITIATOR_COUNTRY.GetAltNameNoFlag('RU_CL_RP')]."
 dominion_effect_desc_global: "Становится [Concept('concept_dominion', 'доминионом')]"
 dominion_effect_desc_first: "[TARGET_COUNTRY.GetName] теперь #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ий#! [Concept('concept_dominion', 'доминион')]"
 dominion_effect_desc_third: "Государство [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] теперь #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ий#! [Concept('concept_dominion', 'доминион')]"
 dominion_trigger_desc_global: "Является [Concept('concept_dominion', 'доминионом')]"
 dominion_trigger_false_desc_global: "#b Не#! является [Concept('concept_dominion', 'доминионом')]"
 dominion_trigger_desc_first: "[TARGET_COUNTRY.GetName] явля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]им#! [Concept('concept_dominion', 'доминионом')]"
 dominion_trigger_false_desc_first: "[TARGET_COUNTRY.GetName] #b не#! явля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]им#! [Concept('concept_dominion', 'доминионом')]"
 dominion_trigger_desc_third: "[COUNTRY.GetName] явля[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_dominion', 'доминионом')] государства [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 dominion_trigger_false_desc_third: "[COUNTRY.GetNameNoFlag] #b не#! явля[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_dominion', 'доминионом')] государства [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetName)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 vassal_trigger_desc_global: "Является [Concept('concept_vassal', 'вассалом')]"
 vassal_trigger_false_desc_global: "#b Не#! является [Concept('concept_vassal', 'вассалом')]"
 vassal_trigger_desc_first: "[TARGET_COUNTRY.GetName] явля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся [COUNTRY.GetAdjectiveNoFlag|l]им [Concept('concept_vassal', 'вассалом')]"
 vassal_trigger_false_desc_first: "[TARGET_COUNTRY.GetName] #b не#! явля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся [COUNTRY.GetAdjectiveNoFlag|l]им [Concept('concept_vassal', 'вассалом')]"
 vassal_trigger_desc_third: "[COUNTRY.GetNameNoFlag] явля[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_vassal', 'вассалом')] государства [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetName)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 vassal_trigger_false_desc_third: "[COUNTRY.GetNameNoFlag] #b не#! явля[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_vassal', 'вассалом')] государства [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetName)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 become_dominion: "Просьба принять доминион"
 become_dominion_action_name: "Просьба принять [Concept('concept_dominion', 'доминион')]"
 become_dominion_desc: "Создаёт [Concept('concept_subject_type', 'субъектные')] отношения типа «[Concept('concept_dominion', 'доминион')]» между двумя [Concept( 'concept_country', 'странами' )]. Предложившая сторона становится [Concept('concept_subject', 'субъектом')]."
 become_dominion_proposal_notification_name: "Просьба принять [Concept('concept_dominion', 'доминион')]"
 become_dominion_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] жела[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] подчиниться и стать нашим [Concept('concept_dominion', 'доминионом')]."
 become_dominion_proposal_notification_effects_desc: "Если мы согласимся, они станут нашим субъектом."
 become_dominion_proposal_accepted_name: "Просьба о [Concept('concept_dominion', 'доминионе')] принята"
 become_dominion_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] принима[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наше прошение стать их [Concept('concept_dominion', 'доминионом')]."
 become_dominion_proposal_declined_name: "Просьба о [Concept('concept_dominion', 'доминионе')] отклонена"
 become_dominion_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] нам в прошении стать их [Concept('concept_dominion', 'доминионом')]."
 become_dominion_proposal_third_party_accepted_name: "Подчинение страны"
 become_dominion_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] соглаша[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся принять [Concept('concept_dominion', 'доминион')] над [INITIATOR_COUNTRY.GetAltName('RU_CL_TP')] и стать его сюзереном."
 become_dominion_proposal_third_party_declined_name: "Отказ от подчинения"
 become_dominion_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся становиться сюзереном [INITIATOR_COUNTRY.GetAltNameNoFlag('RU_CL_RP')]."
 colony: "Колония"
 colony_action_name: "[Concept('concept_colony_subject', 'Колония')]"
 colony_action_propose_name: "Превратить в [Concept('concept_colony_subject', 'колонию')]"
 colony_action_break_name: "Дать независимость"
 colony_action_ask_to_break_name: "Потребовать независимость"
 colony_desc: "Создаёт [Concept('concept_subject_type', 'субъектные')] отношения типа «[Concept('concept_subject_type', 'колония')]» между двумя [Concept( 'concept_country', 'странами' )]."
 colony_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] явля[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_colony_subject', 'колонией')] [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('RU_CL_RP')]."
 colony_action_notification_name: "Предложение стать [Concept('concept_colony_subject', 'колонией')]"
 colony_action_notification_desc: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')], чтобы мы стали их [Concept('concept_colony_subject', 'колонией')]."
 colony_action_notification_break_name: "Получена независимость"
 colony_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] прекраща[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] считать наше государство своей [Concept('concept_colony_subject', 'колонией')]. Отныне мы снова независимая держава."
 colony_proposal_notification_break_name: "Требования независимости"
 colony_proposal_notification_break_desc: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')], чтобы мы прекратили считать их нашей [Concept('concept_colony_subject', 'колонией')]."
 colony_proposal_notification_break_effects_desc: "Согласившись, мы признаем независимость этой державы."
 colony_proposal_break_accepted_name: "Получена независимость"
 colony_proposal_break_accepted_desc: "[TARGET_COUNTRY.GetName] принима[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наши требования и прекращает считать наше государство своей [Concept('concept_colony_subject', 'колонией')]. Отныне мы снова независимая держава."
 colony_proposal_break_declined_name: "Отказ в независимости"
 colony_proposal_break_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся дать нам независимость и перестать считать наше государство своей [Concept('concept_colony_subject', 'колонией')]."
 colony_action_third_party_notification_break_name: "Получена независимость"
 colony_action_third_party_notification_break_desc: "[INITIATOR_COUNTRY.GetName] прекраща[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] считать [TARGET_COUNTRY.GetAltName('RU_CL_VP')] своей [Concept('concept_colony_subject', 'колонией')]. Отныне [TARGET_COUNTRY.GetName] — независимая держава."
 colony_proposal_third_party_break_accepted_name: "Получена независимость"
 colony_proposal_third_party_break_accepted_desc: "[TARGET_COUNTRY.GetName] прекраща[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] считать государство [INITIATOR_COUNTRY.GetName] своей [Concept('concept_colony_subject', 'колонией')]. Отныне [INITIATOR_COUNTRY.GetName] — независимая держава."
 colony_proposal_third_party_break_declined_name: "Отказ в независимости"
 colony_proposal_third_party_break_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся дать независимость [INITIATOR_COUNTRY.GetAltName('RU_CL_DP')] и перестать считать это государство своей [Concept('concept_colony_subject', 'колонией')]."
 colony_proposal_notification_name: "Требование покориться"
 colony_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')], чтобы мы стали их [Concept('concept_colony_subject', 'колонией')]."
 colony_proposal_notification_effects_desc: "Согласившись, мы станем их субъектом."
 colony_proposal_accepted_name: "Изъявление покорности"
 colony_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] соглаша[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся стать нашей [Concept('concept_colony_subject', 'колонией')]."
 colony_proposal_declined_name: "Отказ от подчинения"
 colony_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся становиться нашей [Concept('concept_colony_subject', 'колонией')]."
 colony_proposal_third_party_accepted_name: "Подчинение страны"
 colony_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] соглаша[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся стать [Concept('concept_colony_subject', 'колонией')] [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')]."
 colony_proposal_third_party_declined_name: "Отказ от подчинения"
 colony_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся становиться [Concept('concept_colony_subject', 'колонией')] [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')]."
 colony_effect_desc_global: "Теперь [Concept('concept_colony_subject', 'колония')]"
 colony_effect_desc_first: "[TARGET_COUNTRY.GetName] теперь #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ая#! [Concept('concept_colony_subject', 'колония')]"
 colony_effect_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] теперь [Concept('concept_colony_subject', 'колония')] [COUNTRY.GetAltName('RU_CL_RP')]"
 colony_trigger_desc_global: "Является [Concept('concept_colony_subject', 'колонией')]"
 colony_trigger_false_desc_global: "#b Не#! является [Concept('concept_colony_subject', 'колонией')]"
 colony_trigger_desc_first: "[TARGET_COUNTRY.GetName] явля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ой#! [Concept('concept_colony_subject', 'колонией')]"
 colony_trigger_false_desc_first: "[TARGET_COUNTRY.GetName] #b не#! явля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ой#! [Concept('concept_colony_subject', 'колонией')]"
 colony_trigger_desc_third: "[COUNTRY.GetName] явля[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_colony_subject', 'колонией')] государства [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 colony_trigger_false_desc_third: "[COUNTRY.GetNameNoFlag] #b не#! явля[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_colony_subject', 'колонией')] государства [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetName)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 become_colony: "Просьба принять статус колонии"
 become_colony_action_name: "Просьба принять статус [Concept('concept_colony_subject', 'колонии')]"
 become_colony_desc: "Создаёт [Concept('concept_subject_type', 'субъектные')] отношения типа «[Concept('concept_colony_subject', 'колония')]» между двумя [Concept( 'concept_country', 'странами' )]. Предложившая сторона становится [Concept('concept_subject', 'субъектом')]."
 become_colony_proposal_notification_name: "Просьба о статусе [Concept('concept_colony_subject', 'колонии')]"
 become_colony_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] жела[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] подчиниться и стать нашей [Concept('concept_colony_subject', 'колонией')]."
 become_colony_proposal_notification_effects_desc: "Если мы согласимся, они станут нашим субъектом."
 become_colony_proposal_accepted_name: "Просьба о статусе [Concept('concept_colony_subject', 'колонии')] принята"
 become_colony_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] принима[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наше прошение стать их [Concept('concept_colony_subject', 'колонией')]."
 become_colony_proposal_declined_name: "Просьба о статусе [Concept('concept_colony_subject', 'колонии')] отклонена"
 become_colony_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] нам в прошении стать их [Concept('concept_colony_subject', 'колонией')]."
 become_colony_proposal_third_party_accepted_name: "Подчинение страны"
 become_colony_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] соглаша[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся сделать [INITIATOR_COUNTRY.GetAltName('RU_CL_VP')] [Concept('concept_colony_subject', 'колонией')] и стать её сюзереном."
 become_colony_proposal_third_party_declined_name: "Отказ от подчинения"
 become_colony_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся становиться сюзереном [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')]."
 chartered_company: "Чартерная компания"
 chartered_company_action_name: "[Concept('concept_chartered_company', 'Чартерная компания')]"
 chartered_company_action_propose_name: "Сделать [Concept('concept_chartered_company', 'чартерной компанией')]"
 chartered_company_action_break_name: "Дать независимость"
 chartered_company_action_ask_to_break_name: "Потребовать независимость"
 chartered_company_desc: "Создаёт [Concept('concept_subject_type', 'субъектные')] отношения типа «[Concept('concept_chartered_company', 'чартерная компания')]» между двумя [Concept( 'concept_country', 'странами' )]."
 chartered_company_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] явля[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_chartered_company', 'чартерной компанией')] [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('RU_CL_RP')]."
 chartered_company_action_notification_name: "Предложение стать [Concept('concept_chartered_company', 'чартерной компанией')]"
 chartered_company_action_notification_desc: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')], чтобы мы стали их [Concept('concept_chartered_company', 'чартерной компанией')]."
 chartered_company_action_notification_break_name: "Получена независимость"
 chartered_company_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] прекраща[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] считать наше государство своей [Concept('concept_chartered_company', 'чартерной компанией')]. Отныне мы снова независимая держава."
 chartered_company_proposal_notification_break_name: "Требования независимости"
 chartered_company_proposal_notification_break_desc: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')], чтобы мы прекратили считать их нашей [Concept('concept_chartered_company', 'чартерной компанией')]."
 chartered_company_proposal_notification_break_effects_desc: "Согласившись, мы признаем независимость этой державы."
 chartered_company_proposal_break_accepted_name: "Получена независимость"
 chartered_company_proposal_break_accepted_desc: "[TARGET_COUNTRY.GetName] принима[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наши требования и прекращает считать наше государство своей [Concept('concept_chartered_company', 'чартерной компанией')]. Отныне мы снова независимая держава."
 chartered_company_proposal_break_declined_name: "Отказ в независимости"
 chartered_company_proposal_break_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся дать нам независимость и перестать считать наше государство своей [Concept('concept_chartered_company', 'чартерной компанией')]."
 chartered_company_action_third_party_notification_break_name: "Получена независимость"
 chartered_company_action_third_party_notification_break_desc: "[INITIATOR_COUNTRY.GetName] прекраща[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] считать [TARGET_COUNTRY.GetAltName('RU_CL_VP')] своей [Concept('concept_chartered_company', 'чартерной компанией')]. Отныне [TARGET_COUNTRY.GetName] — независимая держава."
 chartered_company_proposal_third_party_break_accepted_name: "Получена независимость"
 chartered_company_proposal_third_party_break_accepted_desc: "[TARGET_COUNTRY.GetName] прекраща[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] считать государство [INITIATOR_COUNTRY.GetName] своей [Concept('concept_chartered_company', 'чартерной компанией')]. Отныне [INITIATOR_COUNTRY.GetName] — независимая держава."
 chartered_company_proposal_third_party_break_declined_name: "Отказ в независимости"
 chartered_company_proposal_third_party_break_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся дать независимость [INITIATOR_COUNTRY.GetAltName('RU_CL_DP')] и перестать считать это государство своей [Concept('concept_chartered_company', 'чартерной компанией')]."
 chartered_company_proposal_notification_name: "Требование покориться"
 chartered_company_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')], чтобы мы стали их [Concept('concept_chartered_company', 'чартерной компанией')]."
 chartered_company_proposal_notification_effects_desc: "Согласившись, мы станем их субъектом."
 chartered_company_proposal_accepted_name: "Изъявление покорности"
 chartered_company_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] соглаша[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся стать нашей [Concept('concept_chartered_company', 'чартерной компанией')]."
 chartered_company_proposal_declined_name: "Отказ от подчинения"
 chartered_company_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся становиться нашей [Concept('concept_chartered_company', 'чартерной компанией')]."
 chartered_company_proposal_third_party_accepted_name: "Подчинение страны"
 chartered_company_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] соглаша[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся стать [Concept('concept_chartered_company', 'чартерной компанией')] [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')]."
 chartered_company_proposal_third_party_declined_name: "Отказ от подчинения"
 chartered_company_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся становиться [Concept('concept_chartered_company', 'чартерной компанией')] [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')]."
 chartered_company_effect_desc_global: "Теперь [Concept('concept_chartered_company', 'чартерная компания')]"
 chartered_company_effect_desc_first: "[TARGET_COUNTRY.GetName] теперь #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ая#! [Concept('concept_chartered_company', 'чартерная компания')]"
 chartered_company_effect_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] теперь [Concept('concept_chartered_company', 'чартерная компания')] [COUNTRY.GetAltName('RU_CL_RP')]"
 chartered_company_trigger_desc_global: "Является [Concept('concept_chartered_company', 'чартерной компанией')]"
 chartered_company_trigger_false_desc_global: "#b Не#! является [Concept('concept_chartered_company', 'чартерной компанией')]"
 chartered_company_trigger_desc_first: "[TARGET_COUNTRY.GetName] явля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ой#! [Concept('concept_chartered_company', 'чартерной компанией')]"
 chartered_company_trigger_false_desc_first: "[TARGET_COUNTRY.GetName] #b не#! явля[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся #tooltippable_name [COUNTRY.GetAdjectiveNoFlag|l]ой#! [Concept('concept_chartered_company', 'чартерной компанией')]"
 chartered_company_trigger_desc_third: "[COUNTRY.GetName] явля[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_chartered_company', 'чартерной компанией')] государства [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 chartered_company_trigger_false_desc_third: "[COUNTRY.GetNameNoFlag] #b не#! явля[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся [Concept('concept_chartered_company', 'чартерной компанией')] государства [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetName)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 become_chartered_company: "Просьба принять статус чартерной компании"
 become_chartered_company_action_name: "Просьба принять статус [Concept('concept_chartered_company', 'чартерной компании')]"
 become_chartered_company_desc: "Создаёт [Concept('concept_subject_type', 'субъектные')] отношения типа «[Concept('concept_chartered_company', 'чартерная компания')]» между двумя [Concept( 'concept_country', 'странами' )]. Предложившая сторона становится [Concept('concept_subject', 'субъектом')]."
 become_chartered_company_proposal_notification_name: "Просьба о статусе [Concept('concept_chartered_company', 'чартерной компании')]"
 become_chartered_company_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] жела[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] подчиниться и стать нашей [Concept('concept_chartered_company', 'чартерной компанией')]."
 become_chartered_company_proposal_notification_effects_desc: "Если мы согласимся, они станут нашим субъектом."
 become_chartered_company_proposal_accepted_name: "Просьба о статусе [Concept('concept_chartered_company', 'чартерной компании')] принята"
 become_chartered_company_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] принима[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наше прошение стать их [Concept('concept_chartered_company', 'чартерной компанией')]."
 become_chartered_company_proposal_declined_name: "Просьба о статусе [Concept('concept_chartered_company', 'чартерной компании')] отклонена"
 become_chartered_company_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] нам в прошении стать их [Concept('concept_chartered_company', 'чартерной компанией')]."
 become_chartered_company_proposal_third_party_accepted_name: "Подчинение страны"
 become_chartered_company_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] соглаша[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся сделать [INITIATOR_COUNTRY.GetAltName('RU_CL_VP')] [Concept('concept_chartered_company', 'чартерной компанией')] и стать её сюзереном."
 become_chartered_company_proposal_third_party_declined_name: "Отказ от подчинения"
 become_chartered_company_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] отказыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся становиться сюзереном [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')]."
 violate_sovereignty: "Нарушение суверенитета"
 violate_sovereignty_action_name: "Нарушение суверенитета"
 violate_sovereignty_action_propose_name: "Нарушить суверенитет"
 violate_sovereignty_wars: "Это затронет следующие войны:"
 violate_sovereignty_countries: "Если государство [Country.GetName] откажется, в конфликт могут оказаться втянуты следующие страны:"
 violate_sovereignty_desc: "Вынуждает нейтральную [Concept('concept_country', 'страну')] выбрать сторону в [Concept('concept_war', 'войне')] с целью получить право доступа на её территорию. В случае отказа цель примыкает к вражеской стороне."
 violate_sovereignty_proposal_accepted_name: "[TARGET_COUNTRY.GetName] принима[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наши требования"
 violate_sovereignty_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] поддержал[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нас!"
 violate_sovereignty_proposal_declined_name: "[TARGET_COUNTRY.GetName] отверга[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наш ультиматум"
 violate_sovereignty_proposal_declined_desc: "[TARGET_COUNTRY.GetName] присоединя[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся к нашим врагам!"
 violate_sovereignty_proposal_notification_name: "Нарушение суверенитета"
 violate_sovereignty_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] требу[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')], чтобы мы присоединились к войне на их стороне."
 violate_sovereignty_proposal_notification_effects_desc: "Согласившись, мы присоединимся ко всем войнам, которые они ведут. Если откажемся, то будем вынуждены присоединиться к их врагам."
 violate_sovereignty_proposal_third_party_accepted_name: "[TARGET_COUNTRY.GetName] соглаша[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся с требованиями [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')]"
 violate_sovereignty_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] вступа[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] в [Concept('concept_war', 'войну')] на стороне [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')]!"
 violate_sovereignty_proposal_third_party_declined_name: "[TARGET_COUNTRY.GetName] отверга[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] ультиматум [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')]"
 violate_sovereignty_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] вступа[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] в [Concept('concept_war', 'войну')] против [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')]!"
 personal_union_trigger_desc_global: "В [Concept('concept_personal_union', 'личной унии')]"
 personal_union_trigger_false_desc_global: "#b Не#! в [Concept('concept_personal_union', 'личной унии')]"
 personal_union_trigger_desc_first: "Государство [TARGET_COUNTRY.GetName] состоит в [Concept('concept_personal_union', 'личной унии')] с [COUNTRY.GetAltName('RU_CL_TP')]"
 personal_union_trigger_false_desc_first: "Государство [TARGET_COUNTRY.GetName] #b не#! состоит в [Concept('concept_personal_union', 'личной унии')] с [COUNTRY.GetAltName('RU_CL_TP')]"
 personal_union_trigger_desc_third: "[COUNTRY.GetName] явля[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся младшим партнёром в [Concept('concept_personal_union', 'личной унии')] с государством [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 personal_union_trigger_false_desc_third: "[COUNTRY.GetNameNoFlag] #b не#! явля[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся младшим партнёром в [Concept('concept_personal_union', 'личной унии')] с государством [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetName)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)]"
 invite_to_power_bloc: "Пригласить в наш блок государств"
 invite_to_power_bloc_name: "Пригласить в [Concept('concept_power_bloc', 'блок государств')]"
 invite_to_power_bloc_action_name: "Приглашение присоединиться к [Concept('concept_power_bloc', 'блоку государств')]"
 invite_to_power_bloc_action_propose_name: "Отправить приглашение присоединиться к нашему [Concept('concept_power_bloc', 'блоку государств')]"
 invite_to_power_bloc_desc: "Приглашение одной [Concept('concept_country','стране')] присоединиться к [Concept('concept_power_bloc','блоку государств')] другой [Concept('concept_country','страны')]."
 invite_to_power_bloc_proposal_notification_name: "Приглашение присоединиться к [Concept('concept_power_bloc', 'блоку государств')]"
 invite_to_power_bloc_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] приглаша[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] нас присоединиться к блоку «[INITIATOR_COUNTRY.GetPowerBloc.GetName]»."
 invite_to_power_bloc_proposal_notification_effects_desc: "$invite_to_power_bloc_desc$"
 invite_to_power_bloc_proposal_accepted_name: "Приглашение в [Concept('concept_power_bloc','блок государств')] принято"
 invite_to_power_bloc_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] принял[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] наше приглашение присоединиться к блоку «[INITIATOR_COUNTRY.GetPowerBloc.GetName]»."
 invite_to_power_bloc_proposal_declined_name: "Приглашение в [Concept('concept_power_bloc','блок государств')] отвергнуто"
 invite_to_power_bloc_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] наше приглашение присоединиться к блоку «[INITIATOR_COUNTRY.GetPowerBloc.GetName]»."
 invite_to_power_bloc_proposal_third_party_accepted_name: "$invite_to_power_bloc_proposal_accepted_name$"
 invite_to_power_bloc_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] принял[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] приглашение [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')] присоединиться к блоку «[INITIATOR_COUNTRY.GetPowerBloc.GetName]»."
 invite_to_power_bloc_proposal_third_party_declined_name: "$invite_to_power_bloc_proposal_declined_name$"
 invite_to_power_bloc_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] приглашение [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')] присоединиться к блоку «[INITIATOR_COUNTRY.GetPowerBloc.GetName]»."
 invite_to_power_bloc_recently_declined: "Прошло слишком мало времени с тех пор, как [SCOPE.sCountry('target_country').GetName] отклонил[SCOPE.sCountry('target_country').GetAltNameNoFormatting('RU_CL_END_FEM')] приглашение в наш [Concept('concept_power_bloc','блок государств')]. Новое приглашение можно отправить [GetPlayer.GetLastCatalystExpiryDate(SCOPE.sCountry('target_country'),'catalyst_declined_bloc_invite')]."
 military_assistance_recently_declined: "[SCOPE.sCountry('target_country').GetName] недавно отклонил[SCOPE.sCountry('target_country').GetAltNameNoFormatting('RU_CL_END_FEM')] нашу просьбу о [Concept('concept_military_assistance','военной помощи')]. Новый запрос можно отправить [GetPlayer.GetLastCatalystExpiryDate(SCOPE.sCountry('target_country'),'catalyst_declined_military_assistance')]."
 #join_power_bloc: "Join Power Bloc"
 join_power_bloc_name: "Присоединиться к [Concept('concept_power_bloc', 'блоку государств')]"
 join_power_bloc_action_name: "Просьба о присоединении к [Concept('concept_power_bloc', 'блоку государств')]"
 join_power_bloc_action_propose_name: "Отправить просьбу о присоединении к [Concept('concept_power_bloc', 'блоку государств')]"
 #join_power_bloc_desc: "A request for one [concept_country] to join another [Concept('concept_country','$concept_country_possessive$')] [concept_power_bloc]."
 join_power_bloc_proposal_notification_name: "Просьба о присоединении к [Concept('concept_power_bloc', 'блоку государств')]"
 join_power_bloc_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] жела[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] вступить блок «[TARGET_COUNTRY.GetPowerBloc.GetName]»."
 join_power_bloc_proposal_notification_effects_desc: "$join_power_bloc_desc$"
 join_power_bloc_proposal_accepted_name: "Просьба о присоединении к [Concept('concept_power_bloc','блоку')] принята"
 join_power_bloc_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] принял[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нашу просьбу о вступлении в блок «[TARGET_COUNTRY.GetPowerBloc.GetName]»."
 join_power_bloc_proposal_declined_name: "Просьба о присоединении к [Concept('concept_power_bloc','блоку')] отвергнута"
 join_power_bloc_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нашу просьбу о вступлении в блок «[TARGET_COUNTRY.GetPowerBloc.GetName]»."
 join_power_bloc_proposal_third_party_accepted_name: "$join_power_bloc_proposal_declined_name$"
 join_power_bloc_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] принял[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] просьбу [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')] о вступлении в блок «[TARGET_COUNTRY.GetPowerBloc.GetName]»."
 join_power_bloc_proposal_third_party_declined_name: "$join_power_bloc_proposal_accepted_name$"
 join_power_bloc_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] просьбу [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')] о вступлении в блок «[TARGET_COUNTRY.GetPowerBloc.GetName]»."
 #host_power_bloc_embassy: "Power Bloc Embassy"
 host_power_bloc_embassy_name: "Принять у себя посольство [Concept('concept_power_bloc','блока государств')]"
 host_power_bloc_embassy_action_name: "Предложить принять у себя посольство [Concept('concept_power_bloc','блока государств')]"
 host_power_bloc_embassy_action_propose_name: "Принять у себя посольство [Concept('concept_power_bloc','блока государств')]"
 #host_power_bloc_embassy_desc: "An offer for one [concept_country] to host an embassy for a [concept_power_bloc]."
 host_power_bloc_embassy_proposal_notification_name: "Предложить принять у себя посольство [Concept('concept_power_bloc','блока государств')]"
 host_power_bloc_embassy_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] жела[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] принять у себя посольство блока «[TARGET_COUNTRY.GetPowerBloc.GetName]»."
 host_power_bloc_embassy_proposal_notification_effects_desc: "$host_power_bloc_embassy_desc$"
 host_power_bloc_embassy_proposal_accepted_name: "Предложение об открытии посольства [Concept('concept_power_bloc','блока')] принято"
 host_power_bloc_embassy_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] принял[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] наше предложение об открытии посольства блока «[TARGET_COUNTRY.GetPowerBloc.GetName]»."
 host_power_bloc_embassy_proposal_declined_name: "Предложение об открытии посольства [Concept('concept_power_bloc','блока')] отклонено"
 host_power_bloc_embassy_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] наше предложение об открытии посольства блока «[TARGET_COUNTRY.GetPowerBloc.GetName]»."
 host_power_bloc_embassy_proposal_third_party_accepted_name: "$host_power_bloc_embassy_proposal_accepted_name$"
 host_power_bloc_embassy_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetName] принял[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] предложение [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')] об открытии посольства блока «[TARGET_COUNTRY.GetPowerBloc.GetName]»."
 host_power_bloc_embassy_proposal_third_party_declined_name: "$host_power_bloc_embassy_proposal_declined_name$"
 host_power_bloc_embassy_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] предложение [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')] об открытии посольства блока «[TARGET_COUNTRY.GetPowerBloc.GetName]»."
 host_power_bloc_embassy_action_break_name: "Отозвать посольство [Concept('concept_power_bloc','блока государств')]"
 host_power_bloc_embassy_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] решил[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltNameNoFormatting('RU_CL_END_FEM')] открыть у себя посольство блока «[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetPowerBloc.GetName]»."
 host_power_bloc_embassy_action_notification_break_name: "[INITIATOR_COUNTRY.GetName] отзыва[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] посольство"
 host_power_bloc_embassy_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] больше не принима[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] у себя наше посольство."
 host_power_bloc_embassy_action_notification_third_party_break_name: "[INITIATOR_COUNTRY.GetName] отзыва[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] посольство"
 host_power_bloc_embassy_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetName] больше не принима[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] у себя посольство блока «[TARGET_COUNTRY.GetPowerBloc.GetName]»."
 request_power_bloc_embassy: "Попросить об открытии посольства блока государств"
 request_power_bloc_embassy_desc: "Попросить об открытии посольства [Concept('concept_power_bloc','блока государств')]."
 request_power_bloc_embassy_action_name: "Попросить об открытии посольства блока государств"
 request_power_bloc_embassy_proposal_accepted_name: "Просьба об открытии посольства [Concept('concept_power_bloc','блока государств')] принята"
 request_power_bloc_embassy_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] одобрил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] предложение открыть в этой стране одно из наших посольств."
 request_power_bloc_embassy_proposal_declined_name: "Просьба об открытии посольства [Concept('concept_power_bloc','блока государств')] отклонена"
 request_power_bloc_embassy_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] предложение открыть в этой стране одно из наших посольств."
 request_power_bloc_embassy_proposal_notification_name: "Просьба об открытии посольства блока государств"
 request_power_bloc_embassy_proposal_notification_desc: "Блок «[INITIATOR_COUNTRY.GetPowerBloc.GetName]» просит нас открыть у себя его посольство."
 da_decrease_autonomy_action_name: "Снизить автономию"
 da_decrease_autonomy: "Снизить автономию"
 da_decrease_autonomy_desc: "Снижает [Concept('concept_autonomy','автономию')] [Concept('concept_subject', 'субъекта')]."
 da_decrease_autonomy_action_notification_name: "[INITIATOR_COUNTRY.GetName] снижа[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] автономию [TARGET_COUNTRY.GetAltName('RU_CL_RP')]"
 da_decrease_autonomy_action_notification_desc: "[INITIATOR_COUNTRY.GetName] снижа[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_autonomy','автономию')] своего субъекта, [TARGET_COUNTRY.GetAltName('RU_CL_RP')]."
 da_decrease_autonomy_action_notification_third_party_name: "[INITIATOR_COUNTRY.GetName] снизил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [Concept('concept_autonomy','автономию')] [Concept('concept_subject', 'субъекта')]"
 da_decrease_autonomy_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetName] снизил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нашу [Concept('concept_autonomy','автономию')]."
 da_increase_autonomy_action_name: "Повысить автономию"
 da_increase_autonomy: "Повысить автономию"
 da_increase_autonomy_desc: "Повышает [Concept('concept_autonomy','автономию')] [Concept('concept_subject', 'субъекта')]."
 da_increase_autonomy_of_self_action_name: "$da_increase_autonomy_action_name$"
 da_increase_autonomy_of_self: "$da_increase_autonomy$"
 da_increase_autonomy_of_self_desc: "$da_increase_autonomy_desc$"
 da_increase_autonomy_of_self_proposal_notification_name: "Просьба повысить автономию"
 da_increase_autonomy_of_self_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] запрашива[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] большую [Concept('concept_autonomy','автономию')]."
 da_increase_autonomy_of_self_proposal_accepted_name: "Согласие повысить автономию"
 da_increase_autonomy_of_self_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] принял[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нашу просьбу о повышении [Concept('concept_autonomy','автономии')]. Теперь мы [INITIATOR_COUNTRY.GetSubjectType.GetHigherAutonomySubjectType(INITIATOR_COUNTRY.Self).GetName|l]."
 da_increase_autonomy_of_self_proposal_declined_name: "Отказ в повышении автономии"
 da_increase_autonomy_of_self_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нашу просьбу о повышении [Concept('concept_autonomy','автономии')]. Это привело к росту нашего [Concept('concept_liberty_desire','желания свободы' )]."
 da_increase_autonomy_of_self_proposal_third_party_accepted_name: "Предоставлена [INITIATOR_COUNTRY.GetAdjectiveNoFormatting|l]ая автономия"
 da_increase_autonomy_of_self_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetName] получил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] от своего [Concept('concept_overlord','сюзерена')] [TARGET_COUNTRY.GetAltName('RU_CL_RP')] большую [Concept('concept_autonomy','автономию')]. Теперь эта страна [INITIATOR_COUNTRY.GetSubjectType.GetHigherAutonomySubjectType(INITIATOR_COUNTRY.Self).GetName|l]."
 da_increase_autonomy_of_self_proposal_third_party_declined_name: "Отказ в [INITIATOR_COUNTRY.GetAdjectiveNoFormatting|l]ой автономии"
 da_increase_autonomy_of_self_proposal_third_party_declined_desc: "[INITIATOR_COUNTRY.GetName] получил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] от своего [Concept('concept_overlord','сюзерена')] [TARGET_COUNTRY.GetAltName('RU_CL_RP')] отказ на просьбу о повышении [Concept('concept_autonomy','автономии')]."
 da_increase_autonomy_of_subject_action_name: "$da_increase_autonomy_action_name$"
 da_increase_autonomy_of_subject: "$da_increase_autonomy$"
 da_increase_autonomy_of_subject_desc: "$da_increase_autonomy_desc$"
 da_increase_autonomy_of_subject_action_notification_name: "[INITIATOR_COUNTRY.GetName] повыша[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] автономию [TARGET_COUNTRY.GetAltName('RU_CL_RP')]"
 da_increase_autonomy_of_subject_action_notification_desc: "[INITIATOR_COUNTRY.GetName] повыша[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_autonomy','автономию')] своего субъекта, [TARGET_COUNTRY.GetAltName('RU_CL_RP')]."
 da_increase_autonomy_of_subject_action_notification_third_party_name: "[INITIATOR_COUNTRY.GetName] повысил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] автономию [Concept('concept_subject', 'субъекта')]"
 da_increase_autonomy_of_subject_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetName] повысил[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] нашу [Concept('concept_autonomy','автономию')]."
 #support_independence: "Support Independence"
 support_independence_name: "Поддержать независимость"
 support_independence_action_break_name: "Прекратить поддержку независимости"
 support_independence_action_name: "Прекратить поддержку независимости"
 support_independence_action_propose_name: "Предложить поддержку независимости"
 support_independence_action_notification_name: "[INITIATOR_COUNTRY.GetName] поддержива[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] независимость [TARGET_COUNTRY.GetAltName('RU_CL_RP')]"
 support_independence_notification_name: "Стремление [TARGET_COUNTRY.GetAltName('RU_CL_RP')] к независимости поддержано"
 support_independence_action_notification_desc: "[INITIATOR_COUNTRY.GetName] поддержива[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] независимость [TARGET_COUNTRY.GetAltName('RU_CL_RP')], увеличивая вероятность того, что [TARGET_COUNTRY.GetName] начн[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')] войну за независимость."
 #support_independence_desc: "Commits to supporting a [concept_subject] in a [concept_diplomatic_demand] for independence from its [concept_overlord]."
 support_independence_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] пообещал[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltNameNoFormatting('RU_CL_END_FEM')] поддержать независимость [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('RU_CL_RP')]."
 support_independence_proposal_notification_name: "[INITIATOR_COUNTRY.GetName] жела[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] поддержать нашу независимость"
 support_independence_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] жела[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] поддержать нас, когда мы объявим о своей независимости, повышая вероятность того, что наш сюзерен мирно примет наши требования."
 support_independence_proposal_notification_effects_desc: "Если мы согласимся, [INITIATOR_COUNTRY.GetName] начн[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')] поддерживать наше стремление к независимости."
 support_independence_proposal_accepted_name: "[TARGET_COUNTRY.GetName] принима[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наше предложение"
 support_independence_proposal_accepted_desc: "Теперь мы поддерживаем стремление [TARGET_COUNTRY.GetAltName('RU_CL_RP')] к независимости."
 support_independence_proposal_declined_name: "[TARGET_COUNTRY.GetName] отклоня[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наше предложение"
 support_independence_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отклоня[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наше предложение о поддержке независимости."
 support_independence_action_notification_break_name: "[INITIATOR_COUNTRY.GetName] отзыва[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] поддержку"
 support_independence_action_notification_break_desc: "[INITIATOR_COUNTRY.GetName] больше не поддержива[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] наше стремление к независимости."
 support_independence_proposal_third_party_accepted_name: "Независимость [TARGET_COUNTRY.GetAltName('RU_CL_RP')] поддержана"
 support_independence_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetName] поддержива[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] независимость [TARGET_COUNTRY.GetAltName('RU_CL_RP')]."
 support_independence_proposal_third_party_declined_name: "[TARGET_COUNTRY.GetName] отклоня[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] предложение поддержки"
 support_independence_proposal_third_party_declined_desc: "Предложение [INITIATOR_COUNTRY.GetAltName('RU_CL_RP')] поддержать независимость [TARGET_COUNTRY.GetAltName('RU_CL_RP')] было отклонено."
 support_independence_action_notification_third_party_break_name: "[INITIATOR_COUNTRY.GetName] отзыва[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] поддержку"
 support_independence_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetName] больше не поддержива[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] стремление [TARGET_COUNTRY.GetAltName('RU_CL_RP')] к независимости."
 request_support_independence: "Попросить о поддержке независимости"
 request_support_independence_action_name: "$request_support_independence$"
 request_support_independence_action_propose_name: "$request_support_independence$"
 request_support_independence_desc: "Попросить [Concept('concept_country','страну')] помочь [Concept('concept_subject','субъекту')] в случае мятежа или попытки аннексии со стороны [Concept('concept_overlord','сюзерена')]."
 request_support_independence_proposal_notification_name: "$request_support_independence$"
 request_support_independence_proposal_notification_desc: "[INITIATOR_COUNTRY.GetName] запрашива[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] поддержку независимости."
 request_support_independence_proposal_accepted_name: "Просьба о поддержке независимости принята"
 request_support_independence_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] теперь поддержива[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] нашу независимость и буд[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')] на нашей стороне в случае мятежа или попытки аннексии со стороны [Concept('concept_overlord','сюзерена')]."
 request_support_independence_proposal_declined_name: "Просьба о поддержке независимости отклонена"
 request_support_independence_proposal_declined_desc: "[TARGET_COUNTRY.GetName] отклонил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] просьбу поддержать нашу независимость."
 request_support_independence_proposal_notification_effects_desc: "В случае нашего согласия эта страна сможет призвать нас на помощь в случае мятежа или попытки аннексии со стороны [Concept('concept_overlord','сюзерена')]."
 request_support_independence_proposal_third_party_accepted_name: "Просьба о поддержке независимости принята"
 request_support_independence_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetName] теперь поддержива[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] независимость [TARGET_COUNTRY.GetAltName('RU_CL_RP')]."
 request_support_independence_proposal_third_party_declined_name: "Просьба о поддержке независимости отклонена"
 request_support_independence_proposal_third_party_declined_desc: "[INITIATOR_COUNTRY.GetName] не жела[INITIATOR_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] поддерживать независимость [TARGET_COUNTRY.GetAltName('RU_CL_RP')]."
 ADD_LIBERTY_DESIRE_TO_ALL_SUBJECTS: "Увеличивает [Concept('concept_liberty_desire','желание свободы')] у каждого прямого [Concept('concept_subject','субъекта')] на [SCOPE.ScriptValue('decrease_autonomy_liberty_desire_to_add“)|bo0] tl/"
 SELECT_BINDING_PERIOD: "Выбрать [Concept('concept_binding_period', 'срок исполнения обязательств')]"
 BINDING_PERIOD_BUTTON_TEXT_5_YEARS: "#b 5 лет#!"
 BINDING_PERIOD_BUTTON_TEXT_10_YEARS: "#b 10 лет#!"
 BINDING_PERIOD_BUTTON_TEXT_15_YEARS: "#b 15 лет#!"
 BINDING_PERIOD_BUTTON_TEXT_20_YEARS: "#b 20 лет#!"
 BINDING_PERIOD_BUTTON_TEXT_25_YEARS: "#b 25 лет#!"
 BINDING_PERIOD_BUTTON_TEXT_50_YEARS: "#b 50 лет#!"
 BINDING_PERIOD_BUTTON_TEXT_99_YEARS: "#b 99 лет#!"
 money_transfer: "Передача денег"
 money_transfer_desc: ""
 money_transfer_effects_desc: "• Заключает договор между двумя [Concept('concept_country', 'странами')], по условиям которого одна из стран соглашается каждую неделю отправлять другой стране оговоренное количество [Concept('concept_money', 'денег')]."
 money_transfer_article_short_desc: "[SOURCE_COUNTRY.GetNameNoFormatting] каждую неделю переда[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_DP')] деньги"
 TREATY_DRAFT_ARTICLE_FLAG_IS_MONEY_TRANSFER_EFFECT: "• [SOURCE_COUNTRY.GetName] каждую неделю переда[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [TARGET_COUNTRY.GetAltName('RU_CL_DP')] @money!#v [ArticleDraft.GetQuantity|D]#!"
 TREATY_ARTICLE_FLAG_IS_MONEY_TRANSFER_EFFECT: "• [SOURCE_COUNTRY.GetName] каждую неделю переда[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [TARGET_COUNTRY.GetAltName('RU_CL_DP')] @money!#v [Article.GetQuantity|D]#!"
 state_transfer: "Передача области"
 state_transfer_desc: ""
 state_transfer_effects_desc: "• Заключает соглашение между двумя [Concept('concept_country', 'странами')], по которому одна из них официально передаёт [Concept('concept_state', 'область')] другой стране."
 state_transfer_article_short_desc: "[SOURCE_COUNTRY.GetNameNoFormatting] переда[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_DP')] область"
 TREATY_DRAFT_ARTICLE_FLAG_CAUSES_STATE_TRANSFER_EFFECT: "• Область [SelectLocalization(ArticleDraft.HasInputValue('state'), ArticleDraft.GetState.GetName, 'NONE')] будет передана [TARGET_COUNTRY.GetAltName('RU_CL_DP')]"
 TREATY_ARTICLE_FLAG_CAUSES_STATE_TRANSFER_EFFECT: "• Область [Article.GetState.GetName] была передана [TARGET_COUNTRY.GetAltName('RU_CL_DP')]"
 goods_transfer: "Передача товаров"
 goods_transfer_desc: ""
 goods_transfer_effects_desc: "• Заключает договор между двумя [Concept('concept_country', 'странами')], по условиям которого одна из стран соглашается каждую неделю отправлять другой стране оговоренное количество [Concept('concept_good', 'товаров')]."
 goods_transfer_article_short_desc: "[SOURCE_COUNTRY.GetNameNoFormatting] каждую неделю переда[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_DP')] товары"
 TREATY_DRAFT_ARTICLE_FLAG_IS_GOODS_TRANSFER_EFFECT: "• [SOURCE_COUNTRY.GetName] каждую неделю переда[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [TARGET_COUNTRY.GetAltName('RU_CL_DP')] [AddTextIf(ArticleDraft.GetGoods.IsValid, ArticleDraft.GetGoods.GetTextIcon)]#v [ArticleDraft.GetQuantity|D]#! ед. #tooltippable_name #tooltip:[ArticleDraft.GetGoods.GetTooltipTag],DATA_GOODS_NAME_TOOLTIP,GoodsTooltip [AddTextIf(ArticleDraft.GetGoods.IsValid, ArticleDraft.GetGoods.GetCustom('RU_GL_RP'))|l]#!#![AddLocalizationIf(Not(ArticleDraft.GetGoods.IsValid), 'товара')]"
 TREATY_ARTICLE_FLAG_IS_GOODS_TRANSFER_EFFECT: "• [SOURCE_COUNTRY.GetName] каждую неделю переда[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [TARGET_COUNTRY.GetAltName('RU_CL_DP')] [AddTextIf(Article.GetGoods.IsValid, Article.GetGoods.GetTextIcon)]#v [Article.GetQuantity|D]#! ед. #tooltippable_name #tooltip:[Article.GetGoods.GetTooltipTag],DATA_GOODS_NAME_TOOLTIP,GoodsTooltip [AddTextIf(Article.GetGoods.IsValid, Article.GetGoods.GetCustom('RU_GL_RP'))|l]#!#![AddLocalizationIf(Not(Article.GetGoods.IsValid), 'товара')]"
 military_access: "Военный доступ"
 military_access_desc: ""
 military_access_effects_desc: "• Заключает военное соглашение между двумя [Concept('concept_country', 'странами')], по которому одной из них разрешается перемещать свои [Concept('concept_army', 'армии')] по территории другой страны."
 military_access_article_short_desc: "[TARGET_COUNTRY.GetNameNoFormatting] мо[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_GUT')]т передвигать армии по землям [SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_RP')]"
 TREATY_DRAFT_ARTICLE_FLAG_IS_MILITARY_ACCESS_EFFECT: "• [TARGET_COUNTRY.GetName] мо[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_GUT')]т передвигать [Concept('concept_army', 'армии')] по землям [SOURCE_COUNTRY.GetAltName('RU_CL_RP')]"
 TREATY_ARTICLE_FLAG_IS_MILITARY_ACCESS_EFFECT: "• [TARGET_COUNTRY.GetName] мо[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_GUT')]т передвигать [Concept('concept_army', 'армии')] по землям [SOURCE_COUNTRY.GetAltName('RU_CL_RP')]"
 offer_embassy: "Предложение посольства"
 offer_embassy_desc: ""
 offer_embassy_effects_desc: "• Заключает соглашение между двумя [Concept('concept_country', 'странами')], по которому одна из них официально открывает посольство в [Concept('concept_unrecognized_power', 'непризнанной державе')]."
 offer_embassy_article_short_desc: "[TARGET_COUNTRY.GetNameNoFormatting] открыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] посольство в [SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_PP')]"
 TREATY_DRAFT_ARTICLE_FLAG_IS_OFFER_EMBASSY_EFFECT: "• [TARGET_COUNTRY.GetName] открыва[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] посольство в [SOURCE_COUNTRY.GetAltName('RU_CL_PP')]"
 TREATY_ARTICLE_FLAG_IS_OFFER_EMBASSY_EFFECT: "• [TARGET_COUNTRY.GetName] открыл[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] посольство в [SOURCE_COUNTRY.GetAltName('RU_CL_PP')]"
 treaty_port: "Договорной порт"
 treaty_port_desc: ""
 treaty_port_effects_desc: "• Соглашение между двумя [Concept('concept_country', 'странами')], по которому одна из них официально передаёт [Concept('concept_treaty_port', 'договорной порт')] другой стране."
 treaty_port_article_short_desc: "[SOURCE_COUNTRY.GetNameNoFormatting] переда[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] договорной порт [TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_DP')]"
 TREATY_DRAFT_ARTICLE_FLAG_IS_TREATY_PORT_EFFECT: "• [SOURCE_COUNTRY.GetName] переда[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [TARGET_COUNTRY.GetAltName('RU_CL_DP')] #tooltippable_name #tooltip:[ArticleDraft.GetState.GetTooltipTag],DATA_STATE_NAME_TOOLTIP,StateTooltip [ArticleDraft.GetState.GetCustom('RU_SL_VP')]#!#! в качестве [Concept('concept_treaty_port','договорного порта')]"
 TREATY_ARTICLE_FLAG_IS_TREATY_PORT_EFFECT: "• [SOURCE_COUNTRY.GetName] передал[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [TARGET_COUNTRY.GetAltName('RU_CL_DP')] #tooltippable_name #tooltip:[Article.GetState.GetTooltipTag],DATA_STATE_NAME_TOOLTIP,StateTooltip [Article.GetState.GetCustom('RU_SL_VP')]#!#! в качестве [Concept('concept_treaty_port','договорного порта')]"
 non_colonization_agreement: "Договор о неколонизации"
 non_colonization_agreement_desc: ""
 non_colonization_agreement_effects_desc: "• Заключает соглашение между двумя [Concept('concept_country', 'странами')], по которому одной из них запрещается [Concept('concept_colony', 'колонизировать')] оговоренный [Concept('concept_strategic_region', 'стратегический регион')]."
 non_colonization_agreement_article_short_desc: "[SOURCE_COUNTRY.GetNameNoFormatting] соглаша[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся #bold_black не#! колонизировать стратегический регион"
 TREATY_DRAFT_ARTICLE_FLAG_IS_NON_COLONIZATION_AGREEMENT_EFFECT: "• [SOURCE_COUNTRY.GetName] соглаша[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся #b не#! [Concept('concept_colony', 'колонизировать')] [SelectLocalization( ArticleDraft.GetStrategicRegion.IsValid, ConcatIfNeitherEmpty('регион ', 'TREATY_DRAFT_ARTICLE_STRATEGIC_REGION_NAME'), 'TREATY_ARTICLE_GENERAL_STRATEGIC_REGION_NAME' )]"
 TREATY_ARTICLE_FLAG_IS_NON_COLONIZATION_AGREEMENT_EFFECT: "• [SOURCE_COUNTRY.GetName] соглаша[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся #b не#! [Concept('concept_colony', 'колонизировать')] [SelectLocalization( Article.GetStrategicRegion.IsValid, ConcatIfNeitherEmpty('регион ', 'TREATY_DRAFT_ARTICLE_STRATEGIC_REGION_NAME'), 'TREATY_ARTICLE_GENERAL_STRATEGIC_REGION_NAME' )]"
 TREATY_DRAFT_ARTICLE_STRATEGIC_REGION_NAME: "регион [ArticleDraft.GetStrategicRegion.GetName]"
 TREATY_ARTICLE_STRATEGIC_REGION_NAME: "регион [Article.GetStrategicRegion.GetName]"
 TREATY_ARTICLE_GENERAL_STRATEGIC_REGION_NAME: "указанный [Concept('concept_strategic_region', 'стратегический регион')]"
 prohibit_trade_with_global_market: "Запрет на торговлю на мировом рынке"
 prohibit_trade_with_global_market_desc: ""
 prohibit_trade_with_global_market_effects_desc: "• [Concept('concept_country','Страна')] не вправе торговать определённым [Concept('concept_good','товаром')] на [Concept('concept_world_market','мировом рынке')]"
 prohibit_trade_with_global_market_article_short_desc: "[SOURCE_COUNTRY.GetNameNoFormatting] #bold_black не#! буд[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')] торговать товаром на мировом рынке"
 TREATY_DRAFT_ARTICLE_FLAG_IS_PROHIBIT_GOODS_TRADE_WITH_WORLD_MARKET_EFFECT: "• [SOURCE_COUNTRY.GetName] #b не#! буд[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')] торговать [AddTextIf(ArticleDraft.GetGoods.IsValid, ArticleDraft.GetGoods.GetTextIcon)] #tooltippable_name #tooltip:[ArticleDraft.GetGoods.GetTooltipTag],DATA_GOODS_NAME_TOOLTIP,GoodsTooltip [AddTextIf(ArticleDraft.GetGoods.IsValid, ArticleDraft.GetGoods.GetCustom('RU_GL_TP'))|l]#!#![AddLocalizationIf(Not(ArticleDraft.GetGoods.IsValid), 'товаром')] на [Concept('concept_world_market', 'мировом рынке')]"
 TREATY_ARTICLE_FLAG_IS_PROHIBIT_GOODS_TRADE_WITH_WORLD_MARKET_EFFECT: "• [SOURCE_COUNTRY.GetName] #b не#! буд[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')] торговать [AddTextIf(Article.GetGoods.IsValid, Article.GetGoods.GetTextIcon)] #tooltippable_name #tooltip:[Article.GetGoods.GetTooltipTag],DATA_GOODS_NAME_TOOLTIP,GoodsTooltip [AddTextIf(Article.GetGoods.IsValid, Article.GetGoods.GetCustom('RU_GL_TP'))|l]#!#![AddLocalizationIf(Not(Article.GetGoods.IsValid), 'товаром')] на [Concept('concept_world_market', 'мировом рынке')]"
 acquire_monopoly_for_company: "Монополия компании"
 acquire_monopoly_for_company_desc: ""
 acquire_monopoly_for_company_effects_desc: "• Заключает соглашение между двумя [Concept('concept_country', 'странами')], предоставляющее [Concept('concept_company_monopoly', 'монополию компании')] на [Concept('concept_building', 'сооружение')] в другой стране."
 acquire_monopoly_for_company_article_short_desc: "[SOURCE_COUNTRY.GetNameNoFormatting] предоставля[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_DP')] монополию компании"
 TREATY_DRAFT_ARTICLE_FLAG_IS_MONOPOLY_FOR_COMPANY_EFFECT: "• [SOURCE_COUNTRY.GetName] предоставля[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_company_monopoly','монополию')] на [SelectLocalization(ArticleDraft.HasInputValue('building_type'), 'сооружения ', 'промышленность')][SelectLocalization(ArticleDraft.HasInputValue('building_type'), ArticleDraft.GetBuildingType.GetName, '')] #tooltippable_name [TARGET_COUNTRY.GetAdjective|l]ой#! [Concept('concept_company','компании')] [SelectLocalization(ArticleDraft.GetCompany.IsValid, ArticleDraft.GetCompany.GetName, 'NONE')]"
 TREATY_ARTICLE_FLAG_IS_MONOPOLY_FOR_COMPANY_EFFECT: "• [SOURCE_COUNTRY.GetName] предоставил[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [Concept('concept_company_monopoly','монополию')] на сооружения «[Article.GetBuildingType.GetName]» #tooltippable_name [TARGET_COUNTRY.GetAdjective|l]ой#! [Concept('concept_company','компании')] «[Article.GetCompany.GetName]»"
 enforce_embargo: "Принудительное эмбарго"
 enforce_embargo_desc: ""
 enforce_embargo_effects_desc: "• Заключает соглашение между двумя [Concept('concept_country', 'странами')], вынуждающее одну страну не торговать определённым [Concept('concept_good', 'товаром')] с другой страной."
 enforce_embargo_article_short_desc: "[SOURCE_COUNTRY.GetNameNoFormatting] #bold_black не#! буд[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')] торговать товаром с третьей страной"
 TREATY_DRAFT_ARTICLE_FLAG_IS_ENFORCE_EMBARGO_EFFECT: "• [SOURCE_COUNTRY.GetName] #b не#! буд[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')] торговать [AddTextIf(ArticleDraft.GetGoods.IsValid, ArticleDraft.GetGoods.GetTextIcon)] #tooltippable_name #tooltip:[ArticleDraft.GetGoods.GetTooltipTag],DATA_GOODS_NAME_TOOLTIP,GoodsTooltip [AddTextIf(ArticleDraft.GetGoods.IsValid, ArticleDraft.GetGoods.GetCustom('RU_GL_TP'))|l]#!#![AddLocalizationIf(Not(ArticleDraft.GetGoods.IsValid), 'товаром')] с [ArticleDraft.GetCountry.GetAltName('RU_CL_TP')]"
 TREATY_ARTICLE_FLAG_IS_ENFORCE_EMBARGO_EFFECT: "• [SOURCE_COUNTRY.GetName] #b не#! буд[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')] торговать [AddTextIf(Article.GetGoods.IsValid, Article.GetGoods.GetTextIcon)] #tooltippable_name #tooltip:[Article.GetGoods.GetTooltipTag],DATA_GOODS_NAME_TOOLTIP,GoodsTooltip [AddTextIf(Article.GetGoods.IsValid, Article.GetGoods.GetCustom('RU_GL_TP'))|l]#!#![AddLocalizationIf(Not(Article.GetGoods.IsValid), 'товаром')] с [Article.GetCountry.GetAltName('RU_CL_TP')]"
 law_commitment: "Приверженность закону"
 law_commitment_desc: ""
 law_commitment_effects_desc: "• Заключает соглашение между двумя [Concept('concept_country', 'странами')], по которому одна из них обещает принять или сохранить определённый [Concept('concept_law', 'закон')]."
 law_commitment_article_short_desc: "[SOURCE_COUNTRY.GetNameNoFormatting] обеща[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] принять закон"
 TREATY_DRAFT_ARTICLE_FLAG_IS_LAW_COMMITMENT_EFFECT: "• [SOURCE_COUNTRY.GetName] обязу[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')]ся принять закон «[SelectLocalization(ArticleDraft.HasInputValue('law_type'), ArticleDraft.GetLawType.GetName, 'NONE')]»"
 TREATY_ARTICLE_FLAG_IS_LAW_COMMITMENT_EFFECT: "• [SOURCE_COUNTRY.GetName] пообещал[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] принять закон «[Article.GetLaw.GetName]»"
 no_tariffs: "Отсутствие пошлин"
 no_tariffs_desc: ""
 no_tariffs_effects_desc: "• Две [Concept('concept_country', 'страны')] заключают соглашение, по которому одна из них соглашается не вводить [Concept('concept_tariffs', 'пошлины')] на определённый [Concept('concept_good', 'товар')]."
 no_tariffs_article_short_desc: "[SOURCE_COUNTRY.GetNameNoFormatting] #bold_black не#! буд[SOURCE_COUNTRY.GetCustom('RU_CL_END_UT')] вводить пошлины на товар"
 TREATY_DRAFT_ARTICLE_FLAG_IS_NO_TARIFFS_EFFECT: "• [SOURCE_COUNTRY.GetName] #b не#! буд[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')] вводить [Concept('concept_tariffs','пошлины')] на [AddTextIf(ArticleDraft.GetGoods.IsValid, ArticleDraft.GetGoods.GetTextIcon)] #tooltippable_name #tooltip:[ArticleDraft.GetGoods.GetTooltipTag],DATA_GOODS_NAME_TOOLTIP,GoodsTooltip [AddTextIf(ArticleDraft.GetGoods.IsValid, ArticleDraft.GetGoods.GetCustom('RU_GL_VP')|l]#!#![AddLocalizationIf(Not(ArticleDraft.GetGoods.IsValid), 'товары')]"
 TREATY_ARTICLE_FLAG_IS_NO_TARIFFS_EFFECT: "• [SOURCE_COUNTRY.GetName] #b не#! буд[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')] вводить [Concept('concept_tariffs','пошлины')] на [AddTextIf(Article.GetGoods.IsValid, Article.GetGoods.GetTextIcon)] #tooltippable_name #tooltip:[Article.GetGoods.GetTooltipTag],DATA_GOODS_NAME_TOOLTIP,GoodsTooltip [AddTextIf(Article.GetGoods.IsValid, Article.GetGoods.GetCustom('RU_GL_VP')|l]#!#![AddLocalizationIf(Not(Article.GetGoods.IsValid), 'товары')]"
 transit_rights: "Передача прав"
 transit_rights_desc: ""
 transit_rights_effects_desc: "• Заключает соглашение между двумя [Concept('concept_country', 'странами')], по которому одна из них получает право осуществлять [Concept('concept_trade', 'торговлю')] через [Concept('concept_world_market_hub', 'центр мировой торговли')], принадлежащий другой стране."
 transit_rights_article_short_desc: "[TARGET_COUNTRY.GetNameNoFormatting] мо[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_GUT')]т торговать через [SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_VP')]"
 TREATY_DRAFT_ARTICLE_FLAG_IS_TRANSIT_RIGHTS_EFFECT: "• [TARGET_COUNTRY.GetName] мо[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_GUT')]т торговать через [SOURCE_COUNTRY.GetAltName('RU_CL_VP')]"
 TREATY_ARTICLE_FLAG_IS_TRANSIT_RIGHTS_EFFECT: "• [TARGET_COUNTRY.GetName] мо[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_GUT')]т торговать через [SOURCE_COUNTRY.GetAltName('RU_CL_VP')]"
 no_subventions: "Отсутствие субвенций"
 no_subventions_desc: ""
 no_subventions_effects_desc: "• Заключается соглашение, по которому одна [Concept('concept_country', 'страна')] соглашается не устанавливать [Concept('concept_subventions', 'субвенции')] на определённый [Concept('concept_good', 'товар')]."
 no_subventions_article_short_desc: "[SOURCE_COUNTRY.GetNameNoFormatting] #bold_black не#! буд[SOURCE_COUNTRY.GetCustom('RU_CL_END_UT')] устанавливать субвенции на товар"
 TREATY_DRAFT_ARTICLE_FLAG_IS_NO_SUBVENTIONS_EFFECT: "• [SOURCE_COUNTRY.GetName] #b не#! буд[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')] устанавливать [Concept('concept_subventions', 'субвенции')] на [AddTextIf(ArticleDraft.GetGoods.IsValid, ArticleDraft.GetGoods.GetTextIcon)] #tooltippable_name #tooltip:[ArticleDraft.GetGoods.GetTooltipTag],DATA_GOODS_NAME_TOOLTIP,GoodsTooltip [AddTextIf(ArticleDraft.GetGoods.IsValid, ArticleDraft.GetGoods.GetCustom('RU_GL_VP')|l]#!#![AddLocalizationIf(Not(ArticleDraft.GetGoods.IsValid), 'товары')]"
 TREATY_ARTICLE_FLAG_IS_NO_SUBVENTIONS_EFFECT: "• [SOURCE_COUNTRY.GetName] #b не#! буд[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')] устанавливать [Concept('concept_subventions', 'субвенции')] на [AddTextIf(Article.GetGoods.IsValid, Article.GetGoods.GetTextIcon)] #tooltippable_name #tooltip:[Article.GetGoods.GetTooltipTag],DATA_GOODS_NAME_TOOLTIP,GoodsTooltip [AddTextIf(Article.GetGoods.IsValid, Article.GetGoods.GetCustom('RU_GL_VP')|l]#!#![AddLocalizationIf(Not(Article.GetGoods.IsValid), 'товары')]"
 trade_privilege: "Торговые привилегии"
 trade_privilege_desc: ""
 trade_privilege_effects_desc: "• Заключает соглашение о [Concept('concept_trade_privilege', 'торговых привилегиях')] между двумя [Concept('concept_country','странами')], по которому одна страна создаёт благоприятные условия для торговцев из другой державы."
 trade_privilege_article_short_desc: "[TARGET_COUNTRY.GetNameNoFormatting] получа[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] торговые привилегии от [SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_RP')]"
 TREATY_DRAFT_ARTICLE_FLAG_IS_TRADE_PRIVILEGE_EFFECT: "• [TARGET_COUNTRY.GetName] получа[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_trade_privilege','торговые привилегии')] от [SOURCE_COUNTRY.GetAltName('RU_CL_RP')]"
 TREATY_ARTICLE_FLAG_IS_TRADE_PRIVILEGE_EFFECT: "• [TARGET_COUNTRY.GetName] получил[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [Concept('concept_trade_privilege','торговые привилегии')] от [SOURCE_COUNTRY.GetAltName('RU_CL_RP')]"
 foreign_investment_rights: "Права на инвестиции"
 foreign_investment_rights_desc: ""
 foreign_investment_rights_effects_desc: "• Заключает одностороннее [Concept('concept_foreign_investment_rights', 'соглашение о зарубежных инвестициях')], позволяющее [Concept('concept_country', 'стране')] возводить [Concept('concept_building', 'сооружения')] в другой стране."
 foreign_investment_rights_article_short_desc: "Позволяет [TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_DP')] строить сооружения в [SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_PP')]"
 TREATY_DRAFT_ARTICLE_FLAG_IS_INVESTMENT_RIGHTS_EFFECT: "• Позволяет [TARGET_COUNTRY.GetAltName('RU_CL_DP')] строить сооружения в [SOURCE_COUNTRY.GetAltName('RU_CL_PP')]"
 TREATY_ARTICLE_FLAG_IS_INVESTMENT_RIGHTS_EFFECT: "• Позволяет [TARGET_COUNTRY.GetAltName('RU_CL_DP')] строить сооружения в [SOURCE_COUNTRY.GetAltName('RU_CL_PP')]"
 alliance: "Союз"
 alliance_desc: ""
 alliance_effects_desc: "• Заключает [Concept('concept_alliance', 'союз')] между двумя [Concept('concept_country', 'странами' )].\n• Обе [Concept('concept_country', 'страны')] смогут перемещать [Concept('concept_army', 'армии')] по территории своего [Concept('concept_ally','союзника')]"
 alliance_article_short_desc: "[FIRST_COUNTRY.GetNameNoFormatting] заключа[FIRST_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] союз с [SECOND_COUNTRY.GetAltNameNoFormatting('RU_CL_TP')]"
 TREATY_DRAFT_ARTICLE_FLAG_IS_ALLIANCE_EFFECT: "• [FIRST_COUNTRY.GetName] заключа[FIRST_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] [Concept('concept_alliance', 'союз')] с [SECOND_COUNTRY.GetAltName('RU_CL_TP')]"
 TREATY_ARTICLE_FLAG_IS_ALLIANCE_EFFECT: "• [FIRST_COUNTRY.GetName] заключил[FIRST_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] [Concept('concept_alliance', 'союз')] с [SECOND_COUNTRY.GetAltName('RU_CL_TP')]"
 defensive_pact: "Оборонительный пакт"
 defensive_pact_desc: ""
 defensive_pact_effects_desc: "• Заключает [Concept('concept_defensive_pact', 'оборонительный пакт')] между двумя [Concept('concept_country', 'странами' )]."
 defensive_pact_article_short_desc: "[FIRST_COUNTRY.GetNameNoFormatting] вступа[FIRST_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] в оборонительный пакт с [SECOND_COUNTRY.GetAltNameNoFormatting('RU_CL_TP')]"
 TREATY_DRAFT_ARTICLE_FLAG_IS_DEFENSIVE_PACT_EFFECT: "• [FIRST_COUNTRY.GetName] вступа[FIRST_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] в [Concept('concept_defensive_pact', 'оборонительный пакт')] с [SECOND_COUNTRY.GetAltName('RU_CL_TP')]"
 TREATY_ARTICLE_FLAG_IS_DEFENSIVE_PACT_EFFECT: "• [FIRST_COUNTRY.GetName] вступа[FIRST_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] в [Concept('concept_defensive_pact', 'оборонительный пакт')] с [SECOND_COUNTRY.GetAltName('RU_CL_TP')]"
 guarantee_independence: "Гарантировать независимость"
 guarantee_independence_desc: ""
 guarantee_independence_effects_desc: "• Соглашение, заключённое одной [Concept('concept_country', 'страной')] в отношении другой, благодаря которому вторая страна способна призвать первую на помощь в любой [Concept('concept_diplomatic_play', 'дипломатической игре')], в которой она является обороняющейся стороной."
 guarantee_independence_article_short_desc: "[TARGET_COUNTRY.GetNameNoFormatting] гарантиру[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] независимость [SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_RP')]"
 TREATY_DRAFT_ARTICLE_FLAG_IS_GUARANTEE_INDEPENDENCE_EFFECT: "• [SOURCE_COUNTRY.GetName] буд[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')] гарантировать независимость [TARGET_COUNTRY.GetAltName('RU_CL_RP')]"
 TREATY_ARTICLE_FLAG_IS_GUARANTEE_INDEPENDENCE_EFFECT: "• [SOURCE_COUNTRY.GetName] гарантиру[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')] независимость [TARGET_COUNTRY.GetAltName('RU_CL_RP')]"
 support_independence: "Поддержать независимость"
 support_independence_desc: ""
 support_independence_effects_desc: "• Соглашение, заключённое одной [Concept('concept_country', 'страной')] в отношении другой, по которому первая страна обещает поддержать [Concept('concept_subject', 'субъект')] в случае [Concept('concept_diplomatic_demand', 'требования')] независимости у [Concept('concept_overlord', 'сюзерена')]."
 support_independence_article_short_desc: "[TARGET_COUNTRY.GetNameNoFormatting] получа[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] поддержку [SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_RP')]"
 TREATY_DRAFT_ARTICLE_FLAG_IS_SUPPORT_INDEPENDENCE_EFFECT: "• [SOURCE_COUNTRY.GetName] буд[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')] поддерживать независимость [TARGET_COUNTRY.GetAltName('RU_CL_RP')]"
 TREATY_ARTICLE_FLAG_IS_SUPPORT_INDEPENDENCE_EFFECT: "• [SOURCE_COUNTRY.GetName] поддержива[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] независимость [TARGET_COUNTRY.GetAltName('RU_CL_RP')]"
 join_power_bloc: "Присоединиться к блоку государств"
 join_power_bloc_desc: ""
 join_power_bloc_effects_desc: "• Соглашение, по которому одна [Concept('concept_country', 'страна')] официально присоединяется к [Concept('concept_power_bloc', 'блоку государств')] другой [Concept('concept_country', 'страны')]."
 join_power_bloc_article_short_desc: "[SOURCE_COUNTRY.GetNameNoFormatting] вступа[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] в [TARGET_COUNTRY.GetAdjectiveNoFormatting|l]ий блок государств"
 TREATY_DRAFT_ARTICLE_FLAG_IS_JOIN_POWER_BLOC_EFFECT: "• [SOURCE_COUNTRY.GetName] стан[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')] частью #tooltippable_name [TARGET_COUNTRY.GetAdjective|l]ого#! [Concept('concept_power_bloc','блока')] «[TARGET_COUNTRY.GetPowerBloc.GetName]»"
 TREATY_ARTICLE_FLAG_IS_JOIN_POWER_BLOC_EFFECT: "• [SOURCE_COUNTRY.GetName] стал[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] частью #tooltippable_name [TARGET_COUNTRY.GetAdjective|l]ого#! [Concept('concept_power_bloc','блока')] «[TARGET_COUNTRY.GetPowerBloc.GetName]»"
 host_power_bloc_embassy: "Посольство блока государств"
 host_power_bloc_embassy_desc: ""
 host_power_bloc_embassy_effects_desc: "• Открывает официальное посольство блока государств в другой [Concept('concept_country','стране')]"
 host_power_bloc_embassy_article_short_desc: "[SOURCE_COUNTRY.GetNameNoFormatting] принима[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] посольство [TARGET_COUNTRY.GetAdjectiveNoFormatting|l]ого блока государств"
 TREATY_DRAFT_ARTICLE_FLAG_IS_HOST_POWER_BLOC_EMBASSY_EFFECT: "• [SOURCE_COUNTRY.GetName] прим[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')] #tooltippable_name [TARGET_COUNTRY.GetAdjective|l]ое#! посольство блока «[TARGET_COUNTRY.GetPowerBloc.GetName]»"
 TREATY_ARTICLE_FLAG_IS_HOST_POWER_BLOC_EMBASSY_EFFECT: "• [SOURCE_COUNTRY.GetName] принима[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] у себя #tooltippable_name [TARGET_COUNTRY.GetAdjective|l]ое#! посольство блока «[TARGET_COUNTRY.GetPowerBloc.GetName]»"
 take_on_debt: "Выкуп долга"
 take_on_debt_desc: ""
 take_on_debt_effects_desc: "• Заключает соглашение, по которому одна [Concept('concept_country', 'страна')] берёт на себя [Concept('concept_loans', 'займы')] другой страны."
 take_on_debt_article_short_desc: "[SOURCE_COUNTRY.GetNameNoFormatting] принима[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] на себя [TARGET_COUNTRY.GetAdjectiveNoFormatting|l]ие займы"
 TREATY_DRAFT_ARTICLE_FLAG_IS_TAKE_ON_DEBT_EFFECT: "• [SOURCE_COUNTRY.GetName] прим[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')] на себя #tooltippable_name [TARGET_COUNTRY.GetAdjective|l]ие#! [Concept('concept_loans','займы')]"
 TREATY_ARTICLE_FLAG_IS_TAKE_ON_DEBT_EFFECT: "• [SOURCE_COUNTRY.GetName] принял[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_FEM')] на себя #tooltippable_name [TARGET_COUNTRY.GetAdjective|l]ие#! [Concept('concept_loans','займы')]"
 military_assistance: "Военная помощь"
 military_assistance_desc: ""
 military_assistance_effects_desc: "• Военное соглашение между двумя [Concept('concept_country', 'странами')], по которому одна из них предоставляет [Concept('concept_military_assistance', 'военную помощь')] другой [Concept('concept_country', 'стране')] через усиленную подготовку и военный опыт."
 military_assistance_article_short_desc: "[SOURCE_COUNTRY.GetNameNoFormatting] оказыва[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] военную помощь [TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_DP')]"
 TREATY_DRAFT_ARTICLE_FLAG_IS_MILITARY_ASSISTANCE_EFFECT: "• [SOURCE_COUNTRY.GetName] буд[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_UT')] оказывать военную помощь [TARGET_COUNTRY.GetAltName('RU_CL_DP')]"
 TREATY_ARTICLE_FLAG_IS_MILITARY_ASSISTANCE_EFFECT: "• [SOURCE_COUNTRY.GetName] оказыва[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] военную помощь [TARGET_COUNTRY.GetAltName('RU_CL_DP')]"
 TREATY_PROPOSAL_ALREADY_ENTERED_INTO_FORCE: "Нельзя предложить договор «[TREATY.GetName]»: он уже действует"
 TREATY_PROPOSAL_COUNTRY_NOT_BOUND_BY_TREATY: "Нельзя предложить договор «[TREATY.GetName]»: [Concept('concept_treaty','договор')] не станет [Concept('concept_binding_period', 'обязательным')] для [COUNTRY.GetAltName('RU_CL_RP')]"
 TREATY_PROPOSAL_ALREADY_PENDING: "[COUNTRY.GetName] уже рассматрива[COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] это предложение"
 TREATY_ARTICLE_CANNOT_RATIFY_DIRECTED: "[SOURCE_COUNTRY.GetName] не мо[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_GUT')]т ратифицировать договор «[TREATY_ARTICLE_TYPE.GetName]» в отношении [TARGET_COUNTRY.GetAltName('RU_CL_RP')]."
 TREATY_ARTICLE_CANNOT_RATIFY_MUTUAL: "[FIRST_COUNTRY.GetName] и [SECOND_COUNTRY.GetName] не могут ратифицировать договор «[TREATY_ARTICLE_TYPE.GetName]»"
 TREATY_RELATIONS_CHANGE_EFFECT_POS: "• Улучшает [Concept('concept_relations', 'отношения')] на #g +1#! раз в #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $DAYS|v$#!#!#! дн.$CAPDESC$"
 TREATY_RELATIONS_CHANGE_EFFECT_NEG: "• Снижает [Concept('concept_relations', 'отношения')] на #n -1#! раз в #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $DAYS|v$#!#!#! дн.$CAPDESC$"
 ARTICLE_TYPE_RELATIONS_EFFECT_POS: "• Улучшает [Concept('concept_relations', 'отношения')] на #g +1#! раз в $DAYS|v$ дн.$CAPDESC$"
 ARTICLE_TYPE_RELATIONS_EFFECT_NEG: "• Снижает [Concept('concept_relations', 'отношения')] на #n -1#! раз в $DAYS|v$ дн.$CAPDESC$"
 TREATY_RELATIONS_EFFECT_BASE_VALUE: "#v $VAL|%2=+$#! базового значения"
 TREATY_RELATIONS_BREAKDOWN_FORMAT: "#header Прогресс [Concept('concept_relations','отношений')]#!\n#v $DAYS$#! дн. до [SelectLocalization( LessThan_CFixedPoint( '(CFixedPoint)$PROGRESS_DAILY|5$', '(CFixedPoint)0' ), '#r -', '#g ' )]100%#!\n$TOOLTIP_DELIMITER$\nЕжедневный прогресс составляет #v $PROGRESS_DAILY|%2=+$#!, причины:\n$BREAKDOWN$"
 TREATY_AGGREGATE_RELATIONS_CHANGE_NO_PROGRESS: "• Отношения между [FIRST_COUNTRY.GetAltName('RU_CL_TP')] и [SECOND_COUNTRY.GetAltName('RU_CL_TP')] #tooltippable #tooltip:$BREAKDOWN_TAG$ не изменятся#!#!"
 TREATY_AGGREGATE_RELATIONS_CHANGE: "• Отношения между [FIRST_COUNTRY.GetAltName('RU_CL_TP')] и [SECOND_COUNTRY.GetAltName('RU_CL_TP')] будут меняться на $CHANGE|+$ раз в #tooltippable #tooltip:$BREAKDOWN_TAG$ $DAYS|v$#!#! дн."
 TREATY_AGGREGATE_RELATIONS_CHANGE_BREAKDOWN_ITEM: "• $CHANGE|+$ раз в $DAYS|v$ дн. от пункта «[TREATY_ARTICLE.GetName]»"
 TREATY_AGGREGATE_MUTUAL_MODIFIERS: "• И [FIRST_COUNTRY.GetName], и [SECOND_COUNTRY.GetName] получают #tooltippable #tooltip:$BREAKDOWN_TAG$ модификаторы#!#! от двусторонних [Concept('concept_article', 'пунктов')]"
 TREATY_AGGREGATE_SOURCE_MODIFIERS: "• [SOURCE_COUNTRY.GetName] получа[SOURCE_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] #tooltippable #tooltip:$BREAKDOWN_TAG$ модификаторы#!#!, являясь источником некоторых односторонних [Concept('concept_article', 'пунктов')]"
 TREATY_AGGREGATE_TARGET_MODIFIERS: "• [TARGET_COUNTRY.GetName] получа[TARGET_COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')] #tooltippable #tooltip:$BREAKDOWN_TAG$ модификаторы#!#!, являясь целью некоторых односторонних [Concept('concept_article', 'пунктов')]"
 TREATY_DRAFT_OWE_OBLIGATION_TOOLTIP: "#header Дать [Concept('concept_obligation', 'обязательство')] [COUNTRY.GetAltName('RU_CL_DP')]#!\n$TAB$$VAL|+=$ к принятию [Concept('concept_treaty','договора')]"
 TREATY_DRAFT_CALL_IN_OBLIGATION_TOOLTIP: "#header Использовать [Concept('concept_obligation', 'обязательство')] [COUNTRY.GetAltName('RU_CL_RP')] перед вами#!\n$TAB$$VAL|+=$ к принятию [Concept('concept_treaty','договора')]"
 TREATY_OPTIONS_VALIDATE_NO_ARTICLES_TO_CREATE: "Добавьте хотя бы один [Concept('concept_article','пункт')]"
 TREATY_ARTICLE_NON_FULFILLMENT_DESC_WEEKLY_TRIGGER: "Проверяется каждую неделю:\n$TRIGGER_DESC$"
 TREATY_ARTICLE_NON_FULFILLMENT_DESC_MONTHLY_TRIGGER: "Проверяется каждый месяц:\n$TRIGGER_DESC$"
 TREATY_ARTICLE_NON_FULFILLMENT_DESC_YEARLY_TRIGGER: "Проверяется каждый год:\n$TRIGGER_DESC$"
 TREATY_ARTICLE_NOT_FULFILLED_BY: "[COUNTRY.GetName][ConcatIfNeitherEmpty(' ', AddLocalizationIf(ObjectsEqual(Country.Self, GetPlayer.Self), 'YOU'))] [Concept('concept_contravention', ConcatIfNeitherEmpty('наруша', COUNTRY.GetAltNameNoFormatting('RU_CL_END_T')))] [Concept('concept_article','пункт')] «[Article.GetName]» договора «[Article.GetTreaty.GetName]»\n\n#tooltippable #tooltip:$BREAKDOWN_TAG$ $CURRENT_CONTRAVENTIONS|v$#!#! текущих нарушений\n$MAX_CONTRAVENTIONS|v$ нарушений приведёт к [Concept('concept_non_fulfillment', 'несоблюдению')] пункта"
 TREATY_DRAFT_ARTICLE_MUTUALLY_EXCLUSIVE: "@simple_box! Ещё #b не#! выбран пункт «[TREATY_ARTICLE_TYPE.GetName]»"
 TREATY_DRAFT_ARTICLE_ONCE_PER_TREATY: "@green_checkmark_box! Этот пункт уже добавлен в этот [Concept('concept_treaty','договор')]"
 TREATY_DRAFT_ARTICLE_ONCE_PER_SIDE: "@green_checkmark_box! Этот пункт уже добавлен в этот [Concept('concept_treaty','договор')] на #tooltippable_name [Country.GetAdjective|l]ой#! стороне"
 can_create_treaty_MILITARY_ASSISTANCE: "Можно подписать [Concept('concept_treaty','договор')] о #bold военной помощи#!"
