l_german:
 TAB: "   "
 COLON: ":"
 DASH_WITH_SPACING: " - "
 POP_WORKPLACE_DAY_LABOURER: "Tagelöhner"
 POP_WORKPLACE_UNEMPLOYED: "[concept_unemployed]"
 POP_WORKPLACE_EMPLOYED: "$NAME$"
 POP_WORKPLACE_DAY_LABOURER_LIST_ENTRY: "$WORKPLACE$: $WORKERS|v$"
 POP_WORKPLACE_DAY_LABOURER_LIST: "Arbeitet in:\n$LIST$"
 POP_WORKPLACE_EMPLOYED_TOOLTIP: "Hat $WORKERS|v$ in der Industrie."
 POP_WORKPLACE_UNEMPLOYED_TOOLTIP: "Ist [concept_unemployed|l]."
 LOBBYVIEW_SELECT_PLAYABLE: "@red_cross! Kein Land ausgewählt\n\nWählen Sie ein Land auf der Karte aus"
 LOBBYVIEW_NO_CROSSPLAY: "Plattformübergreifendes Spielen deaktivieren"
 LOBBYVIEW_NO_CROSSPLAY_TOOLTIP: "Nur Spieler, die auf der gleichen Plattform spielen, können dem Spiel beitreten"
 JOIN_MULTIPLAYER_PASTE_SERVER_ID: "Server-ID kopieren"
 LIST_BULLET_ENTRY: "$EFFECT_LIST_BULLET$ $ENTRY$"
 VALUE_PERCENT_GOOD: "#p $VALUE|%0$#!"
 VALUE_PERCENT_BAD: "#n $VALUE|%0$#!"
 PRIVATELY_OWNED_FILTER_RIGHT_CLICK_MENU_TITLE: "[NationalizeBuildingGroup.GetInvestor.GetAdjective|U]e [Concept('concept_building_level','$concept_building_levels$')] in [concept_privately_owned] filtern"
 PRIVATELY_OWNED_FILTER_TOOLTIP_HEADER: "#header [NationalizeBuildingGroup.GetInvestor.GetAdjective|U]e [Concept('concept_building_level','$concept_building_levels$')] in [concept_privately_owned] filtern#!"
 PRIVATELY_OWNED_FILTER_BUTTON_TOOLTIP_ALL: "$PRIVATELY_OWNED_FILTER_TOOLTIP_HEADER$\n$PRIVATELY_OWNED_FILTER_TOOLTIP_ALL_SELECTED$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_ALL: "#header Alle [Concept('concept_building_level','$concept_building_levels$')] in [concept_privately_owned] anzeigen#!\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('all')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('all')] ausgewählte $concept_building_levels_short$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_ALL_SELECTED: "Zeigt derzeit alle [Concept('concept_building_level','$concept_building_levels$')] in [concept_privately_owned] an\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('all')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('all')] ausgewählte $concept_building_levels_short$"
 PRIVATELY_OWNED_FILTER_BUTTON_TOOLTIP_COMPANIES: "$PRIVATELY_OWNED_FILTER_TOOLTIP_HEADER$\n$PRIVATELY_OWNED_FILTER_TOOLTIP_COMPANIES_SELECTED$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_COMPANIES: "#header Nur [Concept('concept_building_level','$concept_building_levels$')] im Besitz von [Concept('concept_company', '$concept_companies$')] anzeigen#!\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('companies')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('companies')] ausgewählte $concept_building_levels_short$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_COMPANIES_SELECTED: "Zeigt derzeit nur [Concept('concept_building_level','$concept_building_levels$')] im Besitz von [Concept('concept_company', '$concept_companies$')] an\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('companies')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('companies')] ausgewählte $concept_building_levels_short$"
 PRIVATELY_OWNED_FILTER_BUTTON_TOOLTIP_MANOR_HOUSE: "$PRIVATELY_OWNED_FILTER_TOOLTIP_HEADER$\n$PRIVATELY_OWNED_FILTER_TOOLTIP_MANOR_HOUSE_SELECTED$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_MANOR_HOUSE: "#header Nur [Concept('concept_building_level','$concept_building_levels$')] im Besitz von [GetBuildingType('building_manor_house').GetName]n anzeigen#!\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('manor_house')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('manor_house')] ausgewählte $concept_building_levels_short$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_MANOR_HOUSE_SELECTED: "Zeigt derzeit nur [Concept('concept_building_level','$concept_building_levels$')] im Besitz von [GetBuildingType('building_manor_house').GetName]n an\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('manor_house')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('manor_house')] ausgewählte $concept_building_levels_short$"
 PRIVATELY_OWNED_FILTER_BUTTON_TOOLTIP_FINANCIAL_DISTRICT: "$PRIVATELY_OWNED_FILTER_TOOLTIP_HEADER$\n$PRIVATELY_OWNED_FILTER_TOOLTIP_FINANCIAL_DISTRICT_SELECTED$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_FINANCIAL_DISTRICT: "#header Nur [Concept('concept_building_level','$concept_building_levels$')] im Besitz von [GetBuildingType('building_financial_district').GetName]n anzeigen#!\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('financial_district')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('financial_district')] ausgewählte $concept_building_levels_short$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_FINANCIAL_DISTRICT_SELECTED: "Zeigt derzeit [Concept('concept_building_level','$concept_building_levels$')] im Besitz von [GetBuildingType('building_financial_district').GetName]n an\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('financial_district')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('financial_district')] ausgewählte $concept_building_levels_short$"
 WORKER_OWNED: "Arbeiterbesitz"
 PRIVATELY_OWNED_FILTER_BUTTON_TOOLTIP_WORKER_OWNED: "$PRIVATELY_OWNED_FILTER_TOOLTIP_HEADER$\n$PRIVATELY_OWNED_FILTER_TOOLTIP_WORKER_OWNED_SELECTED$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_WORKER_OWNED: "#header Nur [Concept('concept_building_level','$concept_building_levels$')] in Arbeiterbesitz anzeigen#!\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('self')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('self')] ausgewählte $concept_building_levels_short$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_WORKER_OWNED_SELECTED: "Zeigt derzeit nur [Concept('concept_building_level','$concept_building_levels$')] in Arbeiterbesitz an\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('self')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('self')] ausgewählte $concept_building_levels_short$"
 NATIONALIZE_BUILDING_HEADER: "$NATIONALIZE$"
 NATIONALIZE: "$concept_nationalize$"
 CONSTRUCTION_CURRENT_PAGE: "Seite [ConstructionPanel.AccessCurrentGovernmentConstructionQueuePage(GetMetaPlayer.GetPlayedOrObservedCountry)]/[ConstructionPanel.GetNumGovernmentConstructionQueuePages(GetMetaPlayer.GetPlayedOrObservedCountry)]"
 CONSTRUCTION_CURRENT_PAGE_PRIVATE: "Seite [ConstructionPanel.AccessCurrentPrivateConstructionQueuePage(GetMetaPlayer.GetPlayedOrObservedCountry)]/[ConstructionPanel.GetNumPrivateConstructionQueuePages(GetMetaPlayer.GetPlayedOrObservedCountry)]"
 CONSTRUCTION_NEXT_PAGE: "Nächste Seite"
 CONSTRUCTION_PREVIOUS_PAGE: "Vorige Seite"
 PRIVATELY_FUNDED_CONSTRUCTION: "#header [concept_private_construction]#!\n$TOOLTIP_DELIMITER$\nDieser Eintrag der [concept_construction_queue] ist ein [concept_private_construction] und kann weder abgebrochen noch in der Priorität verschoben werden."
 GOVERNMENT_FUNDED_CONSTRUCTION: "#header [concept_government_construction]#!\n$TOOLTIP_DELIMITER$\nDieser Eintrag der [concept_construction_queue] ist ein [concept_government_construction] und kann nach Belieben abgebrochen und in der Priorität verschoben werden."
 CANNOT_ALTER_PRIVATE_CONSTRUCTION: "[Concept('concept_private_construction', '$concept_private_constructions$')] können weder abgebrochen noch in der Priorität verschoben werden."
 NATIONALIZE_BUILDINGS_DESCRIPTION: "[Concept('concept_nationalize', 'Verstaatlicht')] [Concept('concept_building', '$concept_buildings$')], übernimmt [Concept('concept_building_level', '$concept_building_levels$')] und macht sie zu [concept_nationally_owned]"
 NATIONALIZE_BUILDING_TYPE_GROUP_TOOLTIP: "#header [BuildingType.GetName]#!\n#v [NationalizeBuildingTypeGroup.GetMaxLevels]#! [Concept('concept_building_level', '$concept_building_levels_parenthetical_plural_short$')] verfügbar zur [Concept('concept_nationalize','$concept_nationalization$')]\n$TOOLTIP_DELIMITER$\n[SelectLocalization(GreaterThan_int32(NationalizeBuildingTypeGroup.GetCurrentLevels, '(int32)0'), 'SELECTED_LEVELS_BREAKDOWN', 'NO_LEVELS_SELECTED_FOR_NATIONALIZATION')]"
 SELECTED_LEVELS_BREAKDOWN: "#title #v [NationalizeBuildingTypeGroup.GetCurrentLevels]#!/[NationalizeBuildingTypeGroup.GetMaxLevels] [Concept('concept_building_level', '$concept_building_levels_parenthetical_plural_short$')] derzeit ausgewählt zur $concept_nationalization$:#! #indent_newline:3 \n[NationalizeBuildingTypeGroup.GetSelectedBuildingsBreakdown]#!"
 NO_LEVELS_SELECTED_FOR_NATIONALIZATION: "Keine [Concept('concept_building_level', '$concept_building_levels_parenthetical_plural_short$')] derzeit ausgewählt zur $concept_nationalization$"
 NATIONALIZE_BUILDING_TYPE_GROUP_BUILDING_ENTRY_MONEY: "@money!#v $VAL|D=-$#!"
 NATIONALIZE_BUILDING_TYPE_GROUP_BUILDING_ENTRY: "$EFFECT_LIST_BULLET$[Building.GetState.GetName], $NUM_LEVELS|v$ [Concept('concept_building_level', '$concept_building_levels_parenthetical_plural_short$')]:"
 NATIONALIZE_BUILDING_ITEM_TOOLTIP: "$EFFECT_LIST_BULLET$„[Building.GetName]“ in „[Building.GetState.GetName]“, $NUM_LEVELS|v$ [Concept('concept_building_level', '$concept_building_levels_parenthetical_plural_short$')]:"
 #It might be better to use something like construction_panel.gui:205-225, where we change the text here without any new code, just check the different "HasPact" and "IsSubject" and construct the text accordingly.
 #at least "country" here is [NationalizeBuildingGroup.GetCountry] :)
 NATIONALIZE_BUILDING_GROUP_NAME_COMPANY: "Im Besitz von [Country.GetAdjectiveNoFormatting|l]en [Concept('concept_company', '$concept_companies$')]"
 NATIONALIZE_BUILDING_GROUP_NAME_PRIVATE: "[COUNTRY.GetAdjectiveNoFormatting|U]er [concept_privately_owned]"
 NATIONALIZE_BUILDING_GROUP_NAME_GOVERNMENT: "[COUNTRY.GetAdjectiveNoFormatting|U]er [concept_nationally_owned]"
 NATIONALIZE_BUILD_GROUP_TOOLTIP: "[SelectLocalization(StringIsEmpty(NationalizeBuildingGroup.GetSelectedLevelsDesc), 'NATIONALIZE_BUILDING_GROUP_NONE_SELECTED', 'NATIONALIZE_BUILDING_GROUP_SELECTED')]"
 NATIONALIZE_BUILDING_GROUP_SELECTED: "#header [NationalizeBuildingGroup.GetName]#!\n#v [NationalizeBuildingGroup.GetNumSelectedLevels]#! [Concept('concept_building_level', '$concept_building_levels_parenthetical_plural_short$')] ausgewählt zur [Concept('concept_nationalize','$concept_nationalization$')][ConcatIfNeitherEmpty('\n', NationalizeBuildingGroup.GetErrors)]\n$TOOLTIP_DELIMITER$\n[AddLocalizationIf(Not(StringIsEmpty(NationalizeBuildingGroup.GetSelectedLevelsDesc)), 'NATIONALIZE_BUILDING_GROUP_COST_PER_LEVEL_TITLE')] #indent_newline:3 \n[NationalizeBuildingGroup.GetSelectedLevelsDesc]#!"
 NATIONALIZE_BUILDING_GROUP_NONE_SELECTED: "#v [NationalizeBuildingGroup.GetNumSelectedLevels]#! „[NationalizeBuildingGroup.GetName]“-[Concept('concept_building_level','$concept_building_levels$')] ausgewählt für [Concept('concept_nationalize','$concept_nationalization$')][ConcatIfNeitherEmpty('\n', NationalizeBuildingGroup.GetErrors)]"
 NATIONALIZE_BUILDING_GROUP_COST_PER_LEVEL_TITLE: "#title $concept_nationalization$skosten pro [concept_building]:#!"
 NATIONALIZE_FILTERED_BUILDINGS_LABEL: "Gefilterte Gebäude verstaatlichen"
 NATIONALIZE_FILTERED_BUILDINGS_TOOLTIP: "#header $BUILDING_NATIONALIZE$#!\n$TOOLTIP_DELIMITER$\nEine oder mehrere Stufen der derzeit gefilterten [Concept('concept_building','$concept_buildings$')] [concept_nationalize|l]"
 NATIONALIZE_FILTERED_BUILDINGS_FAILED: "#header $BUILDING_NATIONALIZE$#!\n$TOOLTIP_DELIMITER$\nEs ist nicht möglich, eines der derzeit gefilterten [Concept('concept_building','$concept_buildings$')] zu [concept_nationalize|l]."
 NATIONALIZE_BUILDING_REQUIRED_LEVELS: "Muss mindestens #v 1#! [concept_building_level] verstaatlichen"
 NATIONALIZE_BUILDING_NO_LEVELS: "Konnte keine [Concept('concept_building_level', '$concept_building_levels_short$')] finden, die [Concept('concept_nationalize','$concept_nationalized$')|l] werden können"
 NATIONALIZE_EFFECTS_HEADER: "Effekte"
 NATIONALIZE_EFFECTS_MAINTENANCE: "#r -[GetPlayer.GetStateOwnedBuildingsBureaucracyCostForLevels(NationalizeBuildingWindow.GetNumLevelsToNationalize)|D0]#! [concept_bureaucracy]-Unterhaltskosten für #v [Concept('concept_nationally_owned', '$concept_nationally_owning$')][NationalizeBuildingWindow.GetNumLevelsToNationalize]#! neue [Concept('concept_building_level',SelectLocalization(EqualTo_int32(NationalizeBuildingWindow.GetNumLevelsToNationalize, '(int32)1'),'concept_building_level_short','concept_building_levels_short'))] in [Concept('concept_nationally_owned', 'Staatsbesitz')]#!"
 NATIONALIZE_EFFECT_RADICALS: "#title Diese [concept_building_owners] würden [Concept('concept_radical', '$concept_radical$er')|l] werden:#!#indent_newline:3 \n[NationalizeBuildingWindow.GetPopRadicalizationListDesc]#!"
 NATIONALIZE_EFFECT_RELATIONS: "$BUILDING_NATIONALIZE_RELATIONS_IMPACT_HEADER$\n[NationalizeBuildingWindow.GetDamagedRelationsListDesc]"
 NATIONALIZE_COMPENSATION_PLAYER_IP: "(@money!#v [NationalizeBuildingWindow.GetCompensationShareToPlayerInvestmentPool|D]#! an unseren [concept_investment_pool])"
 NATIONALIZE_COMPENSATION_AMOUNT: "@money!#r -[NationalizeBuildingWindow.GetCompensationTotal|D]#! Kosten [AddLocalizationIf(GreaterThan_CFixedPoint(NationalizeBuildingWindow.GetCompensationShareToPlayerInvestmentPool, '(CFixedPoint)0'), 'NATIONALIZE_COMPENSATION_PLAYER_IP')]"
 BUILDING_NATIONALIZE_COMPENSATION_TOOLTIP: "#header Kosten der [Concept('concept_nationalize','Verstaatlichung')] von [NationalizeBuildingWindow.GetNumLevelsToNationalize] [Concept('concept_building_level', '$concept_building_levels_short$')]#!\n@money!#r -[NationalizeBuildingWindow.GetCompensationTotal|D]#! Gesamtkosten\n$TOOLTIP_DELIMITER$\nDieses [concept_money] geht an:#indent_newline:3 \n[NationalizeBuildingWindow.GetCompensationBreakdown]#!"
 BUILDING_NATIONALIZE_COMPENSATION_ENTRY_TO_PLAYER: "@money!#r -$COST|D$#! an [COUNTRY.GetAdjective|l]e [Concept('concept_pop', '$concept_pops$')] (#v $POOL|D$#! an Euren [concept_investment_pool])"
 BUILDING_NATIONALIZE_COMPENSATION_ENTRY_WITH_INVESTMENT_POOL: "@money!#r -$COST|D$#! an [COUNTRY.GetAltName('AKK')] (#v $POOL|D$#! an deren [concept_investment_pool])"
 BUILDING_NATIONALIZE_COMPENSATION_ENTRY: "@money!#r $COST|D$#! an [COUNTRY.GetAltName('AKK')]"
 CANNOT_NATIONALIZE_FOREIGN_INVESTMENT_RIGHTS: "[COUNTRY.GetFlagTextIcon] [COUNTRY.GetAdjectiveNoFormatting|U]e Investoren haben [concept_foreign_investment_rights|l]."
 CANNOT_NATIONALIZE_NATIONALLY_OWNED_BUILDING: "[COUNTRY.GetFlagTextIcon] [COUNTRY.GetAdjectiveNoFormatting|U]e [concept_nationally_owned]-[Concept('concept_building_level','$concept_building_levels$')] können nicht [Concept('concept_nationalize','$concept_nationalized$')|l] werden"
 CANNOT_NATIONALIZE_NO_AVAILABLE_LEVELS: "Es gibt keine [Concept('concept_building_level', '$concept_building_levels_short$')], die #tooltippable #tooltip:[BUILDING.GetTooltipTag],CANNOT_NATIONALIZE_NO_AVAILABLE_LEVELS_BREAKDOWN verstaatlicht werden können#!#!"
 CANNOT_NATIONALIZE_NO_AVAILABLE_LEVELS_BREAKDOWN: "[Building.GetNoLevelsCanBeNationalizedDesc]"
 CANNOT_NATIONALIZE_UNDER_COLLECTIVIZATION: "Dieses Gebäude kann nicht verstaatlicht werden, weil es nicht die Mindest-[Concept('concept_building_level', '$concept_building_levels_short$')] in Arbeiterbesitz erreicht hat"
 CANNOT_NATIONALIZE_BUILDING_IS_MONOPOLIZED: "$BUILDING_IS_MONOPOLIZED_BY$"
 CANNOT_NATIONALIZE_NO_FUNDS: "[Concept('concept_nationalize','$concept_nationalization$')] nicht möglich; wir brauchen #variable @money!$COST|D$#! und wir haben nur @money!#v [GetPlayer.GetGoldReserves|D]#! in unseren derzeitigen [concept_gold_reserves]"
 CANNOT_NATIONALIZE_BUILDING_TYPE: "Nur Gebäude, die andere bauen und besitzen können, können [Concept('concept_nationalize','$concept_nationalized$')] werden"
 CANNOT_NATIONALIZE_DISALLOWED: "[Concept('concept_nationalize','$concept_nationalization$')] ist nicht erlaubt"
 BUILDING_NATIONALIZE: "$concept_nationalize$"
 CANNOT_NATIONALIZE_LAST_COMPANY_LEVELS: "Diese [Concept('concept_building_level', '$concept_building_levels_short$')] können nicht verstaatlicht werden, da „[Company.GetName]“ nicht weniger als #variable $NUM_LEVELS$#! $concept_building_levels_short$ im Besitz haben kann"
 BUILDING_NATIONALIZE_TOOLTIP: "#header $BUILDING_NATIONALIZE$#!\n$TOOLTIP_DELIMITER$\nEine oder mehrere more [Concept('concept_building_level', '$concept_building_levels_short$')] dieses [Concept('concept_building', 'Gebäudes')] [concept_nationalize|l]: [ConcatIfNeitherEmpty('\n\n',GetDesc(Building.NationalizeBuildingLevels('(int32)1')))]"
 BUILDING_NATIONALIZE_DESC: "[NationalizeBuildingWindow.GetNumLevelsToNationalize|v] [SelectLocalization(EqualTo_int32(NationalizeBuildingWindow.GetNumLevelsToNationalize, '(int32)1'),'BUILDING_NATIONALIZE_LEVEL_SINGULAR','BUILDING_NATIONALIZE_LEVEL_PLURAL')]:\n$OWNERS$\n\n$COMPENSATION$[ConcatIfNeitherEmpty('\n\n','$PENALTIES$')] [concept_nationalize|l]"
 BUILDING_NATIONALIZE_LEVEL_SINGULAR: "[concept_building_level]"
 BUILDING_NATIONALIZE_LEVEL_PLURAL: "[Concept('concept_building_level', '$concept_building_levels$')]"
 BUILDING_NATIONALIZE_WITH_COMPENSATION_DESC: "@money!$COST|vD$ Entschädigungskosten (@money!$INVESTMENT|Dv$ werden aus dem [concept_investment_pool] bezahlt)"
 BUILDING_NATIONALIZE_NO_COMPENSATION_DESC: "Dies geschieht #n ohne monetäre Entschädigung#!, was die Auswirkungen auf $concept_radicals$ und $concept_relations$ um #n [GetDefine('NEconomy','NATIONALIZE_BUILDING_NO_COMPENSATION_IMPACT_MULT')|%0]#! erhöht"
 BUILDING_NATIONALIZE_COUNTRY_OWNERSHIP_TOOLTIP_DESC: "#variable $LEVEL$#! im Besitz [COUNTRY.GetAltName('VON')]"
 BUILDING_NATIONALIZE_BUILDING_OWNERSHIP_TOOLTIP_DESC: "#variable $LEVEL$#! von „[BUILDING.GetName]“ in „[Building.GetState.GetName]“"
 BUILDING_NATIONALIZE_SELF_OWNERSHIP_TOOLTIP_DESC: "#variable $LEVEL$#! im Besitz der [Concept('concept_workforce', 'Beschäftigten')]"
 BUILDING_NATIONALIZE_RADICALS_DESC: "@warning! Diese [concept_building_owners] würden [Concept('concept_radical', '$concept_radical$er')|l] werden:\n$POP_LIST$"
 BUILDING_NATIONALIZE_RADICALIZED_POP_ENTRY: "$NAME$ #v $AMOUNT|-D$#!"
 BUILDING_NATIONALIZATION_CAN_TOGGLE_COMPENSATION: "#header Entschädigung für $concept_nationalization$#!\n$TOOLTIP_DELIMITER$\n#instruction Hier klicken, um zu entscheiden, ob eine Entschädigung für die $concept_nationalization$ an [Concept('concept_building_owners','$concept_building_owning$e')] [Concept('concept_pop', '$concept_pops$')] gezahlt wird#!"
 BUILDING_NATIONALIZATION_CANNOT_TOGGLE_COMPENSATION: "#header Entschädigung für $concept_nationalization$#!\n$TOOLTIP_DELIMITER$\nEine Entschädigung für die $concept_nationalization$ muss gezahlt werden aufgrund von:\n$DETAILS$"
 BUILDING_NATIONALIZATION_WITH_COMPENSATION: "[Concept('concept_building_owners', 'Gebäudebesitzern')] Entschädigung gewähren"
 BUILDING_NATIONALIZATION_INCREASE_LEVELS_TOOLTIP: "#header Zu verstaatlichende [Concept('concept_building_level', '$concept_building_levels_short$')] erhöhen#!\n$TOOLTIP_DELIMITER$\n#i Klicken#!, um die Anzahl der $concept_building_levels_short$ um #v 1#! zu erhöhen\n#i $SHORTCUT_KEY_MOD_shift$Klicken#!, um die Anzahl der $concept_building_levels_short$ um #v 10#! zu erhöhen\n#i $SHORTCUT_KEY_MOD_ctrl$Klicken#!, um die Anzahl der $concept_building_levels_short$ auf das #v Maximum#! zu setzen"
 BUILDING_NATIONALIZATION_DECREASE_LEVELS_TOOLTIP: "#header Zu verstaatlichende [Concept('concept_building_level', '$concept_building_levels_short$')] senken#!\n$TOOLTIP_DELIMITER$\n#i Klicken#!, um die Anzahl der $concept_building_levels_short$ um #v 1#! zu senken\n#i $SHORTCUT_KEY_MOD_shift$Klicken#!, um die Anzahl der $concept_building_levels_short$ um #v 10#! zu senken\n#i $SHORTCUT_KEY_MOD_ctrl$Klicken#!, um die Anzahl der $concept_building_levels_short$ auf das #v Minimum#! zu setzen"
 CTRL_CLICK_TO_SET_TO_MAXIMUM_MINIMUM: "#i $SHORTCUT_KEY_MOD_ctrl$Klicken#!, um die Zahl der [Concept('concept_building_level', '$concept_building_levels_short$')] auf #v das Minimum#!/#v Maximum#! zu setzen"
 BUILDING_NATIONALIZE_RELATIONS_IMPACT_HEADER: "@warning! Würde [concept_relations] zu den folgenden [Concept('concept_country', '$concept_countries$')] verschlechtern:"
 BUILDING_NATIONALIZE_RELATIONS_IMPACT_ENTRY: "[COUNTRY.GetAltName('NOM')|U]: $AMOUNT|=+$ (derzeit [COUNTRY.GetRelationsWith(GetPlayer)|+])"
 CANNOT_TOGGLE_PRIVATIZATION_NO_AVAILABLE_LEVELS: "Hat mindestens #v 1#! [concept_building_level], die privatisiert werden kann"
 CANNOT_PRIVATIZE_BUILDING_TYPE: "Kann #b nicht#! von [Concept('concept_pop', '$concept_pops$')] [Concept('concept_construction','$concept_constructed$')|l] und in [concept_privately_owned] sein"
 CANNOT_PRIVATIZE_MONOPOLIZED_BUILDING_TYPE: "Wird #b nicht#! [Concept('concept_country_monopoly', '$concept_country_monopolized$')]"
 CANNOT_TOGGLE_PRIVATIZATION_DISALLOWED: "Alle [Concept('concept_privatize', '$concept_privatization$en')] sind [Building.GetState.GetCountry.GetAltName('IN')] verboten"
 BUILDING_TOGGLE_PRIVATIZATION: "[Concept('concept_privatize','$concept_privatization$')]"
 CANNOT_TOGGLE_PRIVATIZATION_FORCED: "[Concept('concept_privatize','$concept_privatization$')] wird durch [Building.GetState.GetCountry.GetAdjective|l]es „[GetLawType('law_laissez_faire').GetGroup.GetName]: [GetLawType('law_laissez_faire').GetName]“ erzwungen"
 BUILDING_ENABLE_PRIVATIZATION: "Erlaubt [Concept('concept_privatize','$concept_privatization$')]"
 BUILDING_DISABLE_PRIVATIZATION: "Verbietet [Concept('concept_privatize','$concept_privatization$')]"
 BUILDING_TOGGLE_ON_PRIVATIZATION_TOOLTIP_HEADER: "#header [Building.GetName] [Concept('concept_privatize','$concept_privatize$')|l]#!"
 BUILDING_TOGGLE_OFF_PRIVATIZATION_TOOLTIP_HEADER: "#header $BUILDING_TOGGLE_PRIVATIZATION$ von „[Building.GetName]“ entfernen#!"
 BUILDING_TOGGLE_PRIVATIZATION_TOOLTIP_DESC: "Erlaubt Investoren, [GetPlayer.GetAltName('DAT')] „[Building.GetName]“-[Concept('concept_building_level', '$concept_building_levels_short$')] in „[Building.GetState.GetName]“ für #variable @money!$COST|D$#! pro Stufe abkaufen"
 BUILDING_PRIVITZATION_TOOLTIP: "#header [Concept('concept_privatize','Privatisierung')]#!\nDies erlaubt es Investoren, [GetPlayer.GetAltName('DAT')] „[Building.GetName]“-[Concept('concept_building_level', '$concept_building_levels_short$')] in „[Building.GetState.GetName]“ für #v @money!$COST|D$#! pro $concept_building_level_short$ abkaufen"
 BUILDING_PIN_IN_OUTLINER: "[SelectLocalization(Building.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 TRANSFER_OWNERSHIP_FOR_BUILDING_HEADER: "$TAB$[Building.GetName] #variable $LEVEL$#! [Concept('concept_building_level', '$concept_building_levels_parenthetical_plural_short$')] im Besitz von:"
 TRANSFER_OWNERSHIP_FROM_COUNTRY: "$TAB$$TAB$#variable $LEVEL$#! [Concept('concept_building_level', '$concept_building_levels_parenthetical_plural_short$')]: [COUNTRY.GetAltName('NOM')|U]"
 TRANSFER_OWNERSHIP_FROM_BUILDING: "$TAB$$TAB$#variable $LEVEL$#! [Concept('concept_building_level', '$concept_building_levels_parenthetical_plural_short$')]: [Building.GetName] in „[Building.GetState.GetName]“"
 TRANSFER_OWNERSHIP_FROM_WORKFORCE: "$TAB$$TAB$#variable $LEVEL$#! [Concept('concept_building_level', '$concept_building_levels_parenthetical_plural_short$')]: [concept_workforce]"
 CREATE_COMPANY_COMMAND_DESC: "#header Richtet [concept_company] „[CompanyType.GetNameNoFormatting|v]“ in „[State.GetName]“ ein#!\n\nDieser neuen Kompanie wird Folgendes in Sachen [SelectLocalization(EqualTo_int32('(int32)$LEVEL$', '(int32)1'),'BUILDING_NATIONALIZE_LEVEL_SINGULAR','BUILDING_NATIONALIZE_LEVEL_PLURAL')] übertragen:\n$OWNERS$\n\n@money!$PRODUCTIVITY|v1$ prognostizierte [concept_productivity]"
 PURCHASE_COMPANY_COMMAND_DESC: "#header Richtet [concept_company] „[CompanyType.GetNameNoFormatting|v]“ in „[State.GetName]“ ein#!\n\nDieser neuen Kompanie wird Folgendes übertragen [SelectLocalization(EqualTo_int32('(int32)$LEVEL$', '(int32)1'),'BUILDING_NATIONALIZE_LEVEL_SINGULAR','BUILDING_NATIONALIZE_LEVEL_PLURAL')]:\n$OWNERS$\n\n@money!$PRODUCTIVITY|v1$ prognostizierte [concept_productivity]\n\n@money!$COST|vD+$ Gesamtkosten"
 CANNOT_PURCHASE_COMPANY_NO_FUNDS: "Wir können uns die Einrichtung einer neuen Kompanie nicht leisten: Wir brauchen #variable @money!$COST|D$#! und wir haben nur @money!#v [GetPlayer.GetGoldReserves|D]#! in unseren derzeitigen [concept_gold_reserves]"
 BUILDING_LEVEL_SHORT_SINGULAR_OR_PLURAL: "[SelectLocalization(EqualTo_int32('(int32)$LEVEL$', '(int32)1'),'concept_building_level_short','concept_building_levels_short')]"
 TRANSFER_OWNERSHIP_BUILDING_TYPE_ENTRY: "[BuildingType.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $LEVEL|v$#!#!"
 TRANSFER_OWNERSHIP_TO_COUNTRY: "[State.GetNameWithCountryFlag]: #variable $LEVEL$#! $BUILDING_LEVEL_SHORT_SINGULAR_OR_PLURAL$ @arrow_right! [Country.GetAltName('NOM')|U]"
 TRANSFER_OWNERSHIP_TO_WORKFORCE: "[State.GetNameWithCountryFlag]: #variable $LEVEL$#! $BUILDING_LEVEL_SHORT_SINGULAR_OR_PLURAL$ @arrow_right! [concept_workforce]"
 REMOVE_COMPANY_COMMAND_DESC: "#header [concept_company] „[Company.GetName|v]“ in „[Company.GetState.GetName]“ auflösen#!\n\n$LEVEL|v$ [SelectLocalization(EqualTo_int32('(int32)$LEVEL$', '(int32)1'),'BUILDING_NATIONALIZE_LEVEL_SINGULAR','BUILDING_NATIONALIZE_LEVEL_PLURAL')] werden von der Kompanie übertragen:\n$ASSETS$\n\nGesamtentschädigung für [Concept('concept_nationalize','$concept_nationalization$')]: @money!$COST|K0v$"
 COMPANY_ASSETS_WILL_BE_TRANSFERRED: "$LEVEL|v$ [SelectLocalization(EqualTo_int32('(int32)$LEVEL$', '(int32)1'),'BUILDING_NATIONALIZE_LEVEL_SINGULAR','BUILDING_NATIONALIZE_LEVEL_PLURAL')] aller „[BuildingType.GetName]“ werden von der Kompanie übertragen:\n$ASSETS$\n\nGesamtentschädigung für [Concept('concept_nationalize','$concept_nationalization$')]: @money!$COST|K0v$"
 #BUILDING OWNERSHIP / FOREIGN INVESTMENTS
 DOMESTIC: "Heimisch"
 ABROAD: "Ausländisch"
 LOCATION: "Ort"
 OWNER_TYPE: "Besitzerart"
 BUILDING_TYPE: "Gebäude"
 RECENT_SEARCHES: "Letzte Suchen"
 PRIVATE: "Privat"
 ALL_BUILDINGS: "Alle Gebäude"
 WORKERS: "Arbeiter"
 CONSTRUCTION_EFFICIENCY_SHORT: "Bau.-Eff."
 EMPLOYMENT_SHORT: "Besch."
 CASH_RESERVES_SHORT: "Rückl."
 TRAITS: "Eigens."
 CLEAR_SEARCH: "#header Suche löschen#!"
 POTENTIAL_BUILDINGS: "Mögliche Gebäude"
 CONTROLLER: "Lenkung"
 IN_PLAYER_COUNTRY: "[GetPlayer.GetAltName('IN')|U]"
 EVERYWHERE: "Überall"
 TRADE_POTENTIAL: "Handelspotenzial"
 TRADE_POTENTIAL_EXPLAINER: "[concept_trade_potential]\n$TOOLTIP_DELIMITER$\nDas [Concept('concept_trade', 'Handels')]-Potenzial im [concept_state]"
 TRADE_POTENTIAL_VALUE: "[State.GetTradePotential|vD]"
 TRADE_POTENTIAL_TOOLTIP: "[State.GetTradePotentialDesc]"
 STATE_TRADE_POTENTIAL_DESC: "#header [concept_trade_potential]#!\n$VALUE|vD$ in „$STATE_NAME$“\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 STATE_TRADE_POTENTIAL_ENTRY: "$VALUE|vD$ für $DIRECTION$ von [GOODS.GetTextIcon][Nbsp]„[GOODS.GetName]“"
 BUILDING_DATABASE_ORDER: "Gebäudeart"
 CURRENT_COMPACT_BUILDING_BROWSER_FILTER: "[SelectLocalization(Not(And(And(And(Not(BuildingBrowserPanel.IsFiltered('owned_national')), Not(BuildingBrowserPanel.IsFiltered('owned_private'))), Not(BuildingBrowserPanel.IsFiltered('owned_foreign'))), Not(BuildingBrowserPanel.IsFiltered('owned_company')))), 'COMPACT_BUILDING_BROWSER_OWNER_SELECTED_FILTER', 'SELECTED_FILTER_ALL_BUILDINGS')], [SelectLocalization(BuildingBrowserPanel.IsFiltered('is_domestic'), 'COMPACT_BUILDING_BROWSER_LOCATION_SELECTED_FILTER', 'EVERYWHERE')]"
 COMPACT_BUILDING_BROWSER_OWNER_SELECTED_FILTER: "[AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('owned_national'), 'NATIONALLY_OWNED_BUILDINGS')][AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('owned_private'), 'PRIVATELY_OWNED_BUILDINGS')][AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('owned_foreign'), 'FOREIGN_OWNED_BUILDINGS')][AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('owned_company'), 'COMPANY_OWNED_BUILDINGS')]"
 COMPACT_BUILDING_BROWSER_LOCATION_SELECTED_FILTER: "[AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('is_domestic'), 'IN_PLAYER_COUNTRY')][AddLocalizationIf(BuildingBrowserPanel.IsFilterNo('is_domestic'), 'ABROAD')]"
 SELECTED_FILTER_ALL_BUILDINGS: "[SelectLocalization(Not(And(And(Not(BuildingBrowserPanel.IsFiltered('is_urban')), Not(BuildingBrowserPanel.IsFiltered('is_rural'))), Not(BuildingBrowserPanel.IsFiltered('is_development')))), 'ALL_CATEGORY_BUILDINGS', 'ALL_BUILDINGS')]"
 NATIONALLY_OWNED_BUILDINGS: "$concept_nationally_owned$$BUILDING_CATEGORY$ $concept_buildings$"
 PRIVATELY_OWNED_BUILDINGS: "$concept_privately_owned$$BUILDING_CATEGORY$ $concept_buildings$"
 FOREIGN_OWNED_BUILDINGS: "Ausländischer Besitz$BUILDING_CATEGORY$ $concept_buildings$"
 COMPANY_OWNED_BUILDINGS: "$concept_company$-Besitz$BUILDING_CATEGORY$ $concept_buildings$"
 ALL_CATEGORY_BUILDINGS: "Alle $BUILDING_CATEGORY$ $concept_buildings$"
 BUILDING_CATEGORY: "[ConcatIfNeitherEmpty(' ', AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('is_urban'), 'IS_URBAN'))][ConcatIfNeitherEmpty(' ', AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('is_rural'), 'IS_RURAL'))][ConcatIfNeitherEmpty(' ', AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('is_development'), 'IS_DEVELOPMENT'))]"
 AVAILABILITY: "Verfügbarkeit"
 AVAILABLITY_ALL: "Alle, sowohl bestehende als auch mögliche neue [Concept('concept_building', '$concept_buildings$')]"
 ONLY_AVAILABLE_BUILDING_TYPES: "Nur bestehende [Concept('concept_building', '$concept_buildings$')]"
 ONLY_POTENTIAL_BUILDING_TYPES: "Nur mögliche neue [Concept('concept_building', '$concept_buildings$')]"
 BUILDING_BROWSER: "Bauregister"
 NO_BUILDINGS_MATCHES_THE_CURRENT_FILTER: "Keine Gebäude entsprechen den derzeitigen Filtern"
 BY_BUILDING_TYPE: "Nach Art"
 GROUPING: "Gruppieren"
 INTERACTIONS: "Interaktionen"
 SITUATED_IN_INCORPORATED_STATE: "Lage in inkorporierten Staaten"
 NOT_SITUATED_IN_INCORPORATED_STATE: "Lage in nicht-inkorporierten Staaten"
 FULLY_EMPLOYED: "Vollbeschäftigt"
 HAS_UNEMPLOYMENT: "Hat freie Stellen"
 CASH_RESERVES: "Rücklagen"
 FULL_CASH_RESERVES: "Hat volle Rücklagen"
 NOT_FULL_CASH_RESERVES: "Hat keine vollen Rücklagen"
 IS_SUBSIDIZED: "Wird subventioniert"
 IS_NOT_SUBSIDIZED: "Wird nicht subventioniert"
 SUBSIDIES: "Subventionen"
 IS_DOMESTIC: "Befindet sich [BuildingBrowserPanel.GetCountry.GetAltName('IN')]"
 IS_ABROAD: "Befindet sich im Ausland"
 SUBSISTENCE: "Subsistenz"
 IS_SUBSISTENCE_BUILDING: "Ist Subsistenzgebäude"
 NOT_SUBSISTENCE_BUILDING: "Ist kein Subsistenzgebäude"
 HAS_CONSTRUCTION_QUEUED: "Hat Baureihe"
 NOT_CONSTRUCTION_QUEUED: "Hat nichts in Baureihe"
 CAPPED_BUILDING: "Größendeckel"
 IS_CAPPED_BUILDING: "Ist gedeckeltes Gebäude"
 NOT_CAPPED_BUILDING: "Ist ungedeckeltes Gebäude"
 INPUT_SHORTAGE: "Zufuhr-Knappheit"
 HAS_INPUT_SHORTAGE: "Hat Zufuhr-Knappheiten"
 NOT_INPUT_SHORTAGE: "Hat keine Zufuhr-Knappheiten"
 HIRING_STATUS: "Einstellungsstatus"
 IS_HIRING: "Stellt ein"
 IS_UNWILLING_TO_HIRE: "Ist nicht einstellungsbereit"
 IS_UNABLE_TO_HIRE: "Kann nicht einstellen"
 HAS_FAILED_HIRES: "Konnte nicht einstellen"
 FILTERED_BUILDING_TYPE_SIZE_DESC_HAS_QUEUED: "$NUM_LEVELS$+$NUM_QUEUED$"
 FILTERED_BUILDING_TYPE_SIZE_DESC_NO_QUEUED: "$NUM_LEVELS$"
 BUILDING_GROUP: "Gruppe"
 IS_URBAN: "Städtisch"
 IS_RURAL: "Ländlich"
 IS_DEVELOPMENT: "Entwicklung"
 STATE_NAME_WITH_FOREIGN_FLAG_NO_FORMAT: "[AddLocalizationIf(Not(ObjectsEqual(State.GetOwner.Self, GetPlayer.Self)) , 'STATE_OWNER_FLAG_WITH_SPACE')][State.GetNameNoFormatting]"
 STATE_NAME_WITH_FOREIGN_FLAG: "[AddLocalizationIf(Not(ObjectsEqual(State.GetOwner.Self, GetPlayer.Self)) , 'STATE_OWNER_FLAG_WITH_SPACE')][State.GetName]"
 STATE_OWNER_FLAG_WITH_SPACE: "[State.GetOwner.GetFlagTextIcon] "
 OWNERSHIP: "Besitz"
 BUILDING_BROWSER_CONSTRUCTING: "Baue …"
 BUILDING_FILTER_OWNERSHIP: "Besitzer"
 BUILDING_FILTER_OWNERSHIP_GOVERNMENT_TT: "Hat [Concept('concept_building_level', '$concept_building_levels$')] in [concept_nationally_owned] [GetPlayer.GetAltName('VON')]"
 BUILDING_FILTER_OWNERSHIP_PRIVATE_TT: "Hat [Concept('concept_building_level', '$concept_building_levels$')] in [concept_privately_owned] von [GetPlayer.GetAdjective|l]en [Concept('concept_pop', '$concept_pops$')]"
 BUILDING_FILTER_OWNERSHIP_FOREIGN_TT: "Hat [Concept('concept_building_level', '$concept_building_levels$')] in nicht-[GetPlayer.GetAdjectiveNoFormatting|l]en Besitz"
 BUILDING_FILTER_OWNERSHIP_COMPANY_TT: "Hat [Concept('concept_building_level', '$concept_building_levels$')] im Besitz von [GetPlayer.GetAdjective|l]en [Concept('concept_company', '$concept_companies$')]"
 BUILDING_CONTROLLER: "#header Gebäudelenkung#!\n[COUNTRY.GetAltName('NOM')|U] lenkt die [Concept('concept_production_method', '$concept_production_methods$')] dieses Gebäudes"
 CONSTRUCTION_IN_COUNTRY: "#v [Country.GetNumActiveConstructionQueueElements]#! [Concept('concept_building', '$concept_buildings$')] [concept_under_construction|l]"
 BUILDING_OWNERSHIP_LABEL: "[SelectLocalization(ObjectsEqual(BuildingOwnership.GetOwnedBuilding.Self, BuildingOwnership.GetOwnerBuilding.Self),'BUILDING_OWNERSHIP_LABEL_BLD_WORKFORCE','BUILDING_OWNERSHIP_LABEL_BLD_IN_STATE')]"
 BUILDING_OWNERSHIP_LABEL_BLD_IN_STATE: "„[BuildingOwnership.GetOwnerBuilding.GetName]“ in „[AddTextIf(Not(ObjectsEqual(BuildingOwnership.GetOwnerBuilding.GetState.GetOwner, BuildingOwnership.GetOwnedBuilding.GetState.GetOwner)), BuildingOwnership.GetOwnerBuilding.GetState.GetOwner.GetFlagTextIcon)][BuildingOwnership.GetOwnerBuilding.GetState.GetName]“"
 BUILDING_OWNERSHIP_LABEL_BLD_WORKFORCE: "Örtliche [concept_workforce]"
 OWNERSHIP_SHARE_CHART_TOOLTIP: "[SelectLocalization(BuildingOwnership.IsCountryOwned, 'OWNERSHIP_SHARE_CHART_TOOLTIP_NATIONAL', 'OWNERSHIP_SHARE_CHART_TOOLTIP_PRIVATE')]"
 OWNERSHIP_SHARE_CHART_TOOLTIP_PRIVATE: "#header $BUILDING_OWNERSHIP_LABEL$#!\n[BuildingOwnership.GetLevel|v] [Concept('concept_building_level', '$concept_building_levels_short$')] [Concept('concept_privately_owned', 'in Privatbesitz')] ([BuildingOwnership.GetOwnershipRatio|0%] aller Stufen)$OWNERSHIP_SHARE_CHART_TOOLTIP_FOREIGN$"
 OWNERSHIP_SHARE_CHART_TOOLTIP_NATIONAL: "#header #!\n[BuildingOwnership.GetLevel|v] [Concept('concept_building_level', '$concept_building_levels_short$')] [Concept('concept_nationally_owned', 'in Staatsbesitz')] ([BuildingOwnership.GetOwnershipRatio|0%] aller Stufen)$OWNERSHIP_SHARE_CHART_TOOLTIP_FOREIGN$"
 OWNERSHIP_SHARE_CHART_REMAINDER_TOOLTIP_SHORT: "„[Building.GetName]“ in „[Building.GetState.GetName]“ ist in [Concept('concept_privately_owned', 'Privatbesitz')] von [GetDataModelSize(Building.GetCappedOwnersShortRest)|v] weiteren [Concept('concept_building', '$concept_buildings$(n)')]"
 OWNERSHIP_SHARE_CHART_REMAINDER_TOOLTIP_LONG: "„[Building.GetName]“ in „[Building.GetState.GetName]“ ist in [Concept('concept_privately_owned', 'Privatbesitz')] von [GetDataModelSize(Building.GetCappedOwnersLongRest)|v] weiteren [Concept('concept_building', '$concept_buildings$(n)')]"
 OWNERSHIP_SHARE_CHART_TOOLTIP_FOREIGN: "[AddLocalizationIf(Not(ObjectsEqual(BuildingOwnership.GetOwnerCountry.Self, BuildingOwnership.GetOwnedBuilding.GetState.GetOwner.Self)),'OWNERSHIP_SHARE_CHART_TOOLTIP_FOREIGN_TEXT')]"
 OWNERSHIP_SHARE_CHART_TOOLTIP_FOREIGN_TEXT: "\n@foreign_investment![concept_foreign_investment]"
 OWNERSHIP_SHARE_CHART_TOOLTIP_LOCAL_WORKFORCE_HEADER: "$BUILDING_OWNERSHIP_LABEL_BLD_WORKFORCE$:"
 OWNERSHIP_SHARE_CHART_TOOLTIP_OWNER_BUILDING_WORKFORCE_HEADER: "[concept_workforce] von „[BuildingOwnership.GetOwnerBuilding.GetName]“:"
 OWNERSHIP_SHARE_CHART_TOOLTIP_WORKFORCE_POP_LINE: "[PopListItem.GetWorkingAdultsPopSize|Dv] [PopListItem.GetPopType.GetName]"
 PROPERTY_SHARE_BUILDING_DESC: "„[BuildingOwnership.GetOwnedBuilding.GetName]“ in „[BuildingOwnership.GetOwnedBuilding.GetState.GetName]“"
 PROPERTY_SHARE_CHART_TOOLTIP: "#header $PROPERTY_SHARE_BUILDING_DESC$#!\n#v [BuildingOwnership.GetOwnershipRatio|0%]#! ([BuildingOwnership.GetLevel|v] Stufen) im Besitz von „[BuildingOwnership.GetOwnerBuilding.GetName]“ in „[BuildingOwnership.GetOwnerBuilding.GetState.GetName]“.\nDas sind #v [BuildingOwnership.GetPropertyRatio|0%]#! des gesamten Liegenschaftenportfolios von „[BuildingOwnership.GetOwnerBuilding.GetName|U]“ in „[BuildingOwnership.GetOwnerBuilding.GetState.GetName]“."
 PROPERTY_SHARE_ENTRY_LABEL: "„[BuildingOwnership.GetOwnedBuilding.GetName]“ in „[AddTextIf(Not(ObjectsEqual(BuildingOwnership.GetOwnerBuilding.GetState.GetOwner, BuildingOwnership.GetOwnedBuilding.GetState.GetOwner)), BuildingOwnership.GetOwnedBuilding.GetState.GetOwner.GetFlagTextIcon)][BuildingOwnership.GetOwnedBuilding.GetState.GetName]“"
 PROPERTY_SHARE_REMAINDER_TOOLTIP_SHORT: "„[Building.GetName]“ in „[Building.GetState.GetName]“ besitzt [Concept('concept_building_level', '$concept_building_levels_short$')] in [GetDataModelSize(Building.GetCappedAssetsShortRest)|v] weiteren [Concept('concept_building', '$concept_buildings$(n)')]"
 PROPERTY_SHARE_REMAINDER_TOOLTIP_LONG: "„[Building.GetName]“ in „[Building.GetState.GetName]“ besitzt [Concept('concept_building_level', '$concept_building_levels_short$')] in [GetDataModelSize(Building.GetCappedAssetsLongRest)|v] weiteren [Concept('concept_building', '$concept_buildings$(n)')]"
 BUILDING_OWNERSHIP_DIVIDENDS_TOOLTIP: "#header [concept_dividends]#!\n„[BuildingOwnership.GetOwnedBuilding.GetName]“ in „[BuildingOwnership.GetOwnedBuilding.GetState.GetName]“ zahlen #v @money![BuildingOwnership.GetDividendToOwner|D]#! an „[SelectLocalization(BuildingOwnership.IsCountryOwned, BuildingOwnership.GetOwnerCountry.GetAltName('NOM'), 'BUILDING_OWNERSHIP_LABEL')|U]“ als [concept_dividends]"
 BUILDING_OWNERSHIP_INVALID_ENTRY: "Aktualisiere …"
 #TODO PRCAL-27395 - Describe the actual filter selected
 CURRENT_CONSTRUCTION_FILTER_DESC: "[SelectLocalization(MapListBuildingPanel.HasFilter('all'), 'CURRENT_CONSTRUCTION_FILTER_ALL', 'CURRENT_CONSTRUCTION_FILTER_SPECIFIC')]"
 CURRENT_CONSTRUCTION_FILTER_ALL: "Inländisch & ausländisch"
 CURRENT_CONSTRUCTION_FILTER_SPECIFIC: "[SelectLocalization(MapListBuildingPanel.HasFilter('domestic'), 'CURRENT_CONSTRUCTION_FILTER_DOMESTIC', 'CURRENT_CONSTRUCTION_FILTER_ABROAD')]"
 CURRENT_CONSTRUCTION_FILTER_DOMESTIC: "Inland – Nur [GetPlayer.GetAdjective|l]e [Concept('concept_state','$concept_states$')]"
 CURRENT_CONSTRUCTION_FILTER_ABROAD: "Ausland – Nur ausländische [Concept('concept_state','$concept_states$')]"
 SHOW_VALUES_FOR_FULL_EMPLOYEMENT: "#tooltippable Werte bei Vollbeschäftigung#!"
 LOCATION_FILTER_ALL: "#header Alle#!\nAlle Staaten anzeigen"
 LOCATION_FILTER_DOMESTIC: "#header Heimisch#!\nNur Staaten [GetPlayer.GetAltName('IN')] anzeigen"
 LOCATION_FILTER_ABROAD: "#header Ausländisch#!\nNur Staaten außerhalb [GetPlayer.GetAltName('VON')] anzeigen"
 SORT_TRAITS_TOOLTIP: "#header Staatseigenschaften#!\n$TOOLTIP_DELIMITER$\nDie Anzahl der Staatseigenschaften in diesem Staat"
 SORT_CONTROLLER_TOOLTIP: "#header Lenkung#!\n$TOOLTIP_DELIMITER$\nWelches Land hat die Befugnis, die Produktionsmethoden in diesem Gebäude zu ändern?"
 SORT_CONSTRUCTION_EFFICIENCY_TOOLTIP: "#header Baueffizienz#!\n$TOOLTIP_DELIMITER$\n$state_construction_mult_desc$"
 SORT_EMPLOYMENT_TOOLTIP: "#header Beschäftigung#!\n$TOOLTIP_DELIMITER$\nDie Anzahl der in diesem Gebäude arbeitenden Pops"
 SORT_CASH_RESERVES_TOOLTIP: "#header [concept_cash_reserves]#!\n$TOOLTIP_DELIMITER$\nDie Größe der Rücklagen dieses Gebäudes"
 OWNER_TYPE_FILTER_GOVERNMENT: "#header Regierung#!\n$TOOLTIP_DELIMITER$\nZeigt nur Gebäude an, die in Regierungsbesitz sind"
 OWNER_TYPE_FILTER_PRIVATE: "#header Privat#!\n$TOOLTIP_DELIMITER$\nZeigt nur Gebäude an, die in Privatbesitz sind"
 OWNER_TYPE_FILTER_WORKERS: "#header Arbeiter#!\n$TOOLTIP_DELIMITER$\nZeigt nur Gebäude an, die in Arbeiterbesitz sind"
 FULL: "Vollständig"
 CONDENSED: "Verdichtet"
 LIST_ITEM: "Eintragsliste"
 CONSTRUCTION_CONDENSED_OR_FULL: "[SelectLocalization(GetVariableSystem.Exists('construction_list_toggle_full_or_condensed'), 'FULL', 'CONDENSED')]"
 DATAMODEL_INDEX: "[PdxGuiWidget.GetIndexInDataModel]"
 CONTROLLER_FILTER_PLAYER: "#header Gelenkt [GetPlayer.GetAltName('VON')]#!\n$TOOLTIP_DELIMITER$\nNur Gebäude anzeigen, die [GetPlayer.GetAltName('VON')] gelenkt werden"
 CONTROLLER_FILTER_OTHER: "#header Gelenkt von anderen#!\n$TOOLTIP_DELIMITER$\nNur Gebäude anzeigen, die #b nicht#! [GetPlayer.GetAltName('VON')] gelenkt werden"
 COMMAND_CONFIRMATION_PROMOTE_CHARACTER: "Wollen Sie $PROMOTE_CHARACTER_HEADER$?\n$TOOLTIP_DELIMITER$\n$PROMOTION_EFFECTS_TOOLTIP$\n\nDas kann nicht rückgängig gemacht werden."
 COMMAND_CONFIRMATION_CAPITULATE: "Sicher, dass dieser Krieg ([WAR.GetName]) in einer Kapitulation enden soll? Alle [Concept('concept_war_goal', '$concept_war_goals$')] gegen das eigene Land und die Untertanen werden automatisch durchgesetzt."
 COMMAND_CONFIRMATION_YIELD: "Sicher, dass im [concept_diplomatic_play] gegen [TARGET_COUNTRY.GetAltName('AKK')] nachgegeben werden soll? Die [Concept('concept_primary_demand','$concept_primary_demands$')] gegen uns werden damit durchgesetzt."
 COMMAND_CONFIRMATION_DECLARE_NEUTRALITY: "Sicher, dass in diesem [concept_diplomatic_play] Neutralität bekundet werden soll? Es wird nicht möglich sein, später wieder in das Spiel einzusteigen."
 COMMAND_CONFIRMATION_START_DIPLOMATIC_PLAY: "Sicher, dass das [concept_diplomatic_play] „[DiplomaticPlayType.GetName]“ begonnen werden soll? Dies kann zum Krieg führen."
 COMMAND_CONFIRMATION_START_DIPLOMATIC_PLAY_COUNTRY_WITH_DEFINITION: "[DiplomaticPlayType.GetStartDescCountryWithDefinition(GetPlayer,Country.Self,CountryDefinition.Self)]"
 COMMAND_CONFIRMATION_START_DIPLOMATIC_PLAY_COUNTRY: "[DiplomaticPlayType.GetStartDescCountry(GetPlayer,Country.Self)]"
 COMMAND_CONFIRMATION_START_DIPLOMATIC_PLAY_STATE: "[DiplomaticPlayType.GetStartDescState(GetPlayer,State.Self)]"
 COMMAND_CONFIRMATION_DISBAND_FORMATION: "Wollen wir [MILITARY_FORMATION.GetName] #r auflösen#!?"
 DISBAND_COMMAND_HEADER: "#r Die Auflösung von#! [MILITARY_FORMATION.GetName] hat die folgenden Auswirkungen:"
 DISBAND_COMMAND_FORMATION_ENTRY_BEGINNING: "Wird zu [TARGET_MILITARY_FORMATION.GetName] übertragen"
 DISBAND_COMMAND_FORMATION_ENTRY_COMMANDER: "* [CHARACTER.GetFullNameWithTitle]"
 DISBAND_COMMAND_FORMATION_ENTRY_UNIT: "* [COMBAT_UNIT_TYPE.GetIconString] $NUM_UNITS|v$ [COMBAT_UNIT_TYPE.GetName]"
 DISBAND_COMMAND_ENTRY_BEGINNING: "Verlegungen"
 DISBAND_COMMAND_UNIT_ENTRY: "[COMBAT_UNIT_TYPE.GetIconString] $NUM_UNITS|v$ [COMBAT_UNIT_TYPE.GetName]"
 DISBAND_COMMAND_UNIT_ENTRY_END: " durch [MILITARY_FORMATION.GetName]"
 DISBAND_COMMAND_DISBANDED_UNITS_END: " wird aufgelöst"
 DISBAND_COMMAND_COMMANDER_ENTRY: "[CHARACTER.GetFullName] verlegt zu [MILITARY_FORMATION.GetName]"
 DISBAND_COMMAND_TOO_MANY_COMMANDERS: "Wir können diese [SelectLocalization(MilitaryFormation.IsArmy,'concept_army','concept_fleet')] nicht auflösen, da wir zu viele [SelectLocalization(MilitaryFormation.IsArmy,'concept_generals','concept_admirals')] und nicht genügend Platz in anderen [SelectLocalization(MilitaryFormation.IsArmy,'concept_armies','concept_fleets')] haben.\n\n#indent_newline:3 Wir sollten erwägen, diese [SelectLocalization(MilitaryFormation.IsArmy,'concept_generals','concept_admirals')] zuerst in Ruhestand zu schicken:\n$BREAKDOWN$#!"
 DISBAND_COMMAND_DISBAND_COMMANDER_ENTRY: "[Character.GetFullName] ([Character.GetRankName])"
 DISBAND_COMMAND_MENTION_THAT_TRACKING_FORMATIONS_WILL_GO_SOMEWHERE_ELSE: "Formationen, die unterwegs sind, um zu [MILITARY_FORMATION.GetName] zusammengeführt zu werden, versuchen stattdessen, eine andere Formation zu finden, mit der sie zusammengeführt werden können, und werden, falls keine gefunden wird, stattdessen im nächstgelegenen verfügbaren Hauptquartier stationiert."
 DISBAND_COMMAND_CONFIRM: "Wollen Sie fortfahren?"
 COMMAND_CONFIRMATION_MOBILIZE_ARMY: "Wollen wir „[MILITARY_FORMATION.GetName]“ [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilize$')|l]?"
 COMMAND_CONFIRMATION_MOBILIZE_ARMIES: "Wollen wir all unsere [Concept('concept_army', '$concept_armies$')] [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilize$')|l]?"
 COMMAND_CONFIRMATION_DEMOBILIZE_ARMY: "Wollen wir [MILITARY_FORMATION.GetName] [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')|l]?\n\n$EARLY_DEMOBILIZATION_WARNING$"
 COMMAND_CONFIRMATION_DEMOBILIZE_ARMIES: "Wollen wir all unsere [Concept('concept_army', '$concept_armies$')] [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')|l]?\n\n$EARLY_DEMOBILIZATION_WARNING$"
 COMMAND_CONFIRMATION_DEMOBILIZE_SELECTED_ARMIES: "Wollen wir alle ausgewählten [Concept('concept_army', '$concept_armies$')] [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')|l]?\n\n$EARLY_DEMOBILIZATION_WARNING$"
 EARLY_DEMOBILIZATION_WARNING: "@warning! Vorzeitige $concept_mobilize_army_demobilization$ führt dazu, dass [Concept('concept_army','$concept_armies$')] zurück in ihr Heimat-[Concept('concept_hq','$concept_hqs$')] reisen, wo sie für [GetDefine('NMilitary','DEMOBILIZATION_TIME_DAYS')|v0] Tage nicht zur Verfügung stehen werden. Der [concept_good_consumption] von $concept_mobilize_army_mobilization$s-[Concept('concept_good','$concept_goods$')] wird während dieser Zeit allmählich abnehmen."
 COMMAND_CONFIRMATION_REMOVE_INCORPORATE_STATE: "Sicher, dass das Inkorporieren von [STATE.GetName] beendet werden soll?"
 COMMAND_CONFIRMATION_REMOVE_INCORPORATE_STATE_UNSPECIFIED: "Sicher, dass das Inkorporieren dieses Staats beendet werden soll?"
 COMMAND_CONFIRMATION_DOWNSIZE_LAST_EXIT_PORT: "Das würde „[GetBuildingType('building_port').GetName]“ zerstören. Sind Sie sicher, dass Sie fortfahren wollen?\n\n@information!Der Abriss von „[GetBuildingType('building_port').GetNameNoFormatting]“ könnte [Concept('concept_state', '$concept_states$')] von ihrem [concept_market] abschneiden, sofern sie nicht über einen anderen „[GetBuildingType('building_port').GetNameNoFormatting]“ Zugang zum [concept_market_capital] haben."
 AGE: "Alter"
 CHARACTER_AGE: "#v [Character.GetAge]#!"
 CHARACTER_AGE_TOOLTIP: "#header [Character.GetFullName]#! ist #v [Character.GetAge]#! Jahre alt\n$TOOLTIP_DELIMITER$\n[Character.GetFirstName] wurde am #v [Character.GetBirthday]#! geboren"
 CHARACTER_INTERACTIONS_BUTTON_TOOLTIP: "[SelectLocalization(Not(IsDataModelEmpty(Character.GetInteractions)), 'CHARACTER_INTERACT_WITH', 'CHARACTER_CAN_NOT_INTERACT_WITH')]"
 CHARACTER_INTERACT_WITH: "Mit [Character.GetFullName] interagieren"
 CHARACTER_CAN_NOT_INTERACT_WITH: "Keine verfügbare Interaktion mit [Character.GetFullName]"
 CHARACTER_INTERACTIONS_HEADER: "Aktionen"
 CHARACTER_HISTORICAL_HEADER: "Historische Figur"
 CHARACTER_HISTORICAL_OPEN_URL: "Mehr erfahren"
 CHARACTER_HISTORICAL_OPEN_URL_TOOLTIP: "Dadurch wird der folgende Link im Webbrowser geöffnet\n\n[Character.GetHistoricalUrl|v]"
 DIPLOMATIC_PLAY_NOT_FORCED_WARNING: "Wenn sie sich weigern, wird dies ein [concept_diplomatic_play] auslösen, das zu einem [concept_war] eskalieren kann"
 DIPLOMATIC_PLAY_FORCED_WARNING: "Dies wird unmittelbar ein [concept_diplomatic_play] auslösen, das zu einem [concept_war] eskalieren kann"
 DIPLOMATIC_DEMAND: "[concept_diplomatic_demand]"
 DIPLOMATIC_DEMAND_AI_ACCEPTANCE_BREAKDOWN: "#header $CHANCE|%0$-ige Wahrscheinlichkeit, dass [COUNTRY.GetAltName('NOM')] ‚$DEMAND_NAME|v$‘ annimmt#!\n$TOOLTIP_DELIMITER$\nIhr Annahmewert von $SCORE|=+$ beruht auf den folgenden Faktoren: \n$DETAILS$"
 DIPLOMATIC_DEMAND_AI_WILL_ACCEPT: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #p Sie werden annehmen#!#!#!"
 DIPLOMATIC_DEMAND_AI_WILL_NOT_ACCEPT: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #n Sie werden NICHT annehmen#!#!#!"
 DIPLOMATIC_DEMAND_AI_MIGHT_ACCEPT: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #v Sie könnten annehmen (Wahrscheinlichkeit von $CHANCE|%0$)#!#!#!"
 DIPLOMATIC_DEMAND_ACCEPTANCE_BASE_VALUE: "$VALUE|=+$ durch Grundwert"
 DIPLOMATIC_DEMAND_ACCEPTANCE_WARGOAL_IMPACT: "$VALUE|=+$ durch Auswirkungen des geforderten [Concept('concept_war_goal', 'Kriegsziels')]"
 DIPLOMATIC_DEMAND_ACCEPTANCE_WILL_BE_ANNEXED: "$VALUE|=+$ durch Bereitschaft zur Annektierung"
 DIPLOMATIC_DEMAND_ACCEPTANCE_WILL_BE_ANNEXED_LIBERTY_DESIRE: "$VALUE|=+$ durch Bereitschaft zur Annektierung durch [concept_overlord] bei $LIBERTY_DESIRE|0v$ [concept_liberty_desire]"
 DIPLOMATIC_DEMAND_ACCEPTANCE_WILL_BE_SUBJUGATED: "$VALUE|=+$ durch Bereitschaft, ein [concept_subject] der Art „#v $SUBJECT_TYPE$#!“ zu werden"
 DIPLOMATIC_DEMAND_ACCEPTANCE_WILL_LOSE_INCORPORATED_STATE: "$VALUE|=+$ durch Bereitschaft, einen [Concept('concept_incorporated_state', 'Inkorporierten Staat')] abzutreten"
 DIPLOMATIC_DEMAND_ACCEPTANCE_MILITARY_POWER_FACTOR: "$VALUE|=+$ durch erwarteten Unterschied in der Militärstärke"
 DIPLOMATIC_DEMAND_ACCEPTANCE_LOYAL_SUBJECT: "$VALUE|=+$ durch loyales [concept_subject]"
 DIPLOMATIC_DEMAND_ACCEPTANCE_UPPER_BOUND: "Begrenzt auf ein #b Maximum#! von $VALUE|v0$ („$PLAY_NAME$“-[concept_diplomatic_play])"
 RELEASE_COUNTRY_HEADER: "[CountryCreation.GetName] entlassen"
 RELEASE_COUNTRY_SUBJECT_DESC: "Sicher, dass [COUNTRY_CREATION.GetAltName('NOM')] als [concept_subject] [COUNTRY.GetAltName('GEN')] entlassen werden soll?\n\n$COUNTRY_REWARDS$"
 RELEASE_COUNTRY_INDEPENDENT_DESC: "Sicher, dass [COUNTRY_CREATION.GetName] als unabhängiges [concept_country] entlassen werden soll?\n\n$COUNTRY_REWARDS$"
 RELEASE_COUNTRY_WILL_RECEIVE_STATES: "Sie erhalten folgende Staaten:\n[COUNTRY_CREATION.ListReleasableStates(GetPlayer)]"
 RELEASE_COUNTRY_WILL_RECEIVE_PROVINCES: "Sie erhalten [COUNTRY_CREATION.GetNumProvincesToRelease|v] Provinz(en) in der [concept_state_region] „[COUNTRY_CREATION.GetCapital.GetName]“"
 RELEASE_COUNTRY_AS_INDEPENDENT: "In die Unabhängigkeit entlassen"
 RELEASE_COUNTRY_AS_OWN_SUBJECT: "Als eigenes [concept_subject] entlassen"
 RELEASE_COUNTRY_PLAY_AS: "Selbst als [CountryCreation.GetName] spielen"
 FORCE_DIPLOMATIC_PLAY: "[concept_diplomatic_pact] erzwingen"
 FORCE_DIPLOMATIC_PLAY_TOOLTIP: "#header $FORCE_DIPLOMATIC_PLAY$#!\n$TOOLTIP_DELIMITER$\nWenn Sie dies aktivieren, wird die [concept_diplomatic_demand] übersprungen und es startet sofort ein [concept_diplomatic_play], sodass zusätzliche Forderungen an den Feind gestellt werden können."
 COMMANDER_RECRUIT_BUTTON_TOOLTIP_EFFECTS: "#header [Character.GetFullName] rekrutieren\n#![ConcatIfNeitherEmpty(GetDesc(Character.GetRecruitCommand(PopupManager.GetRecruitFormation)),'\n')]$TOOLTIP_DELIMITER$[ConcatIfNeitherEmpty('\n', Character.GetCommanderRank.GetModifiers(Character.Self))]"
 COMMANDER_RECRUIT_BUTTON_TOOLTIP: "$COMMANDER_RECRUIT_BUTTON_TOOLTIP_EFFECTS$"
 YES_CHECK: "@green_checkmark_box!"
 NO_CHECK: "@simple_box!"
 CONFIRM_YES: "Ja"
 CONFIRM_NO: "Nein"
 UNLOCK_TOPBAR: "Zum #bold Entsperren#! klicken"
 LOCK_TOPBAR: "Zum #bold Sperren#! klicken"
 OUTLINER_PINNED: "Pinn"
 OUTLINER_ECONOMY: "Wirt"
 OUTLINER_POLITICS: "Poli"
 OUTLINER_DIPLOMACY: "Dipl"
 OUTLINER_MILITARY: "Mili"
 OUTLINER_ALL: "Alle"
 OUTLINER_TOGGLE_PINNED_TOOLTIP: "#header Angeheftetes an Pinnwand anzeigen#!"
 OUTLINER_TOGGLE_ECONOMY_TOOLTIP: "#header Wirtschaft an Pinnwand anzeigen#!"
 OUTLINER_TOGGLE_POLITICS_TOOLTIP: "#header Politik an Pinnwand anzeigen#!"
 OUTLINER_TOGGLE_DIPLOMACY_TOOLTIP: "#header Diplomatie an Pinnwand anzeigen#!"
 OUTLINER_TOGGLE_MILITARY_TOOLTIP: "#header Militär an Pinnwand anzeigen#!"
 OUTLINER_TOGGLE_ALL_TOOLTIP: "#header Alles an Pinnwand anzeigen#!"
 BASE_SCRIPT_VALUE_FORMAT: "$KEY$: $VALUE|+=0$"
 DECIMAL_SCRIPT_VALUE_FORMAT: "$KEY$: $VALUE|+=$"
 NEUTRAL_SCRIPT_VALUE_FORMAT: "$KEY$: $VALUE|=0v$"
 NEUTRAL_DECIMAL_SCRIPT_VALUE_FORMAT: "$VALUE|=D+$ $KEY$"
 SCRIPT_VALUE_KEY_AFTER_FORMAT: "$VALUE|+=0$: $KEY$"
 incorporated_state: "[concept_incorporated_state]"
 unincorporated_state: "[concept_unincorporated_state]"
 treaty_port_state: "[concept_treaty_port]"
 colonial_state: "[concept_colony]"
 recently_conquered_state: "Kürzlich erobert"
 recently_liberated_state: "Kürzlich befreit"
 state_type_colony: "[concept_colony]"
 state_type_unincorporated: "[concept_unincorporated_state]"
 state_type_incorporated: "[concept_incorporated_state]"
 state_type_treaty_port: "[concept_treaty_port]"
 STATE_GOODS_POTENTIAL_SUMMARY: "Kann bis zu $POTENTIAL|v$ Gebäude der Art „[BUILDING_TYPE.GetName]“ versorgen (Derzeit vorhanden: $CUR|v$): Durch unsere derzeitigen Techniken und unsere Gesetze hat jedes Gebäude dieser Art einen maximalen Grunddurchsatz von $AMOUNT|0v$ [GOODS.GetTextIcon][GOODS.GetName]."
 STATE_GOODS_POTENTIALS_TOOLTIP: "#header [GOODS.GetTextIcon] [GOODS.GetName] in „[STATE.GetName]“#!\nPotenzielle Grundproduktion: [STATE.GetPotentialProductionForCountry(GOODS.Self, GetPlayer)|Dv]\n$TOOLTIP_DELIMITER$\nProduktion: [STATE.GetNumProduced(GOODS.Self)|1v]\nVerbrauch: [STATE.GetNumConsumed(GOODS.Self)|1v]\n\n[STATE.GetPotentialProductionForCountryDesc(GOODS.Self, GetPlayer)]"
 STATE_GOODS_PRODUCTION_TOOLTIP: "#header [GOODS.GetTextIcon] [GOODS.GetName] in „[STATE.GetName]“#!\nProduktion: [STATE.GetNumProduced(GOODS.Self)|0v]\n$TOOLTIP_DELIMITER$\nVerbrauch: [STATE.GetNumConsumed(GOODS.Self)|1v]\nPotenzielle Grundproduktion: [STATE.GetPotentialProductionForCountry(GOODS.Self, GetPlayer)|0v]\n\n[STATE.GetPotentialProductionForCountryDesc(GOODS.Self, GetPlayer)]"
 STATE_GOODS_CONSUMPTION_TOOLTIP: "#header [GOODS.GetTextIcon] [GOODS.GetName] in „[STATE.GetName]“#!\nVerbrauch: [STATE.GetNumConsumed(GOODS.Self)|0v]\n$TOOLTIP_DELIMITER$\nProduktion: [STATE.GetNumProduced(GOODS.Self)|1v]\nPotenzielle Grundproduktion: [STATE.GetPotentialProductionForCountry(GOODS.Self, GetPlayer)|0v]\n\n[STATE.GetPotentialProductionForCountryDesc(GOODS.Self, GetPlayer)]"
 STATE_GOODS_LOCAL_PRICES_TOOLTIP: "[GOODS.GetStatePriceDesc]"
 DIPLOMACY_HOVER_ATTITUDE_COUNTRY: "#header Es wird die [concept_attitude] aus der Perspektive [Country.GetAltName('GEN')] gezeigt#!"
 DIPLOMACY_HOVER_RELATIONS_COUNTRY: "#header Es werden die [concept_relations] aus der Perspektive [Country.GetAltName('GEN')] gezeigt#!"
 TREATY_CAN_WITHDRAW_ALL_ARTICLES: "Dies entfernt den ganzen [concept_treaty]"
 TREATY_CAN_WITHDRAW_SOME_ARTICLES: "Dies wird nur die folgenden [Concept('concept_article','$concept_articles$')] entfernen:#indent_newline:3 \n$CAN_WITHDRAW_LIST$#!\n\n[COUNTRY.GetAltName('NOM')|U] kann nicht entfernen:#indent_newline:3 \n$CANNOT_WITHDRAW_LIST$#!\n\nAufgrund von:#indent_newline:3 \n$DETAILS$#!"
 TREATY_CANNOT_WITHDRAW_ANY_ARTICLES: "[COUNTRY.GetAltName('NOM')|U] kann den folgenden [Concept('concept_article','$concept_articles$')] #b nicht#! entfernen#indent_newline:3 \n$LIST$#!\n\nAufgrund von:#indent_newline:3 \n$DETAILS$#!"
 TREATY_WITHDRAW_TOOLTIP: "#header Aus „[Treaty.GetName]“ zurückziehen#!\n$TOOLTIP_DELIMITER$\n[Treaty.GetCanWithdrawDesc(GetPlayer.Self)]$WITHDRAW_FROM_TREATY_ALL_EFFECTS$"
 WITHDRAW_FROM_TREATY: "Zurückziehen"
 WITHDRAW_FROM_TREATY_COMMAND_DESC: "Sind wir sicher, dass wir uns aus „[Treaty.GetName]“ zurückziehen wollen?$WITHDRAW_FROM_TREATY_ALL_EFFECTS$"
 WITHDRAW_FROM_TREATY_ALL_EFFECTS: "$BREAK_TREATY_EFFECTS_IF_EXIST$$WITHDRAW_FROM_TREATY_EFFECTS_IF_EXIST$"
 WITHDRAW_FROM_TREATY_EFFECTS_IF_EXIST: "[ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(Not(StringIsEmpty(Treaty.GetWithdrawPenaltiesDesc(Treaty.GetFirstCountry.Self))), 'WITHDRAW_FROM_TREATY_EFFECTS'))]"
 WITHDRAW_FROM_TREATY_EFFECTS: "#title Allgemeine Auswirkungen:#! #indent_newline:3 \n[Treaty.GetWithdrawPenaltiesDesc(Treaty.GetFirstCountry.Self)]#!"
 BREAK_TREATY_EFFECTS_IF_EXIST: "[ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(Not(StringIsEmpty(Treaty.GetBreakPenaltiesDesc(Treaty.GetFirstCountry.Self))), 'BREAK_TREATY_EFFECTS'))]"
 BREAK_TREATY_EFFECTS: "#title Abzüge durch verbleibende [concept_binding_period] (#v [Treaty.GetBindingPeriodRemainingFormatted]#!):#! #indent_newline:3 \n[Treaty.GetBreakPenaltiesDesc(Treaty.GetFirstCountry.Self)]#!"
 TREATY_RENEGOTIATE_TOOLTIP: "Diesen [concept_treaty] neu aushandeln[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Treaty.IsEnforced, 'CANNOT_NEGOTIATE_TREATY_IS_ENFORCED'))]"
 RENEGOTIATE_TREATY: "$concept_treaty$ neu aushandeln"
 CANNOT_NEGOTIATE_TREATY_IS_ENFORCED: "@red_cross! Dieser [concept_treaty] ist [Concept('concept_enforced_treaty', '$concept_enforced_treaty_short$')|l]"
 NEGOTIATE: "Verhandeln"
 TREATY_PROPOSAL_NEGOTIATE_TOOLTIP: "Diesen [concept_treaty] aushandeln[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Treaty.IsEnforced, 'CANNOT_NEGOTIATE_TREATY_IS_ENFORCED'))]"
 TREATY_DRAFT_PANEL_LEFT_SECTION_HEADER: "Eure [Concept('concept_article', '$concept_articles$')]"
 TREATY_DRAFT_PANEL_RIGHT_SECTION_HEADER: "[TreatyDraft.GetRightCountry.GetAdjective|U]e [Concept('concept_article', '$concept_articles$')]"
 TREATY_MUTUAL_AGREEMENTS: "Gegenseitige Vereinbarungen"
 TREATY_UNAVAILABLE_MUTUAL_AGREEMENTS: "Nicht verfügbare gegenseitige Vereinbarungen"
 TREATY_OFFER: "Angebot"
 TREATY_UNAVAILABLE_OFFERS: "Nicht verfügbare $concept_articles$"
 TREATY_DIRECTIONAL: "Gerichtet"
 TREATY_DEMAND: "Forderung"
 TREATY_UNAVAILABLE_DEMANDS: "Nicht verfügbare $concept_articles$"
 UNAVAILABLE: "Nicht verfügbar"
 TREATY_ARTICLE_TYPE_TITLE: "„[ArticleDraft.GetArticleType.GetNameNoIcon]“-[concept_article] hinzufügen"
 TREATY_SEND_PROPOSAL: "Vorschlag schicken"
 ARTICLE_NUMBER: "[Article.GetArticleNumber]"
 ARTICLE_DRAFT_NUMBER: "[ArticleDraft.GetArticleNumber]"
 NO_LEFT_SIDE_ARTICLES: "Keine"
 NO_RIGHT_SIDE_ARTICLES: "Keine"
 NO_LEFT_SIDE_ARTICLES_DRAFT: "Keine"
 NO_RIGHT_SIDE_ARTICLES_DRAFT: "Keine"
 TREATY_DRAFT_COUNTRY_IS_SUBJECT_OF_OTHER_COUNTRY: "[COUNTRY.GetAltName('NOM')|U] ist „[Country.GetSubjectType.GetName]“ [TreatyDraft.GetOtherCountry(Country.Self).GetAltName('VON')] und es gibt daher keinen eigenen [concept_ruler]"
 ARTICLE_INPUT_RIGHT_CLICK_MENU_TITLE: "[ArticleDraft.GetArticleType.GetNameNoFormatting]"
 TREATY_SELECT_AMOUNT: "Menge auswählen …"
 TREATY_SELECT_NAME: "Einen angepassten Vertragsnamen schaffen …"
 TREATY_BINDING_PERIOD: "Gebunden für #bold_black [Treaty.GetBindingPeriodFormatted]#!"
 TREATY_BINDING_PERIOD_REMAINING: "[Concept('concept_binding_period', 'Gebunden')] für #bold_black [Treaty.GetBindingPeriodRemainingFormatted]#!"
 TREATY_BINDING_PERIOD_REMAINING_NO_CONCEPT: "Gebunden für #bold_black [Treaty.GetBindingPeriodRemainingFormatted]#!"
 TREATY_BINDING_PERIOD_HAS_ENDED: "$concept_treaty$ ist nicht mehr [Concept('concept_binding_period', 'bindend')]"
 TREATY_BINDING_PERIOD_HAS_ENDED_SHORT: "Nicht mehr [Concept('concept_binding_period', 'bindend')]"
 TREATY_BINDING_PERIOD_HAS_ENDED_SHORT_NO_CONCEPT: "Nicht mehr bindend"
 TREATY_NO_BINDING_PERIOD: "Keine [concept_binding_period]"
 TREATY_NO_BINDING_PERIOD_NO_CONCEPT: "Keine $concept_binding_period$"
 TREATY_DRAFT_BINDING_PERIOD: "Gebunden für [TreatyDraft.GetBindingPeriodFormatted]"
 TREATY_DRAFT_NO_BINDING_PERIOD: "Fügt eine $concept_binding_period$ hinzu"
 TREATY_IS_ENFORCED_ON: "Ist für [Treaty.GetEnforcedOnCountry.GetAltName('AKK')] [Concept('concept_enforced_treaty', 'aufgezwungen')|l]"
 TREATIES_WITH_COUNTRY_TOOLTIP: "#header [Concept('concept_treaty', '$concept_treaties$')] mit [Country.GetAltName('DAT')]#!\n#v [GetDataModelSize(CountryPanel.GetCountry.GetEnforcedTreatiesWith(Country.Self))]#! [Concept('concept_enforced_treaty', '$concept_enforced_treaty_short$e')|l] [SelectLocalization(EqualTo_int32(GetDataModelSize(CountryPanel.GetCountry.GetEnforcedTreatiesWith(Country.Self)), '(int32)1'), 'concept_treaty', 'concept_treaties')]\n#v [GetDataModelSize(CountryPanel.GetCountry.GetUnenforcedTreatiesWith(Country.Self))]#! normale [SelectLocalization(EqualTo_int32(GetDataModelSize(CountryPanel.GetCountry.GetUnenforcedTreatiesWith(Country.Self)), '(int32)1'), 'concept_treaty', 'concept_treaties')]"
 TREATY_TYPE: "[SelectLocalization(Treaty.IsEnforced, 'ENFORCED_TREATY_CONCEPT', 'TREATY_CONCEPT')]"
 ENFORCED_TREATY_CONCEPT: "[concept_enforced_treaty]"
 TREATY_CONCEPT: "[concept_treaty]"
 TREATY_DRAFT_COMMIT_TO_LAW_TOOLTIP: "#header „[Law.GetName]“ als Verpflichtung für [Law.GetCountry.GetAltName('AKK')] auswählen#!\n$TOOLTIP_DELIMITER$\nDies würde [Law.GetCountry.GetAltName('AKK')|U] zwingen, beim [concept_law] „[Law.GetGroup.GetName]“ von „[Law.GetActiveGroupLaw.GetName]“ zu „[Law.GetName]“ zu wechseln"
 TREATY_SELECTED_ARTICLE_AMOUNT: "[SelectLocalization(GreaterThan_CFixedPoint(Article.GetQuantity, '(CFixedPoint)99'), 'TREATY_SELECTED_ARTICLE_AMOUNT_D_FORMATTED', 'TREATY_SELECTED_ARTICLE_AMOUNT_NO_D_FORMATTING')]"
 TREATY_SELECTED_ARTICLE_AMOUNT_WITHOUT_LABEL: "[SelectLocalization(GreaterThan_CFixedPoint(Article.GetQuantity, '(CFixedPoint)99'), 'TREATY_SELECTED_ARTICLE_AMOUNT_D_FORMATTED_NO_LABEL', 'TREATY_SELECTED_ARTICLE_AMOUNT_NO_D_FORMATTING_NO_LABEL')]"
 TREATY_SELECTED_MONEY_ARTICLE_AMOUNT: "[SelectLocalization(GreaterThan_CFixedPoint(Article.GetQuantity, '(CFixedPoint)99'), 'TREATY_SELECTED_MONEY_ARTICLE_AMOUNT_D_FORMATTED', 'TREATY_SELECTED_MONEY_ARTICLE_AMOUNT_NO_D_FORMATTING')]"
 TREATY_SELECTED_ARTICLE_AMOUNT_D_FORMATTED: "#v [Article.GetQuantity|D]#!/Woche"
 TREATY_SELECTED_ARTICLE_AMOUNT_NO_D_FORMATTING: "#v [Article.GetQuantity]#!/Woche"
 TREATY_SELECTED_ARTICLE_AMOUNT_D_FORMATTED_NO_LABEL: "#v [Article.GetQuantity|D]#!"
 TREATY_SELECTED_ARTICLE_AMOUNT_NO_D_FORMATTING_NO_LABEL: "#v [Article.GetQuantity]#!"
 TREATY_SELECTED_MONEY_ARTICLE_AMOUNT_D_FORMATTED: "@money!#v [Article.GetQuantity|D]#!/Woche"
 TREATY_SELECTED_MONEY_ARTICLE_AMOUNT_NO_D_FORMATTING: "@money!#v [Article.GetQuantity]#!/Woche"
 TREATY_DRAFT_SELECTED_ARTICLE_AMOUNT: "[SelectLocalization(GreaterThan_CFixedPoint(ArticleDraft.GetQuantity, '(CFixedPoint)99'), 'TREATY_DRAFT_SELECTED_ARTICLE_AMOUNT_D_FORMATTED', 'TREATY_DRAFT_SELECTED_ARTICLE_AMOUNT_NO_D_FORMATTING')]"
 TREATY_DRAFT_SELECTED_MONEY_ARTICLE_AMOUNT: "[SelectLocalization(GreaterThan_CFixedPoint(ArticleDraft.GetQuantity, '(CFixedPoint)99'), 'TREATY_DRAFT_SELECTED_MONEY_ARTICLE_AMOUNT_D_FORMATTED', 'TREATY_DRAFT_SELECTED_MONEY_ARTICLE_AMOUNT_NO_D_FORMATTING')]"
 TREATY_DRAFT_SELECTED_ARTICLE_AMOUNT_D_FORMATTED: "#v [ArticleDraft.GetQuantity|D]#!/Woche"
 TREATY_DRAFT_SELECTED_ARTICLE_AMOUNT_NO_D_FORMATTING: "#v [ArticleDraft.GetQuantity]#!/Woche"
 TREATY_DRAFT_SELECTED_MONEY_ARTICLE_AMOUNT_D_FORMATTED: "@money!#v [ArticleDraft.GetQuantity|D]#!/Woche"
 TREATY_DRAFT_SELECTED_MONEY_ARTICLE_AMOUNT_NO_D_FORMATTING: "@money!#v [ArticleDraft.GetQuantity]#!/Woche"
 TREATY_TOTAL_INFLUENCE_COST: "Die Gesamt-[concept_influence]-Unterhaltskosten [Country.GetAltName('VON')], um diesen [concept_treaty] zu unterhalten"
 ARTICLE_ADD_WARGOAL_BUTTON_TOOLTIP: "#header Diesen „[ArticleType.GetName]“-[concept_article] durchsetzen#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(TreatyDraft.CanIncludeArticleDraft(ArticleDraft.Self)), 'ARTICLE_WAR_GOAL_ERRORS'))]\n$TOOLTIP_DELIMITER$\n#title $ARTICLE_TYPE_EFFECTS_TITLE$#!#indent_newline:3 \n[WarGoal.GetDesc]#!"
 ARTICLE_WAR_GOAL_ERRORS: "[ArticleDraft.GetRequiredInputsDesc]"
 ADD: "Hinzufügen"
 ARTICLE_ADD_BUTTON_TOOLTIP: "#header Diesen „[ArticleType.GetName|U]“-[concept_article] dem [concept_treaty] hinzufügen#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(TreatyDraft.CanIncludeArticleDraft(ArticleDraft.Self)), 'ARTICLE_DRAFT_ERRORS'))]"
 OFFER: "anbieten"
 DEMAND: "fordern"
 SLASH_PER_WEEK: "/ Woche"
 ARTICLE_INPUT_SELECT_COMPANY_HEADER: "[concept_company] auswählen"
 ARTICLE_INPUT_SELECT_BUILDING_TYPE_HEADER: "[Concept('concept_building', 'Gebäudeart')] auswählen"
 NO_BUILDING_TYPES_TO_MONOPOLIZE: "Keine [concept_building]-Arten für [Concept('concept_company_monopoly', 'Kompaniemonopol')]"
 NO_LEVELS: "Keine Stufen"
 SELECT_A_COMPANY_FIRST: "Erst eine [concept_company] auswählen"
 SELECT_A_STATE: "Einen [concept_state] auswählen"
 SELECT_A_STRATEGIC_REGION: "Eine [concept_strategic_region] auswählen"
 SELECT_A_GOOD: "Eine [concept_good] auswählen"
 SELECT_A_MARKET: "Einen [concept_market] auswählen"
 SELECT_A_LAW: "Ein [concept_law] auswählen"
 SELECT_A_COUNTRY: "Ein [concept_country] auswählen"
 SELECT_AN_AMOUNT: "Eine Menge auswählen"
 SELECT_A_BUILDING_TYPE: "Eine [concept_building]-Art auswählen"
 WILL_COMPANY_MONOPOLIZE: "wird [Concept('concept_company_monopoly', '$concept_company_monopolize_short$')|l]"
 TREATY_TRANSFER: "Übereignen"
 TREATY_NO_TRADE: "Kein Handel mit"
 ARTICLE_DRAFT_QUANTITY_ABOVE_ZERO: "[AddLocalisationIf(GreaterThan_CFixedPoint(ArticleDraft.GetQuantity, '(CFixedPoint)0'), ArticleDraft.GetQuantity)]"
 GOODS_NAME_ARTICLE_SELECTED: "[Goods.GetNameNoFormatting] (#i ausgewählt#!)"
 ARTICLE_SELECTED: "#i Ausgewählt#!"
 ARTICLE_COUNTRY_WILL_NOT_COLONIZE: "[Country.GetAltName('NOM')|U][ConcatIfNeitherEmpty(' ', AddLocalizationIf(Country.IsLocalPlayer, 'YOU'))] wird [StrategicRegion.GetName] #b nicht#! [Concept('concept_colony', '$concept_colonize$')|l]"
 ARTICLE_DRAFT_COUNTRY_NOT_SIGNED: "Noch nicht unterschrieben"
 ARTICLE_SELECTED_LAW_COMMITMENT: "[COUNTRY.GetAltName('NOM')|U] verpflichtet sich, „[LawType.GetName]“ zu beschließen"
 DUPLICATE_ARTICLE_SAME_INPUTS: "Nur ein [concept_article] einer bestimmten Art mit den gleichen Zufuhren kann hinzugefügt werden"
 REMOVE_ARTICLE_DRAFT: "[concept_article] entfernen"
 ARTICLE_SELECTED_STATUS: "#i Derzeit ausgewählt#!"
 NO_ACTIVE_TREATIES: "Keine aktiven [Concept('concept_treaty', '$concept_treaties$')]"
 TREATY_START_DATE_HEADER: "Am [Treaty.GetStartDate] unterzeichnet"
 ARTICLE_TYPE_INFLUENCE_COST_TOOLTIP: "@inf!#v [ArticleType.GetCost|0]#! Unterhaltskosten"
 ARTICLE_TYPE_EFFECTS_TITLE: "#title Auswirkungen:#!"
 ARTICLE_TYPE_EFFECTS: "[ArticleType.GetEffectsDesc][ConcatIfNeitherEmpty('\n', ArticleType.GetRelationsEffectDesc)]"
 ARTICLE_DRAFT_CLICK_TO_CHANGE: "#i Zum Ändern klicken#!"
 ARTICLE_DRAFT_ADDED_STATUS: "Als [concept_article] #v $ARTICLE_DRAFT_NUMBER$#! in diesem [concept_treaty] hinzugefügt"
 ARTICLE_DRAFT_INFLUENCE_COST_TOOLTIP_MUTUAL: "@inf!#v [ArticleDraft.GetArticleType.GetCost|0]#! Unterhaltskosten für beide [Concept('concept_country', '$concept_countries$')]"
 ARTICLE_DRAFT_INFLUENCE_COST_TOOLTIP_DIRECTED: "@inf!#v [ArticleDraft.GetArticleType.GetCost|0]#! Unterhaltskosten ([Country.GetAltName('NOM')|U] [AddLocalizationIf(Country.IsLocalPlayer, '(YOU)')])"
 ARTICLE_DRAFT_EFFECTS_TITLE: "#title Auswirkungen:#!"
 ARTICLE_DRAFT_EFFECTS: "[ArticleDraft.GetEffectsDesc]"
 ARTICLE_DRAFT_EFFECTS_RELATION: "[ArticleDraft.GetRelationsEffectDesc]"
 ARTICLE_DRAFT_EFFECTS_IMMEDIATE: "[ArticleDraft.GetImmediateEffectsDesc]"
 ARTICLE_DRAFT_MUTUAL_MODIFIERS_TITLE: "#title Gegenseitige Modifikatoren:#!"
 ARTICLE_DRAFT_MUTUAL_MODIFIERS: "[ArticleDraft.GetMutualModifierDesc]"
 ARTICLE_DRAFT_SOURCE_MODIFIERS_TITLE: "#title [Country.GetAdjective|U]e Modifikatoren:#!"
 ARTICLE_DRAFT_WAR_GOAL_SOURCE_MODIFIERS_TITLE: "#title [WarGoal.GetHolder.GetAdjective|U]e Modifikatoren:#!"
 ARTICLE_DRAFT_SOURCE_MODIFIERS: "[ArticleDraft.GetSourceModifierDesc]"
 ARTICLE_DRAFT_TARGET_MODIFIERS_TITLE: "#title [TreatyDraft.GetOtherCountry(Country.Self).GetAdjective|U]e Modifikatoren:#!"
 ARTICLE_DRAFT_WAR_GOAL_TARGET_MODIFIERS_TITLE: "#title [WarGoal.GetTarget.GetAdjective|U]e Modifikatoren:#!"
 ARTICLE_DRAFT_TARGET_MODIFIERS: "[ArticleDraft.GetSourceModifierDesc]"
 ARTICLE_DRAFT_ERRORS: "[TreatyDraft.GetCanIncludeArticleDraftDesc(ArticleDraft.Self)]"
 ARTICLE_INFLUENCE_COST_TOOLTIP_MUTUAL: "@inf!#v [Article.GetArticleType.GetCost|0]#! Unterhaltskosten für beide [Concept('concept_country', '$concept_countries$')]"
 ARTICLE_INFLUENCE_COST_TOOLTIP_DIRECTED: "@inf!#v [Article.GetArticleType.GetCost|0]#! Unterhaltskosten ([Country.GetAltName('NOM')|U] [AddLocalizationIf(Country.IsLocalPlayer, '(YOU)')])"
 ARTICLE_EFFECTS_TITLE: "#title Auswirkungen:#!"
 ARTICLE_EFFECTS: "[Article.GetEffectsDesc]"
 ARTICLE_EFFECTS_RELATION: "[Article.GetRelationsEffectDesc]"
 ARTICLE_EFFECTS_IMMEDIATE: "[Article.GetImmediateEffectsDesc]"
 ARTICLE_MUTUAL_MODIFIERS_TITLE: "#title Gegenseitige Modifikatoren:#!"
 ARTICLE_MUTUAL_MODIFIERS: "[Article.GetMutualModifierDesc]"
 ARTICLE_SOURCE_MODIFIERS_TITLE: "#title [Country.GetAdjective|U]e Modifikatoren:#!"
 ARTICLE_SOURCE_MODIFIERS: "[ArticleDraft.GetSourceModifierDesc]"
 ARTICLE_TARGET_MODIFIERS_TITLE: "#title [Treaty.GetOtherCountry(Country.Self).GetAdjective|U]e Modifikatoren:#!"
 ARTICLE_TARGET_MODIFIERS: "[ArticleDraft.GetSourceModifierDesc]"
 ARTICLE_TOOLTIP_NOT_FULFILLED: "@warning! [Concept('concept_non_fulfillment', '$concept_non_fulfilled$')|U]"
 ARTICLE_TOOLTIP_NOT_FULFILLED_REASON: "[Article.GetNonFulfillmentDesc]"
 ARTICLE_IS_FROZEN_STATUS: "@warning! Dieser [concept_article] ist eingefroren. [Treaty.GetOtherCountry(Country.Self).GetAltName('NOM')|U] zieht #b keine#! Vorteile aus diesem $concept_article$, da [Treaty.GetOtherCountry(Country.Self).GetAltName('NOM')] #v [GetDataModelSize(Treaty.GetNonFulfilledArticlesFromSource(Treaty.GetOtherCountry(Country.Self)))]#! der eigenen $concept_articles$ #b nicht#! erfüllt. Die @inf!#v [Article.GetArticleType.GetCost|-0]#! Unterhaltskosten für [Country.GetAltName('AKK')] werden ebenfalls ausgesetzt."
 NON_FULFILLED_ARTICLE_STATUS: "$concept_non_fulfilled$"
 TREATY_ARTICLES_FROZEN: "[Concept('concept_article', '$concept_articles$')] eingefroren"
 TREATY_NOT_FULFILLED_FROZEN_STATUS_NO_FORMATTING: "Alle [Country.GetAdjectiveNoFormatting|l]en $concept_articles$ sind eingefroren"
 TREATY_NOT_FULFILLED_FROZEN_STATUS_TOOLTIP: "[Treaty.GetOtherCountry(Country.Self).GetAltName('NOM')|U] zieht #b keine#! Vorteile aus den [Country.GetAdjective|l]en [Concept('concept_article', '$concept_articles$n')], da [Treaty.GetOtherCountry(Country.Self).GetAltName('NOM')] #v [GetDataModelSize(Treaty.GetNonFulfilledArticlesFromSource(Treaty.GetOtherCountry(Country.Self)))]#! der eigenen $concept_articles$ #b nicht#! erfüllt. Die [concept_influence]-Unterhaltskosten für [Country.GetAltName('AKK')] werden ebenfalls ausgesetzt."
 TREATY_RESET_ALL: "Alle zurücksetzen"
 TREATY_RESET_LEFT_SIDE: "[TreatyDraft.GetLeftCountry.GetAdjective|U]e Seite zurücksetzen"
 TREATY_RESET_RIGHT_SIDE: "[TreatyDraft.GetRightCountry.GetAdjective|U]e Seite zurücksetzen"
 RESET_ARTICLES_MENU_BUTTON_TOOLTIP: "[concept_treaty] zurücksetzen"
 PROHIBIT_TRADE: "Weltweites Im- & Exportverbot von"
 ARTICLE_INPUT_NO_TARIFFS: "Keine [Country.GetAdjective|l]en [concept_tariffs] auf"
 ARTICLE_INPUT_NO_SUBVENTIONS: "Keine [Country.GetAdjective|l]en [concept_subventions] für"
 TREATIES_HEADER: "$concept_treaties$"
 YOUR_TREATIES_WITH_COUNTRY: "mit [GetPlayer.GetAltName('DAT')] (#b uns#!)"
 TREATIES_WITH_OTHER_COUNTRY_NAME_HEADER: "mit [Country.GetAltName('DAT')]"
 DRAFT_A_TREATY: "[concept_treaty] aufsetzen"
 TREATY_CAN_SIGN_WITH: "[GetPlayer.GetCanSignTreatyWithDesc(Country.Self)]"
 TREATY_PROPOSAL_TOOLTIP_HEADER: "#header Diesen [Concept('concept_treaty', 'Vertragsvorschlag')] [TreatyDraft.GetRightCountry.GetAltName('DAT')] übersenden#!"
 TREATY_PROPOSAL_TOOLTIP_IF_ACCEPTED_TITLE: "#title Falls akzeptiert:#!"
 TREATY_PROPOSAL_TOOLTIP_COST: "@inf! #v [TreatyDraft.GetCost(TreatyDraft.GetLeftCountry.Self)|0-]#! Unterhaltskosten für uns\n@inf! #v [TreatyDraft.GetCost(TreatyDraft.GetRightCountry.Self)|0-]#! Unterhaltskosten für [TreatyDraft.GetRightCountry.GetAltName('AKK')]"
 TREATY_PROPOSAL_TOOLTIP_RELATION_EFFECT: "[TreatyDraft.GetRelationsEffectDesc]"
 TREATY_PROPOSAL_TOOLTIP_BINDING_PERIOD: "[TreatyDraft.GetBindingPeriodDesc]"
 TREATY_PROPOSAL_TOOLTIP_BINDING_PERIOD_FORMAT: "Wird eine Bindungszeit von $BINDING_PERIOD$ haben; #tooltippable #tooltip:$BREAKDOWN$ Abzüge#!#! gelten, falls er vorzeitig abgebrochen wird"
 TREATY_ACCEPTANCE_STATUS_ACCEPT: "[COUNTRY.GetAltName('NOM')|U] wird diesen [concept_treaty] annehmen"
 TREATY_ACCEPTANCE_STATUS_MAYBE: "[COUNTRY.GetAltName('NOM')|U] könnte diesen [concept_treaty] annehmen (Wahrscheinlichkeit von $CHANCE|0%v$)"
 TREATY_ACCEPTANCE_STATUS_REJECT: "[COUNTRY.GetAltName('NOM')|U] wird diesen [concept_treaty] ablehnen"
 TREATY_ARTICLE_ACCEPTANCE: "#P #variable #tooltippable #tooltip:$BREAKDOWN$ $VALUE|D=+$#!#!#!#! durch Hinzufügung von „[ARTICLE.GetNameNoIcon]“"
 TREATY_ARTICLE_ACCEPTANCE_NO_BREAKDOWN: "#P #variable $VALUE|D=+$#!#! durch Hinzufügung von „[ARTICLE.GetNameNoIcon]“"
 TREATY_ARTICLE_TYPE_ACCEPTANCE: "#P #variable #tooltippable #tooltip:$BREAKDOWN$ $VALUE|D=+$#!#!#!#! durch Hinzufügung von „[TREATY_ARTICLE_TYPE.GetNameNoIcon]“"
 TREATY_ARTICLE_TYPE_ACCEPTANCE_NO_BREAKDOWN: "#P #variable $VALUE|D=+$#!#! durch Hinzufügung von „[TREATY_ARTICLE_TYPE.GetNameNoIcon]“"
 TREATY_ARTICLE_DRAFT_ACCEPTANCE_TOOLTIP: "#header $NAME$ Akzeptanz#!\n$VALUE|0+=$ für [COUNTRY.GetAltName('AKK')]:\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 TREATY_ACCEPTANCE_TOOLTIP: "#header $NAME$ Akzeptanz#!\n$VALUE|0+=$ für [COUNTRY.GetAltName('AKK')]:\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 TREATY_DRAFT_POSITIVE_ACCEPTANCE_BREAKDOWN: "[TreatyDraft.GetPositiveAcceptanceBreakdown(TreatyDraft.GetRightCountry.Self)]"
 TREATY_DRAFT_NO_POSITIVE_ACCEPTANCE: "Keine positiven Faktoren"
 TREATY_DRAFT_NEGATIVE_ACCEPTANCE_BREAKDOWN: "[TreatyDraft.GetNegativeAcceptanceBreakdown(TreatyDraft.GetRightCountry.Self)]"
 TREATY_DRAFT_NO_NEGATIVE_ACCEPTANCE: "Keine negativen Faktoren"
 STATIC_TREATY_ACCEPTANCE_VALUE_FORMAT: "$VALUE|+=0$ $KEY$"
 TREATY_STATIC_ACCEPTANCE: "#P #variable #tooltippable #tooltip:$BREAKDOWN$ $VALUE|D+$#!#!#!#! durch Diplomatiehaltung zu [COUNTRY.GetAltName('DAT')]"
 TREATY_PREVIOUS_REJECTION_ACCEPTANCE: "$VALUE|=+$ durch zu geringe Verbesserung bei einem zuvor abgelehnten $concept_treaty$ (Minimum von $MIN_VALUE|v=+$)"
 TREATY_ARTICLE_ACCEPTANCE_CAP_MAX: "$DELTA|+=0$ durch ein Übertreffen des $CAP|+=0$ Akzeptanzmaximums für „[TREATY_ARTICLE_TYPE.GetName]“-$concept_articles$"
 TREATY_ARTICLE_ACCEPTANCE_CAP_MIN: "$DELTA|+=0$ durch ein Unterschreiten des $CAP|+=0$ Akzeptanzminimums für „[TREATY_ARTICLE_TYPE.GetName]“-$concept_articles$"
 TREATY_ACCEPTANCE_OWES_OBLIGATION: "$VALUE|D+$ weil [Country.GetAltName('NOM')] [TARGET_COUNTRY.GetAltName('DAT')] eine [concept_obligation] schuldet"
 TREATY_ACCEPTANCE_CALLS_IN_OBLIGATION: "$VALUE|D+$ weil [Country.GetAltName('NOM')] eine [concept_obligation] [TARGET_COUNTRY.GetAltName('VON')] einfordert"
 TREATY_ACCEPTANCE_OBLIGATIONS: "#tooltippable #tooltip:$BREAKDOWN$ $VALUE|D+$#!#! durch den Austausch von [Concept('concept_obligation', '$concept_obligations$')]"
 MULT_ICON: "#bold ×#!"
 PROFITABILITY_SHORT: "Prof."
 SIZE: "Größe"
 POTENTIAL: "Potenzial"
 TOOLTIP_AI_STRATEGY: "#header [AIStrategy.GetName]#!\n$TOOLTIP_DELIMITER$\n[AIStrategy.GetDesc(Country.Self)]"
 TOOLTIP_DELIMITER: "@divider_start!@divider_mid!@divider_mid!@divider_mid!@divider_end!"
 MARKETABLE_GOODS_TOOLTIP: "#header Marktfähige Waren#!\n$TOOLTIP_DELIMITER$\nAufgrund des relativ geringen Handelsvolumens wird der Preis dieser Ware (#variable [Goods.GetName]#!) stärker von der Marktpreisbildung beeinflusst als andere Ware und daher auch weniger von einem Staat mit niedrigem [concept_market_access] beeinflusst."
 NON_MARKETABLE_GOODS_TOOLTIP: "#header Nicht marktfähige Waren#!\n$TOOLTIP_DELIMITER$\nAufgrund des relativ hohen Handelsvolumens wird der Preis dieser Ware (#variable [Goods.GetName]#!) weniger von der Marktpreisbildung beeinflusst als andere Waren und daher auch mehr von einem Staat mit niedrigem [concept_market_access] beeinflusst."
 NON_NEGOTIATORS: "Verhandlungsunfähige Teilnehmer"
 RESOURCES: "Ressourcen"
 BUILDINGS: "Gebäude"
 POWER_STRUCTURE: "Machtgefüge"
 ECONOMY: "Wirtschaft"
 HUMAN_RIGHTS: "Menschenrechte"
 UPGRADE: "@arrow_up! Heraufstufen"
 DOWNGRADE: "@arrow_down! Abstufen"
 EXCESS: "Überschuss"
 LACK: "Mangel"
 INTEREST_IN: "[concept_interest] in"
 PRESTIGE: "Prestige"
 RANK: "Rang"
 PROGRESS: "Fortschritt"
 INSTITUTION_EMPTY_STATE: "Es wurden keine [Concept('concept_law', '$concept_laws$')] erlassen, die [Concept('concept_institution', 'Institutionen')] gewähren"
 SHRINK: "< Verkleinern"
 GROW: "Vergrößern >"
 TECH_TREE: "Technikbaum"
 GRAPHLAYOUT_NODE_DEBUG: "#D Schlüssel: $KEY$\nID des Layout-Knotens: $LAYOUT_NODE_ID$\nID des Grundknotens: $BASE_NODE_ID$\nEingehende Knoten: $INCOMING$\nAusgehende Knoten: $OUTGOING$\nEbene: $LAYER$\nBreite: $WIDTH$\nX-Zentrum: $CENTER_X$\nPriorität: $PRIORITY$\nPosition: $POSITION$ #!"
 urban_capacity: "[Concept('concept_urbanization', 'Staatsurbanisierung')]"
 BUILDING_GROUP_TITLE: "#title $BUILDING_GROUP$#!"
 BUILDING_GROUP_ENTRY_UNCAPPED: "$BUILDING$"
 BUILDING_GROUP_ENTRY_CAPPED: "$BUILDING$ (Max.: #variable $NUM$#!)"
 MILITARY_PANEL_MUNITION_CONTENTS: "#title Inhalt von [Country.GetAcquiredMunitionCrates|1] Munitionskisten#!"
 YEARS_COUNT_RANGE: "#V $MIN$-$MAX$ Jahre#!"
 YEARS_COUNT_RANGE_SHORT: "#V $MIN$-$MAX$ a#!"
 YEARS_COUNT_RANGE_NO_FORMAT: "$MIN$-$MAX$ Jahre"
 MONTHS_COUNT_RANGE: "#V $MIN$-$MAX$ Monate#!"
 MONTHS_COUNT_RANGE_SHORT: "#V $MIN$-$MAX$ m#!"
 MONTHS_COUNT_RANGE_NO_FORMAT: "$MIN$-$MAX$ Monate"
 WEEKS_COUNT_RANGE: "#V $MIN$-$MAX$ Wochen#!"
 WEEKS_COUNT_RANGE_SHORT: "#V $MIN$-$MAX$ w#!"
 WEEKS_COUNT_RANGE_NO_FORMAT: "$MIN$-$MAX$ Wochen"
 DAYS_COUNT_RANGE: "#V $MIN$-$MAX$ Tage#!"
 DAYS_COUNT_RANGE_SHORT: "#V $MIN$-$MAX$ d#!"
 DAYS_COUNT_RANGE_NO_FORMAT: "$MIN$-$MAX$ Tage"
 YEARS_COUNT_SINGULAR: "#V 1 Jahr#!"
 YEARS_COUNT_SINGULAR_SHORT: "#V 1 a#!"
 YEARS_COUNT_PLURAL: "#V $VALUE$ Jahre#!"
 YEARS_COUNT_PLURAL_SHORT: "#V $VALUE$ a#!"
 YEARS_COUNT_SINGULAR_NO_FORMAT: "1 Jahr"
 YEARS_COUNT_PLURAL_NO_FORMAT: "$VALUE$ Jahre"
 MONTHS_COUNT_SINGULAR: "#V 1 Monat#!"
 MONTHS_COUNT_SINGULAR_SHORT: "#V 1 m#!"
 MONTHS_COUNT_PLURAL: "#V $VALUE$ Monate#!"
 MONTHS_COUNT_PLURAL_SHORT: "#V $VALUE$ m#!"
 MONTHS_COUNT_SINGULAR_NO_FORMAT: "1 Monat"
 MONTHS_COUNT_PLURAL_NO_FORMAT: "$VALUE$ Monate"
 WEEKS_COUNT_SINGULAR: "#V 1 Woche#!"
 WEEKS_COUNT_SINGULAR_SHORT: "#V 1 w#!"
 WEEKS_COUNT_PLURAL: "#V $VALUE$ Wochen#!"
 WEEKS_COUNT_PLURAL_SHORT: "#V $VALUE$ w#!"
 WEEKS_COUNT_SINGULAR_NO_FORMAT: "1 Woche"
 WEEKS_COUNT_PLURAL_NO_FORMAT: "$VALUE$ Wochen"
 DAYS_COUNT_SINGULAR: "#V 1 Tag#!"
 DAYS_COUNT_SINGULAR_SHORT: "#V 1 d#!"
 DAYS_COUNT_PLURAL: "#V $VALUE$ Tage#!"
 DAYS_COUNT_PLURAL_SHORT: "#V $VALUE$ d#!"
 DAYS_COUNT_SINGULAR_NO_FORMAT: "1 Tag"
 DAYS_COUNT_PLURAL_NO_FORMAT: "$VALUE$ Tage"
 LESS_THAN_ONE_DAY: "weniger als ein Tag"
 DAYS_COUNT_SINGULAR_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ #v 1#!#!#! Tag"
 DAYS_COUNT_PLURAL_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE|v$#!#! Tage"
 WEEKS_COUNT_SINGULAR_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ #v 1#!#!#! Woche"
 WEEKS_COUNT_PLURAL_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE|v$#!#! Wochen"
 MONTHS_COUNT_SINGULAR_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ #v 1#!#!#! Monat"
 MONTHS_COUNT_PLURAL_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE|v$#!#! Monate"
 YEARS_COUNT_SINGULAR_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ #v 1#!#!#! Jahr"
 YEARS_COUNT_PLURAL_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE|v$#!#! Jahre"
 WORLD_MARKET_HEADER: "Weltmarkt"
 GOTO_WORLD_MARKET: "Zum [concept_world_market] gehen"
 MARKET_STATES_PANEL_MARKET_ACCESS_TOOLTIP: "#header [concept_market_access] zum Markt „[State.GetMarket.GetName]“#!\n[State.GetMarketAccessDesc]"
 STATES_PANEL_MARKET_ACCESS_ISOLATED: "[concept_market_access]: [concept_isolated_state]"
 ISOLATED_STATE: "[concept_isolated_state]"
 DEBUG_MODIFIERS: "#title Debug – Modifikatoren#!"
 STATE_REGION_MARKET_CONNECTION_PATH_ENTRY: "Verbindung bei $PATH_STRENGTH|v0$ in der Region „[StateRegion.GetName]“ ([concept_infrastructure]: $ENTRY_INFRA|v0$)"
 STATE_REGION_MARKET_CONNECTION_PATH_WEAK_POINT: "Verbindung in der Region „[StateRegion.GetName]“ ändert sich: $PREV_PATH_STRENGTH|v0$ @arrow_right! $PATH_STRENGTH|v0$ ([concept_infrastructure]: $ENTRY_INFRA|v0$)"
 STATE_REGION_STATE_ITEM: "$TAB$[STATE.GetName] ([STATE.GetOwner.GetAltName('NOM')])\n"
 COUNTRY_PANEL_MODIFIERS_TAB: "$MODIFIERS$"
 MODIFIERS: "Modifikatoren"
 COUNTRY_PANEL_MODIFIERS_TAB_SELECTED: "#bold Modifikatoren#!"
 COUNTRY_PANEL_INFORMATION_TAB: "Information"
 COUNTRY_PANEL_INFORMATION_TAB_SELECTED: "#bold Information#!"
 COUNTRY_PANEL_DIPLOMACY_TAB: "Diplomatie"
 COUNTRY_PANEL_DIPLOMACY_TAB_SELECTED: "#bold Diplomatie#!"
 COUNTRY_PANEL_POLITICS_TAB: "Heimisch"
 COUNTRY_PANEL_POLITICS_TAB_SELECTED: "#bold Heimisch#!"
 COUNTRY_PANEL_INTERACTIONS_TAB: "Interaktionen"
 COUNTRY_PANEL_INTERACTIONS_TAB_SELECTED: "#bold Interaktionen#!"
 COUNTRY_DIPLOMACY_PANEL_OPEN_SELF: "Mit sich selbst kann man keine Diplomatie führen"
 MODIFIERS_PANEL_NO_TIMED_MODIFIERS: "#bold Keine zeitlichen Modifikatoren#!"
 MODIFIERS_PANEL_TIMED_MODIFIERS: "#bold Zeitliche Modifikatoren#!"
 DECAYING_DESC: "([Concept('concept_decay', '$concept_decaying$')])"
 DECAYING_DESC_WITH_SPACE_BEFORE: " $DECAYING_DESC$"
 DECAYING_DESC_WITH_SPACE_AFTER: "$DECAYING_DESC$ "
 DATA_TIMED_MODIFIER_TITLE: "#header $NAME$#!"
 DATA_TIMED_MODIFIER_DURATION: "Dauer: $DURATION$$MAYBE_DECAYING_WITH_SPACE_BEFORE$"
 DATA_TIMED_MODIFIER_REMAINING: "Verbleibende Zeit: $DURATION$$MAYBE_DECAYING_WITH_SPACE_BEFORE$"
 DATA_TIMED_MODIFIER_ONELINE: "$MODIFIERDESC$ aus #title $NAME$#! ($DURATION$)$MAYBE_DECAYING_WITH_SPACE_BEFORE$"
 MODIFIERS_PANEL_MODIFIER_ENTRIES: "#bold Modifikatoreinträge#!"
 RELIGION_INFO_PANEL_SHOW_GLOBAL: "Global"
 RELIGION_INFO_PANEL_SHOW_NATIONAL_ONLY: "[GetPlayer.GetAltNameNoFormatting('IN')|U]"
 RELIGION_INFO_PANEL_TABOOS: "[Concept('concept_taboo', '$concept_taboos$')]"
 RELIGION_INFO_PANEL_TRAITS: "[Concept('concept_religious_trait', '$concept_religious_traits$')]"
 RELIGION_INFO_PANEL_POPLIST_HEADING: "[Concept('concept_pop', '$concept_pops$')] ([Religion.GetNameNoFormatting])"
 CULTURE_INFO_PANEL_POPLIST_HEADING: "[Concept('concept_pop', '$concept_pops$')] ([Culture.GetNameNoFormatting])"
 BUILDING_DETAILS_PANEL_INFORMATION_TAB: "Information"
 BUILDING_DETAILS_PANEL_INFORMATION_TAB_SELECTED: "#bold Information#!"
 BUILDING_DETAILS_PANEL_MODIFIERS_TAB: "Modifikatoren"
 BUILDING_DETAILS_PANEL_MODIFIERS_TAB_SELECTED: "#bold Modifikatoren#!"
 CLICK_TO_CHANGE_RESPONSE: "#instruction Klicken, um die eigene Antwort zu ändern#!"
 COUNTRY_IN_MARKET_SUBTITLE: "[concept_country] in „[CountryPanel.GetCountry.AccessFirstMarket.GetName|U]“"
 STATE_IN_COUNTRY_SUBTITLE: "[concept_state] [State.GetCountry.GetAltName('IN')]"
 BATTLE_SUBTITLE: "[SelectLocalization(Battle.IsNavalBattle, 'NAVAL_BATTLE_IN_STATE_REGION_SUBTITLE', 'BATTLE_ON_FRONT_OR_STATE_SUBTITLE')]"
 NAVAL_BATTLE_IN_STATE_REGION_SUBTITLE: "[Concept('concept_battle', 'Seeschlacht')] in „[Battle.GetProvince.GetStateRegion.GetName]“"
 BATTLE_ON_FRONT_OR_STATE_SUBTITLE: "[SelectLocalization(Battle.GetFront.IsValid, 'BATTLE_ON_FRONT_SUBTITLE', 'BATTLE_OR_INVASION_IN_STATE_SUBTITLE')]"
 BATTLE_ON_FRONT_SUBTITLE: "Schlacht an der [Battle.GetFront.GetName]"
 BATTLE_OR_INVASION_IN_STATE_SUBTITLE: "[SelectLocalization(Battle.HasInvasion, 'INVASION_IN_STATE_SUBTITLE', 'BATTLE_IN_STATE_SUBTITLE')]"
 INVASION_IN_STATE_SUBTITLE: "[concept_invasion] in „[Battle.GetState.GetName]“"
 BATTLE_IN_STATE_SUBTITLE: "[concept_battle] in „[Battle.GetState.GetName]“"
 FRONT_IN_WAR_SUBTITLE: "[concept_front] im Krieg ([Front.AccessDiplomaticPlay.AccessWar.GetName])"
 FRONT_IN_DP_SUBTITLE: "[concept_front] in „[Front.AccessDiplomaticPlay.GetName]“"
 FRONT_IN_WAR_OR_DP_SUBTITLE: "[SelectLocalization(Front.AccessDiplomaticPlay.HasEscalatedIntoWar,'FRONT_IN_WAR_SUBTITLE', 'FRONT_IN_DP_SUBTITLE')]"
 FRONT_CASUALTIES_TOOLTIP: "#header [Country.GetAdjective|U]e [concept_casualties] an der Front „[Front.GetName]“#!\n@manpower! [FrontSide.GetNumCasualties(Country.Self)|vD] [concept_casualties]#indent_newline:2   \n@manpower! [FrontSide.GetNumDead(Country.Self)|vD] [concept_dead]\n@manpower! [FrontSide.GetNumWounded(Country.Self)|vD] [concept_wounded]#!"
 BATTLE_SIDE_NAME: "$BATTLE_NAME$ - $SIDE$"
 BATTLE_SIDE_ATTACKING_SIDE: "Angreiferseite"
 BATTLE_SIDE_DEFENDING_SIDE: "Verteidigerseite"
 INTEREST_GROUP_PANEL_MODIFIERS_TAB: "Modifikatoren"
 INTEREST_GROUP_PANEL_MODIFIERS_TAB_SELECTED: "#bold Modifikatoren#!"
 INTEREST_GROUP_LINE_TWO: "[concept_interest_group] [InterestGroup.AccessCountry.GetAltName('IN')]"
 BUILDING_DETAILS_LINE_TWO: "[SelectLocalization(Building.IsGovernmentFunded, 'BUILDING_DETAILS_LINE_TWO_GOVERNMENT', 'BUILDING_DETAILS_LINE_TWO_REGULAR')]"
 BUILDING_DETAILS_LINE_TWO_REGULAR: "[concept_building] in „[Building.GetState.GetName]“"
 BUILDING_DETAILS_LINE_TWO_GOVERNMENT: "[concept_government_building] in „[Building.GetState.GetName]“"
 BUILDING_SUBSISTENCE_OUTPUT_YEARLY: "#header [concept_subsistence_output] pro Angestelltem jährlich#!\nGesamt: @money!$VAL|Dv$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 GOODS_PANEL_LINE_TWO: "auf dem Markt „[GoodsPanel.GetGoods.GetMarket.GetName]“"
 GOODS_STATE_PANEL_LINE_TWO: "in [GoodsPanel.GetGoods.GetMarket.GetName] ([GoodsStatePanel.GetGoods.GetMarket.GetName])"
 LOCAL_PRICES_PANEL_LINE_TWO: "Ortspreise auf dem Markt „[GoodsPanel.GetGoods.GetMarket.GetName]“"
 GOODS_USAGE_PANEL_LINE_TWO: "[concept_good] [GetPlayer.GetAltName('IN')]"
 GOODS_WORLD_MARKET_PANEL_LINE_TWO: "Auf dem [concept_world_market]"
 POP_DETAILS_LINE_TWO: "[SelectLocalization(Pop.GetBuilding.IsValid,'POP_DETAILS_LINE_TWO_EMPLOYED','POP_DETAILS_LINE_TWO_UNEMPLOYED')]"
 POP_DETAILS_LINE_TWO_EMPLOYED: "[concept_pop] in [Pop.GetWorksAt] in [Pop.GetState.GetName]"
 POP_DETAILS_LINE_TWO_UNEMPLOYED: "[concept_unemployed]e [concept_pop] in [Pop.GetState.GetName]"
 POP_OVERVIEW_HEADER: "Übersicht"
 POP_ECONOMY_HEADER: "Wirtschaft"
 POP_CONSUMPTION_HEADER: "Verbrauch"
 PERCENTAGE_OF_BUDGET: "% des Etats"
 POP_AMOUNT: "Menge"
 POP_TOP_GOODS_EXPENDITURES_HEADER: "#title Top [GetDefine('NGUI','NUM_TOP_CONSUMPTION_GOODS_SHOWN')|0] [Concept('concept_good', '$concept_goods$')]-Ausgaben#!"
 POP_CONSUMPTION_FACTOR_DESC: "Verbrauchsfaktor #v x$VAL$#! aufgrund von:\n$BREAKDOWN$"
 POP_CONSUMPTION_FACTOR_FROM_TYPE: "#v +$VAL$#! für [PopType.GetName]"
 POP_CONSUMPTION_FACTOR_FROM_SIZE: "Multipliziert mit #v x$VAL|D$#! aus der Menge an [Concept('concept_workforce', 'Beschäftigten')] und [Concept('concept_dependents', 'Angehörigen')]"
 POP_SUBSISTENCE_INCOME: "[concept_subsistence_output]: @money!#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|+=D$#!#!"
 POP_SUBSISTENCE_INCOME_DESC: "#header [concept_subsistence_output] wöchentlich#!\nGesamt: @money!$VAL|Dv$ (pro Erwachsener Arbeiterschaft @money!$PER_ADULT_WEEKLY|v$ x$NUM|Dv$)\n$TOOLTIP_DELIMITER$\nPro Erwachsener Arbeiterschaft @money!$PER_ADULT_WEEKLY|v$ aufgrund von:\n$TAB$Pro Erwachsener Arbeiterschaft jährlich @money!$PER_ADULT_YEARLY|Dv$\n$TAB$Geteilt durch #v 52#! Wochen im Jahr \n\nPro Erwachsener Arbeiterschaft jährlich @money!$PER_ADULT_YEARLY|Dv$ aufgrund von:\n$BREAKDOWN$"
 STATE_POPULATION_PANEL_LINE_TWO: "in [StatePopulationPanel.GetState.GetName]"
 BASE_FROM_POPS: "Grundwert durch Bevölkerung: #v $VAL|D=+$#!"
 LEGITIMACY_BASE_VALUE: "Grundwert: #bold #P $VAL|=+$#!#!"
 LEGITIMACY_GOVT_SIZE: "Größe der [concept_government]: #tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $VAL|=+$#!#!#!"
 LEGITIMACY_GOVT_SIZE_BREAKDOWN: "#header [concept_legitimacy] durch die Größe der [concept_government]: #v $VAL|=+$#!#!\nErlaubte Größe: #p $MODIFIER_VALUE|0$#!\n$MODIFIER_DESC$\nTatsächliche Größe: #n $SIZE|0$#!\n$TOOLTIP_DELIMITER$\nÜberzählige [Concept('concept_party', '$concept_parties$')] und [Concept('concept_interest_group', '$concept_interest_groups$')]\n$BREAKDOWN$#!"
 LEGITIMACY_GOVT_SIZE_PARTY_ENTRY: "[Party.GetName] [Party.GetMembersSummary]: #variable $VAL|-$#!"
 LEGITIMACY_GOVT_SIZE_IG_ENTRY: "[InterestGroup.GetName]: #variable $VAL|-$#!"
 IDEOLOGICAL_INCOHERENCE: "#header [concept_ideological_incoherence]: #variable $VALUE|-$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 LEGITIMACY_IDEOLOGICAL_INCOHERENCE: "[concept_ideological_incoherence]: #tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $VAL|=+$#!#!#!"
 INTEREST_GROUP_INCOHERENCE_ENTRY: "[InterestGroup.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|+=$#!#!$PARTY_LABEL$"
 INTEREST_GROUP_INCOHERENCE_ENTRY_PARTY: " ($PARTY$$WHIP$)"
 PARTY_WHIP: " – [Concept('concept_party_whip','$concept_party_whip_short$')]"
 INCOHERENCE_GROUP_BREAKDOWN: "#tooltip_header [LawGroup.GetName]: #n $VALUE$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 IDEOLOGICAL_INCOHERENCE_ENTRY: "[LawType.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ #n $VALUE$#!#!#!"
 IDEOLOGICAL_INCOHERENCE_GROUP_ENTRY: "[LawGroup.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ #n $VALUE$#!#!#!"
 INCOHERENCE_ENTRY_BREAKDOWN: "#header [LawType.GetName]: #negative_value $VALUE$#!#!\n$TOOLTIP_DELIMITER$\n@approves! $concept_interest_groups$: #v $SUM_POSITIVE|+=$#!\n$BREAKDOWN_POSITIVE$\n\n@disapproves! $concept_interest_groups$: #v $SUM_NEGATIVE|+=$#!\n$BREAKDOWN_NEGATIVE$"
 INCOHERENCE_LAW_ENTRY_FIRST_FORMAT: "#active $BREAKDOWN$#!"
 INCOHERENCE_LAW_ENTRY_OTHERS_FORMAT: "#inactive $BREAKDOWN$#!"
 IDEOLOGICAL_INCOHERENCE_VALUE_BREAKDOWN: "$TAB$Grundwert: $BASE|v$\n$TAB$$MODIFIER$"
 INCOHERENCE_BASE_PENALTY_DESC: "$BASE|0+$ durch #bold Grundabzug#! aufgrund von:\n$TAB$$STANCE|+$ durch Haltung zu „[LawType.GetName]“\n$TAB$#v x$FACTOR$#! durch Grundfaktor"
 INCOHERENCE_PENALTY_DESC: "#header $VAL|+$ Inkoheränzabzug#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 INCOHERENCE_WHIP_BASE_ENTRY: "$VAL|+=$ durch [concept_party_whip]"
 INCOHERENCE_WHIP_IMPACT_ADD_ENTRY: "$VAL|+=$ durch „$MODIFIER$“ aufgrund von:\n$TAB$$BREAKDOWN$"
 LEGITIMACY_HEAD_OF_STATE_VALUE: "[concept_interest_group] (#variable [InterestGroup.GetName]#!) des Landesoberhaupts [concept_in_government|l]: #tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $VAL|+=0$#!#!#!"
 LEGITIMACY_HEAD_OF_STATE_MODIFIER_BREAKDOWN: "Die [concept_interest_group] ([COUNTRY.GetRuler.GetInterestGroup.GetName]) von [COUNTRY.GetRuler.GetFullName] ist [concept_in_government|l] mit einbezogen:\n$BREAKDOWN$"
 LEGITIMACY_GOVT_LEADER_CLOUT_VALUE: "[concept_clout] durch den Regierungsanführer: #variable $VAL|+=0$#!\n$TAB$#variable [INTEREST_GROUP.GetName]#! mit Politischem Druck #variable [INTEREST_GROUP.GetClout|%+2]#! × #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $FACTOR|0+$#!#!#!"
 LEGITIMACY_GOVERNMENT_CLOUT_MODIFIER_BREAKDOWN: "$BREAKDOWN$"
 LEGITIMACY_GOVT_TOTAL_CLOUT_VALUE: "Gesamter [concept_clout] der [concept_government]: #variable $VAL|+=0$#!\n$TAB$[concept_clout] der [concept_government] #variable $CLOUT|%+1$#! × #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $FACTOR|2+$#!#!#!"
 LEGITIMACY_GOVT_TOTAL_CLOUT_VALUE_BREAKDOWN: "$BREAKDOWN$"
 LEGITIMACY_GOVT_TOTAL_VOTES_VALUE: "Gesamt-Prozentsatz der [concept_votes] der [concept_government]: #variable $VAL|+=0$#!\n$TAB$[Concept('concept_government', 'Regierungs')]-[concept_votes] #variable $VOTES|%+1$#! × #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $FACTOR|2+$#!#!#!"
 LEGITIMACY_GOVT_TOTAL_VOTES_VALUE_BREAKDOWN: "$BREAKDOWN$"
 LEGITIMACY_GOVT_STRENGTH_ENTRY: "#variable $FACTION$#!: #variable $VAL|=$ %#!"
 LEGITIMACY_GOVT_STRENGTH_IG_ENTRY: "#variable [INTEREST_GROUP.GetName]#! #variable [INTEREST_GROUP.GetClout|=%]#!"
 LEGITIMACY_MIN_CAP: "Legitimität kann nicht niedriger als $VALUE|v$ sein:\n   $DESC$"
 GOVERNMENT_OPTION_TOOLTIP: "#header Regierungsoption#!\n[concept_legitimacy]: #tooltippable #tooltip:$LEGITIMACY_BREAKDOWN_TAG$ $LEGITIMACY|v0$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 GOVERNMENT_OPTION_ENTRY: "[InterestGroup.GetName][AddTextIf(Not(StringIsEmpty('$PARTY$')),' ($PARTY$)')]"
 GOVERNMENT_OPTION_TEXT: "$LEGITIMACY|v0$: $BREAKDOWN$"
 GOVERNMENT_OPTION_LIST_ENTRY: "[InterestGroup.GetTextIcon]"
 GOVERNMENT_OPTION_LIST_ENTRY_DELIMITER: ""
 NUM_STATES_TOOLTIP_incorporated: "#header [SelectLocalization($MULTIPLE$,'[concept_incorporated_state]', '[Concept('concept_incorporated_state', '$concept_incorporated_states$')]')] [Country.GetAltNameNoFlag('IN')]: $VAL|0v$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 NUM_STATES_TOOLTIP_unincorporated: "#header [SelectLocalization($MULTIPLE$, '[concept_unincorporated_state]', '[Concept('concept_unincorporated_state', '$concept_unincorporated_states$')]')] [Country.GetAltNameNoFlag('IN')]: $VAL|0v$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 NUM_STATES_TOOLTIP_treaty_port: "#header [SelectLocalization($MULTIPLE$,'[concept_treaty_port]','[Concept('concept_treaty_port', '$concept_treaty_ports$')]')] [Country.GetAltNameNoFlag('IN')]: $VAL|0v$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 NUM_STATES_TOOLTIP_count: "#header [SelectLocalization($MULTIPLE$, '[concept_state]', '[Concept('concept_state', '$concept_states$')]')] [Country.GetAltNameNoFlag('IN')]: $VAL|0v$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 PROCESS_EXPENSES: "Ausgaben:"
 PROCESS_REVENUE: "Einnahmen:"
 PROCESS_BALANCE: "Wöchentlicher [concept_building_balance]:"
 VACANCIES: "Leerstellen"
 NO_VACANCIES: "Gebäude ist voll besetzt"
 RESET_GOVERNMENT: "#v [GetPlayer.GetGovernmentLegitimacy]#!: Zurücksetzen"
 RESET_GOVERNMENT_TOOLTIP: "#header Alle Änderungen an [concept_government] zurücksetzen#!\nDerzeitige [concept_legitimacy]: #v #tooltippable #tooltip:[GetPlayer.GetGovernmentLegitimacyLevel.GetTooltipTag],LEGITIMACY_LEVEL_ACTIVE_TOOLTIP [GetPlayer.GetGovernmentLegitimacy]#!#!#!"
 NOTIFICATION_BUILDING_FULLY_EMPLOYED: "[SCOPE.GetRootScope.GetBuilding.GetName|U] sind voll besetzt in „[SCOPE.GetRootScope.GetBuilding.GetState.GetName]“"
 NOTIFICATION_HARVEST_CONDITION_FINISHED: "[SCOPE.sHCT('type').GetName] in „[SCOPE.GetRootScope.GetStateRegion.GetName]“ beendet"
 NOTIFICATION_HARVEST_CONDITION_STARTED: "[SCOPE.sHCT('type').GetName] begann in „[SCOPE.GetRootScope.GetState.GetName]“"
 NOTIFICATION_STATE_AVERAGE_SOL_INCREASED: "[concept_sol] erhöht sich auf [SCOPE.GetRootScope.GetState.GetAverageStandardOfLivingAll|+0] in „[SCOPE.GetRootScope.GetState.GetName]“"
 NOTIFICATION_STATE_AVERAGE_SOL_DECREASED: "[concept_sol] sinkt auf [SCOPE.GetRootScope.GetState.GetAverageStandardOfLivingAll|-0] in „[SCOPE.GetRootScope.GetState.GetName]“"
 NOTIFICATION_STATE_LITERACY_INCREASED: "[concept_literacy] erhöht sich auf [SCOPE.GetRootScope.GetState.GetLiteracy|%+0] in „[SCOPE.GetRootScope.GetState.GetName]“"
 NOTIFICATION_STATE_POPULATION_INCREASED: "[Concept('concept_pop','$concept_population$')] erhöht sich auf [SCOPE.GetRootScope.GetState.GetPopulationSize|K+] in „[SCOPE.GetRootScope.GetState.GetName]“"
 NOTIFICATION_STATE_POPULATION_DECREASED: "[Concept('concept_pop','$concept_population$')] sinkt auf [SCOPE.GetRootScope.GetState.GetPopulationSize|K-] in „[SCOPE.GetRootScope.GetState.GetName]“"
 NOTIFICATION_STATE_IN_TURMOIL: "[concept_turmoil] begann in „[SCOPE.GetRootScope.GetState.GetName]“"
 NOTIFICATION_BUILDING_EXPANDED: "[SCOPE.GetRootScope.GetBuilding.GetName|U] wurde [SelectLocalization(GreaterThan_int32(SCOPE.GetRootScope.GetBuilding.GetExpansionLevel,'(int32)1'),'NOTIFICATION_BUILDING_EXPANDED_SUBSEQUENT_LEVEL','NOTIFICATION_BUILDING_EXPANDED_FIRST_LEVEL')] in „[SCOPE.GetRootScope.GetBuilding.GetState.GetName]“"
 NOTIFICATION_BUILDING_EXPANDED_FIRST_LEVEL: "gebaut"
 NOTIFICATION_BUILDING_EXPANDED_SUBSEQUENT_LEVEL: "erweitert"
 NOTIFICATION_BUILDING_FOREIGN_INVESTMENT: "[SCOPE.sC('country').GetAltNameNoFormatting('NOM')|v] hat in die Erweiterung von „[SCOPE.GetRootScope.GetBuilding.GetName]“ investiert"
 NOTIFICATION_BUILDING_FOREIGN_INVESTMENT_PRIVATIZATION: "[SCOPE.sC('country').GetAdjectiveNoFormatting|v]e Investoren haben Akquisitionen in Sachen „[SCOPE.GetRootScope.GetBuilding.GetName]“ getätigt"
 NOTIFICATION_BUILDING_FIRST_POPS_OF_CULTURE_IN_STATE: "Die erste [SCOPE.sCulture('culture').GetName|l]e $concept_pop$ hat sich nach „[SCOPE.GetRootScope.GetState.GetName]“ bewegt"
 INFRASTRUCTURE: "[concept_infrastructure]"
 ARABLE_LAND_AVAILABLE: "[concept_arable_land]"
 FREE_ARABLE_LAND: "FAL: $NUM|v$"
 LENS_OPTION_TEXT: "[LensOption.GetText]"
 LENS_OPTION_TOOLTIP: "[LensOption.GetTooltip]\n\n$LENS_OPTION_AVAILABLE_AND_ACTIVE_OPTIONS$"
 LENS_OPTION_AVAILABLE_AND_ACTIVE_OPTIONS: "#v [LensOption.GetNumberOfInactiveSelectableOptions|+]#! verfügbare Ziele[ConcatIfNeitherEmpty('\n', AddLocalizationIf(NotZero(LensOption.GetNumberOfActiveOptions), 'LENS_OPTION_ACTIVE_OPTIONS'))]"
 LENS_OPTION_ACTIVE_OPTIONS: "#v [LensOption.GetNumberOfActiveOptions|u]#! aktiv"
 BUILDING_MODIFIERS_PER_LEVEL_COLON: "#title Gebäudemodifikatoren (pro Stufe):#!"
 COUNTRY_MODIFIERS_PER_LEVEL_COLON: "#title Landesmodifikatoren (pro Stufe):#!"
 STATE_MODIFIERS_PER_LEVEL_COLON: "#title Staatsmodifikatoren (pro Stufe):#!"
 APPLIES_TO_BUILDING_TYPE: "Gilt für $BUILDING_TYPE$ ([concept_production_method]: [ProductionMethodGroup.GetName])"
 GOODS_PRODUCTION_COLON: "#title Warenproduktion:#!"
 GOODS_CONSUMPTION_COLON: "#title Warenverbrauch:#!"
 BUILDING_WAGE_PER_LEVEL: "Ungefähr #variable @money!$PER_LEVEL_WAGE|k$#! in Regierungsgehältern pro Stufe"
 BUILDING_WAGE_TOTAL: "Ungefähr #variable @money!$TOTAL_WAGE|k$#! in Regierungsgehältern insgesamt"
 BUILDING_WAGE_RANGE_PER_LEVEL: "Ungefähr #variable @money!$MIN_PER_LEVEL_WAGE$#! – #variable @money!$MAX_PER_LEVEL_WAGE$#! in Regierungsgehältern pro Stufe"
 BUILDING_WAGE_RANGE_TOTAL: "Ungefähr #variable @money!$MIN_TOTAL_WAGE$#! – #variable @money!$MAX_TOTAL_WAGE$#! in Regierungsgehältern insgesamt"
 BUILDING_TYPE_NAME_FORMAT: "#BOLD #V $NAME$#!#!"
 CONSTRUCTION_MATERIALS_COLON: "#title Baukosten:#!"
 BUILDING_PROVIDES_URBANIZATION_PER_LEVEL: "#variable #P +$URBANIZATION$#!#! [concept_urbanization] pro Stufe"
 BUILDING_PROVIDES_URBANIZATION_TOTAL: "#variable #P +$URBANIZATION$#!#! [concept_urbanization] insgesamt"
 BUILDING_USES_INFRASTRUCTURE_PER_LEVEL: "#variable #N +$USAGE|0$#!#! [concept_infrastructure_usage] pro Stufe"
 BUILDING_USES_INFRASTRUCTURE_TOTAL: "#variable #N +$USAGE|0$#!#! [concept_infrastructure_usage] insgesamt"
 BUILDING_ARABLE_CAPACITY_PER_LEVEL: "#variable #N -$ARABLE_CAPACITY$#!#! [concept_arable_land] pro Stufe"
 BUILDING_ARABLE_CAPACITY_TOTAL: "#variable #N -$ARABLE_CAPACITY$#!#! [concept_arable_land] insgesamt"
 GDP_TOOLTIP: "#header [concept_gdp]#!\n[Country.GetAdjective|U]es $GDP_SHORT$: #N @money![Country.GetGDP|Dv]#! ([Country.GetGDPRanking])\n$TOOLTIP_DELIMITER$\nBIP pro Kopf: #variable @money![Country.GetGDPPerCapita|2*]#! [Country.GetGDPPerCapitaRanking]\n\n"
 MARKET_GDP_PERCENTAGE: "#title [GetPlayer.GetAdjectiveNoFormatting]er $GDP_SHORT$-Beitrag#!\n[Market.GetMarketSharePercentageFor( GetPlayer )|%1v]"
 MARKET_GDP_PERCENTAGE_TOOLTIP: "#header BIP-Beitrag#!\n[Market.GetName] macht [Market.GetGDPContributionPercentage(GetPlayer)|%1v] des BIP [GetPlayer.GetAltName('IN')] aus"
 ACTIVE_PRODUCTION_METHOD_HEAD: "#header $NAME$#!"
 SWITCH_PRODUCTION_METHOD_HEAD: "#header Zu „$NAME$“ wechseln#!"
 PRICE_ICON_ITEM_STATE: "([Goods.GetCompareIconAgainstBasePrice(Goods.GetStatePrice)] in [Goods.GetState.GetName])"
 PRICE_ICON_ITEM_RANGE: "(#tooltippable #tooltip:COIN_STACK_TOOLTIP $ICON_MIN$#!#!-#tooltippable #tooltip:COIN_STACK_TOOLTIP $ICON_MAX$#!#! in $NUM$ Staatsregionen)"
 PRICE_ICON_ITEM_RANGE_SAME: "(#tooltippable #tooltip:COIN_STACK_TOOLTIP $ICON$#!#! in $NUM$ Staatsregionen)"
 PRICE_ICON_ITEM_MARKET: "([Goods.GetCompareIconAgainstBasePrice(Goods.GetMarketPrice)] in [Goods.GetMarket.GetName])"
 STATE_YEARLY_GDP: "@money![State.GetYearlyGDP|Dv] $GDP_SHORT$"
 STATE_POPULATION: "[State.GetPopulationSize|Dv] [Concept('concept_pop','$concept_population$')]"
 STATE_POPULATION_WITH_ICON: "@population! $STATE_POPULATION$"
 STATE_INCORPORATED_SHORT: "[Concept('concept_incorporated_state','$concept_incorporated$')]"
 STATE_UNINCORPORATED_SHORT: "[Concept('concept_unincorporated_state','$concept_unincorporated_state_short$')]"
 STATE_INCORPORATED_SHORT_WITH_ICON: "@incorporated! $STATE_INCORPORATED_SHORT$"
 STATE_UNINCORPORATED_SHORT_WITH_ICON: "@unincorporated! $STATE_UNINCORPORATED_SHORT$"
 DEFAULT_EVENT_OPTION: "Diese Option wird nach $EVENT_REMAINING_DAYS$ automatisch ausgewählt."
 NO_PROGRESS: "Kein Fortschritt"
 INVALID_OPTIONS: "Unzulässige Optionen: [GetDataModelSize(MapListPanel.AccessInvalidOptions)|v]"
 FAILED_OPTIONS: "Nicht verfügbare Optionen: [GetDataModelSize(MapListPanel.AccessFailedOptions)|v]"
 BUILDING_TYPE_COUNTRY_BREAKDOWN: "[SelectLocalization(GreaterThan_int32(BuildingType.GetNumLevelsInCountryRaw(GetPlayer.Self), '(int32)0' ), 'BUILDING_TYPE_COUNTRY_BREAKDOWN_NONEMPTY', 'BUILDING_TYPE_COUNTRY_BREAKDOWN_EMPTY')]"
 BUILDING_TYPE_COUNTRY_BREAKDOWN_NONEMPTY: "Es gibt [BuildingType.GetNumLevelsInCountryFormatted(GetPlayer.Self)] Stufen des Gebäudetyps „[BuildingType.GetNameNoFormatting]“ [GetPlayer.GetAltName('IN')][SelectLocalization(And(Not(BuildingType.IsGovernmentFunded), Not(BuildingType.IsSubsistenceBuilding)), 'BUILDING_TYPE_PRODUCTIVITY', '')]"
 BUILDING_TYPE_IN_COUNTRY_DESC: "#header „[BuildingType.GetName]“ [COUNTRY.GetAltName('IN')]#!\n$BREAKDOWN$"
 BUILDING_TYPE_OWNED_BY_COMPANY_DESC: "#header „[BuildingType.GetName] “ im Besitz [Country.GetAltName('VON')]#!\n$BREAKDOWN$"
 BUILDING_TYPE_OWNED_BY_COMPANY_EMPTY_DESC: "Es gibt keine „#v [BuildingType.GetNameNoFormatting]#!“ im Besitz [Country.GetAltName('VON')]"
 BUILDING_TYPE_COUNTRY_BREAKDOWN_EMPTY: "Es gibt keine Gebäude der Art „[BuildingType.GetNameNoFormatting]“ [GetPlayer.GetAltName('IN')]"
 BUILDING_TYPE_PRODUCTIVITY: "\n[concept_productivity]: [BuildingType.GetProductivitySpanDesc(GetPlayer.Self)]"
 BUILDING_TYPE_NUM_LEVELS_BREAKDOWN_ENTRY: "Größe-$LEVELS|v$-„[Building.GetName]“ in [Building.GetState.GetOwner.GetFlagTextIcon] „[Building.GetState.GetName]“"
 BUILDING_TYPE_NUM_LEVELS_IN_QUEUE_BREAKDOWN_ENTRY: "$LEVELS|v$ Stufen von „[Building.GetName]“ im Bau in „[Building.GetState.GetName]„"
 BUILDING_TYPE_NUM_LEVELS: "#tooltippable #tooltip:[BuildingType.GetTooltipTag]|$BREAKDOWN_TAG$ $LEVELS$#!#!"
 BUILDING_TYPE_NUM_LEVELS_WITH_CONSTRUCTION: "#tooltippable #tooltip:[BuildingType.GetTooltipTag]|$BREAKDOWN_TAG$ $LEVELS$+$LEVELS_IN_QUEUE$#!#!"
 PRODUCTION_METHODS_HEADER: "Gebäude"
 COUNTRY_TOOLTIP: "#HEADER [Country.GetAltName('NOM')]#!"
 COMMANDER_RANK: "Rang: [Character.GetRankName]"
 commander_specific_rank_desc: "$NAME$ – $RANK$"
 CULTURE: "Kultur"
 COUNTRY_CULTURES: "#title [Concept('concept_culture', '$concept_cultures$')]#!:\n#variable [Country.GetPrimaryCulturesDesc]#!"
 COUNTRY_CULTURES_ONE_LINE: "#title [concept_primary_cultures]#!"
 CULTURE_NAME_AND_PRIMARY: "[Culture.GetNameNoFormatting|U][AddLocalizationIf(Culture.IsPrimaryCultureIn(GetPlayer), 'CULTURE_NAME_AND_PRIMARY_PRIMARY')]"
 CULTURE_NAME_AND_PRIMARY_PRIMARY: " (Haupt)"
 RELIGION_NAME_AND_STATE_RELIGION: "[Religion.GetNameNoFormatting|U][AddLocalizationIf(ObjectsEqual(GetPlayer.GetStateReligion.Self, Religion.Self), 'RELIGION_NAME_AND_STATE_RELIGION_STATE')]"
 RELIGION_NAME_AND_STATE_RELIGION_STATE: " (Staatsreligion)"
 POP_COUNTRY_CULTURES: "[concept_primary_cultures] [Pop.GetCountry.GetAltName('IN')]:#indent_newline:3 \n#variable [Pop.GetCountry.GetPrimaryCulturesDesc]#!#!"
 COUNTRY_RELIGIONS: "#title [concept_state_religion]#!:\n#variable [Country.GetStateReligion.GetName]#!"
 COUNTRY_RELIGIONS_ONE_LINE: "#title [concept_state_religion]#!"
 COUNTRY_ARABLE_LAND: "#title [concept_arable_land]#!:\n#variable [Country.GetArableLand|D]#!"
 COUNTRY_ARABLE_LAND_ONE_LINE: "#title [concept_arable_land]#!"
 COUNTRY_ARABLE_LAND_BREAKDOWN: "#header [concept_arable_land] in [Country.GetName]#!\nInsgesamt: [Country.GetArableLand|v]\n$TOOLTIP_DELIMITER$\n#title Pro [concept_state]:#!\n[Country.GetArableLandDesc]"
 COUNTRY_ARABLE_LAND_BREAKDOWN_ENTRY: "$TAB$[State.GetArableLandCapacity|v] in [State.GetName]"
 POP_COUNTRY_RELIGIONS: "[concept_state_religion]: #variable [Pop.GetCountry.GetStateReligion.GetName]#!"
 COUNTRY_GOVERNMENT: "#title [concept_government]#!:\n#tooltippable #tooltip:[Country.GetGovernment.GetTooltipTag],GOVERNMENT_TYPE_TOOLTIP_DESC [Country.GetGovernment.GetName]#!#!"
 COUNTRY_GOVERNMENT_NO_LINE_BREAK: "#title [concept_government]#!: #tooltippable #tooltip:[Country.GetGovernment.GetTooltipTag],GOVERNMENT_TYPE_TOOLTIP_DESC [Country.GetGovernment.GetName]#!#!"
 COUNTRY_RULER: "#title [concept_ruler]#!:\n#variable [Country.GetRuler.GetFullName]#!"
 COUNTRY_RANK: "#title [concept_rank]#!:\n#variable [Country.GetRank]#! #variable (##[Country.GetCountryScorePositionDesc])#!"
 COUNTRY_RANK_ONE_LINE: "#title [concept_rank]#!: [Country.GetRank|v] #variable (##[Country.GetCountryScorePositionDesc])#!"
 COUNTRY_POPULATION: "#title [Concept('concept_pop', '$concept_population$')]#!:\n#variable [Country.GetTotalPopulation|D]#!"
 COUNTRY_POPULATION_ONE_LINE: "#title [Concept('concept_pop', '$concept_population$')]#!"
 COUNTRY_SOL_ONE_LINE: "#title [concept_sol]#!"
 COUNTRY_GDP: "#title $GDP_SHORT$#!:\n#variable @money![Country.GetGDP|D]#!"
 COUNTRY_GDP_ONE_LINE: "#title $GDP_SHORT$#!"
 NO_POP_TYPES_POL_STR: "Kein [concept_pop] hat [concept_political_strength]"
 NO_RELIGIONS: "Keine [Concept('concept_religion', '$concept_religions$')]"
 NO_CULTURES_POL_STR: "Keine [Concept('concept_culture', '$concept_cultures$')] haben [concept_political_strength]"
 NO_RELIGIONS_POL_STR: "Keine [Concept('concept_religion', '$concept_religions$')] haben [concept_political_strength]"
 NO_INTEREST_GROUPS: "Keine [Concept('concept_interest_group', '$concept_interest_groups$')]"
 NO_POP_TYPES: "Keine [Concept('concept_pop', '$concept_pops$')]"
 NO_HARVEST_CONDITIONS: "Keine [Concept('concept_harvest_condition', '$concept_harvest_conditions$')]"
 NO_STARVATION: "Kein [concept_starvation]"
 MILD_STARVATION: "[Concept('concept_starvation', '$concept_mild_starvation$')]"
 SEVERE_STARVATION: "[Concept('concept_starvation', '$concept_severe_starvation$')]"
 GOVERNMENT_TYPE_TOOLTIP_DESC: "[GovernmentType.GetDesc]"
 POP_CULTURE_CHANGE_ENTRY_POSITIVE: "#v $CHANGE|=+$#! [Pop.GetName] in [Pop.GetState.GetName] werden assimiliert"
 POP_CULTURE_CHANGE_ENTRY_NEGATIVE: "#v $CHANGE|=+$#! [Pop.GetName] in [Pop.GetState.GetName] werden von der [Pop.GetAssimilatingCulture.GetName|l]en Kultur assimiliert"
 CULTURE_POPULATION_CHANGE: "Monatliche Veränderung der [Culture.GetName|l]en Kultur [Country.GetAltName('IN')]: #v $CHANGE|=+$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 POP_RELIGION_CHANGE_ENTRY_POSITIVE: "#v $CHANGE|=+$#! [Pop.GetName] in [Pop.GetState.GetName] werden konvertiert"
 POP_RELIGION_CHANGE_ENTRY_NEGATIVE: "#v $CHANGE|=+$#! [Pop.GetName] in [Pop.GetState.GetName] konvertieren zum [Pop.GetConvertingReligion.GetName|l]en Glauben"
 RELIGION_NAME_AND_PERCENTAGE: "[Religion.GetName] (#v $VAL|2%$#!)"
 RELIGION_POPULATION_CHANGE: "Monatliche Veränderung der [Religion.GetName|l]en Religion [Country.GetAltName('IN')]: #v $CHANGE|=+$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 DISCRIMINATION_TRAIT_CULTURES: "[Concept('concept_culture', '$concept_cultures$')]: [DiscriminationTrait.GetCulturesDesc]"
 DISCRIMINATION_TRAIT_RELIGIONS: "[Concept('concept_religion', '$concept_religions$')]: [DiscriminationTrait.GetReligionsDesc]"
 METRICS_OF_PROGRESS_HEADER: "#title „Fortschrittsmetriken“#!"
 COUNTRY_URBANISATION: "#title [concept_urbanization]:#!"
 COUNTRY_INDUSTRIALISATION: "#title Industrialisierung:#!"
 MILITARY: "Militär"
 NAVY: "Marine"
 PRICE_REPORT_SHORT: "$DETAILS$"
 PRICE_REPORT_LONG: "$DETAILS$\n#tooltippable #tooltip:$BREAKDOWN_TAG$ Mauszeiger hier halten, um $NUM_ADDITIONAL|v$ weitere signifikante [Concept('concept_market_price', 'concept_market_prices')] einzusehen#!#!"
 PRICE_REPORT_NO_CHANGES: "Auf diesem Markt ([GetPlayer.GetCapital.GetMarket.GetName]) gab es im letzten Monat keine signifikanten [concept_market_price]-Änderungen."
 PRICE_REPORT_GOODS_ENTRY: "$DIRECTION$ [Goods.GetTextIcon] @money!$PREV_PRICE|v1$ ($PREV_ICON$) @arrow_right! @money!$CUR_PRICE|v1$ ($CUR_ICON$) für [Goods.GetName]"
 PRICE_REPORT_DIRECTION_INCREASE: "@arrow_up!"
 PRICE_REPORT_DIRECTION_DECREASE: "@arrow_down!"
 MAP_MODE: "Kartenmodus"
 CURRENT_MAP_MODE: "Derzeitiger Kartenmodus"
 MAP_MODE_SHOW_TOOLTIP: "#b [MapMode.GetName]#! auf der Karte zeigen"
 MAP_MODE_SHOW_TOOLTIP_SELECTED: "#b [MapMode.GetName]#! auf der Karte zeigen\n#i Derzeitige Anzeige#!"
 LOCAL_PRICE_IN: "Ortspreise in [GoodsPanel.GetGoods.GetMarket.GetName]"
 LOCAL_PRICE_IN_STATE: "Ortspreise in [State.GetMarket.GetName]"
 USAGE: "Anwendungen"
 LOCAL_PRICE_STATE: "Ortspreise auf dem Markt „[GoodsStatePanel.GetGoods.GetMarket.GetName]“"
 GOODS_LOCAL_PRICE_INFO: "#variable @money![Goods.GetStatePrice|1]#! [Goods.GetCompareIconAgainstBasePriceNoTooltip(Goods.GetStatePrice)]"
 GOODS_LOCAL_PRODUCTION_AND_CONSUMPTION_INFO: "[SelectLocalization(GreaterThan_CFixedPoint(Goods.GetStateProduction,'(CFixedPoint)0'),'GOODS_LOCAL_PRODUCTION','')][SelectLocalization(And(GreaterThan_CFixedPoint(Goods.GetStateProduction,'(CFixedPoint)0'),GreaterThan_CFixedPoint(Goods.GetStateConsumption,'(CFixedPoint)0')),', ','')][SelectLocalization(GreaterThan_CFixedPoint(Goods.GetStateConsumption,'(CFixedPoint)0'),'GOODS_LOCAL_CONSUMPTION','')][SelectLocalization(And(EqualTo_CFixedPoint(Goods.GetStateProduction,'(CFixedPoint)0'),EqualTo_CFixedPoint(Goods.GetStateConsumption,'(CFixedPoint)0')),'GOODS_NO_LOCAL_PRODUCTION_OR_CONSUMPTION','')]"
 GOODS_LOCAL_PRODUCTION: "[Concept('concept_good_production', '$concept_good_produces$')] #v [Goods.GetStateProductionWithTooltip]#!"
 GOODS_LOCAL_CONSUMPTION: "[Concept('concept_good_consumption', '$concept_good_consumes$')] #v [Goods.GetStateConsumptionWithTooltip]#!"
 GOODS_NO_LOCAL_PRODUCTION_OR_CONSUMPTION: "Keine $PRODUCTION$ oder $CONSUMPTION$"
 OUTLINER_PANEL_DESCRIPTION: "Wenn man mit dem Zeiger über eine der Listen oder Listeneinträge unten geht und auf den Stern (@unpinned_star!) in der rechten Ecke klickt, kann diese Liste oder dieser Eintrag der Pinnwand am rechten Bildschirmrand hinzugefügt werden.\n\nDurch einen erneuten Klick auf den Stern (@pinned_star!) werden sie wieder entfernt."
 COUNTRY_LITERACY: "#title [concept_literacy]:#!\n#variable [Country.GetIncorporatedLiteracyRate|%1]#!"
 COUNTRY_LITERACY_ONE_LINE: "#title [concept_literacy]#!"
 LITERACY_TOOLTIP: "#header [concept_literacy]#!\n#variable [Country.GetNumIncorporatedLiteratePops|*]#! von #variable [Country.GetIncorporatedPopulation|*]#! Pops #variable [Country.GetAltName('IN')]#!, die in [Concept('concept_incorporated_state', 'Inkorporierten Staaten')] leben, können lesen und schreiben, was eine $concept_literacy$srate von [Country.GetIncorporatedLiteracyRate|%v] ([Country.GetIncorporatedLiteracyRanking]) ausmacht\n$TOOLTIP_DELIMITER$\nEs führt außerdem zu einem [Concept('concept_innovation', 'Innovationslimit')] von #tooltippable #tooltip:[Country.GetTooltipTag],INNOVATION_POINTS_MAX_BREAKDOWN @innovation![Country.GetWeeklyMaxInnovation|1]#!#!\nDerzeit #tooltippable #tooltip:[Country.GetTooltipTag],INNOVATION_POINTS_CURRENT_BREAKDOWN #v @innovation![Country.GetWeeklyInnovation|+=1]#!#!#! werden wöchentlich erzeugt (@innovation![Country.GetWeeklyRawInnovation|+=1] unbegrenzt)\n\nZusätzlich dazu gewährt uns die $concept_literacy$srate von [Country.GetIncorporatedLiteracyRate|%v] eine [Concept('concept_technology_spread', 'Technikverbreitungsrate')] von wöchentlich #P #tooltippable #tooltip:[Country.GetTooltipTag],TECHNOLOGY_SPREAD_RATE_BREAKDOWN [Country.GetMinWeeklyTechnologySpread|1] bis [Country.GetMaxWeeklyTechnologySpread|1]#!#!#! @innovation![concept_innovation] pro Woche [SelectLocalization(GreaterThan_int32(Country.GetNumUnincorporatedStates,'(int32)0'),'LITERACY_UNINCORPORATED_TOOLTIP','')]"
 LITERACY_UNINCORPORATED_TOOLTIP: "\n$TOOLTIP_DELIMITER$\nBezieht man [Concept('concept_unincorporated_state', '$concept_unincorporated_states$')] mit ein, sind #variable [Country.GetNumTotalLiteratePops|*]#! von #variable [Country.GetTotalPopulation|*]#! ([Country.GetTotalLiteracyRate|%v]) [Concept('concept_pop', '$concept_pops$')] #variable [Country.GetAltName('IN')]#! alphabetisiert ([Country.GetTotalLiteracyRanking])."
 INNOVATION_POINTS_CURRENT_BREAKDOWN: "#header @innovation![Concept('concept_innovation', 'Innovationsgenerierung')]#!\n[COUNTRY.GetAltName('NOM')|U] generiert #v @innovation![Country.GetWeeklyInnovation|+2]#!. Dies beruht auf Folgendem:\n[Country.GetWeeklyInnovationDesc]"
 INNOVATION_POINTS_MAX_BREAKDOWN: "#header @innovation![Concept('concept_innovation', 'Innovationsmaximum')]#!\n[Country.GetAdjective|U]es Maximum von @innovation![Country.GetWeeklyMaxInnovation|v2] beruht auf Folgendem:\n[Country.GetWeeklyMaxInnovationDesc]"
 INNOVATION_CAP_BREAKDOWN_ENTRY_TITLE: "[Concept('concept_innovation', 'Innovationsgrenze')]"
 WEEKLY_TECHNOLOGY_RESEARCH_SPEED: "#header Wöchentliches Forschungstempo (#v $CATEGORY$#!): $SPEED|v$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 WEEKLY_TECHNOLOGY_RESEARCH_SPEED_DETAILS: "Wöchentliche @innovation![Concept('concept_innovation', 'Innovationserzeugung')]: #tooltippable #tooltip:$BREAKDOWN$ $INNOVATION|v$#!#![ConcatIfNeitherEmpty('\n','$MODIFIER_DESC$')]"
 TECHNOLOGY_GROUP_RESEARCH_SPEED: "$VALUE|%0+=$ von $MODIFIER$ ($BASE|%0+=$ multipliziert mit $NUM|v$)"
 GOVERNMENT_TRANSFER_OF_POWER_TOOLTIP: "#header [GovernmentType.GetTransferOfPowerName]#!\n[GovernmentType.GetTransferOfPowerDesc]"
 LOYALISTS_TOOLTIP_POP: "#header $LOYALISTS$#!\nEs gibt #v [Pop.GetNumLoyalists|K]#! $LOYALISTS$ in dieser [Concept('concept_pop', 'Pop-Gruppe')]"
 RADICALS_TOOLTIP_POP: "#header $RADICALS$#!\nEs gibt #v [Pop.GetNumRadicals|K]#! $RADICALS$ in dieser [Concept('concept_pop', 'Pop-Gruppe')]"
 SUPPORTING_RADICALS_TOOLTIP_POP: "#header $RADICALS$#!\nEs gibt #v [Pop.GetPoliticalMovementSupportersRadicals(PoliticalMovement.Self)|K]#! $RADICALS$ in dieser [Concept('concept_pop', 'Pop-Gruppe')]"
 LOYALISTS_TOOLTIP_POP_LIST: "#header $LOYALISTS$#!\nEs gibt #v [PopListItem.GetNumLoyalists|d]#! $LOYALISTS$ unter diesen [PopListItem.GetTotalPopSize|dv] [PopListItem.GetPopType.GetName]"
 RADICALS_TOOLTIP_POP_LIST: "#header $RADICALS$#!\nEs gibt #v [PopListItem.GetNumRadicals|d]#! $RADICALS$ unter diesen [PopListItem.GetTotalPopSize|dv] [PopListItem.GetPopType.GetName]"
 SUPPORTING_RADICALS_TOOLTIP_POP_LIST: "#header $RADICALS$#!\nEs gibt #v [PopListItem.GetNumRadicals|d]#! $RADICALS$ unter diesen #v [PopListItem.GetTotalPopSize|d]#! [PopListItem.GetPopType.GetName]"
 CULTURAL_POSSIBLE_SECESSION_ICON_TOOLTIP: "Hat wöchentlich eine Chance von [Culture.GetChanceForSecessionMovement(GetPlayer.Self)|%1v], eine #variable [Concept('concept_secession', 'Sezessionsbewegung')]#! zu beginnen, da es sich um eine Nicht-[concept_primary_cultures] mit einem hohen [Concept('concept_turmoil', 'Aufruhrwert')] handelt!\n$TOOLTIP_DELIMITER$\n[concept_secession_desc]"
 CULTURAL_GROWING_SECESSION_ICON_TOOLTIP: "Die [Culture.GetName|l]e Kultur hat eine #variable [Concept('concept_secession', 'Sezessionsbewegung')]#! gegen uns begonnen!\n$TOOLTIP_DELIMITER$\n[concept_secession_desc]"
 CULTURAL_TURMOIL_TOOLTIP: "#header [concept_cultural_turmoil]#!\n$TOOLTIP_DELIMITER$\nLandesweiter [Culture.GetName|l]er [concept_turmoil]: [Culture.GetTurmoil|-0%]\n[Culture.GetName|U]er [concept_turmoil] [GetPlayer.GetAltName('IN')]: [GetPlayer.CalcCulturalTurmoil(Culture.Self)|-0%]"
 POP_LIST_TITLE_LABEL: "#bold [PopListItem.GetPopType.GetNameNoIcon]#! [AddLocalizationIf(PopList.HasBuildingContext, 'POP_LIST_POP_TYPE_REPLACED_BY_SLAVES')]"
 POP_LIST_POP_TYPE_REPLACED_BY_SLAVES: "[AddLocalizationIf(Not(StringIsEmpty(PopList.GetBuildingContext.GetPopTypeReplacementDesc(PopListItem.GetPopType))), 'POP_LIST_POP_TYPE_CAN_BE_REPLACED')]"
 POP_LIST_POP_TYPE_CAN_BE_REPLACED: "([PopList.GetBuildingContext.GetPopTypeReplacementDesc(PopListItem.GetPopType)])"
 STATE_POP_PANEL_HEADER: "#bold [Concept('concept_pop', '$concept_population$')]#!"
 STATE_POP_PANEL_HEADER_LINE_TWO: "in [StatePopulationPanel.GetState.GetName]"
 POP_CULTURE_TEXT: "Pop-Kultur: #variable [Pop.GetCulture.GetName]#!"
 POP_RELIGION_TEXT: "Pop-Religion: #variable [Pop.GetReligion.GetName]#!"
 POP_POL_STR_TEXT: "[concept_political_strength]: #variable [Pop.GetPoliticalStrength|1*]#!"
 POP_POL_RADICALS: "[Concept('concept_radical', '$concept_radicals$')]: #variable [Pop.GetNumRadicals]#!"
 POP_SUPPORTERS_POL_STR_TEXT: "[concept_political_strength]: #v [Pop.GetPoliticalMovementSupportersPoliticalStrength(PoliticalMovement.Self)|D]#!"
 POP_SUPPORTERS_RADICALS_TEXT: "[Concept('concept_radical', '$concept_radicals$')]: #v [Pop.GetPoliticalMovementSupportersRadicals(PoliticalMovement.Self)|D-]#!"
 POP_LIST_ITEM_POL_STR_TEXT: "[concept_political_strength]: #variable [PopListItem.GetTotalPolStr|D*]#!"
 POP_LIST_ITEM_RADICALS_TEXT: "[Concept('concept_radical', '$concept_radicals$')]: #variable [PopListItem.GetNumRadicals|D-]#!"
 POP_SUPPORTERS_LIST_ITEM_POL_STR_TEXT: "[concept_political_strength]: #v [PopListItem.GetTotalPolStr|D*]#!"
 POP_SUPPORTERS_LIST_ITEM_RADICALS_TEXT: "[Concept('concept_radical', '$concept_radicals$')]: #v [PopListItem.GetNumRadicals|D-]#!"
 POP_SUPPORTERS_LITERACY_TEXT: "[concept_literacy]: [Pop.GetLiteracyRate|%1v]"
 CURRENT_GDP_STATE: "#header [State.GetOwner.GetAdjectiveNoFormatting]es [concept_gdp] aus [State.GetName]#!\n$TOOLTIP_DELIMITER$\nDerzeitiger jährlicher BIP-Beitrag: #variable @money![State.GetGDPContribution|K]#!\n\n[State.GetName] trägt #variable [State.GetGDPContributionPercentage|%1]#! des [State.GetOwner.GetAdjectiveNoFormatting]en $GDP_SHORT$ bei\n\n[State.GetGDPGoodsContributionBreakdown]"
 GDP_OWNERSHIP_RATIO_STATE: "[State.GetGdpRatioOwnedByDesc(GetPlayer.Self)]"
 STATE_GDP_GOODS: "[Concept('concept_good', '$concept_goods$')], die den Spitzen-$GDP_SHORT$-Beitrag in [State.GetName] pro Woche leisten\n$BREAKDOWN$"
 STATE_GDP_GOODS_ENTRY: "[Goods.GetTextIcon][Nbsp][Goods.GetName]: @money!$VAL|vD$ ($RATIO|v%0$)"
 POL_STR_MODIFIER_DESC: "$DESC$ / Pop"
 TOP_PRODUCED: "#title Höchste Produktion#!"
 TOP_DEMANDED: "#title Höchste Nachfrage#!"
 SEE_ALL_GOODS: "Alle Waren ansehen"
 EXPAND_BUILDING_COST: "@construction![Nbsp][BUILDING_TYPE.GetRequiredConstruction|v0]"
 EXPAND_BUILDING_TOOLTIP: "#header [BUILDING_TYPE.GetNameNoFormatting]#!\n[BUILDING_TYPE.GetTooltip]"
 TRADE_LENS_RETARGET_LINK_TOOLTIP: "#BOLD #V Neu verbinden #!#!\n$TOOLTIP_DELIMITER$\n[concept_retarget_market_desc]"
 TRADE_LENS_MERGE_MARKET_TOOLTIP: "#BOLD #V Märkte zusammenfassen#!#!\n$TOOLTIP_DELIMITER$\n[concept_merge_market_desc]"
 GOODS_POOL_ENTRY: "#variable $AMOUNT|D$#! [Goods.GetName]"
 BROWSE_GOODS: "[Concept('concept_good', '$concept_goods$')] durchsuchen"
 OPEN_SPECIFIC_MARKET: "Details von [TradeOverviewPanel.AccessFirstMarket.GetName] öffnen"
 FILTER_STAPLE: "Waren ($GOOD_CATEGORY_STAPLE$)"
 FILTER_INDUSTRIAL_GOODS: "Waren ($GOOD_CATEGORY_INDUSTRIAL$)"
 FILTER_MILITARY_GOODS: "Waren ($GOOD_CATEGORY_MILITARY$)"
 FILTER_LUXURY_GOODS: "Waren ($GOOD_CATEGORY_LUXURY$)"
 GOOD_CATEGORY_MILITARY: "Militär"
 GOOD_CATEGORY_STAPLE: "Grundbedarf"
 GOOD_CATEGORY_INDUSTRIAL: "Industrie"
 GOOD_CATEGORY_LUXURY: "Luxus"
 TRADE: "Handel"
 DIPLOMATIC_OVERVIEW_TITLE: "#BOLD Diplomatie#!"
 OPEN_DIPLOMATIC_BROWSER: "Ländersuche öffnen"
 COUNTRIES_TITLE: "#BOLD Länder#!"
 POTENTIAL_MAP_MARKER_TOOLTIP: "#header [State.GetName] hat Platz für [Building.GetName]#!\nDerzeitige Größe: [State.GetBuilding(BuildingPotentialMarker.GetBuildingType.GetKey).GetExpansionLevelBreakdownDesc]"
 BASE_PRICE: "[concept_base_price]"
 MARKET_GOODS: "Waren"
 MARKET_TRADED_AMOUNT: "Gehandelter Betrag"
 MARKET_LEVEL: "Stufe"
 MARKET_CONNECTION: "Verbindung"
 MARKET_DIFFERENCE: "Unterschied"
 MARKET_PRICE: "Preis"
 CONSOLE_ADD_DISAPPROVAL: "Durch Konsolenbefehl"
 PRODUCTION_BUILDING_TOOLTIP: "#BOLD #V [Building.GetName]#!#!"
 BUILDINGS_DETAILS_HEADER: "#BOLD Gebäude in [State.GetName]#!"
 PLAYER_MONEY: "#BOLD [GetPlayer.GetGoldReserves|K]#! [GetPlayer.GetPowerDeltaIcon('money')]"
 PLAYER_MONEY_BALANCE: "#BOLD [AccessPlayer.PredictWeeklyBalance|1=D]#!"
 WEEKLY_BALANCE_GOOD: "#P $PLAYER_MONEY_BALANCE$#!"
 WEEKLY_BALANCE_BAD: "#N $PLAYER_MONEY_BALANCE$#!"
 WEEKLY_BALANCE_OKAY: "#V $PLAYER_MONEY_BALANCE$#!"
 INTEREST_GROUP_ITEM_TOOLTIP: "ID: [InterestGroup.GetID]"
 CULTURES: "#bold Landeskulturen#!"
 NO_CULTURES: "#bold Keine [Concept('concept_country', 'Landes')]-[Concept('concept_culture', '$concept_cultures$')]#!"
 NO_DIPLO_INFO: "#bold Keine aktive Diplomatie#!"
 FORMABLE_COUNTRIES: "#bold Gründbare Länder#!"
 NO_FORMABLE_COUNTRIES: "#bold Keine verfügbaren gründbaren Länder#!"
 NO_JOURNAL_ENTRIES: "Derzeit keine aktiven [Concept('concept_journal_entry', '$concept_journal_entries$')]"
 NO_JOURNAL_ENTRIES_OUTLINER: "Keine aktiven"
 NO_DECISIONS: "#bold Keine anzunehmenden Entscheidungen#!"
 ACTIVE_JOURNAL_ENTRIES: "[Concept('concept_journal_entry', '$concept_journal_entries$')]"
 OTHER_ACTIVE_JOURNAL_ENTRIES: "Sonstige [Concept('concept_journal_entry', '$concept_journal_entries$')]"
 JOURNAL_ENTRIES_CONCEPT: "$concept_journal_entries$"
 INACTIVE_JOURNAL_ENTRIES: "Mögliche $concept_journal_entries$"
 NO_INACTIVE_JOURNAL_ENTRIES: "Keine möglichen $concept_journal_entries$"
 RELEASE_COUNTRY_NAME: "#HEADER [CountryCreation.GetDefinition.GetName]#!"
 RELEASE_COUNTRY_TIER: "[CountryCreation.GetDefinition.GetTier]"
 RELEASE_COUNTRY_NUM_STATES: "#bold [CountryCreation.GetNumReleasableStates(GetPlayer)]#!"
 RELEASE_COUNTRY_REQ_STATES: "#bold [CountryCreation.GetNumReleasableStates(GetPlayer)]/[CountryCreation.GetNumRequiredStates]#!"
 RELEASE_COUNTRY_TOOLTIP: "#title [concept_subject] entlassen#!\nKulturen: #variable [CountryCreation.ListCultures]#!\n$TOOLTIP_DELIMITER$\n[CountryCreation.GetReleaseDesc(GetPlayer)]"
 RELEASE_COUNTRY_DESC: "#variable [COUNTRY_CREATION.GetAltName('AKK')|U]#! entweder als [concept_subject] oder als unabhängiges [concept_country] entlassen.\n\nEs erhält [COUNTRY_CREATION.GetNumReleasableStates(GetPlayer)|v] der [COUNTRY_CREATION.GetTotalNumStates|v] möglichen Staaten:\n[COUNTRY_CREATION.ListPotentialReleasableStates(GetPlayer)]"
 RELEASE_COUNTRY_PROVINCES_DESC: "#variable [COUNTRY_CREATION.GetName]#! entweder als [concept_subject] oder als unabhängiges [concept_country] entlassen.\n\nEs erhält [COUNTRY_CREATION.GetNumProvincesToRelease|v] Provinz(en) in der [concept_state_region] „[COUNTRY_CREATION.GetCapital.GetName]“."
 RELEASABLE_COUNTRIES: "#bold Entlassbare Länder#!"
 NO_RELEASABLE_COUNTRIES: "#bold Keine entlassbaren Länder#!"
 NO_SUBJECTS: "Keine [Concept('concept_subject', '$concept_subjects$')]"
 NO_SUBJECTS_OF_THIS_TYPE: "Keine [SubjectType.GetName]-[Concept('concept_subject', '$concept_subjects$')]"
 CANNOT_RELEASE_COUNTRY_AS_INDEPENDENT: "Aufgrund unserer diplomatischen Beziehungen zu [GetPlayer.TryGetOverlordTooltipEntry] können wir [COUNTRY_CREATION.GetName] nicht in die Unabhängigkeit entlassen"
 CANNOT_RELEASE_COUNTRY_AS_OWN_SUBJECT: "Aufgrund unserer diplomatischen Beziehungen zu [GetPlayer.TryGetOverlordTooltipEntry] können wir [COUNTRY_CREATION.GetName] nicht zu unserem [concept_subject] machen"
 CANNOT_RELEASE_COUNTRY_AS_OWN_SUBJECT_NO_SUBJECT_TYPE: "Da es keine gültige Klientelnationsbeziehung gibt, die dies erlauben würde, können wir [COUNTRY_CREATION.GetName] nicht zu unserem [concept_subject] machen"
 CANNOT_RELEASE_COUNTRY_SAME_CAPITAL: "Wir können [COUNTRY_CREATION.GetName] nicht entlassen, da wir mit [COUNTRY_CREATION.GetCapital.GetName] eine gemeinsame Hauptstadt besitzen"
 CANNOT_RELEASE_COUNTRY_NO_CAPITAL: "Um [COUNTRY_CREATION.GetName] entlassen zu können, müssen wir den [COUNTRY_CREATION.GetAdjective|l]en [concept_capital_state] [COUNTRY_CREATION.GetCapital.GetName] kontrollieren"
 CANNOT_RELEASE_COUNTRY_NOT_ENOUGH_STATES: "Wir müssen #variable [COUNTRY_CREATION.GetNumRequiredStates]#! [COUNTRY_CREATION.GetAdjective|l]e Kernstaaten vollständig kontrollieren, um #variable [COUNTRY_CREATION.GetName]#! entlassen zu können. Weltweit gibt es insgesamt #variable [COUNTRY_CREATION.GetTotalNumStates]#! [COUNTRY_CREATION.GetAdjective|l]e Kernstaaten:\n[COUNTRY_CREATION.ListPotentialStates(GetPlayer)]"
 CANNOT_RELEASE_COUNTRY_DIPLOMATIC_PLAY: "Wir können [COUNTRY_CREATION.GetAltName('NOM')] nicht freigeben, weil die Nation an einem [concept_diplomatic_play] beteiligt ist"
 CANNOT_RELEASE_COUNTRY_WAR: "Wir können [COUNTRY_CREATION.GetAltName('NOM')] nicht freigeben, weil die Nation an einem [concept_war] beteiligt ist"
 RELEASABLE_STATE: "[STATE_REGION.GetName]"
 SUBJECT_TYPES_VISUALIZATION: "Klientelarten-Tabelle"
 COUNTRY_FORMATION_HEADER: "Nationsgründung"
 COUNTRY_FORMATION_TYPE: "[SelectLocalization(CountryFormation.IsMajorFormation, Concept('concept_unification', '$concept_major_unification$'), Concept('concept_unification', '$concept_minor_unification$'))]"
 GO_TO_COUNTRY_FORMATION: "Zur #header [CountryFormation.GetAdjective|l]en#! [concept_nation_formation] gehen"
 FORM_COUNTRY: "[CountryFormation.GetName] gründen"
 FORM_COUNTRY_REQUIRED: "Mindestens #v [CountryFormation.GetNumRequiredStates|v]#! [Concept('concept_state_region', '$concept_state_regions$')] müssen kontrolliert werden, um das Land „[CountryFormation.GetName]“ zu gründen"
 FORM_COUNTRY_CULTURES: "[Concept('concept_culture', '$concept_cultures$')]: [CountryFormation.ListCultures]"
 FORM_COUNTRY_NAME: "#HEADER [CountryFormation.GetName]#!"
 FORM_COUNTRY_TIER: "[CountryFormation.GetDefinition.GetTier]"
 CANNOT_FORM_COUNTRY_NOT_ENOUGH_STATES: "Wir kontrollieren nur #v [COUNTRY_FORMATION.GetNumControlledStates(GetPlayer)]#! der #v [COUNTRY_FORMATION.GetNumRequiredStates]#! benötigten [Concept('concept_state_region', '$concept_state_regions$')], um #v [COUNTRY_FORMATION.GetName]#! zu gründen:\n[COUNTRY_FORMATION.ListRequiredStates(GetPlayer)]"
 CANNOT_FORM_COUNTRY_INDEPENDENCE_WAR_ONGOING_TITLE: "Laufender Unabhängigkeitskrieg gegen $NUM_COUNTRIES$ [Concept('concept_country', '$concept_countries$')]:"
 CANNOT_FORM_COUNTRY_INDEPENDENCE_WAR_ONGOING_ELEMENT: "$TAB$[COUNTRY.GetAltName('NOM')|U]"
 FORM_COUNTRY_REQ_STATES: "#bold [CountryFormation.GetNumControlledStates(GetPlayer)]/[CountryFormation.GetNumRequiredStates]#!"
 CAN_FORM_COUNTRY_DESC: "Wir kontrollieren #v [COUNTRY_FORMATION.GetNumControlledStates(GetPlayer)]#! der #v [COUNTRY_FORMATION.GetNumRequiredStates]#! benötigten [Concept('concept_state_region', '$concept_state_regions$')] ganz, um das Land #v [COUNTRY_FORMATION.GetName]#! zu gründen:\n[COUNTRY_FORMATION.ListRequiredStates(GetPlayer)]"
 FORM_COUNTRY_TOOLTIP: "#header $FORM_COUNTRY$#!\n$FORM_COUNTRY_REQUIRED$\n$TOOLTIP_DELIMITER$\n[CountryFormation.GetFormDesc(GetPlayer)]"
 REQUIRED_STATE_CONTROLLED: "@green_checkmark_box! [STATE_REGION.GetName]"
 REQUIRED_STATE_NON_CONTROLLED: "@simple_box! [STATE_REGION.GetName]"
 REQUIRED_STATE_NON_CONTROLLED_OPTIONAL: "@simple_box! [STATE_REGION.GetName] (Optional)"
 FORM_COUNTRY_SPLIT_STATE: "[Concept('concept_split_state', '$concept_split_state_short$')]"
 FORM_COUNTRY_CANDIDATES_HEADER: "[Concept('concept_unification_candidate', '$concept_unification_candidates$')]"
 FORM_COUNTRY_CANDIDATES_EMPTY: "Keine Kandidaten"
 FORM_COUNTRY_STATE_REGIONS_HEADER: "Wir kontrollieren #v [CountryFormation.GetNumControlledStates(GetPlayer)]#! der #v [CountryFormation.GetTotalNumStates]#! [CountryFormation.GetAdjective|l]en [Concept('concept_state_region', '$concept_state_regions$')]"
 FORM_COUNTRY_STATE_REGIONS_REQUIRED: "[CountryFormation.GetNumRequiredStates|v] [Concept('concept_state_region', '$concept_state_regions$')] müssen kontrolliert werden, um das Land „[CountryFormation.GetName]“ zu bilden"
 FORM_COUNTRY_CULTURE_COUNTRIES_HEADER: "[CountryFormation.ListCultures] [Concept('concept_country', '$concept_countries$')]"
 FORM_COUNTRY_SUPPORT_CANDIDATE: "Unterstützen"
 FORM_COUNTRY_SUPPORT_CANDIDATE_TOOLTIP: "#header [Country.GetAltName('NOM')|U] [Concept('concept_unification_supporter', 'unterstützen')]#!\n$TOOLTIP_DELIMITER$\nSich bereit erklären, [Country.GetAltName('AKK')] als Vereiniger von [CountryFormation.GetName] zu unterstützen[ConcatIfNeitherEmpty('\n',CountryFormation.GetSupportCandidateDesc(GetPlayer, Country.Self))]"
 FORM_COUNTRY_STOP_SUPPORTING_CANDIDATE: "Unterstützung beenden"
 FORM_COUNTRY_STOP_SUPPORTING_CANDIDATE_TOOLTIP: "#header [Concept('concept_unification_supporter', 'Unterstützung')] [Country.GetAltName('GEN')] beenden#!\n$TOOLTIP_DELIMITER$\nDie Unterstützung [Country.GetAltName('GEN')] als Vereiniger von [CountryFormation.GetName] beenden[ConcatIfNeitherEmpty('\n',CountryFormation.GetSupportCandidateDesc(GetPlayer, Country.Self))]"
 FORM_COUNTRY_SUPPORT_IS_SUBJECT: "[Country.GetAltName('NOM')|U] ist ein [concept_subject] und kann nur seinen [concept_overlord] unterstützen, um [CountryFormation.GetName] zu bilden"
 FORM_COUNTRY_SUPPORT_DOES_NOT_HAVE_VALID_CULTURE: "[Country.GetAltName('NOM')|U] teilt KEINE [concept_primary_cultures] mit [CountryFormation.GetName]"
 FORM_COUNTRY_SUPPORT_IS_CANDIDATE: "[Country.GetAltName('NOM')|U] ist ein möglicher Kandidat zur Vereinigung von [CountryFormation.GetName]"
 FORM_COUNTRY_SUPPORT_IS_ALREADY_SUPPORTING_CANDIDATE: "[Country.GetAltName('NOM')|U] unterstützt [CountryFormation.GetSupportedCandidateCountry(Country.Self).GetAltName('AKK')] bereits"
 FORM_COUNTRY_SUPPORT_DIPLOMATIC_PLAY_STARTED: "[Country.GetName] ist bereits am [concept_diplomatic_play] um [DIPLOMATIC_PLAY_TYPE.GetName|v] beteiligt"
 FORM_COUNTRY_SUPPORTING_COUNTRY: "[Country.GetAltName('NOM')|U] unterstützt [CountryFormation.GetSupportedCandidateCountry(Country.Self).GetAltName('AKK')] als Vereiniger von [CountryFormation.GetName]"
 FORM_COUNTRY_SUPPORTING_COUNTRIES: "Unterstützer: #v [CountryFormation.GetNumSupportingCountries(Country.Self)]#!"
 FORM_COUNTRY_SUPPORTING_COUNTRIES_TOOLTIP: "#header [Concept('concept_unification_supporter', 'Vereinigungsunterstützung')] für [Country.GetAltName('AKK')]#!\n$TOOLTIP_DELIMITER$\nUnterstützt von #v [CountryFormation.GetNumSupportingCountries(Country.Self)]#! [Concept('concept_country', 'Ländern')] als Vereiniger von [CountryFormation.GetName]:\n[CountryFormation.GetSupportingCountriesDesc(Country.Self)]"
 FORM_COUNTRY_NO_SUPPORTING_COUNTRIES: "Keine Unterstützer"
 FORM_COUNTRY_NO_SUPPORTING_COUNTRIES_TOOLTIP: "#header [Concept('concept_unification_supporter', 'Vereinigungsunterstützung')] für [Country.GetAltName('AKK')]#!\n$TOOLTIP_DELIMITER$\n[Country.GetAltName('NOM')|U] wird von keinem anderen [concept_country] als Vereiniger von [CountryFormation.GetName] unterstützt"
 FORM_COUNTRY_SUPPORT_BREAKDOWN: "[CountryFormation.GetSupportForAllCandidatesDesc(Country.Self)]"
 UNIFICATION_SUPPORT_IS_CANDIDATE: "[Country.GetAltName('NOM')|U] ist ein [concept_unification_candidate] für [CountryFormation.GetName]"
 UNIFICATION_SUPPORT_NO_CANDIDATES: "Derzeit existieren keine [Concept('concept_unification_candidate', '$concept_unification_candidates$')] für [CountryFormation.GetAltName('AKK')], die [COUNTRY.GetAltName('NOM')] unterstützen kann"
 UNIFICATION_SUPPORT_IS_PLAYER: "[Country.GetAltName('NOM')|U] ist ein menschlicher Spieler und es ist daher ungewiss, wen es für die Vereinigung von [CountryFormation.GetName] unterstützt"
 FORM_COUNTRY_LAUNCH_UNIFICATION_PLAY: "[Concept('concept_diplomatic_play', 'Vereinigungsdiplomatiespiel')] beginnen"
 FORM_COUNTRY_LAUNCH_UNIFICATION_PLAY_TOOLTIP: "[CountryFormation.GetTriggerUnificationPlayDesc(GetPlayer)]"
 FORM_COUNTRY_LAUNCH_LEADERSHIP_PLAY: "Anführer-[Concept('concept_diplomatic_play', '$concept_diplomatic_play_short$')] beginnen"
 FORM_COUNTRY_LAUNCH_LEADERSHIP_PLAY_TOOLTIP: "[CountryFormation.GetTriggerLeadershipPlayDesc(GetPlayer,Country.Self)]"
 COUNTRY_DOES_NOT_EXIST_TOOLTIP: "Dieses [concept_country] existiert nicht"
 PRODUCTION_AMOUNT: "#BOLD [GoodsProductionInfo.GetAmount|D]#! "
 PRODUCTION_AMOUNT_MARKER: "#BOLD [GoodsProductionInfo.GetAmount|D]#!"
 PRODUCTION_PRICE: "@money![GoodsProductionInfo.GetPrice|1]"
 PRODUCTION_SOLD_FOR: "@money![GoodsProductionInfo.GetSoldFor|D]"
 PRODUCTION_PANEL_HEADER: "#BOLD [concept_good_production] in „[State.GetName]“#!"
 PRODUCTION_AMOUNT_TITLE: "#title Menge#!"
 PRODUCTION_SOLD_FOR_TITLE: "#title Verkaufswert#!"
 PRODUCTION_GOOD_TITLE: "#title Ware#!"
 MARKET: "Markt"
 MARKETS: "Märkte"
 TRADE_OVERVIEW_TITLE: "#bold Märkte#!"
 POPS_OVERVIEW_TITLE: "#bold Bevölkerung#!"
 TRADE_OVERVIEW_MOST_IMPORTED: "#title Hauptimport#!"
 TRADE_OVERVIEW_MOST_CONSUMPTION_INEFFICIENT: "#title Ineffizienzen bei [concept_good_consumption]#!"
 TRADE_OVERVIEW_MOST_EXPORTED: "#title Hauptexport#!"
 TRADE_OVERVIEW_MOST_PRODUCTION_INEFFICIENT: "#title Ineffizienzen bei [concept_good_production]#!"
 POPS_OVERVIEW_STATISTICS_TAB: "Übersicht"
 POPS_OVERVIEW_POP_LIST_TAB: "Detaillierte Liste"
 POPS_OVERVIEW_CHARTS: "Diagramme"
 BUILDING_GOVERNMENT_EXPENSES: "[concept_government_expenses]:"
 BUILDING_INFRA_USAGE: "#variable [Building.CalcInfrastructureUsage|=0]#! [concept_infrastructure_usage]"
 BUILDING_URBANIZATION: "[concept_urbanization]:"
 BUILDING_INFRA_USAGE_TOOLTIP: "[Building.GetInfrastructureUsageBreakdown]"
 BUILDING_URBANIZATION_TOOLTIP: "[Building.GetUrbanizationProvidedBreakdown]"
 BUILDING_BATTALIONS_MOBILIZED: "[Concept('concept_mobilize_battalion', '$concept_mobilize_battalions_mobilized$')]:"
 PANEL_MILITARY_ARMY_POWER_PROJECTION_TOOLTIP: "[Country.GetArmyPowerProjectionDesc]"
 PANEL_MILITARY_ARMY_POWER_PROJECTION: "Die Gesamtzahl der [Country.GetAdjective|l]en [Concept('concept_battalion', '$concept_battalions$')] und ihre technologische Entwicklung ergeben eine Armee-[concept_power_projection] von #tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_ARMY_POWER_PROJECTION_TOOLTIP [Country.GetArmyPowerProjection|v0]#!#!"
 PANEL_MILITARY_NAVY_POWER_PROJECTION_TOOLTIP: "[Country.GetNavyPowerProjectionDesc]"
 PANEL_MILITARY_NAVY_POWER_PROJECTION: "Die Gesamtzahl der [Country.GetAdjective|l]en [Concept('concept_flotilla', '$concept_flotillas$')] und ihre technologische Entwicklung ergeben eine Armee-[concept_power_projection] von #tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_NAVY_POWER_PROJECTION_TOOLTIP [Country.GetArmyPowerProjection|v0]#!#!"
 PANEL_MILITARY_ARMY_CURRENT_BATTALIONS: "@battalions![Country.GetBattalions|0v]"
 BORROW_LENDING_SETTING_HEADER: "#title Leih und Verleih von [Concept('concept_battalion','$concept_battalions$n')]#!"
 BORROW_LENDING_SETTING_OPTION_TOOLTIP: "[MilitaryFormationBorrowSetting.GetName]\n[SelectLocalization(StringIsEmpty(GetDesc(MilitaryFormationBorrowSetting.GetBorrowingCommand)), 'BORROW_LENDING_SETTING_OPTION_TOOLTIP_PROMPT', GetDesc(MilitaryFormationBorrowSetting.GetBorrowingCommand))]\n$TOOLTIP_DELIMITER$\n[MilitaryFormationBorrowSetting.GetDesc]"
 BORROW_LENDING_SETTING_OPTION_TOOLTIP_PROMPT: "#i Zum Auswählen klicken#!"
 BORROW_LENDING_SETTING_OPTION_TOOLTIP_SELECTED: "[MilitaryFormationBorrowSetting.GetName] #i (derzeit aktiv)#!\n$TOOLTIP_DELIMITER$\n[MilitaryFormationBorrowSetting.GetDesc]"
 BORROW_LENDING_SETTING_ANY_NAME: "Alle freundlichen [Concept('concept_army','$concept_armies$')]"
 BORROW_LENDING_SETTING_PLAYER_COUNTRY_ONLY_NAME: "Nur [GetPlayer.GetAdjective|l]e [Concept('concept_army','$concept_armies$')]"
 BORROW_LENDING_SETTING_NONE_NAME: "Nichts"
 BORROW_LENDING_SETTING_ANY_DESC: "Erlaubt das Ausleihen der [Concept('concept_battalion','$concept_battalions$')] von „[MilitaryFormation.GetName]“ durch andere befreundete #b vorrückende#! [Concept('concept_army','$concept_armies$')] an derselben [concept_front] wie „[MilitaryFormation.GetName]“\n\n(Verteidigende [Concept('concept_army','$concept_armies$')] können immer [Concept('concept_battalion','$concept_battalions$')] ausleihen)"
 BORROW_LENDING_SETTING_PLAYER_COUNTRY_ONLY_DESC: "Erlaubt das Ausleihen der [Concept('concept_battalion','$concept_battalions$')] von „[MilitaryFormation.GetName]“ #b nur#! an andere [GetPlayer.GetAdjective|l]e #b vorrückende#! [Concept('concept_army','$concept_armies$')]\n\n(Verteidigende [Concept('concept_army','$concept_armies$')] können immer [Concept('concept_battalion','$concept_battalions$')] ausleihen)"
 BORROW_LENDING_SETTING_NONE_DESC: "Verbietet das Ausleihen der [Concept('concept_battalion','$concept_battalions$')] von „[MilitaryFormation.GetName]“ an andere #b vorrückende#! [Concept('concept_army','$concept_armies$')]\n\n(Verteidigende [Concept('concept_army','$concept_armies$')] können immer [Concept('concept_battalion','$concept_battalions$')] ausleihen)"
 POWER_PROJECTION_FROM_MILITARY_FORMATION: "#tooltippable #tooltip:[MILITARY_FORMATION.GetTooltipTag],MILITARY_FORMATION_POWER_PROJECTION_TOOLTIP $VALUE|=+0$#!#! durch [MILITARY_FORMATION.GetName]"
 MILITARY_FORMATION_POWER_PROJECTION_TOOLTIP: "[MilitaryFormation.GetPowerProjectionDesc]"
 MILITARY_FORMATION_POWER_PROJECTION_DESC: "#header [concept_power_projection]: $TOTAL_POWER_PROJECTION|v0$#!\n$TOOLTIP_DELIMITER$\nDurchschnittliche [concept_offense] und [concept_defense] von $AVERAGE_CE|1v$ verteilt über $TOTAL_MANPOWER|D1$ [concept_manpower] ergibt $TOTAL_POWER_PROJECTION|v0$ $concept_power_projection$ für die Formation."
 REGULARS_AND_CONSCRIPTS: "Berufssoldaten & Wehrpflichtige"
 MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS_WITH_ICON: "[MilitaryFormation.GetUnitIcon]$MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS$"
 MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS: "#v [MilitaryFormation.GetNumCombatUnits]#!/[SelectLocalization(LessThan_int32(MilitaryFormation.GetCommandLimitRaw, MilitaryFormation.GetNumCombatUnits), 'INSUFFICIENT_COMMAND_LIMIT', 'SUFFICIENT_COMMAND_LIMIT')]"
 MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS_NO_LIMIT: "#v [MilitaryFormation.GetNumCombatUnits]#!"
 INSUFFICIENT_COMMAND_LIMIT: "#r [MilitaryFormation.GetCommandLimitRaw]#!"
 SUFFICIENT_COMMAND_LIMIT: "[MilitaryFormation.GetCommandLimitRaw]"
 MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS_TOOLTIP: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_BATTALIONS_TOOLTIP', 'MILITARY_FORMATION_FLOTILLAS_TOOLTIP')]\n$TOOLTIP_DELIMITER$\nDiese [Concept('concept_unit', '$concept_units_short$')] kommen aus:\n[MilitaryFormation.GetBuildingsDesc]"
 POTENTIAL_CONSCRIPTS: "@conscripts!#v [Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumConscriptUnits, MilitaryFormationUnitEntry.GetCurrentNumConscriptUnits)]#! unausgehobene [Concept('concept_conscript_battalion','$concept_conscript_battalions$')]"
 NOT_RAISED_CONSCRIPT: "@conscripts! Unausgehobene [Concept('concept_conscript_battalion','$concept_conscript_battalion_short$')]"
 PANEL_MILITARY_NATIVE_POTENTIAL_BATTALIONS_TOOLTIP: "Sollten [Concept('concept_tension', '$concept_tensions$')] zu einem [concept_native_uprising] führen, wird [Country.GetAltName('NOM')] in der Lage sein, bis zu @battalions![Country.CalcConscriptableBattalions|0] [Concept('concept_battalion', '$concept_battalions$')] aufzustellen."
 PANEL_MILITARY_ARMY_OVERVIEW_TOOLTIP: "#header [Country.GetAdjective|U]e [Concept('concept_battalion', '$concept_battalions$')] und [Concept('concept_conscript_battalion','$concept_conscript_battalions$')]#!\n@battalions![Country.GetRegularBattalions|v] [Concept('concept_battalion', '$concept_battalions$')] (#v [Country.GetMobilizationRatio|0%]#!@mobilization! [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$')])\n@conscripts![Country.GetConscriptedBattalions|v] von [Country.CalcConscriptableBattalions|v] ausgehobene [Concept('concept_conscript_battalion','$concept_conscript_battalions$')]\n$TOOLTIP_DELIMITER$\n$PANEL_MILITARY_ARMY_POWER_PROJECTION$\n\n[Concept('concept_army','$concept_armies$')]:\n[SelectLocalization(IsDataModelEmpty(Country.GetMilitaryFormationsArmy), 'NO_ARMIES_IN_COUNTRY', 'ARMIES_IN_COUNTRY_TOOLTIP_BREAKDOWN')]"
 NO_ARMIES_IN_COUNTRY: "Keine [Concept('concept_army','$concept_armies$')] [Country.GetAltName('IN')]"
 ARMIES_IN_COUNTRY_TOOLTIP_BREAKDOWN: "[Country.GetArmiesBreakdown]"
 ARMY_ENTRY_FORMAT: "$TAB$@battalions!#tooltippable #tooltip:[MILITARY_FORMATION.GetTooltipTag],MILITARY_FORMATION_BATTALIONS_TOOLTIP $NUM_BATTALIONS|v$ #!#! $FORMATION_NAME$"
 MILITARY_FORMATION_BATTALIONS_TOOLTIP: "#header [Concept('concept_battalion', '$concept_battalions$')] in [MilitaryFormation.GetName]#!\n@battalions![MilitaryFormation.GetNumCombatUnits|v] gesamt $INCOMING_NUMBER_OF_REGULARS_LABEL$\n@battalions!#tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_COMMAND_LIMIT_DESC [MilitaryFormation.GetCommandLimit|v]#!#![AddLocalizationIf(LessThan_int32(MilitaryFormation.GetCommandLimitRaw, MilitaryFormation.GetNumCombatUnits), ' @warning!')] [concept_command_limit]\n$TOOLTIP_DELIMITER$\n@battalions!#tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_REGULAR_BATTALIONS_TOOLTIP [MilitaryFormation.GetNumRegulars|v]#!#! Berufssoldaten-[Concept('concept_battalion', '$concept_battalions$')]\n@conscripts!#tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_CONSCRIPT_BATTALIONS_TOOLTIP [MilitaryFormation.GetNumConscripts|v]#!#! ausgehoben von #tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_CONSCRIPT_BATTALIONS_TOOLTIP [MilitaryFormation.GetMaxConscripts|v]#!#! möglichen [Concept('concept_conscript_battalion','$concept_conscript_battalions$n')]"
 MILITARY_FORMATION_REGULAR_BATTALIONS_TOOLTIP: "#header Berufssoldaten-[Concept('concept_battalion', '$concept_battalions$')] in [MilitaryFormation.GetName]#!\n@battalions![MilitaryFormation.GetNumRegulars|v] insgesamt\n@battalions![MilitaryFormation.GetNumFullyMobilizedRegulars|v] [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')|l] ([MilitaryFormation.GetRegularsMobilizationPercentage|%v])\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_group', '$concept_combat_unit_groups$')]:\n[MilitaryFormation.GetRegularsGroupsBreakdown]"
 INCOMING_NUMBER_OF_REGULARS_LABEL: "[SelectLocalization(NotZero(MilitaryFormation.GetIncomingNumRegulars), 'INCOMING_NUMBER_OF_REGULARS', 'NO_INCOMING_NUMBER_OF_REGULARS')]"
 INCOMING_NUMBER_OF_REGULARS: "(+[MilitaryFormation.GetUnitIcon][MilitaryFormation.GetIncomingNumRegulars|v] [Concept('concept_incoming_units', '$concept_incoming_units_short$')|l])"
 NO_INCOMING_NUMBER_OF_REGULARS: ""
 INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE_LABEL: "[SelectLocalization(NotZero(MilitaryFormation.GetIncomingNumRegularsOfUnitType(CombatUnitType.Self)), 'INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE', 'NO_INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE')]"
 INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE: "(+[MilitaryFormation.GetUnitIcon][MilitaryFormation.GetIncomingNumRegularsOfUnitType(CombatUnitType.Self)|v] [Concept('concept_incoming_units', '$concept_incoming_units_short$')|l])"
 NO_INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE: ""
 UNIT_GROUP_ENTRY_FORMAT_REGULAR_BATTALIONS: "$TAB$@battalions!#tooltippable #tooltip:$GROUP_BREAKDOWN_TAG$ $NUM_UNITS|v$#!#! $GROUP_NAME$"
 UNIT_GROUP_REGULAR_BATTALIONS_TOOLTIP: "#header [COMBAT_UNIT_GROUP.GetName] in [MilitaryFormation.GetName]#!\n@battalions![MilitaryFormation.GetNumRegularsUnitsInGroup(COMBAT_UNIT_GROUP.Self)|v] Berufssoldaten-[MilitaryFormation.GetUnitLabel] insgesamt\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')]:\n[MilitaryFormation.GetUnitTypesByRegularsGroupBreakdown(COMBAT_UNIT_GROUP.Self)]"
 UNIT_GROUP_REGULAR_BATTALIONS_NO_ELIGIBLE_GROUPS: "$TAB$Es gibt keine geeigneten [Concept('concept_combat_unit_group', '$concept_combat_unit_groups$')] für Berufssoldaten-[MilitaryFormation.GetUnitLabel] in [MilitaryFormation.GetName]"
 UNIT_GROUP_REGULAR_BATTALIONS_TOOLTIP_FOR_GUI: "#header [CombatUnitGroup.GetName] in [MilitaryFormation.GetName]#!\n@battalions![MilitaryFormation.GetNumRegularsUnitsInGroup(CombatUnitGroup.Self)|v] Berufssoldaten-[MilitaryFormation.GetUnitLabel] insgesamt\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')]:\n[MilitaryFormation.GetUnitTypesByRegularsGroupBreakdown(CombatUnitGroup.Self)][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetUnitTypesByRegularsGroupBreakdown(CombatUnitGroup.Self)), 'NO_REGULAR_UNIT_TYPES_IN_UNIT_GROUP_FORMATION_CONTEXT')]"
 NO_REGULAR_UNIT_TYPES_IN_UNIT_GROUP_FORMATION_CONTEXT: "$TAB$Keine Berufssoldaten-[CombatUnitGroup.GetName] in [MilitaryFormation.GetName]"
 UNIT_GROUP_CONSCRIPT_BATTALIONS_TOOLTIP_FOR_GUI: "#header [Concept('concept_conscript_battalion', 'Wehrpflichtigen')]-[CombatUnitGroup.GetName] in [MilitaryFormation.GetName]#!\n@conscripts![MilitaryFormation.GetNumConscriptsUnitsInGroup(CombatUnitGroup.Self)|v] [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')] insgesamt[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.HasRaisedConscripts), 'NOT_RAISED_CONSCRIPTS'))]\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')]:\n[MilitaryFormation.GetUnitTypesByConscriptsGroupBreakdown(CombatUnitGroup.Self)][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetUnitTypesByConscriptsGroupBreakdown(CombatUnitGroup.Self)), 'NO_CONSCRIPT_UNIT_TYPES_IN_UNIT_GROUP_FORMATION_CONTEXT')]"
 NO_CONSCRIPT_UNIT_TYPES_IN_UNIT_GROUP_FORMATION_CONTEXT: "$TAB$Keine [Concept('concept_conscript_battalion', 'Wehrpflichtigen')]-[CombatUnitGroup.GetName] in [MilitaryFormation.GetName]"
 UNIT_LABEL_ARMY: "[Concept('concept_battalion', '$concept_battalions$')]"
 UNIT_LABEL_NAVY: "[Concept('concept_flotilla', '$concept_flotillas$')]"
 UNIT_LABEL_CONSCRIPTS: "[Concept('concept_conscript_battalion','$concept_conscript_battalions_short$')]"
 UNIT_GROUP_FLOTILLAS_TOOLTIP_FOR_GUI: "#header [CombatUnitGroup.GetName] in [MilitaryFormation.GetName]#!\n@flotillas![MilitaryFormation.GetNumTotalCombatUnitsInGroup(CombatUnitGroup.Self)|v] [MilitaryFormation.GetUnitLabel] insgesamt\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')]:\n[MilitaryFormation.GetUnitTypesByFlotillaGroupBreakdown(CombatUnitGroup.Self)]"
 UNIT_TYPE_REGULAR_BATTALIONS_TOOLTIP: "#header [COMBAT_UNIT_TYPE.GetName] in [MilitaryFormation.GetName]-[MilitaryFormation.GetUnitLabel]#!\n@battalions!$NUM_UNITS_OF_TYPE|v$ insgesamt\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')]:\n[MilitaryFormation.GetRegularUnitsByTypeBreakdown(COMBAT_UNIT_TYPE.Self)]"
 UNIT_TYPE_REGULAR_BATTALIONS_TOOLTIP_FOR_GUI: "#header [MilitaryFormationUnitEntry.GetUnitType.GetName] in [MilitaryFormation.GetName]#!\n[MilitaryFormation.GetUnitIcon]#v [MilitaryFormationUnitEntry.GetCurrentNumRegularUnits]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumRegularUnits, MilitaryFormationUnitEntry.GetCurrentNumRegularUnits), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS')] Berufssoldaten-[MilitaryFormation.GetUnitLabel] insgesamt\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')]:\n[MilitaryFormation.GetRegularUnitsByTypeBreakdown(MilitaryFormationUnitEntry.GetUnitType.Self)][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetRegularUnitsByTypeBreakdown(MilitaryFormationUnitEntry.GetUnitType.Self)), 'NO_UNITS_OF_UNIT_TYPE')]"
 NO_UNITS_OF_UNIT_TYPE: "$TAB$Keine [MilitaryFormationUnitEntry.GetUnitType.GetName] in [MilitaryFormation.GetName]"
 UNIT_TYPE_BATTALIONS_TOOLTIP_FOR_GUI: "#header [CombatUnitType.GetName] in [MilitaryFormation.GetName]#!\n@battalions!#v [MilitaryFormation.GetNumRegularCombatUnitsOfType(MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self))]#! Berufssoldaten-[MilitaryFormation.GetUnitLabel] insgesamt $INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE_LABEL$\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')]:\n[MilitaryFormation.GetRegularUnitsByTypeBreakdown(CombatUnitType.Self)][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetRegularUnitsByTypeBreakdown(CombatUnitType.Self)), 'NO_UNITS_OF_UNIT_TYPE_FORMATION_CONTEXT')]"
 NO_UNITS_OF_UNIT_TYPE_FORMATION_CONTEXT: "$TAB$Keine [CombatUnitType.GetName] in [MilitaryFormation.GetName]"
 UNIT_TYPE_FLOTILLAS_TOOLTIP_FOR_GUI: "#header [CombatUnitType.GetName] in [MilitaryFormation.GetName]#!\n@flotillas!#v [MilitaryFormation.GetNumRegularCombatUnitsOfType(MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self))]#! [MilitaryFormation.GetUnitLabel] insgesamt $INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE_LABEL$\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')]:\n[MilitaryFormation.GetRegularUnitsByTypeBreakdown(CombatUnitType.Self)][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetRegularUnitsByTypeBreakdown(CombatUnitType.Self)), 'NO_UNITS_OF_UNIT_TYPE_FORMATION_CONTEXT')]"
 UNIT_TYPE_FLOTILLAS_TOOLTIP_FOR_GUI_ON_MILITARY_PANEL: "#header [MilitaryFormationUnitEntry.GetUnitType.GetName] in [MilitaryFormation.GetName]#!\n@flotillas!#v [MilitaryFormationUnitEntry.GetCurrentNumRegularUnits]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumRegularUnits, MilitaryFormationUnitEntry.GetCurrentNumRegularUnits), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS')] [MilitaryFormation.GetUnitLabel] insgesamt\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')]:\n[MilitaryFormation.GetRegularUnitsByTypeBreakdown(MilitaryFormationUnitEntry.GetUnitType.Self)][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetRegularUnitsByTypeBreakdown(MilitaryFormationUnitEntry.GetUnitType.Self)), 'NO_UNITS_OF_UNIT_TYPE')]"
 UNIT_TYPE_CONSCRIPT_BATTALIONS_TOOLTIP_FOR_GUI: "#header [Concept('concept_conscript_battalion', 'Wehrpflichtigen')]-[MilitaryFormationUnitEntry.GetUnitType.GetName] in [MilitaryFormation.GetName]#!\n@conscripts!#v [MilitaryFormationUnitEntry.GetCurrentNumConscriptUnits]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumConscriptUnits, MilitaryFormationUnitEntry.GetCurrentNumConscriptUnits), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_CONSCRIPTS')] [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')] insgesamt\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')]:\n[MilitaryFormation.GetConscriptUnitsByTypeBreakdown(MilitaryFormationUnitEntry.GetUnitType.Self)][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetConscriptUnitsByTypeBreakdown(MilitaryFormationUnitEntry.GetUnitType.Self)), 'NO_CONSCRIPT_UNITS_OF_UNIT_TYPE')]"
 UNIT_TYPE_CONSCRIPT_BATTALIONS_TOOLTIP_FOR_GUI_NOT_RAISED: "#header [Concept('concept_conscript_battalion', 'Wehrpflichtigen')]-[CombatUnitType.GetName] in [MilitaryFormation.GetName]#!\n@conscripts!#v [MilitaryFormationUnitEntry.GetExpectedNumConscriptUnits]#! [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')] insgesamt[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.HasRaisedConscripts), 'NOT_RAISED_CONSCRIPTS'))]"
 UNIT_TYPE_CONSCRIPT_TOOLTIP_FOR_GUI_RAISED: "#header [Concept('concept_conscript_battalion', 'Wehrpflichtigen')]-[CombatUnitType.GetName] in [MilitaryFormation.GetName]#!\n@conscripts!#v [MilitaryFormation.GetNumConscriptsCombatUnitsOfType(MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self)]#! [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')] insgesamt[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.HasRaisedConscripts), 'NOT_RAISED_CONSCRIPTS'))]\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')]:\n[MilitaryFormation.GetConscriptUnitsByTypeBreakdown(CombatUnitType.Self)][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetConscriptUnitsByTypeBreakdown(CombatUnitType.Self)), 'NO_CONSCRIPT_UNITS_OF_UNIT_TYPE_FORMATION_CONTEXT')]"
 UNIT_TYPE_CONSCRIPT_TOOLTIP_FOR_GUI_NOT_RAISED: "#header [Concept('concept_conscript_battalion', 'Wehrpflichtigen')]-[CombatUnitType.GetName] in [MilitaryFormation.GetName]#!\n@conscripts!#v [MilitaryFormation.GetNumExpectedConscriptsCombatUnitsOfType(MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self)]#! [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')] insgesamt[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.HasRaisedConscripts), 'NOT_RAISED_CONSCRIPTS'))]"
 UNIT_GROUP_CONSCRIPT_TOOLTIP_FOR_GUI_NOT_RAISED: "#header [Concept('concept_conscript_battalion', 'Wehrpflichtigen')]-[CombatUnitGroup.GetName] in [MilitaryFormation.GetName]#!\n@conscripts!#v [MilitaryFormation.GetNumExpectedConscriptsUnitsInGroup(CombatUnitGroup.Self)]#! [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')] insgesamt[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.HasRaisedConscripts), 'NOT_RAISED_CONSCRIPTS'))]"
 NOT_RAISED_CONSCRIPTS: "#r Unausgehoben#!"
 NO_CONSCRIPT_UNITS_OF_UNIT_TYPE: "$TAB$Keine [MilitaryFormationUnitEntry.GetUnitType.GetName] in [MilitaryFormation.GetName]"
 NO_CONSCRIPT_UNITS_OF_UNIT_TYPE_FORMATION_CONTEXT: "$TAB$Keine [Concept('concept_conscript_battalion', 'Wehrpflichtigen')]-[CombatUnitType.GetName] in [MilitaryFormation.GetName]"
 MILITARY_FORMATION_CONSCRIPT_BATTALIONS_TOOLTIP: "#header [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')] in [MilitaryFormation.GetName]#!\n@battalions![MilitaryFormation.GetNumConscripts|v] ausgehoben von insgesamt [MilitaryFormation.GetMaxConscripts|v]\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_group', '$concept_combat_unit_groups$')]:\n[MilitaryFormation.GetConscriptsGroupsBreakdown]"
 UNIT_GROUP_ENTRY_FORMAT_CONSCRIPT_BATTALIONS: "$TAB$@battalions!#tooltippable #tooltip:$GROUP_BREAKDOWN_TAG$ $NUM_UNITS|v$#!#! $GROUP_NAME$"
 UNIT_GROUP_CONSCRIPT_BATTALIONS_TOOLTIP: "#header [COMBAT_UNIT_GROUP.GetName] in [MilitaryFormation.GetName] aus [Concept('concept_conscript_battalion', 'Wehrpflichtigen')]#!\n@battalions![MilitaryFormation.GetNumRegulars|v] insgesamt\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')]:\n[MilitaryFormation.GetUnitTypesByConscriptsGroupBreakdown(COMBAT_UNIT_GROUP.Self)]"
 UNIT_GROUP_CONSCRIPT_BATTALIONS_NO_ELIGIBLE_GROUPS: "$TAB$Es gibt keine geeigneten [Concept('concept_combat_unit_group', '$concept_combat_unit_groups$')] für [Concept('concept_conscript_battalion', 'Wehrpflichtige')] in [MilitaryFormation.GetName]"
 UNIT_TYPE_CONSCRIPT_BATTALIONS_TOOLTIP: "#header [COMBAT_UNIT_TYPE.GetName] in [MilitaryFormation.GetName] mit [Concept('concept_conscript_battalion', 'Wehrpflichtigen')]#!\n@battalions!$NUM_UNITS_OF_TYPE|v$ insgesamt\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')]:\n[MilitaryFormation.GetConscriptUnitsByTypeBreakdown(COMBAT_UNIT_TYPE.Self)]"
 UNIT_TYPE_ENTRY_FORMAT_BATTALIONS: "$TAB$@battalions!#tooltippable #tooltip:$UNIT_TYPE_BREAKDOWN_TAG$ $NUM_UNITS_OF_TYPE|v$ #!#! $UNIT_TYPE_NAME$"
 UNIT_ENTRY_FORMAT: "$TAB$@manpower! #tooltippable #tooltip:$UNIT_MANPOWER_BREAKDOWN_TAG$ $UNIT_MANPOWER|v$#!#! $UNIT_NAME$"
 BATTLE_UNIT_TYPE_REGULARS_TOOLTIP: "Es gibt @battalions! [BattleUnitType.GetNumberOfRegularUnits|v] [CombatUnitType.GetName]-[Concept('concept_battalion', '$concept_battalions$')] in dieser Schlacht"
 BATTLE_UNIT_TYPE_CONSCRIPT_TOOLTIP: "Es gibt @conscripts! [BattleUnitType.GetNumberOfConscriptUnits|v] [CombatUnitType.GetName] [Concept('concept_conscript_battalion','$concept_conscript_battalions$')] in dieser Schlacht"
 BATTLE_UNIT_TYPE_WARSHIPS_TOOLTIP: "Es gibt @flotillas! [BattleUnitType.GetNumberOfRegularUnits|v] [CombatUnitType.GetName]-[Concept('concept_battalion', '$concept_battalions$')] in dieser Schlacht"
 BATTLE_UNIT_TYPE_AVERAGE_MORALE: "Durchschnittliche Moral der Einheiten liegt bei #[GetMoraleColorString( BattleUnitType.GetAverageMorale)] [BattleUnitType.GetAverageMorale|0%]#!"
 BATTLE_MILITARY_FORMATION_TOOLTIP: "#header [concept_manpower]#!\n@manpower![BattleMilitaryFormation.GetCurrentManpowerFromFormation|vK] / #maximum [BattleMilitaryFormation.GetMaxManpowerFromFormation|vK]#! [concept_manpower]"
 BATTLE_MILITARY_FORMATION_OFFENSE_TOOLTIP: "#header [concept_offense]#!\n@unit_offense! [BattleMilitaryFormation.GetAverageOffense|1v] [concept_offense] im Durchschnitt"
 BATTLE_MILITARY_FORMATION_DEFENSE_TOOLTIP: "#header [concept_defense]#!\n@unit_defense! [BattleMilitaryFormation.GetAverageDefense|1v] [concept_defense] im Durchschnitt"
 BATTLE_MILITARY_FORMATION_MORALE_TOOLTIP: "#header [concept_morale]#!\nDurchschnittliche $concept_morale$ von [Concept('concept_unit','$concept_units$')] in „[MilitaryFormation.GetName]“ ist #BOLD #[GetMoraleColorString( BattleMilitaryFormation.GetCurrentMorale)] [BattleMilitaryFormation.GetCurrentMorale|0%]#!#!"
 PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS: "@flotillas! [Country.GetWarships|0v]"
 PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP: "#header [Country.GetAdjective|U]e [Concept('concept_flotilla','$concept_flotillas$')]#!\nDerzeit: @flotillas! [Country.GetWarships|v] ([Country.GetFlotillasRanking])\n$TOOLTIP_DELIMITER$\n$PANEL_MILITARY_NAVY_POWER_PROJECTION$\n\n[Concept('concept_fleet','$concept_fleets$')]:\n[SelectLocalization(IsDataModelEmpty(Country.GetMilitaryFormationsFleet), 'NO_FLEETS_IN_COUNTRY', 'FLEETS_IN_COUNTRY_TOOLTIP_BREAKDOWN')]"
 PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP_LEFT: "#header Gesamtzahl an [Concept('concept_flotilla', '$concept_flotillas$')]#!\n[WarPanel.GetLeftLeader.GetAltName('NOM')|U] besitzt derzeit @flotillas![WarPanel.GetLeftLeader.GetWarships|v] Flottillen\n\n[WarPanel.GetLeftLeader.GetWarshipsBreakdown]"
 PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP_RIGHT: "#header Gesamtzahl an [Concept('concept_flotilla', '$concept_flotillas$')]#!\n[WarPanel.GetRightLeader.GetAltName('NOM')|U] besitzt derzeit @flotillas![WarPanel.GetRightLeader.GetWarships|v] Flottillen\n\n[WarPanel.GetRightLeader.GetWarshipsBreakdown]"
 NO_FLEETS_IN_COUNTRY: "Keine [Concept('concept_fleet','$concept_fleets$')] in [Country.GetName]"
 FLEETS_IN_COUNTRY_TOOLTIP_BREAKDOWN: "[Country.GetFleetsBreakdown]"
 FLEET_ENTRY_FORMAT: "$TAB$@flotillas!#tooltippable #tooltip:[MILITARY_FORMATION.GetTooltipTag],MILITARY_FORMATION_FLOTILLAS_TOOLTIP $NUM_FLOTILLAS|v$ #!#! $FORMATION_NAME$"
 MILITARY_FORMATION_FLOTILLAS_TOOLTIP: "#header [Concept('concept_flotilla','$concept_flotillas$')] in [MilitaryFormation.GetName]#!\n@flotillas![MilitaryFormation.GetNumCombatUnits|v] insgesamt $INCOMING_NUMBER_OF_REGULARS_LABEL$\n@flotillas! #tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_COMMAND_LIMIT_DESC [MilitaryFormation.GetCommandLimit|v]#!#![AddLocalizationIf(LessThan_int32(MilitaryFormation.GetCommandLimitRaw, MilitaryFormation.GetNumCombatUnits), ' @warning!')] [concept_command_limit]\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_group', '$concept_combat_unit_groups$')]:\n[MilitaryFormation.GetFlotillaGroupsBreakdown]"
 UNIT_GROUP_ENTRY_FORMAT_FLOTILLAS: "$TAB$@flotillas! #tooltippable #tooltip:$GROUP_BREAKDOWN_TAG$ $NUM_UNITS|v$#!#! $GROUP_NAME$"
 UNIT_GROUP_FLOTILLAS_TOOLTIP: "#header [COMBAT_UNIT_GROUP.GetName] in [MilitaryFormation.GetName]-[Concept('concept_flotilla', '$concept_flotillas$')]#!\n@flotillas![MilitaryFormation.GetNumCombatUnits|v] insgesamt\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')]:\n[MilitaryFormation.GetUnitTypesByFlotillaGroupBreakdown(COMBAT_UNIT_GROUP.Self)]"
 UNIT_TYPE_ENTRY_FORMAT_FLOTILLAS: "$TAB$@flotillas! #tooltippable #tooltip:$UNIT_TYPE_BREAKDOWN_TAG$ $NUM_UNITS_OF_TYPE|v$ #!#! $UNIT_TYPE_NAME$"
 UNIT_GROUP_FLOTILLAS_NO_ELIGIBLE_GROUPS: "$TAB$Es gibt keine geeigneten [Concept('concept_combat_unit_group', '$concept_combat_unit_groups$')] für [Concept('concept_flotilla', '$concept_flotillas$')] in [MilitaryFormation.GetName]"
 UNIT_TYPE_FLOTILLAS_TOOLTIP: "#header [COMBAT_UNIT_TYPE.GetName] in [MilitaryFormation.GetName]-[Concept('concept_flotilla', '$concept_flotillas$')]#!\n@flotillas! $NUM_UNITS_OF_TYPE|v$ insgesamt\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')]:\n[MilitaryFormation.GetRegularUnitsByTypeBreakdown(COMBAT_UNIT_TYPE.Self)]"
 UNIT_MANPOWER_TOOLTIP: "#header $UNIT_NAME$ [concept_manpower]#!\nDerzeit: @manpower! $UNIT_MANPOWER|v$\n$TOOLTIP_DELIMITER$\n$UNIT_MORALE|v%$ [concept_morale]\n@manpower! $UNIT_DEMORALIZED|v$ [concept_morale_demoralized|l]\n@unit_offense! $UNIT_OFFENSE|v$ [concept_offense]\n@unit_defense! $UNIT_DEFENSE|v$ [concept_defense]"
 PANEL_MILITARY_ARMY_CURRENT_BATTALIONS_TOOLTIP: "#header [Country.GetAdjective|U]e Gesamtzahl an [Concept('concept_battalion', 'Bataillonen')]#!\nDerzeit:@battalions!#v [Country.GetBattalions|v]#!\n$TOOLTIP_DELIMITER$\n[Country.GetBattalionsDesc]\n\n[Concept('concept_army','$concept_armies$')]:\n[SelectLocalization(IsDataModelEmpty(Country.GetMilitaryFormationsArmy), 'NO_ARMIES_IN_COUNTRY', 'ARMIES_IN_COUNTRY_TOOLTIP_BREAKDOWN')]"
 PANEL_MILITARY_ARMY_CURRENT_TOTAL_BATTALIONS_DESC: "$COUNTRY$ hat derzeit @battalions!$BATTALIONS|v$ ([Country.GetBattalionsRanking])\n$PANEL_MILITARY_ARMY_POWER_PROJECTION$"
 PANEL_MILITARY_ARMY_CURRENT_REGULARS_DESC: "$COUNTRY$ hat derzeit @battalions!$REGULAR_BATTALIONS|v$ von maximal $POTENTIAL|v$ [Concept('concept_potential_battalions', 'Potenziellen Berufssoldaten')]."
 PANEL_MILITARY_ARMY_CURRENT_BATTALIONS_MOBILIZED_DESC: "$COUNTRY$ hat derzeit @battalions!$REGULAR_BATTALIONS|v$ reguläre Bataillone und @battalions!$CONSCRIPT_BATTALIONS|v$ einberufene Bataillone."
 PANEL_MILITARY_ARMY_SIZE_CAPACITY_TOOLTIP: "Anzahl an potenziell ausbildbaren #variable Bataillonen#!"
 BATTALION_TRAVEL_DESC: "#variable +[CHARACTER.GetCombatUnitsTypeIcon] $VALUE|v$#! in #variable $DAYS$#! Tag(en)"
 BATTALION_TRAVEL_BREAKDOWN: "[CHARACTER.GetCombatUnitsTypeIcon] #variable $VALUE$#! von [BUILDING.GetState.GetName]"
 BATTALION_SOURCES_BREAKDOWN_SUPPLY: "#BOLD #$COLOR$ $VALUE|%0$#!#! [concept_supply]"
 BATTALION_SOURCES_UNIT_NAME_ARMY: "[Concept('concept_battalion', '$concept_battalions$')]"
 BATTALION_SOURCES_UNIT_NAME_NAVY: "[Concept('concept_flotilla', '$concept_flotillas$')]"
 BATTALION_SOURCES_BREAKDOWN_UNITS: "[GetUnitStrengthHeader($CURRENT$, $MAX$, $ICON$)]"
 BATTALION_SOURCES_BREAKDOWN: "[GetUnitStrengthHeader('(int64)$CURRENT$', '(int64)$MAX$', '$ICON$')] $UNIT_NAME$ durch [BUILDING.GetState.GetName] (#BOLD #$MORALE_COLOR$ $MORALE|%0$#!#! [concept_morale] und $SUPPLY$)"
 BATTALION_SOURCES_BREAKDOWN_CLEAN: "[GetUnitStrengthHeader('(int64)$CURRENT$', '(int64)$MAX$', '$ICON$')] $UNIT_NAME$ durch [BUILDING.GetState.GetName]"
 BATTALION_CAPACITY_DESC: "@battalions! $COUNT|v$ [Concept('concept_battalion', '$concept_battalions$')]"
 FLOTILLAS_CAPACITY_DESC: "@flotillas! $COUNT|v$ [Concept('concept_flotilla', '$concept_flotillas$')]"
 BATTALION_CAPACITY_SOURCES_BREAKDOWN: "@battalions! $COUNT|v$ in [STATE.GetName]"
 FLOTILLAS_CAPACITY_SOURCES_BREAKDOWN: "@flotillas! $COUNT|v$ in [STATE.GetName]"
 BATTALION_CAPACITY_SOURCES_BREAKDOWN_UNUSED: " (Platz für #variable @$ICON_STR$! $REMAINING_CAPACITY|1$#! weitere)"
 INVASION_PLANNER_HEADER: "[InvasionPlannerPopup.GetTargetState.GetNameWithCountryFlag] $concept_invade$"
 SELECT_ARMY: "[concept_army] auswählen"
 SELECT_FLEET: "[concept_fleet] auswählen"
 SELECT_MILITARY_FORMATION: "[concept_military_formation] auswählen"
 ARMY: "$concept_army$"
 ARMIES: "$concept_armies$"
 FLEET: "$concept_fleet$"
 FLEETS: "$concept_fleets$"
 LAND_INVASION_NAME: "[concept_invasion] in „[State.GetNameWithCountryFlag]“"
 NAVAL_INVASION_NAME: "[concept_naval_invasion] in „[State.GetNameWithCountryFlag]“"
 INVASION_PLANNER_ARMY_WILL_MOBILIZE: "[MilitaryFormation.GetName] wird [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilize$')|l]"
 INVASION_PLANNER_ARMY_NOT_MOBILIZED: "#r Noch nicht#! [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')|l]"
 INVASION_PLANNER_ARMY_IS_MOBILIZED: "[MilitaryFormation.GetName] ist [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')|l]"
 INVASION_PLANNER_TRAVEL_TIME_LABEL: "Reisezeit: #v $TIME$#!"
 INVASION_PLANNER_EFFICIENCY_LABEL: "Geschätzte Effizienz für Marineinvasion: [InvasionPlannerPopup.GetEfficiencyRaw|%1v]"
 INVASION_PLANNER_PENALTIES_LABEL: "@warning! Wir haben zu wenig @flotillas! [Concept('concept_flotilla','$concept_flotillas$')] für diese [concept_army]!\nDies führt zu einem Abzug von #r -[InvasionPlannerPopup.GetLandingPenaltyModifierMultiplier|%1]#! Invasionseffizienz."
 INVASION_PLANNER_CONFIRM_TOOLTIP: "[SelectLocalization(InvasionPlannerPopup.HasNavalInvasionContext, 'INVASION_PLANNER_CONFIRM_NAVAL_INVASION', 'INVASION_PLANNER_CONFIRM_INVASION')][ConcatIfNeitherEmpty('\n', InvasionPlannerPopup.GetCommandValidityDesc)][ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', AddLocalizationIf(InvasionPlannerPopup.HasSelectedNecessaryFormations, InvasionPlannerPopup.GetTravelDaysDesc))]"
 INVASION_PLANNER_CONFIRM_NAVAL_INVASION: "#header Diese [concept_naval_invasion] bestätigen#!"
 INVASION_PLANNER_CONFIRM_INVASION: "#header Diese [concept_invasion] bestätigen#!"
 INVASION_PLANNER_TRAVEL_DAYS_DESC: "#v $TIME$#! Reisezeit nach „[InvasionPlannerPopup.GetTargetState.GetCountry.GetFlagTextIcon] [InvasionPlannerPopup.GetTargetState.GetName]“\n\n[AddLocalizationIf(InvasionPlannerPopup.HasSelectedNecessaryFormations,InvasionPlannerPopup.GetFleetDaysDesc)]\n[AddLocalizationIf(InvasionPlannerPopup.HasSelectedNecessaryFormations,InvasionPlannerPopup.GetArmyDaysDesc)]"
 INVASION_PLANNER_LAND_INVASION_TRAVEL_DAYS_DESC: "#v $TIME$#! Reisezeit nach „[InvasionPlannerPopup.GetSourceState.GetNameWithCountryFlag]“"
 INVASION_PLANNER_FLEET_DAYS_DESC: "Flotte:\n$TAB$$TIME$ [InvasionPlannerPopup.GetSlowestFleet.GetName]: @flotillas! [InvasionPlannerPopup.GetSlowestFleet.GetNumCombatUnits|v]"
 INVASION_PLANNER_ARMY_DAYS_DESC: "Armee:\n$TAB$$TIME$ [InvasionPlannerPopup.GetSlowestArmy.GetName]: @battalions! [InvasionPlannerPopup.GetSlowestArmy.GetNumCombatUnits|v]"
 INVASION_PLANNER_INVASION_FROM_STATE: "Verfügbare $concept_invasion$ über „[InvasionPlannerPopup.GetSourceState.GetNameWithCountryFlag]“"
 ADD_MILITARY_FORMATION_ARMY: "Eine [concept_army] dieser [concept_invasion] hinzufügen"
 ADD_MILITARY_FORMATION_FLEET: "Eine [concept_fleet] dieser [concept_naval_invasion] hinzufügen"
 REMOVE_FORMATION: "„[MilitaryFormation.GetName|U]“ aus dieser [concept_invasion] entfernen"
 TRANSFER_POPUP_HEADER: "Einheiten verlegen"
 CHANGE_A_FORMATION: "Klicken, um [Concept('concept_unit','$concept_units$')] #b zu/von#! [concept_military_formation] zu verlegen"
 CHANGE_B_FORMATION: "Klicken, um [Concept('concept_unit','$concept_units$')] #b zu/von#! [concept_military_formation] zu verlegen"
 SELECT_MILITARY_FORMATION_TO_SEND_FROM: "Eine [concept_military_formation] auswählen, #b zu/von#! der [Concept('concept_unit','$concept_units$')] verlegt werden sollen"
 SELECT_MILITARY_FORMATION_TO_SEND_TO: "Eine [concept_military_formation] auswählen, #b zu/von#! der [Concept('concept_unit','$concept_units$')] verlegt werden sollen"
 TRANSFER_FORMATION_SELECT_ARMY: "#header [MilitaryFormation.GetName] auswählen#!\n@green_checkmark_box! Eine [concept_army] auswählen, #b zu/von#! der verlegt wird"
 TRANSFER_FORMATION_SELECT_FLEET: "#header [MilitaryFormation.GetName] auswählen#!\n@green_checkmark_box! Eine [concept_fleet] auswählen, #b zu/von#! der verlegt wird"
 TRANSFER_FORMATION_TRAVEL_TIME_LABEL: "Reisezeit: #v $TIME$#!"
 TRANSFER_FORMATION_COMMANDER_LIST_HEADER: "#header Ausgewählte Befehlshaber:#!"
 TRANSFER_FORMATION_COMMANDER_LIST_FORMAT: "$TRANSFER_FORMATION_COMMANDER_LIST_HEADER$\n$SELECTED_COMMANDERS$"
 TRANSFER_FORMATION_UNIT_LIST_HEADER: "#header Ausgewählte Einheiten:#!"
 TRANSFER_FORMATION_UNIT_LIST_FORMAT: "$TRANSFER_FORMATION_UNIT_LIST_HEADER$\n$SELECTED_UNITS$"
 TRANSFER_COMMANDER: "$TAB$$COMMANDER_NAME$"
 TRANSFER_BATTALION: "$TAB$@battalions! $NUM|v$ – $UNIT_NAME$"
 TRANSFER_FLOTILLA: "$TAB$@flotillas! $NUM|v$ – $UNIT_NAME$"
 TRANSFER_EFFECT_SPLIT: "Dadurch werden die ausgewählten [Concept('concept_commander', '$concept_commanders$')] und [Concept('concept_unit', '$concept_units$')] in eine eigene [concept_military_formation] verlegt. Während der Verlegung werden $concept_commanders$ and $concept_units$ [Concept('concept_mobilize_army', 'demobilisiert')]."
 TRANSFER_EFFECT_LOCAL_TRANSFER: "Dadurch werden die ausgewählten [Concept('concept_commander', '$concept_commanders$')] und [Concept('concept_unit', '$concept_units$')] von „$SOURCE_FORMATION_NAME$“ zu „$TARGET_FORMATION_NAME$“ verlegt. Während der Verlegung werden $concept_commanders$ and $concept_units$ [Concept('concept_mobilize_army', 'demobilisiert')]."
 TRANSFER_EFFECT_REMOTE_TRANSFER: "Dadurch werden die ausgewählten [Concept('concept_commander', '$concept_commanders$')] und [Concept('concept_unit', '$concept_units$')] in eine eigene [concept_military_formation] verlegt, die sich sofort auf den Weg zu einer bestimmten Formation ($TARGET_FORMATION_NAME$) macht. Treffen sich die beiden [Concept('concept_military_formation', '$concept_military_formations$')], werden die ausgewählten [Concept('concept_commander', '$concept_commanders$')] und [Concept('concept_unit', '$concept_units$')] auf diese bestimmte Formation ($TARGET_FORMATION_NAME$) übertragen, sofern die neu erzeugte [concept_military_formation] in der Zwischenzeit nicht mit etwas anderem beauftragt wurde. Während der Verlegung werden $concept_commanders$ and $concept_units$ [Concept('concept_mobilize_army', 'demobilisiert')]."
 TRANSFER_FORMATION_GO_HOME_WARNING: "@warning! Dies wird [MILITARY_FORMATION.GetName] in [HQ.GetName] stationieren"
 TRANSFER_NEW_FORMATION_GO_HOME_WARNING: "@warning! Dies wird eine neue [concept_military_formation] in [HQ.GetName] stationieren"
 TRANSFER_CONFIRM: "[AddTextIf(Not(StringIsEmpty(TransferFormationPopup.GetWarningsDesc)), Concatenate('@warning!', ' '))]$CONFIRM$"
 TRANSFER_FORMATION_POPUP_CONFIRM_TOOLTIP: "[SelectLocalization(StringIsEmpty(GetDesc(TransferFormationPopup.Confirm)), TransferFormationPopup.GetConfirmDesc, GetDesc(TransferFormationPopup.Confirm))]"
 TRANSFER_FORMATION_POPUP_CONFIRM_DESC: "#header Diese Versetzung bestätigen#![ConcatIfNeitherEmpty('\n', TransferFormationPopup.GetWarningsDesc)][ConcatIfNeitherEmpty('\n', TransferFormationPopup.GetHintDesc)]\n[ConcatIfNeitherEmpty(AddTextIf(IsValid(TransferFormationPopup.Confirm), TransferFormationPopup.GetTravelTimeDesc), '\n')]$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(AddLocalizationIf(TransferFormationPopup.CanReset, 'TRANSFER_RESULTING_NUMBERS_DESC'), '\n\n')][ConcatIfNeitherEmpty(TransferFormationPopup.GetOrganizationImpactDesc,'\n\n')]$VISIBLE_EFFECT_EXPLANATION$"
 TRANSFER_RESULTING_NUMBERS_DESC: "#title Dies wird zu Folgendem führen:#!\n[TransferFormationPopup.GetLeftStagedFormation.GetResultingNumbersDesc]\n\n[TransferFormationPopup.GetRightStagedFormation.GetResultingNumbersDesc]"
 TRANSFER_RESULT_FORMAT: "$TRANSFER_RESULT_FORMATION$:\n[StagedFormation.GetFormationResultBreakdown]"
 TRANSFER_RESULT_FORMATION: "[SelectLocalization(StagedFormation.HasValidFormation, 'TRANSFER_RESULT_HAS_FORMATION', 'TRANSFER_RESULT_NO_FORMATION')]"
 TRANSFER_RESULT_HAS_FORMATION: "[StagedFormation.GetName]"
 TRANSFER_RESULT_NO_FORMATION: "Neue [concept_military_formation]"
 TRANSFER_RESULT_NO_COMMANDERS: "@warning! Keine [Concept('concept_commander','$concept_commanders$')]"
 TRANSFER_RESULT_NO_UNITS: "@warning! Keine [Concept('concept_unit','$concept_units$')]"
 TRANSFER_RESULT_NOTHING: "Diese [concept_military_formation] wird #r aufgelöst#!"
 TRANSFER_RESULT_COMMANDER: "$CHARACTER_FULL_NAME$ wird hierher verlegt werden"
 TRANSFER_RESULT_UNIT_TYPE: "$UNIT_ICON$ #v $RESULTING_UNIT_NUMBER$#! $UNIT_TYPE_NAME$"
 COMMANDER_TRANSFER_LIMIT_REACHED: "@red_cross! Die andere Seite hat das Maximum von [GetDefine('NMilitary','MAX_NUM_COMMANDERS_PER_FORMATION')|0v] [Concept('concept_commander','$concept_commanders$n')] erreicht"
 MOVE_AT_LEAST_ONE_UNIT: "@simple_box! Mindestens [SelectLocalization(TransferFormationPopup.HasArmyContext, '@battalions!', '@flotillas!')] #v 1#! [concept_unit] oder einen [concept_commander] in die andere [concept_military_formation] verlegen"
 TRANSFER_FORMATION_CONFIRMATION_SOURCE_WILL_BE_GONE: "Sind Sie sicher, dass Sie $SOURCE_NAME|v$ in Gänze nach $TARGET_NAME|v$ verlegen wollen?"
 SELECT_UNIT_TYPE_TO_TRANSFER: "Diese [concept_combat_unit_type] für die Verlegung auswählen"
 SELECT_UNIT_TO_TRANSFER: "Diese [concept_unit] für Verlegung auswählen"
 NO_FORMATION_SELECTED: "Keine [concept_military_formation] ausgewählt"
 NO_FORMATION_COMMANDERS: "Keine [Concept('concept_commander','$concept_commanders$')] in dieser [concept_military_formation]"
 THIS_WILL_CREATE_A_NEW_MILITARY_FORMATION: "Das Verlegen von [Concept('concept_unit','$concept_units$')] und [Concept('concept_commander', '$concept_commanders$n')] hierher ohne ausgewählte [concept_military_formation] würde eine neue $concept_military_formation$ erzeugen, wenn es bestätigt wird"
 TRANSFER_FORMATION_SELECT_UNITS_TO_TRANSFER: "$concept_units$ für Versetzung auswählen"
 TRANSFER_FORMATION_SELECT_COMMANDERS_TO_TRANSFER: "$concept_commanders$ für Verlegung auswählen"
 SELECT_COMMANDER_TO_TRANSFER: "Diesen [concept_commander] auswählen"
 NO_COMMANDERS_IN_MILITARY_FORMATION: "Keine [Concept('concept_commander','$concept_commanders$')] in dieser [concept_military_formation]"
 NO_UNITS_IN_MILITARY_FORMATION: "Keine [Concept('concept_unit','$concept_units$')] in dieser [concept_military_formation]"
 NO_UNITS_IN_UNIT_GROUP: "Keine „#b [CombatUnitGroup.GetName]#!“-[Concept('concept_unit','$concept_units$')]"
 TRANSFER_FORMATION_MOVE_UNITS_TOOLTIP: "#header [SelectLocalization(TransferFormationPopup.HasArmyContext, '@battalions!', '@flotillas!')] #v [StagedUnitsWithType.GetNumSelectedRegulars]#! [SelectLocalization(TransferFormationPopup.HasArmyContext, 'CONCEPT_REGULAR_BATTALIONS', 'CONCEPT_FLOTILLAS')] zur anderen [concept_military_formation] verlegen#![ConcatIfNeitherEmpty('\n\n', StagedUnitsWithType.GetInvalidRegularTransferDesc)]"
 TRANSFER_FORMATION_NO_UNITS_SELECTED: "@simple_box! Wählen Sie mindestens [SelectLocalization(TransferFormationPopup.HasArmyContext, '@battalions!', '@flotillas!')] #v 1#! [SelectLocalization(TransferFormationPopup.HasArmyContext, 'CONCEPT_REGULAR_BATTALION', 'CONCEPT_FLOTILLA')] in dieser [Concept('concept_combat_unit_type','$concept_combat_unit_type_short$')] zum Verlegen aus"
 CONCEPT_REGULAR_BATTALION: "Berufssoldaten-[concept_battalion]"
 CONCEPT_REGULAR_BATTALIONS: "Berufssoldaten-[Concept('concept_battalion', '$concept_battalions$')]"
 CONCEPT_FLOTILLA: "[concept_flotilla]"
 CONCEPT_FLOTILLAS: "[Concept('concept_flotilla','$concept_flotillas$')]"
 REMOVE_SOURCE_FORMATION: "[TransferFormationPopup.GetLeftFormation.GetName] abwählen"
 REMOVE_TARGET_FORMATION: "[TransferFormationPopup.GetRightFormation.GetName] abwählen"
 TRANSFER_FORMATION_MOVE_CONSCRIPT_BATTALIONS_TOOLTIP: "#header @conscripts! #v [StagedUnitsWithType.GetNumSelectedConscripts]#! in die andere [concept_military_formation] verlegen#![ConcatIfNeitherEmpty('\n\n', StagedUnitsWithType.GetInvalidConscriptTransferDesc)]"
 TRANSFER_FORMATION_NO_CONSCRIPTS_SELECTED: "@simple_box! Wählen Sie mindestens @conscripts! #v 1#! [concept_conscript_battalion] in dieser [Concept('concept_combat_unit_type','$concept_combat_unit_type_short$')] zum Verlegen aus"
 TRANSFER_FORMATION_MOVE_COMMANDER_TOOLTIP: "#header [StagedCommanderTransfer.GetCommander.GetFirstName] zu anderer [concept_military_formation] verlegen#![ConcatIfNeitherEmpty('\n\n', TransferFormationPopup.GetInvalidCommanderTransferDesc(StagedCommanderTransfer.AccessSelf))]"
 MOVE: "Verlegen"
 BY_NAME: "Name"
 BY_ALL_STATES: "Alle [Concept('concept_state','$concept_states$')]"
 BY_SPECIFIC_STATE: "Über einen [concept_state]"
 BY_SPECIFIC_STATE_SELECTED: "Über „[StagedUnitsWithType.GetStateFilter.GetName]“"
 TRANSFER_UNIT_TYPE_NAME: "#tooltippable_name [CombatUnitType.GetNameNoFormatting]#![AddTextIf(StagedUnitsWithType.HasMoved, ' #i verlegt#!')]"
 CREATE_NEW_ARMY: "Neue [concept_army]"
 CREATE_NEW_FLEET: "Neue [concept_fleet]"
 SELECT_NEW_FORMATION: "Eine neue [concept_military_formation] erschaffen, zu der verlegt wird"
 SELECT_NEW_FORMATION_SELECTED: "Eine neue [concept_military_formation] erschaffen, zu der verlegt wird\n#i Derzeit ausgewählt#!"
 SELECT_NEW_ARMY: "Eine neue [concept_army] erschaffen, zu der verlegt wird"
 SELECT_NEW_ARMY_SELECTED: "Eine neue [concept_army] erschaffen, zu der verlegt wird\n#i Derzeit ausgewählt#!"
 SELECT_NEW_FLEET: "Eine neue [concept_fleet] erschaffen, zu der verlegt wird"
 SELECT_NEW_FLEET_SELECTED: "Eine neue [concept_fleet] erschaffen, zu der verlegt wird\n#i Derzeit ausgewählt#!"
 CURRENTLY_SELECTED: "#i Derzeit ausgewählt#!"
 UNIT_TYPE_UNITS_IN_STATE: "[MilitaryFormation.GetUnitIcon] #v [StagedUnitsWithType.GetNumRegularsInState(State.AccessSelf)]#![AddLocalizationIf(MilitaryFormation.IsArmy, 'UNIT_TYPE_CONSCRIPT_UNITS_IN_STATE')]"
 UNIT_TYPE_CONSCRIPT_UNITS_IN_STATE: " | @conscripts! #v [StagedUnitsWithType.GetNumConscriptsInState(State.AccessSelf)]#!"
 SELECT_STATE_TO_FILTER_ON: "[concept_state] auswählen, auf den gefiltert wird"
 FILTER_UNITS_IN_STATE_TOOLTIP: "#header [StagedUnitsWithType.GetUnitType.GetName]-[Concept('concept_unit','$concept_units$')] in „[State.GetName]“ anzeigen#!\n$FILTER_UNITS_IN_STATE_TOOLTIP_BREAKDOWN$"
 FILTER_UNITS_IN_STATE_TOOLTIP_BREAKDOWN: "[MilitaryFormation.GetUnitIcon] #v [StagedUnitsWithType.GetNumRegularsInState(State.AccessSelf)]#! [SelectLocalization(MilitaryFormation.IsArmy, 'CONCEPT_REGULAR_BATTALIONS', 'CONCEPT_FLOTILLAS')] [AddLocalizationIf(MilitaryFormation.IsArmy, 'FILTER_ARMY_UNITS_TOOLTIP')]"
 FILTER_ARMY_UNITS_TOOLTIP: "\n@conscripts! #v [StagedUnitsWithType.GetNumConscriptsInState(State.AccessSelf)]#! [Concept('concept_conscript_battalion','$concept_conscript_battalions$')]"
 TRANSFER_RESET_BUTTON_TOOLTIP: "Alle vorgenommenen Änderungen zurücksetzen"
 TRANSFER_CANNOT_RESET_BUTTON_TOOLTIP: "Alle vorgenommenen Änderungen"
 TRANSFER_FORMATION_CHANGES_TO_TOTAL_NUMBER_OF_UNITS: "#v [StagedFormation.GetNumCombatUnitsIfTransferred]#!/[SelectLocalization(LessThan_int32(StagedFormation.GetCommandLimitRawIfTransferred, StagedFormation.GetNumCombatUnitsIfTransferred), 'TRANSFER_INSUFFICIENT_COMMAND_LIMIT', 'TRANSFER_SUFFICIENT_COMMAND_LIMIT')]"
 TRANSFER_FORMATION_CHANGES_TO_TOTAL_NUMBER_OF_UNITS_TOOLTIP: "Diese [SelectLocalization(TransferFormationPopup.HasArmyContext, 'MILITARY_FORMATION_ARMY_CONCEPT', 'MILITARY_FORMATION_FLEET_CONCEPT')] soll Folgendes erreichen:\n[SelectLocalization(TransferFormationPopup.HasArmyContext, '@battalions!', '@flotillas!')] #v [StagedFormation.GetNumCombatUnitsIfTransferred]#! [SelectLocalization(TransferFormationPopup.HasArmyContext, 'BATTALIONS_CONCEPT', 'FLOTILLAS_CONCEPT')]\n[AddLocalizationIf(LessThan_int32(StagedFormation.GetCommandLimitRawIfTransferred, StagedFormation.GetNumCombatUnitsIfTransferred), '@warning!')]@organization! [SelectLocalization(LessThan_int32(StagedFormation.GetCommandLimitRawIfTransferred, StagedFormation.GetNumCombatUnitsIfTransferred), 'TRANSFER_INSUFFICIENT_COMMAND_LIMIT', 'TRANSFER_SUFFICIENT_COMMAND_LIMIT')] [concept_command_limit]"
 TRANSFER_FORMATION_NO_UNITS_AVAILABLE: "Keine [CombatUnitType.GetName] von „[StagedUnitsWithType.GetStateFilter.GetName]“"
 BATTALIONS_CONCEPT: "[Concept('concept_battalion','$concept_battalions$')]"
 FLOTILLAS_CONCEPT: "[Concept('concept_flotilla','$concept_flotillas$')]"
 TRANSFER_FORMATION_WILL_DISBAND: "Wird aufgelöst!"
 LEFT_SIDE_MOVE_ALL: "Alle @transfer_all_right!"
 LEFT_SIDE_MOVE_HALF: "Hälfte von @transfer_half_right!"
 RIGHT_SIDE_MOVE_ALL: "Alle @transfer_all_left!"
 RIGHT_SIDE_MOVE_HALF: "Hälfte von @transfer_half_left!"
 LEFT_SIDE_MOVE_ALL_TOOLTIP: "Alle [Concept('concept_unit','$concept_units_short$')] und [Concept('concept_commander','$concept_commanders$')] auf die rechte Seite verlegen"
 LEFT_SIDE_MOVE_HALF_TOOLTIP: "Die Hälfte der [Concept('concept_unit','$concept_units_short$')] und [Concept('concept_commander','$concept_commanders$')] auf die rechte Seite verlegen (abgerundet)"
 RIGHT_SIDE_MOVE_ALL_TOOLTIP: "Alle [Concept('concept_unit','$concept_units_short$')] und [Concept('concept_commander','$concept_commanders$')] auf die linke Seite verlegen"
 RIGHT_SIDE_MOVE_HALF_TOOLTIP: "Die Hälfte der [Concept('concept_unit','$concept_units_short$')] und [Concept('concept_commander','$concept_commanders$')] auf die linke Seite verlegen (abgerundet)"
 TRANSFER_INSUFFICIENT_COMMAND_LIMIT: "#r [StagedFormation.GetCommandLimitRawIfTransferred]#!"
 TRANSFER_SUFFICIENT_COMMAND_LIMIT: "#g [StagedFormation.GetCommandLimitRawIfTransferred]#!"
 DEFAULT_UNIT_TYPE_BUTTON_LABEL: "[SelectLocalization(MilitaryFormation.HasSelectedUnitTypeForGroup(CombatUnitGroup.Self), 'COMBAT_UNIT_GROUP_DEFAULT_TYPE_NAME', 'NO_DEFAULT_UNIT_TYPE_AVAILABLE')]"
 COMBAT_UNIT_GROUP_DEFAULT_TYPE_NAME: "Standard: [CombatUnitGroup.GetDefaultUnitType.GetName]"
 NO_DEFAULT_UNIT_TYPE_AVAILABLE: "Keine Standard-Militäreinheitsart"
 MILITARY_FORMATION_UNIT_GROUP_DEFAULT_UNIT_TOOLTIP: "#header Standard-[concept_combat_unit_type]#!\nDerzeit: #b [MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(CombatUnitGroup.Self).Self)]#!\n$TOOLTIP_DELIMITER$\nDies ist die #b Standard-#!$concept_combat_unit_type$ für [CombatUnitGroup.GetName]. Sie wird gebaut, wenn dieser [concept_combat_unit_group] weitere Einheiten hinzugefügt werden."
 MILITARY_FORMATION_SUPPLY_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ [SelectLocalization(LessThan_CFixedPoint('(CFixedPoint)$VALUE$', '(CFixedPoint)1'),'#negative_value $VALUE|%0$#!','#variable $VALUE|%0$#!')]#!#!"
 MILITARY_FORMATION_SUPPLY_TOOLTIP: "#header [concept_supply]#!\nDerzeitige $concept_supply$ der „[MilitaryFormation.GetName]“ ist [SelectLocalization(LessThan_CFixedPoint('(CFixedPoint)$VALUE$', '(CFixedPoint)1'),'#negative_value $VALUE|%0$#!','#variable $VALUE|%0$#!')]\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty('$BREAKDOWN$','\n\n')][ConcatIfNeitherEmpty(MilitaryFormation.GetShippingLaneDesc,'\n\n')][concept_supply_desc]"
 MILITARY_FORMATION_SHIPPING_LANE_DESC: "Die [concept_supply_route] von [MilitaryFormation.GetHomeHQ.GetName]:#!#indent_newline:3 \n[concept_shipping_lane_effectiveness]: [ShippingLane.GetEffectivenessFormatted]\n[concept_convoy_cost]: [ShippingLane.GetConvoyCostFormattedShort]#!"
 MILITARY_FORMATION_SUPPLY_FROM_SHIPPING_LANE: "[concept_shipping_lane]"
 MILITARY_FORMATION_SUPPLY_FROM_GOODS_SHORTAGES: "[Concept('concept_shortage','$concept_input_goods_shortages$')]"
 MILITARY_FORMATION_SUPPLY_FROM_FLEET_SUPPORT: "$concept_fleet_support$"
 MILITARY_FORMATION_DEFAULT_UNIT_CHANGE: "#header Die Standard-Militäreinheitenart auf „[CombatUnitType.GetName]“ setzen#!\n[MilitaryFormation.GetEffectOfDefaultUnitTypeChange(CombatUnitType.Self)]$TOOLTIP_DELIMITER$\n[CombatUnitType.GetDesc]"
 MILITARY_FORMATION_DEFAULT_UNIT_CHANGE_UPGRADE_CANCEL: "@warning! Die Änderung der Standard-Einheitenart zu „[CombatUnitType.GetName]“ hindert folgende Einheitenart am Aufrüsten:\n"
 MILITARY_FORMATION_DEFAULT_UNIT_CHANGE_UPGRADE_CANCEL_ENTRY: "[CombatUnitType.GetName]\n"
 MILITARY_FORMATION_SUPPLY_FROM_GOODS_SHORTAGE_ENTRY: "#indent_newline:3 „[BUILDING.GetName]“ in „[BUILDING.GetState.GetName]“ erleidet $SHORTAGE|-%0$ [Concept('concept_shortage','$concept_input_goods_shortage$')]\nHauptgrund: [GOODS.GetTextIcon][Nbsp][GOODS.GetName]\nWirkt sich auf $RATIO|v%0$ der [Concept('concept_unit','$concept_units$')] [Concept('concept_army','$concept_army_possessive$')] aus#!"
 MILITARY_FORMATION_SUPPLY_FROM_RECOVERING_SHORTAGE_ENTRY: "#indent_newline:3 „[BUILDING.GetName]“ in „[BUILDING.GetState.GetName]“ erholt sich von einer $SHORTAGE|-%0$ [Concept('concept_shortage','$concept_input_goods_shortage$')]\nWirkt sich auf $RATIO|v%0$ der [Concept('concept_unit','$concept_units$')] [Concept('concept_army','$concept_army_possessive$')] aus#!"
 FRONT_MORALE_TOOLTIP: "Die Moral von $COUNTRY_NAME|v$ an der Front „$FRONT_NAME$“ liegt bei #BOLD #$MORALE_COLOR$ $VAL|0%$#!#!"
 MILITARY_FORMATION_MORALE: "@morale! #[GetMoraleColorString( MilitaryFormation.GetMorale)] [MilitaryFormation.GetMorale|0%]#!"
 MILITARY_FORMATION_MORALE_NO_ICON: "#[GetMoraleColorString( MilitaryFormation.GetMorale)] [MilitaryFormation.GetMorale|0%]#!"
 MILITARY_FORMATION_MORALE_TOOLTIP: "#header [concept_morale]#!\nDurchschnittliche $concept_morale$ von [Concept('concept_unit','$concept_units$')] in „[MilitaryFormation.GetName]“ ist #BOLD #[GetMoraleColorString( MilitaryFormation.GetMorale )] [MilitaryFormation.GetMorale|0%]#!#!"
 MORALE_TOOLTIP: "Die #v [Country.GetAdjectiveNoFormatting|l]e#! Moral an der Front „[FrontMarker.GetFront.GetName]“ liegt bei #BOLD #[GetMoraleColorString( FrontMarker.GetFront.GetMorale(Country.Self))] [FrontMarker.GetFront.GetMorale(Country.Self)|0%]#!#!"
 COMBAT_UNIT_MORALE_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #[GetMoraleColorString('(CFixedPoint)$VALUE$')] #variable $VALUE|0%$#!#!#!#!"
 COMBAT_UNIT_MORALE_RECOVERY_PER_DAY: "„[CombatUnit.GetName|U]“ erholt #v $VALUE|+1%$#! [concept_morale] pro Tag"
 COMBAT_UNIT_MORALE_RECOVERY_IN_BATTLE: "[CombatUnit.GetName] befindet sich derzeit in der [concept_battle] und wird keine [concept_morale] wiederherstellen."
 COMBAT_UNIT_MORALE_RECOVERY_MAX_MORALE: "[CombatUnit.GetName] hat die maximale [concept_morale] erreicht und kann nicht mehr hinzugewinnen."
 COMBAT_UNIT_MORALE_TOOLTIP: "#header Derzeitige [concept_morale]: #tooltippable #tooltip:$MORALE_GAIN$ #$COLOR_STR$ #variable $MORALE|0%$#!#!#!#!#!\n\n[ConcatIfNeitherEmpty(CombatUnit.GetMoraleModifierBreakdown,'')]Tendiert Richtung: [Character.GetSupplyFormatted] $TOOLTIP_DELIMITER$\nMannstärke insgesamt: $MANPOWER$\nDemoralisiert: $DEMORALIZED|v$"
 COMBAT_UNIT_MORALE_GAIN_TOOLTIP: "#header [concept_morale]-Gewinn#!\nMorgen wird [CombatUnit.GetName] $VALUE|+=^%$ $concept_morale$ gewinnen und $TOTAL|v^%$erreichen [ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n','$BREAKDOWN$')]"
 COMBAT_UNIT_ENEMY_MORALE_DAMAGE_DESC: "$VALUE|=-0%$ durch $unit_morale_damage_mult$"
 MORALE_LOSS_HEADER: "#title $NAME$ während der [concept_battle]#!"
 MORALE_RECOVERY_HEADER: "#title $NAME$ außerhalb der [concept_battle]#!"
 MILITARY_FORMATION_COMMAND_LIMIT_DESC: "[MilitaryFormation.GetCommandLimitDesc]"
 MILITARY_FORMATION_COMMAND_LIMIT_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ [SelectLocalization(EqualTo_int32('(int32)$INSUFFICIENT_COMMAND_LIMIT$', '(int32)1'),'#negative_value $VALUE$#!','#variable $VALUE$#!')]#!#!"
 MILITARY_FORMATION_COMMAND_LIMIT: "#header [concept_command_limit]#!\nWert: $VALUE|v$\n$TOOLTIP_DELIMITER$\n$DESC$"
 MILITARY_FORMATION_COMMAND_LIMIT_REACHED: "$MILITARY_FORMATION_COMMAND_LIMIT$\n\n@warning! Aufgrund einer unzureichenden [concept_command_limit] gilt für die [concept_military_formation]:#indent_newline:3 \n[MilitaryFormation.GetEffectFromCommandLimitDesc]#!"
 MILITARY_FORMATION_COMMAND_LIMIT_NO_COMMANDER: "[MilitaryFormation.GetUnitIcon]$VAL|v$ minimal, wenn es keine [Concept('concept_commander','$concept_commanders$')] gibt"
 MILITARY_FORMATION_COMMANDER_COMMAND_LIMIT_ENTRY: "[Character.GetFullName]: [SelectLocalization(Character.IsGeneral, '@battalions!', '@flotillas!')] [Character.GetCommandLimit]"
 MILITARY_FORMATION_ORGANIZATION: "[MilitaryFormation.GetOrganization][AddLocalizationIf(LessThan_CFixedPoint(MilitaryFormation.GetOrganizationRaw,GetDefine('NMilitary','MILITARY_FORMATION_ORGANIZATION_MAX')),'MILITARY_ORGANIZATION_SLASH_MAX')]"
 MILITARY_FORMATION_ORGANIZATION_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|vD$#!#!"
 MILITARY_ORGANIZATION_SLASH_MAX: "#maximum /[GetDefine('NMilitary','MILITARY_FORMATION_ORGANIZATION_MAX')|0]#!"
 MILITARY_ORGANIZATION_VALUE_WITH_TARGET: "[MilitaryFormation.GetOrganizationRaw|vD][Nbsp]@arrow_right![Nbsp][MilitaryFormation.GetOrganizationTargetRaw|vD]"
 MILITARY_ORGANIZATION_VALUE_WITH_TARGET_AND_CHANGE: "$MILITARY_ORGANIZATION_VALUE_WITH_TARGET$ (Änderung: [MilitaryFormation.GetOrganizationDailyChange|+=D] pro Tag)"
 MILITARY_ORGANIZATION_VALUE_WITH_TARGET_FORMATTED: "[MilitaryFormation.GetOrganizationRaw|vD][Nbsp]@arrow_right![Nbsp][MilitaryFormation.GetOrganizationTargetFormatted]"
 MILITARY_ORGANIZATION_VALUE_WITHOUT_TARGET: "[MilitaryFormation.GetOrganizationRaw|vD]"
 MILITARY_ORGANIZATION_VALUE: "[SelectLocalization(EqualTo_CFixedPoint(MilitaryFormation.GetOrganizationRaw, MilitaryFormation.GetOrganizationTargetRaw), 'MILITARY_ORGANIZATION_VALUE_WITHOUT_TARGET', 'MILITARY_ORGANIZATION_VALUE_WITH_TARGET')]"
 MILITARY_ORGANIZATION_VALUE_WITH_CHANGE: "[SelectLocalization(EqualTo_CFixedPoint(MilitaryFormation.GetOrganizationRaw, MilitaryFormation.GetOrganizationTargetRaw), 'MILITARY_ORGANIZATION_VALUE_WITHOUT_TARGET', 'MILITARY_ORGANIZATION_VALUE_WITH_TARGET_AND_CHANGE')]"
 MILITARY_ORGANIZATION_VALUE_FORMATTED: "[SelectLocalization(EqualTo_CFixedPoint(MilitaryFormation.GetOrganizationRaw, MilitaryFormation.GetOrganizationTargetRaw), MilitaryFormation.GetOrganizationTargetFormatted, 'MILITARY_ORGANIZATION_VALUE_WITH_TARGET_FORMATTED')]"
 MILITARY_FORMATION_ORGANIZATION_TARGET_DESC: "Ziel ist [MilitaryFormation.GetOrganizationTargetRaw|vD] aufgrund von:#indent_newline:3 \n[MilitaryFormation.GetOrganizationTargetDesc]#!"
 MILITARY_FORMATION_ORGANIZATION_FULL: "„[MilitaryFormation.GetName]“ ist bei voller $concept_organization$"
 MILITARY_FORMATION_ORGANIZATION_TOOLTIP: "#header @organization![Nbsp][concept_organization]#!\nDerzeit: $MILITARY_ORGANIZATION_VALUE_WITH_CHANGE$\n$TOOLTIP_DELIMITER$\n[SelectLocalization(And(EqualTo_CFixedPoint(MilitaryFormation.GetOrganizationPercentage,'(CFixedPoint)1'),EqualTo_CFixedPoint(MilitaryFormation.GetOrganizationTargetRaw,GetDefine('NMilitary','MILITARY_FORMATION_ORGANIZATION_MAX'))),'MILITARY_FORMATION_ORGANIZATION_FULL','MILITARY_FORMATION_ORGANIZATION_TARGET_DESC')][ConcatIfNeitherEmpty('\n\n',AddLocalizationIf(NotEqualTo_CFixedPoint(MilitaryFormation.GetOrganizationDailyChange,'(CFixedPoint)0'),'MILITARY_FORMATION_ORGANIZATION_DAILY_CHANGE'))][ConcatIfNeitherEmpty('\n\n',MilitaryFormation.GetLowOrganizationDesc)]"
 MILITARY_FORMATION_ORGANIZATION_MAX: "$VAL|vD$ maximal"
 MILITARY_FORMATION_ORGANIZATION_LOSS_RATE: "$VAL|+=D$ durch Verlustrate von $RATE|%-^$ pro Tag"
 MILITARY_FORMATION_ORGANIZATION_LOSS_MIN: "$VAL|+=D$ durch Minimalverlust pro Tag"
 MILITARY_FORMATION_ORGANIZATION_DAILY_CHANGE: "Tägliche Änderung ist [MilitaryFormation.GetOrganizationDailyChange|=+D] aufgrund von:#indent_newline:3 \n[MilitaryFormation.GetOrganizationDailyChangeDesc]#!"
 MILITARY_FORMATION_ORGANIZATION_GAIN_NOT_WHILE_TRAVELING: "[MilitaryFormation.GetName] wird während der Reise keine [concept_organization] zurückgewinnen."
 MILITARY_FORMATION_ORGANIZATION_GAIN_NO_UNITS: "[MilitaryFormation.GetName] erhält keine [concept_organization], solange sie keine [Concept('concept_unit','$concept_units$')] hat."
 MILITARY_FORMATION_ORGANIZATION_GAIN_UNITS_IN_BATTLE: "$PERCENT_UNITS_IN_BATTLE|v%1$ der [Concept('concept_unit','$concept_units$')] dieser Formation ([MilitaryFormation.GetName]) befinden sich derzeit in der [concept_battle]."
 MILITARY_FORMATION_ORGANIZATION_SUPPLY_PENALTY: "$VAL|+=D$ durch [Concept('concept_supply', 'Versorgungsknappheit')] von #tooltippable #tooltip:$BREAKDOWN_TAG$ $SUPPLY|%2-$#!#!"
 MILITARY_FORMATION_ORGANIZATION_EXILE_PENALTY: "$VAL|0%+$ durch Status als @exiled_state![Nbsp][Concept('concept_exiled_army','$concept_exiled_army_short$')]"
 MILITARY_FORMATION_ORGANIZATION_EFFECT_FROM_COMMAND_LIMIT: "@organization![Nbsp]$concept_organization$: $VAL|+D$ (Derzeit: $MILITARY_ORGANIZATION_VALUE_WITH_TARGET$)"
 MILITARY_FORMATION_ORGANIZATION_EFFECT_FROM_SPECIAL_UNITS: "@organization![Nbsp]$concept_organization$: $VAL|+D$ (Derzeit: $MILITARY_ORGANIZATION_VALUE_WITH_TARGET$)"
 MILITARY_FORMATION_ORGANIZATION_EFFECT_FROM_BEING_EXILED: "@organization![Nbsp][concept_organization]: $VAL|0%+$ (Derzeit: $MILITARY_ORGANIZATION_VALUE_WITH_TARGET$)"
 MILITARY_FORMATION_EXILED_ARMY_EFFECT_TOOLTIP: "#header @exiled_state![Nbsp][concept_exiled_army]#!\n$TOOLTIP_DELIMITER$\n„[MilitaryFormation.GetNameWithCountryFlag]“ hat keinen [concept_military_access] in „[MilitaryFormation.GetStateAtPosition.GetNameWithCountryFlag]“. Die Formation erleidet folgende Abzüge, bis sie in befreundetes Gebiet zurückkehrt:\n#indent_newline:2 [MilitaryFormation.GetEffectFromBeingExiledDesc]#!"
 MILITARY_FORMATION_EXILED_ARMY_SHORT: "#header @exiled_state![Nbsp][Concept('concept_exiled_army','$concept_exiled_army_short$')|U]#!\nKein [concept_military_access] in [MilitaryFormation.GetStateAtPosition.GetNameWithCountryFlag], was zu Folgendem führt:\n#indent_newline:2   [MilitaryFormation.GetEffectFromBeingExiledDesc]#!"
 TOO_MANY: "#r Zu viele#!"
 ARMY_TOO_MANY_UNITS_OF_THIS_UNIT_GROUP_TOOLTIP: "@warning! Die [Concept('concept_organization','Organisations')]-Schwelle für „[MilitaryFormation.GetName]“ ist betroffen, weil in Summe mehr #b [GetCombatUnitGroup('combat_unit_group_artillery').GetName]#! und #b [GetCombatUnitGroup('combat_unit_group_cavalry').GetName]#! als #b [GetCombatUnitGroup('combat_unit_group_infantry').GetName]#! vorhanden sind\n\n#title Gesamtzahl an [Concept('concept_unit','$concept_units$')] in jeder [Concept('concept_combat_unit_group','$concept_combat_unit_group_short$')]\n(Derzeit + [Concept('concept_incoming_units', 'eintreffend')]):#!\n@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_infantry').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_infantry').GetName]#!\n@battalions! #v [MilitaryFormation.GetNumSpecialUnitsExpected]#! [Concept('concept_special_unit','$concept_special_units$')]\n$TAB$@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_artillery').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_artillery').GetName]#!\n$TAB$@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_cavalry').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_cavalry').GetName]#!\n\n[MilitaryFormation.GetEffectFromSpecialUnitsDesc]"
 ARMY_TOO_MANY_EXPECTED_UNITS_OF_THIS_UNIT_GROUP_TOOLTIP: "@warning! Sobald die [Concept('concept_incoming_units', 'eintreffenden')] [Concept('concept_special_unit','$concept_special_units$')] sich angeschlossen haben, wird die [Concept('concept_organization','Organisations')]-Schwelle für „[MilitaryFormation.GetName]“ betroffen sein, weil in Summe mehr #b [GetCombatUnitGroup('combat_unit_group_artillery').GetName]#! und #b [GetCombatUnitGroup('combat_unit_group_cavalry').GetName]#! als #b [GetCombatUnitGroup('combat_unit_group_infantry').GetName]#! vorhanden sind\n\n#title Gesamtzahl an [Concept('concept_unit','$concept_units$')] in jeder [Concept('concept_combat_unit_group','$concept_combat_unit_group_short$')]\n(Derzeit + [Concept('concept_incoming_units', 'eintreffend')]):#!\n@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_infantry').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_infantry').GetName]#!\n@battalions! #v [MilitaryFormation.GetNumSpecialUnitsExpected]#! [Concept('concept_special_unit','$concept_special_units$')]\n$TAB$@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_artillery').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_artillery').GetName]#!\n$TAB$@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_cavalry').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_cavalry').GetName]#!\n\n[MilitaryFormation.GetEffectFromSpecialUnitsDesc]"
 FLEET_TOO_MANY_UNITS_OF_THIS_UNIT_GROUP_TOOLTIP: "@warning! Die [Concept('concept_organization','Organisations')]-Schwelle für „[MilitaryFormation.GetName]“ ist betroffen, weil in Summe mehr #b [GetCombatUnitGroup('combat_unit_group_capital_ship').GetName]#! und #b [GetCombatUnitGroup('combat_unit_group_support_ship').GetName]#! als #b [GetCombatUnitGroup('combat_unit_group_infantry').GetName]#! vorhanden sind\n\n#title Gesamtzahl an [Concept('concept_unit','$concept_units$')] in jeder [Concept('concept_combat_unit_group','$concept_combat_unit_group_short$')]\n(Derzeit + [Concept('concept_incoming_units', 'eintreffend')]):#!\n@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_light_ship').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_light_ship').GetName]#!\n@battalions! #v [MilitaryFormation.GetNumSpecialUnitsExpected]#! [Concept('concept_special_unit','$concept_special_units$')]\n$TAB$@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_capital_ship').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_capital_ship').GetName]#!\n$TAB$@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_support_ship').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_support_ship').GetName]#!\n\n[MilitaryFormation.GetEffectFromSpecialUnitsDesc]"
 FLEET_TOO_MANY_EXPECTED_UNITS_OF_THIS_UNIT_GROUP_TOOLTIP: "@warning! Sobald die [Concept('concept_incoming_units', 'eintreffenden')] [Concept('concept_special_unit','$concept_special_units$')] sich angeschlossen haben, wird die [Concept('concept_organization','Organisations')]-Schwelle für „[MilitaryFormation.GetName]“ betroffen sein, weil in Summe mehr #b [GetCombatUnitGroup('combat_unit_group_capital_ship').GetName]#! und #b [GetCombatUnitGroup('combat_unit_group_support_ship').GetName]#! als #b [GetCombatUnitGroup('combat_unit_group_infantry').GetName]#! vorhanden sind\n\n#title Gesamtzahl an [Concept('concept_unit','$concept_units$')] in jeder [Concept('concept_combat_unit_group','$concept_combat_unit_group_short$')]\n(Derzeit + [Concept('concept_incoming_units', 'eintreffend')]):#!\n@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_light_ship').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_light_ship').GetName]#!\n@battalions! #v [MilitaryFormation.GetNumSpecialUnitsExpected]#! [Concept('concept_special_unit','$concept_special_units$')]\n$TAB$@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_capital_ship').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_capital_ship').GetName]#!\n$TAB$@battalions! #v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_support_ship').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_support_ship').GetName]#!\n\n[MilitaryFormation.GetEffectFromSpecialUnitsDesc]"
 MILITARY_FORMATION_ORGANIZATION_COMMAND_LIMIT_PENALTY: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|+=D$#!#! durch unzureichende [concept_command_limit]"
 MILITARY_FORMATION_ORGANIZATION_COMMAND_LIMIT: "#header Unzureichende [concept_command_limit]#!\n$TOOLTIP_DELIMITER$\n#indent_newline:3 Abzug von max. [concept_organization]#! durch:\nDerzeitige Zahl von [Concept('concept_unit','$concept_units$')]: $NUM_UNITS|v$\nDerzeitige [concept_command_limit]: $COMMAND_LIMIT|v$#!#!"
 MILITARY_FORMATION_ORGANIZATION_SPECIAL_UNITS_PENALTY: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|+=D$#!#! durch zu viele [Concept('concept_special_unit','$concept_special_units$')]"
 MILITARY_FORMATION_ORGANIZATION_SPECIAL_UNITS: "#header Zu viele [Concept('concept_special_unit','$concept_special_units$')]#!\n$TOOLTIP_DELIMITER$\n#indent_newline:3 Abzug von max. [concept_organization]#! durch:\nDerzeitige Zahl von [Concept('concept_special_unit','$concept_special_units$')]: $NUM_SPECIAL_UNITS|v$\nDerzeitige Zahl von [Concept('concept_default_unit','$concept_default_units$')]: $NUM_DEFAULT_UNITS|v$#!#!"
 MILITARY_FORMATION_LOW_ORGANIZATION_IMPACT: "#indent_newline:3 Aufgrund der geringen [concept_organization] leidet diese Formation ([MilitaryFormation.GetName]) unter Folgendem:\n$DESC$#!"
 MILITARY_FORMATION_NEW_ORGANIZATION_AFTER_MERGE: "#indent_newline:3 Nach der Zusammenführung hat diese Formation ([MilitaryFormation.GetName]) $VALUE|v^2$ [concept_organization] aufgrund von:\n$TARGET_NUM_UNITS|v0$ anfängliche Anzahl an [Concept('concept_unit','$concept_units$')] mit $TARGET_ORGANIZATION|v^2$ [concept_organization]\n$SOURCE_NUM_UNITS|v0$ verlegte [Concept('concept_unit','$concept_units$')] mit $SOURCE_ORGANIZATION|v^2$ [concept_organization][AddTextIf(GreaterThan_int32('(int32)$MOBILIZATION_OPTION_DIFFERENCES$','(int32)0'),'\n#tooltippable #tooltip:$MOBILIZATION_OPTION_DIFFERENCES_BREAKDOWN$ $MOBILIZATION_OPTION_DIFFERENCES|0v$#!#! Unterschiede bei $concept_mobilization_options$')]#!"
 MERGE_FORMATIONS_NEW_ORGANIZATION_INFO: "Nach der Zusammenführung wird diese Formation ([MilitaryFormation.GetName]) #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v^2$ [concept_organization] haben"
 MOBILIZATION_OPTION_DIFFERENCES: "#header [Concept('concept_organizsation', 'Organisationsabzug')] durch unterschiedliche [Concept('concept_mobilization_option','$concept_mobilization_options$')]#!\nZahl der Unterschiede: #negative_value $NUM_DIFFERENCES|0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 MOBILIZATION_OPTION_DIFFERENCE_ENTRY: "#negative_value -[GetDefine('NMilitary','MOBILIZATION_OPTION_DIFFERENCE_ORGANIZATION_IMPACT')]#!: [MilitaryFormation.GetName] hat [MobilizationOption.GetName]"
 MILITARY_FORMATION_COMMANDERS: "Befehlshaber"
 MILITARY_FORMATION_COMMANDERS_CONCEPT: "[Concept('concept_commander', '$concept_commanders$')]"
 MILITARY_FORMATION_COMMANDERS_TOOLTIP_TITLE: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_GENERALS_CONCEPT', 'MILITARY_FORMATION_ADMIRALS_CONCEPT')]"
 MILITARY_FORMATION_GENERALS_CONCEPT: "[Concept('concept_general','$concept_generals$')]"
 MILITARY_FORMATION_ADMIRALS_CONCEPT: "[Concept('concept_admiral','$concept_admirals$')]"
 MILITARY_FORMATION_NO_GENERALS: "Diese [concept_army] hat keine [Concept('concept_general','$concept_generals$')]; wir sollten womöglich einen rekrutieren"
 MILITARY_FORMATION_RECRUIT_GENERAL: "Einen [concept_general] rekrutieren"
 MILITARY_FORMATION_NO_ADMIRALS: "Diese [concept_fleet] hat keine [Concept('concept_admiral','$concept_admirals$')]; wir sollten womöglich einen rekrutieren"
 MILITARY_FORMATION_RECRUIT_ADMIRAL: "Einen [concept_admiral] rekrutieren"
 MILITARY_FORMATION_IS_FULLY_MOBILIZED: "Voll mobilisiert"
 MILITARY_FORMATION_IS_MOBILIZING: "Mobilisierung: #v [MilitaryFormation.GetMobilizationPercentage|%0]#!"
 MILITARY_FORMATION_IS_MOBILIZING_TOOLTIP: "[MilitaryFormation.GetName] ist in der [Concept('concept_mobilize_army', 'Mobilisierung')]: #v [MilitaryFormation.GetMobilizationPercentage|%0]#!"
 MILITARY_FORMATION_MOBILIZED_TOOLTIP: "#header Diese [concept_army] wurde [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')|l]#!\n\nKosten / Woche:\n[MilitaryFormation.GetEstimatedMobilizationCostDesc]"
 MILITARY_FORMATION_ARMY_CONCEPT: "[concept_army]"
 MILITARY_FORMATION_FLEET_CONCEPT: "[concept_fleet]"
 MILITARY_FORMATION_NO_UNITS: "„[MilitaryFormation.GetName]“ hat keine [MilitaryFormation.GetUnitIcon][Nbsp][MilitaryFormation.GetUnitLabel]"
 MILITARY_FORMATION_NO_COMMANDER: "[MILITARY_FORMATION.GetName] hat keine [Concept('concept_commander', '$concept_commanders$')]"
 NO_COMMANDER: "Kein [concept_commander]"
 MOBILIZE_ALL_MILITARY_FORMATIONS: "Alle $concept_armies$ mobilisieren"
 DEMOBILIZE_ALL_MILITARY_FORMATIONS: "Alle $concept_armies$ demobilisieren"
 MOBILIZE_ARMY_COMMAND_ARMY_ERRORS: "„[MilitaryFormation.GetName]“ kann nicht mobilisiert werden[AddTextIf(Not(StringIsEmpty('$ERRORS$')), '\n #indent_newline:3 $ERRORS$#!')]"
 MOBILIZE_ALL_MILITARY_FORMATIONS_TOOLTIP: "$ERRORS$"
 MOBILIZE_ALL_MILITARY_FORMATIONS_BUTTON_TOOLTIP: "#header Alle [Concept('concept_army', '$concept_armies$')] [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilize$')|l]#![ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', GetDesc(Country.MobilizeAllArmies))]"
 DEMOBILIZE_ARMY_COMMAND_ARMY_ERRORS: "„[MilitaryFormation.GetName]“ kann nicht demobilisiert werden[AddTextIf(Not(StringIsEmpty('$ERRORS$')), '\n #indent_newline:3 $ERRORS$#!')]"
 DEMOBILIZE_ALL_MILITARY_FORMATIONS_TOOLTIP: "$ERRORS$"
 DEMOBILIZE_ALL_MILITARY_FORMATIONS_BUTTON_TOOLTIP: "#header Alle [Concept('concept_army', '$concept_armies$')] [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')|l]#![ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', GetDesc(Country.DemobilizeAllArmies))]"
 MILITARY_FORMATION_PANEL_TITLE: "[SelectLocalization(GreaterThan_int32(GetDataModelSize(FormationPanel.GetSelectedFormations), '(int32)1'), 'MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_FORMATIONS', 'MILITARY_FORMATION_PANEL_TITLE_SINGLE_FORMATION')]"
 MILITARY_FORMATION_PANEL_TITLE_SINGLE_FORMATION: "[LabelingHelper.CapitalizeOnlyFirst(FormationPanel.GetFormation.GetNameNoFormatting)]"
 MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_FORMATIONS: "[SelectLocalization(FormationPanel.GetFormation.IsArmy, 'MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_ARMIES', 'MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_FLEETS')]"
 MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_ARMIES: "#v [GetDataModelSize(FormationPanel.GetSelectedFormations)]#! [Concept('concept_army', '$concept_armies$')]"
 MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_FLEETS: "#v [GetDataModelSize(FormationPanel.GetSelectedFormations)]#! [Concept('concept_fleet', '$concept_fleets$')]"
 MILITARY_FORMATION_SUBTITLE: "[SelectLocalization(GreaterThan_int32(GetDataModelSize(FormationPanel.GetSelectedFormations), '(int32)1'), 'MILITARY_FORMATION_SUBTITLE_MULTIPLE_FORMATIONS_FROM_COUNTRY', 'MILITARY_FORMATION_SUBTITLE_SINGLE_FORMATION_FROM_COUNTRY')]"
 MILITARY_FORMATION_SUBTITLE_SINGLE_FORMATION_FROM_COUNTRY: "[SelectLocalization(FormationPanel.GetFormation.IsArmy, 'MILITARY_FORMATION_ARMY_CONCEPT', 'MILITARY_FORMATION_FLEET_CONCEPT')] aus [FormationPanel.GetFormation.GetCountry.GetAltName('DAT')]"
 MILITARY_FORMATION_SUBTITLE_MULTIPLE_FORMATIONS_FROM_COUNTRY: "[SelectLocalization(FormationPanel.GetFormation.IsArmy, 'concept_armies', 'concept_fleets')] aus [FormationPanel.GetFormation.GetCountry.GetAltName('DAT')]"
 MILITARY_FORMATION_NUMBER_OF_FLEET_COMBAT_UNIT_GROUPS: "#v [GetDataModelSize(MilitaryFormation.GetCombatUnitEntries)]#! [SelectLocalization(EqualTo_int32(GetDataModelSize(MilitaryFormation.GetCombatUnitEntries), '(int32)1'), 'COMBAT_UNIT_GROUP_CONCEPT', 'COMBAT_UNIT_GROUPS_CONCEPT')]"
 MILITARY_FORMATION_MOBILIZED_COMBAT_UNIT_GROUPS: "#v [GetDataModelSize(MilitaryFormation.GetCombatUnitEntries)]#! [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')|l] [SelectLocalization(EqualTo_int32(GetDataModelSize(MilitaryFormation.GetCombatUnitEntries), '(int32)1'), 'COMBAT_UNIT_GROUP_CONCEPT', 'COMBAT_UNIT_GROUPS_CONCEPT')]"
 MILITARY_FORMATION_IS_MOBILIZING_COMBAT_UNIT_GROUPS: "#v [GetDataModelSize(MilitaryFormation.GetCombatUnitEntries)]#! [SelectLocalization(EqualTo_int32(GetDataModelSize(MilitaryFormation.GetCombatUnitEntries), '(int32)1'), 'COMBAT_UNIT_GROUP_CONCEPT', 'COMBAT_UNIT_GROUPS_CONCEPT')] in der Mobilisierung"
 MILITARY_FORMATION_DEMOBILIZED_COMBAT_UNIT_GROUPS: "#v [GetDataModelSize(MilitaryFormation.GetCombatUnitEntries)]#! [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilized$')] [SelectLocalization(EqualTo_int32(GetDataModelSize(MilitaryFormation.GetCombatUnitEntries), '(int32)1'), 'COMBAT_UNIT_GROUP_CONCEPT', 'COMBAT_UNIT_GROUPS_CONCEPT')]"
 COMBAT_UNIT_GROUP_CONCEPT: "[concept_combat_unit_group]"
 COMBAT_UNIT_GROUPS_CONCEPT: "[Concept('concept_combat_unit_group','$concept_combat_unit_groups_short$')]"
 MILITARY_FORMATION_MOBILIZATION_MODIFIER_NAME: "$FORMATION_NAME$ – [Concept('concept_mobilize_army','$concept_mobilize_army_mobilization$')]"
 MILITARY_FORMATION_ATTRITION_FORMAT: "$MILITARY_FORMATION_ATTRITION_RISK_ICON$ [MilitaryFormation.GetAttritionFormatted]"
 MILITARY_FORMATION_ATTRITION_VALUE_TOOLTIPPABLE: "$MILITARY_FORMATION_ATTRITION_RISK_ICON$ #v #tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_ATTRITION_TOOLTIP [MilitaryFormation.GetAverageAttritionPerWeek|%1^-]#!#!#!"
 MILITARY_FORMATION_ATTRITION_TOOLTIP: "[MilitaryFormation.GetAttritionRiskDesc]"
 MILITARY_FORMATION_MORALE_VALUE_TOOLTIPPABLE: "#[GetMoraleColorString( MilitaryFormation.GetMorale)] #tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_MORALE_TOOLTIP [MilitaryFormation.GetMorale|0%]#!#!#!"
 MILITARY_FORMATION_ORGANIZATION_VALUE_TOOLTIPPABLE: "#tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_ORGANIZATION_TOOLTIP, [MilitaryFormation.GetOrganizationPercentage|%v0]#!#!"
 MILITARY_FORMATION_TROOP_ATTRITION_LEVEL: "$MILITARY_FORMATION_ATTRITION_RISK_ICON_WITH_LABEL$"
 PIN_MILITARY_FORMATION: "[MilitaryFormation.GetName] an Pinnwand anheften"
 UNPIN_MILITARY_FORMATION: "[MilitaryFormation.GetName] von Pinnwand lösen"
 ZOOM_TO_MILITARY_FORMATION: "An derzeitigen Ort heranzoomen[AddLocalizationIf(MilitaryFormation.IsZoomingToMapMarkerPosition, 'ZOOM_TO_DISABLED')]"
 MILITARY_FORMATION_IN_LOCATION_SUBTITLE: "[SelectLocalization(MilitaryFormation.IsArmy,'MILITARY_FORMATION_IN_LOCATION_SUBTITLE_ARMY','MILITARY_FORMATION_IN_LOCATION_SUBTITLE_FLEET')] in [MilitaryFormation.GetCurrentHQ.GetNameNoFlag]"
 MILITARY_FORMATION_IN_LOCATION_SUBTITLE_ARMY: "[concept_army]"
 MILITARY_FORMATION_IN_LOCATION_SUBTITLE_FLEET: "[concept_fleet]"
 MILITARY_FORMATION_PANEL_INFORMATION_TAB: "Information"
 MILITARY_FORMATION_PANEL_INFORMATION_TAB_SELECTED: "#b $MILITARY_FORMATION_PANEL_INFORMATION_TAB$#!"
 MILITARY_FORMATION_PANEL_MOBILIZATION_TAB: "Mobilisierung"
 MILITARY_FORMATION_PANEL_MOBILIZATION_TAB_SELECTED: "#b $MILITARY_FORMATION_PANEL_MOBILIZATION_TAB$#!"
 MILITARY_FORMATION_PANEL_MODIFIERS_TAB: "Modifikatoren"
 MILITARY_FORMATION_PANEL_MODIFIERS_TAB_SELECTED: "#b $MILITARY_FORMATION_PANEL_MODIFIERS_TAB$#!"
 MILITARY_FORMATION_PANEL_BUILDINGS_TAB: "Gebäude"
 MILITARY_FORMATION_PANEL_BUILDINGS_TAB_SELECTED: "#b $MILITARY_FORMATION_PANEL_BUILDINGS_TAB$#!"
 MILITARY_FORMATION_EXPENSE: "#v @money![MilitaryFormation.GetGoodsConsumptionCostRaw|0-K]#!"
 MILITARY_FORMATION_EXPENSE_TOOLTIP_TAG: "[MilitaryFormation.GetGoodsConsumptionDesc]"
 MILITARY_FORMATION_EXPENSE_TOOLTIP: "#header [MilitaryFormation.GetName] (Unterhalt)#!\nWöchentliche Kosten: #v @money!$VAL|0-K$#!\n$TOOLTIP_DELIMITER$\nAusgaben nach [Concept('concept_good','$concept_goods$')]:\n$BREAKDOWN_BY_GOODS$\n\nAusgaben nach [Concept('concept_building','$concept_buildings$n')]:\n$BREAKDOWN_BY_BUILDING$"
 MILITARY_FORMATION_EXPENSE_BY_GOODS: "#v @money!$VAL|0-K$#! für [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 MILITARY_FORMATION_EXPENSE_BY_BUILDING: "#v @money!$VAL|0-K$#! durch „[Building.GetName]“ im Staat „[Building.GetState.GetName]“"
 MILITARY_FORMATION_BUILDABLE_UNITS: "Baubare Einheiten"
 MILITARY_FORMATION_UNITS_RECRUITMENT: "Standardarten von Einheiten & Rekrutierung"
 MILITARY_FORMATION_UNITS_UPGRADE_ALL: "Alle Einheiten aufwerten"
 MILITARY_FORMATION_UNITS_UPGRADE_ALL_DESC: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_UNITS_UPGRADE_ALL_DESC_ARMY', 'MILITARY_FORMATION_UNITS_UPGRADE_ALL_DESC_NAVY')]"
 MILITARY_FORMATION_UNITS_UPGRADE_ALL_DESC_ARMY: "Dadurch werden alle zulässigen Einheiten zu Folgendem aufgewertet:\n[MilitaryFormation.GetSelectedUnitTypeForGroup(GetCombatUnitGroup('combat_unit_group_infantry').Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(GetCombatUnitGroup('combat_unit_group_infantry').Self).Self)] für Infanterie\n[MilitaryFormation.GetSelectedUnitTypeForGroup(GetCombatUnitGroup('combat_unit_group_artillery').Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(GetCombatUnitGroup('combat_unit_group_artillery').Self).Self)] für Artillerie\n[MilitaryFormation.GetSelectedUnitTypeForGroup(GetCombatUnitGroup('combat_unit_group_cavalry').Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(GetCombatUnitGroup('combat_unit_group_cavalry').Self).Self)] für Kavallerie"
 MILITARY_FORMATION_UNITS_UPGRADE_ALL_DESC_NAVY: "Dadurch werden alle zulässigen Einheiten zu Folgendem aufgewertet:\n[MilitaryFormation.GetSelectedUnitTypeForGroup(GetCombatUnitGroup('combat_unit_group_light_ship').Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(GetCombatUnitGroup('combat_unit_group_light_ship').Self).Self)] für Leichte Schiffe\n[MilitaryFormation.GetSelectedUnitTypeForGroup(GetCombatUnitGroup('combat_unit_group_capital_ship').Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(GetCombatUnitGroup('combat_unit_group_capital_ship').Self).Self)] für Großkampfschiffe"
 MILITARY_FORMATION_UNITS_UPGRADE_ALL_ALL: "Aufrüstung aller möglichen Einheiten in allen militärischen Formationen"
 MILITARY_FORMATION_UNITS: "Einheiten-Details"
 MILITARY_FORMATION_CURRENT_UNITS: "Derzeitige Einheiten"
 CHANGE_COMMANDER_ORDER_TOOLTIP: "#header [Character.GetOrderType.GetAltName('gerund')|U]#!\nDerzeitiger [concept_order] für [Character.GetFullName] ist: #b [Character.GetOrderType.GetName]#!\n#i Klicken, um $concept_order$ zu ändern#!"
 CHANGE_NEXT_COMMANDER_ORDER_TOOLTIP: "#header [Character.GetNextOrderType.GetName] (derzeit [Character.GetOrderType.GetAltName('gerund')])#!\nNächster [concept_order] für [Character.GetFirstName] wird sein: #b [Character.GetNextOrderType.GetName]#!\nDie derzeitige [concept_battle] in „[Character.GetBattle.GetLocationName]“ muss erst zu Ende gehen\n#i Klicken, um $concept_order$ zu ändern#!"
 COMMANDER_ORDER_TOOLTIP: "#header [Character.GetOrderType.GetAltName('gerund')]#!\nDerzeitiger [concept_order] für [Character.GetFirstName] ist: #b [Character.GetOrderType.GetName]#!"
 COMMANDER_NEXT_ORDER_TOOLTIP: "#header [Character.GetNextOrderType.GetName] (derzeit [Character.GetOrderType.GetAltName('gerund')])#!\nNächster [concept_order] für [Character.GetFirstName] wird sein: #b [Character.GetNextOrderType.GetName]#!\nDie derzeitige [concept_battle] in „[Character.GetBattle.GetLocationName]“ muss erst zu Ende gehen"
 MILITARY_FORMATION_ARMY_BUILDING: "Kasernen"
 MILITARY_FORMATION_ARMY_BUILDINGS: "Kasernen"
 MILITARY_FORMATION_NAVAL_BUILDING: "Marinebasen"
 MILITARY_FORMATION_NAVAL_BUILDINGS: "Marinebasen"
 MILITARY_FORMATION_REMOVE_UNIT_TOOLTIP: "#header #b [CombatUnitType.GetName]#! auflösen#!\n[ConcatIfNeitherEmpty(GetDesc(MilitaryFormation.GetDisbandUnitTypeRegularCommand(CombatUnitType.Self)),'\n')]$TOOLTIP_DELIMITER$\nDies wird die am wenigsten erfahrene [CombatUnitType.GetName]-[Concept('concept_unit','$concept_unit_short$')] in [MilitaryFormation.GetName] von den [SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_ARMY_BUILDING', 'MILITARY_FORMATION_NAVAL_BUILDING')] auflösen, durch die sie erschaffen wurde. [AddLocalizationIf(MilitaryFormation.FindLeastExperiencedRegularUnit(CombatUnitType.Self).IsValid, 'MILITARY_FORMATION_REMOVE_UNIT_DESC')]\n\n@information! Mehr als [CombatUnitType.GetIconString] #v 1#! $concept_unit_short$ aufzulösen, könnte $concept_units_short$ von anderen [SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_ARMY_BUILDINGS', 'MILITARY_FORMATION_NAVAL_BUILDINGS')] auflösen.\n\n#instruction Klicken, um 1 $concept_unit_short$ aufzulösen\n#instruction $SHORTCUT_KEY_MOD_shift$Klick, um 5 $concept_units_short$ aufzulösen\n#instruction $SHORTCUT_KEY_MOD_ctrl$Klick, um 10 $concept_units_short$ aufzulösen#!"
 MILITARY_FORMATION_REMOVE_UNIT_DESC: "Die derzeit am wenigsten erfahrene [CombatUnitType.GetName] stammt aus [MilitaryFormation.FindLeastExperiencedRegularUnit(CombatUnitType.Self).GetBuilding.GetName] in „[MilitaryFormation.FindLeastExperiencedRegularUnit(CombatUnitType.Self).GetBuilding.GetState.GetName]“."
 MILITARY_FORMATION_RECRUIT_UNIT_TOOLTIP: "#b [CombatUnitType.GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForType(CombatUnitType.Self).Self)]#! rekrutieren [ConcatIfNeitherEmpty('\n\n', MilitaryFormation.CanRecruitRegularUnitTooltip(CombatUnitType.Self))]"
 UPGRADING_UNIT_TYPE: "#b [MilitaryFormationUnitEntry.GetUnitType.GetName]#! zu #b [MilitaryFormation.GetSelectedUnitTypeForGroup(MilitaryFormationUnitEntry.GetUnitType.GetGroup.Self).GetName]#! aufwerten"
 UPGRADE_UNIT_TYPE: "#b [MilitaryFormationUnitEntry.GetUnitType.GetName]#! zu #b [MilitaryFormation.GetSelectedUnitTypeForGroup(MilitaryFormationUnitEntry.GetUnitType.GetGroup.Self).GetName]#! aufwerten\n\nDies wird die Einheiten beim Aufwerten [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')|l]."
 MILITARY_FORMATION_UPGRADE_UNIT_TOOLTIP: "[SelectLocalization(MilitaryFormation.IsRegularUnitTypeUpgrading(MilitaryFormationUnitEntry.GetUnitType),'UPGRADING_UNIT_TYPE', 'UPGRADE_UNIT_TYPE')] [ConcatIfNeitherEmpty('\n\n', GetDesc(MilitaryFormation.GetUpgradeRegularUnitTypeCommand(MilitaryFormationUnitEntry.GetUnitType.Self)))]"
 CANNOT_UPGRADE_UNIT_TO_TYPE: "„[COMBAT_UNIT_TYPE.GetName]“ kann nicht zu „[TARGET_COMBAT_UNIT_TYPE.GetName]“ aufgewertet werden, da die Einheitenarten sich zu sehr unterscheiden."
 MILITARY_FORMATION_UPGRADE_GROUP_TOOLTIP: "[SelectLocalization(MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).IsValid, 'UPGRADE_GROUP_VALID_HEADER','UPGRADE_GROUP_INVALID_HEADER')][ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(IsValid(MilitaryFormation.GetUpgradeUnitGroupCommand(CombatUnitGroup.Self))), GetDesc(MilitaryFormation.GetUpgradeUnitGroupCommand(CombatUnitGroup.Self))))]"
 UPGRADE_GROUP_VALID_HEADER: "#header Alle „[CombatUnitGroup.GetName]“-[Concept('concept_unit', '$concept_units_short$')] zu „[MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(CombatUnitGroup.Self).Self)]“ aufwerten#!\n\nDies wird die $concept_units_short$ [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')|l]."
 UPGRADE_GROUP_INVALID_HEADER: "#header Alle „[CombatUnitGroup.GetName]“-[Concept('concept_unit', '$concept_units_short$')] aufwerten#!"
 UPGRADE_UNIT_GROUP: "Alle „#b [CombatUnitGroup.GetName]#!“ zu „#b [MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(CombatUnitGroup.Self).Self)]#!“ aufwerten\n\nDies wird die Einheiten beim Aufwerten [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')|l]."
 CANNOT_UPGRADE_UNITS_IN_GROUP: "Es gibt keine „#b [COMBAT_UNIT_GROUP.GetName]#!“-Einheiten, die zu „[TARGET_COMBAT_UNIT_TYPE.GetName]“ aufgewertet werden können."
 CANNOT_UPGRADE_UNITS_IN_GROUP_ALL_UPGRADING: "Alle möglichen „#b [COMBAT_UNIT_GROUP.GetName]#!“-Einheiten sind bereits aufgewertet worden."
 UPGRADE_ALL_UNIT_GROUP: "„Alle [CombatUnitType.GetName] aufwerten“"
 MILITARY_FORMATION_REMOVE_CONSCRIPT_UNIT_TOOLTIP: "#header Ein #b [Concept('concept_conscript_battalion','Wehrpflichtigen')]-[CombatUnitType.GetName]#! auflösen#!\n[ConcatIfNeitherEmpty(GetDesc(MilitaryFormation.GetDisbandUnitTypeConscriptCommand(CombatUnitType.Self)),'\n')]$TOOLTIP_DELIMITER$\n#instruction Klicken, um 1 $concept_unit_short$ aufzulösen\n#instruction $SHORTCUT_KEY_MOD_shift$Klick, um 5 $concept_units_short$ aufzulösen\n#instruction $SHORTCUT_KEY_MOD_ctrl$Klick, um 10 $concept_units_short$ aufzulösen#!"
 MILITARY_FORMATION_RECRUIT_CONSCRIPT_UNIT_TOOLTIP: "#b [Concept('concept_conscript_battalion','$concept_conscript_battalion_short$')] [CombatUnitType.GetName]#![ConcatIfNeitherEmpty('\n\n', MilitaryFormation.CanRecruitConscriptUnitTooltip(CombatUnitType.Self))] rekrutieren"
 MILITARY_FORMATION_UPGRADE_CONSCRIPT_UNIT_TOOLTIP: "#b [Concept('concept_conscript_battalion','Wehrpflichtigen')]-[CombatUnitType.GetName]#! aufwerten"
 MILITARY_FORMATION_RECRUIT_DEFAULT_UNIT_TYPE_TOOLTIP: "#b [MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(CombatUnitGroup.Self).Self)]#![ConcatIfNeitherEmpty('\n\n', MilitaryFormation.CanRecruitRegularUnitTooltip(MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self))] rekrutieren"
 MILITARY_FORMATION_DISBAND_DEFAULT_UNIT_TYPE_TOOLTIP: "#b [MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(CombatUnitGroup.Self).Self)]#! auflösen"
 MILITARY_FORMATION_RECRUIT_DEFAULT_UNIT_TYPE_CONSCRIPTS_TOOLTIP: "#b [Concept('concept_conscript_battalion','$concept_conscript_battalion_short$')] [MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).GetName]#![ConcatIfNeitherEmpty('\n\n', MilitaryFormation.CanRecruitConscriptUnitTooltip(MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self))] rekrutieren"
 MILITARY_FORMATION_DISBAND_DEFAULT_UNIT_TYPE_CONSCRIPTS_TOOLTIP: "#b [Concept('concept_conscript_battalion','$concept_conscript_battalion_short$')] [MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).GetName]#! auflösen"
 MILITARY_FORMATION_NO_DEFAULT_UNIT_TYPE_TO_RECRUIT: "@red_cross! Keine #b Standard-#![concept_combat_unit_type] für diese [CombatUnitGroup.GetName] ausgewählt"
 MILITARY_FORMATION_NUMBER_OF_UNITS: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_NUMBER_OF_BATTALIONS', 'MILITARY_FORMATION_NUMBER_OF_FLOTILLAS')]"
 MILITARY_FORMATION_NUMBER_OF_BATTALIONS: "@battalions!#v [MilitaryFormationUnitEntry.GetCurrentNumRegularUnits]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumRegularUnits, MilitaryFormationUnitEntry.GetCurrentNumRegularUnits), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS')]"
 MILITARY_FORMATION_NUMBER_OF_CONSCRIPTS: "@conscripts!#v [MilitaryFormationUnitEntry.GetCurrentNumConscriptUnits]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumConscriptUnits, MilitaryFormationUnitEntry.GetCurrentNumConscriptUnits), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_CONSCRIPTS')]"
 CONSCRIPTS_CONCEPT: "[Concept('concept_conscript_battalion','$concept_conscript_battalions$')]"
 RAISE_ALL_CONSCRIPTS: "@conscripts![MilitaryFormation.GetMaxConscripts|v] [Concept('concept_conscript_battalion','$concept_conscript_battalions_short$')] ausheben"
 RAISE_ALL_CONSCRIPTS_TOOLTIP: "Hebt insgesamt @conscripts! [MilitaryFormation.GetMaxConscripts|v] [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')] aus. Die Wehrpflichtigen bleiben aktiv, bis die Armee [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilized$')|l] wird.[ConcatIfNeitherEmpty('\n\n', GetDesc(MilitaryFormation.RaiseConscripts))]"
 CANNOT_ADD_CONSCRIPT: "Hat „[GetLawType('law_peasant_levies').GetName]“ beschlossen"
 MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS: " + [Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumRegularUnits, MilitaryFormationUnitEntry.GetCurrentNumRegularUnits)]"
 MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_CONSCRIPTS: " + [Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumConscriptUnits, MilitaryFormationUnitEntry.GetCurrentNumConscriptUnits)]"
 MILITARY_FORMATION_NUMBER_OF_UNITS_IN_DEFAULT_TYPE: "[MilitaryFormation.GetCombatUnitsTypeIcon] #v [MilitaryFormation.GetNumRegularCombatUnitsOfType(MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self)]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormation.GetNumExpectedRegularCombatUnitsOfType(MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self), MilitaryFormation.GetNumRegularCombatUnitsOfType(MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self)), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_DEFAULT_TYPE')]"
 MILITARY_FORMATION_NUMBER_OF_CONSCRIPTS_DEFAULT_TYPE_RAISED: "@conscripts! #v [MilitaryFormation.GetNumConscriptsCombatUnitsOfType(MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self)]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormation.GetNumExpectedConscriptsCombatUnitsOfType(MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self), MilitaryFormation.GetNumConscriptsCombatUnitsOfType(MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self)), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_DEFAULT_TYPE_CONSCRIPTS')]"
 MILITARY_FORMATION_NUMBER_OF_CONSCRIPTS_DEFAULT_TYPE_NOT_RAISED: "@conscripts! #v [MilitaryFormation.GetNumExpectedConscriptsCombatUnitsOfType(MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self)]#!"
 MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_DEFAULT_TYPE: " + [Subtract_int32(MilitaryFormation.GetNumExpectedRegularCombatUnitsOfType(MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self), MilitaryFormation.GetNumRegularCombatUnitsOfType(MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self))]"
 MILITARY_FORMATION_NUMBER_OF_CONSCRIPTS_NOT_RAISED: "@conscripts! #v [MilitaryFormationUnitEntry.GetExpectedNumConscriptUnits]#!"
 MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_DEFAULT_TYPE_CONSCRIPTS: " + [Subtract_int32(MilitaryFormation.GetNumExpectedConscriptsCombatUnitsOfType(MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self), MilitaryFormation.GetNumConscriptsCombatUnitsOfType(MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self))]"
 MILITARY_FORMATION_NUMBER_OF_FLOTILLAS: "@flotillas! #v [MilitaryFormationUnitEntry.GetCurrentNumTotalUnits]#! [AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumRegularUnits, MilitaryFormationUnitEntry.GetCurrentNumTotalUnits), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_FLOTILLAS')]"
 MILITARY_FORMATION_NUMBER_OF_EXPECTED_FLOTILLAS: "+ [Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumRegularUnits, MilitaryFormationUnitEntry.GetCurrentNumTotalUnits)]"
 MILITARY_FORMATION_UNIT_GROUP_NUMBER_OF_EXPECTED_BATTALIONS: "+ [Subtract_int32(CombatUnitGroup.GetExpectedNumUnits, CombatUnitGroup.GetCurrentNumUnits)]"
 MILITARY_FORMATION_UNIT_GROUP_NUMBER_OF_FLOTILLAS: "@flotillas! #v [CombatUnitGroup.GetCurrentNumUnits]#! [CombatUnitGroup.GetExpectedNumUnits]"
 MILITARY_FORMATION_DISBAND_TOOLTIP: "[MilitaryFormation.GetName][ConcatIfNeitherEmpty('\n\n',GetDesc(MilitaryFormation.Disband))] #r auflösen#!"
 MILITARY_FORMATION_DISBAND: "Auflösen"
 MILITARY_FORMATION_TRANSFER_UNIT_TOOLTIP: "[Concept('concept_unit', '$concept_units$')] zu anderer [SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_TRANSFER_UNIT_ARMY_TOOLTIP', 'MILITARY_FORMATION_TRANSFER_UNIT_FLEET_TOOLTIP')] verlegen"
 MILITARY_FORMATION_TRANSFER_UNIT_ARMY_TOOLTIP: "[concept_army]"
 MILITARY_FORMATION_TRANSFER_UNIT_FLEET_TOOLTIP: "[concept_fleet]"
 FORMATION_STATUS_TRAVELING_TO_SEA_NODE_INVASION_SHORT: "Vorbereitung von [concept_naval_invasion], Reise nach „[Invasion.GetSeaNodeName]“ ([LabelingHelper.GetDaysLocWithoutTooltip(MilitaryFormation.GetTravelDaysLeft)])"
 FORMATION_STATUS_TRAVELING_TO_SEA_NODE_INVASION: "Vorbereitung von [Invasion.GetName], Reise nach „[Invasion.GetSeaNodeName]“ ([LabelingHelper.GetDaysLocWithoutTooltip(MilitaryFormation.GetTravelDaysLeft)])"
 FORMATION_STATUS_TRAVELING_TO_INVASION_FRONT: "Reist nach [Invasion.GetSourceState.GetCountry.GetFlagTextIcon] „[Invasion.GetSourceState.GetName]“ ([LabelingHelper.GetDaysLocWithoutTooltip(MilitaryFormation.GetTravelDaysLeft)]) zwecks [concept_invasion] von [Invasion.GetTargetState.GetCountry.GetFlagTextIcon] „[Invasion.GetTargetState.GetName]“"
 FORMATION_STATUS_PREPARING_INVASION: "Bereitet [concept_invasion] in „[Invasion.GetTargetState.GetNameWithCountryFlag]“ vor ([LabelingHelper.GetDaysLocWithoutTooltip(Invasion.GetPreparationDaysLeftRaw)])"
 FORMATION_STATUS_ADVANCING_INVASION: "In „[Invasion.GetSourceState.GetNameWithCountryFlag]“ [Concept('concept_invasion', 'bei der Invasion')] von „[Invasion.GetTargetState.GetNameWithCountryFlag]“"
 FLEET_STATUS_NAVAL_INVASION_TRYING_TO_INTERCEPT: "Versucht, feindliche [Concept('concept_fleet', '$concept_fleets$')] in der Ostsee für die [Invasion.GetName] abzufangen und zu [Concept('concept_battle', 'bekämpfen')]. Alle feindlichen [Concept('concept_fleet', '$concept_fleets$')] müssen [concept_admiral_defeated|l] werden"
 FLEET_STATUS_NAVAL_INVASION_TRYING_TO_INTERCEPT_SHORT: "Versucht, feindliche [Concept('concept_fleet', '$concept_fleets$')] in der Ostsee für die [Invasion.GetName] abzufangen und zu [Concept('concept_battle', 'bekämpfen')]"
 FLEET_STATUS_NAVAL_INVASION_NO_INTERCEPT: "@warning! Bei „[MilitaryFormation.GetCurrentSeaNode.GetSeaNodeName]“ kann die [Invasion.GetName] nicht fortgesetzt werden, wenn kein [concept_admiral] einen [concept_order] mit „#tooltippable_name #tooltip:character_interception_add_desc $character_interception_add$#!“#! erhält. Alle feindlichen [Concept('concept_fleet', '$concept_fleets$')] müssen [concept_admiral_defeated|l] werden"
 FLEET_STATUS_NAVAL_INVASION_NO_INTERCEPT_SHORT: "@warning! [concept_naval_invasion] könnte nicht vorankommen, wenn kein [concept_admiral] einen [concept_order] mit „#tooltippable_name #tooltip:character_interception_add_desc $character_interception_add$#!#!“ erhält."
 FORMATION_STATUS_WAITING_DEFEAT_ENEMY_FLEETS_SHORT: "Bereit für [concept_naval_invasion]; wartet darauf, dass feindliche [Concept('concept_fleet', '$concept_fleets$')] [concept_admiral_defeated|l] werden"
 FORMATION_STATUS_WAITING_DEFEAT_ENEMY_FLEETS: "Bereit für [Invasion.GetName]; wartet darauf, dass feindliche [Concept('concept_fleet', '$concept_fleets$')] [concept_admiral_defeated|l] werden und „[Invasion.GetSeaNodeName]“ von [MilitaryFormation.GetCountry.GetAltName('DAT')] kontrolliert wird"
 FORMATION_STATUS_FIGHTING_CONTROL_SEA_NODE: "Versucht, „[Invasion.GetSeaNodeName]“ für [Invasion.GetName] zu kontrollieren. Alle feindlichen [Concept('concept_fleet', '$concept_fleets$')] müssen [concept_admiral_defeated|l] werden"
 FORMATION_STATUS_FIGHTING_CONTROL_SEA_NODE_SHORT: "Versucht, „[Invasion.GetSeaNodeName]“ für [concept_naval_invasion] zu kontrollieren"
 FORMATION_STATUS_CONTROLLING_SEA_NODE: "Hat Kontrolle über „[Invasion.GetSeaNodeName]“ für [Invasion.GetName]"
 FORMATION_STATUS_CONTROLLING_SEA_NODE_SHORT: "Hat Kontrolle über „[Invasion.GetSeaNodeName]“ für [concept_naval_invasion]"
 FORMATION_STATUS_DEFENDING_INVASION_AT_STATE: "Derzeit in „[Invasion.GetTargetState.GetNameWithCountryFlag]“ bei der Verteidigung gegen die [Invasion.GetInvaderCountry.GetAdjective|l]e [concept_invasion] von „[Invasion.GetSourceState.GetNameWithCountryFlag]“"
 FORMATION_STATUS_DEFENDING_INVASION_AT_SEA_REGION: "Derzeit in „[Province.GetSeaNodeName]“ bei der Verteidigung gegen die [Invasion.GetInvaderCountry.GetAdjective|l]e [concept_invasion]"
 FORMATION_STATUS_DEFENDING_INVASION_AT_HQ: "Derzeit in [HQ.GetName] bei der Verteidigung gegen die [Invasion.GetInvaderCountry.GetAdjective|l]e [concept_invasion]"
 FORMATION_STATUS_DEFENDING_INVASION_SHORT: "Verteidigt gegen [Invasion.GetName]"
 FORMATION_STATUS_LANDING: "Führt in „[Invasion.GetTargetState.GetName]“ eine Marineinvasion durch ([Invasion.GetLandingProgress|v%0])"
 FORMATION_STATUS_LANDING_SHORT: "Führt in „[Invasion.GetTargetState.GetName]“ eine Marineinvasion durch, hat derzeit [Invasion.GetLandingProgress|v%0] [concept_landing_progress]"
 FORMATION_STATUS_TRAVELING_TO_FRONT: "Reist zu „[Front.GetName]“ ([MilitaryFormation.GetTravelDaysLeft|v] verbleibende Tage, derzeit in „[MilitaryFormation.GetLocationString]“)"
 FORMATION_STATUS_TRAVELING_TO_SEA_NODE: "Reist nach „[Province.GetStateRegion.GetName]“ ([MilitaryFormation.GetTravelDaysLeft|v] verbleibende Tage, derzeit in „[MilitaryFormation.GetLocationString]“)"
 FORMATION_STATUS_TRAVELING_TO_HQ: "Reist zu „[HQ.GetName]“ ([MilitaryFormation.GetTravelDaysLeft|v] verbleibende Tage, derzeit in „[MilitaryFormation.GetStateAtPosition.GetName]“)[ConcatIfNeitherEmpty('\n', AddLocalizationIf(MilitaryFormation.IsFullyDefeated, 'FORMATION_FULLY_DEFEATED_SHORT'))]"
 FORMATION_STATUS_AT_FRONT: "An Front „[Front.GetName]“"
 FORMATION_STATUS_AT_HQ: "Stationiert in [HQ.GetName][AddLocalizationIf(MilitaryFormation.IsReadyToDefendNavalInvasion, 'ARMY_STATUS_READY_DEFEND_INVASION')]"
 FORMATION_STATUS_AT_SEA_NODE: "In „[Province.GetStateRegion.GetName]“ ([concept_presence]: [MilitaryFormation.GetSeaPresence|v%0])[AddLocalizationIf(MilitaryFormation.IsReadyToDefendNavalInvasion, 'FLEET_STATUS_READY_DEFEND_INVASION')]"
 ARMY_STATUS_READY_DEFEND_INVASION: "bereit, jede [Concept('concept_naval_invasion', '$concept_naval_invasions$')] zu verteidigen, die auf „[MilitaryFormation.GetCurrentHQ.GetName]“ abzielt"
 FLEET_STATUS_READY_DEFEND_INVASION: "bereit, jede [Concept('concept_naval_invasion', '$concept_naval_invasions$')] zu verteidigen, die auf „[MilitaryFormation.GetCurrentSeaNode.GetSeaNodeName]“ abzielt"
 MILITARY_FORMATION_OFFENSE: "@unit_offense! [MilitaryFormation.GetAverageOffenseExcludeUnavailableManpower|1v]"
 MILITARY_FORMATION_OFFENSE_TOOLTIP: "#header [concept_offense]#!\n@unit_offense! [MilitaryFormation.GetAverageOffenseExcludeUnavailableManpower|1v] [concept_offense] im Durchschnitt\n$TOOLTIP_DELIMITER$\n@unit_offense! [MilitaryFormation.GetAverageOffense|1v] [concept_offense] im Durchschnitt bei voller [concept_manpower]"
 MILITARY_FORMATION_DEFENSE: "@unit_defense! [MilitaryFormation.GetAverageDefenseExcludeUnavailableManpower|1v]"
 MILITARY_FORMATION_DEFENSE_TOOLTIP: "#header [concept_defense]#!\n@unit_defense! [MilitaryFormation.GetAverageDefenseExcludeUnavailableManpower|1v] [concept_defense] im Durchschnitt\n$TOOLTIP_DELIMITER$\n@unit_defense! [MilitaryFormation.GetAverageDefense|1v] [concept_defense] im Durchschnitt bei voller [concept_manpower]"
 FORMATION_STATUS_TRAVELING_TO_FRONT_SHORT: "Reist nach „[Front.GetName]“ ([MilitaryFormation.GetTravelDaysLeft|v] Tage)"
 FORMATION_STATUS_TRAVELING_TO_SEA_NODE_SHORT: "Reist nach „[Province.GetStateRegion.GetName]“ ([MilitaryFormation.GetTravelDaysLeft|v] Tage)"
 FORMATION_STATUS_TRAVELING_TO_HQ_SHORT: "Reist nach „[HQ.GetName]“ ([MilitaryFormation.GetTravelDaysLeft|v] Tage)"
 FORMATION_STATUS_AT_FRONT_SHORT: "An Front „[Front.GetName]“"
 FORMATION_STATUS_AT_HQ_SHORT: "Stationiert im HQ „[HQ.GetName]“"
 FORMATION_STATUS_AT_SEA_NODE_SHORT: "In „[Province.GetStateRegion.GetName]“ ([concept_presence]: [MilitaryFormation.GetSeaPresence|v%0])"
 COMBAT_UNIT_TYPES_CONCEPT: "[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')]"
 COMBAT_UNITS_CONCEPT: "[Concept('concept_unit', '$concept_units$')]"
 MILITARY_FORMATION_BLOCKADE_TOOLTIP: "#header Maximale [concept_blockade]-Stärke#!\n[MilitaryFormation.GetMaxBlockadeStrength|vK] für „[MilitaryFormation.GetName]“\n$TOOLTIP_DELIMITER$\n[MilitaryFormation.GetCurrentBlockadeStrength|vK] derzeitige Stärke aufgrund von [MilitaryFormation.GetSeaPresence|v%0] [concept_presence]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_ATTRITION_RISK_ICON_ARMY', 'MILITARY_FORMATION_ATTRITION_RISK_ICON_NAVY')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_ARMY: "[SelectLocalization(GreaterThan_CFixedPoint(MilitaryFormation.GetAttritionRaw, GetStaticModifier('base_army_attrition').GetValueFor('military_formation_attrition_risk_add')), '@high_attrition!', '@attrition!')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_NAVY: "[SelectLocalization(GreaterThan_CFixedPoint(MilitaryFormation.GetAttritionRaw, GetStaticModifier('base_army_attrition').GetValueFor('military_formation_attrition_risk_add')), '@high_attrition!', '@attrition!')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_WITH_LABEL: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_ATTRITION_RISK_ICON_ARMY_WITH_LABEL', 'MILITARY_FORMATION_ATTRITION_RISK_ICON_NAVY_WITH_LABEL')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_ARMY_WITH_LABEL: "[SelectLocalization(GreaterThan_CFixedPoint(MilitaryFormation.GetAttritionRaw, GetStaticModifier('base_army_attrition').GetValueFor('military_formation_attrition_risk_add')), 'Hohe @high_attrition!', 'Normale @attrition!')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_NAVY_WITH_LABEL: "[SelectLocalization(GreaterThan_CFixedPoint(MilitaryFormation.GetAttritionRaw, GetStaticModifier('base_army_attrition').GetValueFor('military_formation_attrition_risk_add')), 'Hohe @high_attrition!', 'Normale @attrition!')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_VAL: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_ATTRITION_RISK_ICON_ARMY_VAL', 'MILITARY_FORMATION_ATTRITION_RISK_ICON_NAVY_VAL')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_ARMY_VAL: "[SelectLocalization(GreaterThan_CFixedPoint(MilitaryFormation.GetAttritionRaw, GetStaticModifier('base_army_attrition').GetValueFor('military_formation_attrition_risk_add')), '@high_attrition!', '@attrition!')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_NAVY_VAL: "[SelectLocalization(GreaterThan_CFixedPoint(MilitaryFormation.GetAttritionRaw, GetStaticModifier('base_army_attrition').GetValueFor('military_formation_attrition_risk_add')), '@high_attrition!', '@attrition!')]"
 MILITARY_FORMATION_ATTRITION: "$MILITARY_FORMATION_ATTRITION_RISK_ICON$ [MilitaryFormation.GetAverageAttritionPerWeek|%1^-]"
 MILITARY_FORMATION_ATTRITION_DESC: "#header [concept_attrition] in [MilitaryFormation.GetName]#!\nDerzeit: $MILITARY_FORMATION_ATTRITION_RISK_ICON_VAL$[Nbsp][MilitaryFormation.GetAverageAttritionPerWeek|%1^-]\n$TOOLTIP_DELIMITER$\n#indent_newline:3 [Concept('concept_unit', '$concept_units$')] in [MilitaryFormation.GetName] werden [MilitaryFormation.GetAverageAttritionPerWeek|%1^-] [concept_casualties] pro Woche erleiden (#v durchschnittlich $CASUALTIES|0-$#! @manpower![Nbsp][concept_manpower]) aufgrund von:\n#indent_newline:3 $MILITARY_FORMATION_ATTRITION_RISK_ICON_VAL$[Nbsp]$VAL|0%-$ wöchentliches [Concept('concept_attrition', 'Zermürbungsrisiko')]\n$BREAKDOWN$#!\n$MIN|0%v$ bis $MAX|0%v$ $concept_casualties$, wenn $concept_attrition$ greift#!"
 MILITARY_FORMATION_ATTRITION_DESC_BASE: "$TAB$Grundzermürbungsrisiko: #v $VAL|%0-$#!"
 MILITARY_FORMATION_ATTRITION_RISK_EXILE_PENALTY: "$VAL|%-=^2$ durch Status als @exiled_state![Nbsp][Concept('concept_exiled_army','$concept_exiled_army_short$')]"
 MILITARY_FORMATION_ATTRITION_RISK_ON_ENEMY_TERRITORY: "$VAL|%-=^2$ durch Aufenthalt in feindlichem Territorium"
 MILITARY_FORMATION_ATTRITION_RISK_EFFECT_FROM_BEING_EXILED: "$MILITARY_FORMATION_ATTRITION_RISK_ICON_ARMY_VAL$[Nbsp][Concept('concept_attrition', '$concept_attrition_risk$')]: $VAL|%-=^2$ (derzeit: [MilitaryFormation.GetAttritionRaw|%0-])"
 MILITARY_PANEL_ACTIVATE_CONSCRIPTS: "Wehrpflichtige einberufen"
 MILITARY_PANEL_GARRISON_TOTAL_DEFENSES: "Verteidigung insgesamt"
 MILITARY_PANEL_HQ_HEADER_FORMAT: "#variable [Hq.GetName]#!"
 MILITARY_PANEL_HQ_AVAILABLE: "Verfügbar"
 MILITARY_PANEL_HQ_STATE_NAME_FORMAT: "[State.GetName]"
 MILITARY_PANEL_NO_BATTALIONS: "In diesem [concept_hq] befinden sich keine verfügbaren [Concept('concept_battalion', '$concept_battalions$')]"
 MILITARY_PANEL_COMMANDER_NAME_FORMAT: "[Character.GetFullName]"
 MILITARY_PANEL_BUILDING_TROOP_NAME: "[Building.GetCustom('troop_name')] in [Building.GetState.GetName]"
 MILITARY_PANEL_MOBILIZED: "[Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')]"
 SUPPLY_NETWORK_MAPMARKER_HEADER: "Einzelheiten zum [GetPlayer.GetAdjectiveNoFormatting|l]en [concept_supply_network]:"
 SEA_NODE_DAMAGE_DESC: "@warning! [Concept('concept_raid_convoys', 'Komvoi-Überfälle')] haben vor Kurzem #v $NUM_SUNK_CONVOYS|-$#! der [concept_convoys], die diesen Knoten passieren, versenkt und damit die [concept_shipping_lane]-Effizienz um durchschnittlich #v $DAMAGE|-%$#! verringert. Wir schätzen, dass wir #v $DAYS_TO_RECOVER$#! Tag(e) brauchen werden, um die verlorenen [concept_convoys] vollständig zu ersetzen."
 SUPPLY_NETWORK_DESC: "$SUPPLY_NETWORK_MAPMARKER_HEADER$\n$NUM_CONVOYS_NO_DAMAGE$\n$USED_CONVOYS$\n$NUM_SEA_NODES$\n$SUPPLY_NETWORK_STRENGTH$"
 SEA_NODE_TOOLTIP: "#header [concept_sea_node] in SR „[StrategicRegion.GetNameNoFormatting]“#!\n$TOOLTIP_DELIMITER$\nEs gibt #v $NUM_CONVOYS$#! [concept_convoys], die zu unseren [Concept('concept_shipping_lane', '$concept_shipping_lanes$n')] gehören und diesen Knoten passieren[ConcatIfNeitherEmpty('\n','$SEA_NODE_DAMAGE$')]\n\n$SUPPLY_NETWORK$[ConcatIfNeitherEmpty('\n\n', StrategicRegion.GetConvoyRaidsDesc)]"
 MOVEMENT_MARKER_ALLIED_FLEETS_HEADER: "#title Verbündete [Concept('concept_fleet', '$concept_fleets$')]:#!"
 MOVEMENT_MARKER_ENEMY_FLEETS_HEADER: "#title Gegnerische [Concept('concept_fleet', '$concept_fleets$')]:#!"
 MOVEMENT_MARKER_NEUTRAL_FLEETS_HEADER: "#title Neutrale [Concept('concept_fleet', '$concept_fleets$')]#!"
 MOVEMENT_MARKER_ALLIED_ARMIES_HEADER: "#title Verbündete [Concept('concept_army', '$concept_armies$')]:#!"
 MOVEMENT_MARKER_ENEMY_ARMIES_HEADER: "#title Gegnerische [Concept('concept_army', '$concept_armies$')]:#!"
 MOVEMENT_MARKER_NEUTRAL_ARMIES_HEADER: "#title Neutrale [Concept('concept_army', '$concept_armies$')]:#!"
 MOVEMENT_MARKER_FORMATION_LIST_ENTRY: "[MilitaryFormation.GetCountry.GetFlagTextIcon] [MilitaryFormation.GetUnitIcon]#v [MilitaryFormation.GetNumCombatUnits]#! [MilitaryFormation.GetName]"
 MOVEMENT_MARKER_TRAVEL_TIME_BREAKDOWN_ENTRY: "#v $TRAVEL_TIME$#! Tag(e) – $MOVEMENT_MARKER_FORMATION_LIST_ENTRY$"
 SEA_NODE_MOVEMENT_MARKER_TOOLTIP: "#header [SeaNodeMovementMarker.GetSeaNode.GetStateRegion.GetName]#!\n[SelectLocalization(SeaNodeMovementMarker.HasActiveSupplyNetwork, SeaNodeMovementMarker.GetActiveSupplyNetworkDesc, 'NO_ACTIVE_SUPPLY_NETWORK')][ConcatIfNeitherEmpty('\n', SeaNodeMovementMarker.GetConvoyRaidingDesc)][ConcatIfNeitherEmpty('\n', SeaNodeMovementMarker.GetInvasionDesc)]\n$TOOLTIP_DELIMITER$\n[GetDesc(SeaNodeMovementMarker.GetSeaNode.GetDeploySelectedFormationsCommand)][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(SeaNodeMovementMarker.IsAllSelectedFormationsTarget, 'SEA_NODE_TRAVEL_TIME'))][AddLocalizationIf(IsValid(SeaNodeMovementMarker.GetSeaNode.GetDeploySelectedFormationsCommand), 'SEA_NODE_MOVEMENT_MARKER_RIGHT_CLICK_PROMPT')][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(Not(StringIsEmpty(SeaNodeMovementMarker.GetPresentFormationsBreakdown)), 'SEA_NODE_MOVEMENT_MARKER_PRESENT_FORMATIONS'))]"
 SEA_NODE_MOVEMENT_MARKER_TOOLTIP_CONVOY_RAIDED: "@warning! Unser [concept_supply_network] in der SR „[SeaNodeMovementMarker.GetSeaNode.GetStateRegion.GetNameNoFormatting]“ wird verringert ([SeaNodeMovementMarker.GetConvoyRaidingEnemyFleetsDesc])"
 SEA_NODE_MOVEMENT_MARKER_TOOLTIP_NAVALLY_INVADED: "@warning! Unsere Gegner beginnen eine [concept_naval_invasion]. Der [concept_sea_node] ist derzeit: [SeaNodeMovementMarker.GetInvasionStatus]"
 SEA_NODE_MOVEMENT_MARKER_TOOLTIP_SUPPLY_NETWORK: "#v $SUPPLY_NETWORK_STRENGTH|%$#! [concept_supply_network]-Stärke:"
 SEA_NODE_MOVEMENT_MARKER_RIGHT_CLICK_PROMPT: "@rightclick! #i Rechtsklick, um [Concept('concept_fleet', '$concept_fleets$')] hier einzusetzen#!\n\n#title Reisezeit:#!#indent_newline:3 \n[SeaNodeMovementMarker.GetTravelTimeBreakdown]#![ConcatIfNeitherEmpty('\n\n' , SeaNodeMovementMarker.GetPresentFormationsBreakdown)]"
 SEA_NODE_TRAVEL_TIME: "#title Reist hierher; wird ankommen in:#!#indent_newline:3 \n[SeaNodeMovementMarker.GetTravelTimeBreakdown]#!"
 SEA_NODE_MOVEMENT_MARKER_TOOLTIP_RAIDING_FLEET: "[MilitaryFormation.GetName] [Concept('concept_raid_convoys', 'überfällt Konvois')] "
 SEA_NODE_MOVEMENT_MARKER_TOOLTIP_MULTIPLE_RAIDING_FLEETS: "#v #tooltippable #tooltip:$BREAKDOWN$ $COUNT$#!#!#! [Concept('concept_raid_convoys', 'konvoiüberfallende')] [Concept('concept_fleet', '$concept_fleets$')]"
 NO_ACTIVE_SUPPLY_NETWORK: "#title Es gibt hier kein aktives [concept_supply_network]#!"
 SEA_NODE_MOVEMENT_MARKER_PRESENT_FORMATIONS: "#title Anwesende [Concept('concept_military_formation', '$concept_military_formations$')]:#indent_newline:3 \n[SeaNodeMovementMarker.GetPresentFormationsBreakdown]#!"
 HQ_MOVEMENT_MARKER_TOOLTIP: "#header [Hq.GetName]#!\n$TOOLTIP_DELIMITER$\n[GetDesc(Hq.GetStationSelectedFormationsCommand)][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(HQMovementMarker.IsAllSelectedFormationsTarget, 'HQ_TRAVEL_TIME'))][AddLocalizationIf(IsValid(Hq.GetStationSelectedFormationsCommand), 'HQ_MOVEMENT_MARKER_RIGHT_CLICK_PROMPT')][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(Not(StringIsEmpty(HQMovementMarker.GetPresentFormationsBreakdown)), 'HQ_MOVEMENT_MARKER_PRESENT_FORMATIONS'))]"
 HQ_TRAVEL_TIME: "#title Reist hierher; wird ankommen in:#!#indent_newline:3 \n[HQMovementMarker.GetTravelTimeBreakdown]#!"
 HQ_MOVEMENT_MARKER_RIGHT_CLICK_PROMPT: "@rightclick!#i Rechtsklick#!, um die ausgewählten [Concept('concept_military_formation', '$concept_military_formations$')] hier zu stationieren\n\n#title Reisezeit:#!#indent_newline:3 \n[HQMovementMarker.GetTravelTimeBreakdown]#!"
 HQ_MOVEMENT_MARKER_PRESENT_FORMATIONS: "#title Anwesende [Concept('concept_military_formation', '$concept_military_formations$')]:#indent_newline:3 \n[HQMovementMarker.GetPresentFormationsBreakdown]#!"
 HQ_MOVEMENT_MARKER_NON_PLAYER_COUNTRY_TOOLTIP: "#header [Hq.GetCountry.GetAdjective|U]es [Hq.GetNameNoFlag]#![ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', AddLocalizationIf(Not(StringIsEmpty(HQMovementMarker.GetPresentFormationsBreakdown)), 'HQ_MOVEMENT_MARKER_PRESENT_FORMATIONS'))]"
 FRONT_MOVEMENT_MARKER_TOOLTIP: "#header [Front.GetName]#!\n$TOOLTIP_DELIMITER$\n[AddLocalizationIf(Not(StringIsEmpty(Front.GetPlayerAdvantageDesc)), 'DATA_FRONT_NAME_STATUS_TOOLTIP_BREAKDOWN')]\n\n[GetDesc(Front.GetDeploySelectedFormationsCommand)][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(FrontMovementMarker.IsAllSelectedFormationsTarget, 'FRONT_TRAVEL_TIME'))][AddLocalizationIf(IsValid(Front.GetDeploySelectedFormationsCommand), 'FRONT_MOVEMENT_MARKER_RIGHT_CLICK_PROMPT')][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(Not(StringIsEmpty(FrontMovementMarker.GetPresentFormationsBreakdown)), 'FRONT_MOVEMENT_MARKER_PRESENT_FORMATIONS'))]"
 FRONT_MOVEMENT_MARKER_ADVANTAGE_LABEL: "#tooltippable #tooltip:[Front.GetTooltipTag],DATA_FRONT_NAME_STATUS_TOOLTIP_BREAKDOWN #v [Front.GetPlayerAdvantageRaw|+]#!#!#!"
 FRONT_TRAVEL_TIME: "#title Reist hierher; wird ankommen in:#!#indent_newline:3 \n[FrontMovementMarker.GetTravelTimeBreakdown]#!"
 FRONT_MOVEMENT_MARKER_RIGHT_CLICK_PROMPT: "@rightclick! #i Rechtsklick#!, um die ausgewählten [Concept('concept_military_formation', '$concept_military_formations$')] an dieser [concept_front] zu stationieren\n\n#title Reisezeit:#!#indent_newline:3 \n[FrontMovementMarker.GetTravelTimeBreakdown]#!"
 FRONT_MOVEMENT_MARKER_PRESENT_FORMATIONS: "#title Anwesende [Concept('concept_military_formation', '$concept_military_formations$')]:#indent_newline:3 \n[HQMovementMarker.GetPresentFormationsBreakdown]#!"
 FRONT_MARKER_TOOLTIP: "#header [Front.GetName|U]#!\n$TOOLTIP_DELIMITER$\n[FrontMarker.GetFront.GetPlayerAdvantageDesc]"
 UNITS_PROVIDED_FROM_BUILDING: "[Building.GetCombatUnitsIcon] [Building.GetNumActiveUnitsProvidedToFormation(MilitaryFormation.Self)|v] [SelectLocalization(NotZero(MilitaryFormation.GetIncomingNumRegularsFromBuilding(Building.Self)), 'UNITS_INCOMING_FROM_BUILDING_SHORT', '')]"
 UNITS_PROVIDED_FROM_BUILDING_TOOLTIP: "#header [Building.GetName] in „[Building.GetState.GetName]“#!\nBietet [MilitaryFormation.GetName] [Building.GetCombatUnitsIcon] [Building.GetNumActiveUnitsProvidedToFormation(MilitaryFormation.Self)|v] [SelectLocalization(NotZero(MilitaryFormation.GetIncomingNumRegularsFromBuilding(Building.Self)), 'UNITS_INCOMING_FROM_BUILDING', '')]\n$TOOLTIP_DELIMITER$\n[Building.GetUnitsProvidedToFormationBreakdown(MilitaryFormation.Self)]"
 UNITS_INCOMING_FROM_BUILDING_SHORT: "(+[MilitaryFormation.GetIncomingNumRegularsFromBuilding(Building.Self)|v])"
 UNITS_INCOMING_FROM_BUILDING: "(+[MilitaryFormation.GetUnitIcon][MilitaryFormation.GetIncomingNumRegularsFromBuilding(Building.Self)|v] [Concept('concept_incoming_units', '$concept_incoming_units_short$')|l])"
 COMBAT_UNITS_PROVIDED_TO_FORMATION_LIST_ITEM: "[BUILDING.GetCombatUnitsIcon] $NUM|v$ [COMBAT_UNIT_TYPE.GetName]"
 MILITARY_FORMATION_BUILDINGS_DESC_LIST_ITEM: "#tooltippable #tooltip:[BUILDING.GetTooltipTag]|[MILITARY_FORMATION.GetTooltipTag],UNITS_PROVIDED_FROM_BUILDING_TOOLTIP [BUILDING.GetCombatUnitsIcon][BUILDING.GetNumActiveUnitsProvidedToFormation(MilitaryFormation.Self)|v]#!#! „durch [BUILDING.GetState.GetName]“"
 CONVOY_TOPBAR_TOOLTIP: "#header @convoys! [concept_convoys]#!\nSaldo: [Country.GetNumAvailableConvoys|=+D]\n[Country.GetConvoyEffectDesc]\n$TOOLTIP_DELIMITER$\n$NUM_CONVOYS_BREAKDOWN$"
 NUM_CONVOYS_BREAKDOWN: "Unsere Gesamterzeugung von #v [Country.GetNumConvoys|D+=]#! @convoys! [concept_convoys] beruht auf:\n[Country.GetNumConvoysDesc][ConcatIfNeitherEmpty('\n', Country.GetNumConvoysDamagedDesc)]\n\n$USED_CONVOYS_TOOLTIP_SHORT$"
 CONVOY_EFFECT_REDUCED_SUPPLY_NETWORK: "Verringert [concept_supply_network]-Stärke auf #n $SUPPLY_NETWORK_STRENGTH|0%$#!"
 NUM_CONVOYS_NO_DAMAGE: "Verfügbare Konvois: #tooltippable #tooltip:[Country.GetTooltipTag],NUM_CONVOYS_TOOLTIP @convoys![Country.GetNumConvoys|D]#!#!"
 NUM_CONVOYS_NO_DAMAGE_NUMBER: "@convoys![Country.GetRequiredConvoys|vD]/[Country.GetNumConvoys|vD]"
 NUM_CONVOYS_DAMAGE: "Nutzbare Konvois: #tooltippable #tooltip:[Country.GetTooltipTag],NUM_CONVOYS_TOOLTIP @convoys![Country.GetNumUsableConvoys|D]#!#! (#R @convoys![Country.GetNumDamagedConvoys] versenkt#!)"
 NUM_CONVOYS_TOOLTIP: "#header Anzahl der produzierten [concept_convoys]#!\n$TOOLTIP_DELIMITER$\n[Country.GetNumConvoysDesc][ConcatIfNeitherEmpty('\n', Country.GetNumConvoysDamagedDesc)]"
 NUM_CONVOYS_TOOLTIP_EXTENDED: "#header @convoys! [concept_convoys]#!\n$TOOLTIP_DELIMITER$\nSaldo: [Country.GetNumAvailableConvoys|=+D]\n\n$NUM_CONVOYS_BREAKDOWN$"
 CONVOY_DAMAGE_TOOLTIP_ENTRY_LINGERING: "Verbleibender Schaden durch Konvoi-Überfälle in der SR „[StrategicRegion.GetName]“: @convoys!$VALUE|+=$"
 USED_CONVOYS: "Benötigte Konvois: #tooltippable #tooltip:[Country.GetTooltipTag],USED_CONVOYS_TOOLTIP @convoys![Country.GetRequiredConvoys|D]#!#!"
 USED_AVAILABE_CONVOYS_TEXT: "Benötigte Konvois:"
 USED_AVAILABE_CONVOYS_VALUE: "@convoys! #tooltippable #tooltip:[Country.GetTooltipTag],USED_CONVOYS_TOOLTIP [Country.GetRequiredConvoys|D]#!#! / #tooltippable #tooltip:[Country.GetTooltipTag],NUM_CONVOYS_TOOLTIP [Country.GetNumUsableConvoys|D]#!#!"
 USED_CONVOYS_TOOLTIP: "Anzahl der vom #v [Country.GetAdjective|l]en#! [concept_supply_network] benötigten Konvois\n[Country.GetRequiredConvoysBreakdown]"
 USED_CONVOYS_TOOLTIP_SHORT: "Eure Gesamtnutzung von #v [Negate_int32(Country.GetRequiredConvoys)|D+=]#! @convoys! [concept_convoys] beruht auf:\n[Country.GetRequiredConvoysBreakdown]"
 SUPPLY_NETWORK_STRENGTH_COLOR: "[GetSupplyNetworkColorstring(Country.GetSupplyNetworkStrength)]"
 SUPPLY_NETWORK_STRENGTH: "Versorgungsnetzwerkstärke: #$SUPPLY_NETWORK_STRENGTH_COLOR$ [Country.GetSupplyNetworkStrength|%0]#!"
 SUPPLY_NETWORK_STRENGTH_TEXT: "Versorgungsnetzwerkstärke:"
 SUPPLY_NETWORK_STRENGTH_VALUE: "#$SUPPLY_NETWORK_STRENGTH_COLOR$ [Country.GetSupplyNetworkStrength|%0]#!"
 SUPPLY_NETWORK_STRENGTH_TOOLTIP: "Wie viele [concept_convoys] im Vergleich zu den benötigten verfügbar sind"
 NUM_SEA_NODES: "Seeknoten: #v [Country.GetSupplyNetworkNumSeaNodes]#!"
 NUM_SEA_NODES_TEXT: "Seeknoten:"
 NUM_SEA_NODES_VALUE: "[Country.GetSupplyNetworkNumSeaNodes]"
 NUM_SEA_NODES_TOOLTIP: "Das #v [Country.GetAdjectiveNoFormatting|l]e#! [concept_supply_network] umfasst [Country.GetSupplyNetworkNumSeaNodes] Seeknoten.\n\n[Country.GetSupplyNetworkNumSeaNodesDesc]"
 SHIPPING_LANE_TOOLTIP: "#header [ShippingLane.GetName|U]#!\n[ShippingLane.GetDesc]\n\n[concept_shipping_lane_effectiveness]: [ShippingLane.GetEffectivenessFormatted]\n[concept_convoy_cost]: [ShippingLane.GetConvoyCostFormattedShort]"
 REQUIRED_CONVOYS_BREAKDOWN: "$TAB$#v [Negate_int32('(int32)$PORT_CONNECTION_CONVOYS$')|=+]#! durch [Concept('concept_port_connection', '$concept_port_connections$')]\n$TAB$#v [Negate_int32('(int32)$SUPPLY_ROUTE_CONVOYS$')|=+]#! durch [Concept('concept_supply_route', '$concept_supply_routes$')]\n$TAB$#v [Negate_int32('(int32)$GOODS_TRANSFER_CONVOYS$')|=+]#! durch [GetArticleType('goods_transfer').GetName]"
 NO_SUPPLY_NETWORK: "Es gibt keine [Concept('concept_country', '$concept_countries$')], die dieses [concept_supply_network] nutzen"
 NOT_PART_OF_ANY_MILITARY_FORMATION: "Nicht Teil einer [concept_military_formation]"
 CONVOYS_FROM_MARKET_MEMBERS: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #v $VALUE|+=$#!#!#! durch [Concept('concept_country','$concept_countries$')] in [Country.GetMarket.GetName]"
 CONVOYS_FROM_MARKET_MEMBER: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|+=$#!#! [Country.GetAltName('VON')] (Beitrag von #tooltippable #tooltip:$BREAKDOWN_TAG$ $CONTRIBUTION|v%0$#!#!)"
 CONVOYS_FROM_MARKET_MEMBER_BREAKDOWN: "#header @convoys![Nbsp]#v $VALUE|+=$#! [Concept('concept_convoys', '$concept_convoy$')]-Beitrag [Country.GetAltName('VON')]#!\n$TOOLTIP_DELIMITER$\n$CONTRIBUTION_DESC$\n$BREAKDOWN$"
 NO_CONVOYS_FROM_MARKET_MEMBERS: "Keine [concept_convoys] von anderen [Concept('concept_country','$concept_countries$n')] auf dem Markt „[Country.GetMarket.GetName]“"
 MAIN_MENU_DISCLAIMER: "#header Open Beta 1.5.3#!\n#r Bitte beachten:#! Bis auf einige wenige Ausnahmen, die im Dokument „Bekannte Probleme“ (auf unserem Discord verlinkt) aufgeführt sind, sollten nun alle für die endgültige Version 1.5 geplanten Features verfügbar sein und funktionieren. Während Sie dieses Update testen, sollten Sie sich darauf konzentrieren, wie viel Spaß das Spiel mit den neuen Funktionen macht. Wenn irgendetwas das Spielerlebnis beeinträchtigt, könnte es entfernt werden.\n\nWir werden die Zeit bis zur endgültigen Veröffentlichung von Version 1.5 damit verbringen, Features zu optimieren, Fehler zu beheben und das Balancing zu verbessern. Ihr Input ist wertvoll und wird sehr geschätzt! Bitte melden Sie Fehler und anderes Feedback hier:"
 MAIN_MENU_DISCLAIMER_DISCORD_LINK: "@discord! Discord"
 URL_TOOLTIP_OPEN_LINK: "\n$TOOLTIP_DELIMITER$\nÖffnet den folgenden Link im Webbrowser:\n"
 DISCORD_URL: "#header Treten Sie dem „Victoria 3“-Discord-Server bei#!\nChatten Sie mit anderen Spielern, diskutieren Sie das Spiel und holen Sie sich Ratschläge$URL_TOOLTIP_OPEN_LINK$[GetDiscordUrl]"
 WIKI_URL: "#header Öffnen Sie das „Victoria 3“-Wiki#!\nLesen Sie Dinge nach und tragen Sie mit Erklärungen zu den Mechaniken des Spiels zum Wiki bei$URL_TOOLTIP_OPEN_LINK$[GetWikiUrl]"
 PLAYER_RESOURCES_URL: "#header Lesen Sie die „Victoria 3“-Spieler-Ressourcen#!\nEine Sammlung nützlicher Informationen für neue und erfahrene Spieler$URL_TOOLTIP_OPEN_LINK$[GetPlayerResourcesUrl]"
 YOUTUBE_CHANNEL_URL: "#header Schauen Sie in den „Victoria 3“-YouTube-Kanal rein#!\nVideo-Updates und Blicke hinter die Kulissen$URL_TOOLTIP_OPEN_LINK$[GetYoutubeChannelUrl]"
 SUPPLY_NETWORK_HEADER: "#title [concept_supply_network]#!"
 ACTIVE_BATTLES_HEADER: "#title Aktive Schlachten#!"
 ACTIVE_LAND_BATTLES_HEADER: "#title Aktive Landschlachten#!"
 ACTIVE_NAVAL_BATTLES_HEADER: "#title Aktive Seeschlachten#!"
 ENDED_BATTLES_HEADER: "#title Beendete Schlachten#!"
 ENDED_LAND_BATTLES_HEADER: "#title Beendete Landschlachten#!"
 ENDED_NAVAL_BATTLES_HEADER: "#title Beendete Seeschlachten#!"
 SEA_REGION_PANEL_ADMIRALS: "#title Admiralsaktivität#!"
 NO_ACTIVE_LAND_BATTLES: "Keine aktiven Landschlachten"
 NO_ACTIVE_NAVAL_BATTLES: "Keine aktiven Seeschlachten"
 NO_ENDED_LAND_BATTLES: "Keine beendeten Landschlachten"
 NO_ENDED_NAVAL_BATTLES: "Keine beendeten Seeschlachten"
 SHIPPING_LANES: "Schifffahrtswege"
 NO_CONVOY_RAIDING_ADMIRALS: "Keine [Concept('concept_admiral', '$concept_admirals$')] [Concept('concept_raid_convoys', 'überfallen')|l] hier Konvois"
 NO_INTERCEPTING_ADMIRALS: "Keine [Concept('concept_admiral', '$concept_admirals$')] patrouillieren hier"
 NO_FLOTILLAS_IN_HQ: "Keine @flotillas! [Concept('concept_flotilla', '$concept_flotillas$')] in diesem [concept_hq]"
 NO_BATTALIONS_IN_HQ: "Keine @battalions! [Concept('concept_battalion', '$concept_battalions$')] in diesem [concept_hq]"
 ORIGIN_STATE_NAME: "[State.GetName]"
 ORIGIN_STATE_NUMBER_OF_SHIPPING_LANES: "(#v [GetDataModelSize(State.AccessShippingLanesFromThisState(SeaRegionPanel.GetProvince.Self))]#!)"
 ORIGIN_STATE_NUMBER_OF_SHIPPING_LANES_TOOLTIP: "Gesamtzahl der [Concept('concept_shipping_lane', '$concept_shipping_lanes$')] nach/aus [State.GetName] durch diese Seeregion"
 ORIGIN_STATE_TOTAL_CONVOYS_USED: "@convoys! #v [State.GetTotalConvoysFromShippingLanesViaState(SeaRegionPanel.GetProvince.Self)|D]#!"
 ORIGIN_STATE_TOTAL_CONVOYS_USED_TOOLTIP: "Gesamtzahl der [concept_convoys], die von [Concept('concept_shipping_lane', 'Schifffahrtswegen')] nach/aus [State.GetName] durch diese Seeregion genutzt werden"
 ORIGIN_STATE_TOTAL_NUMBER_OF_PORT_CONNECTIONS: "#v [State.GetTotalPortConnectionsViaState(SeaRegionPanel.GetProvince.Self)]#! [SelectLocalization(GreaterThan_int32(State.GetTotalPortConnectionsViaState(SeaRegionPanel.GetProvince.Self), '(int32)1'), Concept('concept_port_connection', '$concept_port_connections$'), concept_port_connection)]"
 COUNTRY_SHIPPING_LANES: "[Country.GetAdjectiveNoFlag]e [Concept('concept_shipping_lane', '$concept_shipping_lanes$')]"
 COUNTRY_SHIPPING_LANES_NETWORK_STRENGTH: "#$SUPPLY_NETWORK_STRENGTH_COLOR$ [Country.GetSupplyNetworkStrength|%0]#!"
 SHIPPING_LANE_SUPPLIED_STATE: "In [SelectLocalization(ShippingLane.GetEndState.IsValid,ShippingLane.GetEndState.GetName,ShippingLane.GetProvince.GetStateRegion.GetName)]"
 SHIPPING_LANE_SUPPLIED_STATE_GOODS_TRANSFER: "Nach [ShippingLane.GetEndState.GetName]"
 PORT_CONNECTION: "$concept_port_connection$"
 CONVOY_COST: "Konvois"
 SHIPPING_LANE_EFFECTIVENESS_SHORTHAND: "Effektivität"
 SHIPPING_LANE_STATE_BEGIN_END: "[concept_shipping_lane] von [ShippingLane.GetBeginState.GetName] nach [ShippingLane.GetEndState.GetName]"
 SHIPPING_LANE_NAME_SUPPLY_ROUTE: "[MilitaryFormation.GetName]-[concept_supply_route]"
 SHIPPING_LANE_NAME_PORT_CONNECTION: "Übersee-[concept_port_connection]"
 SHIPPING_LANE_NAME_GOODS_TRANSFER: "[GetArticleType('goods_transfer').GetName]-[concept_treaty]"
 SHIPPING_LANE_DESC_SUPPLY_ROUTE: "Verbindet „[ShippingLane.GetMilitaryFormation.GetName]“ mit „[ShippingLane.GetMilitaryFormation.GetHomeHQ.GetName]“"
 SHIPPING_LANE_DESC_PORT_CONNECTION: "Verbindet [ShippingLane.GetEndState.GetOwner.GetFlagTextIcon] „[ShippingLane.GetEndState.GetName]“ mit dem Markt „[ShippingLane.GetBeginState.GetMarket.GetName]“ ([ShippingLane.GetBeginState.GetOwner.GetFlagTextIcon] [ShippingLane.GetBeginState.GetName])"
 SHIPPING_LANE_DESC_GOODS_TRANSFER: "Überführt „[Concept('concept_good', '$concept_goods$')]“ von „[ShippingLane.GetBeginState.GetMarket.GetName]“ ([ShippingLane.GetBeginState.GetNameWithCountryFlag]) nach „[ShippingLane.GetEndState.GetMarket.GetName]“ ([ShippingLane.GetEndState.GetNameWithCountryFlag]) ([ShippingLane.GetTreaty.GetName])"
 SHIPPING_LANE_CONVOY_COST: "[Concept('concept_convoys', '$CONVOY_COST$')]: #tooltippable #tooltip:$BREAKDOWN_TAG$  @convoys!$VALUE$#!#!"
 SHIPPING_LANE_CONVOY_COST_SHORT: "#tooltippable #tooltip:$BREAKDOWN_TAG$ @convoys!$VALUE|vD$#!#!"
 SHIPPING_LANE_CONVOY_COST_GOOD_ENTRY: "$VALUE|vD=$ durch $QUANTITY|0v$ [Goods.GetTextIcon][Nbsp][Goods.GetName] ($MULT|vD$ pro Menge)"
 SHIPPING_LANE_EFFECTIVENESS_BASE: "#header [concept_shipping_lane_effectiveness]#!\n#$COLOR_TAG$ $VALUE|%0$#!Versorgungsnetzwerkstärke"
 SHIPPING_LANE_FULL_EFFECT: "Diese [concept_shipping_lane] arbeitet mit voller Wirkung."
 SHIPPING_LANE_NOT_FULL_EFFECT: "Diese [concept_shipping_lane] arbeitet nicht mit voller Wirkung. Abhängig von der Art der $concept_shipping_lane$ sorgt dies für eine Reduktion bei [concept_supply], [concept_market_access] oder der Menge an [Concept('concept_good', '$concept_goods$')], die gehandelt wird."
 SHIPPING_LANE_EFFECTIVENESS_CONVOY_RAIDING_DMG: "[Concept('concept_raid_convoys', '$concept_convoy_raiding$')]: $VALUE|%2+$"
 SHIPPING_LANE_EFFECTIVENESS: "#$COLOR_TAG$ #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|%0$#!#!#!"
 SHIPPING_LANE_SUPPLY_ROUTE_BREAKDOWN_NUM_BATTALIONS: "[Concept('concept_battalion', '$concept_battalions$')]: $VALUE|v$"
 SHIPPING_LANE_SUPPLY_ROUTE_BREAKDOWN_BASE_BATTALION_COST: "Grundkosten für Bataillone: #variable x$VALUE|1$#!"
 SHIPPING_LANE_SUPPLY_ROUTE_BREAKDOWN_EFFIENCY: "Versorgungseffizienz durch Befehlshaber: #variable x$VALUE|1$#!"
 SHIPPING_LANE_PORT_CONNECTION_BREAKDOWN_INFRA: "[concept_infrastructure_usage] in Übersee: $VALUE|0v$"
 SHIPPING_LANE_PORT_CONNECTION_BREAKDOWN_DEFINE: "Kosten durch [concept_infrastructure_usage]: #variable x$VALUE|1$#!"
 SHIPPING_LANE_BREAKDOWN_NUM_SEA_NODES: "Führt durch #v $NUM_NODES$#! Seeknoten: #variable x$VALUE$#! (#v +x$MULT$#! für jeden Seeknoten nach dem ersten)"
 SHIPPING_LANE_PREDICTION_ESTABLISH_PORT_CONNECTION: "Erzeugt eine [concept_port_connection] zwischen [STATE.GetName] und [STATE_OTHER.GetName]"
 SHIPPING_LANE_PREDICTION_REMOVE_PORT_CONNECTION: "Entfernt die [concept_port_connection] zwischen [STATE.GetName] und [STATE_OTHER.GetName]"
 SHIPPING_LANE_PREDICTION_INCREASE_DESC: "Nutzt #tooltippable #tooltip:$BREAKDOWN_TAG$ @convoys!$CONVOYS|-$#!#! zwischen [STATE.GetName] und [STATE_OTHER.GetName] [COUNTRY.GetAltName('VON')]"
 SHIPPING_LANE_PREDICTION_DECREASE_DESC: "Gibt #tooltippable #tooltip:$BREAKDOWN_TAG$ @convoys!$CONVOYS|+$#!#! für [COUNTRY.GetAltName('AKK')] frei"
 SHIPPING_LANE_PREDICTION_SUPPLY_STRENGTH: "Geschätzte neue [COUNTRY.GetAdjectiveNoFormatting|l]e [concept_supply_network]-Stärke: #$SUPPLY_NETWORK_STRENGTH_COLOR$ $NEW_STRENGTH|%0$#!"
 SHIPPING_LANE_LAST_CAPITAL_MARKET_PORT: "#N Dies ist der letzte [GetBuildingType('building_port').GetName] in der [concept_market_capital]-Region. Ihn zu entfernen, wird alle [Concept('concept_shipping_lane', '$concept_shipping_lanes$')] auflösen"
 SEA_REGION_PANEL_ADMIRAL_DELAY: "Grund-Abfangverzögerung ist [GetDefine('NMilitary', 'INTERCEPTION_DELAY_BASE_DAYS')|v] Tage plus bis zu [GetDefine('NMilitary', 'INTERCEPTION_DELAY_MAX_RANDOM_DAYS_FACTOR')|v] zufällige Tage"
 SEA_REGION_PANEL_INTERCEPTION_CHANCE: "Es gibt eine [GetDefine('NMilitary', 'INTERCEPTION_BASE_CHANCE')|v%0]ige Chance bei jedem Versuch, eine Seeschlacht zu beginnen"
 SEA_REGION_PANEL_CONVOY_RAIDERS: "Konvois überfallende $concept_admirals$"
 SEA_REGION_PANEL_INTERCEPTING_ADMIRALS: "Ihre Küste hier patrouillierende $concept_admirals$"
 SEA_REGION_PANEL_ENTRY_HEADER: "[SeaRegionSupplyNetworkEntry.AccessCountry.GetAltName('NOM')|U] hat ein Versorgungsnetzwerk in diesem Seeknoten"
 SEA_REGION_PANEL_ENTRY_IS_RAIDED: "[SeaRegionSupplyNetworkEntry.AccessCountry.GetAltName('NOM')|U] #N verliert hier [concept_convoys] durch feindliche [Concept('concept_flotilla', '$concept_flotillas$')]!#!"
 SEA_REGION_PANEL_ENTRY_COMMANDER: "Befehlshaber [Character.GetFullName] verfolgt [concept_supply]"
 CONVOYS_ENTRY_NAME: "$NAME$: $NUM_CONVOYS|v$"
 SUPPLY_NETWORK_NUM_NODES_ENTRY_MARKET_NAME: "[FIRSTMARKET.GetName] nach [SECONDMARKET.GetName]: $NUM_NODES|v$ Seeknoten"
 SUPPLY_NETWORK_NUM_NODES_ENTRY_COMMANDER_NAME: "[Character.GetFullName]: $NUM_NODES|v$ Seeknoten"
 SUPPLY_NETWORK_STRENGTH_ENTRY_MARKET_NAME: "Handelsroute von [FIRSTMARKET.GetName] nach [SECONDMARKET.GetName]"
 SUPPLY_NETWORK_STRENGTH_ENTRY_COMMANDER_NAME: "Versorgungslinie für [Character.GetFullName]"
 SUPPLY_NETWORK_STRENGTH_ENTRY_TOOLTIP_BASE: "Die Grundstärke des Versorgungsnetzwerks beträgt #$COLOR_FORMAT$ $VALUE|%0$#!"
 SUPPLY_NETWORK_STRENGTH_ENTRY_TOOLTIP_LOCAL: "Dies wird um #BOLD $VALUE|%+=0$#! verringert aufgrund von [Concept('concept_raid_convoys', 'Konvoi-Überfällen')] durch gegnerische [Concept('concept_admiral', '$concept_admirals$')]"
 SUPPLY_NETWORK_DELTA_HEADER: "Änderungen im Versorgungsnetzwerk: $DELTA_NUM_CHANGES|v$ Seeknoten"
 SUPPLY_NETWORK_DELTA_ADDED: "Region „[StrategicRegion.GetName]“ wird hinzugefügt"
 SUPPLY_NETWORK_DELTA_REMOVED: "Region „[StrategicRegion.GetName]“ wird entfernt"
 SUPPLY_NETWORK_DELTA_STRENGTH: "Versorgungsnetzwerkstärke: $NEW_STRENGTH|%0v$ ($STRENGTH_DELTA|%0+=$)"
 LAW_EVENT_TITLE_OUTCOME: "[GetPlayer.GetLawBeingEnacted.GetEnactmentLastCheckpointResult]"
 LAW_EVENT_FAIL_BREAKDOWN: "\n$LAW_ENACTMENT_STALLED_WARNING$#indent_newline:2 \n$LAW_ENACTMENT_STALL_BREAKDOWN$#!"
 LAW_EVENT_REMAINING_DAYS: "[SelectLocalization(LessThan_int32(Event.GetNumRemainingDays, GetPlayer.GetLawBeingEnacted.GetCheckpointRemainingDays), 'NORMAL_EVENT_REMAINING_DAYS', 'LAW_REMAINING_DAYS')]"
 LAW_REMAINING_DAYS: "#v [GetPlayer.GetLawBeingEnacted.GetCheckpointRemainingDays] Tage#!"
 EVENT_REMAINING_DAYS: "[SelectLocalization(Event.HasCategory('enactment'), 'LAW_EVENT_REMAINING_DAYS', 'NORMAL_EVENT_REMAINING_DAYS')]"
 NORMAL_EVENT_REMAINING_DAYS: "#v [Event.GetRemainingDays] Tage#!"
 DAYS_UNTIL_ELECTION: "[concept_election]"
 ELECTION_REMAINING_DAYS: "@clock! #v [AccessPlayer.GetDaysUntilElection] Tag(e)#!"
 EVENT_TOOLTIP: "#header [Event.GetTitle]#![ConcatIfNeitherEmpty('\n', SelectLocalization(Event.HasCategory('enactment'), 'LAW_EVENT_TOOLTIP', ''))][ConcatIfNeitherEmpty('\n', SelectLocalization(Event.HasCategory('revolution'), 'REVOLUTION_EVENT_TOOLTIP', ''))][ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(Event.HasCategory('enactment')), 'EVENT_LOCATION'))]\n\nWird automatisch aufgelöst in: $EVENT_REMAINING_DAYS$"
 EVENT_LOCATION: "Ort: [Event.GetState.GetName]"
 LAW_EVENT_TOOLTIP: "[Concept('concept_enactment_of_laws', '$concept_enactment_of_laws_enactment$')]-Ereignis bei [GetPlayer.GetLawBeingEnacted.GetName][ConcatIfNeitherEmpty('\n' , SelectLocalization(GetPlayer.GetLawBeingEnacted.HasEnactmentLastCheckpoint, 'LAW_EVENT_OUTCOME', ''))]"
 LAW_EVENT_OUTCOME: "Ausgang: [GetPlayer.GetLawBeingEnacted.GetEnactmentLastCheckpointResult]"
 REVOLUTION_EVENT_TOOLTIP: "Ereignis für die [concept_revolution] der [AccessPlayer.GetGrowingCivilWar.GetPoliticalMovement.GetName]"
 EVENT_DEBUG_TOOLTIP: "$TOOLTIP_DELIMITER$\nEreignis-ID: [EVENT.GetKey|v]"
 ADVANCEMENT_COMMANDER_CONTRIBUTION_ADD: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #v $ADVANCEMENT_CONTRIBUTION|2+=$#!#!#!"
 ADVANCEMENT_COMMANDER_CONTRIBUTION_MULT: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #v $ADVANCEMENT_CONTRIBUTION|%0=$#!#!#!"
 ADVANCEMENT_COMMANDER_CONTRIBUTION_ORIGIN: "durch [Character.GetFullName]"
 ADVANCEMENT_CONTRIBUTION_BREAKDOWN_ADD: "#v $NUM_UNITS|0$#! mobilisierte [Concept('concept_battalion', '$concept_battalions$')], #v $ADVANCEMENT_MODIFIER_VALUE|2+=$#!"
 ADVANCEMENT_CONTRIBUTION_BREAKDOWN_MULT: "#v $NUM_UNITS|0$#! mobilisierte [Concept('concept_battalion', '$concept_battalions$')], #v $ADVANCEMENT_MODIFIER_VALUE|%0=$#!"
 ADVANCEMENT_PROGRESS_BAR_TOOLTIP_INFO: "Es sind #v [Front.GetRequiredAdvanceProgressForBattle|0+]#! [concept_advancement_progress] erforderlich, um eine neue [concept_battle] zu beginnen. Schreitet nur voran, wenn ein Krieg ausgebrochen ist."
 ADVANCEMENT_PROGRESS_BAR_FORMATIONS_TOOLTIP: "#header [concept_advancement_progress] für die [FrontSide.GetCountry.GetAdjective|l]e Seite#!\nFortschritt: #v [FrontSide.GetAdvancement|1+] / [Front.GetRequiredAdvanceProgressForBattle|0+]#!"
 ADVANCEMENT_PROGRESS_NUM_ENTRY: "@battalions! $NUM$"
 ADVANCEMENT_PROGRESS_MIN_MAX_ENTRY: "@battalions! $MIN$ – $MAX$"
 HAS_GENERALS_TOOLTIP: "Diese Seite hat mindestens einen Befehlshaber"
 ALLIES: "Verbündete:"
 ALLIES_TRAVELING: "Verbündete auf dem Weg:"
 JOBSEEKERS: "[Concept('concept_jobseeker', '$concept_jobseekers$')]: "
 JOBSEEKERS_BREAKDOWN_HEADER: "#header [Concept('concept_jobseeker', '$concept_jobseekers$')] in „[STATE.GetName]“#!\n$NUM|Kv$ [Concept('concept_working_adults', 'erwachsene Arbeiter')] suchen nach neuen Arbeitsplätzen\n#variable [State.GetNumUnemployedWorkingAdults|D]#! von ihnen sind [concept_unemployed|l]\n$TOOLTIP_DELIMITER$\n"
 JOBSEEKERS_POP_TYPE_LIST_ITEM: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $NUM|Kv$#!#! [POP_TYPE.GetName] (@money!#v $AVG_WAGE|1$#!)"
 JOBSEEKERS_BREAKDOWN_FOOTER: "\n$TOOLTIP_DELIMITER$\n$STATE_QUALIFICATIONS$"
 JOBSEEKERS_POP_TYPE_BREAKDOWN_HEADER: "#header [Concept('concept_jobseeker', '$concept_jobseeking$e')|U] [POP_TYPE.GetName] in „[STATE.GetName]“#!\n$NUM|vK$ [POP_TYPE.GetName] suchen nach neuen Arbeitsplätzen\n[concept_average_wage]: @money!#v $AVG_WAGE|1$#!\n$TOOLTIP_DELIMITER$"
 JOBSEEKERS_POP_LIST_ITEM: "[Pop.GetNumWorkforce|Kv] [POP.GetName] - [POP.GetWorksAt]\n[concept_job_satisfaction]: #tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_JOB_SATISFACTION [Pop.GetCurrentJobSatisfaction|+]#!#!, [concept_average_wage]: @money![Pop.GetAverageAnnualWage|v1]\n"
 SELECT_COMMANDER_ORDER: "#title Befehl des Befehlshabers#!"
 GENERAL_LOCATION_TITLE: "#title Position des Generals (Debug)#!"
 GENERAL_LOCATION_PRESENT_DESC: "„[Character.GetOrderType.GetAltName('gerund')|v]“ in $LOCATION|v$$ADDITIONAL_LOCATION_INFO$"
 GENERAL_LOCATION_PRESENT_DESC_WITHOUT_EXTRA_INFO: "„[Character.GetOrderType.GetAltName('gerund')|v]“ in $LOCATION|v$"
 GENERAL_TRAVELING_DAYS_BREAKDOWN: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL$#!#! "
 GENERAL_TRAVELING_ARRIVAL: "#header Ankunft an Front#!\nWird eintreffen am $DATE$"
 GENERAL_NAVAL_INVASION_TOOLTIP: "#header $naval_invasion$#!\nBegleitet einen „#variable $naval_invasion$#!“-Befehl in [Character.GetInvasion.GetTargetState.GetName|v]\n\n[Character.GetInvasion.GetStatus]"
 FORMATION_BUSY_INVASION: "„[MilitaryFormation.GetName]“ ist #b nicht#! an einer [concept_invasion] beteiligt"
 FORMATION_BUSY_BATTLE: "[MilitaryFormation.GetName] ist #b nicht#! an einer [concept_battle] beteiligt"
 FORMATION_FULLY_DEFEATED: "„[MilitaryFormation.GetName]“ wurde vollständig [concept_admiral_defeated|l] und muss zum eigenen [concept_hq] zurückkehren, um sich instand zu setzen und neu zu gruppieren. Reparaturfortschritt: [MilitaryFormation.GetRepairProgress|0%v]"
 FORMATION_FULLY_DEFEATED_SHORT: "Derzeit [concept_admiral_defeated|l]"
 COMMANDER_BUSY: "[Character.GetFullName|U] ist nicht mehr [concept_busy|l]"
 ADMIRAL_BUSY_NAVAL_INVASION: "#warning @warning! Den Befehl zu wechseln, bricht den „#variable $naval_invasion$#!“-Befehl in [Character.GetInvasion.GetTargetState.GetName|v] begleitet von [Character.GetInvasion.GetGeneral.GetFullName] ab.#!"
 COMMANDER_HAS_NO_BATTALIONS: "$NAME$ hat keine [Concept('concept_battalion', '$concept_battalions$')]"
 COMMANDER_HAS_NO_FLOTILLAS: "$NAME$ hat keine [Concept('concept_flotilla', '$concept_flotillas$')]"
 INVASION_MISSING_ARMY: "$concept_invasion$ fehlen [Concept('concept_battalion', '$concept_battalions$')]"
 NAVAL_INVASION_MISSING_FLEET: "Marineinvasion fehlen [Concept('concept_flotilla','$concept_flotillas$')]"
 NAVAL_INVASION_TOO_MANY_FORMATIONS: "Marineinvasion hat zu viele [Concept('concept_military_formation', '$concept_military_formations$')]"
 NAVAL_INVASION_REDUNDANT: "In „[State.GetName]“ läuft bereits eine Invasion durch [Country.GetAltName('NOM')]"
 COMMANDER_LOCATION_ADDITIONAL_INFO_FORMAT: "\n($INFO$)"
 ADMIRAL_PREPARATION_DATE_TOOLTIP: "Erwartete Abreise: [Date.GetString]"
 NAVAL_INVASION_NO_GENERAL_ADVANCING_WARNING: "@warning! Diese [concept_naval_invasion] kann keinen [concept_landing_progress] erlangen, da kein invadierender [concept_general] einen #b Vormarsch#!-[concept_order] hat.\n\nStellen Sie sicher, dass mindestens einer der invadierenden [Concept('concept_general', '$concept_generals$')] einen #b Vormarsch#! durchführt."
 NAVAL_INVASION_NO_ADMIRAL_INTERCEPTION_CHANCE_WARNING: "@warning! Diese [concept_naval_invasion] kann nicht zum Anlanden von [Concept('concept_unit','$concept_units$')] vorankommen, weil kein invadierender [concept_admiral] [Concept('concept_order', '$concept_orders$')] hat, die es ihm erlauben, eine [concept_battle] zu beginnen.\n\nSie sollten den $concept_order$ von mindestens einem der $concept_admirals$ so ändern, dass er [Concept('concept_battle', '$concept_battles$')] beginnen kann – beispielsweise #v $interception_coast$#!."
 LAND_INVASION_HAS_FRONT: "#n „[Front.GetName]“ existiert bereits#!"
 LAND_INVASION_CANNOT_REACH: "#n Kann „[State.GetName]“ nicht über Land erreichen#!"
 COMBAT_UNITS_TYPE_AND_NUM: "#v [MilitaryFormation.GetNumCombatUnits]#!"
 COMBAT_UNITS_TYPE_AND_NUM_WITH_ICON: "[MilitaryFormation.GetCombatUnitsTypeIcon]#v [MilitaryFormation.GetNumCombatUnits]#!"
 MARKER_COMBAT_UNITS_TYPE_AND_NUM: "#v [FormationMarker.CalcTotalNumCombatUnits]#!"
 MARKER_COMBAT_UNITS_TYPE_AND_NUM_WITH_ICON: "[FormationMarker.GetCombatUnitsTypeIcon]#v [FormationMarker.CalcTotalNumCombatUnits]#!"
 FRONT_STATUS: "[SelectLocalization(MilitaryFormation.IsAdvancing,'FRONT_STATUS_ADVANCING','FRONT_STATUS_DEFENDING')]"
 FRONT_STATUS_ADVANCING: "Bringt die [concept_front] voran"
 FRONT_STATUS_DEFENDING: "Verteidigt die [concept_front]"
 FRONT_FORMATION_ORDER_NAME: "„#TODO[MilitaryFormation.GetFormationOrder.GetType.GetAltName( 'gerund')]“ ([concept_front])#!"
 CURRENT_ORDER_STATUS: "#i #b (Derzeitiger Befehl)#!#!"
 NEXT_ORDER_STATUS: " #i #b (Nächster Befehl)#!#!"
 MILITARY_FORMATION_MARKER_FORMATION_SUMMARY: "#header $FORMATIONS_HEADER$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 MILITARY_FORMATION_MARKER_FORMATION_MANPOWER: "#header [concept_manpower] von $FORMATIONS_HEADER$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 MILITARY_FORMATION_MARKER_FORMATION_OFFENSE: "#header [concept_offense] von $FORMATIONS_HEADER$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 MILITARY_FORMATION_MARKER_FORMATION_DEFENSE: "#header [concept_defense] von $FORMATIONS_HEADER$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 MILITARY_FORMATION_MARKER_FORMATION_ORGANIZATION: "#header [concept_organization] von $FORMATIONS_HEADER$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 MILITARY_FORMATION_MARKER_FORMATION_ENTRY_SUMMARY: "[COUNTRY.GetFlagTextIcon] [MILITARY_FORMATION.GetUnitIcon] [MILITARY_FORMATION.GetNumCombatUnits|v] ([MILITARY_FORMATION.GetName])"
 MILITARY_FORMATION_MARKER_FORMATION_ENTRY_MANPOWER: "[COUNTRY.GetFlagTextIcon] @manpower![MILITARY_FORMATION.GetCurrentManpower|vK] / #maximum [MILITARY_FORMATION.GetMaxManpower|vK]#! ([MILITARY_FORMATION.GetName])"
 MILITARY_FORMATION_MARKER_FORMATION_ENTRY_OFFENSE: "[COUNTRY.GetFlagTextIcon] @unit_offense! [MILITARY_FORMATION.GetAverageOffense|1v] ([MILITARY_FORMATION.GetName])"
 MILITARY_FORMATION_MARKER_FORMATION_ENTRY_DEFENSE: "[COUNTRY.GetFlagTextIcon] @unit_defense! [MILITARY_FORMATION.GetAverageDefense|1v] ([MILITARY_FORMATION.GetName])"
 MILITARY_FORMATION_MARKER_FORMATION_ENTRY_ORGANIZATION: "[COUNTRY.GetFlagTextIcon] @organization![Nbsp]$MILITARY_ORGANIZATION_VALUE_FORMATTED$ ([MILITARY_FORMATION.GetName])"
 MILITARY_FORMATION_MARKER_ALLY_FORMATIONS: "Verbündete [Concept('concept_military_formation', '$concept_military_formations$')] $POSITION_DESC$"
 MILITARY_FORMATION_MARKER_ENEMY_FORMATIONS: "Feindliche [Concept('concept_military_formation', '$concept_military_formations$')] $POSITION_DESC$"
 MILITARY_FORMATION_MARKER_POSITION_HQ: "in [Hq.GetName]"
 MILITARY_FORMATION_MARKER_POSITION_FRONT: "an [Front.GetName]"
 MILITARY_FORMATION_MARKER_POSITION_LOCATION: "in $LOCATION$"
 MILITARY_FORMATION_MARKER_SELECT_FORMATION: "[SelectLocalization(FormationMarker.IsEnemies,'MILITARY_FORMATION_MARKER_ENEMY_LABEL','MILITARY_FORMATION_MARKER_ALLIED_LABEL')] [concept_military_formation] auswählen"
 MILITARY_FORMATION_MARKER_ENEMY_LABEL: "feindliche"
 MILITARY_FORMATION_MARKER_ALLIED_LABEL: "verbündete"
 MILITARY_FORMATION_MARKER_RIGHT_CLICK_ITEM_DESC: "[MilitaryFormation.GetCountry.GetFlagTextIcon] [MilitaryFormation.GetName] [MilitaryFormation.GetUnitIcon] [MilitaryFormation.GetNumCombatUnits|v]"
 INVASION_PANEL_TITLE_INVASION: "[concept_invasion] in „[Invasion.GetTargetState.GetName]“"
 INVASION_PANEL_TITLE_NAVAL_INVASION: "[concept_naval_invasion] in „[Invasion.GetTargetState.GetName]“"
 INVASION_PANEL_TITLE: "[SelectLocalization(Invasion.IsNavalInvasion, 'INVASION_PANEL_TITLE_NAVAL_INVASION', 'INVASION_PANEL_TITLE_INVASION')]"
 INVASION_PANEL_SUBTITLE: "[Invasion.GetInvaderCountry.GetAltName('NOM')|U] invadiert [Invasion.GetInvadedCountry.GetAltName('AKK')]"
 ### Commander Orders
 defend: "Front verteidigen"
 defend_gerund: "Verteidigt"
 defend_desc: "Weist diesen Befehlshaber an, die [concept_front] zu verteidigen und all ihre Provinzen zu halten."
 defend_tooltip: "#header $defend$#!"
 defend_dig_in: "Entschiedene Verteidigung"
 defend_dig_in_gerund: "Verteidigt entschieden"
 defend_dig_in_desc: "Weist diesen Befehlshaber an, die [concept_front] zu verteidigen und all ihre Provinzen durch Eingraben zu halten."
 defend_dig_in_tooltip: "#header $defend_dig_in$#!"
 advance: "Front voranbringen"
 advance_gerund: "Rückt vor"
 advance_desc: "Weist diesen Befehlshaber an, die [concept_front] voranzubringen und in feindliches Territorium vorzudringen.\nEin Befehlshaber mit einem „Vormarsch“-Befehl kann weiterhin an Verteidigungsschlachten teilnehmen."
 advance_tooltip: "#header $advance$#!"
 advance_reckless: "Waghalsiger Vormarsch"
 advance_reckless_gerund: "Rückt waghalsig vor"
 advance_reckless_desc: "Weist diesen Befehlshaber an, die [concept_front] voranzubringen und dabei waghalsig in feindliches Territorium vorzudringen.\nEin Befehlshaber mit einem „Vormarsch“-Befehl kann weiterhin an Verteidigungsschlachten teilnehmen."
 advance_reckless_tooltip: "#header $advance_reckless$#!"
 advance_heavy_barrage: "Schweres Sperrfeuer"
 advance_heavy_barrage_gerund: "Bombardierung des Feindes"
 advance_heavy_barrage_desc: "Weist diesen Befehlshaber an, die [concept_front] voranzubringen und mit überwältigender Feuerkraft in feindliches Territorium vorzudringen.\nEin Befehlshaber mit einem „Vormarsch“-Befehl kann weiterhin an Verteidigungsschlachten teilnehmen."
 advance_heavy_barrage_tooltip: "#header $advance_heavy_barrage$#!"
 defend_desperate_charge: "Gegenansturm"
 defend_desperate_charge_gerund: "In einem verzweifelten Ansturm"
 defend_desperate_charge_desc: "Weist diesen Befehlshaber an, eine [concept_front] zu verteidigen und gegen den Feind anzustürmen, um möglichst viel Schaden anzurichten."
 defend_desperate_charge_tooltip: "#header $defend_desperate_charge$#!"
 advance_cavalry_assualt: "Schneller Vormarsch"
 advance_cavalry_assualt_gerund: "Im Ansturm mit beweglichen Einheiten"
 advance_cavalry_assualt_desc: "Weist diesen Befehlshaber an, die [concept_front] voranzubringen und dabei schnelle Einheiten zu nutzen, um Territorium zu sichern.\nEin Befehlshaber mit einem „Vormarsch“-Befehl kann weiterhin an Verteidigungsschlachten teilnehmen."
 advance_cavalry_assualt_tooltip: "#header $advance_cavalry_assualt$#!"
 advance_pillager: "Brandschatzen"
 advance_pillager_gerund: "Brandschatzt"
 advance_pillager_desc: "Weist diesen Befehlshaber an, die [concept_front] voranzubringen und dabei dem Feind so viel Schaden wie möglich zuzufügen.\nEin Befehlshaber mit einem „Vormarsch“-Befehl kann weiterhin an Verteidigungsschlachten teilnehmen."
 advance_pillager_tooltip: "#header $advance_pillager$#!"
 advance_cautious: "Vorsichtiger Vormarsch"
 advance_cautious_gerund: "Rückt vorsichtig vor"
 advance_cautious_desc: "Weist diesen Befehlshaber an, die [concept_front] voranzubringen und dabei vorsichtig in feindliches Territorium vorzudringen.\nEin Befehlshaber mit einem „Vormarsch“-Befehl kann weiterhin an Verteidigungsschlachten teilnehmen."
 advance_cautious_tooltip: "#header $advance_cautious$#!"
 advance_tank_assualt: "Schwerer Vormarsch"
 advance_tank_assualt_gerund: "Im Ansturm mit Panzern"
 advance_tank_assualt_desc: "Weist diesen Befehlshaber an, die [concept_front] voranzubringen und dabei schwere Panzer einzusetzen, die alles zermalmen, was sich ihnen in den Weg stellt.\nEin Befehlshaber mit einem „Vormarsch“-Befehl kann weiterhin an Verteidigungsschlachten teilnehmen."
 advance_tank_assualt_tooltip: "#header $advance_tank_assualt$#!"
 defend_last_stand: "Verlorener Posten"
 defend_last_stand_gerund: "In einer verzweifelten Verteidigung"
 defend_last_stand_desc: "Weist diesen Befehlshaber an, eine [concept_front] zu verteidigen und dabei zu versuchen, die Stellung auch auf Kosten der eigenen Leute zu halten."
 defend_last_stand_tooltip: "#header $defend_last_stand$#!"
 defend_guerilla_warfare: "Hinhaltetaktiken"
 defend_guerilla_warfare_gerund: "Verzögert den feindlichen Vormarsch"
 defend_guerilla_warfare_desc: "Weist diesen Befehlshaber an, eine [concept_front] zu verteidigen und dabei zu versuchen, den Gegner aufzuhalten und dessen Vormarsch zu verlangsamen."
 defend_guerilla_warfare_tooltip: "#header $defend_guerilla_warfare$#!"
 interception_coast: "Abfangen"
 interception_coast_gerund: "Beim Abfangen"
 interception_coast_desc: "Sucht und vernichtet alle feindlichen Schiffe entlang der Küste."
 interception_coast_tooltip: "#header $interception_coast$#!"
 interception_coast_agressive: "Aggressives Abfangen"
 interception_coast_agressive_gerund: "Beim aggressiven Abfangen"
 interception_coast_agressive_desc: "Sucht und vernichtet aggressiv feindliche Schiffe entlang der Küste auf Kosten der Bereitschaft."
 interception_coast_agressive_tooltip: "#header $interception_coast_agressive$#!"
 interception_carrier_assualt: "Trägerschiffausfälle"
 interception_carrier_assualt_gerund: "Im Ausfall mit Trägerschiffen"
 interception_carrier_assualt_desc: "Sucht und vernichtet alle feindlichen Schiffe mit konzentrierten Trägerangriffen."
 interception_carrier_assualt_tooltip: "#header $interception_carrier_assualt$#!"
 interception_coordinated_attack: "Koordiniertes Abfangen"
 interception_coordinated_attack_gerund: "Bei der Durchführung eines koordinierten Angriffs"
 interception_coordinated_attack_desc: "Sucht geduldig nach feindlichen Schiffen und greift koordiniert und gut vorbereitet an."
 interception_coordinated_attack_tooltip: "#header $interception_coordinated_attack$#!"
 raid_convoys: "Konvois überfallen"
 raid_convoys_gerund: "Überfällt Konvois"
 raid_convoys_desc: "Überfällt [concept_convoys] und reduziert dadurch die Stärke des feindlichen [Concept('concept_supply_network', 'Versorgungsnetzwerks')]."
 raid_convoys_tooltip: "#header $raid_convoys$#!"
 blockade: "Blockade"
 blockade_gerund: "blockierend"
 blockade_desc: "Einen Seeknoten an der Küste [Concept('concept_blockade', 'blockieren')] und so den [concept_trade] und [concept_convoys] in angrenzenden feindlichen Häfen abschneiden."
 blockade_tooltip: "#header $blockade$#!"
 raid_unrestricted_sub: "Rudeltaktik"
 raid_unrestricted_sub_gerund: "Beim Überfall auf Konvois mit U-Booten"
 raid_unrestricted_sub_desc: "Überfällt [concept_convoys] mit U-Booten und reduziert dadurch die Stärke des feindlichen [Concept('concept_supply_network', 'Versorgungsnetzwerks')]."
 raid_unrestricted_sub_tooltip: "#header $raid_unrestricted_sub$#!"
 escort_convoys: "Konvois eskortieren"
 escort_convoys_gerund: "Eskortiert Konvois"
 escort_convoys_desc: "Schützt die [Concept('concept_shipping_lane','$concept_shipping_lanes$')] vor Konvoi-Überfällen."
 escort_convoys_tooltip: "#header $escort_convoys$#!"
 escort_convoys_advanced: "Organisierte Handelskonvois"
 escort_convoys_advanced_gerund: "Bei der Organisation von Handelskonvois"
 escort_convoys_advanced_desc: "Schützt organisierter die [Concept('concept_shipping_lane','$concept_shipping_lanes$')] vor Konvoi-Überfällen."
 escort_convoys_advanced_tooltip: "#header $escort_convoys_advanced$#!"
 #new Military Formation Orders
 standby_army: "Bereitschaft"
 standby_army_gerund: "Auf Bereitschaft"
 standby_army_desc: "#todo TODO#!"
 standby_army_tooltip: "#todo TODO#!"
 anchor_fleet: "Flotte ankern lassen"
 anchor_fleet_gerund: "Flotte ankert"
 anchor_fleet_desc: "#todo TODO#!"
 anchor_fleet_tooltip: "#todo TODO#!"
 commander_status_traveling_front: "Unterwegs"
 commander_status_order_in_hq: "[Character.GetOrderType.GetName]"
 commander_status_order_on_front: "[Character.GetOrderType.GetName]"
 commander_status_order_in_strategic_region: "[Character.GetOrderType.GetName]"
 commander_status_attacking_in_battle: "Greift die Front „[Character.GetBattle.GetFront.GetName]“ in der Schlacht „[Character.GetBattle.GetName|v]“ an"
 commander_status_defending_in_battle: "Verteidigt die Front „[Character.GetBattle.GetFront.GetName]“ in der Schlacht „[Character.GetBattle.GetName|v]“"
 troop_name_regular: "Berufssoldaten"
 troop_name_conscript: "Wehrpflichtige"
 COMBAT_UNIT_GROUP_DEFAULT: "$NAME$ (Standard)"
 combat_unit_regular: "Reguläre Bataillone"
 combat_unit_conscript: "Einberufenen-Bataillone"
 combat_unit_flotilla: "Flottillen"
 combat_unit_group_infantry: "Infanterie"
 combat_unit_group_infantry_desc: "Der Großteil unserer Armee. Diese tapferen Männer kämpfen für unser Land."
 combat_unit_group_artillery: "Artillerie"
 combat_unit_group_artillery_desc: "Feuert aus der Ferne auf feindliche Stellungen, um Chaos und Zerstörung zu verursachen."
 combat_unit_group_cavalry: "Kavallerie"
 combat_unit_group_cavalry_desc: "Feuert aus der Ferne auf feindliche Stellungen, um für Verwüstung zu sorgen."
 combat_unit_group_light_ship: "Leichte Schiffe"
 combat_unit_group_light_ship_desc: "Leichte Schiffe dienen vor allem für Patrouillen und Eskorten."
 combat_unit_group_capital_ship: "Großkampfschiffe"
 combat_unit_group_capital_ship_desc: "Majestätische Schiffe, die die Meere mit roher Feuerkraft beherrschen"
 combat_unit_group_support_ship: "Unterstützungsschiffe"
 combat_unit_group_support_ship_desc: "Diese Schiffe erfüllen besondere Rollen, um den Rest unserer Flotte zu unterstützen"
 combat_unit_type_irregular_infantry: "Uneinheitliche Infanterie"
 combat_unit_type_irregular_infantry_desc: "Einheiten, die nicht traditionellen militärischen Organisationsstandards entsprechen."
 combat_unit_type_line_infantry: "Linieninfanterie"
 combat_unit_type_line_infantry_desc: "Organisiert in zwei oder vier Ränge von Soldaten, um die Feuerkraft zu maximieren."
 combat_unit_type_skirmish_infantry: "Plänklerinfanterie"
 combat_unit_type_skirmish_infantry_desc: "Leichte Infanterie, die in einer lockeren Formation aufgestellt ist, ermöglicht ein hohes Maß an Flexibilität."
 combat_unit_type_trench_infantry: "Grabeninfanterie"
 combat_unit_type_trench_infantry_desc: "Diese Einheiten nutzen ausgehobene Schützengräben, um ihre Stellung zu befestigen."
 combat_unit_type_squad_infantry: "Truppinfanterie"
 combat_unit_type_squad_infantry_desc: "Kleine Gruppen, die unabhängig von ihrer Armeeorganisation handeln können."
 combat_unit_type_mechanized_infantry: "Mechanisierte Infanterie"
 combat_unit_type_mechanized_infantry_desc: "Unterstützt von schwer gepanzerten Fahrzeugen, die Deckung geben."
 combat_unit_type_cannon_artillery: "Kanonenartillerie"
 combat_unit_type_cannon_artillery_desc: "Große Kanonen, die große Geschosse auf den Feind abfeuern."
 combat_unit_type_mobile_artillery: "Mobile Artillerie"
 combat_unit_type_mobile_artillery_desc: "Höhere Beweglichkeit, die schnelle Stellungswechsel erlaubt."
 combat_unit_type_shrapnel_artillery: "Schrapnellartillerie"
 combat_unit_type_shrapnel_artillery_desc: "Schrapnelle, von solchen Einheiten abgefeuerte Granatkartätschen, sorgen für schreckliche Verwüstung bei der feindlichen Infanterie."
 combat_unit_type_siege_artillery: "Belagerungsartillerie"
 combat_unit_type_siege_artillery_desc: "Setzt überlegene Feuerkraft zur Zerstörung feindlicher Befestigungen ein."
 combat_unit_type_heavy_tank: "Schwere Panzer"
 combat_unit_type_heavy_tank_desc: "Schwer gepanzert und mit Sprenggranaten ausgestattet."
 combat_unit_type_hussars: "Husaren"
 combat_unit_type_hussars_desc: "Leichte und mobile Kavallerie, bewaffnet mit Säbeln."
 combat_unit_type_dragoons: "Dragoner"
 combat_unit_type_dragoons_desc: "Berittene Infanterie für mehr Mobilität auf dem Schlachtfeld."
 combat_unit_type_cuirassiers: "Kürassiere"
 combat_unit_type_cuirassiers_desc: "Gepanzerte Kavallerie, die in der ersten Reihe kämpft."
 combat_unit_type_lancers: "Lanzenreiter"
 combat_unit_type_lancers_desc: "Bewegliche, mit langen Lanzen ausgerüstete Kavallerie, die zum Aufbrechen gegnerischer Formationen durch Speerspitzenangriffe gedacht ist."
 combat_unit_type_light_tanks: "Leichte Panzer"
 combat_unit_type_light_tanks_desc: "Eine leichtere Version des Panzers, deren Schwerpunkt eher auf Mobilität als auf Panzerung und Feuerkraft liegt."
 combat_unit_type_frigate: "Fregatten"
 combat_unit_type_frigate_desc: "Nur leicht bewaffnete Segelschiffe, die vor allem für Aufklärung, Patrouillen und Eskorten eingesetzt werden."
 combat_unit_type_destroyer: "Zerstörer"
 combat_unit_type_destroyer_desc: "Entwickelt für schnelle Manöver, mit denen man U-Boote verfolgen und wertvolle Ziele eskortieren kann."
 combat_unit_type_torpedo_boat: "Torpedoboote"
 combat_unit_type_torpedo_boat_desc: "Gebaut, um schwere und langsam fahrende Schiffe mit Torpedos zu bekämpfen."
 combat_unit_type_scout_cruiser: "Aufklärungskreuzer"
 combat_unit_type_scout_cruiser_desc: "Leichte Panzerkreuzer, die für den Einsatz in Übersee gebaut wurden."
 combat_unit_type_man_o_war: "Kriegssegelschiffe"
 combat_unit_type_man_o_war_desc: "Mit Kanonen bewaffnete Segelschiffe."
 combat_unit_type_ironclad: "Panzerschiffe"
 combat_unit_type_ironclad_desc: "Durch Dampfmaschinen angetrieben und mit Metallplatten gepanzert."
 combat_unit_type_monitor: "Turmschiffe"
 combat_unit_type_monitor_desc: "Kleine Schiffe mit sehr großen Kanonen, die meist in Küstennähe eingesetzt werden."
 combat_unit_type_dreadnought: "Großlinienschiffe"
 combat_unit_type_dreadnought_desc: "Große und schwere Schiffe mit mehreren schwerkalibrigen Kanonen."
 combat_unit_type_battleship: "Schlachtschiffe"
 combat_unit_type_battleship_desc: "Die schwersten Schiffe, bewaffnet mit unübertroffenen Batterien von großkalibrigen Kanonen."
 combat_unit_type_submarine: "U-Boote"
 combat_unit_type_submarine_desc: "Halb untergetauchte Schiffe, die mit Torpedos bewaffnet sind."
 combat_unit_type_carrier: "Trägerschiffe"
 combat_unit_type_carrier_desc: "Mächtige Schiffe, von denen aus sogar Flugzeuge starten und landen können."
 CONVOY_RAIDING_ENEMIES_TOOLTIP: "Feindliche Versorgungsnetzwerke:"
 CONVOY_RAIDING_ENEMIES_TOOLTIP_ENTRY: "[Country.GetAltName('NOM')|U]"
 INVASION_STATUS_WAITING_FOR_FORMATIONS_AT_FRONT: "Wartet auf das Eintreffen von [Concept('concept_military_formation', '$concept_military_formations$')] an der [Concept('concept_invasion', 'Invasions')]-[concept_front]"
 INVASION_STATUS_PREPARING: "Bereitet [concept_invasion] vor ([LabelingHelper.GetDaysLocWithoutTooltip('(int32)$NUM_DAYS$')])"
 INVASION_STATUS_STALLED: "@warning! [concept_invasion] #n stagniert#!, weil derzeit kein [concept_general] an der [concept_front] [Concept('concept_advancement_progress', 'vorrückt')]"
 INVASION_STATUS_TRAVELING_SHORT: "Einsetzen von $concept_armies$"
 INVASION_STATUS_PREPARING_SHORT: "In der Vorbereitung ([LabelingHelper.GetDaysLocWithoutTooltip(Invasion.GetPreparationDaysLeftRaw)])"
 INVASION_STATUS_ADVANCING_SHORT: "Beim Vorrücken ([Invasion.GetAdvancementProgress|%0v])"
 INVASION_STATUS_SHORT: "[SelectLocalization(Invasion.IsWaiting, 'INVASION_STATUS_TRAVELING_SHORT', SelectLocalization(Invasion.IsPreparing, 'INVASION_STATUS_PREPARING_SHORT', 'INVASION_STATUS_ADVANCING_SHORT'))]"
 NAVAL_BATTLE_MARKER: "$SEA_REGION$"
 INVASION_STATUS_WAITING_FOR_FORMATION_AT_SEA_REGION: "Warten auf das Eintreffen von [MilitaryFormation.GetName] bei [concept_sea_node] in der Region„ $REGION_NAME$“"
 INVASION_STATUS_WAITING_FOR_MOBILIZATION: "Warten auf die Mobilisierung der Streitkräfte von [MilitaryFormation.GetName]: \n$JOM_BULLET_WITH_TAB$[MilitaryFormation.GetMobilizationPercentageFormatted]#!"
 INVASION_STATUS_NAVAL_BATTLE: "Bekämpft feindliche [Concept('concept_fleet', '$concept_fleets$')] in „[Battle.GetName|v]“"
 INVASION_STATUS_LAND_BATTLE: "Bekämpft feindliche [Concept('concept_army', '$concept_armies$')] in „[Battle.GetName|v]“"
 INVASION_STATUS_ADVANCING_WITH_PROGRESS: "Versucht, die Kontrolle über „[State.GetNameWithCountryFlag]“ zu erlangen ($ADVANCEMENT|%0v$ [concept_advancement_progress])"
 INVASION_STATUS_READY_FOR_NAVAL_BATTLE: "Versucht, die Kontrolle über [concept_sea_node] in „$REGION_NAME$“ zu erlangen"
 INVASION_STATUS_READY_FOR_LAND_BATTLE: "Versucht, die Kontrolle über „[STATE.GetName]“ zu erlangen"
 NAVAL_INVASION_STALLED_DUE_TO_ORDERS: "Invasion ist ins Stocken geraten!"
 NAVAL_INVASION_STALLED_DUE_TO_ORDERS_TOOLTIP: "#header $NAVAL_INVASION_STALLED_DUE_TO_ORDERS$#!\n$TOOLTIP_DELIMITER$\n[concept_naval_invasion] kann nicht vorankommen, weil kein invadierender [concept_admiral] einen Abfangen-Befehl hat"
 WAR_PANEL_PARTICIPANT_DEAD: "[concept_dead]: #variable #N -[WarParticipant.GetNumDead|K-]#!#!"
 WAR_PANEL_PARTICIPANT_WOUNDED: "[concept_wounded]: #variable #N -[WarParticipant.GetNumWounded|K-]#!#!"
 WAR_PANEL_PARTICIPANT_DEAD_TOOLTIP: "#header [concept_dead]#!\n[WarParticipant.GetNumDead|K-] [WarParticipant.GetCountry.GetAdjectiveNoFormatting|l]e Pops sind im Krieg (#v [War.GetName]#!) gestorben:\n$TAB$[WarParticipant.GetNumDeadFromBattle|-] in der [concept_battle]\n$TAB$[WarParticipant.GetNumDeadFromAttrition|-] aufgrund von [concept_attrition]"
 WAR_PANEL_PARTICIPANT_WOUNDED_TOOLTIP: "#header [concept_wounded]#!\n[WarParticipant.GetNumWounded|K-] [WarParticipant.GetCountry.GetAdjectiveNoFormatting|l]e Pops sind im Krieg (#v [War.GetName]#!) verwundet worden:\n$TAB$[WarParticipant.GetNumWoundedFromBattle|-] in der [concept_battle]\n$TAB$[WarParticipant.GetNumWoundedFromAttrition|-] aufgrund von [concept_attrition]"
 WOUNDED_BREAKDOWN: "#header [concept_wounded] insgesamt: $NUM|-D$#!\n$TOTALS_HEADER$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 WOUNDED_HEADER_ENTRY_ATTRITION: "Durch [concept_attrition]: $NUM|-D$"
 WOUNDED_HEADER_ENTRY_BATTLE: "Während einer [concept_battle]: $NUM|-D$"
 WOUNDED_BREAKDOWN_ENTRY_ATTRITION: "$concept_attrition$ [Country.GetAltName('VON')]: $NUM|-K$"
 WOUNDED_BREAKDOWN_ENTRY_BATTLE: "Während einer $concept_battle$ [Country.GetAltName('VON')]: $NUM|-K$"
 DEAD_BREAKDOWN: "#header [concept_dead] insgesamt: $NUM|-D$#!\n$TOTALS_HEADER$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 DEAD_HEADER_ENTRY_ATTRITION: "Durch [concept_attrition]: $NUM|-D$"
 DEAD_HEADER_ENTRY_BATTLE: "Während einer [concept_battle]: $NUM|-D$"
 DEAD_BREAKDOWN_ENTRY_ATTRITION: "$concept_attrition$ [Country.GetAltName('VON')]: $NUM|-K$"
 DEAD_BREAKDOWN_ENTRY_BATTLE: "Während einer $concept_battle$ [Country.GetAltName('VON')]: $NUM|-K$"
 MILITARY_UNITS_PRODUCTION: "#header [SelectLocalization(Building.IsBuildingType('building_naval_base'), Concept('concept_flotilla', '$concept_flotillas$'), Concept('concept_battalion', '$concept_battalions$'))]#!\n[Building.GetCombatUnitProduction] zu [Building.GetState.GetOwner.GetAltName('DAT')]\n$TOOLTIP_DELIMITER$\n[Building.GetCombatUnitProductionBreakdown]"
 FLOTILLAS_SOURCES_BREAKDOWN: "Durch $SOURCE|v$: @flotillas! #variable $VALUE|0$#!"
 UNITS_HEADER: "#title Kampfeinheiten#!"
 FORMATIONS_PROVIDED_WITH_UNITS: "Mit Einheiten versehene Formationen"
 OFFENSE: "[concept_offense]"
 DEFENSE: "[concept_defense]"
 AVERAGE_UNIT_OFFENSE: "#title Durchschnittliche [concept_offense]: $VALUE|v0$#!\nDie durchschnittliche $concept_offense$ der $NUM_UNITS|v0$ vorrückenden [Concept('concept_unit','$concept_units$')] ist $VALUE|v0$."
 AVERAGE_UNIT_DEFENSE: "#title Durchschnittliche [concept_defense]: $VALUE|v0$#!\nDie durchschnittliche $concept_defense$ der $NUM_UNITS|v0$ verteidigenden [Concept('concept_unit','$concept_units$')] ist $VALUE|v0$."
 COMBAT_UNIT_OFFENSE_FORMATTED: "@unit_offense! $VALUE|0v$"
 COMBAT_UNIT_DEFENSE_FORMATTED: "@unit_defense! $VALUE|0v$"
 COMBAT_UNIT_MANPOWER_TOOLTIP: "$NAME$ hat $COMBAT_UNIT_MANPOWER$ Mannstärke verfügbar"
 MANPOWER_FORMAT: "@manpower! $VAL$"
 COMBAT_UNITS_BUILDING_HEADER: "#title [SelectLocalization(Building.IsBuildingType('building_naval_base'), '@flotillas!', '@battalions!')] #v #tooltippable #tooltip:MILITARY_UNITS_PRODUCTION [Building.GetNumberOfCombatUnits]#!#!#! [SelectLocalization(Building.IsBuildingType('building_naval_base'), '$concept_flotillas$', '$concept_battalions$')]#!"
 COMBAT_UNIT_BATTLE_TOOLTIP: "In der Schlacht von #variable [CombatUnit.GetBattle.GetName]#!"
 COMBAT_UNIT_MORALE_ONE_DAY_TOOLTIP: "(#variable 1#! Tag verbleibend)"
 COMBAT_UNIT_MORALE_DAYS_TOOLTIP: "($DAYS|v$ Tage verbleibend)"
 COMMANDER_SUPPLY_TOOLTIP_HEADER: "Versorgung von $NAME$: #$COLOR_STRING$ $VALUE|0%$#!"
 COMMANDER_SUPPLY_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #$COLOR_STRING$ $VALUE|0%$#!#!#!"
 COMMANDER_SUPPLY_ISOLATED: "#R Kann das [HQ.GetName] nicht erreichen#!"
 COMMANDER_SUPPLY_REACH_BY_LAND: "Hat eine Landversorgungsroute zum [HQ.GetName]"
 MILITARY_FORMATION_CHARACTER_HEADER: "#title Teil von [Character.GetMilitaryFormation.GetName|v](#todo mach mich tooltippbar#!)#!"
 SHIPPING_LANE_CHARACTER_HEADER: "#title [concept_supply_route]#!"
 SHIPPING_LANES_HEADER: "#title [Concept('concept_shipping_lane', '$concept_shipping_lanes$')]#!"
 COMBAT_UNIT_SOURCES_BREAKDOWN_SUPPLY: "#BOLD #$COLOR$ $VALUE|%0$#!#! [concept_supply]"
 COMBAT_UNIT_SOURCES_BREAKDOWN_VERBOSE: "[GetUnitStrengthHeader('(int64)$CURRENT$', '(int64)$MAX$', '$ICON$')] $UNIT_NAME$ aus [STATE.GetName] (#BOLD #$MORALE_COLOR$ $MORALE|%0$#!#! [concept_morale] und $SUPPLY$)"
 COMBAT_UNIT_SOURCES_BREAKDOWN_CLEAN: "[GetUnitStrengthHeader('(int64)$CURRENT$', '(int64)$MAX$', '$ICON$')] $UNIT_NAME$ aus [STATE.GetName]"
 COMBAT_UNIT_MOBILIZATION_STATUS_DEMOBILIZED: "[Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_demobilized$')]"
 COMBAT_UNIT_MOBILIZATION_STATUS_DEMOBILIZED_TOOLTIP: "[CombatUnit.GetName] ist derzeit [Concept('concept_mobilize_battalion', 'demobilisiert')]"
 COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZING: "[Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilizing$')] ([CombatUnit.GetMobilization|v%0])"
 COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZING_TOOLTIP: "Die [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilizing$')] von [CombatUnit.GetName] ist derzeit zu [CombatUnit.GetMobilization|v%0] abgeschlossen"
 COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZED: "[Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$')]"
 COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZED_TOOLTIP: "[CombatUnit.GetName] ist vollständig [Concept('concept_mobilize_battalion', 'mobilisiert')]"
 COMBAT_UNIT_BATTALION_CONSCRIPTS: "Wehrpflichtige"
 COMBAT_UNIT_BATTALION_NAME_ONE: "$NUM|O$ $ORIGIN$"
 COMBAT_UNIT_BATTALION_NAME_TWO: "$COMBAT_UNIT_TYPE$[ConcatIfNeitherEmpty(' ', '$CONSCRIPT$')]"
 COMBAT_UNIT_BATTALION_FULL_NAME: "$COMBAT_UNIT_BATTALION_NAME_ONE$ $COMBAT_UNIT_BATTALION_NAME_TWO$"
 COMBAT_UNIT_FLOTILLA_NAME_ONE: "[ConcatIfNeitherEmpty('$PREFIX$', ' ')]$NAME$[ConcatIfNeitherEmpty(' ', '$NUM_STR$')]"
 COMBAT_UNIT_FLOTILLA_NAME_TWO: "$BUILDING_PM$"
 COMBAT_UNIT_FLOTILLA_FULL_NAME: "$COMBAT_UNIT_FLOTILLA_NAME_ONE$ $COMBAT_UNIT_FLOTILLA_NAME_TWO$"
 FORMATIONS_NAME: "$NUM|O$ $TYPE$ ($COUNTRY_ADJECTIVE$)"
 HQ_HEADER: "#title [Concept('concept_hq', 'Hauptquartiere')]#!"
 HQ_HEADER_CHARACTER: "$HQ_HEADER$"
 HQ_HEADER_MILITARY_PANEL: "$HQ_HEADER$"
 HQ_HEADER_EMPTY_HQS: "Hauptquartiere leeren"
 FRONT_COUNTRY_COMBATUNITS: "[Country.GetAltName('NOM')|U] hat @battalions!#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $NUM_UNITS|v$#!#! in „[FRONT.GetName]“"
 FRONT_COUNTRY_COMBATUNITS_TRAVELING: "Weitere @battalions! #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $NUM_UNITS|v$#!#! aus [Country.GetAltName('DAT')] reisen zu „[FRONT.GetName]“"
 FRONT_COUNTRY_ARMIES_BREAKDOWN_HEADER: "#header [Country.GetAdjective|U]e [Concept('concept_army', '$concept_armies$')] an „[Front.GetName]“#!\n@battalions!$NUM_UNITS|v$ [Concept('concept_battalion', '$concept_battalions$')] insgesamt\n$TOOLTIP_DELIMITER$\n"
 FRONT_COUNTRY_ARMIES_BREAKDOWN_HEADER_TRAVELING: "#header [Country.GetAdjective|U]e [Concept('concept_army', '$concept_armies$')] reisen zur „[Front.GetName]“#!\n@battalions!$NUM_UNITS|v$ [Concept('concept_battalion', '$concept_battalions$')] insgesamt\n$TOOLTIP_DELIMITER$\n"
 FRONT_COUNTRY_ARMIES_BREAKDOWN_ENTRY: "@battalions!#tooltippable #tooltip:[MILITARY_FORMATION.GetTooltipTag],MILITARY_FORMATION_BATTALIONS_TOOLTIP $NUM_BATTALIONS|v$#!#! $FORMATION_NAME$"
 FRONT_COUNTRY_ARMIES_BREAKDOWN_ENTRY_TRAVELING: "@battalions!#tooltippable #tooltip:[MILITARY_FORMATION.GetTooltipTag],MILITARY_FORMATION_BATTALIONS_TOOLTIP $NUM_BATTALIONS|v$#!#! $FORMATION_NAME$ ($TRAVEL_TIME$ Tage)"
 FRONT_PARTICIPANT_ARMIES_BEYOND_FIVE_HEADER: "$NUM_ARMIES|v=$ zusätzliche [Concept('concept_army', '$concept_armies$')] in $FRONT_NAME$"
 FRONT_PARTICIPANT_ARMIES_BEYOND_FIVE_ENTRY: "[MILITARY_FORMATION.GetName] - @battalions! $MOB_STRING$ [Concept('concept_mobilize_battalion','$concept_mobilize_battalion_mobilized_manpower$')]"
 FRONT_PLAYER_SIDE_COMBATUNITS_TOOLTIP: "#header [FRONT.GetName]#!\n$TOOLTIP_DELIMITER$\nUnsere:[ConcatIfNeitherEmpty('\n', FRONT.GetPlayerSideCombatUnitsBreakdown)][ConcatIfNeitherEmpty('\n', FRONT.GetPlayerSideCombatUnitsTravelingBreakdown)]\n\nVerbündete:[ConcatIfNeitherEmpty('\n', FRONT.GetPlayerSideAlliesCombatUnitsBreakdown)][ConcatIfNeitherEmpty('\n', FRONT.GetPlayerSideAlliesCombatUnitsTravelingBreakdown)]"
 ACTIVE_BATTLES: "Aktive [Concept('concept_battle', '$concept_battles$')]"
 ENDED_BATTLES: "Beendete [Concept('concept_battle', '$concept_battles$')]"
 ENDED_LAND_BATTLES: "Beendete Land-[Concept('concept_battle', '$concept_battles$')]"
 ENDED_SEA_BATTLES: "Beendete See-[Concept('concept_battle', '$concept_battles$')]"
 BATTLE_VICTORY: "Sieg!"
 BATTLE_DEFEAT: "Niederlage!"
 BATTLE_DRAW: "Unentschieden!"
 BATTLE_INCONCLUSIVE: "Unklar!"
 BATTLE_VICTOR: "Sieger:"
 BATTLE_TERRAIN: "[concept_terrain]: [Battle.GetTerrain]"
 BATTLE_ADVANCING: "Voranschreiten"
 BATTLE_DEFENDING: "Verteidigen"
 BATTLE_OFFENSE_TITLE: "Offensive"
 BATTLE_DEFENSE_TITLE: "Defensive"
 ADVANCEMENT_PROGRESS_HEADER: "Fortschritt"
 SUCCESSFUL_ADVANCE: "#G Erfolgreicher Angriff#!"
 SUCCESSFUL_DEFENSE: "#G Erfolgreiche Verteidigung#!"
 FAILED_ADVANCE: "#R Gescheiterter Angriff#!"
 FAILED_DEFENSE: "#R Gescheiterte Verteidigung#!"
 BATTLE_SIDE_STATUS_ESCAPING: "Entkommt"
 BATTLE_SIDE_STATUS_DESC_ESCAPING: "#header [BattleSide.GetCommander.GetFirstName|U] entkommt aus dieser [concept_battle] aufgrund von [BattleSide.GetCommander.GetOrderType.GetName]#!\nDerzeitiger Fortschritt: $VAL|0%v$\n\n$BATTLE_SIDE_STATUS_COMMANDER_HINT$"
 BATTLE_SIDE_STATUS_DESC_ADVANCING: "#header [BattleSide.GetCommander.GetFirstName|U] kommt in dieser [concept_battle] voran#!\n\n$BATTLE_SIDE_STATUS_COMMANDER_HINT$"
 BATTLE_SIDE_STATUS_DESC_DEFENDING: "#header [BattleSide.GetCommander.GetFirstName|U] verteidigt in dieser [concept_battle]#!\n\n$BATTLE_SIDE_STATUS_COMMANDER_HINT$"
 BATTLE_SIDE_STATUS_COMMANDER_HINT: "@information! Wir können den [concept_order] von [BattleSide.GetCommander.GetFirstName] ändern, indem wir entweder auf [BattleSide.GetCommander.GetCustom('DE_PRO_PER_S_3P_A')] rechtsklicken oder zu [BattleSide.GetCommander.GetCustom('DE_PRO_POS_S_3P')]er [concept_character]- oder [Concept('concept_military_formation', 'Formations')]-Tafel gehen"
 BATTLE_SIDE_OUTCOME_ESCAPED: "#v Entkommen#!"
 BATTLE_SIDE_OUTCOME_ENEMY_ESCAPED: "#v Feind ist entkommen#!"
 BATTLE_END_ATTACKER_OUTCOME: "[SelectLocalization(Battle.IsWinner(Battle.GetAttacker), 'SUCCESSFUL_ADVANCE_BATTLE_ITEM', 'FAILED_ADVANCE_BATTLE_ITEM')]"
 SUCCESSFUL_ADVANCE_BATTLE_ITEM: "Erfolgreicher [Battle.GetAttacker.GetAdjectiveNoFlag|l]er Angriff"
 FAILED_ADVANCE_BATTLE_ITEM: "Gescheiterter [Battle.GetAttacker.GetAdjectiveNoFlag|l]er Angriff"
 BATTLE_LAND_MAX_OFFENSE: "@unit_offense! [GetGlobalMaxLandOffense|v0]"
 BATTLE_LAND_MAX_DEFENSE: "@unit_defense! [GetGlobalMaxLandDefense|v0]"
 BATTLE_NAVAL_MAX_OFFENSE: "@unit_offense! [GetGlobalMaxNavalOffense|v0]"
 BATTLE_NAVAL_MAX_DEFENSE: "@unit_defense! [GetGlobalMaxNavalDefense|v0]"
 BATTLE_OFFENSE_TOOLTIP: "#header Durchschnittliche [concept_offense]#!\nDie Offensive der angreifenden [SelectLocalization(Battle.IsNavalBattle, '$concept_flotillas$', '$concept_battalions$')] beträgt @unit_offense! [Battle.GetOffenseRaw|v0].\nDer weltweit höchste Offensivwert liegt bei [SelectLocalization(Battle.IsNavalBattle, 'BATTLE_NAVAL_MAX_OFFENSE', 'BATTLE_LAND_MAX_OFFENSE')]"
 BATTLE_DEFENSE_TOOLTIP: "#header Durchschnittliche [concept_defense]#!\nDie Defensive der verteidigenden [SelectLocalization(Battle.IsNavalBattle, '$concept_flotillas$', '$concept_battalions$')] beträgt @unit_defense! [Battle.GetDefenseRaw|v0].\nDer weltweit höchste Defensivwert liegt bei [SelectLocalization(Battle.IsNavalBattle, 'BATTLE_NAVAL_MAX_DEFENSE', 'BATTLE_LAND_MAX_DEFENSE')]"
 BATTLE_ARMY_OFFENSE_TOOLTIP: "Die durchschnittliche Offensive angreifender Bataillone beträgt @unit_offense! [Battle.GetOffenseRaw|v]. Der höchste Offensivwert auf der Welt liegt bei @unit_offense! [GetGlobalMaxLandOffense|v0]"
 BATTLE_ARMY_DEFENSE_TOOLTIP: "Die durchschnittliche Defensive verteidigender Bataillone beträgt @unit_defense! [Battle.GetDefenseRaw|v]. Der höchste Defensivwert auf der Welt liegt bei @unit_defense! [GetGlobalMaxLandDefense|v0]"
 BATTLE_NAVAL_OFFENSE_TOOLTIP: "Die durchschnittliche Offensive angreifender $concept_flotillas$ beträgt @unit_offense! [Battle.GetOffenseRaw|v]. Der höchste Offensivwert auf der Welt liegt bei @unit_offense! [GetGlobalMaxNavalOffense|v0]"
 BATTLE_NAVAL_DEFENSE_TOOLTIP: "Die durchschnittliche Defensive verteidigender $concept_flotillas$ beträgt @unit_defense! [Battle.GetDefenseRaw|v]. Der höchste Defensivwert auf der Welt liegt bei @unit_defense! [GetGlobalMaxNavalDefense|v0]"
 FRONT_UNITS: "Anzahl an Einheiten, die [COUNTRY.GetAltName('NOM')] an dieser Front stationiert hat"
 ATTACKING_MEN_STILL_FIGHTING: "Noch kämpfende Mannstärke: [Battle.CalcCurrentAttackerManpower|v]"
 DEFENDING_MEN_STILL_FIGHTING: "Noch kämpfende Mannstärke: [Battle.CalcCurrentDefenderManpower|v]"
 WAR_SUPPORT_ATTACKER_SIDE: "#variable [War.GetWarSupport(War.AccessLeftSideLeaderParticipant.GetCountry)|0+=]#!"
 WAR_SUPPORT_DEFENDER_SIDE: "#variable [War.GetWarSupport(War.AccessRightSideLeaderParticipant.GetCountry)|0+=]#!"
 WAR_SUPPORT_LEFT_SIDE: "#variable [War.GetWarSupport(War.AccessLeftSideLeaderParticipant.GetCountry)|0+=]#!"
 WAR_SUPPORT_RIGHT_SIDE: "#variable [War.GetWarSupport(War.AccessRightSideLeaderParticipant.GetCountry)|0+=]#!"
 NO_ALLIES: "Keine Verbündeten"
 WAR_LEADER: "[concept_war_leader]"
 WAR_LEFT_SIDE_NUM_BATTALIONS: "@battalions! [WarPanel.GetLeftAvailableBattalionsRaw|v]/[WarPanel.GetLeftPotentialBattalionsRaw|v] (@mobilization![WarPanel.GetLeftMobilizationRatioRaw|0%])"
 WAR_LEFT_SIDE_NUM_BATTALIONS_TOOLTIP: "#header [Concept('concept_battalion', '$concept_battalions$')] auf der [WarPanel.GetLeftLeader.GetAdjective|l]en Seite#!\n@battalions! [WarPanel.GetLeftPotentialBattalionsRaw] insgesamt\n$TOOLTIP_DELIMITER$\n[WarPanel.GetLeftBattalionsBreakdown]"
 WAR_RIGHT_SIDE_NUM_BATTALIONS: "@battalions! [WarPanel.GetRightAvailableBattalionsRaw|v]/[WarPanel.GetRightPotentialBattalionsRaw|v] (@mobilization![WarPanel.GetRightMobilizationRatioRaw|0%])"
 WAR_RIGHT_SIDE_NUM_BATTALIONS_TOOLTIP: "#header [Concept('concept_battalion', '$concept_battalions$')] auf der [WarPanel.GetRightLeader.GetAdjective|l]en Seite#!\n@battalions! [WarPanel.GetRightAvailableBattalionsRaw|v] insgesamt\n$TOOLTIP_DELIMITER$\n[WarPanel.GetRightBattalionsBreakdown]"
 COUNTRY_ENTRY_BATTALIONS_FORMAT: "@battalions!#tooltippable #tooltip:[COUNTRY.GetTooltipTag],PANEL_MILITARY_ARMY_OVERVIEW_TOOLTIP [COUNTRY.GetBattalions|v]#!#! [COUNTRY.GetAltName('NOM')|U] (#v [COUNTRY.GetMobilizationRatio|0%]#![AddLocalizationIf(COUNTRY.IsMobilized, '@mobilization!')])"
 WAR_LEADER_LEFT_NUM_BATTALIONS: "@battalions! #v [WarPanel.GetLeftLeader.GetBattalions]#! (#v [WarPanel.GetLeftLeader.GetMobilizationRatio|0%]#![AddLocalizationIf(WarPanel.GetLeftLeader.IsMobilized, '@mobilization!')])"
 WAR_LEADER_RIGHT_NUM_BATTALIONS: "@battalions! #v [WarPanel.GetRightLeader.GetBattalions]#! (#v [WarPanel.GetRightLeader.GetMobilizationRatio|0%]#![AddLocalizationIf(WarPanel.GetRightLeader.IsMobilized, '@mobilization!')])"
 WAR_LEADER_LEFT_NUM_FLOTILLAS: "@combat_unit_flotilla! #v [WarPanel.GetLeftLeader.GetWarships]#!"
 WAR_LEADER_RIGHT_NUM_FLOTILLAS: "@combat_unit_flotilla! #v [WarPanel.GetRightLeader.GetWarships]#!"
 WAR_LEFT_SIDE_NUM_FLOTILLAS: "@combat_unit_flotilla! #variable [WarPanel.GetLeftFlotillasRaw]#!"
 WAR_LEFT_SIDE_NUM_FLOTILLAS_TOOLTIP: "#header [Concept('concept_flotilla', '$concept_flotillas$')] auf der [WarPanel.GetLeftLeader.GetAdjective|l]en Seite#!\n@flotillas! [WarPanel.GetLeftFlotillasRaw|v] insgesamt\n$TOOLTIP_DELIMITER$\n[WarPanel.GetLeftFlotillasBreakdown]"
 WAR_RIGHT_SIDE_NUM_FLOTILLAS: "@combat_unit_flotilla! #variable [WarPanel.GetRightFlotillasRaw]#!"
 WAR_RIGHT_SIDE_NUM_FLOTILLAS_TOOLTIP: "#header [Concept('concept_flotilla', '$concept_flotillas$')] auf der [WarPanel.GetRightLeader.GetAdjective|l]en Seite#!\n@flotillas! [WarPanel.GetRightFlotillasRaw|v] insgesamt\n$TOOLTIP_DELIMITER$\n[WarPanel.GetRightFlotillasBreakdown]"
 COUNTRY_ENTRY_FLOTILLAS_FORMAT: "@flotillas! #tooltippable #tooltip:[COUNTRY.GetTooltipTag],PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP [COUNTRY.GetWarships|v]#!#! [COUNTRY.GetAltName('NOM')|U]"
 WAR_LEFT_SIDE_DEAD_NUMBER: "#variable [WarPanel.GetLeftDeadRaw|-D]#!"
 WAR_LEFT_SIDE_WOUNDED_NUMBER: "#variable [WarPanel.GetLeftWoundedRaw|-D]#!"
 WAR_RIGHT_SIDE_DEAD_NUMBER: "#variable [WarPanel.GetRightDeadRaw|-D]#!"
 WAR_RIGHT_SIDE_WOUNDED_NUMBER: "#variable [WarPanel.GetRightWoundedRaw|-D]#!"
 COST_OF_WAR: "Kriegskosten:"
 COST_OF_WAR_LEFT_SIDE_NUMBER: "#variable @money![WarPanel.GetLeftCostOfWarRaw|-D]#!"
 COST_OF_WAR_RIGHT_SIDE_NUMBER: "#variable @money![WarPanel.GetRightCostOfWarRaw|-D]#!"
 WAR_ALLIES: "Eigene Verbündete"
 WAR_ENEMIES: "Feindliche Verbündete"
 WAR_TARGET_ALLIES: "[Country.GetAdjectiveNoFlag]e Verbündete"
 WAR_INITIATOR_ALLIES: "[Country.GetAdjectiveNoFlag]e Verbündete"
 ACTIVE_FRONTS: "Aktive [Concept('concept_front', '$concept_fronts$')]"
 FRONT_UNDEFENDED: "#header @warning! Diese [concept_front] wird nicht verteidigt!#!\n$TOOLTIP_DELIMITER$\nWir haben keine keinerlei [Concept('concept_army', '$concept_armies$')] an der Front „[Front.GetName]“. Wenn auch keine unserer Verbündeten $concept_armies$ an dieser $concept_front$ hat, könnte unser Feind diese $concept_front$ ohne Gegenwehr vorantreiben.\n\nWir sollten in Betracht ziehen, eine $concept_army$ mit $concept_battalions$n hierhin zu beordern."
 FRONT_SIDE_NUM_UNITS_FORMAT: "@battalions! #variable #tooltippable #tooltip:$BREAKDOWN_TAG$ $NUM_UNITS$#!#!#!"
 FRONT_SIDE_LEFT_NUM_UNITS: "@battalions! [FrontSide.GetNumUnits|0v] durch [Concept('concept_army', '$concept_armies$')]"
 FRONT_SIDE_FORMATIONS_LEFT_NUM_UNITS: "@battalions! [Front.GetNumLeftCombatUnitsFromFormationsRaw|0v] durch Formationen"
 FRONT_SIDE_RIGHT_NUM_UNITS: "[FrontSide.GetNumUnits|0v] @battalions! durch [Concept('concept_army', '$concept_armies$')]"
 FRONT_SIDE_FORMATION_RIGHT_NUM_UNITS: "Durch Formationen [Front.GetNumRightCombatUnitsFromFormationsRaw|0v] @battalions!"
 FRONT_SIDE_NO_ARMIES: "Keine [Concept('concept_army', '$concept_armies$')]"
 FRONT_SIDE_ADVANCING_UNITS_DESC: "#header @battalions! rücken vor#!\n\n$UNITS_BREAKDOWN$"
 FRONT_SIDE_DEFENDING_UNITS_DESC: "#header @battalions! verteidigen#!\n\n$UNITS_BREAKDOWN$"
 FRONT_SIDE_UNIT_ENTRY: "@battalions!$NUM_UNITS|v$ aus $UNIT_ORIGIN|v$"
 FRONT_SIDE_TOTAL_UNITS: "Gesamt: @battalions!$NUM_UNITS|v$"
 FRONT_COUNTRIES_PRESENT: "Anwesende Länder"
 FRONT_YOUR_SIDE: "Unsere Seite"
 FRONT_ENEMY_SIDE: "Feindliche Seite"
 FRONT_LEFT_ADJECTIVE_SIDE: "[WarPanel.GetLeftLeader.GetAdjectiveNoFlag]e Seite"
 FRONT_RIGHT_ADJECTIVE_SIDE: "[WarPanel.GetRightLeader.GetAdjectiveNoFlag]e Seite"
 FRONT_NO_ACTIVE_BATTLES: "Keine laufende [concept_battle]"
 FRONT_NO_ENDED_BATTLES: "Keine beendeten [Concept('concept_battle', '$concept_battles$')]"
 NO_ACTIVE_FRONTS: "Derzeit gibt es keine aktiven [Concept('concept_front', '$concept_fronts$')]"
 FRONT_PANEL_BATTLES: "Schlachten"
 FRONT_PRESENT_ARMIES_PLAYER: "#v [GetDataModelSize(Front.GetPlayerSide.GetArmies)]#! [Concept('concept_army', '$concept_armies$')] (Ihr)"
 FRONT_PRESENT_ARMIES_ENEMY: "#v [GetDataModelSize(Front.GetPlayerEnemySide.GetArmies)]#! [Concept('concept_army', '$concept_armies$')] (Feind)"
 FRONT_PRESENT_ARMIES_INITIATOR: "#v [GetDataModelSize(Front.GetInitiatorSide.GetArmies)]#! [Concept('concept_army', '$concept_armies$')] (Initiator)"
 FRONT_PRESENT_ARMIES_TARGET: "#v [GetDataModelSize(Front.GetTargetSide.GetArmies)]#! [Concept('concept_army', '$concept_armies$')] (Ziel)"
 SEA_REGION_PANEL_NO_PRESENT_FLEETS: "Keine [Concept('concept_fleet', '$concept_fleets$')] auf dieser Seite vor Ort"
 SEA_REGION_PANEL_NO_PRESENT_NEUTRAL_FLEETS: "Keine neutralen [Concept('concept_fleet', '$concept_fleets$')] vor Ort"
 SEA_REGION_WAR_HEADER: "[SeaRegionWar.GetWar.GetName]"
 NEUTRAL_FLEETS_HEADER: "Neutrale [Concept('concept_fleet', '$concept_fleets$')] vor Ort"
 SUPPLY_NETWORK_WAR_HEADER: "[Concept('concept_supply_network', '$concept_supply_networks$')]"
 SUPPLY_NETWORK_COUNTRY: "[SelectLocalization(LessThan_CFixedPoint(Country.GetSupplyNetworkStrength, '(CFixedPoint)1'), '@warning! ', '')]$SUPPLY_NETWORK_STRENGTH_VALUE$ - [COUNTRY.GetAltName('NOM')|U]"
 STRENGTH_SUPPLY_TOOLTIP: "Die Stärke der #v [SeaRegionNavalPresence.GetCountry.GetAdjectiveNoFormatting|l]en#! Versorgungsflottille in der Region „[SeaRegionNavalPresence.GetProvince.GetStateRegion.GetName]“ liegt bei #BOLD #[GetMoraleColorString( SeaRegionNavalPresence.GetStrength)] [SeaRegionNavalPresence.GetStrength|0%]#!#!"
 BATTLE_MORALE_TOOLTIP: "Die #v [BattleParticipant.GetCountry.GetAdjectiveNoFormatting|l]e#! Moral liegt bei #BOLD #[GetMoraleColorString( BattleParticipant.GetMorale)] [BattleParticipant.GetMorale|0%]#!#!"
 BATTLE_MANPOWER_ATTACKER_TOOLTIP: "#header [concept_manpower]#!\n[BattleParticipant.GetCountry.GetAdjectiveNoFormatting|Uv]e [concept_manpower] beträgt @manpower! #v [Battle.CalcCurrentAttackerManpower]#!"
 BATTLE_MANPOWER_DEFENDER_TOOLTIP: "#header [concept_manpower]#!\n[BattleParticipant.GetCountry.GetAdjectiveNoFormatting|Uv]e [concept_manpower] beträgt @manpower! #v [Battle.CalcCurrentDefenderManpower]#!"
 BATTLE_ATTACKER_LIST_NAME: "Angreifende Einheiten"
 BATTLE_DEFENDER_LIST_NAME: "Verteidigende Einheiten"
 BATTLE_ATTACKER_STARTING_UNITS: "[Battle.GetAttacker.GetAdjectiveNoFormatting]e Seite: @battalions! [Battle.GetStartingAttackerUnits|v]#!"
 BATTLE_ATTACKER_ENDING_UNITS: "[Battle.GetAttacker.GetAdjectiveNoFormatting]e Seite: @battalions! [Battle.GetFinalAttackerUnits|v]#!"
 BATTLE_DEFENDER_STARTING_UNITS: "[Battle.GetDefender.GetAdjectiveNoFormatting]e Seite: @battalions! [Battle.GetStartingDefenderUnits|v]#!"
 BATTLE_DEFENDER_ENDING_UNITS: "[Battle.GetDefender.GetAdjectiveNoFormatting]e Seite: @battalions! [Battle.GetFinalDefenderUnits|v]#!"
 BATTLE_NO_ATTACKER_MODIFIERS: "Keine Angreifer-Modifikatoren"
 BATTLE_NO_DEFENDER_MODIFIERS: "Keine Verteidiger-Modifikatoren"
 BATTLE_NO_UNITS_UNDER_COMMAND: "Kommandiert keine Einheiten"
 BATTLE_NO_BORROWED_UNITS: "Keine geliehenen Einheiten"
 BATTLE_BORROWED_UNITS_HEADER: "Geliehene Einheiten"
 BATTLE_ATTACKING_FORMATION_HEADER: "Angreifende Formation"
 BATTLE_DEFENDING_FORMATION_HEADER: "Verteidigende Formation"
 COMBAT_UNIT_CURRENT_LESS_THAN_MAX: "$CURRENT|Kv$/#maximum $MAX|K$#!"
 COMBAT_UNIT_CURRENT_EQUAL_MAX: "$CURRENT|Kv$"
 MANPOWER_PACKAGE_COMMANDER_CE_BREAKDOWN: "#variable [CHARACTER.GetFullName]:#!"
 INTEREST_INACTIVE: "Dies ist ein [concept_inactive_interest]"
 INTEREST_ACTIVE: "Dies ist ein [concept_active_interest]"
 INTEREST_DECLARED: "Dies ist ein [concept_declared_interest]"
 INTEREST_SOURCE_DECLARED: "Unterhalten durch [concept_declared_interest]"
 INTEREST_SOURCE_OWNED_STATES: "Unterhalten durch territoriale Kontrolle von $STATES$"
 INTEREST_SOURCE_SUBJECT_STATES: "Unterhalten durch territoriale [concept_subject]-Kontrolle von $STATES$"
 INTEREST_MARKER_TOOLTIP: "#header [Interest.GetOwner.GetAdjectiveNoFormatting]es [concept_interest] in der Strategieregion „[Interest.GetStrategicRegion.GetName]“#!\n$TOOLTIP_DELIMITER$\n[Interest.GetInterestStatusName][ConcatIfNeitherEmpty('\n',Interest.GetInterestSourceDesc)][ConcatIfNeitherEmpty('\n',Interest.GetProgressBarTooltip)]"
 NO_COUNTRIES_WITH_INTEREST: "Kein [concept_country] hat ein [concept_interest] an der Strategieregion „[StrategicRegion.GetNameNoFormatting]“"
 COUNTRIES_WITH_INTEREST: "[Concept('concept_country', '$concept_countries$')] mit einem [concept_interest] an der Strategieregion „[StrategicRegion.GetNameNoFormatting]“:"
 INTEREST_MARKER_HAS_PP: "Machtprojektion durch die folgenden Kommandanten, die das [concept_interest] hier unterstützen:"
 INTEREST_MARKER_PP_COMMANDER: "[CHARACTER.GetFullName]"
 INTEREST_MARKER_NO_UNITS_TOOLTIP: "Das [concept_interest] wird derzeit weder von [Concept('concept_battalion', '$concept_battalions$n')], noch von [concept_power_projection] oder #variable $INTEREST_DOMINANT_INTEREST$#! unterstützt"
 INTEREST_SUPPORTED_BY_DOMINANT: "Wird durch [INTEREST.GetInterestStatusName|v] in der Region „[INTEREST.GetStrategicRegion.GetName]“ unterstützt"
 INTEREST_ICON_TOOLTIP_HAS: "[INTEREST.GetOwner.GetAltName('NOM')|U] hat ein #variable [INTEREST.GetInterestStatusName]#! an der Region „[INTEREST.GetStrategicRegion.GetName]“\n$TOOLTIP_DELIMITER$"
 INTEREST_ICON_TOOLTIP_HAS_NOT: "[INTEREST.GetOwner.GetAltName('NOM')|U] bekundet [concept_interest] in der Region „[INTEREST.GetStrategicRegion.GetName]“"
 INTEREST_PROGRESS_ACTIVATING_TOOLTIP: "Fortschritt auf dem Weg, ein [concept_active_interest] zu werden: #variable [INTEREST.GetProgress|%0]#!"
 INTEREST_PROGRESS_DEACTIVATING_TOOLTIP: "Fortschritt auf dem Weg, ein [concept_inactive_interest|l] zu werden: #variable [INTEREST.GetProgress|%0]#!"
 INTEREST_MAINTAIN_TOOLTIP: "#variable [Interest.GetInterestStatusName]#! wird beibehalten"
 TRADE_OVERVIEW_ENTRY_TOOLTIP_HEADER: "#header $GOODS_NAME$#!\n$TOOLTIP_DELIMITER$"
 TRADE_OVERVIEW_ENTRY_TOOLTIP_MARKET_ENTRY: "\n$MARKET_NAME$: #variable $VALUE|K$#! (Ortspreis: #variable @money!$PRICE|1$#!)"
 EXPECTED_SOL_SHORT: "[Concept('concept_expected_sol', '$concept_expected_sol_short$')]"
 SOL_LOWER: "[LabelingHelper.GetLabelForStandardOfLivingNoIconCFixedPointFormatFromExpected(State.GetAverageStandardOfLivingPoor,State.GetExpectedStandardOfLivingPoor)|v]"
 SOL_MIDDLE: "[LabelingHelper.GetLabelForStandardOfLivingNoIconCFixedPointFormatFromExpected(State.GetAverageStandardOfLivingMiddle,State.GetExpectedStandardOfLivingMiddle)|v]"
 SOL_UPPER: "[LabelingHelper.GetLabelForStandardOfLivingNoIconCFixedPointFormatFromExpected(State.GetAverageStandardOfLivingRich,State.GetExpectedStandardOfLivingRich)|v]"
 STANDARD_OF_LIVING_TOOLTIP: "#header [concept_sol]#!\n$TOOLTIP_DELIMITER$\n[concept_sol_desc]"
 AVG_STANDARD_OF_LIVING_POOR: "$AVG_SOL_HEADER$ der $lower$ in „[State.GetName]“\n$TOOLTIP_DELIMITER$\nAnzahl an Pops: #variable [State.GetNumberOfPopsPoor|*]#!\nDerzeitiger Durchschnitt: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetAverageStandardOfLivingPoor)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_SOL_POOR [State.GetAverageStandardOfLivingPoor|1v]#!#!)\nDurchschnittliche $EXPECTED_SOL_SHORT$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingPoor)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_EXPECTED_SOL_POOR [State.GetExpectedStandardOfLivingPoor|v1]#!#!)"
 AVG_STANDARD_OF_LIVING_MIDDLE: "$AVG_SOL_HEADER$ für die $middle$ in [State.GetName]\n$TOOLTIP_DELIMITER$\nAnzahl an Pops: #variable [State.GetNumberOfPopsMiddle|*]#!\nDerzeitiger Durchschnitt: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetAverageStandardOfLivingMiddle)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_SOL_MIDDLE [State.GetAverageStandardOfLivingMiddle|1v]#!#!)\nDurchschnittlicher $EXPECTED_SOL_SHORT$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingMiddle)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_EXPECTED_SOL_MIDDLE [State.GetExpectedStandardOfLivingMiddle|v1]#!#!)"
 AVG_STANDARD_OF_LIVING_RICH: "$AVG_SOL_HEADER$ der $upper$ in „[State.GetName]“\n$TOOLTIP_DELIMITER$\nAnzahl an Pops: #variable [State.GetNumberOfPopsRich|*]#!\nDerzeitiger Durchschnitt: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetAverageStandardOfLivingRich)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_SOL_RICH [State.GetAverageStandardOfLivingRich|1v]#!#!)\nDurchschnittliche $EXPECTED_SOL_SHORT$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingRich)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_EXPECTED_SOL_RICH [State.GetExpectedStandardOfLivingRich|v1]#!#!)"
 SOL_BY_POPULATION_AVERAGE_SHORT: "#title Durchschnittlicher Lebensstandard:#!"
 SOL_BY_POPULATION_AVERAGE: "#title [concept_sol]:#!\n[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetAverageSoLByPopulation)|v] ([Country.GetAverageSoLByPopulation|v1])"
 AVG_STANDARD_OF_LIVING_COUNTRY: "$AVG_SOL_HEADER$ [Country.GetAltName('IN')]\nDerzeitiger Durchschnitt: [Country.GetFormattedStandardOfLivingLabelAll|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_SOL_ALL [Country.GetFormattedStandardOfLivingAll|v]#!#!) ([Country.GetStandardOfLivingRanking])\nDurchschnittliche $EXPECTED_SOL_SHORT$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetExpectedSoLByPopulation)|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_EXPECTED_SOL_ALL [Country.GetExpectedSoLByPopulation|v1]#!#!)\n$TOOLTIP_DELIMITER$\n$COUNTRY_STRATAS_AVG_SOL$"
 COUNTRY_STRATAS_AVG_SOL: "$lower$: [Country.GetFormattedStandardOfLivingLabelPoor|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_SOL_LOW,CountryStandardOfLivingLower #v [Country.GetFormattedStandardOfLivingPoor]#!#!#!) – ([LabelingHelper.GetIconForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingPoor)|v] #tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_EXPECTED_SOL_LOW [Country.GetExpectedStandardOfLivingPoor|v1]#!#! $EXPECTED_SOL_SHORT$)\n$middle$: #v [Country.GetFormattedStandardOfLivingLabelMiddle]#! (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_SOL_MIDDLE,CountryStandardOfLivingMiddle #v [Country.GetFormattedStandardOfLivingMiddle]#!#!#!) – ([LabelingHelper.GetIconForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingMiddle)|v] #tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_EXPECTED_SOL_MIDDLE [Country.GetExpectedStandardOfLivingMiddle|v1]#!#! $EXPECTED_SOL_SHORT$)\n$upper$: #v [Country.GetFormattedStandardOfLivingLabelRich]#! (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_SOL_UPPER,CountryStandardOfLivingUpper [Country.GetFormattedStandardOfLivingRich|v]#!#!) – ([LabelingHelper.GetIconForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingRich)|v] #tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_EXPECTED_SOL_UPPER [Country.GetExpectedStandardOfLivingRich|v1]#!#! $EXPECTED_SOL_SHORT$)"
 COUNTRY_AVG_STANDARD_OF_LIVING_STRATA: "$STRATA$: #v $LABEL_FOR_SOL$#! (#tooltippable #tooltip:$TOOLTIP_TAG$ #v $SOL_VALUE|1$#!#!#!)"
 COUNTRY_FACTORS_AFFECTING_STRATA: "#header Lebensstandard für die $STRATA$ [GetPlayer.GetAltName('IN')]#!\n$ADDITIONAL_FACTORS$"
 AVG_STANDARD_OF_LIVING_COUNTRY_LOWER: "Durchschnittlicher [concept_sol] für die [concept_lower_strata] [Country.GetAltName('IN')]"
 AVG_STANDARD_OF_LIVING_COUNTRY_MIDDLE: "Durchschnittlicher [concept_sol] für die [concept_middle_strata] [Country.GetAltName('IN')]"
 AVG_STANDARD_OF_LIVING_COUNTRY_UPPER: "Durchschnittlicher [concept_sol] für die [concept_upper_strata] [Country.GetAltName('IN')]"
 POPULATION_COUNTRY_LOWER: "[concept_lower_strata]-[Concept('concept_pop', '$concept_population$')] [Country.GetAltName('IN')]"
 POPULATION_COUNTRY_MIDDLE: "[concept_middle_strata]-[Concept('concept_pop', '$concept_population$')] [Country.GetAltName('IN')]"
 POPULATION_COUNTRY_UPPER: "[concept_upper_strata]-[Concept('concept_pop', '$concept_population$')] [Country.GetAltName('IN')]"
 COUNTRY_SOL_ALL_LABEL: "[Country.GetFormattedStandardOfLivingLabelAll] ([Country.GetFormattedStandardOfLivingAll|v])"
 COUNTRY_SOL_LOW_LABEL: "[Country.GetFormattedStandardOfLivingLabelPoor] ([Country.GetFormattedStandardOfLivingPoor|v])"
 COUNTRY_SOL_MIDDLE_LABEL: "[Country.GetFormattedStandardOfLivingLabelMiddle] ([Country.GetFormattedStandardOfLivingMiddle|v])"
 COUNTRY_SOL_UPPER_LABEL: "[Country.GetFormattedStandardOfLivingLabelRich] ([Country.GetFormattedStandardOfLivingRich|v])"
 POPS_OVERVIEW_AVERAGE_INCOME_LOW_LABEL: "@money![PopsOverviewPanel.GetAverageIncomePoor|v1]-Einkommen"
 POPS_OVERVIEW_AVERAGE_INCOME_MIDDLE_LABEL: "@money![PopsOverviewPanel.GetAverageIncomeMiddle|v1]-Einkommen"
 POPS_OVERVIEW_AVERAGE_INCOME_UPPER_LABEL: "@money![PopsOverviewPanel.GetAverageIncomeRich|v1]-Einkommen"
 POPS_OVERVIEW_AVERAGE_INCOME_LOW_LABEL_TOOLTIP: "#header Durchschnittseinkommen#!\nDiese Pops verdienen im Durchschnitt @money![PopsOverviewPanel.GetAverageIncomePoor|v1]"
 POPS_OVERVIEW_AVERAGE_INCOME_MIDDLE_LABEL_TOOLTIP: "#header Durchschnittseinkommen#!\nDiese Pops verdienen im Durchschnitt @money![PopsOverviewPanel.GetAverageIncomeMiddle|v1]"
 POPS_OVERVIEW_AVERAGE_INCOME_UPPER_LABEL_TOOLTIP: "#header Durchschnittseinkommen#!\nDiese Pops verdienen im Durchschnitt @money![PopsOverviewPanel.GetAverageIncomeRich|v1]"
 POPS_OVERVIEW_TAX_BURDEN_LOW_LABEL: "[PopsOverviewPanel.GetTaxBurdenPoor|v1%]-Steuern"
 POPS_OVERVIEW_TAX_BURDEN_MIDDLE_LABEL: "[PopsOverviewPanel.GetTaxBurdenMiddle|v1%]-Steuern"
 POPS_OVERVIEW_TAX_BURDEN_UPPER_LABEL: "[PopsOverviewPanel.GetTaxBurdenRich|v1%]-Steuern"
 POPS_OVERVIEW_TAX_BURDEN_LOW_LABEL_TOOLTIP: "#header Steuern#!\nDiese Pops zahlen durchschnittlich [PopsOverviewPanel.GetTaxBurdenPoor|v1%] ihres Einkommens als Steuern"
 POPS_OVERVIEW_TAX_BURDEN_MIDDLE_LABEL_TOOLTIP: "#header Steuern#!\nDiese Pops zahlen durchschnittlich [PopsOverviewPanel.GetTaxBurdenMiddle|v1%] ihres Einkommens als Steuern"
 POPS_OVERVIEW_TAX_BURDEN_UPPER_LABEL_TOOLTIP: "#header Steuern#!\nDiese Pops zahlen durchschnittlich [PopsOverviewPanel.GetTaxBurdenRich|v1%] ihres Einkommens als Steuern"
 TAX_BURDEN_TYPE_INCOME: "$BUDGET_INCOME_TAXES$"
 TAX_BURDEN_TYPE_CONSUMPTION: "$BUDGET_CONSUMPTION_TAXES$"
 TAX_BURDEN_TYPE_DIVIDEND: "$BUDGET_DIVIDENDS_TAXES$"
 TAX_BURDEN_TYPE_POLL: "$BUDGET_POLL_TAXES$"
 TAX_BURDEN_ITEM_LABEL: "[TaxBurdenItem.GetValue|v1%]"
 TAX_BURDEN_ITEM_LABEL_TOOLTIP: "#header [TaxBurdenItem.GetTaxType]#!\nDiese Pops zahlen durchschnittlich [TaxBurdenItem.GetValue|v1%] ihres Einkommens als [TaxBurdenItem.GetTaxType]"
 POPS_OVERVIEW_GOODS_EXPENSES_LOW_LABEL: "[PopsOverviewPanel.GetGoodsExpensesPoor|v1%]-Bedarfe"
 POPS_OVERVIEW_GOODS_EXPENSES_MIDDLE_LABEL: "[PopsOverviewPanel.GetGoodsExpensesMiddle|v1%]-Bedarfe"
 POPS_OVERVIEW_GOODS_EXPENSES_UPPER_LABEL: "[PopsOverviewPanel.GetGoodsExpensesRich|v1%]-Bedarfe"
 POPS_OVERVIEW_GOODS_EXPENSES_LOW_LABEL_TOOLTIP: "#header Bedarfe#!\nDiese Pops geben durchschnittlich [PopsOverviewPanel.GetGoodsExpensesPoor|v1%] ihres Einkommens für ihre Bedarfe aus"
 POPS_OVERVIEW_GOODS_EXPENSES_MIDDLE_LABEL_TOOLTIP: "#header Bedarfe#!\nDiese Pops geben durchschnittlich [PopsOverviewPanel.GetGoodsExpensesMiddle|v1%] ihres Einkommens für ihre Bedarfe aus"
 POPS_OVERVIEW_GOODS_EXPENSES_UPPER_LABEL_TOOLTIP: "#header Bedarfe#!\nDiese Pops geben durchschnittlich [PopsOverviewPanel.GetGoodsExpensesRich|v1%] ihres Einkommens für ihre Bedarfe aus"
 GOODS_EXPENSE_ITEM_LABEL: "[GoodsExpenseItem.GetExpenseRatio|v1%]"
 GOODS_EXPENSE_ITEM_TOOLTIP: "#header [Goods.GetTextIcon][Nbsp][Goods.GetName]#!\nDiese Pops geben durchschnittlich [GoodsExpenseItem.GetExpenseRatio|v1%] ihres Nettoeinkommens für „[Goods.GetName]“ aus. Der Durchschnittspreis beträgt @money![GoodsExpenseItem.GetPrice|v1] #tooltippable #tooltip:COIN_STACK_TOOLTIP [LabelingHelper.GetPriceCompareIcon(GoodsExpenseItem.GetRelativePriceDiff)]#!#!, das sind [GoodsExpenseItem.GetRelativePriceDiff|=-%1] im Vergleich zum Grundpreis von „[Goods.GetName]“."
 POPS_OVERVIEW_REMAINDER_POOR: "#v [PopsOverviewPanel.GetIncomeRemainderPoor|%=+1]#! [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderPoor, '(CFixedPoint)0'), 'Überschuss', 'Defizit')]"
 POPS_OVERVIEW_REMAINDER_MIDDLE: "#v [PopsOverviewPanel.GetIncomeRemainderMiddle|%=+1]#! [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderMiddle, '(CFixedPoint)0'), 'Überschuss', 'Defizit')]"
 POPS_OVERVIEW_REMAINDER_RICH: "#v [PopsOverviewPanel.GetIncomeRemainderRich|%=+1]#! [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderRich, '(CFixedPoint)0'), 'Überschuss', 'Defizit')]"
 POPS_OVERVIEW_REMAINDER_POOR_TOOLTIP: "#header Lebensstandardtrend#!\n#v [PopsOverviewPanel.GetIncomeRemainderPoor|%=+1]#! von @money![PopsOverviewPanel.GetAverageIncomePoor|v1] führt zum [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderPoor, '(CFixedPoint)0'), 'Steigen', 'Sinken')] des durchschnittlichen Lebensstandards dieser Pops."
 POPS_OVERVIEW_REMAINDER_MIDDLE_TOOLTIP: "#header Lebensstandardtrend#!\n#v [PopsOverviewPanel.GetIncomeRemainderMiddle|%=+1]#! von @money![PopsOverviewPanel.GetAverageIncomeMiddle|v1] führt zum [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderMiddle, '(CFixedPoint)0'), 'Steigen', 'Sinken')] des durchschnittlichen Lebensstandards dieser Pops."
 POPS_OVERVIEW_REMAINDER_RICH_TOOLTIP: "#header Lebensstandardtrend#!\n#v [PopsOverviewPanel.GetIncomeRemainderRich|%=+1]#! von @money![PopsOverviewPanel.GetAverageIncomeRich|v1] führt zum [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderRich, '(CFixedPoint)0'), 'Steigen', 'Sinken')] des durchschnittlichen Lebensstandards dieser Pops."
 COUNTRY_SOL_ALL: "#header Durchschnittlicher [concept_sol] für alle [Concept('concept_pop', '$concept_pops$')] [Country.GetAltName('IN')]#!\n#v [Country.GetFormattedStandardOfLivingLabelAll] ([Country.GetFormattedStandardOfLivingAll]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetAdditionalSOLFactorsDescAll]"
 COUNTRY_SOL_LOW: "#header [Country.GetAdjective]er [concept_lower_strata]-[concept_sol]#!\n[GetTrendValue(Country.GetLowerStrataPopulationTrend)|vD] [Concept('concept_pop', '$concept_pops$')] mit einem durchschnittlichen Lebensstandard von #v [Country.GetFormattedStandardOfLivingLabelPoor] ([Country.GetFormattedStandardOfLivingPoor]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetAdditionalSOLFactorsDescPoor]"
 COUNTRY_SOL_MIDDLE: "#header [Country.GetAdjective]er [concept_middle_strata]-[concept_sol]#!\n[GetTrendValue(Country.GetMiddleStrataPopulationTrend)|vD] [Concept('concept_pop', '$concept_pops$')] mit einem durchschnittlichen Lebensstandard von #v [Country.GetFormattedStandardOfLivingLabelMiddle] ([Country.GetFormattedStandardOfLivingMiddle]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetAdditionalSOLFactorsDescMiddle]"
 COUNTRY_SOL_UPPER: "#header [Country.GetAdjective]er [concept_upper_strata]-[concept_sol]#!\n[GetTrendValue(Country.GetUpperStrataPopulationTrend)|vD] [Concept('concept_pop', '$concept_pops$')] mit einem durchschnittlichen Lebensstandard von #v [Country.GetFormattedStandardOfLivingLabelRich] ([Country.GetFormattedStandardOfLivingRich]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetAdditionalSOLFactorsDescRich]"
 COUNTRY_EXPECTED_SOL_ALL: "#header Durchschnittlicher [concept_expected_sol] für alle [Concept('concept_pop', '$concept_pops$')] [Country.GetAltName('IN')]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetExpectedSoLByPopulation)] ([Country.GetExpectedSoLByPopulation|1]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetExpectedSOLFactorsDescAll]"
 COUNTRY_EXPECTED_SOL_LOW: "#header Durchschnittlicher [concept_expected_sol] für die [concept_lower_strata] [Country.GetAltName('IN')]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingPoor)] ([Country.GetExpectedStandardOfLivingPoor|1]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetExpectedSOLFactorsDescPoor]"
 COUNTRY_EXPECTED_SOL_MIDDLE: "#header Durchschnittlicher [concept_expected_sol] für die [concept_middle_strata] [Country.GetAltName('IN')]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingMiddle)] ([Country.GetExpectedStandardOfLivingMiddle|1]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetExpectedSOLFactorsDescMiddle]"
 COUNTRY_EXPECTED_SOL_UPPER: "#header Durchschnittlicher [concept_expected_sol] für die [concept_upper_strata] [Country.GetAltName('IN')]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingRich)] ([Country.GetExpectedStandardOfLivingRich|1]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetExpectedSOLFactorsDescRich]"
 CULTURE_GLOBAL_AVG_STANDARD_OF_LIVING: "[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Culture.CalcAvgSoL)|v] (#v [Culture.CalcAvgSoL|1]#!)"
 CULTURE_GLOBAL_AVG_STANDARD_OF_LIVING_LOWER_CLASS: "[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Culture.CalcAvgSoLForPoor)|v] (#v [Culture.CalcAvgSoLForPoor|1]#!)"
 CULTURE_GLOBAL_AVG_STANDARD_OF_LIVING_MIDDLE_CLASS: "[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Culture.CalcAvgSoLForMiddle)|v] (#v [Culture.CalcAvgSoLForMiddle|1]#!)"
 CULTURE_GLOBAL_AVG_STANDARD_OF_LIVING_UPPER_CLASS: "[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Culture.CalcAvgSoLForRich)|v] (#v [Culture.CalcAvgSoLForRich|1]#!)"
 FACTORS_AFFECTING_SOL_GLOBALLY: ""
 GLOBAL_FACTORS_AFFECTING_POOR: ""
 GLOBAL_FACTORS_AFFECTING_MIDDLE: ""
 GLOBAL_FACTORS_AFFECTING_RICH: ""
 GLOBAL_AVERAGE_HEADER: "#bold Globaler Durchschnitt:#!"
 GLOBAL_CLASS_AVERAGE_HEADER: "#bold Globaler Schichtendurchschnitt:#!"
 COUNTRY_AVERAGE_HEADER: "#bold Durchschnitt [GetPlayer.GetAltName('IN')]:#!"
 COUNTRY_CLASS_AVERAGE_HEADER: "#bold Schichtendurchschnitt [GetPlayer.GetAltName('IN')]:#!"
 GLOBAL_AVG_STANDARD_OF_LIVING_TOOLTIP: "Globaler [concept_sol]-Durchschnitt aller [Concept('concept_pop', '$concept_pops$')] der [Culture.GetName|l]en [concept_culture]"
 GLOBAL_AVG_STANDARD_OF_LIVING_LOWER_TOOLTIP: "Globaler [concept_sol]-Durchschnitt aller [concept_lower_strata]-[Concept('concept_pop', '$concept_pops$')] der [Culture.GetName|l]en [concept_culture]"
 GLOBAL_AVG_STANDARD_OF_LIVING_MIDDLE_TOOLTIP: "Globaler [concept_sol]-Durchschnitt aller [concept_middle_strata]-[Concept('concept_pop', '$concept_pops$')] der [Culture.GetName|l]en [concept_culture]"
 GLOBAL_AVG_STANDARD_OF_LIVING_UPPER_TOOLTIP: "Globaler [concept_sol]-Durchschnitt aller [concept_upper_strata]-[Concept('concept_pop', '$concept_pops$')] der [Culture.GetName|l]en [concept_culture]"
 COUNTRY_AVG_STANDARD_OF_LIVING_TOOLTIP: "Durchschnittlicher [concept_sol] aller [Concept('concept_pop', '$concept_pops$')] der [Culture.GetName|l]en [concept_culture] [GetPlayer.GetAltName('IN')]"
 COUNTRY_AVG_STANDARD_OF_LIVING_LOWER_TOOLTIP: "Durchschnittlicher [concept_sol] aller [concept_lower_strata]-[Concept('concept_pop', '$concept_pops$')] der [Culture.GetName|l]en [concept_culture] [GetPlayer.GetAltName('IN')]"
 COUNTRY_AVG_STANDARD_OF_LIVING_MIDDLE_TOOLTIP: "Durchschnittlicher [concept_sol] aller [concept_middle_strata]-[Concept('concept_pop', '$concept_pops$')] der [Culture.GetName|l]en [concept_culture] [GetPlayer.GetAltName('IN')]"
 COUNTRY_AVG_STANDARD_OF_LIVING_UPPER_TOOLTIP: "Durchschnittlicher [concept_sol] aller [concept_upper_strata]-[Concept('concept_pop', '$concept_pops$')] der [Culture.GetName|l]en [concept_culture] [GetPlayer.GetAltName('IN')]"
 CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING: "#v [GetPlayer.GetFormattedStandardOfLivingLabelAllWithCulture(Culture.Self)]#! (#tooltippable #tooltip:[Culture.GetTooltipTag],FACTORS_AFFECTING_SOL_COUNTRY_CULTURE #v [GetPlayer.GetFormattedStandardOfLivingAllWithCulture(Culture.Self)]#!#!#!)"
 CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING_LOWER_CLASS: "#v [GetPlayer.GetFormattedStandardOfLivingLabelPoorWithCulture(Culture.Self)]#! (#tooltippable #tooltip:[Culture.GetTooltipTag],COUNTRY_CULTURE_FACTORS_AFFECTING_POOR #v [GetPlayer.GetFormattedStandardOfLivingPoorWithCulture(Culture.Self)]#!#!#!)"
 CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING_MIDDLE_CLASS: "#v [GetPlayer.GetFormattedStandardOfLivingLabelMiddleWithCulture(Culture.Self)]#! (#tooltippable #tooltip:[Culture.GetTooltipTag],COUNTRY_CULTURE_FACTORS_AFFECTING_MIDDLE #v [GetPlayer.GetFormattedStandardOfLivingMiddleWithCulture(Culture.Self)]#!#!#!)"
 CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING_UPPER_CLASS: "[GetPlayer.GetFormattedStandardOfLivingLabelRichWithCulture(Culture.Self)|v] (#tooltippable #tooltip:[Culture.GetTooltipTag],COUNTRY_CULTURE_FACTORS_AFFECTING_RICH #v [GetPlayer.GetFormattedStandardOfLivingRichWithCulture(Culture.Self)]#!#!#!)"
 FACTORS_AFFECTING_SOL_COUNTRY: "#title Auswirkungen des [Concept('concept_sol', 'Lebensstandards')] [Country.GetAltName('IN')]#!\n[Country.GetAdditionalSOLFactorsDesc]"
 COUNTRY_AVG_STANDARD_OF_LIVING_POOR: "$lower$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetAverageStandardOfLivingPoor)|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_FACTORS_AFFECTING_POOR #v [Country.GetAverageStandardOfLivingPoor|1]#!#!#!)"
 COUNTRY_FACTORS_AFFECTING_POOR: "Auf $lower$ wirkende Faktoren:\n[Country.GetAdditionalSOLFactorsDescPoor]"
 COUNTRY_AVG_STANDARD_OF_LIVING_MIDDLE: "$middle$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetAverageStandardOfLivingMiddle)|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_FACTORS_AFFECTING_MIDDLE #v [Country.GetAverageStandardOfLivingMiddle|1]#!#!#!)"
 COUNTRY_FACTORS_AFFECTING_MIDDLE: "Auswirkungen auf die $middle$:\n[Country.GetAdditionalSOLFactorsDescMiddle]"
 COUNTRY_AVG_STANDARD_OF_LIVING_RICH: "$upper$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetAverageStandardOfLivingRich)|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_FACTORS_AFFECTING_RICH #v [Country.GetAverageStandardOfLivingRich|1]#!#!#!)"
 COUNTRY_FACTORS_AFFECTING_RICH: "Auf $upper$ wirkende Faktoren:\n[Country.GetAdditionalSOLFactorsDescRich]"
 FACTORS_AFFECTING_SOL_COUNTRY_CULTURE: "#title Faktoren, die den [concept_sol] der [Culture.GetName|l]en Kultur [GetPlayer.GetAltName('IN')] beeinflussen#!\n[GetPlayer.GetAdditionalSOLFactorsDescWithCulture(Culture.Self)]"
 COUNTRY_CULTURE_FACTORS_AFFECTING_POOR: "Auf [Culture.GetName|l]e $lower$ [GetPlayer.GetAltName('IN')] wirkende Faktoren:\n[GetPlayer.GetAdditionalSOLFactorsDescWithCulturePoor(Culture.Self)]"
 COUNTRY_CULTURE_FACTORS_AFFECTING_MIDDLE: "Faktoren, die die [Culture.GetName|l]e $middle$ [GetPlayer.GetAltName('IN')] betreffen:\n[GetPlayer.GetAdditionalSOLFactorsDescWithCultureMiddle(Culture.Self)]"
 COUNTRY_CULTURE_FACTORS_AFFECTING_RICH: "Auf [Culture.GetName|l]e $upper$ [GetPlayer.GetAltName('IN')] wirkende Faktoren:\n[GetPlayer.GetAdditionalSOLFactorsDescWithCultureRich(Culture.Self)]"
 SOL_BY_CLOUT_AVERAGE: "#title [concept_sol] (nach politischem Druck):#!\n[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetAverageSoLByPoliticalStrength)|v] ([Country.GetAverageSoLByPoliticalStrength|v])"
 AVG_SOL_HEADER: "#header [Concept('concept_sol', 'Lebensstandard')]#!"
 OVERVIEW: "Übersicht"
 GOVERNMENT: "Regierung"
 INTEREST_GROUPS: "[Concept('concept_interest_group', '$concept_interest_groups$')]"
 LAWS: "Gesetze"
 INSTITUTIONS: "Institutionen"
 REFORM_GOVERNMENT: "Regierungsumbildung"
 EXIT_REFORM_GOVERNMENT: "Regierungsumbildung verlassen"
 REFORM_GOVERNMENT_CIVIL_WAR_ERROR: "@red_cross! [Country.GetAltName('NOM')] befindet sich in einem [concept_civil_war]"
 REFORM_GOVERNMENT_MOVE_TO_GOVERNMENT_BUTTON_TOOLTIP: "@red_cross! Die IG „[InterestGroup.GetName]“ unterstützt eine laufende [concept_revolution]"
 IN_OPPOSITION_TITLE: "#title Opposition#!"
 IN_GOVERNMENT_TITLE: "#title Regierung#!"
 ELECTION_TITLE: "#title Wahlen#!"
 MARGINAL_TITLE: "#title [Concept('concept_marginalized', 'Randständige')] [Concept('concept_interest_group', '$concept_interest_groups$')]#!"
 MARGINAL_TITLE_ACCORDION: "[Concept('concept_marginalized', 'Randständige')] [Concept('concept_interest_group', '$concept_interest_groups$')] (#v [GetDataModelSize(AccessPlayer.AccessMarginalInterestGroups)]#!)"
 LAWS_TITLE: "#title Beschlossene [Concept('concept_law', '$concept_laws$')]#!"
 ABOLISHED_LAWS_TITLE: "#title Abgeschaffte [Concept('concept_law', '$concept_laws$')]#!"
 STATE_TITLE: "#title [concept_state]#!"
 STATE_EXPLAINER: "#header Staat#!\n#instruction Klicken, um nach [Concept('concept_state', 'Staatsnamen')] zu sortieren#!"
 AVERAGE_POP_WAGE_EXPLAINER: "#header Durchschnittliche [concept_pop]-Gehälter#!\n#instruction Klicken, um nach den durchschnittlichen Gehältern von Pops in diesem [concept_state] zu sortieren#!"
 EXPENSES_EXPLAINER: "#header Ausgaben#!\n#instruction Klicken, um nach den Gesamtausgaben dieses [Concept('concept_state', 'Staates')] zu sortieren#!"
 STATE_INCOME_TAX_REVENUE_EXPLAINER: "#header Einnahmen aus Steuern#!\n#instruction Klicken, um nach den Gesamteinnahmen durch Steuern in diesem [concept_state] zu sortieren#!"
 TAX_CAPACITY_USAGE: "#header Nutzung der [concept_tax_capacity]#!\n[State.GetName] nutzt $USAGE|1v$ [concept_tax_capacity]\n$TOOLTIP_DELIMITER$\nEin Punkt [concept_tax_capacity] ist für je $POPS_PER_CAPACITY|vK$ [Concept('concept_pop', '$concept_pops$')] nötig und [State.GetName] hat eine Gesamtbevölkerung von $TOTAL_POPS|vK$"
 STATE_TAX_CAPACITY: "[concept_tax_capacity]\n$STATE_TAX_CAPACITY_CONDENSED$"
 STATE_TAX_CAPACITY_BUILDING: "#header [concept_tax_capacity] von „[Building.GetState.GetName]“#!\n$STATE_TAX_CAPACITY_CONDENSED$"
 STATE_TAX_CAPACITY_DESC: "#header [concept_tax_capacity]#!\nSaldo der $concept_tax_capacity$ in „[State.GetName]“: [State.CalcTaxCapacityBalance|1+=]\n$TOOLTIP_DELIMITER$\n$concept_tax_capacity$: #tooltippable #tooltip:[State.GetTooltipTag],STATE_TAX_CAPACITY_TOOLTIP [State.CalcTaxCapacity|1+]#!#!\nNutzung der $concept_tax_capacity$: #tooltippable #tooltip:[State.GetTooltipTag],STATE_TAX_CAPACITY_USAGE_TOOLTIP [State.CalcTaxCapacityUsage|1-]#!#![SelectLocalization(GreaterThan_CFixedPoint(State.CalcTaxCapacityUsage, State.CalcTaxCapacity), 'STATE_TAX_CAPACITY_INSUFFICIENT_LONG', '')]"
 STATE_TAX_CAPACITY_USAGE_TOOLTIP: "[State.GetTaxCapacityUsageDesc]"
 STATE_TAX_CAPACITY_TOOLTIP: "#header [concept_tax_capacity]#!\n[State.GetName] hat eine [concept_tax_capacity] von [State.CalcTaxCapacity|+0]\n$TOOLTIP_DELIMITER$\n[State.GetTaxCapacityDesc]"
 STATE_TAX_CAPACITY_INSUFFICIENT: "\n[State.GetTaxCapacityEffectsDesc]"
 STATE_TAX_CAPACITY_INSUFFICIENT_LONG: "\n\n@warning! Da die Nutzung höher als die Kapazität ist, gelten die folgenden Effekte auf den [concept_state]:\n[State.GetTaxCapacityEffectsDesc]"
 EVENT_OPTION_TOOLTIP: "#header „[EventOption.GetText]“#!\n$TOOLTIP_DELIMITER$\n[EventOption.GetDesc]"
 POP_VOTING_POWER_WEALTH_TOO_LOW: "@warning! Kann aufgrund von [concept_wealth] nicht wählen: $WEALTH|v0$ unter der Schwelle von $THRESHOLD|v0$\n$TAB$$BREAKDOWN$"
 POP_VOTING_POWER_WEALTH_SUFFICIENT: "[concept_wealth] $WEALTH|v0$ erreichte Schwelle von $THRESHOLD|v0$\n$TAB$$BREAKDOWN$"
 POP_VOTING_POWER_POPULATION: "x$NUM|v0$ möglich zulässige Wähler"
 POP_VOTING_INCORPORATION_LEVEL: "x$INCORPORATION|v%$ [Concept('concept_incorporated_state' ,'$concept_incorporation$')] von [State.GetName]"
 POP_VOTING_POWER: "Zahl der [concept_votes]: #v $VAL|+D0$#!\n$BREAKDOWN$"
 DOES_NOT_ALLOW_ELECTIONS: "Die derzeitige [concept_government_type] lässt keine [concept_election] zu"
 NEXT_ELECTION_DATE: "Nächste [concept_election]: [AccessPlayer.GetNextElectionDate|v]"
 PREVIOUS_ELECTION_RESULTS: "Vorherige [Concept('concept_election', 'Wahlergebnisse')]"
 PARTY_ELECTION_TOOLTIP: "Kandidaten von „[Party.GetNameNoFormatting|v]“ erhielten bei der letzten [concept_election] [Party.GetCurrentVotingPowerShare|%1v] der [concept_votes]"
 ELECTION_ENTRY: "#header [Party.GetName] [Party.GetMembersSummary]#!\n[concept_votes]: $VOTING_POWER_SHARE|%1v$"
 ELECTION_POLL_ENTRY: "$ELECTION_ENTRY$\n[concept_momentum]: #tooltippable #tooltip:[Party.GetTooltipTag],MOMENTUM_BREAKDOWN [Party.GetMomentum|%=+0]#!#!\n\n"
 MOMENTUM_BREAKDOWN: "[Party.GetMomentumDesc]"
 IG_ELECTION_MOMENTUM: "#header [concept_momentum]#!\nDerzeitiger Wert: $MOMENTUM|%=+0$\n$TOOLTIP_DELIMITER$\nEin Wert, der zu Beginn der Wahl zufällig generiert wird und sich durch Ereignisse ändern kann: $RAW|%=+0$[ConcatIfNeitherEmpty(SelectLocalization(Not(EqualTo_CFixedPoint(Character.GetPopularity, '(CFixedPoint)0')),'CHARACTER_POPULARITY_HEADER',''), '$POPULARITY_ADJUSTMENT|%=+0$')]"
 CHARACTER_POPULARITY_HEADER: "\nAnpassung aufgrund der [concept_popularity] von [Character.GetFullName]: "
 CHARACTER_POPULARITY: "#v [LabelingHelper.GetLabelForPopularityCFixedPoint(Character.GetPopularity)]#! (#v [Character.GetPopularity|+0]#!)"
 CHARACTER_POPULARITY_LABEL: "[concept_popularity]: #v #tooltippable #tooltip:[Character.GetTooltipTag],POPULARITY_BREAKDOWN [LabelingHelper.GetLabelForPopularityCFixedPoint(Character.GetPopularity)]#!#!#! (#v #tooltippable #tooltip:[Character.GetTooltipTag],POPULARITY_BREAKDOWN [Character.GetPopularity|+0]#!#!#!)"
 POPULARITY: "[concept_popularity]"
 POPULARITY_ICON: "@popularity! [concept_popularity]"
 IDEOLOGY_CONCEPT: "[concept_ideology]"
 CHARACTER_IDEOLOGY: "#v [Ideology.GetNameNoFormatting]#!"
 RELIGION: "[concept_religion]"
 CHARACTER_RELIGION: "#v [Religion.GetNameNoFormatting]#!"
 CHARACTER_PANEL_CULTURE_LABEL: "[concept_culture]"
 CHARACTER_CULTURE: "#v [Culture.GetNameNoFormatting]#!"
 CHARACTER_INTEREST_GROUP_OR_LEADER: "[SelectLocalization(Character.IsIGLeader, 'CHARACTER_INTEREST_GROUP_LEADER', 'CHARACTER_INTEREST_GROUP')]"
 CHARACTER_INTEREST_GROUP_LEADER: "[concept_leader] von [concept_interest_group]"
 CHARACTER_INTEREST_GROUP: "[concept_interest_group]"
 CHARACTER_PANEL_TAB_OVERVIEW: "Übersicht"
 CHARACTER_PANEL_TAB_OVERVIEW_SELECTED: "#b Übersicht#!"
 CHARACTER_PANEL_TAB_MODIFIERS: "Modifikatoren"
 CHARACTER_PANEL_TAB_MODIFIERS_SELECTED: "#b Modifikatoren#!"
 CHARACTER_PANEL_TRAITS_HEADER: "Charaktereigenschaften"
 JOURNAL_ENTRY_PROGRESSBAR_FROM_ZERO: "Fortschritt: [JournalEntry.GetGoalProgressPercent|%1v] ([JournalEntry.GetGoalProgressValue|D]/[JournalEntry.GetTotalGoalValue|D])"
 JOURNAL_ENTRY_PROGRESSBAR_FROM_BASE: "Fortschritt: [JournalEntry.GetGoalProgressPercent|%1v] ([JournalEntry.GetGoalProgressValue|D]/[JournalEntry.GetTotalGoalValue|D])"
 JOURNAL_ENTRY_PROGRESSBAR_MONTHS: "[LabelingHelper.GetMultiTypeGameTimeDifferenceFromMonths(FixedPointToInt(JournalEntry.GetRemainingProgressValue), '(int32)2', '')] verbleibend"
 JOURNAL_ENTRY_PROGRESSBAR_WEEKS: "[LabelingHelper.GetMultiTypeGameTimeDifferenceFromWeeks(FixedPointToInt(JournalEntry.GetRemainingProgressValue), '(int32)2', '')] verbleibend"
 URBANIZATION_TOOLTIP: "#header [concept_urbanization]#!\nGesamt: #tooltippable #tooltip:[State.GetTooltipTag],URBANIZATION_BREAKDOWN [State.GetUrbanization|v]#!#!\n$TOOLTIP_DELIMITER$\nJeweils [State.GetUrbanizationNeededPerLevelFormatted] [concept_urbanization] geben dem [concept_state] #b +1#! [GetBuildingType('building_urban_center').GetName]"
 URBANIZATION_BREAKDOWN: "#header [concept_urbanization] in „[State.GetName]“#!\nGesamt: [State.GetUrbanization|v]\nFür je [State.GetUrbanizationNeededPerLevelRaw|v] [concept_urbanization] im [concept_state] werden +1 [GetBuildingType('building_urban_center').GetName] errichtet.\n$TOOLTIP_DELIMITER$\n[State.GetTotalUrbanizationDesc]"
 LAND_TEXT: "[concept_arable_land]: [State.GetNumFreeArableLand|v]"
 LAND_TEXT_TOOLTIP: "#header [concept_arable_land]#!\nverfügbar: [State.GetNumFreeArableLand|v][ConcatIfNeitherEmpty('\n', State.GetFreeArableLandAfterInactiveQueuedEntry)]\n$TOOLTIP_DELIMITER$\n$LAND_TEXT_TOOLTIP_BREAKDOWN$\n\n$LAND_TEXT_TOOLTIP_CONCEPT$"
 LAND_TEXT_TOOLTIP_AFTER_INACTIVE_QUEUED: "Nach Abschluss der [concept_construction_queue]: $VALUE|v$"
 LAND_TEXT_TOOLTIP_BREAKDOWN: "[State.GetArableLandCapacity|v=] durch örtliche Landschaft [ConcatIfNeitherEmpty('\n', State.GetNumUsedArableLandFullyBuiltEntry)][ConcatIfNeitherEmpty('\n', State.GetNumUsedArableLandUnderConstructionEntry)][ConcatIfNeitherEmpty('\n', State.GetNumInactiveQueuedArableLandEntry)]"
 LAND_TEXT_TOOLTIP_BREAKDOWN_FULLY_BUILT: "– $VALUE|v$ durch gebaute Gebäude"
 LAND_TEST_TOOLTIP_BREAKDOWN_CONSTRUCTION_DETAIL: "– $VALUE|v$ durch Gebäude im Bau"
 LAND_TEXT_NUM_INACTIVE_QUEUED_ARABLE_LAND: "– $VALUE|v$ [concept_arable_land] reserviert für Gebäude in Baureihe"
 LAND_TEXT_TOOLTIP_CONCEPT: "Alles verfügbare [concept_arable_land] in [State.GetName] wird durch [State.GetSubsistenceBuilding.GetName] besetzt."
 SUBSISTENCE_CONCEPT: "#concept $SUBSISTENCE_CONCEPT_CLEAN$#!"
 SUBSISTENCE_CONCEPT_CLEAN: "Dies ist ein [concept_subsistence_building], ein höchst ineffizientes Gebäude, das erscheint, wenn es ungenutztes [concept_arable_land] in einem Staat gibt. Sobald man damit anfängt, das Potenzial des Staates zu nutzen, wird dieses Gebäude automatisch verkleinert."
 SUBSISTENCE_CREATION_EXPLANATION: "Für jedes ungenutzte [concept_arable_land] im [concept_state] wird automatisch ein [concept_subsistence_building] errichtet.\n[Building.GetState.GetName] hat #tooltippable #tooltip:[Building.GetState.GetTooltipTag],LAND_TEXT_TOOLTIP [Building.GetState.GetNumFreeArableLand|v]#!#! ungenutztes [concept_arable_land]"
 URBAN_CENTER_EXPLANATION: "Dies ist ein Stadtzentrum, das automatisch erscheint, sobald es genügend [concept_urbanization] im [concept_state] gibt. $URBAN_CENTER_CREATION_EXPLANATION$"
 URBAN_CENTER_CREATION_EXPLANATION: "Für je [Building.GetState.GetUrbanizationNeededPerLevelFormatted] [concept_urbanization] im [concept_state] werden +1 [GetBuildingType('building_urban_center').GetName] errichtet.\n„[Building.GetState.GetName|U]“ hat #tooltippable #tooltip:[Building.GetState.GetTooltipTag],URBANIZATION_BREAKDOWN [Building.GetState.GetUrbanization|v]#!#! [concept_urbanization]"
 LOCAL_WORKFORCE_OWNERSHIP_EXPLANATION: "Die [concept_building_owners] aller „[Building.GetName]“ sind immer die örtlichen [Concept('concept_workforce', 'Beschäftigten')]"
 EXPENSIVE_GOODS_IN_MARKET_ELEMENT: "$TAB$[State.GetName] – [Goods.GetMarketPriceWithTooltip|1]"
 URBAN_PART_OF_STATE: "Stadtgebäude"
 NON_URBAN_PART_OF_STATE: "Landgebäude"
 INFRA_PART_OF_STATE: "Entwicklung"
 URBAN_CENTER: "Stadtzentrum"
 LEVEL: "Größe:"
 STANDARD_OF_LIVING_TITLE: "[concept_sol]:"
 UNEMPLOYED_TITLE: "[concept_unemployed]:"
 TOOLTIP_VIEW_GRID: "#header Raster anzeigen#!"
 TOOLTIP_VIEW_LIST: "#header Liste anzeigen#!"
 TOOLTIP_PIE_CHART: "#header Tortendiagramm anzeigen#!"
 TOOLTIP_AREA_CHART: "#header Gebietsdiagramm anzeigen"
 REFORM_PREV: "#bold [ReformGroup.GetPrevious.GetName]#!\n(#variable @aut![GetPlayer.GetEnactmentCost(Reform.Self)|2]#!)"
 REFORM_NEXT: "#bold [ReformGroup.GetNext.GetName]#!\n(#variable @aut![GetPlayer.GetEnactmentCost(Reform.Self)|2]#!)"
 HAS_DIPLO_POWER: "@inf! $COMPARATOR$ bis #BOLD $NUM|0$#!"
 HAS_NOT_DIPLO_POWER: "#N $HAS_DIPLO_POWER$#!"
 EXPAND: "#header Erweitern#!"
 COLLAPSE: "#header Einklappen#!"
 UNPIN: "#header Von der Pinnwand lösen#!"
 PIN: "#header An der Pinnwand festmachen#!"
 buildings_expand: "Erweitern"
 buildings_expand_tooltip: "#BOLD #V Erweitern#!#!\n$TOOLTIP_DELIMITER$\n[concept_building_desc]"
 buildings_upgrade: "Verbessern"
 buildings_upgrade_tooltip: "#BOLD #V Verbessern#!#!"
 factorys_tooltip: "#BOLD #V Fabriken#!#!"
 rgos_tooltip: "#BOLD #V Ressourcensammeleinsätze#!#!"
 MAP_LIST_NO_AVAILABLE_OPTIONS: "Keine Optionen verfügbar"
 OUTLINER_ENTRY_INSTRUCTION_OPEN: "#instruction Zum Aus- oder Einklappen klicken#!"
 OUTLINER: "Pinnwand"
 OUTLINER_TOOLTIP: "#bold Pinnwand#!"
 MAP_LIST_DECREE_COST: "@aut! #v [MapListOption.GetDecreeData.GetCost]#!"
 MAP_LIST: "Hauptbuch"
 MAP_LIST_TOOLTIP: "#bold Hauptbuch#!"
 establish_colony: "Kolonie gründen"
 establish_colony_tooltip: "#HEADER Kolonie gründen#!\n$TOOLTIP_DELIMITER$\n[concept_colony_desc]"
 declare_interest: "Interessen erklären"
 declare_interest_tooltip: "Bekundet ein [concept_interest] an einer [concept_strategic_region], in der wir kein Territorium besitzen"
 diplomatic_plays: "Diplomatiespiele"
 diplomatic_plays_tooltip: "#header $diplomatic_plays$#!\n$TOOLTIP_DELIMITER$\n[concept_diplomatic_play_desc]"
 diplomatic_actions: "Diplomatenaktionen"
 diplomatic_actions_tooltip: "#header [Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')] vorschlagen#!\n$TOOLTIP_DELIMITER$\n[concept_diplomatic_action_desc]"
 PARTIES_ALREADY_IN_GOV: "#N Diese Parteien bilden bereits die derzeitige Regierung#!"
 PARTIES_NO_PARTIES_SELECTED: "#N Wir haben noch keine Parteien zur Regierungsbildung ausgewählt#!"
 DECLARE_INTEREST_BUTTON: "$declare_interest$ ([GetPlayer.GetNumDeclaredInterests|v] / [GetPlayer.CalcMaxNumDeclaredInterests|v])"
 buildings_lens_tab: "Gebäude"
 buildings_lens_tab_tooltip: "Gebäude bauen oder erweitern\n$TOOLTIP_DELIMITER$\n#concept Hier kann man neue [Concept('concept_building', '$concept_buildings$')] bauen oder bestehende erweitern, um mehr [Concept('concept_pop', '$concept_pops$')] zu beschäftigen.#!"
 special_buildings_lens_tab: "Sondergebäude"
 special_buildings_lens_tab_tooltip: "Sondergebäude bauen\n$TOOLTIP_DELIMITER$\n#concept Diese [Concept('concept_building', '$concept_buildings$')] umfassen [Concept('concept_canal', '$concept_canals$')] und [Concept('concept_monument', '$concept_monuments$')].#!"
 agriculture_lens_tab: "Landwirtschaft"
 agriculture_lens_tab_tooltip: "Landwirtschaftsgebäude bauen\n$TOOLTIP_DELIMITER$\n#concept [Concept('concept_building', 'Landwirtschaftsgebäude')] beschäftigen [Concept('concept_pop', '$concept_pops$')], um das [concept_arable_land] im [concept_state] für die Herstellung von [Concept('concept_good', '$concept_goods$')] zu nutzen.#!"
 resources_lens_tab: "Ressourcen"
 resources_lens_tab_tooltip: "Ressourcengebäude bauen\n$TOOLTIP_DELIMITER$\n#concept Diese [Concept('concept_building', '$concept_buildings$')] beschäftigen [Concept('concept_pop', '$concept_pops$')], um die [Concept('concept_resource_potential', '$concept_resource_potentials$')] im [concept_state] für die Herstellung von [Concept('concept_good', '$concept_goods$')] zu nutzen.#!"
 industry_lens_tab: "Industrie"
 industry_lens_tab_tooltip: "Industriegebäude bauen\n$TOOLTIP_DELIMITER$\n#concept Diese [Concept('concept_building', '$concept_buildings$')] beschäftigen [Concept('concept_pop', '$concept_pops$')], um eine oder mehrere [Concept('concept_good', '$concept_goods$')] in viele andere Arten von $concept_goods$ umzuwandeln.#!"
 urban_lens_tab: "Städtisch"
 urban_lens_tab_tooltip: "Stadtgebäude bauen\n$TOOLTIP_DELIMITER$\n#concept Städtische [Concept('concept_building', '$concept_buildings$')] beschäftigen [Concept('concept_pop', '$concept_pops$')], um eine oder mehrere [Concept('concept_good', '$concept_goods$')] in viele andere Arten von $concept_goods$ umzuwandeln.#!"
 development_lens_tab: "Entwicklung"
 development_lens_tab_tooltip: "Entwicklungsgebäude bauen\n$TOOLTIP_DELIMITER$\n#concept Entwicklungs-[Concept('concept_building', '$concept_buildings$')] beschäftigen [Concept('concept_pop', '$concept_pops$')], um eine oder mehrere [Concept('concept_good', '$concept_goods$')] in $concept_goods$ und Kapazitäten wie [concept_infrastructure] umzuwandeln.#!"
 decrees_lens_tab: "Erlasse"
 decrees_lens_tab_tooltip: "Erlass verkünden\n$TOOLTIP_DELIMITER$\n#concept Man kann einen [concept_decree] in den eigenen Staaten verkünden, was unterschiedliche Vorzüge bietet.#!"
 state_actions_lens_tab: "Staatenverwaltung"
 state_actions_lens_tab_tooltip: "Mit unseren [Concept('concept_state', '$concept_states$')] interagieren"
 diplomatic_plays_lens_tab: "Diplomatieforderungen"
 diplomatic_plays_lens_tab_tooltip: "#header $concept_diplomatic_demands$#!\n$TOOLTIP_DELIMITER$\n[concept_diplomatic_demand_desc]"
 diplomatic_overlord_actions_lens_tab: "Suzeränaktionen"
 diplomatic_overlord_actions_lens_tab_tooltip: "#header [Concept('concept_overlord_action', '$concept_overlord_actions$')] vorschlagen#!\n$TOOLTIP_DELIMITER$\n[concept_overlord_action_desc]"
 diplomatic_subjects_actions_lens_tab: "Klientelaktionen"
 diplomatic_subjects_actions_lens_tab_tooltip: "#header [Concept('concept_subject_action','$concept_subject_actions$')] vorschlagen#!\n$TOOLTIP_DELIMITER$\n[concept_subject_action_desc]"
 diplomatic_actions_lens_tab: "Diplomatenaktionen"
 diplomatic_actions_lens_tab_tooltip: "#header [Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')] vorschlagen#!\n$TOOLTIP_DELIMITER$\n[concept_diplomatic_action_desc]"
 army_lens_tab: "Armee"
 army_lens_tab_tooltip: "Mit unserer Armee interagieren"
 navy_lens_tab: "Marine"
 navy_lens_tab_tooltip: "Mit unserer Marine interagieren"
 show_supply_areas_lens_tab: "Versorgungsregionen zeigen"
 show_supply_areas_lens_tab_tooltip: "Versorgungsregionen zeigen\n$TOOLTIP_DELIMITER$\n#b DEBUG#!"
 trade_actions_lens_tab: "Handelsaktionen"
 trade_actions_lens_tab_tooltip: "Maßnahmen in Bezug auf den Handel ergreifen"
 import_routes_lens_tab: "Importhandelsrouten"
 import_routes_lens_tab_tooltip: "#header $import_routes_lens_tab$#!\n$TOOLTIP_DELIMITER$\nRichtet eine semi-permanente Handelsroute zwischen zwei Märkten ein und importiert Waren zu einem eigenen Markt oder einem, in dem man Häfen kontrolliert"
 export_routes_lens_tab: "Exporthandelsrouten"
 export_routes_lens_tab_tooltip: "#header $export_routes_lens_tab$#!\n$TOOLTIP_DELIMITER$\nRichtet eine semi-permanente Handelsroute zwischen zwei Märkten ein und exportiert Waren von einem eigenen Markt oder einem, in dem man Häfen kontrolliert"
 interests_lens_tab: "Regionale Aktionen"
 interests_lens_tab_tooltip: "Mit [Concept('concept_strategic_region','$concept_strategic_regions$')] interagieren"
 JOURNAL_WINDOW_HEADER: "Journal"
 JOURNAL_ENTRY_HEADING: "[concept_journal_entry] „[JournalEntry.GetType.GetGroup.GetName]“"
 NUMBER_OF_PLAYER_OBJECTIVE_JOURNAL_ENTRIES: "Wir haben #v [Subtract_int32(GetDataModelSize(AccessPlayer.AccessActivePlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedPlayerObjectiveJournalEntries))]#! nicht angepinnte [SelectLocalization(EqualTo_int32(Subtract_int32(GetDataModelSize(AccessPlayer.AccessActivePlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedPlayerObjectiveJournalEntries)), '(int32)1'), 'Herausforderung', 'Herausforderungen')]"
 NUMBER_OF_PLAYER_OBJECTIVE_JOURNAL_ENTRIES_SHORT: "#v [Subtract_int32(GetDataModelSize(AccessPlayer.AccessActivePlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedPlayerObjectiveJournalEntries))]#! abgepinnt"
 NUMBER_OF_NON_PLAYER_OBJECTIVE_JOURNAL_ENTRIES: "Wir haben #v [Subtract_int32(GetDataModelSize(AccessPlayer.AccessActiveNonPlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedNonPlayerObjectiveJournalEntries))]#! nicht angepinnte(n) [SelectLocalization(EqualTo_int32(Subtract_int32(GetDataModelSize(AccessPlayer.AccessActiveNonPlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedNonPlayerObjectiveJournalEntries)), '(int32)1'), 'JOURNAL_ENTRY_HEADING', 'ACTIVE_JOURNAL_ENTRIES')]"
 NUMBER_OF_NON_PLAYER_OBJECTIVE_JOURNAL_ENTRIES_SHORT: "#v [Subtract_int32(GetDataModelSize(AccessPlayer.AccessActiveNonPlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedNonPlayerObjectiveJournalEntries))]#! abgepinnt"
 EFFECT_RATIO_BELOW_MAX: "#v $EFFECT_RATIO|0%$#!"
 EFFECT_RATIO_ABOVE_MAX: "#v $EFFECT_RATIO|0%$#! oder mehr"
 POWER_TOOLTIP: "#tooltip_header $POWER_TYPE$#!\nSaldo: #variable $VAL|+=0$#![ConcatIfNeitherEmpty('\n', '$EFFECT$')]"
 POWER_EXCESS_EFFECT_HEADER: "$TOOLTIP_DELIMITER$\nAuswirkungen aus einem #g Überschuss#! von $EFFECT_RATIO_DESC$ $POWER_TYPE$ (Produktion ist höher als Verbrauch):\n$BREAKDOWN$"
 POWER_DEFICIT_EFFECT_HEADER: "$TOOLTIP_DELIMITER$\nAuswirkungen aus einem #n Defizit#! von $EFFECT_RATIO_DESC$ $POWER_TYPE$ (Verbrauch ist höher als Produktion):\n$BREAKDOWN$"
 BUREAUCRACY_TOOLTIP: "[GetPlayer.GetPowerTooltip('bureaucracy')][SelectLocalization(GetMetaPlayer.GetPlayedOrObservedCountry.IsValid, 'BUREAUCRACY_TOOLTIP_DELAYED', 'OBSERVER_NO_COUNTRY_SELECTED')]"
 AUTHORITY_TOOLTIP: "[GetPlayer.GetPowerTooltip('authority')][SelectLocalization(GetMetaPlayer.GetPlayedOrObservedCountry.IsValid, 'AUTHORITY_TOOLTIP_DELAYED', 'OBSERVER_NO_COUNTRY_SELECTED')]"
 INFLUENCE_TOOLTIP: "[GetPlayer.GetPowerTooltip('influence')][SelectLocalization(GetMetaPlayer.GetPlayedOrObservedCountry.IsValid, 'INFLUENCE_TOOLTIP_DELAYED', 'OBSERVER_NO_COUNTRY_SELECTED')]"
 BUREAUCRACY_TOOLTIP_DELAYED: "\n$TOOLTIP_DELIMITER$\nDie Gesamtproduktion an #v [GetPlayer.GetPowerIncome('bureaucracy')|D+0=]#! @bur![Nbsp][concept_bureaucracy] basiert auf Folgendem:[ConcatIfNeitherEmpty('\n', GetPlayer.GetPowerIncomeString('bureaucracy'))][ConcatIfNeitherEmpty('\n\n', GetPlayer.GetPowerExpensesString('bureaucracy'))]"
 AUTHORITY_TOOLTIP_DELAYED: "\n$TOOLTIP_DELIMITER$\nDie Gesamtproduktion an #v [GetPlayer.GetPowerIncome('authority')|D+0=]#! @aut![Nbsp][concept_authority] basiert auf Folgendem:[ConcatIfNeitherEmpty('\n', GetPlayer.GetPowerIncomeString('authority'))][ConcatIfNeitherEmpty('\n\n', GetPlayer.GetPowerExpensesString('authority'))]"
 INFLUENCE_TOOLTIP_DELAYED: "\n$TOOLTIP_DELIMITER$\nDie Gesamtproduktion an #v [GetPlayer.GetPowerIncome('influence')|D+0=]#! @inf![Nbsp][concept_influence] basiert auf Folgendem:[ConcatIfNeitherEmpty('\n', GetPlayer.GetPowerIncomeString('influence'))][ConcatIfNeitherEmpty('\n\n', GetPlayer.GetPowerExpensesString('influence'))]"
 BUREAUCRACY_LAWS: "Gesetze: #variable $COST|+=$#!\n"
 BUREAUCRACY_BUILDINGS: "Gebäude: #variable $COST|+=$#!\n"
 AUTHORITY_FROM_RULER_POPULARITY: "#v $VAL|+=0$#! durch [concept_popularity] von [Character.GetFullNameWithTitle]"
 CAPITAL_POLITICAL_EXPENSES_CHANGE_RELATIONS: "Meinung unseres Volkes über $COUNTRY_NAME$ ändern: #N #BOLD -$POWER_COST|1$ #!#!\n"
 CAPITAL_MONEY: "#tooltip_header [concept_money]#!\nSaldo: #variable @money![AccessPlayer.PredictWeeklyBalance|D=+]#![GetPlayer.GetPowerDeltaIcon('money')]\n[SelectLocalization(GreaterThan_CFixedPoint(GetPlayer.GetPrincipal, '(CFixedPoint)0'), 'CREDIT_DESC', 'GOLD_RESERVES_DESC')][SelectLocalization(GetMetaPlayer.GetPlayedOrObservedCountry.IsValid, 'CAPITAL_MONEY_DELAYED', 'OBSERVER_NO_COUNTRY_SELECTED')]"
 GOLD_RESERVES_DESC: "[concept_gold_reserves]: #tooltippable #tooltip:GOLD_RESERVES_BREAKDOWN @money![GetPlayer.GetGoldReserves|Dv]#!#!"
 CREDIT_DESC: "[concept_credit]: #tooltippable #tooltip:CREDIT_PROGRESS #variable @money![GetPlayer.GetPrincipal|K]#!#!#! / #maximum [GetPlayer.GetMaxCredit|K]#!"
 CREDIT_LIMIT: "[concept_credit]: #variable [GetPlayer.GetMaxCredit|2*]#!"
 CAPITAL_MONEY_DELAYED: "\n$TOOLTIP_DELIMITER$\n$INVESTMENT_POOL$\n$TOOLTIP_DELIMITER$\n[SelectLocalization(GreaterThan_CFixedPoint(GetPlayer.GetUnrealizedTaxes, '(CFixedPoint)0'), 'UNREALIZED_TAXES', '')][GetPlayer.GetIncomeBreakdown]\n\n[GetPlayer.GetExpensesBreakdown]"
 UNREALIZED_TAXES: "[concept_unrealized_taxes]: #tooltippable #tooltip:UNREALIZED_TAXES_BREAKDOWN #v @money![GetPlayer.GetUnrealizedTaxes|D-]#!#!#!\n$TOOLTIP_DELIMITER$\n"
 UNREALIZED_TAXES_BREAKDOWN: "#header [concept_unrealized_taxes]#!\nGesamt: #v @money![GetPlayer.GetUnrealizedTaxes|D-]#!\n$TOOLTIP_DELIMITER$\nDurchschnittliche nicht eingetriebene Steuern: #tooltippable #tooltip:AVG_STATE_COLLECTION_MULT_BREAKDOWN #v [GetPlayer.GetAverageStateTaxCollectionMult|+%0]#!#!#!\nDurchschnittliche [concept_tax_waste]: #tooltippable #tooltip:AVG_TAX_WASTE_BREAKDOWN #v [GetPlayer.GetAverageTaxWaste|+%0]#!#!#!"
 AVG_STATE_COLLECTION_MULT_BREAKDOWN: "#header Durchschnittliche nicht eingetriebene Steuern: #v [GetPlayer.GetAverageStateTaxCollectionMult|+%0]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetAverageTaxWaste|+%0]"
 STATE_TAX_COLLECTION_MULT_SINGLE_STATE: "@money!$UNCOLLECTED_TAX|Dv$ (#tooltippable #tooltip:$STATE_TAX_COLLECTION_MULTIPLIER_SUMMARY_TAG$ $TAX_COLLECTION_MULT|+%0$#!#!) in $STATE_NAME$"
 STATE_TAX_COLLECTION_MULTIPLIER_SUMMARY: "#header Steuereintreibungs-Malus in $STATE_NAME$ beträgt $TAX_COLLECTION_MULT|+%0$ aufgrund von#!:\n$TOOLTIP_DELIMITER$\n$SUMMARY$"
 AVG_TAX_WASTE_BREAKDOWN: "#header Durchschnittliche [concept_tax_waste]: #v [GetPlayer.GetAverageTaxWaste|-%0]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetAverageTaxWasteBreakdown]"
 STATE_TAX_WASTE_SINGLE_STATE: "$STATE_NAME$: $TAX_WASTE_VALUE|D-$ ($TAX_WASTE_PERCENT|-%0$)"
 GOLD_RESERVES_BREAKDOWN: "[AccessPlayer.GetGoldProgressDesc]"
 POWER_BASE_INCOME: "Grundeinnahmen: #variable #P +$POWER_BASE_GENERATION|1$ #!#!\n"
 CAPITAL_TRUST: "#tooltip_header Vertrauen#!\nDerzeit: #HEADER [GetPlayer.GetTrust|2]#!\nMonatlicher Verfall: #BOLD #V [GetPlayer.GetMonthlyTrustChange|+=3]#!#!"
 CAPITAL_TRUST_DELAYED: "\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetTrustBreakdown]\nMaximum: #variable 100#!\n\n$TRUST_CONCEPT$"
 POP_TOOLTIP: "#tooltip_header [Concept('concept_pop','$concept_population$')]#!\nDerzeit: [Country.GetTotalPopulation|*2v] ([Country.GetPopulationRanking])\n[Country.GetPopGrowthDesc]$POP_TOOLTIP_DELAYED$"
 RADICALS_TOOLTIP: "#tooltip_header $RADICALS$#!\nEs gibt #v [Country.GetNumRadicals|D]#! $RADICALS$ bei einer Gesamtbevölkerung von #v [Country.GetTotalPopulation|D]#! [Country.GetAltName('IN')]\n$TOOLTIP_DELIMITER$\nDie Anzahl an [Concept('concept_radical', 'Radikalen')] ändert sich um #v #tooltippable #tooltip:[Country.GetTooltipTag],RADICALS_CHANGE_TOOLTIP [Country.GetTotalNumRadicalsChange|D=-]#!#!#! seit [Country.GetRadicalsLoyalistsChangeStartDate|v].\nDie ausschlaggebendsten Faktoren sind [Country.GetRadicalsChangeSummary]\n\n[Country.GetRadicalsSummaryDesc][ConcatIfNeitherEmpty('\n\n',SelectLocalization(GreaterThan_int32(Country.CalcNumStatesInTurmoil, '(int32)0'), 'STATES_IN_TURMOIL', ''))][ConcatIfNeitherEmpty('\n\n',SelectLocalization(Country.HasIGApprovalFromRadicals, 'RADICALS_IG_APPROVAL', ''))]"
 LOYALISTS_TOOLTIP: "#tooltip_header $LOYALISTS$#!\nEs gibt #v [Country.GetNumLoyalists|D]#! $LOYALISTS$ bei einer Gesamtbevölkerung von #v [Country.GetTotalPopulation|D]#! [Country.GetAltName('IN')]\n$TOOLTIP_DELIMITER$\nDie Anzahl an [Concept('concept_loyalist', 'Loyalisten')] ändert sich um #v #tooltippable #tooltip:[Country.GetTooltipTag],LOYALISTS_CHANGE_TOOLTIP [Country.GetTotalNumLoyalistsChange|D=+]#!#!#! seit [Country.GetRadicalsLoyalistsChangeStartDate|v].\nDie ausschlaggebendsten Faktoren sind [Country.GetLoyalistsChangeSummary]\n\n[Country.GetLoyalistsSummaryDesc][ConcatIfNeitherEmpty('\n\n',SelectLocalization( Country.HasIGApprovalFromLoyalists, 'LOYALISTS_IG_APPROVAL', '' ))]"
 RADICALS_SUMMARY_IG_HEADER: "\n\n$concept_radicals$ nach [concept_interest_group]:"
 LOYALISTS_SUMMARY_IG_HEADER: "\n\n$concept_loyalists$ nach [concept_interest_group]:"
 RADICALS_SUMMARY_IG_LIST_ITEM: "\n$TAB$[InterestGroup.GetNumRadicals|vD] [InterestGroup.GetName]"
 LOYALISTS_SUMMARY_IG_LIST_ITEM: "\n$TAB$[InterestGroup.GetNumLoyalists|vD] [InterestGroup.GetName]"
 RADICALS_SUMMARY_IG_LIST_ITEM_NO_TAB: "\n[InterestGroup.GetNumRadicals|vD] [InterestGroup.GetName]"
 LOYALISTS_SUMMARY_IG_LIST_ITEM_NO_TAB: "\n[InterestGroup.GetNumLoyalists|vD] [InterestGroup.GetName]"
 RADICALS_LOYALISTS_SUMMARY_IG_OTHER_LIST_ITEM: "\n$TAB$#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $VAL|vD$#!#! in anderen [Concept('concept_interest_group', '$concept_interest_groups$')]"
 RADICALS_SUMMARY_POP_TYPE_HEADER: "$concept_radicals$ durch [concept_profession]:"
 LOYALISTS_SUMMARY_POP_TYPE_HEADER: "$concept_loyalists$ durch [concept_profession]:"
 RADICALS_SUMMARY_POP_TYPE_LIST_ITEM: "\n$TAB$[PopType.GetRadicals(Country.Self)|vD] [PopType.GetName]"
 LOYALISTS_SUMMARY_POP_TYPE_LIST_ITEM: "\n$TAB$[PopType.GetLoyalists(Country.Self)|vD] [PopType.GetName]"
 RADICALS_SUMMARY_POP_TYPE_LIST_ITEM_NO_TAB: "\n[PopType.GetRadicals(Country.Self)|vD] [PopType.GetName]"
 LOYALISTS_SUMMARY_POP_TYPE_LIST_ITEM_NO_TAB: "\n[PopType.GetLoyalists(Country.Self)|vD] [PopType.GetName]"
 RADICALS_LOYALISTS_SUMMARY_POP_TYPE_OTHER_LIST_ITEM: "\n$TAB$#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $VAL|vD$#!#! in anderen [Concept('concept_profession','$concept_professions$n')]"
 FORMATION_MAP_MARKER_INTERACTION_INFO: "#i Umsch+Klicken#!, um zur Auswahl #b hinzuzufügen#!\n#i STRG+Klicken#!, um aus der Auswahl zu #b entfernen#!\n#i Mit gedrückter Maustaste ziehen#!, um #b mehrere#! Formationen auszuwählen"
 RADICALS_LOYALISTS_SUMMARY_POLITICALLY_UNALIGNED_LIST_ITEM: "\n$TAB$$VAL|vD$ [Concept('concept_politically_unaligned_aligned', '$concept_politically_unaligned$e')|l]"
 NEUTRALS_TOOLTIP: "#tooltip_header $NEUTRALS$#!\nEs gibt #v [Country.GetNumNeutrals|*2]#! $NEUTRALS$ bei einer Gesamtbevölkerung von #v [Country.GetTotalPopulation|*2]#! [Country.GetAltName('IN')]"
 IG_RADICALS_TOOLTIP: "#tooltip_header $RADICALS$#!\nEs gibt #v [InterestGroup.GetNumRadicals|-*2]#! $RADICALS$ in [InterestGroup.GetName]\n[InterestGroup.GetNumRadicalsRatio|%2r] von #v #tooltippable #tooltip:[InterestGroup.GetTooltipTag],TOOLTIP_POPULATION [InterestGroup.GetPopulation|*2]#!#!#! unterstützenden [Concept('concept_pop', '$concept_pops$')]"
 IG_LOYALISTS_TOOLTIP: "#tooltip_header $LOYALISTS$#!\nEs gibt #v [InterestGroup.GetNumLoyalists|+*2]#! $LOYALISTS$ in [InterestGroup.GetName]\n[InterestGroup.GetNumLoyalistsRatio|%2g] von #v #tooltippable #tooltip:[InterestGroup.GetTooltipTag],TOOLTIP_POPULATION [InterestGroup.GetPopulation|*2]#!#!#! unterstützenden [Concept('concept_pop', '$concept_pops$')]"
 IG_NEUTRALS_TOOLTIP: "#tooltip_header $NEUTRALS$#!\nEs gibt #v [InterestGroup.GetNumNeutrals|*2]#! $NEUTRALS$ in [InterestGroup.GetName]\n[InterestGroup.GetNumNeutralsRatio|%2v] von #v #tooltippable #tooltip:[InterestGroup.GetTooltipTag],TOOLTIP_POPULATION [InterestGroup.GetPopulation|*2]#!#!#! unterstützenden [Concept('concept_pop', '$concept_pops$')]"
 POP_TOOLTIP_DELAYED: "\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(SelectLocalization(GreaterThan_int64(GetPlayer.GetPeopleAbroad, '(int64)0'), 'INCORPORATED_POPULATION', ''), '\n')][ConcatIfNeitherEmpty(SelectLocalization(GreaterThan_int64(GetPlayer.GetPeopleAbroad, '(int64)0'), 'UNINCORPORATED_POPULATION', ''), '\n\n')]$POP_TOOLTIP_DELAYED_EMPLOYMENT_DETAIL$"
 POP_TOOLTIP_DELAYED_EMPLOYMENT_DETAIL: "Erwerbstätige: #variable [Country.GetSalariedWorkingAdults|K]#!\nBauern: [Country.GetSubsistingWorkingAdults|Kv]\n[Concept('concept_unemployed', 'Arbeitslose')]: [Country.GetUnemployedWorkingAdults|Kv]\n[concept_dependents]: #variable [Country.GetDependents|K]#!"
 COST_POLITICAL: "@aut!#BOLD #V $COST|1$#!#!"
 COST_DIPLOMATIC: "@inf!#BOLD #V $COST|1$#!#!"
 MISSING_RESOURCES_COLON: "#N Fehlende Ressourcen:#! "
 CAPITAL_ADMINISTRATIVE_COLONIAL_MAINTENANCE: "Kolonieunterhalt: #N #BOLD -$MAINTENANCE|1$ #!#!\n"
 WEEKLY_GDP: "Wöchentliches BIP"
 POPULATION: "$concept_population$"
 SUPPORTING_POPULATION: "Unterstützende $concept_pops$"
 TOTAL_INDIVIDUALS_SUPPORT: "Gesamtzahl der [Concept('concept_individual', '$concept_individuals$')], die diese [Concept('concept_political_movement', '$concept_political_movement_short$')] [Concept('concept_political_movement_support', 'unterstützen')|l]"
 POLITICALLY_UNALIGNED: "[Concept('concept_politically_unaligned_aligned', '$concept_politically_unaligned$')]"
 SUPPORTING_POLITICALLY_UNALIGNED_POPULATION: "[Concept('concept_political_movement_support', '$concept_political_movement_support_short$')|U] durch politisch Unbeteiligte"
 POPULATION_TOOLTIP: "[Concept('concept_pop', '$concept_population$')]"
 RADICALS: "[Concept('concept_radical', '$concept_radicals$')]"
 NO_RADICALS: "Wir haben derzeit keine [Concept('concept_radical', 'Radikalen')]"
 LOYALISTS: "[Concept('concept_loyalist', '$concept_loyalists$')]"
 NO_LOYALISTS: "Wir haben derzeit keine [Concept('concept_loyalist', '$concept_loyalists$')]"
 NEUTRALS: "[Concept('concept_neutral', '$concept_neutrals$')]"
 AVG_STANDARD_OF_LIVING: "Durchschnittlicher [concept_sol]"
 MONEY: "[concept_gold_reserves]"
 TENSION: "[concept_tension]"
 INFAMY: "[concept_infamy]"
 TAXATION: "[Concept('concept_taxes','$concept_taxation$')]"
 NO_ACTIVE_INTERACTION: "Keine aktive Interaktion oder Kartenmodus"
 INACTIVE_TREATY_PORT: "Inaktiver [concept_treaty_port]"
 BUILDING_IS_MONOPOLIZED_BY: "„[BuildingType.GetName]“ werden [Concept('concept_monopoly','$concept_monopolized$')|l] von $NAME$"
 MONOPOLY_CANNOT_BE_ADDED_ALREADY_GRANTED: "@red_cross! „[BuildingType.GetName]“ #b kann nicht#! [Concept('concept_monopoly','$concept_monopolized$')|l] werden: $NAME$ hat bereits ein $concept_monopoly$ darauf"
 MONOPOLY_CANNOT_BE_REMOVED_NOT_OWNER: "Ein [concept_monopoly] auf „[BuildingType.GetName]“ #b kann nicht#! gewährt werden, weil es bereits von $NAME$ gehalten wird"
 MONOPOLY_COOLDOWN_ACTIVE: "#b Kann nicht#! entfernt werden bis #b [DATE.GetString]#!"
 MONOPOLY_BUILDING_TYPE_CANNOT_SWITCH_OWNER: "Gebäude der Art „[BuildingType.GetName]“ kann #b nicht#! [Concept('concept_monopoly', '$concept_monopolized$')|l] werden"
 MONOPOLY_MAX_COUNT_COUNTRY: "Wir haben die maximale Zahl an [Concept('concept_country_monopoly','$concept_country_monopolies$')] erreicht"
 MONOPOLY_FORBIDDEN_COUNTRY: "Unsere Gesetze untersagen uns [Concept('concept_monopoly', 'Monopole')]"
 MONOPOLY_AUTHORITY_COST: " #v #n -$VALUE|0$#!#! Autoritätskosten für #v $COUNT|D$#! [Concept('concept_country_monopoly', 'Landesmonopole')]"
 MONOPOLY_AFFECTS_RELATIONS: "Dies löst eine Veränderung in Höhe von #v $VALUE|1$#! in den Beziehungen mit [COUNTRY.GetAltName('DAT')] aus"
 PRESTIGE_GOODS_THROUGHPUT_BONUS: "$VALUE|0+=%$ durch $FRACTION|%0$ [concept_prestige_good]-Zufuhr"
 SHOW: "Anzeigen"
 HIDE: "Verbergen"
 WORLD_MARKET_ACCESS_FROM_MARKET_ACCESS: "$VALUE|v%0$ Grundwert durch [concept_market_access]"
 BLOCKADE_IMPACT_DESC: "$VALUE|0+=%$ aufgrund von [concept_blockade]-Stufe $BLOCKADE_LEVEL|0-%$"
 CORE_IDEOLOGY_HEADER: "[Ideology.GetName|U] – [concept_core_movement_ideology|U]"
 CHARACTER_IDEOLOGIES_HEADER: "Mögliche Charakter-$concept_ideologies$"
 MOVEMENT_ENDORSE_ICON_TOOLTIP: "Die „[PoliticalMovement.GetName]“ @approves! [Concept('concept_endorse_oppose','$concept_endorses$')|l] [Concept('concept_law', '$concept_laws$')] in dieser Spalte"
 MOVEMENT_INDIFFERENT_ICON_TOOLTIP: "Die „[PoliticalMovement.GetName]“ @indifferent! hat [Concept('concept_endorse_oppose','keine Meinung')] zu [Concept('concept_law', '$concept_laws$n')] in dieser Spalte"
 MOVEMENT_OPPOSE_ICON_TOOLTIP: "Die „[PoliticalMovement.GetName]“ @disapproves! [Concept('concept_endorse_oppose','$concept_endorses$')|l] [Concept('concept_law', '$concept_laws$')] in dieser Spalte"
 MOVEMENT_AFFECTED_INTEREST_GROUPS: "[Concept('concept_interest_group','$concept_interest_groups$')] [Concept('concept_political_movement_pressure', '$concept_political_movement_pressured_short$')]"
 MOVEMENT_AFFECTED_INTEREST_GROUPS_DESC: "Neue [Concept('concept_leader', '$concept_leaders$')] können bei [Concept('concept_interest_group','$concept_interest_groups$')] [Concept('concept_political_movement_pressure', '$concept_political_movement_pressured_short$')] mit einer der folgenden [concept_character]-[Concept('concept_ideology','$concept_ideologies$')] auftauchen"
 NO_PRESSURED_INTEREST_GROUPS: "Keine [Concept('concept_interest_group','$concept_interest_groups$')] [Concept('concept_political_movement_pressure', '$concept_political_movement_pressured_short$')]"
 NO_POSSIBLE_CHARACTER_IDEOLOGIES: "Keine möglichen [concept_character]-[Concept('concept_ideology','$concept_ideologies$')]"
 STATES_IN_TURMOIL: "Aufgrund von [Concept('concept_radical', 'Radikalen')] gibt es #tooltippable #tooltip:[Country.GetTooltipTag],STATES_IN_TURMOIL_TOOLTIP [Country.CalcNumStatesInTurmoil|v]#!#! [Concept('concept_state', '$concept_states$')] in [concept_turmoil]"
 STATES_IN_TURMOIL_TOOLTIP: "#header [concept_turmoil]#!\n$TOOLTIP_DELIMITER$\n[Country.GetStatesInTurmoilBreakdown]"
 STATES_IN_TURMOIL_BREAKDOWN_NONE: "Es befinden sich keine [Concept('concept_state', '$concept_states$')] in [concept_turmoil]"
 STATES_IN_TURMOIL_BREAKDOWN: "Die folgenden [Concept('concept_state', '$concept_states$')] befinden sich in [concept_turmoil]:\n$BREAKDOWN$"
 RADICALS_CHANGE_TOOLTIP: "#header $RADICALS$#![ConcatIfNeitherEmpty('\n', Country.GetRadicalsIncreaseBreakdown)][ConcatIfNeitherEmpty('\n', Country.GetRadicalsDecreaseBreakdown)][AddTextIf(And(Not(GreaterThan_int64(Country.GetTotalNumRadicalsIncrease, '(int64)0')),Not(GreaterThan_int64(Country.GetTotalNumRadicalsDecrease, '(int64)0'))), '\n$LOYALISTS_RADICALS_NO_CHANGE$')]"
 LOYALISTS_CHANGE_TOOLTIP: "#header $LOYALISTS$#![ConcatIfNeitherEmpty('\n', Country.GetLoyalistsIncreaseBreakdown)][ConcatIfNeitherEmpty('\n', Country.GetLoyalistsDecreaseBreakdown)][AddTextIf(And(Not(GreaterThan_int64(Country.GetTotalNumLoyalistsIncrease, '(int64)0')),Not(GreaterThan_int64(Country.GetTotalNumLoyalistsDecrease, '(int64)0'))), '\n$LOYALISTS_RADICALS_NO_CHANGE$')]"
 LOYALISTS_RADICALS_NO_CHANGE: "Keine kürzliche Veränderung"
 RADICALS_INCREASE_other: "#v #n +$AMOUNT|D$#!#! durch Ereignisse und andere Gründe"
 RADICALS_INCREASE_standard_of_living_reduction: "#v #n +$AMOUNT|D$#!#! durch einen Rückgang des [Concept('concept_sol', 'Lebensstandards')]"
 RADICALS_INCREASE_low_standard_of_living: "#v #n +$AMOUNT|D$#!#! weil der [concept_sol] unter dem erwarteten Minimum ist"
 RADICALS_INCREASE_political_movement_demands: "#v #n +$AMOUNT|D$#!#! durch [Concept('concept_political_movement', '$concept_political_movements$')] mit hohem [concept_activism]"
 RADICALS_INCREASE_discrimination: "#v #n +$AMOUNT|D$#!#! durch niedrige [concept_acceptance]"
 RADICALS_INCREASE_slavery: "#v #n +$AMOUNT|D$#!#! durch [concept_slavery]"
 RADICALS_INCREASE_conquest: "#v #n +$AMOUNT|D$#!#! von der Eroberung durch ein anderes [concept_country]"
 RADICALS_INCREASE_bankruptcy: "#v #n +$AMOUNT|D$#!#! durch [concept_bankruptcy]"
 RADICALS_INCREASE_lost_job: "#v #n +$AMOUNT|D$#!#! durch die Entlassung aus [Concept('concept_building', 'Gebäuden')]"
 RADICALS_INCREASE_lost_ownership_job: "#v #n +$AMOUNT|D$#!#! durch die Entlassung aus [Concept('concept_building', 'Gebäuden')], an denen sie [Concept('concept_ownership_share', '$concept_ownership_shares$')] hatten"
 RADICALS_INCREASE_building_downsized: "#v #n +$AMOUNT|D$#!#! durch das Verkleinern von [concept_state] [Concept('concept_building', 'Gebäuden')], an denen ihr [concept_profession] [Concept('concept_ownership_share', '$concept_ownership_shares$')] hatte"
 RADICALS_INCREASE_legitimacy: "#v #n +$AMOUNT|D$#!#! durch niedrige [concept_legitimacy]"
 RADICALS_INCREASE_government_reform: "#v #n +$AMOUNT|D$#!#! durch den kürzlichen Wechsel in der [concept_government]"
 RADICALS_INCREASE_nationalize: "#v #n +$AMOUNT|D$#!#! durch [Concept('concept_nationalize','$concept_nationalization$')] von [Concept('concept_building', '$concept_buildings$n')]"
 RADICALS_INCREASE_starvation: "#v #n +$AMOUNT|D$#!#! durch [concept_starvation]"
 RADICALS_DECREASE_other: "#v #p -$AMOUNT|D$#!#! durch gestorbene [Concept('concept_pop', '$concept_pops$')], Ereignisse und andere Gründe"
 RADICALS_DECREASE_standard_of_living_increase: "#v #p -$AMOUNT|D$#!#! durch einen Zuwachs des [Concept('concept_sol', 'Lebensstandards')]"
 RADICALS_DECREASE_political_movement_success: "#v #p -$AMOUNT|D$#!#! durch den Beschluss von [Concept('concept_law', '$concept_laws$n')], die von [Concept('concept_political_movement', '$concept_political_movements$')] unterstützt werden"
 RADICALS_DECREASE_legitimacy: "#v #p -$AMOUNT|D$#!#! durch hohe [concept_legitimacy]"
 RADICALS_DECREASE_external_movement: "#v #p -$AMOUNT|D$#!#! durch [concept_migration] aus dem Ausland"
 LOYALISTS_INCREASE_other: "#v #p +$AMOUNT|D$#!#! durch Ereignisse und andere Gründe"
 LOYALISTS_INCREASE_standard_of_living_increase: "#v #p +$AMOUNT|D$#!#! durch einen Zuwachs des [Concept('concept_sol', 'Lebensstandards')]"
 LOYALISTS_INCREASE_political_movement_success: "#v #p +$AMOUNT|D$#!#! durch den Beschluss von [Concept('concept_law', '$concept_laws$'n)], die von [Concept('concept_political_movement', '$concept_political_movements$')] unterstützt werden"
 LOYALISTS_INCREASE_legitimacy: "#v #p +$AMOUNT|D$#!#! durch hohe [concept_legitimacy]"
 LOYALISTS_DECREASE_other: "#v #n -$AMOUNT|D$#!#! durch gestorbene [Concept('concept_pop', '$concept_pops$')], Ereignisse und andere Gründe"
 LOYALISTS_DECREASE_standard_of_living_reduction: "#v #n -$AMOUNT|D$#!#! durch einen Rückgang des [Concept('concept_sol', 'Lebensstandards')]"
 LOYALISTS_DECREASE_low_standard_of_living: "#v #n -$AMOUNT|D$#!#! weil der [concept_sol] unter dem erwarteten Minimum ist"
 LOYALISTS_DECREASE_political_movement_demands: "#v #n -$AMOUNT|D$#!#! durch [Concept('concept_political_movement', '$concept_political_movements$')] mit hohem [concept_activism]"
 LOYALISTS_DECREASE_discrimination: "#v #n -$AMOUNT|D$#!#! durch niedrige [concept_acceptance]"
 LOYALISTS_DECREASE_slavery: "#v #n -$AMOUNT|D$#!#! durch [concept_slavery]"
 LOYALISTS_DECREASE_conquest: "#v #n -$AMOUNT|D$#!#! von der Eroberung durch ein anderes [concept_country]"
 LOYALISTS_DECREASE_bankruptcy: "#v #n -$AMOUNT|D$#!#! durch [concept_bankruptcy]"
 LOYALISTS_DECREASE_lost_job: "#v #n -$AMOUNT|D$#!#! durch den Verlust ihrer Arbeitsplätze"
 LOYALISTS_DECREASE_lost_ownership_job: "#v #n -$AMOUNT|D$#!#! durch den Verlust von Arbeitsplätzen in [Concept('concept_building', 'Gebäuden')], an denen sie [Concept('concept_ownership_share', '$concept_ownership_shares$')] hatten"
 LOYALISTS_DECREASE_building_downsized: "#v #n -$AMOUNT|D$#!#! durch das Verkleinern von [Concept('concept_building', 'Gebäuden')] des [Concept('concept_state', 'Staates')], an denen ihr [concept_profession] [Concept('concept_ownership_share', '$concept_ownership_shares$')] hatte"
 LOYALISTS_DECREASE_government_reform: "#v #n -$AMOUNT|D$#!#! durch [concept_government_reform]"
 LOYALISTS_DECREASE_legitimacy: "#v #n -$AMOUNT|D$#!#! durch niedrige [concept_legitimacy]"
 LOYALISTS_DECREASE_external_movement: "#v #n -$AMOUNT|D$#!#! durch [concept_migration] aus dem Ausland"
 LOYALISTS_IG_APPROVAL: "Auswirkungen von $LOYALISTS$ auf die Zustimmung von [Concept('concept_interest_group', '$concept_interest_groups$')]:\n[Country.GetIGApprovalFromLoyalistsBreakdown]"
 RADICALS_IG_APPROVAL: "Auswirkungen von [Concept('concept_radical', 'Radikalen')] auf die Zustimmung von [Concept('concept_interest_group', '$concept_interest_groups$')]:\n[Country.GetIGApprovalFromRadicalsBreakdown]"
 LOYALISTS_OR_RADICALS_IG_APPROVAL_ENTRY: "[InterestGroup.GetName]: #v $VALUE|=+$#! Zustimmung"
 INCORPORATED_POPULATION: "Inkorporierte Bevölkerung: [GetPlayer.GetIncorporatedPopulation|Kv]"
 UNINCORPORATED_POPULATION: "Nicht-inkorporierte Bevölkerung: [GetPlayer.GetPeopleAbroad|Kv]"
 POWER_EXPENSE_HEADER: "Eure Gesamtnutzung an #v $VAL|D+=$#! $EXPENSE_ICON$[$EXPENSE_CONCEPT$] basiert auf Folgendem:\n$BREAKDOWN$"
 DIPLOMATIC_PACT_EXPENSE_LIST_ITEM: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $COST|+=0$#!#!#! durch $PACT$ mit [Country.GetAltName('DAT')]"
 DIPLOMATIC_PACT_EXPENSE_LIST_ITEM_BREAKDOWN: "#header [Country.GetAltName('NOM')|U] – $PACT$#!\nDie Gesamtkosten von #variable $COST|0$#! basieren auf Folgendem:\n$BREAKDOWN$"
 DIPLOMATIC_PACT_BASE_COST: "Grundkosten: #variable $COST|0$#!"
 DIPLOMATIC_PACT_INFAMY_COST: "Unsere [concept_infamy]: $COST|=-0$"
 DIPLOMATIC_PACT_RANK_COST: "$OTHER$ $RANK_NAME$ Rang: $COST|=-0$"
 DIPLOMATIC_PACT_PRO_LOBBY_COST: "[concept_clout|U] durch pro-[COUNTRY.GetAdjectiveNoFormatting|l]e [Concept('concept_political_lobby', '$concept_political_lobbies_short$')]: $COST|=-0$"
 DIPLOMATIC_PACT_ANTI_LOBBY_COST: "[concept_clout|U] durch anti-[COUNTRY.GetAdjectiveNoFormatting|l]e [Concept('concept_political_lobby', '$concept_political_lobbies_short$')]: $COST|=-0$"
 COUNTRY_INFAMY_MAP_TOOLTIP: "[SelectLocalization(State.GetCountry.IsColonizable, GetPlayer.GetTensionTooltip(State.GetCountry), State.GetCountry.GetInfamyDesc)]"
 TREATY_ARTICLE_EXPENSE_LIST_ITEM_BREAKDOWN: "#header [Country.GetAltName('NOM')|U] – $ARTICLE$#!\nDie Gesamtkosten von #variable $COST|0$#! beruhen auf Folgendem:\n$BREAKDOWN$"
 TREATY_ARTICLE_EXPENSE_LIST_ITEM: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $COST|+=0$#!#!#! durch „$ARTICLE$“ mit [Country.GetAltName('DAT')]"
 BUREAUCRACY_EXPENSE_FROM_STATES_AND_POPULATION: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $COST|+=0$#!#! durch $POPULATION|Kv$ Bevölkerung in $NUM_INCORPORATED_STATES|v$ [Concept('concept_incorporated_state', 'Inkorporierten Staaten')]"
 BUREAUCRACY_EXPENSE_FROM_INSTITUTIONS: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $COST|+=0$#!#! durch [Concept('concept_institution', '$concept_institutions$')] in $NUM_INCORPORATED_STATES|v$ [Concept('concept_incorporated_state', 'Inkorporierten Staaten')]"
 BUREAUCRACY_EXPENSE_FROM_COMMANDERS: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $COST|+=0$#!#! durch $NUM_GENERALS|v$ [Concept('concept_general', '$concept_generals$')] und $NUM_ADMIRALS|v$ [Concept('concept_admiral', '$concept_admirals$')]"
 BUREAUCRACY_EXPENSE_FROM_BUILDINGS: "$COST|+=0$ durch $NUM_LEVELS|v$ [concept_nationally_owned]-[Concept('concept_building_level', '$concept_building_levels$')]"
 BUREAUCRACY_EXPENSE_PER_INSTITUTION: "$COST|+=0$ durch [INSTITUTION.GetName] ([INSTITUTION.GetInvestmentLevel|v])"
 BUREAUCRACY_EXPENSE_FROM_INSTITUTIONS_TOOLTIP: "#header @bur![concept_bureaucracy]-Kosten durch [Concept('concept_institution', '$concept_institutions$')]: $COST|+=0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 TOTAL_INSTITUTION_INVESTMENT_LEVELS: "Gesamt-Institutions-[Concept('concept_investment_level', '$concept_investment_levels$')]: #v $LEVELS|0$#!"
 BUREAUCRACY_EXPENSE_INSTITUTIONS: "$INCORPORATEDCOST$\n$INSTITUTION_LEVELS$\n$BREAKDOWN$"
 BUREAUCRACY_EXPENSE_PER_STATE: "$TOTAL_COST|+=0$ durch [State.GetName] ($STATE_COST|+=0$ Grundwert, $POPULATION_COST|+=0$ durch $POPULATION|Kv$ Bevölkerung)"
 BUREAUCRACY_EXPENSE_FROM_STATES_AND_POPULATION_TOOLTIP: "#header @bur![concept_bureaucracy]-Kosten der [Concept('concept_pop', '$concept_pops$')] in [Concept('concept_incorporated_state', 'Inkorporierten Staaten')]: $COST|+=0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 BUREAUCRACY_EXPENSE_PER_COMMANDER: "$COST|+=0$ durch [Character.GetCombatUnitsTypeIcon] [Character.GetFullName]"
 BUREAUCRACY_EXPENSE_FROM_COMMANDERS_TOOLTIP: "#header @bur![concept_bureaucracy]-Kosten durch [Concept('concept_commander', '$concept_commanders$')]: $COST|+=0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 BUREAUCRACY_EXPENSE_LIST_ITEM: "#tooltippable #tooltip:$TOOLTIP_TAG$ #variable $COST|+0$#!#!#! von [State.GetName]"
 INSTITUTION_GROWING: "Wachsend: [Institution.GetGrowthProgress|+1%]"
 INSTITUTION_SHRINKING: "Sinkend: [Institution.GetGrowthProgress|+1%]"
 INSTITUTION_INVESTMENT_LEVEL: "Investitionsstufe: [Institution.GetInvestmentLevel|v]"
 INSTITUTION_GROWTH_TOOLTIP: "Diese Institution wächst derzeit."
 INSTITUTION_SHRINKING_TOOLTIP: "Diese Institution schrumpft derzeit."
 SUPPRESSED_EXPENSE_LIST_ITEM: " #variable #N -$VAL|0$#!#! durch [Concept('concept_suppress','Unterdrücken')] der [POLITICAL_MOVEMENT.GetName]"
 BOLSTERED_EXPENSE_LIST_ITEM: " #variable #N -$VAL|0$#!#! durch [Concept('concept_bolster','$concept_bolstering$')|U] der [POLITICAL_MOVEMENT.GetName]"
 GOODS_EMBARGO_EXPENSE_LIST_ITEM: " #variable #N -$VAL|0$#!#! durch [Concept('concept_embargo', 'Embargo')] auf [GOODS.GetName]"
 GOODS_ENCOURAGE_CONSUMPTION_EXPENSE_LIST_ITEM: " #variable #N -$VAL|0$#!#! durch [Concept('concept_encourage_consumption', '$concept_encouraging_consumption$')] von [GOODS.GetName]"
 GOODS_DISCOURAGE_CONSUMPTION_EXPENSE_LIST_ITEM: " #variable #N -$VAL|0$#!#! durch [Concept('concept_discourage_consumption', '$concept_discouraging_consumption$')] von [GOODS.GetName]"
 GOODS_TAX_EXPENSE_LIST_ITEM: " #variable #N -$VAL|0$#!#! durch die Einnahme von [Concept('concept_consumption_tax', '$concept_consumption_taxes$')] auf [GOODS.GetName]"
 STATE_POP_GROWTH: "$concept_pop_growth$ #v [State.GetPopNetGrowth|K=+]#!"
 TOOLTIP_POP_GROWTH_COMMON: "Prognostiziertes jährliches [concept_pop_growth]: #variable $NETGROWTHRATE|+=%$#! (#variable $NETGROWTH|=*$#!)"
 TOOLTIP_COUNTRY_POP_GROWTH: "$TOOLTIP_POP_GROWTH_COMMON$"
 TOOLTIP_STATE_POP_GROWTH: "$TOOLTIP_POP_GROWTH_COMMON$"
 TOOLTIP_STATE_POP_MIGRATION: "Prognostizierte jährliche [concept_migration]: #variable $ANNUALNETGROWTHRATE|+=%$#! (#variable $ANNUALNETGROWTH|=*$#!)"
 HEADER_CULTURAL_COMMUNITIES: "[Concept('concept_cultural_community','$concept_cultural_communities$')]"
 MIGRATION_PULL_DESC: "[State.GetMigrationPullDesc]"
 STATE_MIGRATION_PULL_BREAKDOWN: "[State.GetMigrationPullDesc]"
 COUNTRY_MASS_MIGRATION_PULL_DESC: "[SelectLocalization(State.GetCountry.IsColonizable, State.GetMigrationPullDesc, State.GetCountry.GetMassMigrationAttractionDesc)]"
 MASS_MIGRATION_DESC_TOOLTIP: "#header [concept_mass_migration_pull]#!\n$TOOLTIP_DELIMITER$\nDie [Country.GetAdjective|l]e $concept_mass_migration_pull$ von #b $MASS_MIGRATION_ATTRACTION|1$#! beruht auf der durchschnittlichen [concept_migration_pull] der folgenden [Concept('concept_migration_target', '$concept_mass_migration_eligible$en')|l] $concept_states$:\n\n[COUNTRY.GetMassMigrationAttractionBreakdown]\n\n$concept_countries$ mit weniger als #b $PENALTY_THRESHOLD$#! $concept_mass_migration_eligible$en $concept_states$ erleiden einen zusätzlichen Malus auf ihre $concept_mass_migration_pull$.\n\nUnsere $concept_mass_migration_pull$ kann auch durch unsere derzeitigen [Concept('concept_law', '$concept_laws$')] in Sachen [GetLawGroup('lawgroup_migration').GetName] und [GetLawGroup('lawgroup_citizenship').GetName] beeinflusst werden, wenn sie die betreffende $concept_culture$ daran hindern, in unser $concept_country$ zu migrieren."
 MASS_MIGRATION_ZERO_PULL_DESC_TOOLTIP: "#header [concept_mass_migration_pull]#!\n$TOOLTIP_DELIMITER$\n[Country.GetName] hat keine attraktiven $concept_mass_migration_eligible$en $concept_states$ als Ziel für eine [Concept('concept_migration_target', '$concept_mass_migration$')]."
 STATE_MM_ENTRY_FORMAT: "[STATE.GetName]: [STATE.GetMigrationLabel]"
 MIGRATION_PULL_FROM_EMPTY_STATE: "$TAB$Entvölkerter Staat: #v $VAL|+=1$#!"
 MIGRATION_PULL_FROM_SOL: "$TAB$[concept_sol]: #v $VAL|+=1$#!"
 MIGRATION_PULL_FROM_UNEMPLOYMENT: "$TAB$[Concept('concept_unemployed', '$concept_unemployment$')]: #v $VAL|+=1$#!"
 MIGRATION_PULL_FROM_AVAILABLE_ARABLE_LAND_EMPLOYMENT: "$TAB$Beschäftigung auf ungenutztem [concept_arable_land]: #v $VAL|+=1$#!"
 MIGRATION_PULL_FROM_AVAILABLE_EMPLOYMENT: "$TAB$Verfügbare Beschäftigung: #v $VAL|+=1$#!"
 MIGRATION_PULL_FROM_COLONY: "$TAB$Ist eine Kolonie: #P #v ×$VAL|1$#!#!"
 TOOLTIP_STATE_MIGRATION_PULL_DESC: "#header [concept_migration_pull]#!\n$TOOLTIP_DELIMITER$\nDie #v [State.GetMigrationPull|1]#! [concept_migration_pull] von [State.GetName] basieren auf Folgendem:\n$DETAILS$\n[State.GetMigrationDetailsDesc]"
 LABEL_STATE_MIGRATION_ISOLATED: "[concept_isolated_state]"
 LABEL_STATE_MIGRATION_PULL_HIGH: "#tooltippable #tooltip:[STATE.GetTooltipTag],STATE_MIGRATION_PULL_BREAKDOWN #P #b hohe ($STATE_VALUE|1$)#!#!#!#!"
 LABEL_STATE_MIGRATION_PULL_MEDIUM: "#tooltippable #tooltip:[STATE.GetTooltipTag],STATE_MIGRATION_PULL_BREAKDOWN #V #b mittlere ($STATE_VALUE|1$)#!#!#!#!"
 LABEL_STATE_MIGRATION_PULL_LOW: "#tooltippable #tooltip:[STATE.GetTooltipTag],STATE_MIGRATION_PULL_BREAKDOWN #N #b niedrige ($STATE_VALUE|1$)#!#!#!#!"
 TOOLTIP_STATE_MIGRATION_ISOLATED: "[STATE.GetName] ist eine [concept_isolated_state] und hat daher keinerlei Migration"
 TOOLTIP_STATE_MIGRATION_PULL_HIGH: "„[STATE.GetName]“ hat eine $LABEL_STATE_MIGRATION_PULL_HIGH$ [concept_migration_pull] im Vergleich zum Durchschnitt ($MARKET_VALUE|1v$) auf dem Markt „[State.GetMarket.GetName]“ und kann daher Einwanderer aus anderen Staaten aufnehmen\n\nDie [concept_migration] kann durch unser derzeitiges [concept_law] in Sachen „[GetLawGroup('lawgroup_migration').GetName]“ beeinflusst werden"
 TOOLTIP_STATE_MIGRATION_PULL_MEDIUM: "[STATE.GetName] hat eine $LABEL_STATE_MIGRATION_PULL_MEDIUM$ [concept_migration_pull] im Vergleich zum Durchschnitt ($MARKET_VALUE|1v$) auf dem Markt „[State.GetMarket.GetName]“ und kann daher eine begrenzte Anzahl an Auswanderern zu anderen Staaten schicken\n\nDie $concept_migration$ kann durch unser derzeitiges [concept_law] „[GetLawGroup('lawgroup_migration').GetName]“ beeinflusst werden"
 TOOLTIP_STATE_MIGRATION_PULL_LOW: "[STATE.GetName] hat eine $LABEL_STATE_MIGRATION_PULL_LOW$ [concept_migration_pull] im Vergleich zum Durchschnitt ($MARKET_VALUE|1v$) auf dem Markt „[State.GetMarket.GetName]“ und kann daher Auswanderer in andere Staaten entsenden\n\nDie $concept_migration$ kann durch unser derzeitiges [concept_law] „[GetLawGroup('lawgroup_migration').GetName]“ beeinflusst werden"
 TOOLTIP_STATE_IMMIGRATION_STATES: "[STATE.GetName] erhielt letzte Woche #variable $AMOUNT|D+$#! Einwanderer aus $STATES_LIST$"
 TOOLTIP_STATE_EMIGRATION_STATES: "[STATE.GetName] schickte letzte Woche #variable $AMOUNT|D-$#! Auswanderer nach $STATES_LIST$"
 TOOLTIP_STATE_MASS_MIGRATION_TARGET: "„[STATE.GetName]“ ist das [Concept('concept_migration_target', '$concept_mass_migration_target$')] der [CULTURE.GetName|l]en Kultur und wird möglicherweise eine große Anzahl von Migranten aufnehmen"
 TOOLTIP_STATE_MASS_MIGRATION_TARGET_ADJACENCY: "„[STATE.GetName]“ grenzt an ein $concept_mass_migration_target$ der [CULTURE.GetName|l]en Kultur an und wird möglicherweise eine große Anzahl von Migranten aufnehmen"
 TOOLTIP_STATE_ELIGIBLE_MASS_MIGRATION: "@green_checkmark! „[STATE.GetName]“ ist #b zulässig#! als [Concept('concept_migration_target', '$concept_mass_migration_target$')]."
 TOOLTIP_STATE_NOT_ELIGIBLE_MASS_MIGRATION: "@red_cross! „[STATE.GetName]“ ist #b nicht zulässig#! als [Concept('concept_migration_target', '$concept_mass_migration_target$')]."
 SOCIETY_OVERVIEW: "Gesellschaft"
 COUNTRY_INFO: "Information"
 DIPLOMATIC_ACTIONS: "Aktionen"
 NATION_FORMATION: "Nationsgründung"
 RELEASE_SUBJECT: "Klientelland entlassen"
 ACCEPTANCE_STATUSES: "Status"
 ACCEPTANCE_CULTURES: "Kulturen"
 ACCEPTANCE_RELIGIONS: "Religionen"
 ACCEPTANCE_CLASSES: "Klassen"
 NO_SOCIAL_HIERARCHY: "Keine Sonder-[concept_social_hierarchy]"
 DEFAULT_SOCIAL_HIERARCHY_EXTRA_DESC: "[Concept('concept_pop', '$concept_pops$')] werden einer [concept_social_class] auf Grundlage ihres [Concept('concept_profession', 'Berufs')] zugewiesen"
 EXILE_POOL: "Exilfonds"
 EXILE_HOME_COUNTRY: "[SelectLocalization(Character.GetHomeCountry.IsValid, 'EXILE_HOME_COUNTRY_EXISTS', 'EXILE_HOME_COUNTRY_NOT_EXISTS')]"
 EXILE_HOME_COUNTRY_EXISTS: "Heimatland: [Character.GetHomeCountry.GetName]"
 EXILE_HOME_COUNTRY_NOT_EXISTS: "Heimatland: #tooltippable #tooltip:COUNTRY_DOES_NOT_EXIST_TOOLTIP [Character.GetHomeCountryDefinition.GetName]#!#!"
 FORM_NATION_STATE_REGION_CONTROL_DESC: "#header [Country.GetAdjective]e Kontrolle über [STATE_REGION.GetName]#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 FORM_NATION_STATE_CONTROL_REASON_OWNERSHIP: "@green_checkmark! [State.GetName]: [Country.GetAltName('NOM')|U] besitzt den [concept_state]"
 FORM_NATION_STATE_CONTROL_REASON_CANDIDATE_SUPPORT: "@green_checkmark! [State.GetName]: [State.GetOwner.GetAltName('NOM')] unterstützt [Country.GetAltName('AKK')] als [concept_unification_candidate]"
 FORM_NATION_STATE_CONTROL_REASON_SUBJECT: "@green_checkmark! [State.GetName]: [State.GetOwner.GetAltName('NOM')] ist ein nicht-autonomes [concept_subject] ($SUBJECT_TYPE$) [Country.GetAltName('VON')]"
 FORM_NATION_STATE_NO_CONTROL_REASON_AUTONOMOUS_SUBJECT: "@red_cross! [State.GetName]: [State.GetOwner.GetAltName('NOM')] ist zu autonom als [concept_subject] ($SUBJECT_TYPE$), um als [Country.GetAltName('VON')] kontrolliert zu gelten"
 FORM_NATION_STATE_NO_CONTROL_REASON_GENERIC: "@red_cross! [State.GetName]: [Country.GetAltName('NOM')] übt keine Kontrolle über [State.GetOwner.GetAltName('AKK')] aus"
 PLAYER_CULTURE: "[GetPlayer.GetAltNameNoFormatting('IN')|U]"
 GLOBAL_CULTURE: "Global"
 CULTURE_ACCEPTANCE_STATUS_DISTRIBUTION_LABEL: "[concept_acceptance_status] der [Culture.GetNameNoFormatting|l]en [Concept('concept_pop','$concept_population$')] [GetPlayer.GetAltNameNoFormatting('IN')]"
 CULTURE_ACCEPTANCE_STATUS_DISTRIBUTION_LABEL_TT: "[concept_acceptance_status] der [Culture.GetNameNoFormatting|l]en [Concept('concept_pop','$concept_population$')]:"
 RELIGION_ACCEPTANCE_STATUS_DISTRIBUTION_LABEL: "[concept_acceptance_status] der [Religion.GetNameNoFormatting|l]en [Concept('concept_pop','$concept_population$')] [GetPlayer.GetAltNameNoFormatting('IN')]"
 RELIGION_ACCEPTANCE_STATUS_DISTRIBUTION_LABEL_TT: "[concept_acceptance_status] der [Religion.GetNameNoFormatting|l]en [Concept('concept_pop','$concept_population$')]:"
 HOMELANDS_HEADER: "Heimatländer ([GetDataModelSize(Culture.AccessHomelands)])"
 MUSIC_PLAYER_VOLUME_LABEL_V3: "$MUSIC_PLAYER_VOLUME_LABEL$:"
 SETTING_MUSIC_DENSITY_V3: "$SETTING_MUSIC_DENSITY$:"
 MUSIC_PLAYER_PLAY: "Spielen"
 MUSIC_PLAYER_PAUSE: "Pause"
 MUSIC_PLAYER_HEADER: "Musikplayer"
 MUSIC_PLAYER_PLAY_TRACK: "[SelectLocalization(MusicTrack.IsPlaying, 'MUSIC_PLAYER_IS_PLAYING_TRACK', 'MUSIC_PLAYER_CLICK_TO_PLAY_TRACK')]"
 MUSIC_PLAYER_CLICK_TO_PLAY_TRACK: "Klicken, um #v [MusicTrack.GetName]#! jetzt zu spielen"
 MUSIC_PLAYER_IS_PLAYING_TRACK: "#v [MusicTrack.GetName]#! wird gespielt!"
 MUSIC_PLAYER_ENABLE_TRACK: "Aktivieren/Deaktivieren, um #v [MusicTrack.GetName]#! der Musik-Warteschlange hinzuzufügen"
 MUSIC_PLAYER_ENABLE_CATEGORY: "Aktivieren/Deaktivieren für alle Musiktitel der Kategorie #v [MusicPlayerCategory.GetName]#!"
 MUSIC_PLAYER_SKIP_TO_NEXT_TRACK: "Zum nächsten Titel springen"
 MUSIC_PLAYER_SELECT_CATEGORY: "Auswählen, um die Musiktitel in #v [MusicPlayerCategory.GetName]#! anzuzeigen"
 MUSIC_PLAYER_CATEGORY_ENABLED_DISABLED_TEXT: "[MusicPlayerCategory.GetName] [SelectLocalization(MusicPlayerCategory.IsEnabled, 'MUSIC_PLAYER_CATEGORY_ENABLED_V3', 'MUSIC_PLAYER_CATEGORY_DISABLED_V3')]"
 MUSIC_PLAYER_CATEGORY_ENABLED_V3: "#g Aktiviert#!"
 MUSIC_PLAYER_CATEGORY_DISABLED_V3: "#r Deaktiviert#!"
 MUSIC_PLAYER_DENSITY: "#header Musikdichte#!\nSteuert das Verhältnis von Liedern, Stille und atmosphärischen Musikabschnitten\n$TOOLTIP_DELIMITER$\n#b Intensiv#! – Hauptsächlich vollständige Lieder, die nacheinander abgespielt werden, ähnlich einem Radiosender\n\n#b Ausgewogen#! – Die ideale Mischung aus Liedern, Stille und atmosphärischen Musikabschnitten\n\n#b Entspannt#! – Hauptsächlich atmosphärische Musikabschnitte, die eine entspannte Umgebung für ein mehrstündiges Spielerlebnis bieten"
 AND_SPACED: " und "
 COMMA_SPACED: ", "
 MAP_INFO: "#header Karte#!\n$TOOLTIP_DELIMITER$\n#bold „Tab“#! drücken und halten, um vollständig herauszuzoomen. Das Loslassen von „Tab“ führt zurück zur vorherigen Zoomstufe."
 MAP_INFO_MAP_MODE_LOCKED: "$MAP_INFO$\n\n#instruction Klicken, um die Sperre des Kartenmodus aufzuheben.#!"
 LOCATION_FINDER: "#header Ort suchen#!"
 ZOOM_TO_BUILDING_STATE: "Zoom auf [Building.AccessState.GetName][AddLocalizationIf( Building.AccessState.IsZoomingToCapital, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_EVENT_WINDOW_STATE: "Zoom auf [EventWindow.GetEvent.GetState.GetName][AddLocalizationIf( EventWindow.GetEvent.GetState.IsZoomingToCapital, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_COUNTRY_CAPITAL: "Zoom auf [Country.AccessCapital.GetName][AddLocalizationIf( Country.AccessCapital.IsZoomingToCapital, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_MARKET_CAPITAL: "Zoom auf [Market.AccessMarketCapital.GetName] ([concept_market_capital])[AddLocalizationIf( Market.AccessMarketCapital.IsZoomingToCapital, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_STATE: "#header Auf „[State.GetName] zoomen#!\n#instruction Rechtsklick#!, um Zoommodus auf #b Nah#! zu ändern\n\n"
 ZOOM_CLOSE_TO_STATE: "#header Nah auf „[State.GetName]“ zoomen#!\n#instruction Rechtsklick#!, um Zoommodus auf #b Fern#! zu ändern\n\n"
 ZOOM_TO_BATTLE: "Zoom auf [Battle.GetName][AddLocalizationIf(Battle.IsZoomingToMapMarkerPosition, 'ZOOM_TO_DISABLED')]"
 ZOOM_TO_DISABLED: "\n@red_cross! Bereits dort"
 ZOOM_TO_ORDERTARGET: "Auf Ort zoomen[AddLocalizationIf( Character.IsZoomingToOrderTarget, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_HQ: "Auf Ort zoomen[AddLocalizationIf( Hq.IsZoomingToHQ, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_FRONT: "Auf Ort zoomen[AddLocalizationIf(Front.IsZoomingToFront, 'ZOOM_TO_DISABLED')]"
 ZOOM_TO_STATE_NO_REASON: "Auf [State.GetName] zoomen"
 ZOOM_TO_COUNTRY_CAPITAL_NO_REASON: "Auf [Country.AccessCapital.GetName] zoomen"
 ZOOM_TO_NAVAL_INVASION: "Zoom auf [Invasion.GetName]"
 ZOOM_TO_LOCATION: "Ort zentrieren"
 ZOOM_TO_POWER_BLOC: "Zoom auf [concept_capital_state] von [concept_power_bloc_leader]"
 RIGHT_CLICK_TO_ZOOM_TO_STATE_REGION: "#i Rechtsklicken, um auf „[StateRegion.GetName]“ zu schwenken#![AddLocalizationIf( StateRegion.GetLargestStateInRegion.IsZoomingToCapital, 'ZOOM_TO_DISABLED')]"
 NAVAL_INVASION_MARKER_TOOLTIP: "#header [Invasion.GetName]#!\n[Invasion.GetInvaderCountry.GetAltName('NOM')|U] invadiert [Invasion.GetInvadedCountry.GetAltName('AKK')]\n$TOOLTIP_DELIMITER$\n$NAVAL_INVASION_FAIL_CONDITIONS$\n\n[Invasion.GetInvaderCountry.GetAltName('NOM')|U]:\n$TAB$[SelectLocalization(EqualTo_int32(Invasion.GetNumInvadingFleetsUnits, '(int32)0'), 'NO_FLEETS', 'NAVAL_INVASION_NUMBER_OF_UNITS_IN_INVADING_FLEETS')]\n$TAB$[SelectLocalization(EqualTo_int32(Invasion.GetNumInvadingArmiesUnits, '(int32)0'), 'NO_ARMIES', 'NAVAL_INVASION_NUMBER_OF_UNITS_IN_INVADING_ARMIES')]\n\n[Invasion.GetInvadedCountry.GetAltName('NOM')|U]:\n$TAB$[SelectLocalization(EqualTo_int32(Invasion.GetNumDefendingFleetsUnits, '(int32)0'), 'NO_FLEETS', 'NAVAL_INVASION_NUMBER_OF_UNITS_IN_DEFENDING_FLEETS')]\n$TAB$[SelectLocalization(EqualTo_int32(Invasion.GetNumDefendingArmiesUnits, '(int32)0'), 'NO_ARMIES', 'NAVAL_INVASION_NUMBER_OF_UNITS_IN_DEFENDING_ARMIES')]\n\n[Invasion.GetSeaNodeName|U]:\n$TAB$$INVASION_SEA_REGION_STATUS$\n\n[Invasion.GetTargetState.GetName|U]:\n$TAB$$NAVAL_INVASION_LANDING_PROGRESS$"
 LAND_INVASION_MARKER_TOOLTIP: "#header [Invasion.GetName]#!\n[Invasion.GetInvaderCountry.GetAltName('NOM')|U] invadiert [Invasion.GetInvadedCountry.GetAltName('AKK')]\n$TOOLTIP_DELIMITER$\n$LAND_INVASION_FAIL_CONDITIONS$\n\n[Invasion.GetInvaderCountry.GetAltName('NOM')|U]:\n$TAB$[SelectLocalization(EqualTo_int32(Invasion.GetNumInvadingArmiesUnits, '(int32)0'), 'NO_ARMIES', 'NAVAL_INVASION_NUMBER_OF_UNITS_IN_INVADING_ARMIES')]\n\n[Invasion.GetInvadedCountry.GetAltName('NOM')|U]:\n$TAB$[SelectLocalization(EqualTo_int32(Invasion.GetNumDefendingArmiesUnits, '(int32)0'), 'NO_ARMIES', 'NAVAL_INVASION_NUMBER_OF_UNITS_IN_DEFENDING_ARMIES')]\n\n[Invasion.GetTargetState.GetName|U]:\n$TAB$$LAND_INVASION_PROGRESS$"
 INVASION_MARKER_TOOLTIP: "[SelectLocalization(Invasion.IsLandInvasion, 'LAND_INVASION_MARKER_TOOLTIP', 'NAVAL_INVASION_MARKER_TOOLTIP')]"
 NAVAL_INVASION_FAIL_CONDITIONS: "Diese Marineinvasion wird scheitern, falls:\n$TAB$@simple_box! [Invasion.GetFleet.GetName] [concept_admiral_defeated|l] wird und \n$TAB$@simple_box! [Invasion.GetInvaderCountry.GetAltName('NOM')] #v [Invasion.GetMaxLandBattleDefeatsAtZeroOccupation]#! Land-[SelectLocalization(EqualTo_int32(Invasion.GetMaxLandBattleDefeatsAtZeroOccupation, '(int32)1'), 'concept_battle', 'concept_battles')] mit #v 0 %#! [concept_landing_progress] verliert (#v [Invasion.GetNumLandBattleDefeatsAtZeroOccupation]/[Invasion.GetMaxLandBattleDefeatsAtZeroOccupation]#! derzeit verloren)"
 NAVAL_INVASION_FAIL_CONDITIONS_SHORT: "Diese Marineinvasion wird scheitern, falls:\n$TAB$@simple_box! [Invasion.GetFleet.GetName] [concept_admiral_defeated|l] wird und \n$TAB$@simple_box! [Invasion.GetInvaderCountry.GetAltName('NOM')] #v [Invasion.GetMaxLandBattleDefeatsAtZeroOccupation]#! Land-[SelectLocalization(EqualTo_int32(Invasion.GetMaxLandBattleDefeatsAtZeroOccupation, '(int32)1'), 'concept_battle', 'concept_battles')] mit #v 0 %#! [concept_landing_progress] verliert"
 LAND_INVASION_FAIL_CONDITIONS_SHORT: "Diese $concept_invasion$ scheitert, falls:\n$TAB$@simple_box! [Invasion.GetInvaderCountry.GetAltName('NOM')|U] #v [Invasion.GetMaxLandBattleDefeatsAtZeroOccupation]#! [SelectLocalization(EqualTo_int32(Invasion.GetMaxLandBattleDefeatsAtZeroOccupation, '(int32)1'), 'concept_battle', 'concept_battles')] mit #v 0 %#! [concept_occupation] verliert"
 LAND_INVASION_FAIL_CONDITIONS: "$LAND_INVASION_FAIL_CONDITIONS_SHORT$ (derzeit #v [Invasion.GetNumLandBattleDefeatsAtZeroOccupation]/[Invasion.GetMaxLandBattleDefeatsAtZeroOccupation]#! verloren)"
 INVASION_FAIL_CONDITIONS_SHORT: "[SelectLocalization(Invasion.IsLandInvasion, 'LAND_INVASION_FAIL_CONDITIONS_SHORT', 'NAVAL_INVASION_FAIL_CONDITIONS_SHORT')]"
 NO_FLEETS: "@flotillas! #red 0#!"
 NO_ARMIES: "@battalions! #red 0#!"
 SEA_NODE_NAME: "[concept_sea_node] in „$STRATEGIC_REGION_NAME$“"
 LANDING_PROGRESS: "Anlandefortschritt"
 NAVAL_INVADING: "Marineinvasion durchführend"
 INVADER_NAME: "[Invasion.GetInvaderCountry.GetAltNameNoFlag('NOM')|U][ConcatIfNeitherEmpty(' ', AddLocalizationIf(Invasion.GetInvaderCountry.IsLocalPlayer, 'YOU'))]"
 DEFENDER_NAME: "[ConcatIfNeitherEmpty(AddLocalizationIf(Invasion.GetInvadedCountry.IsLocalPlayer, 'YOU'), ' ')][Invasion.GetInvadedCountry.GetAltNameNoFlag('NOM')|U]"
 LAND_INVASION_PROGRESS: "[Invasion.GetProgress|v%0] [Invasion.GetInvaderCountry.GetAdjective|l]e [concept_occupation]"
 LAND_INVASION_PROGRESS_BAR_TOOLTIP: "Invasionsfortschritt [Invasion.GetProgress|v%0]"
 NAVAL_INVASION_LANDING_PROGRESS: "[SelectLocalization(Invasion.IsFightingNavalBattle, 'NAVAL_INVASION_LANDING_PROGRESS_STALLED', 'NAVAL_INVASION_LANDING_PROGRESS_ONGOING')]"
 NAVAL_INVASION_LANDING_PROGRESS_ONGOING: "[Invasion.GetLandingProgress|v%0] [Invasion.GetInvaderCountry.GetAdjective|l]er [concept_landing_progress]"
 NAVAL_INVASION_LANDING_PROGRESS_STALLED: "[Invasion.GetInvaderCountry.GetAdjective|U]er [concept_landing_progress] ist aufgrund feindlicher [Concept('concept_fleet', '$concept_fleets$')] ins Stocken geraten!"
 NAVAL_INVASION_LANDING_PROGRESS_BAR_TOOLTIP: "Landefortschritt [Invasion.GetLandingProgress|v%0]"
 INVASION_STATUS_CONCLUDED: "Diese $concept_invasion$ ist abgeschlossen."
 INVASION_SEA_REGION_STATUS: "[SelectLocalization(Invasion.HasBlockingEnemyFleetOnSeaNode, 'INVASION_SEA_REGION_CONTESTED', 'INVASION_SEA_REGION_CONTROLLED')]"
 INVASION_SEA_REGION_STATUS_TOOLTIP: "[SelectLocalization(Invasion.HasBlockingEnemyFleetOnSeaNode, 'INVASION_SEA_REGION_CONTESTED_TOOLTIP', 'INVASION_SEA_REGION_CONTROLLED_TOOLTIP')]"
 INVASION_SEA_REGION_CONTROLLED: "Kontrolliert [Invasion.GetInvaderCountry.GetAltNameNoFlag('VON')|U]"
 INVASION_SEA_REGION_CONTROLLED_TOOLTIP: "Es gibt keine [Concept('concept_fleet', '$concept_fleets$')], die „[Invasion.GetSeaNodeName]“ verteidigen"
 INVASION_SEA_REGION_CONTESTED: "Umkämpft"
 INVASION_SEA_REGION_CONTESTED_TOOLTIP: "Diese [concept_naval_invasion] wird nicht vorankommen, solange es verteidigende Flotten in „[Invasion.GetSeaNodeName]“ gibt."
 INVADER: "Invasor"
 NAVAL_INVASION_NUMBER_OF_INVADING_FLEETS: "[Invasion.GetNumInvadingFleets|v] [Invasion.GetInvaderCountry.GetAdjective|l]e [Concept('concept_fleet','$concept_fleets$')]"
 NAVAL_INVASION_NUMBER_OF_DEFENDING_FLEETS: "[Invasion.GetNumBlockingFleets|v] [Invasion.GetInvadedCountry.GetAdjective|l]e [Concept('concept_fleet','$concept_fleets$')]"
 NAVAL_INVASION_NUMBER_OF_NON_BLOCKING_FLEETS: "[Invasion.GetNumNonBlockingFleets|v] zu schwache [SelectLocalization(EqualTo_int32(Invasion.GetNumNonBlockingFleets, '(int32)1'), 'FLEET', 'FLEETS')]"
 NAVAL_INVASION_NUMBER_OF_UNITS_IN_INVADING_FLEETS: "@flotillas! [Invasion.GetNumInvadingFleetsUnits|v]"
 NAVAL_INVASION_NUMBER_OF_UNITS_IN_DEFENDING_FLEETS: "@flotillas! [Invasion.GetNumBlockingFleetsUnits|v]"
 NAVAL_INVASION_NUMBER_OF_UNITS_IN_NON_BLOCKING_FLEETS: "@flotillas! [Invasion.GetNumNonBlockingFleetsUnits|v]"
 NAVAL_INVASION_NUMBER_OF_INVADING_ARMIES: "[Invasion.GetNumInvadingArmies|v] [Invasion.GetInvadedCountry.GetAdjective|l]e [Concept('concept_army','$concept_armies$')]"
 NAVAL_INVASION_NUMBER_OF_DEFENDING_ARMIES: "[Invasion.GetNumDefendingArmies|v] [Invasion.GetInvadedCountry.GetAdjective|l]e [Concept('concept_army','$concept_armies$')]"
 NAVAL_INVASION_NUMBER_OF_UNITS_IN_INVADING_ARMIES: "@battalions! [Invasion.GetNumInvadingArmiesUnits|v]"
 NAVAL_INVASION_NUMBER_OF_UNITS_IN_DEFENDING_ARMIES: "@battalions! [Invasion.GetNumDefendingArmiesUnits|v]"
 NAVAL_INVASION_INVADING_FLEETS_TOOLTIP: "#header Invadierende [Invasion.GetInvaderCountry.GetAdjective|l]e [Concept('concept_fleet','$concept_fleets$')]#!\nDerzeit: [Invasion.GetNumInvadingFleets|v] [SelectLocalization(EqualTo_int32(Invasion.GetNumInvadingFleets, '(int32)1'), 'FLEET', 'FLEETS')]\n$TOOLTIP_DELIMITER$\n[Invasion.GetInvadingFleetsTooltipBreakdown]"
 NAVAL_INVASION_BLOCKING_FLEETS_TOOLTIP: "#header Verteidigende [Invasion.GetInvadedCountry.GetAdjective|l]e [Concept('concept_fleet','$concept_fleets$')]#!\nDerzeit: [Invasion.GetNumBlockingFleets|v] [SelectLocalization(EqualTo_int32(Invasion.GetNumBlockingFleets, '(int32)1'), 'FLEET', 'FLEETS')]"
 NAVAL_INVASION_NON_BLOCKING_FLEETS_TOOLTIP: "#header [Concept('concept_fleet','$concept_fleets$')] zu schwach zum Verteidigen#!\nDerzeit: [Invasion.GetNumNonBlockingFleets|v] [SelectLocalization(EqualTo_int32(Invasion.GetNumNonBlockingFleets, '(int32)1'), 'FLEET', 'FLEETS')]\n$TOOLTIP_DELIMITER$\n[SelectLocalization(EqualTo_int32(Invasion.GetNumNonBlockingFleets, '(int32)1'), 'THIS_FLEET_HAS', 'THESE_FLEETS_HAVE')] eine [concept_power_projection] von weniger als [GetDefine('NWar', 'NAVAL_INVASION_MIN_POWER_PROJECTION_RATIO_TO_BLOCK_LANDING')|%v0] der [Invasion.GetNumInvadingFleets|v] invadierenden [Invasion.GetInvaderCountry.GetAdjective|l]en [SelectLocalization(EqualTo_int32(Invasion.GetNumInvadingFleets, '(int32)1'), 'FLEET', 'FLEETS')]"
 NAVAL_INVASION_INVADING_ARMIES_TOOLTIP: "#header Invadierende [Concept('concept_army','$concept_armies$')] [Invasion.GetInvaderCountry.GetAltName('VON')]#!\nDerzeit: [Invasion.GetNumInvadingArmies|v] [Concept('concept_army', '$concept_armies$')]\n$TOOLTIP_DELIMITER$\n[Invasion.GetInvadingArmiesTooltipBreakdown]"
 NAVAL_INVASION_DEFENDING_ARMIES_TOOLTIP: "#header Invadierende [Concept('concept_army','$concept_armies$')] [Invasion.GetInvadedCountry.GetAltName('VON')]#!\nDerzeit: [Invasion.GetNumDefendingArmies|v] [Concept('concept_army', '$concept_armies$')]\n$TOOLTIP_DELIMITER$\n[Invasion.GetDefendingArmiesTooltipBreakdown]"
 FLEET_BREAKDOWN_FORMAT: "@flotillas! #tooltippable #tooltip:$UNIT_BREAKDOWN_TAG$ [MILITARY_FORMATION.GetNumCombatUnits|v]#!#! [MILITARY_FORMATION.GetName]"
 ARMY_BREAKDOWN_FORMAT: "@battalions! #tooltippable #tooltip:$UNIT_BREAKDOWN_TAG$ [MILITARY_FORMATION.GetNumCombatUnits|v]#!#! [MILITARY_FORMATION.GetName]"
 THESE_FLEETS_HAVE: "Diese $concept_fleets$ haben"
 THIS_FLEET_HAS: "Diese $concept_fleet$ hat"
 CANCEL_INVASION: "Invasion abbrechen"
 CANCEL_INVASION_TOOLTIP: "#header Diese [concept_invasion] abbrechen#![ConcatIfNeitherEmpty('\n', GetDesc(Invasion.Cancel))]"
 CANCEL_INVASION_CONFIRMATION: "Wird „[Invasion.GetName]\" abgebrochen, werden alle laufenden Land- und See-[Concept('concept_battle','$concept_battles$')] abgebrochen und all unsere [concept_armies] und [concept_fleets] kehren in ihr Heimat-[concept_hq] zurück.\nSämtlicher erzielter [concept_landing_progress] geht verloren.\n\nSind wir sicher?"
 INVASION_LOCKED_BY_BATTLE: "Alle [Concept('concept_battle', 'Schlachten')] in der [concept_invasion] werden abgebrochen"
 ADD_DEFENDING_FLEET_TO_NAVAL_INVASION: "[concept_fleet] #b entsenden#!"
 ADD_ADDITIONAL_DEFENDING_FLEETS_TO_NAVAL_INVASION: "Zusätzliche [Concept('concept_fleet','$concept_fleets$')] #b stationieren#!"
 ADD_DEFENDING_ARMY_TO_NAVAL_INVASION: "[concept_army] #b stationieren#!"
 ADD_ADDITIONAL_DEFENDING_ARMIES_TO_NAVAL_INVASION: "Zusätzliche [Concept('concept_army','$concept_armies$')] #b stationieren#!"
 ADD_DEFENDING_FLEET_TO_NAVAL_INVASION_TOOLTIP: "Eine [concept_fleet] auswählen, um sie nach „[Invasion.GetSeaNodeName]“ zu entsenden und diese #b Marineinvasion#! zu verteidigen"
 ADD_DEFENDING_ARMY_TO_NAVAL_INVASION_TOOLTIP: "Eine [concept_army] auswählen, um sie in „[Invasion.GetDefenderHQ.GetName]“ zu #b stationieren#!, um diese #b Marineinvasion#! zu verteidigen"
 ADD_DEFENDING_ARMY_TO_INVASION: "[concept_army] #b einsetzen#!"
 ADD_DEFENDING_ARMY_TO_INVASION_TOOLTIP: "Eine [concept_army] auswählen, um sie an der Front „[Invasion.GetFront.GetName]“ #b einzusetzen#!, um diese [concept_invasion] zu verteidigen"
 ADD_ADDITIONAL_DEFENDING_ARMY_TO_INVASION: "Zusätzliche [Concept('concept_army','$concept_armies$')] #b einsetzen#!"
 SELECT_FLEET_TO_SEND: "Eine [concept_fleet] zu „[Invasion.GetSeaNodeName]“ entsenden"
 SELECT_ARMY_TO_DEFEND_LAND_INVASION: "Eine [concept_army] an der Front „[Invasion.GetFront.GetName]“ einzusetzen"
 SELECT_ARMY_TO_DEFEND_NAVAL_INVASION: "Eine [concept_army] in „[Invasion.GetDefenderHQ.GetName]“ stationieren"
 SELECT_ARMY_TO_SEND: "[SelectLocalization(Invasion.IsLandInvasion, 'SELECT_ARMY_TO_DEFEND_LAND_INVASION', 'SELECT_ARMY_TO_DEFEND_NAVAL_INVASION')]"
 POLITICS: "Politik"
 BUTTON_POLITICS: "#header Politik#!\n$LAW_ENACTMENT_PROGRESS_TOPBAR$"
 BUTTON_POPULATION: "#header Bevölkerung#!"
 BUTTON_TRADE_OVERVIEW: "#header Märkte#!"
 BUTTON_SOCIETY_OVERVIEW: "#header Gesellschaft#!"
 BUTTON_BUDGET: "#header Etat#!"
 BUTTON_MILITARY: "#header Militär#!"
 BUTTON_TECHNOLOGY: "#header Technik#!\n[SelectLocalization(Technology.IsValid, 'RESEARCHING', 'NOT_RESEARCHING')]"
 UNLOCK_MAP_MODE: "Sperre des Kartenmodus aufheben"
 UNLOCK_MAP_MODE_TOOLTIP: "#header Sperre des Kartenmodus aufheben#!\nDer Kartenmodus [GetSelectedMapModeName] ist derzeit gesperrt."
 POWER_BLOC: "Machtblock"
 POWER_BLOC_SUBHEADER: "[SelectLocalization(PowerBlocPanel.IsPowerBlocSelected, 'POWER_BLOC_CONCEPT', 'IN_THE_WORLD')]"
 POWER_BLOC_CONCEPT: "[concept_power_bloc]"
 POWER_BLOC_LEADER_LABEL: "[Concept('concept_power_bloc_leader','$concept_power_bloc_leader_extra_short$')]: [PowerBloc.GetLeader.GetName]"
 COUNTRY_POWER_BLOC_POWER_STRUGGLE_STATUS: "@warning! [Concept('concept_power_struggle','$concept_power_struggling$')|U] ([Country.GetCurrentPowerStruggleMonth]/[Country.GetMaxPowerStruggleMonth] Monaten)"
 COUNTRY_POWER_BLOC_POWER_STRUGGLE_STATUS_CENTERED: "[Concept('concept_power_struggle','$concept_power_struggling$')|U]\n([Country.GetCurrentPowerStruggleMonth]/[Country.GetMaxPowerStruggleMonth] Monaten)"
 IN_THE_WORLD: "In der Welt"
 YOUR_LEVERAGE: "Euer [concept_power_bloc_leverage]"
 NO_POWER_BLOC_TOOLTIP: "[Country.GetAltName('NOM')|U] ist kein [Concept('concept_power_bloc_member','$concept_power_bloc_member_extra_short$')] eines beliebigen [Concept('concept_power_bloc', 'Machtblocks')]"
 PLAYER_IS_NOT_IN_A_POWER_BLOC: "Sie sind nicht Teil eines [Concept('concept_power_bloc', 'Machtblocks')], der [concept_power_bloc_leverage] über [Country.GetAltName('AKK')] hat"
 COUNTRY_PANEL_LEVERAGE_LABEL: "Unbeteiligt"
 COUNTRY_PANEL_LEVERAGE_VALUE: "[SelectLocalization(GetPlayer.IsInPowerBloc, 'COUNTRY_PANEL_LEVERAGE_VALUE_PLAYER_POWER_BLOC', 'COUNTRY_PANEL_LEVERAGE_VALUE_NO_POWER_BLOC')]"
 COUNTRY_PANEL_LEVERAGE_VALUE_PLAYER_POWER_BLOC: "#v [GetPlayer.GetPowerBloc.GetLeverageAdvantage(Country.Self)|0=+]#!"
 COUNTRY_PANEL_LEVERAGE_VALUE_NO_POWER_BLOC: "#title $NONE$#!"
 POWER_BLOC_NUMBER_OF_COUNTRIES_TOOLTIP: "#header [PowerBloc.GetNumMembers] [Concept('concept_country','$concept_countries$')] in „[PowerBloc.GetName]“#!\n$TOOLTIP_DELIMITER$\n[PowerBloc.GetMembersBreakdown]"
 POWER_BLOC_GDP_TOOLTIP: "#header Gesamt-[Concept('concept_gdp', '$concept_gdp_short$')] in „[PowerBloc.GetName]“#!\n@money!#v [PowerBloc.GetGdp|D]#! derzeit\n$TOOLTIP_DELIMITER$\n#title [Concept('concept_gdp', '$concept_gdp_short$')] pro [concept_country]:#!\n[PowerBloc.GetGdpDesc]"
 POWER_BLOC_GDP_ENTRY: "$TAB$@money!$VAL|Dv$ – [Country.GetAltName('NOM')|U]"
 POWER_BLOC_INVITABLE_COUNTRIES_TOOLTIP: "#v [PowerBlocPanel.GetNumInvitableCountries|+]#! einladbare [Concept('concept_country', '$concept_countries$')]"
 ANSWER_INVITATION: "Die Einladung annehmen"
 ANSWER_INVITATION_TOOLTIP: "Klicken, um Möglichkeiten anzuzeigen"
 REQUEST_TO_JOIN: "Anfrage zum Beitritt"
 REQUEST_SENT: "Anfrage abgeschickt, Antwort steht aus"
 POWER_BLOC_REQUEST_TO_JOIN_TOOLTIP: "#header Anfrage zum Beitritt zu „[PowerBloc.GetName]“#![ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', GetDesc(PowerBloc.RequestToJoin))]"
 POWER_BLOC_TOOLTIP: "#header $NAME$#!\nAnführer: $LEADER_NAME$"
 POWER_BLOC_MEMBERS_BREAKDOWN_ENTRY_LEADER: "[Country.GetAltName('NOM')|U] – [Concept('concept_power_bloc_leader','$concept_power_bloc_leader_extra_short$')]\n\n"
 POWER_BLOC_MEMBERS_BREAKDOWN_ENTRY: "[Country.GetAltName('NOM')|U]"
 POWER_BLOC_MEMBER_COUNTRY_NAME: "[Country.GetAltNameNoFlag('NOM')|U] [AddLocalizationIf(Country.IsLocalPlayer, 'YOU')]"
 POWER_BLOC_KICK_MEMBER: "Aus [concept_power_bloc] entfernen"
 POWER_BLOC_KICK_MEMBER_TOOLTIP: "#header [Country.GetAltName('AKK')|U] aus „[Country.GetPowerBloc.GetName]“ entfernen#![ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', GetDesc(Country.GetPowerBloc.Kick(Country.Self)))]"
 POWER_BLOC_ARMY_NUMBERS_TOOLTIP: "#header „[PowerBloc.GetName|U]“-[Concept('concept_battalion', '$concept_battalions$')]#!\nDerzeit: @battalions! [PowerBloc.GetBattalions|v]\n$TOOLTIP_DELIMITER$\n[PowerBloc.GetBattalionsBreakdown]"
 POWER_BLOC_NAVY_NUMBERS_TOOLTIP: "#header „[PowerBloc.GetName|U]“-[Concept('concept_flotilla','$concept_flotillas$')]#!\nDerzeit: @flotillas! [PowerBloc.GetFlotillas|v]\n$TOOLTIP_DELIMITER$\n[PowerBloc.GetFlotillasBreakdown]"
 POWER_BLOC_BATTALIONS_BREAKDOWN_ENTRY: "@battalions! #tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_ARMY_OVERVIEW_TOOLTIP $TOTAL|v$#!#! – [Country.GetAltName('NOM')|U] ([Country.GetBattalionsRanking])"
 POWER_BLOC_FLOTILLAS_BREAKDOWN_ENTRY: "@flotillas! #tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP $TOTAL|v$#!#! – [Country.GetAltName('NOM')|U] ([Country.GetFlotillasRanking])"
 RANK_FORMATTING: "#v ##$RANK$#!"
 POWER_BLOC_RANK_FORMATTED: "#tooltippable #tooltip:[Country.GetPowerBloc.GetTooltipTag],DATA_POWER_BLOC_RANK_TOOLTIP [Country.GetPowerBloc.GetRankFormatted]#!#!"
 COMPANY_PANEL_HEADER: "[Company.GetNameNoIcon]"
 COMPANY_PANEL_SUBHEADER: "[concept_company] [Company.GetCountry.GetAltName('IN')]"
 COMPANY_TAB_OVERVIEW: "Übersicht"
 COMPANY_TAB_ASSETS: "Guthaben"
 COMPANY_TAB_STATISTICS: "Statistiken"
 COMPANY_COLONY_DAYS_LEFT: "[AddTextIf(GreaterThan_int32(GetPlayer.GetTensionWith(State.GetNextColonyProvince.GetState.GetOwner), '(int32)50'), '@warning! ')]#bold [State.GetColonyProgressAsDays]#! Tage"
 REGIONAL_HQS_AND_COLONIES: "$concept_regional_company_hqs_short$ &-$concept_colonies$"
 COMPANY_COUNTRIES_HEADER: "[Concept('concept_country','$concept_countries$')] durch ehemalige [Concept('concept_colony', '$concept_colonies$')]"
 COMPANY_COLONIES_HEADER: "Aktive [Concept('concept_colony', '$concept_colonies$')]"
 COMPANY_REGIONAL_HQS_HEADER: "[Concept('concept_regional_company_hq','$concept_regional_company_hqs_short$')]"
 COMPANY_PROSPERITY_AND_PRODUCTIVITY_HEADER: "$concept_prosperity$ & $concept_productivity$"
 NO_COMPANY_COUNTRIES: "Keine [Concept('concept_country', '$concept_countries$')]"
 NO_OWNED_COLONIES: "Keine [concept_company] besitzt [Concept('concept_colony','$concept_colonies$')]"
 NO_REGIONAL_HQS: "Keine [Concept('concept_regional_company_hq','$concept_regional_company_hqs_short$')]"
 NO_OWNED_TRADE_CENTERS: "Keine [concept_company] besitzt [GetBuildingType('building_trade_center').GetName]-[Concept('concept_building_level', '$concept_building_levels_short$')]"
 NO_COMPANY_MONOPOLIES: "Keine [Concept('concept_company_monopoly', '$concept_company_monopolies$')]"
 NO_COUNTRIES_OR_COLONIES: "Keine [concept_company] besitzt [Concept('concept_country', '$concept_countries$')] oder [Concept('concept_colony','$concept_colonies$')]"
 COMPANY_PANEL_CHARTERED_COMPANIES_TITLE: "[Concept('concept_company_charter','$concept_company_charters_short$')]"
 REGIONAL_COMPANY_HQS_TITLE: "[Concept('concept_regional_company_hq','$concept_regional_company_hqs_short$')]:"
 COMPANY_OWNED_TRADE_CENTERS_TITLE: "[GetBuildingType('building_trade_center').GetName]-[Concept('concept_building_level', '$concept_building_levels_short$')] im Besitz von „[Company.GetName]“:"
 COMPANY_OWNED_COLONIES_TITLE: "[Concept('concept_colony','$concept_colonies$')] im Besitz von „[Company.GetName]“:"
 COMPANY_CHARTER_SELECT_BUILDING_TYPE_TO_MONPOLIZE: "[concept_building] zum [Concept('concept_company_monopoly', '$concept_company_monopolize$')] auswählen"
 COMPANY_CHARTER_SELECT_BUILDING_TYPE_ADDITIONAL_INDUSTRY: "Weitere [Concept('concept_building', '$concept_building_industry$')] auswählen"
 COMPANY_CHARTER_SELECT_STATE_TO_COLONIZE: "Einen zu [Concept('concept_colony', 'kolonisierenden')] [concept_state] auswählen"
 COMPANY_COUNTRIES_AND_COLONIES_HEADER: "$concept_countries$ & $concept_colonies$"
 COMPANY_CHARTER_ACTIVE_MONOPOLYS: "Aktive [Concept('concept_company_monopoly', '$concept_company_monopolies$')]"
 COMPANY_CHARTER_ACTIVE_ADDITIONAL_INDUSTRIES: "Aktive weitere [Concept('concept_building', '$concept_building_industries$')]"
 COMPANY_CHARTER_ACTIVE_COLONIES: "Aktive [concept_company]-[Concept('concept_colony', '$concept_colonies$')]"
 GRANT_COMPANY_CHARTER_GENERIC_TOOLTIP: "[Company.GetName|U] „[CompanyCharterType.GetNameNoIcon] “ gewähren"
 GRANT_MONOPOLY_CHARTER_TOOLTIP: "„[Company.GetName|U]“ ein [Concept('concept_company_monopoly', '$concept_company_monopoly_short$')] auf „[BuildingType.GetName]“ [GetPlayer.GetAltName('IN')] erteilen"
 GRANT_ADDITIONAL_INDUSTRY_CHARTER_TOOLTIP: "„[Company.GetName|U]“ die Fähigkeit gewähren, „[BuildingType.GetName]“ zu bauen"
 GRANT_COLONY_CHARTER_TOOLTIP: "„[Company.GetName|U]“ erlauben, [StateRegion.GetName] zu [Concept('concept_colony', '$concept_colonize$')|l]"
 REMOVE_COMPANY_CHARTER_MONOPOLY: "#header [concept_company_monopoly] auf „[BuildingType.GetName]“ widerrufen#!\n [ConcatIfNeitherEmpty(GetDesc(Company.ToggleBuildingCharter(CompanyCharterType.Self, BuildingType.Self)), '\n\n')] @aut! #v [CompanyCharterType.GetAuthorityCost(Company.Self)|=+0]#! erhalten"
 REMOVE_COMPANY_CHARTER_ADDITIONAL_INDUSTRY: "#header „[BuildingType.GetName]“ als zusätzliche [Concept('concept_building', '$concept_building_industry$')] entfernen#!\n[ConcatIfNeitherEmpty(GetDesc(Company.ToggleBuildingCharter(CompanyCharterType.Self, BuildingType.Self)), '\n\n')]@aut! #v [CompanyCharterType.GetAuthorityCost(Company.Self)|=+0]#! erhalten"
 REMOVE_COMPANY_CHARTER_COLONY: "#header [concept_colony]-Rechte für „[StateRegion.GetName]“ entfernen#!\n [ConcatIfNeitherEmpty(GetDesc(Company.ToggleRegionCharter(CompanyCharterType.Self, StateRegion.Self)), '\n\n')] @aut! #v [CompanyCharterType.GetAuthorityCost(Company.Self)|=+0]#! erhalten"
 REMOVE_COMPANY_CHARTER_INVESTMENT_RIGHTS: "#header [CompanyCharterType.GetName] entfernen#!\n[ConcatIfNeitherEmpty(GetDesc(Company.ToggleCharter(CompanyCharterType.Self)), '\n\n')] @aut! #v [CompanyCharterType.GetAuthorityCost(Company.Self)|=+0]#! erhalten"
 REMOVE_COMPANY_CHARTER_TRADE_RIGHTS: "#header [CompanyCharterType.GetName] entfernen#!\n[ConcatIfNeitherEmpty(GetDesc(Company.ToggleCharter(CompanyCharterType.Self)), '\n\n')] @aut! #v [CompanyCharterType.GetAuthorityCost(Company.Self)|=+0]#! erhalten"
 COMPANY_HQ_HEADER: "[concept_company_hq] in „[Building.GetState.GetName]“"
 COMPANY_REGIONAL_HQ_HEADER: "[concept_regional_company_hq] in [Building.GetState.GetCountry.GetFlagTextIcon] „[Building.GetState.GetName]“"
 GRANT_COMPANY_CHARTER_CONFIRMATION_HEADER: "[CompanyCharterType.GetName]"
 NO_AVAILABLE_INDUSTRIES: "Keine verfügbaren [Concept('concept_building', '$concept_building_industries$')]"
 COMPANY_CHARTER_AVAILABLE_BUILDING_TYPES_NUMBER: "[GetDataModelSize(CompanyCharterType.GetPotentialBuildings(Company.Self))|+] verfügbar"
 COMPANY_CHARTER_AVAILABLE_REGIONS_NUMBER: "[GetDataModelSize(CompanyCharterType.GetPotentialRegions(Company.Self))|+] verfügbar"
 COMPANY_CHARTER_ACTIVE_NUMBER: "[GetDataModelSize(Company.GetActiveCharters(CompanyCharterType.Self))|u] aktiv"
 COMPANY_CHARTER_AUTHORITY_COST: "@aut! #v [CompanyCharterType.GetAuthorityCost(Company.Self)|-0]#! Unterhaltskosten"
 COMPANY_CHARTER_TYPE_IS_ACTIVE: "#i Derzeit aktiv für#! [Company.GetName]"
 COMPANY_AVAILABLE_INDUSTRIES_CONCEPT: "Verfügbare [Concept('concept_building', '$concept_building_industries$')]"
 PRESTIGE_GOODS_CONCEPT: "[Concept('concept_prestige_good', '$concept_prestige_goods$')]"
 GOODS_CONCEPT: "Gesamt-[Concept('concept_good','$concept_goods$')]"
 WORLD_MARKET_CONCEPT: "[concept_world_market]"
 MONOPOLY_CHARTER_BUILDING_TYPES_TOOLTIP: "#header [Concept('concept_company_monopoly', '$concept_company_monopolies$')]#!\n„[GetDataModelSize(Company.GetMonopolyBuildingTypes)]“-[Concept('concept_building', '$concept_building_industries$')]\n$TOOLTIP_DELIMITER$\n#title „[Company.GetNameNoFormatting]“ hat ein $concept_company_monopoly_short$ auf:#!#indent_newline:3 \n[Company.GetMonopoliesDesc]"
 MONOPOLY_BUILDING_TYPE_ENTRY: "[BuildingType.GetName]"
 BUILDING_TYPE_ICON_ADDITIONAL_INDUSTRY: "@green_checkmark! [Concept('concept_building', '$concept_building_industry$')] durch die [GetCompanyCharterType('industry_charter').GetName]-[concept_company_charter] erlaubt"
 BUILDING_TYPE_ICON_TRADE_CHARTER: "@green_checkmark! Durch die [GetCompanyCharterType('trade_charter').GetName]-[concept_company_charter] erlaubt"
 BUTTON_POWER_BLOC: "#header Machtblock#!"
 POWER_BLOC_PANEL_HEADER: "[SelectLocalization(PowerBloc.IsValid, PowerBloc.GetName, 'Machtblöcke')]"
 POWER_BLOC_TAB_OVERVIEW: "Übersicht"
 POWER_BLOC_TAB_MEMBERS: "Mitglieder ([PowerBloc.GetNumMembers])"
 POWER_BLOC_TAB_ALL_POWER_BLOCS: "Alle Blöcke"
 POWER_BLOC_TAB_MODIFIERS: "Modifikatoren"
 POWER_BLOC_PANEL_LEADER_MODIFIER_ENTRIES: "Anführer-Modifikatoren"
 POWER_BLOC_PANEL_NON_LEADER_MODIFIER_ENTRIES: "Nicht-Anführer-Modifikatoren"
 FORM_POWER_BLOC: "Einen Machtblock bilden"
 FORM_POWER_BLOC_DESC: "#title [concept_power_bloc_identity]:#!\n$TAB$[PowerBlocIdentity.GetName|U]\n\n#title [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')]:#!#indent_newline:3 \n$PRINCIPLES$#!\n\n[ConcatIfNeitherEmpty('$EFFECT$','\n\n')]Sind wir sicher, dass wir den [concept_power_bloc]\n„#v $NAME$#!“ bilden wollen?"
 FORM_THIS_POWER_BLOC: "Diesen Machtblock bilden"
 INVITE_TO_BLOC: "Länder einladen"
 POWER_BLOC_FORMATION_HEADER: "Einen Machtblock bilden"
 POWER_BLOC_FORMATION_COOLDOWN_UNTIL: "Kann bis #v $DATE$#! einen neuen Machtblock bilden"
 POWER_BLOC_FORMATION_CHOOSE_NAME: "#header Name auswählen:#!"
 POWER_BLOC_FORMATION_CLICK_TO_CHANGE_NAME: "Klicken, um den Namen zu ändern …"
 POWER_BLOC_FORMATION_INVALID_NAME: "Ungültiger Name: \n$DESC$"
 RANDOMIZE_POWER_BLOC_NAME: "$concept_power_bloc$-Namen zufällig wählen"
 POWER_BLOC_FORMATION_NAME_IN_USE: "Name wird bereits von „[PowerBloc.GetName]“ verwendet"
 CUSTOMIZE_STATUE: "Die $concept_power_bloc$-Statue anpassen"
 CUSTOMIZE_EMBLEM: "Das $concept_power_bloc$-Abzeichen anpassen"
 EMBLEM_AND_COLORS: "Abzeichen & Farben"
 STATUE: "Statue"
 OPEN_COLOR_PICKER: "Farbauswahl öffnen"
 COLOR_PICKER_HEADER: "Eine Farbe auswählen"
 RANDOMIZE: "Zufällig"
 POWER_BLOC_COA_SELECT_ITEM: "#v [PowerBlocCoaPieceSelector.GetName]#! auswählen"
 POWER_BLOC_MAP_TEXTURE_SELECT_ITEM: "$POWER_BLOC_MAP_TEXTURE_SELECTOR_LABEL$ auswählen"
 CENTRAL_IDENTITY: "$concept_power_bloc_identity$"
 SELECT_A_CENTRAL_IDENTITY: "Eine [concept_power_bloc_identity] auswählen"
 POWER_BLOC_COA_PIECE_SHIELD_PATTERN_COLOR1_LABEL: "Hauptfarbe"
 POWER_BLOC_COA_PIECE_SHIELD_PATTERN_COLOR2_LABEL: "Nebenfarbe"
 POWER_BLOC_COA_PIECE_CENTER_COLOR1_LABEL: "Abzeichenfarbe"
 POWER_BLOC_COA_PIECE_SHIELD_PATTERN_LABEL: "Schildmuster"
 POWER_BLOC_COA_PIECE_SHIELD_FRAME_LABEL: "Schildrahmen"
 POWER_BLOC_COA_PIECE_CENTER_LABEL: "Mitte"
 POWER_BLOC_COA_PIECE_SIDE_LABEL: "Seite"
 POWER_BLOC_COA_PIECE_TOP_LABEL: "Oben"
 POWER_BLOC_COA_PIECE_ITEM_TOOLTIP: "#header [PowerBlocCoaPiece.GetName]#!\n[SelectLocalization(PowerBlocCoaPiece.IsSelected, 'POWER_BLOC_CUSTOMIZATION_OPTION_ITEM_TOOLTIP_SELECTED', 'POWER_BLOC_CUSTOMIZATION_OPTION_ITEM_TOOLTIP_NOT_SELECTED')]"
 POWER_BLOC_MAP_TEXTURE_ITEM_TOOLTIP: "#header [PowerBlocMapTexture.GetName]#!\n[SelectLocalization(PowerBlocMapTexture.IsSelected, 'POWER_BLOC_CUSTOMIZATION_OPTION_ITEM_TOOLTIP_SELECTED', 'POWER_BLOC_CUSTOMIZATION_OPTION_ITEM_TOOLTIP_NOT_SELECTED')]"
 POWER_BLOC_MAP_TEXTURE_SELECTOR_LABEL: "Kartenmuster"
 POWER_BLOC_MAP_TEXTURE_NAME: "Muster $VALUE$"
 POWER_BLOC_CUSTOMIZATION_OPTION_ITEM_TOOLTIP_SELECTED: "#i Derzeit ausgewählt#!"
 POWER_BLOC_CUSTOMIZATION_OPTION_ITEM_TOOLTIP_NOT_SELECTED: "#i Zum Auswählen klicken#!"
 FORM_POWER_BLOC_CONFIRM_BUTTON_TOOLTIP: "Den #header [concept_power_bloc] „[ConcatIfNeitherEmpty(PowerBlocFormation.GetChosenName,' ')]“ bilden#! [AddTextIf(Not(StringIsEmpty(GetDesc(PowerBlocFormation.Confirm))),'\n$TOOLTIP_DELIMITER$\n')][GetDesc(PowerBlocFormation.Confirm)]"
 POWER_BLOC_CUSTOMIZATION_CONFIRM_BUTTON_TOOLTIP: "#header Bestätigen:#!\n[ConcatIfNeitherEmpty(PowerBlocCustomizationPopup.ConfirmGetDesc, '\n\n')]"
 POWER_BLOC_CHOOSE_A_NAME_PROMPT: "#i Einen Namen hinzufügen#!"
 POWER_BLOC_FORMATION_SELECT_IDENTITY_TITLE: "#header [concept_power_bloc_identity] auswählen:#!"
 POWER_BLOC_IDENTITY_NOT_SELECTED: "[concept_power_bloc_identity] nicht ausgewählt"
 POWER_BLOC_IDENTITY_CANNOT_SELECT: "Kann „#v [PowerBlocIdentity.GetName]#!“ nicht auswählen:\n$TAB$[PowerBlocIdentity.GetIsPossibleDesc]"
 POWER_BLOC_PRINCIPLE_CANNOT_SELECT: "Kann „#v [PowerBlocPrinciple.GetName]#!“ nicht auswählen:\n$TAB$[PowerBlocPrinciple.GetIsPossibleDesc]"
 POWER_BLOC_IDENTITY_COUNTRY_CANNOT_JOIN: "[Country.GetAltName('NOM')|U] kann „[PowerBloc.GetName]“ nicht mit [concept_power_bloc_identity] „#v [PowerBlocIdentity.GetName]#!“ verbinden, da:\n$DESC$"
 POWER_BLOC_COUNTRY_CANNOT_LEAVE_DUE_TO_IDENTITY: "[COUNTRY.GetAltName('NOM')|U] kann „[POWER_BLOC.GetName]“ mit [concept_power_bloc_identity] „#v [PowerBlocIdentity.GetName]#!“ nicht verlassen. Bedingungen, um den Block verlassen zu können, sind:\n$DESC$"
 POWER_BLOC_COUNTRY_CANNOT_LEAVE_ON_COOLDOWN: "[Country.GetAltName('NOM')|U] kann „[PowerBloc.GetName]“ nicht verlassen bis [Date.GetString|v]"
 POWER_BLOC_COUNTRY_IS_IN_POWER_STRUGGLE: "[Country.GetAltName('NOM')|U] befindet sich in einem laufenden [concept_power_struggle] gegen den Anführer"
 POWER_BLOC_KICK_MEMBER_COMMAND_CONFIRMATION: "#header [Country.GetAltName('NOM')|U] aus „[PowerBloc.GetName|U]“ entfernen#!\n\nWeitere Auswirkungen: #indent_newline:3 \n$EFFECT$#!"
 POWER_BLOC_FORMATION_SELECT_PRINCIPLES_TITLE: "#header [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')] auswählen:#!"
 POWER_BLOC_FORMATION_PRINCIPLE_POINTS_REMAINING: "Verbleibende Punkte: #v [PowerBlocFormation.GetPrinciplePointsRemainingRaw]/[GetDefine('NPowerBlocs', 'INITIAL_PRINCIPLE_LEVELS')]#!"
 POWER_BLOC_FORMATION_HAS_SAME_GROUP_PRINCIPLES: "Ein [concept_power_bloc] kann keine [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')] derselben Gruppe haben"
 POWER_BLOC_FORMATION_INSUFFICIENT_INFLUENCE: "Mangelnder @inf![Nbsp][concept_influence] (@inf!$REQUIRED_VALUE|v0$ erforderlich / @inf!$CURRENT_VALUE|v0$ vorhanden)"
 POWER_BLOC_FORMATION_UNSPENT_PRINCIPLE_POINTS: "Alle verfügbaren [Concept('concept_power_bloc_mandate','$concept_power_bloc_mandates$')] einsetzen"
 POWER_BLOC_PRINCIPLE_IS_LOCKED_BY_IDENTITY: "„[PowerBlocPrinciple.GetGroup.GetName]“ erfordert $IDENTITIES$"
 POWER_BLOC_PRINCIPLE_IS_BLOCKED_BY_IDENTITY: "„[PowerBlocPrinciple.GetGroup.GetName]“ kann nicht unter der [concept_power_bloc_identity] „[POWER_BLOC_IDENTITY.GetName]“ ausgewählt werden"
 POWER_BLOC_PRINCIPLES_SLOTS_EXCEED_MAX_COUNT: "Ein [concept_power_bloc] kann nicht mehr als #v [GetDefine('NPowerBlocs', 'MAX_PRINCIPLES')]#! [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')] haben"
 POWER_BLOC_COUNTRY_CANNOT_JOIN_ON_COOLDOWN: "[Country.GetAltName('NOM')|U] kann „[PowerBloc.GetName]“ nicht beitreten bis [Date.GetString|v]"
 POWER_BLOC_COUNTRY_IS_POWER_BLOC_LEADER: "[Country.GetAltName('NOM')|U] ist Anführer eines [Concept('concept_power_bloc', 'Machtblocks')]"
 POWER_BLOC_COUNTRY_IS_ALREADY_IN_ANOTHER_POWER_BLOC: "[COUNTRY.GetAltName('NOM')|U] ist bereits in einem [concept_power_bloc]"
 POWER_BLOC_COUNTRY_IS_ALREADY_IN_POWER_BLOC: "[COUNTRY.GetAltName('NOM')|U] ist bereits im „[PowerBloc.GetName|U]“-[concept_power_bloc]"
 POWER_BLOC_COUNTRY_IS_SUBJECT: "[Country.GetAltName('NOM')|U] ist ein [concept_subject] [Country.GetOverlord.GetAltName('VON')] und kann sich nicht in einem [concept_power_bloc] befinden, der sich von dem seines [Concept('concept_overlord', 'Suzeräns')] unterscheidet"
 POWER_BLOC_CANNOT_SWITCH_SIDE: "[COUNTRY.GetAltName('NOM')|U] kann sich nicht gegen [TARGET_COUNTRY.GetAltName('VON')] stellen aufgrund von:\n$TAB$$BREAKDOWN$"
 POWER_BLOC_CANNOT_SIDE_AGAINST_OVERLORD: "[SCOPE.GetRootScope.GetCountry.GetAltName('NOM')|U] kann nicht gegen den [concept_overlord] eines anderen [Concept('concept_power_bloc_member', 'Machtblockmitglieds')] Partei ergreifen aufgrund von:\n$TAB$$modifier_power_bloc_disallow_war$"
 POWER_BLOC_COHESION: "[concept_power_bloc_cohesion]"
 POWER_BLOC_COHESION_LEVEL: "[Country.GetPowerBloc.GetCohesion|v0]"
 POWER_BLOC_COHESION_TOOLTIP: "#header [concept_power_bloc_cohesion]#!\nWert: $VALUE$\n$TOOLTIP_DELIMITER$$BREAKDOWN$"
 POWER_BLOC_COHESION_PREDICTION_JOIN: "Ziel-[concept_power_bloc_cohesion] von „[POWER_BLOC.GetName]“ ändert sich um #v $VALUE|=+$#!, wenn [COUNTRY.GetAltName('NOM')] beitritt"
 POWER_BLOC_COHESION_PREDICTION_REMOVE: "Ziel-[concept_power_bloc_cohesion] von „[POWER_BLOC.GetName]“ ändert sich um #v $VALUE|=+$#!, wenn [COUNTRY.GetAltName('NOM')] entfernt wird"
 POWER_BLOC_IDENTITY_HEADER: "Identitätskernsäule"
 PICK_AT_LEAST_ONE_PRIMARY: "@information! #title Ein $concept_power_bloc_primary_principle_group_extra_short$-$concept_power_bloc_principle$ ist erforderlich#!"
 POWER_BLOC_PRINCIPLES_HEADER: "Prinzipien"
 POWER_BLOC_LEADER_HEADER: "Anführer"
 POWER_BLOC_MEMBERS_HEADER: "Mitglieder"
 POWER_BLOC_NO_MEMBERS: "Keine Mitglieder"
 POWER_BLOC_MEMBER_COUNTRY_NAME_HEADER_TOOLTIP: "Mitglieder nach Namen sortieren"
 POWER_BLOC_MEMBER_PRESTIGE_HEADER_TOOLTIP: "Mitglieder nach [concept_prestige] sortieren"
 POWER_BLOC_MEMBER_LEVERAGE_HEADER_TOOLTIP: "Mitglieder nach [concept_power_bloc_leverage] sortieren"
 POWER_BLOC_MANDATE_PROGRESS_TOOLTIP: "#header [concept_power_bloc_mandate_progress|U]#!\nDerzeitiger $concept_power_bloc_mandate_progress$: [PowerBloc.GetCurrentMandateProgress|v0]/[GetDefine('NPowerBlocs', 'MAX_MANDATE_PROGRESS')] (#v [PowerBloc.GetCurrentMandateProgressPercentage|%0]#!)\nWird [concept_power_bloc_mandate] in [LabelingHelper.GetRemainingDuration(PowerBloc.GetNextMandateDate.Self, '')] erhalten\n$TOOLTIP_DELIMITER$\nWöchentlicher $concept_power_bloc_mandate_progress$: [PowerBloc.GetWeeklyMandateProgress|v0]#indent_newline:3 \n[PowerBloc.GetWeeklyMandateProgressDesc]#!"
 POWER_BLOC_MANDATE_PROGRESS_TIMER: "[LabelingHelper.GetRemainingDuration(PowerBloc.GetNextMandateDate.Self, '_SHORT')]"
 POWER_BLOC_MANDATE_PROGRESS_BASE: "Durch „[PowerBloc.GetRankFormatted]“-Rang"
 POWER_BLOC_MANDATE_PROGRESS_FROM_GREAT_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_GREAT_POWER_MEMBERS_TOOLTIP  Durch [concept_great_power]-Mitglieder#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_GREAT_POWER_MEMBERS_TOOLTIP: "Anzahl der [concept_great_power]-Mitglieder: [PowerBloc.MakeScope.ScriptValue('power_bloc_great_power_non_leader_members')]\nAdd.: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_great_power_member_add')]\nMult.: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_great_power_member_mult')]"
 POWER_BLOC_MANDATE_PROGRESS_FROM_MAJOR_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_MAJOR_POWER_MEMBERS_TOOLTIP  Durch [concept_major_power]-Mitglieder#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_MAJOR_POWER_MEMBERS_TOOLTIP: "Anzahl der [concept_major_power]-Mitglieder: [PowerBloc.MakeScope.ScriptValue('power_bloc_major_power_non_leader_members')]\nAdd.: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_major_power_member_add')]\nMult.: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_major_power_member_mult')]"
 POWER_BLOC_MANDATE_PROGRESS_FROM_MINOR_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_MINOR_POWER_MEMBERS_TOOLTIP  Durch [concept_minor_power]-Mitglieder#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_MINOR_POWER_MEMBERS_TOOLTIP: "Anzahl der [concept_minor_power]-Mitglieder: [PowerBloc.MakeScope.ScriptValue('power_bloc_minor_power_non_leader_members')]\nAdd.: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_minor_power_member_add')]\nMult.: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_minor_power_member_mult')]"
 POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_MAJOR_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_MAJOR_POWER_MEMBERS_TOOLTIP  Durch [Concept('concept_unrecognized_power','$concept_unrecognized_major_power$')]-Mitglieder#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_MAJOR_POWER_MEMBERS_TOOLTIP: "Anzahl der [Concept('concept_unrecognized_power','$concept_unrecognized_major_power$')]-Mitglieder: [PowerBloc.MakeScope.ScriptValue('power_bloc_unrecognized_major_power_non_leader_members')]\nAdd.: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_unrecognized_major_power_member_add')]\nMult.: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_unrecognized_major_power_member_mult')]"
 POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_REGIONAL_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_REGIONAL_POWER_MEMBERS_TOOLTIP  Durch [Concept('concept_unrecognized_power','$concept_unrecognized_regional_power$')]-Mitglieder#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_REGIONAL_POWER_MEMBERS_TOOLTIP: "Anzahl der [Concept('concept_unrecognized_power','$concept_unrecognized_regional_power$')]-Mitglieder: [PowerBloc.MakeScope.ScriptValue('power_bloc_unrecognized_regional_power_non_leader_members')]\nAdd.: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_unrecognized_regional_power_member_add')]\nMult.: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_unrecognized_regional_power_member_mult')]"
 POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_POWER_MEMBERS_TOOLTIP  Durch [concept_unrecognized_power]-Mitglieder#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_POWER_MEMBERS_TOOLTIP: "Anzahl der [concept_unrecognized_power]-Mitglieder: [PowerBloc.MakeScope.ScriptValue('power_bloc_unrecognized_power_non_leader_members')]\nAdd.: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_unrecognized_power_member_add')]\nMult.: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_unrecognized_power_member_mult')]"
 POWER_BLOC_MANDATE_PROGRESS_FROM_INSIGNIFICANT_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_INSIGNIFICANT_POWER_MEMBERS_TOOLTIP  Durch [concept_insignificant_power]-Mitglieder#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_INSIGNIFICANT_POWER_MEMBERS_TOOLTIP: "Anzahl der [concept_insignificant_power]-Mitglieder: [PowerBloc.MakeScope.ScriptValue('power_bloc_insignificant_power_non_leader_members')]\nAdd.: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_insignificant_power_member_add')]\nMult.: [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_insignificant_power_member_mult')]"
 PRINCIPLE: "#bold [Principle.GetNameNoFormatting]#!"
 ADD_NEW_PRINCIPLE_DURING_FORMATION: "[SelectLocalization(GreaterThan_int32(PowerBlocFormation.GetPrinciplePointsRemainingRaw, '(int32)0'), 'ADD_NEW_PRINCIPLE', 'NO_MANDATES')]"
 ADD_NEW_PRINCIPLE_DURING_FORMATION_TOOLTIP: "[SelectLocalization(GreaterThan_int32(PowerBlocFormation.GetPrinciplePointsRemainingRaw, '(int32)0'), 'TOOLTIP_ADD_NEW_PRINCIPLE_SLOT_LEADER', 'NO_MANDATES_TOOLTIP')]"
 NO_MANDATES: "Keine $concept_power_bloc_mandates$"
 NO_MANDATES_TOOLTIP: "@simple_box! Mindestens #v 1#! [concept_power_bloc_mandate] verfügbar haben"
 ADD_NEW_PRINCIPLE_TOOLTIP: "[SelectLocalization(GreaterThan_int32(PowerBloc.GetNumMandates, '(int32)0'), 'TOOLTIP_ADD_NEW_PRINCIPLE_SLOT_LEADER', 'NO_MANDATES_TOOLTIP')]"
 ADD_NEW_PRINCIPLE: "Prinzip hinzufügen"
 NO_NEW_PRINCIPLE: "Kein Prinzip"
 LOCKED_PRINCIPLE_SLOT: "Nicht freigeschaltet"
 TOOLTIP_LOCKED_PRINCIPLE_SLOT: "Dieser [concept_power_bloc_principle]-Platz wird verfügbar, wenn:\n[PowerBlocPrincipleSlot.GetUnlockDesc]"
 TOOLTIP_LOCKED_PRINCIPLE_SLOT_DURING_FORMATION: "Weitere [concept_power_bloc_principle]-Plätze werden verfügbar, wenn unser [concept_power_bloc] einen höheren [concept_power_bloc_rank] erreicht und mehr [Concept('concept_power_bloc_member','$concept_power_bloc_members_short$')] hinzugewinnt"
 TOOLTIP_LOCKED_PRINCIPLE_SLOT_3_DURING_FORMATION: "Verfügbar, wenn unser [concept_power_bloc_rank] #v 5.#! oder besser ist und wir mindestens #v 5#! [Concept('concept_power_bloc_member', '$concept_power_bloc_members_short$')] haben"
 TOOLTIP_LOCKED_PRINCIPLE_SLOT_4_DURING_FORMATION: "Verfügbar, wenn unser [concept_power_bloc_rank] #v 3.#! oder besser ist und wir mindestens #v 10#! [Concept('concept_power_bloc_member', '$concept_power_bloc_members_short$')] haben"
 AVAILABLE_MANDATES: "[PowerBloc.GetNumMandates|v] verfügbare [Concept('concept_power_bloc_mandate','$concept_power_bloc_mandates$')]"
 POWER_BLOC_FORMATION_CUSTOMIZATION: "Anpassung"
 LEAVE_POWER_BLOC: "Verlassen"
 TOOLTIP_LEAVE_POWER_BLOC: "Klicken, um „[PowerBloc.GetName]“ zu verlassen.[ConcatIfNeitherEmpty('\n\n', GetDesc(GetPlayer.LeavePowerBloc))]"
 LEAVE_POWER_BLOC_CONFIRMATION: "Sind Sie sicher, dass Sie „[PowerBloc.GetName]“ verlassen wollen? Das wird Ihre [concept_relations] zu allen anderen [Concept('concept_power_bloc_member','$concept_power_bloc_members_short$n')] verringern."
 POWER_BLOC_COUNTRY_NOT_IN_POWER_BLOC: "[Country.GetAltName('NOM')|U] ist nicht in einem [concept_power_bloc]"
 POWER_BLOC_COUNTRY_NOT_POWER_BLOC_LEADER: "[Country.GetAltName('NOM')|U] ist nicht der Anführer von „[PowerBloc.GetName]“"
 POWER_BLOC_COUNTRY_NOT_A_POWER_BLOC_LEADER: "[Country.GetAltName('NOM')|U] ist nicht Anführer eines [Concept('concept_power_bloc', 'Machtblocks')]"
 POWER_BLOC_COUNTRIES_NOT_IN_THE_SAME_POWER_BLOC: "[Country.GetAltName('NOM')|U] ist nicht im selben [concept_power_bloc] wie [TARGET_COUNTRY.GetAltName('NOM')]"
 POWER_BLOC_ALREADY_HAS_PRINCIPLE: "„[PowerBlocPrinciple.GetName]“ ist bereits auf einem anderen [concept_power_bloc_principle]-Platz aktiv"
 POWER_BLOC_ALREADY_HAS_PRINCIPLE_SAME_SLOT: "„[PowerBlocPrinciple.GetName]“ ist bereits auf diesem [Concept('concept_power_bloc_principle', 'Prinzipien')]-Platz aktiv"
 POWER_BLOC_HAS_PRINCIPLE_OF_SAME_GROUP: "Ein „[PowerBlocPrincipleGroup.GetName]“-[PowerBlocPrinciple.GetName] ist bereits auf einem anderen [concept_power_bloc_principle]-Platz aktiv"
 POWER_BLOC_NOT_ENOUGH_MANDATES: "Mindestens #v $COST|0$#! verfügbar haben [SelectLocalization(EqualTo_int32('(int32)$COST$', '(int32)1'), 'MANDATE_CONCEPT', 'MANDATES_CONCEPT')]"
 POWER_BLOC_NO_PRIMARY_PRINCIPLES_SELECTED: "Keines der [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')] aus den [Concept('concept_power_bloc_primary_principle_group','$concept_power_bloc_primary_principle_groups$')] für die [Concept('concept_power_bloc_identity','$concept_power_bloc_identity_extra_short$')] „[POWER_BLOC_IDENTITY.GetName]“ wurde ausgewählt"
 POWER_BLOC_PRINCIPLE_ON_COOLDOWN: "„[POWER_BLOC_PRINCIPLE.GetName]“ hat Abklingzeit und kann bis [DATE.GetString|v] nicht geändert werden."
 POWER_BLOC_PRINCIPLE_IS_INCOMPATIBLE: "„[POWER_BLOC_PRINCIPLE.GetName]“ ist nicht kompatibel mit „[POWER_BLOC_PRINCIPLE_OTHER.GetName]“"
 POWER_BLOC_LEADER_EXPENSE_LIST_ITEM: "#negative_value -$VAL|0$#! durch [Concept('concept_power_bloc_leader','$concept_power_bloc_leader_extra_short$')] von „[PowerBloc.GetName]“"
 POWER_BLOC_COUNTRY_IS_COLONIZABLE: "[Country.GetAltName('NOM')|U] ist eine [concept_decentralized_nation]"
 EXISTING_POWER_BLOCS_HEADER: "Machtblöcke in der Welt"
 POWER_BLOC_PLAYER_HAS_THIS_IDENTITY: "@green_checkmark_box! „[GetPlayer.GetPowerBloc.GetName|U]“ hat diese [concept_power_bloc_identity]"
 POWER_BLOC_IDENTITY_POWER_BLOC_EFFECT: "#title [concept_power_bloc]:#!\n$DESC$"
 POWER_BLOC_IDENTITY_MEMBER_EFFECT: "#title Alle [Concept('concept_power_bloc_member','$concept_power_bloc_members_short$')]:#!\n$DESC$"
 POWER_BLOC_IDENTITY_LEADER_EFFECT: "#title Nur [Concept('concept_power_bloc_leader','$concept_power_bloc_leader_short$')]:#!\n$DESC$"
 POWER_BLOC_IDENTITY_NON_LEADER_EFFECT: "#title [Concept('concept_power_bloc_member','$concept_power_bloc_members_short_non_leader$')]:#!\n$DESC$"
 POWER_BLOC_PLAYER_CAN_UPGRADE_THIS_PRINCIPLE: "@arrow_up! Wir können dieses [concept_power_bloc_principle] verbessern"
 POWER_BLOC_PLAYER_HAS_THIS_PRINCIPLE: "@green_checkmark_box! „[GetPlayer.GetPowerBloc.GetName|U]“ hat dieses $concept_power_bloc_principle$"
 POWER_BLOC_HAS_THIS_PRINCIPLE: "@green_checkmark_box! „[PowerBloc.GetName]“ hat dieses $concept_power_bloc_principle$"
 POWER_BLOC_HAS_THIS_PRINCIPLE_GROUP: "@red_cross! „#v [PowerBloc.GetName]#!“ hat bereits ein anderes $concept_power_bloc_principle$ in Sachen [PowerBlocPrincipleGroup.GetName]"
 POWER_BLOC_FORMATION_HAS_THIS_PRINCIPLE: "@green_checkmark_box! „[PowerBlocFormation.GetChosenName]“ hat dieses $concept_power_bloc_principle$"
 POWER_BLOC_FORMATION_HAS_THIS_PRINCIPLE_GROUP: "@red_cross! #v [PowerBlocFormation.GetChosenName]#! hat bereits ein anderes $concept_power_bloc_principle$ in Sachen [PowerBlocPrincipleGroup.GetName] ausgewählt"
 POWER_BLOC_PLAYER_PRINCIPLE_IS_ON_COOLDOWN: "#italic Dieses $concept_power_bloc_principle$ wurde kürzlich ausgewählt und kann bis [AccessPlayer.AccessPowerBloc.GetPrincipleData(PowerBlocPrinciple.Self).GetCooldownDate.GetString|v] nicht geändert werden#!"
 POWER_BLOC_PLAYER_PRINCIPLE_INFO: "$POWER_BLOC_PLAYER_HAS_THIS_PRINCIPLE$[ConcatIfNeitherEmpty('\n', AddLocalizationIf(GetPlayer.GetPowerBloc.IsPrincipleOnCooldown(PowerBlocPrinciple.Self), 'POWER_BLOC_PLAYER_PRINCIPLE_IS_ON_COOLDOWN'))]"
 POWER_BLOC_PRINCIPLE_POWER_BLOC_EFFECT: "#title [concept_power_bloc]:#!\n$DESC$"
 POWER_BLOC_PRINCIPLE_MEMBER_EFFECT: "#title Alle [Concept('concept_power_bloc_member','$concept_power_bloc_members_short$')]:#!\n$DESC$"
 POWER_BLOC_PRINCIPLE_LEADER_EFFECT: "#title Nur [Concept('concept_power_bloc_leader','$concept_power_bloc_leader_short$')]:#!\n$DESC$"
 POWER_BLOC_PRINCIPLE_NON_LEADER_EFFECT: "#title [Concept('concept_power_bloc_member','$concept_power_bloc_members_short_non_leader$')]:#!\n$DESC$"
 POWER_BLOC_PRINCIPLE_INSTITUTION_EFFECT: "Versorgt „[InstitutionType.GetName]“ mit:\n$DESC$"
 POWER_BLOC_PRINCIPLE_ON_SELECTED_LABEL: "#title Bei Auswahl:#!"
 POWER_BLOC_PRINCIPLE_ON_MEMBER_JOINED_LABEL: "#title Wenn ein [concept_country] beitritt:#!"
 POWER_BLOC_PRINCIPLE_INCOMPATIBLE_PRINCIPLES: "Inkompatibel mit dem Folgenden: $LIST$"
 POWER_BLOC_PLAYER_HAS_THIS_PRINCIPLE_GROUP: "@green_checkmark! „[GetPlayer.GetPowerBloc.GetName|U]“ hat ein [concept_power_bloc_principle] aus dieser [concept_power_bloc_principle_group]"
 POWER_BLOC_PRINCIPLE_GROUP_LEVELS: "Hat die folgenden Stufen: $LIST$"
 POWER_BLOC_CAN_INVITE_COUNTRY: "Kann in „[PowerBloc.GetNameNoFormatting|U]“ eingeladen werden"
 POWER_BLOC_CANNOT_INVITE_COUNTRY: "@red_cross! Kann derzeit nicht in „[PowerBloc.GetNameNoFormatting|U]“ eingeladen werden aufgrund von:\n$DESC$"
 POWER_BLOC_NON_MEMBER_COUNTRY_TOOLTIP: "#header [Country.GetAltName('NOM')|U]#!\nGehört keinem [concept_power_bloc] an[ConcatIfNeitherEmpty('\n', '$INVITE_DESC$')][ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n',Country.GetLeverageBreakdown)]"
 POWER_BLOC_ACTIVE_LEVERAGE_GAIN_DESC: "Durch [concept_power_bloc_leverage_advantage]-Zuwachs von MB „[PowerBloc.GetName|U]“ von #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|+=0$#!#!"
 POWER_BLOC_ACTIVE_LEVERAGE_COUNTER_GAIN_DESC: "Durch [concept_power_bloc_leverage_advantage]-Zuwachs von konkurrierendem MB „[PowerBloc.GetName|U]“ von #tooltippable #tooltip:$BREAKDOWN_TAG$ [Negate_CFixedPoint('(CFixedPoint)$VALUE$')|+=0]#!#!"
 POWER_BLOC_LEVERAGE_ADVANTAGE_TOOLTIP: "[concept_power_bloc_leverage_advantage] durch [concept_power_bloc] auf ein anderes [concept_country]"
 POWER_BLOC_LEVERAGE_ADVANTAGE_PLAYER_TOOLTIP: "#header [concept_power_bloc_leverage_advantage] bei [GetPlayer.GetAltName('DAT')]#!\n#v [PowerBloc.GetLeverageAdvantage(GetPlayer.Self)|+=0]#! für „[PowerBloc.GetName]“\n$TOOLTIP_DELIMITER$\n[PowerBloc.GetLeverageAdvantageDesc(GetPlayer.Self)]"
 POWER_BLOC_LEVERAGE_SELF_ADVANTAGE: "Derzeit in Führung"
 POWER_BLOC_LEVERAGE_OTHER_ADVANTAGE: "„[POWER_BLOC_OTHER.GetName]“ ist derzeit in Führung"
 POWER_BLOC_LEVERAGE_NOBODY_ADVANTAGE: "Kein [concept_power_bloc] ist derzeit in Führung"
 POWER_BLOC_LEVERAGE_COUNTRY_ADVANTAGE: "#todo 999 (99 %)#! #b #tooltip:country_leverage_resistance_add_desc $country_leverage_resistance_add$#!#! [COUNTRY.GetAltName('VON')] übersteigt derzeit den [concept_power_bloc_leverage] von allen [Concept('concept_power_bloc','$concept_power_blocs$n')]"
 POWER_BLOC_LEVERAGE_ADVANTAGE_BREAKDOWN: "$BREAKDOWN$"
 POWER_BLOC_LEVERAGES_HEADER: "[concept_power_bloc_leverage]-Trends für [Concept('concept_power_bloc','$concept_power_blocs$')]:"
 POWER_BLOC_LEVERAGE_ENTRY: "#v [PowerBloc.GetLeverageAdvantage(Country.Self)|+=0]#! [PowerBloc.GetName|U]: #v $CURRENT_LEVERAGE|0$#! @arrow_right! #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $TARGET_LEVERAGE|0$#!#!#! ($TARGET_LEVERAGE_SHARE|%1$)"
 POWER_BLOC_UNCLAIMED_LEVERAGE: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $UNCLAIMED_LEVERAGE|v0$#!#! ($UNCLAIMED_LEVERAGE_SHARE|%1$) @arrow_right! [Country.GetUnclaimedLeverageTarget|v0] ([Country.GetUnclaimedLeverageShareTarget|%1]) [concept_power_bloc_unclaimed_leverage|l]"
 POWER_BLOC_LEVERAGE_GAIN_FROM_INTEREST: "[Concept('concept_power_bloc_member','$concept_power_bloc_member_extra_short$')] von MB „[SCOPE.GetRootScope.GetCountry.GetPowerBloc.GetName]“ hat ein [concept_interest] [SCOPE.sCountry('target').GetAltName('IN')]"
 POWER_BLOC_LEVERAGE_GAIN_NO_CAPITAL_INTEREST: "Kein [Concept('concept_power_bloc_member','$concept_power_bloc_member_extra_short$')] von MB „[SCOPE.GetRootScope.GetCountry.GetPowerBloc.GetName]“ hat ein [concept_interest] im [Concept('concept_capital_state', '$concept_capital_state_short$')] [SCOPE.sCountry('target').GetCapital.GetName] [SCOPE.sCountry('target').GetAltName('VON')]"
 POWER_BLOC_LEVERAGE_GAIN_DECAY: "Kein [concept_interest] [SCOPE.sCountry('target').GetAltName('IN')]"
 POWER_BLOC_INACTIVE_LEVERAGE_GAIN_DECAY: "Inaktiver Status von MB „[SCOPE.GetRootScope.GetCountry.GetPowerBloc.GetName]“"
 POWER_BLOC_LEVERAGE_GAIN_FORMAT: "$VALUE|+=0$ durch $KEY$"
 POWER_BLOC_LEVERAGE_COUNTER_GAIN_FORMAT: "[Negate_CFixedPoint('(CFixedPoint)$VALUE$')|+=0] durch $KEY$"
 POWER_BLOC_LEVERAGE_GAIN_FROM_LOBBY_CLOUT: "#v $VALUE|+=0$#! durch [Concept('concept_clout','Politischen Druck')] von „[POLITICAL_LOBBY.GetName]“"
 POWER_BLOC_LEVERAGE_GAIN_FROM_DIPLOMATIC_PACT: "#v $VALUE|%=+1$#! durch „[DIPLOMATIC_PACT.GetName]“"
 POWER_BLOC_ADDED_LEVERAGE_GAIN_FROM_DIPLOMATIC_PACT: "#v $VALUE|+=0$#! durch „[DIPLOMATIC_PACT.GetName]“"
 POWER_BLOC_LEVERAGE_GAIN_FROM_TREATY_ARTICLE: "#v $VALUE|%=+1$#! durch „[TREATY_ARTICLE.GetName]“"
 POWER_BLOC_ADDED_LEVERAGE_GAIN_FROM_TREATY_ARTICLE: "#v $VALUE|+=0$#! durch „[TREATY_ARTICLE.GetName]“"
 POWER_BLOC_LEVERAGE_PENALTY_FROM_EXPELLED_DIPLOMATS: "Diplomaten ausgewiesen"
 POWER_BLOC_LEVERAGE_GAIN_IN_COMMON_WAR: "Gemeinsamer [concept_war]"
 POWER_BLOC_LEVERAGE_GAIN_NOT_IN_COMMON_WAR: "Kein gemeinsamer [concept_war]"
 POWER_BLOC_LEVERAGE_GAIN_FROM_ECONOMIC_DEPENDENCE: "[concept_economic_dependence] [SCOPE.GetRootScope.GetCountry.GetAltName('VON')] ([SCOPE.sCountry('target').GetEconomicDependenceOn(SCOPE.GetRootScope.GetCountry.Self)])"
 POWER_BLOC_LEVERAGE_PENALTY_FROM_DISCRIMINATED_PRIMARY_CULTURE: "[Concept('concept_primary_cultures','$concept_primary_culture$')] mit niedriger [concept_acceptance]"
 POWER_BLOC_LEVERAGE_GAIN_FROM_MEMBERSHIP: "Ist bereits ein [concept_power_bloc_member]"
 POWER_BLOC_LEVERAGE_GAIN_FROM_CULTURAL_PROXIMITY: "Gemeinsame [Concept('concept_cultural_trait','$concept_cultural_traits$')]"
 POWER_BLOC_LEVERAGE_PENALTY_FROM_DISCRIMINATED_RELIGION: "[concept_state_religion] mit niedriger [concept_acceptance]"
 POWER_BLOC_LEVERAGE_GAIN_FROM_SHARED_RELIGION: "Gemeinsame [concept_state_religion]"
 POWER_BLOC_LEVERAGE_GAIN_NO_SHARED_RELIGION: "Unterschiedliche [Concept('concept_state_religion','$concept_state_religions$')]"
 LEVERAGE_ON_LEADER_NOT_APPLICABLE: "[concept_power_bloc_leverage] ist nicht anwendbar auf einen [concept_power_bloc_leader]"
 LEVERAGE_ON_PLAYER_LEADER_NOT_APPLICABLE: "[concept_power_bloc_leverage] ist nicht anwendbar auf uns, da wir ein [concept_power_bloc_leader] sind"
 POWER_BLOC_LEVERAGE_NO_INTEREST: "Kein [concept_power_bloc_member] von „[PowerBloc.GetName]“ hat ein [concept_interest] [Country.GetAltName('IN')]"
 POWER_BLOC_LEVERAGE_DECENTRALIZED: "Kein [concept_power_bloc] kann [concept_power_bloc_leverage] [Country.GetAltName('IN')] gewinnen, da es sich um eine [concept_decentralized_nation] handelt"
 POWER_BLOC_LEVERAGE_HAS_TREATY_PORT: "[concept_treaty_port]"
 POWER_BLOC_LEVERAGE_HAS_WAR_WITH: "bei [concept_war] gegen [SCOPE.sCountry('target').GetAltName('AKK')]"
 POWER_BLOC_LEVERAGE_ADJACENT_TO_LEADER: "[concept_power_bloc_leader] angrenzend zu [SCOPE.sCountry('target').GetAltName('AKK')]"
 POWER_BLOC_LEVERAGE_STRATEGIC_ADJACENCY: "strategische Nachbarschaft zu [SCOPE.sCountry('target').GetAltName('DAT')]"
 POWER_BLOC_LEVERAGE_PENALTY_INFAMY: "hohe [concept_infamy]"
 POWER_BLOC_LEVERAGE_UNRECOGNIZED_LEADER_RECOGNIZED_TARGET: "[SCOPE.sCountry('target').GetAltName('NOM')|U] ist [Concept('concept_recognized_power','$concept_recognized_power_short$')], während der [concept_power_bloc_leader] – [SCOPE.GetRootScope.GetCountry.GetAltNameNoFlag('NOM')] – [Concept('concept_unrecognized_power','$concept_unrecognized_power_short$')] ist"
 POWER_BLOC_LEDGER_COLUMN_LEADER: "Anführer"
 POWER_BLOC_LEDGER_COLUMN_MEMBERS: "Mitglieder"
 POWER_BLOC_LEDGER_COLUMN_IDENTITY: "Identität"
 POWER_BLOC_LEDGER_COLUMN_PRINCIPLES: "Prinzipien"
 SHOW_SPECIFIC_POWER_BLOCS_MAP_MODE: "Ausgewählten [concept_power_bloc] auf der Karte anzeigen."
 SHOW_ALL_POWER_BLOCS_MAP_MODE: "Alle [Concept('concept_power_bloc','$concept_power_blocs$')] auf Karte anzeigen."
 TOOLTIP_ACTIVE_PRINCIPLE_SLOT_LEADER: "Klicken, um [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')] zu ändern oder zu verbessern."
 TOOLTIP_ADD_NEW_PRINCIPLE_SLOT_LEADER: "Klicken, um ein neues [concept_power_bloc_principle] zu diesem Platz hinzuzufügen."
 TOOLTIP_NO_PRINCIPLE_SLOT: "#header Leerer [concept_power_bloc_principle]-Platz#!\n[AddLocalizationIf(Not(PowerBloc.IsLeader(GetPlayer.Self)), 'TOOLTIP_NO_PRINCIPLE_SLOT_OTHER')]"
 TOOLTIP_NO_PRINCIPLE_SLOT_LEADER: "Leerer [concept_power_bloc_principle]-Platz"
 TOOLTIP_NO_PRINCIPLE_SLOT_OTHER: "@red_cross! Wir können ein neues [concept_power_bloc_principle] hinzufügen, wenn wir der [concept_power_bloc_leader] sind."
 TOOLTIP_ACTIVE_PRINCIPLE_SLOT_MEMBER: "Wir können [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')] ändern oder verbessern, wenn wir der [concept_power_bloc_leader] sind."
 PRINCIPLE_SELECTION_HEADER: "[SelectLocalization(PowerBlocPrincipleSelectionWindow.IsReplacingPrinciple, 'PRINCIPLE_SELECTION_HEADER_ACTIVE_SLOT', 'PRINCIPLE_SELECTION_HEADER_EMPTY_SLOT')]"
 PRINCIPLE_SELECTION_HEADER_EMPTY_SLOT: "Ein $concept_power_bloc_principle$ auswählen"
 PRINCIPLE_SELECTION_HEADER_ACTIVE_SLOT: "[Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')] ändern oder verbessern"
 AVAILABLE_PRINCIPLE_GROUPS: "Verfügbare [Concept('concept_power_bloc_principle_group','$concept_power_bloc_principle_groups$')]"
 POTENTIAL_PRINCIPLE_GROUPS: "Potenzielle [Concept('concept_power_bloc_principle_group','$concept_power_bloc_principle_groups$')] ([SelectLocalization(IsDataModelEmpty(PowerBlocPrincipleSelectionWindow.GetPotentialGroups), 'NONE', 'POTENTIAL_PRINCIPLE_GROUPS_COUNT')])"
 POTENTIAL_PRINCIPLE_GROUPS_COUNT: "[GetDataModelSize(PowerBlocPrincipleSelectionWindow.GetPotentialGroups)|v]"
 PRINCIPLE_GROUP_NAME_LABEL: "[PowerBlocPrincipleGroup.GetName|U] [AddLocalizationIf(And(PowerBlocPrincipleGroup.IsPrimaryFor(PowerBlocPrincipleSelectionWindow.GetPowerBlocFormation.GetSelectedIdentity.Self), PowerBlocPrincipleSelectionWindow.IsPowerBlocFormation), 'PRIMARY_PRINCIPLE_GROUP_LABEL')][AddLocalizationIf(And(PowerBlocPrincipleGroup.IsPrimaryFor(PowerBlocPrincipleSelectionWindow.GetPowerBloc.GetIdentity.Self), Not(PowerBlocPrincipleSelectionWindow.IsPowerBlocFormation)), 'PRIMARY_PRINCIPLE_GROUP_LABEL')]"
 PRIMARY_PRINCIPLE_GROUP_LABEL: "([Concept('concept_power_bloc_primary_principle_group','$concept_power_bloc_primary_principle_group_short$')])"
 PRINCIPLE_SELECTION_NO_SELECTION: "Kein [concept_power_bloc_principle] ausgewählt"
 PRINCIPLE_SELECTION_SUBMIT_BUTTON_LABEL: "Abschicken"
 PRINCIPLE_SELECTION_SUBMIT_BUTTON_TOOLTIP: "#header Änderungen einreichen#!\n[SelectLocalization(PowerBlocPrincipleSelectionWindow.HasSelectedPrinciple, 'PRINCIPLE_SELECTION_SUBMIT_BUTTON_TOOLTIP_CHANGES_MADE', 'PRINCIPLE_SELECTION_SUBMIT_BUTTON_NO_SELECTION')][ConcatIfNeitherEmpty('\n', AddLocalizationIf(PowerBlocPrincipleSelectionWindow.HasSelectedPrinciple, 'PRINCIPLE_SELECTION_SUBMIT_BUTTON_COST_WITH_BREAKDOWN'))][ConcatIfNeitherEmpty('\n\n', GetDesc(PowerBlocPrincipleSelectionWindow.SubmitPrincipleSelection))]"
 FORMATION_PRINCIPLE_SELECTION_SUBMIT_BUTTON_TOOLTIP: "#header Änderungen einreichen#!\n[SelectLocalization(PowerBlocPrincipleSelectionWindow.HasSelectedPrinciple, 'PRINCIPLE_SELECTION_SUBMIT_BUTTON_TOOLTIP_CHANGES_MADE', 'PRINCIPLE_SELECTION_SUBMIT_BUTTON_NO_SELECTION')][ConcatIfNeitherEmpty('\n', AddLocalizationIf(PowerBlocPrincipleSelectionWindow.HasSelectedPrinciple, 'PRINCIPLE_SELECTION_SUBMIT_BUTTON_COST_WITH_BREAKDOWN'))][ConcatIfNeitherEmpty('\n\n', PowerBlocPrincipleSelectionWindow.GetDescForPrincipleSelection(PowerBlocPrincipleSelectionWindow.GetSelectedPrinciple.Self))]"
 PRINCIPLE_SELECTION_SUBMIT_BUTTON_TOOLTIP_CHANGES_MADE: "[SelectLocalization(PowerBlocPrincipleSelectionWindow.IsReplacingPrinciple, 'PRINCIPLE_SELECTION_UPGRADE_REPLACE_ACTIVE_PRINCIPLE_WITH_SELECTED', 'PRINCIPLE_SELECTION_ADD_SELECTED_PRINCIPLE')]"
 PRINCIPLE_SELECTION_SUBMIT_BUTTON_NO_SELECTION: "@red_cross! Keine Änderungen vorgenommen"
 PRINCIPLE_SELECTION_SUBMIT_BUTTON_COST: "Dies kostet @power_bloc_mandate! [PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple|v] [SelectLocalization(EqualTo_int32(PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple, '(int32)1'), 'MANDATE_CONCEPT', 'MANDATES_CONCEPT')]"
 PRINCIPLE_SELECTION_SUBMIT_BUTTON_COST_WITH_BREAKDOWN: "Dies kostet @power_bloc_mandate! [PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple|v] [SelectLocalization(EqualTo_int32(PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple, '(int32)1'), 'MANDATE_CONCEPT', 'MANDATES_CONCEPT')]#indent_newline:3 \n[PowerBlocPrincipleSelectionWindow.GetMandateCostDescForSelectedPrinciple]"
 POWER_BLOC_PRINCIPLE_SELECTION_COST_UPGRADE: "@power_bloc_mandate! [PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple|v] durch Verbesserung eines Prinzips der $OLD_LEVEL|v$. Stufe auf die $NEW_LEVEL|v$. Stufe"
 POWER_BLOC_PRINCIPLE_SELECTION_COST_ADD: "@power_bloc_mandate! [PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple|v] durch das Hinzufügen einer Stufe zu einem Prinzip der $NEW_LEVEL|v$. Stufe"
 POWER_BLOC_PRINCIPLE_SELECTION_COST_REPLACE: "@power_bloc_mandate! [PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple|v] durch das Ersetzen eines bestehenden Prinzips mit einem Prinzip der $NEW_LEVEL|v$. Stufe"
 PRINCIPLE_SELECTION_UPGRADE_REPLACE_ACTIVE_PRINCIPLE_WITH_SELECTED: "$PRINCIPLE_SELECTION_UPGRADE_REPLACE_ACTIVE_PRINCIPLE$ $PRINCIPLE_SELECTION_WITH_SELECTED_PRINCIPLE$"
 PRINCIPLE_SELECTION_UPGRADE_REPLACE_ACTIVE_PRINCIPLE: "[SelectLocalization(PowerBlocPrincipleSelectionWindow.IsUpgradingPrinciple, 'PRINCIPLE_SELECTION_UPGRADE_ACTIVE_PRINCIPLE', 'PRINCIPLE_SELECTION_REPLACE_ACTIVE_PRINCIPLE')]"
 PRINCIPLE_SELECTION_UPGRADE_ACTIVE_PRINCIPLE: "[Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')] verbessern"
 PRINCIPLE_SELECTION_REPLACE_ACTIVE_PRINCIPLE: "[Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')] ersetzen"
 PRINCIPLE_SELECTION_WITH_SELECTED_PRINCIPLE: "durch „[PowerBlocPrincipleSelectionWindow.GetSelectedPrinciple.GetName]“"
 PRINCIPLE_SELECTION_ADD_SELECTED_PRINCIPLE: "„[PowerBlocPrincipleSelectionWindow.GetSelectedPrinciple.GetName|U]“ hinzufügen"
 AVAILABLE_MANDATES_TITLE_FORMATION: "[SelectLocalization(EqualTo_int32(PowerBlocFormation.GetPrinciplePointsRemainingRaw, '(int32)1'), 'MANDATE_CONCEPT', 'MANDATES_CONCEPT')] verfügbar"
 AVAILABLE_MANDATES_TITLE: "Verfügbare [Concept('concept_power_bloc_mandate','$concept_power_bloc_mandates$')]"
 MANDATE_CONCEPT: "[concept_power_bloc_mandate]"
 MANDATES_CONCEPT: "[Concept('concept_power_bloc_mandate','$concept_power_bloc_mandates$')]"
 AVAILABLE_MANDATES_VALUE: "[PowerBlocPrincipleSelectionWindow.GetNumMandates] ([Negate_int32(PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple)])"
 AVAILABLE_MANDATES_VALUE_TOOLTIP: "#header [PowerBlocPrincipleSelectionWindow.GetNumMandates] verfügbare [Concept('concept_power_bloc_mandate','$concept_power_bloc_mandates$')]#!\n[LabelingHelper.GetRemainingDuration(PowerBlocPrincipleSelectionWindow.GetPowerBloc.GetNextMandateDate.Self, '')] bis das nächste $concept_power_bloc_mandate$ verfügbar ist"
 RESET_PRINCIPLES_TOOLTIP: "Alle [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')] zurücksetzen"
 REMOVE_PRINCIPLE: "Dieses [concept_power_bloc_principle] erstatten"
 RESEARCHING: "[GetPlayer.GetAltName('NOM')|U] erforscht derzeit „#variable [Technology.GetName]“#!\nFortschritt: $TECHNOLOGY_PROGRESS_WITH_GAIN_AND_TIME_LEFT$"
 NOT_RESEARCHING: "[GetPlayer.GetAltName('NOM')|U] erforscht derzeit nichts."
 BUTTON_DETAILS: "Zu den Details"
 BUTTON_DETAILS_FRONT: "Zur $concept_front$-Tafel"
 BUTTON_INTERACT: "Interagieren"
 NO_OF_UNREAD_PINS: "Es gibt #BOLD #V [InformationPanelBar.GetNumberOfUnreadPins]#!#! ungelesene Benachrichtigungen"
 FRONT_SIDE_YOU_AND_ALLIES: "Ihr und Eure Verbündeten ([FrontSide.GetCountry.GetFlagTextIcon])"
 FRONT_SIDE_ENEMY: "Feind ([FrontSide.GetCountry.GetFlagTextIcon])"
 FRONT_SIDE_COUNTRY: "[FrontSide.GetCountry.GetAdjective|U]e Seite"
 ALREADY_ACQUIRED_TITLE: "#BOLD Bekannte Technik#!"
 RESEARCH_PANEL: "#BOLD Neue Forschung wählen#!"
 SHOW_ON_MAP: "Auf der Karte zeigen"
 TECHNOLOGY_HEADER: "#BOLD Technik#!"
 GET_UNDISCOVERED_TECHNOLOGY_COST: "Kosten: #BOLD [Era.GetTechnologyCost] IP#!"
 ECONOMY_TYPE_DESCRIPTION: "Wirtschaft, Ära [Era.GetNumber]"
 MILITARY_TYPE_DESCRIPTION: "Militär, Ära [Era.GetNumber]"
 CULTURE_TYPE_DESCRIPTION: "Kultur, Ära [Era.GetNumber]"
 ALREADY_ACQUIRED_BUTTON: "Bekannte Techniken ansehen"
 TECHNOLOGY_AQUIRED_POPUP_HEADER: "#header [PlayerMessageItem.GetScopeTechnology.GetName] freigeschaltet#!"
 TECHNOLOGY_UNLOCKS_TEXT: "[Technology.GetTooltipWithoutRequirements(GetPlayer.Self)]"
 TECHNOLOGY_LORE_TEXT: "#lore [Technology.GetDesc]#!"
 NA: "Nicht verfügbar"
 JOURNAL_ENTRY_ON_ACTIVATION: "#title Bei Aktivierung:#!\n$EFFECT$"
 JOURNAL_ENTRY_ON_COMPLETION: "#title Bei Abschluss:#!\n$EFFECT$"
 JOURNAL_ENTRY_ON_FAILURE: "#title Bei Fehlschlag:#!\n$EFFECT$"
 JOURNAL_ENTRY_ON_INVALIDATION: "#title Bei Ungültigkeit:#!\n$EFFECT$"
 JOURNAL_ENTRY_ON_TIMEOUT: "#title Bei Zeitablauf:#!\n$EFFECT$"
 JOURNAL_ENTRY_EVENT_OUTCOMES: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Mögliche Ereignisauswirkungen#!#!"
 JOURNAL_ENTRY_EVENT_OUTCOMES_TOOLTIP: "#header $JOURNAL_ENTRY_NAME$ Mögliche Ereignisauswirkungen#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 JOURNAL_ENTRY_ON_TIMEOUT_LONG: "[JournalEntry.GetOnTimeoutTooltip]\n\nWird in #v [LabelingHelper.GetMultiTypeGameTimeDifferenceFromDays(JournalEntry.GetTimeoutDaysLeft, '(int32)5', '')]#! ablaufen"
 JOURNAL_ENTRY_TIMED_MODIFIERS_HEADER: "#title Die folgenden Effekte gelten, wenn aktiv:#!"
 HAS_ON_PULSE: "#debug Debug: Dieser Journaleintrag hat einen OnPulse#!"
 DEBUG_NO_CHARACTER_IN_GBR_IS_VICTORIA: "#debug Debug: Kein Charakter in GBR ist Victoria#!"
 ARKET_PANEL_STATES_IN_MARKET: "#header Marktverbindung#!\nStaatsregion „[StateRegion.GetName]“ ist mit [Market.GetName] verbunden"
 WORKS_AT: "$NAME$($NUM|0*$)"
 MARKET_INFRASTRUCTURE_INFO: "[concept_infrastructure] ([MARKET.GetName]): #variable $VAL|+$#!"
 MARKET_STATE_REGION_LIST_IN: "In?"
 STATE_REGION: "[concept_state_region]"
 MARKET_ACCESS: "[concept_market_access]"
 MARKET_ACCESS_SHORT: "[Concept('concept_market_access', 'Zugriff')]"
 WORLD_MARKET_ACCESS: "[concept_world_market_access]"
 WORLD_MARKET_ACCESS_SHORT: "[Concept('concept_world_market_access', 'Zugang')]"
 GDP_CONTRIBUTION: "[Concept('concept_gdp', '$concept_gdp_short$')]-Beteiligung"
 GDP_OWNERSHIP: "[Concept('concept_gdp','$concept_gdp_short$')]-Besitz"
 URBANIZATION: "[concept_urbanization]:"
 STATE_URBANIZATION_BUILDINGS_MAX_LEVEL_TOOLTIP: "#header Stufe der durch [concept_urbanization] entstandenen [Concept('concept_building','$concept_buildings$')]#!\n$MAX_LEVEL|v0$ Stufen im Staat „[State.GetName]“\n$TOOLTIP_DELIMITER$\n#v $URBANIZATION$#! $concept_urbanization$ im Staat „[State.GetName]“\n$URBANIZATION_PER_LEVEL|v0$ $concept_urbanization$ erzeugt je eine Stufe\n\n$BREAKDOWN$"
 STATE_URBANIZATION_NEEDED_PER_LEVEL_TOOLTIP: "#header [Concept('concept_urbanization', 'Urbanisierungsanforderung')] im Staat „[State.GetName]“#!\nJe $VALUE|v0$ $concept_urbanization$ im Staat „[State.GetName]“ erzeugen eine Stufe [GetBuildingType('building_urban_center').GetName]\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 URBANIZATION_NEEDED_PER_LEVEL_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|0v$#!#!"
 TOTAL_URBAN_CENTERS: "[GetBuildingType('building_urban_center').GetName]-Größe:"
 TOTAL_TRADE_CENTER: "[GetBuildingType('building_trade_center').GetName]-Größe:"
 TOTAL_MANOR_HOUSE: "[GetBuildingType('building_manor_house').GetName]-Größe:"
 TOTAL_FINANCIAL_DISTRICT: "[GetBuildingType('building_financial_district').GetName]-Größe:"
 TOTAL_BARRACKS: "[GetBuildingType('building_barracks').GetName]-Größe:"
 TOTAL_CONSCRIPTION_CENTER: "[GetBuildingType('building_conscription_center').GetName]s-Größe:"
 TOTAL_NAVAL_BASE: "[GetBuildingType('building_naval_base').GetName]-Größe:"
 TOTAL_URBANIZATION: "([concept_urbanization]: [Building.GetState.GetUrbanization|v])"
 UNUSED_ARABLE: "Unbenutztes [concept_arable_land]:"
 RESOURCE: "Ressource"
 AGRICULTURE: "Landwirtschaft"
 BUILDINGS_USING_THIS_LIST: "#title Verwendet in#!\n$LIST$"
 BUILDINGS_PRODUCING_THIS_LIST: "#title Produziert in#!\n$LIST$"
 OPEN_EXPANSION_LENS: "In anderen Staaten erweitern"
 STATE_INFRASTRUCTURE: "[concept_infrastructure]\n$STATE_INFRASTRUCTURE_CONDENSED$"
 STATE_MARKET_CAPITAL_STATUS: "[concept_market_capital]\n$STATE_MARKET_CAPITAL_STATUS_CONDENSED$"
 STATE_CAPITAL_STATUS: "[concept_capital_state]\n[State.GetOwner.GetAltName('NOM')|U]"
 STATE_SPLIT_STATE_STATUS: "[concept_split_state]\n[State.GetStateRegion.GetName]"
 STATE_MIGRATION_TARGET_STATUS: "[concept_migration_target]\n[State.GetMassMigrationCulture.GetName|l]e Menschen aus [State.GetMassMigrationOriginCountry.GetName]"
 STATE_MARKET_STATUS: "[State.GetMarket.GetName]\n[SelectLocalization(LessThan_CFixedPoint(State.GetInfrastructureBalance, '(CFixedPoint)0'), 'WARNING', '')][State.GetMarketAccess|%v0]"
 STATE_TRAIT_STATUS: "[StateTrait.GetName|v]\n#title Staatseigenschaft#!"
 STATE_POPULATION_STATUS: "[Concept('concept_pop', '$concept_population$')]\n$STATE_POPULATION_STATUS_CONDENSED$"
 STATE_SOL_STATUS: "[concept_sol]"
 STATE_GDP_STATUS: "$GDP_SHORT$\n$STATE_GDP_STATUS_CONDENSED$"
 STATE_DECREE_STATUS: "[Decree.GetName]"
 STATE_CONSTRUCTION: "[concept_construction]\n$STATE_CONSTRUCTION_CONDENSED$"
 STATE_CONSTRUCTION_CONDENSED: "[SelectLocalization(GreaterThan_int32(Country.GetNumBuildingsUnderConstructionInState(State.Self), '(int32)0'), 'STATE_CONSTRUCTION_ACTIVE', '')][SelectLocalization(GreaterThan_int32(Country.GetNumBuildingsInConstructionQueueInState(State.Self), '(int32)0'), 'STATE_CONSTRUCTION_IN_QUEUE', '')]"
 STATE_CONSTRUCTION_ACTIVE: "[Country.GetNumBuildingsUnderConstructionInState(State.Self)|v] aktiv"
 STATE_CONSTRUCTION_IN_QUEUE: "\n[Country.GetNumBuildingsInConstructionQueueInState(State.Self)|v] eingereiht"
 TOOLTIP_VIEW_CONDENSED: "#header Gekürzte Staaten-Tafel anzeigen#!"
 TOOLTIP_VIEW_DETAILED: "#header Detaillierte Staaten-Tafel anzeigen#!"
 WARNING: "@warning! "
 BUILDING_POPULATION_STATUS: "Angestellte\n[Building.GetNoOfEmployed|Kv]"
 IMPOSE_LAW_TOOLTIP: "#header [Law.GetCountry.GetAltName('DAT')|U] „[Law.GetName]“ auferlegen#!\n$TOOLTIP_DELIMITER$\n[SelectLocalization(Not(StringIsEmpty(GetDesc(Law.StartImposing))), 'FORCE_SUBJECT_TRIGGERS', '')]Dies würde [Law.GetCountry.GetAltName('AKK')|U] zwingen, beim [concept_law] „[Law.GetGroup.GetName]“ von „[Law.GetActiveGroupLaw.GetName]“ zu „[Law.GetName]“ zu wechseln [ConcatIfNeitherEmpty('\n', SelectLocalization(Not(StringIsEmpty(Law.GetOnImposeDesc)), 'FORCE_SUBJECT_EFFECTS', ''))]"
 LAW_RIGHT_CLICK_MENU_TITLE: "[concept_law_group] „[Law.GetGroup.GetName]“"
 FORCE_SUBJECT_EFFECTS: "\n\n#title Auswirkungen:#!\n[Law.GetOnImposeDesc]"
 FORCE_SUBJECT_TRIGGERS: "#title Anforderungen:#!\n[GetDesc(Law.StartImposing)]\n\n"
 IMPOSE_LAW_NOT_OVERLORD: "@red_cross! [GetPlayer.GetAltName('NOM')|U] muss [concept_overlord] [COUNTRY.GetAltName('VON')] sein, um ihnen ein [concept_law] aufzuerlegen"
 IMPOSE_LAW_NO_OPTIONS: "[SelectLocalization(StringIsEmpty(Law.GetCountry.GetCustom('impose_law_error')),'IMPOSE_LAW_NO_OPTIONS_NO_COOLDOWN',Law.GetCountry.GetCustom('impose_law_error'))]"
 IMPOSE_LAW_NO_OPTIONS_COOLDOWN: "@red_cross! Wir können [ROOT.GetCountry.GetAltName('DAT')] kein [concept_law] für weitere [ROOT.GetCountry.GetTimedModifierDurationRemaining('impose_law_cooldown')] auferlegen"
 IMPOSE_LAW_NO_OPTIONS_JOURNAL_ENTRY: "@red_cross! Setzt sich noch mit einem zuvor auferlegten [concept_law] auseinander"
 IMPOSE_LAW_NO_OPTIONS_NO_COOLDOWN: "@red_cross! Keine „[Law.GetGroup.GetName]“-[Concept('concept_law','$concept_laws$')] verfügbar, um sie [ROOT.GetCountry.GetAltName('DAT')] aufzuerlegen"
 UNDER_COLONIZATION: "Wachsende [concept_colony]"
 BEING_COLONIZED: "Wird [Concept('concept_colony', '$concept_colonized$')|l] von:\n[SelectLocalization(EqualTo_int32(State.GetNumColonizers,'(int32)1'),State.GetColonizers('STATE_REGION_COLONIZER_SINGLE_WIDGET'),State.GetColonizers('STATE_COLONIZER_WIDGET_ITEM'))]"
 TOOLTIP_COLONIZED: "#header Wird [Concept('concept_colony', '$concept_colonized$')|l]#!\n$TOOLTIP_DELIMITER$\nDer Staat „[State.GetName]“ wird kolonisiert von:\n[State.GetColonizers('STATE_REGION_COLONIZER_ITEM')]"
 STATE_REGION_COLONIZER_SINGLE_WIDGET: "[STATE.GetCountry.GetName]"
 STATE_REGION_COLONIZER_ITEM: "$TAB$[STATE.GetOwner.GetName] ([STATE.GetName])\n"
 STATE_COLONIZER_WIDGET_ITEM: "[STATE.GetCountry.GetFlagTextIcon] "
 STATE_INFRASTRUCTURE_USAGE_TOOLTIP: "#header [concept_infrastructure_usage]#!\n[SelectLocalization(EqualTo_CFixedPoint(State.GetInfrastructureUsage, '(CFixedPoint)0'), 'NO_STATE_INFRASTRUCTURE_USAGE_DESC', 'STATE_INFRASTRUCTURE_USAGE')]"
 STATE_INFRASTRUCTURE_USAGE: "[State.GetName] nutzt #v [Multiply_CFixedPoint(State.GetInfrastructureUsage,'(CFixedPoint)-1')|0+]#! [concept_infrastructure]\n$TOOLTIP_DELIMITER$\n[State.GetInfrastructureUsageDesc]"
 STATE_INFRASTRUCTURE_TOOLTIP: "#header [concept_infrastructure]#!\n[SelectLocalization(LessThanOrEqualTo_CFixedPoint(State.GetInfrastructure, '(CFixedPoint)0'), 'NO_STATE_INFRASTRUCTURE_DESC', 'STATE_INFRASTRUCTURE_TOOLTIP_HAS_INFRASTRUCTURE')]"
 STATE_INFRASTRUCTURE_TOOLTIP_HAS_INFRASTRUCTURE: "[State.GetName] hat [State.GetInfrastructure|+0] [concept_infrastructure]\n$TOOLTIP_DELIMITER$\n[State.GetInfrastructureDesc]"
 NO_STATE_INFRASTRUCTURE_DESC: "[State.GetName] hat keine [concept_infrastructure]"
 STATE_INFRASTRUCTURE_DESC: "#header [concept_infrastructure]-Saldo#!\nDer [concept_infrastructure]-Saldo in [State.GetName] beträgt [State.GetInfrastructureBalance|0+=]\n$TOOLTIP_DELIMITER$\n[SelectLocalization(LessThanOrEqualTo_CFixedPoint(State.GetInfrastructure, '(CFixedPoint)0'), 'NO_STATE_INFRASTRUCTURE_DESC', 'STATE_INFRASTRUCTURE_DESC_HAS_INFRASTRUCTURE')]\n\n[SelectLocalization(EqualTo_CFixedPoint(State.GetInfrastructureUsage, '(CFixedPoint)0'), 'NO_STATE_INFRASTRUCTURE_USAGE_DESC', 'STATE_INFRASTRUCTURE_USAGE_DESC')]"
 STATE_INFRASTRUCTURE_DESC_HAS_INFRASTRUCTURE: "#title Die [concept_infrastructure] von #v [State.GetInfrastructure|0+]#! beruht auf Folgendem:#!\n#indent_newline:3 [State.GetInfrastructureDesc]#!"
 STATE_INFRASTRUCTURE_USAGE_DESC: "#title Die [concept_infrastructure_usage] von #v [Multiply_CFixedPoint(State.GetInfrastructureUsage,'(CFixedPoint)-1')|0+]#! beruht auf Folgendem:#!\n#indent_newline:3 [State.GetInfrastructureUsageDesc]#!"
 NO_STATE_INFRASTRUCTURE_USAGE_DESC: "[State.GetName] hat derzeit keine [concept_infrastructure_usage]"
 STATE_PANEL_INFRASTRUCTURE_DESC: "#header [concept_infrastructure]#!\n[concept_infrastructure] in [State.GetName]: #v [State.GetInfrastructure|0]#!\n$TOOLTIP_DELIMITER$\n[State.GetInfrastructureDesc]"
 STATE_PANEL_INFRASTRUCTURE_USAGE_DESC: "#header [concept_infrastructure_usage]#!\n[concept_infrastructure_usage] in [State.GetName]: #v [Multiply_CFixedPoint(State.GetInfrastructureUsage,'(CFixedPoint)-1')|0+]#!\n$TOOLTIP_DELIMITER$\n[State.GetInfrastructureUsageDesc]"
 STATE_TRAIT_STATE_MODIFIER: "Staatsmodifikatoren"
 STATE_TRAIT_STATE_REGION_MODIFIER: "Staatsregionsmodifikatoren:"
 BUILDING_PROGRESS_TOOLTIP: "#header [Building.GetName]#!\nBaufortschritt: #VARIABLE [Building.GetConstructionProgressPercentage|%]#!\nWöchentliche [concept_construction]-Zuweisungen: @construction!#v #tooltippable #tooltip:[Building.GetTooltipTag],CONSTRUCTION_SPEED_TOOLTIP [Building.GetConstructionSpeedPerWeek|2]#!#!#!\nVerbleibende Zeit: #VARIABLE [Building.GetConstructionRemainingWeeksDesc]#!"
 BUILDING_PROGRESS_TOOLTIP_QUEUED: "#header [Building.GetName]#!\nIn der Baureihe [Country.GetAltName('GEN')]"
 DOUBLE_NEWLINE: "\n\n"
 PRODUCING_GOODS: "#title Produziert „[Goods.GetName|U]“:#!"
 USING_GOODS: "#title Verwendet „[Goods.GetName|U]“:#!"
 STATE_WORLD_MARKET_ACCESS: "[concept_world_market_access]\n[State.GetWorldMarketAccessFormatted]"
 STATE_WORLD_MARKET_ACCESS_DESC: "#header [concept_world_market_access]#!\n[State.GetWorldMarketAccessFormatted] für „[State.GetName|U]“\n[MakeLineIf(IsZero(State.GetTradeCapacity), 'NO_WORLD_MARKET_ACCESS_DUE_TO_NO_TRADE_CAPACITY')]$TOOLTIP_DELIMITER$\n[State.GetWorldMarketAccessDesc]"
 STATE_TRADE_CAPACITY: "[concept_trade_capacity]\nVerwendet #tooltippable #tooltip:[State.GetTooltipTag],STATE_TRADE_CAPACITY_USAGE_TOOLTIP [State.GetTradeCapacityUsage|v0]#!#! von #tooltippable #tooltip:[State.GetTooltipTag],STATE_TRADE_CAPACITY_TOOLTIP [State.GetTradeCapacity|v0]#!#!"
 STATE_TRADE_CAPACITY_TOOLTIP: "[State.GetTradeCapacityDesc]"
 STATE_TRADE_CAPACITY_USAGE_TOOLTIP: "[State.GetTradeCapacityUsageDesc]"
 STATE_TRADE_CAPACITY_DESC: "#header [concept_trade_capacity]#!\n[State.GetTradeCapacityUsage|v0]/[State.GetTradeCapacity|v0] in „[State.GetName|U]“\n$TOOLTIP_DELIMITER$\n[State.GetTradeCapacityDesc]"
 NO_WORLD_MARKET_ACCESS_DUE_TO_NO_TRADE_CAPACITY: "@red_cross! Handelt nicht auf dem [concept_world_market] aufgrund von fehlendem „[State.GetBuilding('building_trade_center').GetName]“"
 TRADE_CAPACITY_DESC: "#header [concept_trade_capacity]#!\n$VALUE|v0$ für „$STATE_NAME$“\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 TRADE_CAPACITY_USAGE_DESC: "#header [Concept('concept_trade_capacity','$concept_trade_capacity_usage$')]#!\n$VALUE|v0$/$CAPACITY|v0$ für „$STATE_NAME$“\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 TRADE_CAPACITY_USAGE_IMPORTS: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|=v$#!#! durch den Import von $AMOUNT|0v$ [GOODS.GetTextIcon] „[GOODS.GetName]“"
 TRADE_CAPACITY_USAGE_EXPORTS: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|=v$#!#! durch den Export von $AMOUNT|0v$ [GOODS.GetTextIcon] „[GOODS.GetName]“"
 TRADE_CAPACITY_GOODS_USAGE: "#header [Concept('concept_good', '$concept_goods$')]-[concept_trade_capacity]-Nutzung#!\n$VALUE|=v$ für $AMOUNT|0v$ [GOODS.GetTextIcon] „[GOODS.GetName]“\n$TOOLTIP_DELIMITER$\n$QUANTITY|0v$ [concept_traded_quantity] für [GOODS.GetTextIcon][Nbsp]„[GOODS.GetName]“"
 TRADE_CAPACITY_EXPLAINER: "[concept_trade_capacity]\n$TOOLTIP_DELIMITER$\nDie Höhe der Kapazität des [Concept('concept_state', 'Staats')] für [concept_trade] mit dem [concept_world_market]"
 WORLD_MARKET_ACCESS_NO_HUB: "Da dieser Staat nicht mit einem [concept_world_market_hub] verbunden ist, hat dieser $concept_state$ #n 0 %#! $concept_world_market_access$"
 WORLD_MARKET_ACCESS_IS_HUB: "„[STATE.GetName|U]“ ist ein [concept_world_market_hub] für „[STATE.GetMarket.GetName]“"
 WORLD_MARKET_ACCESS_HAS_HUB: "Verbunden mit dem [concept_world_market] durch [Concept('concept_world_market_hub','$concept_world_market_hub_short$')] in „[STATE.GetName|U]“"
 WORLD_MARKET_NO_SEA_REGION_TRADE: "Kein [concept_world_market]-[concept_trade]"
 WORLD_MARKET_SEA_REGION_TRADE_TOOLTIP: "[SeaRegionPanel.GetWorldMarketTradeBreakdown(Goods.Self)]"
 WORLD_MARKET_SEA_REGION_TRADE_BREAKDOWN: "#header [concept_trade] mit „[GOODS.GetName]“ durch $SEA_NODE_NAME$#!\nGesamthandel: $TOTAL|v0D$\n$DETAILS$"
 WORLD_MARKET_SEA_REGION_TRADE_IMPORTS_ENTRY: "$AMOUNT|v0D$ importiert über [Concept('concept_world_market_hub','$concept_world_market_hub_short$')] in [STATE.GetOwner.GetFlagTextIcon] [STATE.GetName|U] ([STATE.GetMarket.GetName])"
 WORLD_MARKET_SEA_REGION_TRADE_EXPORTS_ENTRY: "$AMOUNT|v0D$ exportiert über [Concept('concept_world_market_hub','$concept_world_market_hub_short$')] in [STATE.GetOwner.GetFlagTextIcon] [STATE.GetName|U] ([STATE.GetMarket.GetName])"
 INFRASTRUCTURE_FROM_STATE: "$VALUE|+=1$ durch [concept_state]:\n$BREAKDOWN$"
 INFRASTRUCTURE_FROM_POPS: "$VALUE|+=1$ durch [Concept('concept_pop', '$concept_pops$')] $CAP_BREAKDOWN$:\n$BREAKDOWN$"
 INFRASTRUCTURE_FROM_POPS_CAPPED: "($VALUE|+=1$ gedeckelt bei einem Maximalwert von $CAP|1v$)"
 INFRASTRUCTURE_FROM_GOODS: "$VALUE|+=1$ durch [concept_pop]-Verbrauch von „[GOODS.GetName]“:\n$BREAKDOWN$"
 NEXT_PAGE: "Nächste Seite"
 PREVIOUS_PAGE: "Vorige Seite"
 AMOUNT: "Menge"
 CONSTRUCTION_QUEUE_HEADER: "Baureihe"
 CONSTRUCTION_QUEUE_BUILDING_IN_STATE: "„[ConstructionQueueElement.GetBuilding.GetName]“ in [AddTextIf(Not(ConstructionQueueElement.GetState.GetOwner.IsLocalPlayer), ConstructionQueueElement.GetState.GetOwner.GetFlagTextIcon)][ConstructionQueueElement.GetBuilding.GetState.GetName]"
 CONSTRUCTION_QUEUE_ITEM_VALID: "#header Erweiterung des Gebäudes „[Building.GetName]“ im Staat „[State.GetName]“#!\n[AddTextIf(ConstructionQueueElement.IsCurrentlyUnderConstruction, '$WEEKS|v$ Woche(n) bis zur Fertigstellung\n')]$TOOLTIP_DELIMITER$\n#v $PROGRESS|0$#!/#v $REQUIRED|0$#! [concept_construction]-Fortschritt (#v $PERCENT_COMPLETE|%$#!)\n#v Die [ConstructionQueueElement.GetBaseConstructionSpeed|2]#! $concept_construction$ [COUNTRY.GetAltName('VON')] erzeugen wöchentlich #v #tooltippable #tooltip:[ConstructionQueueElement.GetTooltipTag],CONSTRUCTION_QUEUE_SPEED_TOOLTIP $SPEED$#!#!#! Fortschritt[SelectLocalization(NotEqualTo_CFixedPoint(State.GetConstructionEfficiency, '(CFixedPoint)0'), 'CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY_LINE_BREAK', '')][ConcatIfNeitherEmpty('\n',ConstructionQueueElement.GetCompanyConstructionBonusDesc)]"
 CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY: "#tooltippable #tooltip:[State.GetTooltipTag],STATE_CONSTRUCTION_EFFICIENCY_TOOLTIP #v [State.GetConstructionEfficiency|%1+=]#!#!#! [concept_construction]-Effizienz im Staat „[State.GetName]“"
 CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY_WARNING: "@warning! $CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY$\n"
 CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY_LINE_BREAK: "\n$CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY$"
 STATE_CONSTRUCTION_EFFICIENCY_TOOLTIP: "[State.GetConstructionEfficiencyTooltip]"
 CONSTRUCTION_QUEUE_ITEM_INVALID: "#header [Building.GetName] in [State.GetName]#!\n$TOOLTIP_DELIMITER$\n$INVALID_DESC$"
 CONSTRUCTION_SPEED_BASE_TOOLTIP: "#tooltip_header @construction![Nbsp][concept_construction]#![AddLocalizationIf(Country.IsConstructionPaused, 'CONSTRUCTION_IS_PAUSED')]\nGesamt: #v [Country.CalcBaseConstructionSpeed|0]#!\nIn Verwendung: #v [Country.CalcUsedConstruction|0]#!/[Country.CalcBaseConstructionSpeed|0]\n$TOOLTIP_DELIMITER$\n[Country.GetBaseConstructionSpeedDesc]"
 CONSTRUCTION_QUEUE_TOOLTIP: "[Country.GetConstructionQueueDesc]"
 STATE_CONSTRUCTION_QUEUE_TOOLTIP: "[State.GetName] hat [State.GetCountry.GetNumBuildingsUnderConstructionInState(State.Self)|v] [Concept('concept_building', '$concept_buildings$')] [Concept('concept_under_construction', 'im Bau')]"
 CONSTRUCTION_QUEUE_DESC: "#header [concept_construction]#! [Country.GetAltName('IN')][AddLocalizationIf(Country.IsConstructionPaused, 'CONSTRUCTION_IS_PAUSED')]\n$TOOLTIP_DELIMITER$\n[Country.GetAltName('NOM')|U] produziert jede Woche insgesamt @construction!#v #tooltippable #tooltip:[Country.GetTooltipTag],CONSTRUCTION_SPEED_BASE_TOOLTIP [Country.CalcBaseConstructionSpeed|1]#!#!#! $concept_construction$.\n$CONSTRUCTION_PRIVATE_ALLOCATION_DESC$\n$CONSTRUCTION_GOVERNMENT_PROJECTS_DESC$[ConcatIfNeitherEmpty('\n', Country.GetPrivateConstructionQueueDesc)]"
 PRIVATE_CONSTRUCTION_DISABLED_DESC: "Kein [concept_private_construction] aufgrund von:\n$TAB$$BREAKDOWN$"
 CONSTRUCTION_PRIVATE_ALLOCATION_DESC: "Privatbau-Zuweisung: #v #tooltip:[Country.GetTooltipTag],CONSTRUCTION_PRIVATE_ALLOCATION_TOOLTIP #tooltippable [Country.GetModifier.GetValueFor('country_private_construction_allocation_mult')|%0]#!#!#!"
 CONSTRUCTION_PRIVATE_ALLOCATION_TOOLTIP: "#header #v [Country.GetAdjective]e Privatbau-Zuweisung: [Country.GetModifier.GetValueFor('country_private_construction_allocation_mult')|%0]#!#!\n$TOOLTIP_DELIMITER$\n[Country.GetModifier.GetDescFor('country_private_construction_allocation_mult')]"
 CONSTRUCTION_GOVERNMENT_PROJECTS_DESC: "Es werden #v [Country.GetNumActiveGovernmentConstructionQueueElements]#! [Concept('concept_government_construction', '$concept_government_constructions$')] errichtet, wobei #v @construction! [Country.CalcUsedGovernmentConstruction|1]#! (#v [Country.CalcRelativeUsedGovernmentConstruction|%0]#!) [concept_construction] verwendet wird. Weitere #v [Country.GetNumInactiveGovernmentConstructionQueueElements]#! [Concept('concept_government_construction', '$concept_government_constructions$')] befinden sich in der Reihe."
 CONSTRUCTION_PRIVATE_PROJECTS_DESC: "Es werden #v [Country.GetNumActivePrivateConstructionQueueElements]#! [Concept('concept_private_construction', '$concept_private_constructions$')] errichtet, wobei #v @construction! [Country.CalcUsedPrivateConstruction|1]#! (#v [Country.CalcRelativeUsedPrivateConstruction|%0]#!) [concept_construction] verwendet wird. Weitere #v [Country.GetNumInactivePrivateConstructionQueueElements]#! [Concept('concept_private_construction', '$concept_private_constructions$')] befinden sich in der Reihe."
 CONSTRUCTION_IS_PAUSED: "\nSämtlicher $concept_construction$ ist derzeit #b pausiert#!"
 CONSTRUCTION_QUEUE_ACTIVE_PROJECTS: "[Country.GetActiveConstructionProjectsDesc]"
 CONSTRUCTION_QUEUE_ACTIVE_PROJECTS_NO_ITEMS: "Kein Projekt [concept_under_construction|l]"
 CONSTRUCTION_QUEUE_INACTIVE_PROJECTS: "[Country.GetInactiveConstructionProjectsDesc]"
 CONSTRUCTION_QUEUE_INACTIVE_PROJECTS_NO_ITEMS: "Keine weiteren Projekte in der [concept_construction_queue]"
 CONSTRUCTION_SPEED_TOOLTIP: "[Building.GetConstructionSpeedPerWeekDesc]"
 CONSTRUCTION_QUEUE_SPEED_TOOLTIP: "[ConstructionQueueElement.GetConstructionSpeedPerWeekDesc]"
 CONSTRUCTION_QUEUE_DESC_ITEM: "[BUILDING.GetName] in [STATE.GetName]: #v $BASE_SPEED$#! (Maximal #v $MAX_BASE_SPEED$#!)[AddTextIf($IS_UNDER_CONSTRUCTION$ ,' - #v $WEEKS_LEFT$#! Woche(n) bis zur Fertigstellung' )]"
 CONSTRUCTION_QUEUE_DESC_BACKLOG_ITEM: "[BUILDING.GetName] in [STATE.GetName]: (in der Reihe)[AddTextIf($IS_UNDER_CONSTRUCTION$ ,' - #v $WEEKS_LEFT$#! Woche(n) bis zur Fertigstellung)]"
 CONSTRUCTION_QUEUE_DESC_INVALID_ITEM: "[BUILDING.GetName] in [STATE.GetName] #N (Ungültig)#!"
 CONSTRUCTION_QUEUE: "[concept_construction_queue]"
 CONSTRUCTION_QUEUE_STATE: "[concept_construction] #v @construction! #tooltippable #tooltip:[State.GetOwner.GetTooltipTag],CONSTRUCTION_SPEED_BASE_TOOLTIP [State.GetOwner.CalcUsedConstruction|0]/[State.GetOwner.CalcBaseConstructionSpeed|0]#!#!#!"
 CONSTRUCTION_QUEUE_IS_EMPTY: "Nichts [Concept('concept_under_construction', 'im Bau')]"
 CONSTRUCTION_QUEUE_HIDDEN_ELEMENTS: "+[Country.GetNumHiddenConstructionQueueElements|v] weitere Projekte in der Baureihe"
 CONSTRUCTION_BUTTON_IDLE: "Untätig"
 CONSTRUCTION_BUTTON_IDLE_TOOLTIP: "$CONSTRUCTION_QUEUE_STATUS_IDLE_DESC$"
 CONSTRUCTION_BUTTON_PAUSE: "Alle pausieren"
 CONSTRUCTION_BUTTON_PAUSE_TOOLTIP: "$CONSTRUCTION_QUEUE_STATUS_ACTIVE_DESC_DATA$\nKlicken, um den gesamten [concept_government_construction] zu pausieren"
 CONSTRUCTION_BUTTON_RESUME: "Fortsetzen"
 CONSTRUCTION_BUTTON_RESUME_TOOLTIP: "$CONSTRUCTION_QUEUE_STATUS_PAUSED_DESC_DATA$\nKlicken, um den gesamten [concept_government_construction] fortzusetzen"
 CONSTRUCTION_ALREADY_PAUSED: "Die Bauarbeiten wurden bereits pausiert."
 CONSTRUCTION_IN_DEFAULT: "Der Bau kann nicht fortgesetzt werden, solange [COUNTRY.GetAltName('NOM')] bankrott ist."
 CONSTRUCTION_ALREADY_RUNNING: "Die Bauarbeiten sind bereits in vollem Gange."
 CONSTRUCTION_BUILDING_PER_WEEK: "@construction! [Building.GetConstructionSpeedPerWeek|0]"
 CONSTRUCTION_QUEUE_ELEMENT_ALLOCATION: "@construction! [ConstructionQueueElement.GetBaseConstructionSpeed|1]"
 CONSTRUCTION_VALUE: "[SelectLocalization(Country.IsConstructionPaused, 'CONSTRUCTION_DURATION_PAUSED', 'CONSTRUCTION_VALUE_WITHOUT_ICON')]"
 CONSTRUCTION_VALUE_WITHOUT_ICON: "#v [Country.CalcUsedConstruction|0]#!/[Country.CalcBaseConstructionSpeed|0]"
 CONSTRUCTION_VALUE_WITH_ICON: "@construction! #v [Country.CalcUsedConstruction|0]#!/[Country.CalcBaseConstructionSpeed|0]"
 NO_CONSTRUCTION: "Derzeit befinden sich keine [Concept('concept_building', '$concept_buildings$')] [Concept('concept_under_construction', 'im Bau')]"
 NOTHING_CONSTRUCTING: "Derzeit befindet sich nichts [Concept('concept_under_construction', 'im Bau')]"
 USED_VS_UNUSED_CONSTRUCTION: "#v [GetPlayer.CalcUsedConstruction|0]#!/[GetPlayer.CalcBaseConstructionSpeed|0]"
 IN_CONSTRUCTION_QUEUE: "#v [GetPlayer.GetNumInactiveConstructionQueueElements|=]#!"
 IN_CONSTRUCTION_QUEUE_TOOLTIP: "#header [GetPlayer.GetNumInactiveConstructionQueueElements|=] [Concept('concept_building', '$concept_buildings$')] in der [concept_construction_queue]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetInactiveConstructionProjectsDesc]"
 QUEUED: "Eingereiht"
 CONSTRUCTION_QUEUE_FILTER_FUNDING: "Finanzierung"
 CONSTRUCTION_QUEUE_FILTER_FUNDING_NATIONAL: "Regierung ([ConstructionPanel.GetNumGovernmentConstructionQueueElements(GetPlayer)])"
 CONSTRUCTION_QUEUE_FILTER_FUNDING_PRIVATE: "Privat ([ConstructionPanel.GetNumPrivateConstructionQueueElements(GetPlayer)])"
 CONSTRUCTION_QUEUE_FILTER_FUNDING_ALL_TT: "#header $ALL$ #!\nSowohl [concept_government_construction] als auch [concept_private_construction] anzeigen"
 CONSTRUCTION_QUEUE_FILTER_FUNDING_NATIONAL_TT: "#header $CONSTRUCTION_QUEUE_FILTER_FUNDING_NATIONAL$ #!\nNur [concept_government_construction] anzeigen"
 CONSTRUCTION_QUEUE_FILTER_FUNDING_PRIVATE_TT: "#header $CONSTRUCTION_QUEUE_FILTER_FUNDING_PRIVATE$ #!\nNur [concept_private_construction] anzeigen"
 CONSTRUCTION_QUEUE_PRIVATE_INVESTMENT_TT: "Investiert derzeit in „[ConstructionQueueElement.GetBuilding.GetName]“ in „[ConstructionQueueElement.GetBuilding.GetState.GetName]“"
 CONSTRUCTION_QUEUE_PRIVATE_INVESTMENT_VIRTUAL_BUILDING_TT: "Sobald der [concept_construction] abgeschlossen ist, erscheinen die neuen „[BuildingType.GetName]“ in „[State.GetName]“ und [Concept('concept_privately_owned', 'besitzt privat')] die neue „[ConstructionQueueElement.AccessBuilding.GetName]“-[concept_building_level]."
 CONSTRUCTION_QUEUE_FILTER_SUMMARY: "[SelectLocalization(ConstructionPanel.IsShowingGovernmentConstructions, 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_GOV', 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_PRIV')]"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_GOV: "[SelectLocalization(Not(ConstructionPanel.IsFiltered('is_domestic')), 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_ALL_GOVT', SelectLocalization(ConstructionPanel.IsFilterYes('is_domestic'), 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_DOM_GOVT', 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_ABR_GOVT'))]"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_PRIV: "[SelectLocalization(Not(ConstructionPanel.IsFiltered('is_domestic')), 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_ALL_PRIV', SelectLocalization(ConstructionPanel.IsFilterYes('is_domestic'), 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_DOM_PRIV', 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_ABR_PRIV'))]"
 EXPAND_BUILDING_TYPE_RIGHT_TEXT: "[BuildingType.GetNumLevelsInCountryFormatted(GetPlayer.Self)]"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_ALL_GOVT: "[concept_government_construction]"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_ALL_PRIV: "[concept_private_construction]"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_DOM_GOVT: "[concept_government_construction] im Inland"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_DOM_PRIV: "[concept_private_construction] im Inland"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_ABR_GOVT: "[concept_government_construction] in fremden [Concept('concept_country', '$concept_countries$n')]"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_ABR_PRIV: "[concept_private_construction] in fremden [Concept('concept_country', '$concept_countries$n')]"
 CONSTRUCTION_QUEUE_NO_CONSTRUCTION_SECTOR: "Kein(e) „[BuildingType.GetNameNoFormatting]“"
 CONSTRUCTION_TAB_DOMESTIC: "Nationalreihe"
 CONSTRUCTION_TAB_FOREIGN: "Auslandsreihen ([GetPlayer.GetTotalForeignConstructions])"
 FOREIGN_QUEUE_NO_INVESTORS_EMPTY_STATE: "Kein fremdes [concept_country] kann [concept_foreign_investment|l] [GetPlayer.GetAltNameNoFlag('IN')] tätigen.\n\nWenn wir ein [concept_subject] oder einen [concept_treaty] über [concept_foreign_investment_rights|l] abschließen, werden hier ausländische [Concept('concept_construction', '$concept_constructions$')] erscheinen."
 FOREIGN_QUEUE_NO_CONSTRUCTION_EMPTY_STATE: "[Country.GetAltNameNoFlag('NOM')|U] baut derzeit nichts in unserem [concept_country]"
 FOREIGN_QUEUE_COUNTRY_HEADER: "[Country.GetAdjective|U]er Bau in unserem $concept_country$"
 FOREIGN_QUEUE_COUNTRY_OVERLORD_TT: "#header [concept_overlord]#!\n[Country.GetAltName('NOM')|U] kann [concept_foreign_investment|l] in unserem [concept_country] tätigen, weil diese Nation unser $concept_overlord$ ist"
 FOREIGN_QUEUE_COUNTRY_MUTUAL_PACT_TT: "#header Pakt über wechselseitige [concept_foreign_investment_rights|l]#!\n[Country.GetAltName('NOM')|U] kann [concept_foreign_investment|l] in unserem [concept_country] tätigen, weil wir einen wechselseitigen [concept_treaty] haben"
 FOREIGN_QUEUE_COUNTRY_ONE_WAY_PACT_TT: "#header Pakt über [concept_foreign_investment_rights|l]#!\n[COUNTRY.GetAltName('NOM')|U] kann [concept_foreign_investment|l] in unserem [concept_country] tätigen, da wir dies gewährt haben"
 BUILDING_PREDICTION_DISCLAIMER: "@information! Einnahmen-, Unterhalts- und $concept_productivity$s-Prognose für neue [Concept('concept_construction','$concept_constructions$')] berücksichtigen die geschätzten zukünftigen Preisauswirkungen von in der Warteschlange stehenden $concept_constructions$ und unterbesetzten [Concept('concept_building', '$concept_buildings$n')]"
 SHOW_PRIVATE_CONSTRUCTIONS: "[Concept('concept_private_construction', '$concept_private_constructions$')] anzeigen ([GetMetaPlayer.GetPlayedOrObservedCountry.GetNumPrivateConstructionsInQueue|v])"
 SHOW_GOVERNMENT_CONSTRUCTIONS: "[Concept('concept_government_construction', '$concept_government_constructions$')] anzeigen ([GetMetaPlayer.GetPlayedOrObservedCountry.GetNumGovernmentConstructionsInQueue|v])"
 BUILDING_DETAILS_EMPLOYMENT_TOOLTIP: "#header [Building.GetName] in [Building.GetState.GetName]#!\nGröße: [Building.GetExpansionLevelBreakdownDesc]\nBeschäftigung: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Angestellte#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)\n$TOOLTIP_DELIMITER$\n[Building.GetInputOutputTooltip]"
 BUILDING_EMPLOYMENT_UNCAPPED_TOOLTIP: "#header [Building.GetName]#!\n$BUILDING_EMPLOYMENT_UNCAPPED$"
 BUILDING_EMPLOYMENT_TOOLTIP: "#header [Building.GetName]#!\n$BUILDING_EMPLOYMENT_CAPPED$"
 BUILDING_EMPLOYMENT_CAPPED: "Beschäftigung: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Angestellte#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)"
 BUILDING_EMPLOYMENT_UNCAPPED: "Beschäftigung: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Angestellte#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)"
 BUILDING_LEVEL: "[concept_building_level]"
 BUILDING_LEVEL_HEADER_TOOLTIP: "#header [concept_building_level]#!\n$TOOLTIP_DELIMITER$\nDie derzeitige $concept_building_level$."
 BUILDING_SIZE_TOOLTIP: "#header [Building.GetName]#!\nGröße: [Building.GetExpansionLevel|v]"
 BUILDING_INFO_TOOLTIP: "$BUILDING_TOOLTIP_BASE_P1$\n[Building.GetTooltip]"
 BUILDING_TOOLTIP_BASE_P1: "#header [Building.GetName]#!"
 CASH_RESERVES_INFO: "[concept_cash_reserves]: #variable [Building.GetCurrentCashReserves|D]#! [GetTrendIcon(Building.GetCashReservesTrend)] / #maximum [Building.GetMaxCashReserves|k]#!"
 PRODUCTIVITY_INFO: "[concept_productivity]: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_PRODUCTIVITY,GraphTooltipProductivity @money![Building.GetAverageAnnualEarningsPerEmployeeFormatted|+]#!#! (#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_BUILDING_TYPE,GraphTooltipTypeProfitability [Building.GetProfitabilityCompareIconInType]#!#! / #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_WORLD,GraphTooltipWorldProfitability [Building.GetProfitabilityCompareIcon]#!#!)"
 PRODUCTIVITY_INFO_LOWERCASE: "[concept_productivity]:\n$PRODUCTIVITY_INFO_NO_HEADER$"
 PRODUCTIVITY_INFO_NO_HEADER: "#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_PRODUCTIVITY,GraphTooltipProductivity @money![Building.GetAverageAnnualEarningsPerEmployeeFormatted|+]#!#! (#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_BUILDING_TYPE,GraphTooltipTypeProfitability [Building.GetProfitabilityCompareIconInType]#!#! / #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_WORLD,GraphTooltipWorldProfitability [Building.GetProfitabilityCompareIcon]#!#!)"
 BUILDING_CASH_RESERVES_TOOLTIP: "#header [concept_cash_reserves]#!\nWert: #variable [Building.GetCurrentCashReserves|D]#! [GetTrendIcon(Building.GetCashReservesTrend)] / #maximum [Building.GetMaxCashReserves|k]#!\n\n[concept_cash_reserves_desc]"
 BUILDING_CASH_RESERVES: "Rücklagen: [Building.GetCurrentCashReserves|Dv]"
 LOW_LEGITIMACY_GOVERNMENT_CONFIRMATION: "#header Illegitime Regierung#!\nDiese Konstellation hat eine sehr niedrige Legitimität. Sind Sie sicher, dass Sie fortfahren wollen?\n\n#title Auswirkungen:#!\n[GetLegitimacyLevel('legitimacy_level_illegitimate').GetEffects]"
 PRODUCTIVITY_SPAN_FORMAT: "@money!$MIN$ - @money!$MAX$"
 PRODUCTIVITY_SPAN_FORMAT_SAME: "@money!$MIN$"
 PRODUCTIVITY_SPAN_TOOLTIP: "#header [concept_productivity]#!\nDie [concept_productivity] in Gebäuden der Art „[BuildingType.GetName]“ [GetPlayer.GetAltName('IN')] beträgt [BuildingType.GetProductivitySpanDesc(GetPlayer.Self)]"
 EMPLOYMENT_BAR: "Beschäftigung: [Building.GetNoOfEmployed|1*v]"
 EARNINGS_PER_EMPLOYEE: "Einkommen pro Angestelltem"
 WORLD_PROFITABILITY_HEADER: "$EARNINGS_PER_EMPLOYEE$ im Vergleich zu allen Gebäuden"
 BUILDING_PROFITABILITY_HEADER: "$EARNINGS_PER_EMPLOYEE$"
 BUILDING_PROFITABILITY_HEADER_TOOLTIP: "#header [concept_productivity]#!\n$TOOLTIP_DELIMITER$\nJährliches Durchschnitts-$EARNINGS_PER_EMPLOYEE$."
 BUILDING_TAXATION_CAPACITY_HEADER_TOOLTIP: "#header $concept_tax_capacity$s-Saldo#!\n$TOOLTIP_DELIMITER$\nDer Saldo aus [concept_tax_capacity] und Nutzung in einem Staat."
 BUILDING_PRODUCTIVITY_HEADER: "Durchschnittliches jährliches $EARNINGS_PER_EMPLOYEE$"
 GOVERNMENTAL_EXPENSES: "Regierungsausgaben: #tooltippable #tooltip:[Building.GetTooltipTag],BUILDING_GOVERNMENT_EXPENSES_DESC #N @money!-[Building.GetGovernmentExpenses|D-]#!#!#!"
 NOT_FULLY_EMPLOYED: "#header #red „[Building.GetName]“ kann nicht voll besetzt werden#!#!\n$TOOLTIP_DELIMITER$\nBeschäftigung: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Angestellte#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)[ConcatIfNeitherEmpty('\n\n',Building.GetAllFailedHiresDesc)]"
 NOT_HIRING: "#header #red [SelectLocalization(Building.ShouldShowAsUnableToHire,'NOT_HIRING_UNABLE','NOT_HIRING_UNWILLING')]#!#!\n$TOOLTIP_DELIMITER$\nBeschäftigung: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Angestellte#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)\n\n[Building.GetNotHiringReasonDesc][Building.GetAdjustHiringTargetDesc]"
 NOT_HIRING_UNABLE: "[Building.GetName] in [Building.GetState.GetName] können nicht anstellen"
 NOT_HIRING_UNWILLING: "[Building.GetName] in [Building.GetState.GetName] wollen nicht anstellen"
 EMPLOYMENT_HINT: "\n\n@information! Die [Concept('concept_building_wage', '$concept_building_wages$')] im Gebäude der Art „[Building.GetName]“ beruhen auf der wirtschaftlichen Situation. Um mehr [Concept('concept_pop', '$concept_pops$')] für die Beschäftigten anzuziehen, sollte man den Wochen-[concept_building_balance] verbessern. Man beeinflusst ihn, indem man entweder die vom Gebäude verwendeten [Concept('concept_good', '$concept_goods$')] günstiger oder die produzierten Waren teurer macht. Hierbei muss man also die entsprechenden Preise auf dem Markt „[Building.GetState.GetMarket.GetName]“ durch Angebot und Nachfrage anpassen. Man kann auch garantieren, dass die Belegschaft ein konkurrenzfähiges [concept_building_wage] bekommt, indem man das Gebäude [Concept('concept_subsidies', 'subventioniert')|l]. So bleibt das Gebäude im Geschäft, indem der [GetPlayer.GetAdjectiveNoFormatting|l]e Staat notfalls [concept_money] aus der [concept_treasury] zuschießt."
 INCOME_TAXES: "Gezahlte Steuern: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_TAXES_TOOLTIP #variable @money![Building.GetTaxationRevenue|D+=]#!#!#!"
 BUILDING_TOOLTIP_BASE_INFO: "[AddLocalizationIf(Not(Building.GetState.IsIncorporated), 'BUILDING_STATE_IS_UNINCORPORATED')]Größe: [Building.GetExpansionLevelBreakdownDesc][AddLocalizationIf(Building.IsBuildingType('building_urban_center'), '\n')][AddLocalizationIf(Building.IsBuildingType('building_urban_center'), 'BUILDING_STATE_URBANIZATION')][ConcatIfNeitherEmpty('\n', SelectLocalization(GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), 'EMPLOYMENT_INFO', ''))]"
 BUILDING_STATE_IS_UNINCORPORATED: "@unincorporated! [SelectLocalization(Building.GetState.IsIncorporating, 'BUILDING_STATE_INCORPORATING', 'UNINCORPORATED')]\n"
 BUILDING_STATE_INCORPORATING: "[Concept('concept_incorporated_state','$concept_incorporating$')] (#tooltippable #tooltip:[Building.GetState.GetTooltipTag],TOOLTIP_INCORPORATING_STATE [Building.GetState.GetIncorporationProgress|v%0]#!#!)"
 BUILDING_STATE_URBANIZATION: "Gesamt-[concept_urbanization] in „[Building.GetState.GetName]“: #v #tooltippable #tooltip:[Building.GetState.GetTooltipTag],URBANIZATION_BREAKDOWN [Building.GetState.GetUrbanization]#!#!#!"
 EMPLOYMENT_INFO: "Beschäftigung: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Angestellte#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)"
 BUILDING_TOOLTIP: "$BUILDING_TOOLTIP_BASE_INFO$[ConcatIfNeitherEmpty('\n', SelectLocalization(And(GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), Not(Building.IsSubsistenceBuilding)), 'PRODUCTIVITY_INFO', ''))][ConcatIfNeitherEmpty('\n', SelectLocalization(GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), 'CASH_RESERVES_INFO', '' ))][ConcatIfNeitherEmpty('\n', SelectLocalization( GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), 'INCOME_TAXES', ''))][ConcatIfNeitherEmpty('\n', SelectLocalization(GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), 'BUILDING_AVERAGE_WAGE_FLIPPED', ''))]"
 BUILDING_GOVERNMENT_TOOLTIP: "$BUILDING_TOOLTIP_BASE_INFO$[ConcatIfNeitherEmpty('\n', SelectLocalization(GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), 'INCOME_TAXES', ''))]\n$GOVERNMENTAL_EXPENSES$[ConcatIfNeitherEmpty('\n', SelectLocalization(GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), 'BUILDING_AVERAGE_WAGE_FLIPPED', ''))]"
 DEBUG_BUILDING_TOOLTIP: "ID: #variable [Building.GetID]#!"
 EXPANSION_DESC: "$LEVEL|v$"
 EXPANSION_DESC_BUILDING: "#tooltippable #tooltip:[Building.GetTooltipTag],BUILDING_LEVEL_TOOLTIP $LEVEL|v$#!#!"
 BUILDING_LEVEL_TOOLTIP: "[Building.GetSizeTooltip]"
 EXPANSION_DESC_QUEUE_STATE: "+#tooltippable #tooltip:[State.GetTooltipTag],CONSTRUCTION_QUEUE_IN_STATE $IN_QUEUE$#!#!"
 EXPANSION_DESC_QUEUE_BUILDING: "+#tooltippable #tooltip:[Building.GetState.GetTooltipTag],CONSTRUCTION_QUEUE_IN_STATE $IN_QUEUE$#!#!"
 EXPANSION_DESC_QUEUE_INVALID_STATE: "#red #tooltippable #tooltip:[State.GetTooltipTag],CONSTRUCTION_QUEUE_IN_STATE +$IN_QUEUE$#!#!#!"
 EXPANSION_DESC_QUEUE_INVALID_BUILDING: "#red #tooltippable #tooltip:[Building.GetState.GetTooltipTag],CONSTRUCTION_QUEUE_IN_STATE +$IN_QUEUE$#!#!#!"
 CONSTRUCTION_QUEUE_IN_STATE: "Zahl der Erweiterungsstufen dieses [Concept('concept_building', 'Gebäudes')], die entweder [concept_under_construction] oder in der [concept_construction_queue] in [State.GetName] sind"
 EXPANSION_DESC_MAXIMUM: "/#maximum #tooltippable #tooltip:[Building.GetTooltipTag],BUILDING_EXPANSION_LEVEL_BREAKDOWN_TOOLTIP [Building.GetState.GetMaxPotentialFor(Building.Self)|v]#!#!#!"
 URBAN_CAP_PER_LEVEL: "#variable #P +[GetDefine('NCountry', 'BASE_URBAN_CAPACITY')]#!#! $urban_capacity$"
 BATTALIONS_PER_LEVEL: "[Concept('concept_battalion', '$concept_battalions$')]: $UNIT_ICON$ #variable #P +$UNIT_COUNT$#!#! pro Stufe"
 BATTALIONS_TOTAL: "[Concept('concept_battalion', '$concept_battalions$')]: $UNIT_ICON$ #tooltippable #tooltip:[Building.GetTooltipTag],MILITARY_UNITS_PRODUCTION #variable #P +$UNIT_COUNT$#!#!#!#! Gesamt"
 FLOTILLAS_PER_LEVEL: "[Concept('concept_flotilla', '$concept_flotillas$')]: $UNIT_ICON$ #variable #P +$UNIT_COUNT$#!#! pro Stufe"
 FLOTILLAS_TOTAL: "[Concept('concept_flotilla', '$concept_flotillas$')]: $UNIT_ICON$ #tooltippable #tooltip:[Building.GetTooltipTag],MILITARY_UNITS_PRODUCTION #variable #P +$UNIT_COUNT$#!#!#!#! gesamt"
 CANAL_TOOLTIP_DESC: "Erlaubt das Reisen zwischen den Staatsregionen „[PROVINCE.GetStateRegion.GetName]“ und „[PROVINCE_OTHER.GetStateRegion.GetName]“"
 GOV_EXPENSES_TITLE: "#title [concept_government_expenses]#!"
 INCOME_TAXES_TITLE: "#title Einkommenssteuern#!"
 EMBARGO_GOODS: "Embargo beginnen"
 UNEMBARGO_GOODS: "Embargo beenden"
 ENCOURAGE_GOODS: "Verbrauch fördern"
 UNENCOURAGE_GOODS: "Förderung beenden"
 DISCOURAGE_GOODS: "Verbrauch vermeiden"
 UNDISCOURAGE_GOODS: "Vermeidung beenden"
 TAX_GOODS: "Verbrauchssteuer einführen"
 NO_GOODS_TO_TAX: "Es gibt keine Waren, auf die wir [Concept('concept_consumption_tax', '$concept_consumption_taxes$')] erheben können"
 UNTAX_GOODS: "Verbrauchssteuer abschaffen"
 SUBSIDIZE_SHORT: "Subsi:"
 BUILDING_SIZE: "[Building.GetExpansionLevel|v][AddLocalizationIf(NotEqualTo_int32(Building.GetExpansionLevelsInQueue, '(int32)0'), 'BUILDING_SIZE_CONSTRUCT')][AddLocalizationIf(Building.ShowLevelAndMaxLevel, 'BUILDING_SIZE_MAX')]"
 BUILDING_SIZE_CONSTRUCT: "+[Building.GetExpansionLevelsInQueue|P]"
 BUILDING_SIZE_MAX: "/[Building.GetState.GetMaxPotentialFor(Building.Self)]"
 BUILDING_SIZE_TT: "#header „[Building.GetName]“ in „[Building.GetState.GetName]“#!\nGröße: [Building.GetExpansionLevel|v][AddLocalizationIf(Building.ShowLevelAndMaxLevel, 'EXPANSION_DESC_MAXIMUM')] [Concept('concept_building_level', '$concept_building_levels$')][AddLocalizationIf(NotEqualTo_int32(Building.GetExpansionLevelsInQueue, '(int32)0'), 'BUILDING_SIZE_TT_CONSTRUCTION')]"
 BUILDING_SIZE_TT_CONSTRUCTION: "\n[Building.GetExpansionLevelsInQueue|v] $concept_building_levels_short$ [concept_under_construction] oder in der [concept_construction_queue]"
 BUILDING_SIZE_TT_OWNERS_HEADER: "$TOOLTIP_DELIMITER$\nBesitzer:"
 BUILDING_AUTO_DOWNSIZE_WARNING: "@warning! Auto-Verkleinern"
 BUILDING_AUTO_DOWNSIZE_HEADER: "#header #!Autonomes Verkleinern\n$TOOLTIP_DELIMITER$"
 BUILDING_WILL_AUTO_DOWNSIZE: "$BUILDING_AUTO_DOWNSIZE_HEADER$\nDieses [concept_building] hat zu viele unbesetzte [concept_privately_owned]-Stufen und wird seine $concept_privately_owned$-Stufen demnächst ($DATE|v$) selbstständig verringern, wenn es nicht in der Lage ist, neue [Concept('concept_employment','$concept_employees$')] einzustellen."
 BUILDING_AUTO_DOWNSIZING: "$BUILDING_AUTO_DOWNSIZE_HEADER$\nDieses [concept_building] hat zu viele unbesetzte [concept_privately_owned]-Stufen und wird sich selbstständig jede Woche um eine einzelne $concept_privately_owned$-Stufe verkleinern, bis es eine passendere Größe erreicht hat."
 BUILDING_NOT_HIRING_NO_PROFIT: "@red_cross! Dieses $concept_building$ stellt nicht ein, weil sein wöchentlicher [concept_building_balance] bei Null oder darunter liegt"
 BUILDING_NOT_HIRING_LOW_PROFIT_LOW_CASH_RESERVES: "@red_cross! Dieses $concept_building$ stellt nicht ein, weil sein wöchentlicher [concept_building_balance] nicht mindestens bei @money!$PROFIT_THRESHOLD|Kv$ (@money!$PROFIT|Kv$) und seine [concept_cash_reserves] unter $CASH_RESERVES_THRESHOLD|%v$ ($CASH_RESERVES|%v$) liegen"
 BUILDING_NOT_HIRING_DECREASED_PRODUCTIVITY: "@red_cross! Dieses $concept_building$ wird keine Mitarbeiter einstellen, weil es davon ausgeht, dass dadurch die [concept_productivity] unter den minimalen Schwellenwert von @money!$PRODUCTIVITY_THRESHOLD|1v$ (@money![Building.GetAverageAnnualEarningsPerEmployee|v1] @arrow_right!@money!$PRODUCTIVITY|v1$) sinken würde"
 TAX_WASTE: "[concept_tax_waste]: #v $VAL|-%$#!"
 RADICAL_IG_ITEM: "[InterestGroup.GetName]: #tooltippable #tooltip:[InterestGroup.GetTooltipTag],IG_APPROVAL_BREAKDOWN [InterestGroup.GetApprovalRating] #bold ([InterestGroup.GetApprovalValue|+=])#!#!#!\n"
 BUILDING_STATUS: "Status:"
 BUILDING_ACTIVE: "#v Aktiv#!"
 BUILDING_INACTIVE: "Inaktiv"
 BUILDING_INACTIVE_CONSUMPTION_EMPTY_STATE: "Dieses [concept_building] hat keinen Verbrauch, da es inaktiv ist."
 LOCAL_PRICE_CONDENSED: "Ortspreis: #variable @money![ProductionInterfaceInfo.GetLocalPrice|1]#!"
 STATE_CONTROLLED_BY: "#BOLD #V [State.GetName|U]#!#! wird #BOLD #V [State.GetController.GetAltName('VON')]#!#! [Concept('concept_controlled_war_goal','$concept_controlled_war_goal_short$')|l]"
 STATE_OCCUPIED_BY: "#BOLD #V [Country.GetAltName('NOM')]#!#! besetzt $FRACTION|%0v$ von [State.GetName|v]"
 STATE_CONTESTED: "Die [Concept('concept_controlled_war_goal','Kontrolle')] über #BOLD #V [State.GetName]#!#! ist umstritten!"
 CHANGE_PRODUCTION_METHOD_TOOLTIP: "#header „[ChangeProductionMethodMenuItem.GetProductionMethodGroup.GetName]“-[concept_production_method] zu „[ProductionMethod.GetName]“ ändern#!\n[ChangeProductionMethodMenuItem.GetTooltip(GetPlayer.Self)]"
 CHANGE_FROM_CURRENT_PRODUCTION_METHOD_TOOLTIP: "#header [ProductionMethodGroup.GetName] [concept_production_method]#!\nDerzeit: [ProductionMethod.GetName]\n[ProductionMethod.GetTooltipForBuilding(GetPlayer.Self, Building.Self)]\n\n#instruction #bold Linksklick#!, um verfügbare Optionen anzuzeigen#!"
 CHANGE_PRODUCTION_METHOD_IMPACT_ON_BALANCE: "Prognostizierter wöchentlicher [concept_building_balance]: #v @money!$BALANCE|Dv$#! (derzeit #v @money!$BALANCE_DELTA|D+=$#!)\nPrognostizierte [concept_productivity]: @money!$PRODUCTIVITY$ (derzeit @money!$PRODUCTIVITY_DELTA|=+1$)"
 CHANGE_PRODUCTION_METHOD_IMPACT_ON_BALANCE_MULTI: "Prognostizierter wöchentlicher [concept_building_balance]: #v @money!$BALANCE|D$#! (derzeit #v @money!$BALANCE_DELTA|D+=$#!)\nPrognostizierte [concept_productivity]: @money!$PRODUCTIVITY|v1$ (derzeit @money!$PRODUCTIVITY_DELTA|=+1$)"
 CHANGE_PRODUCTION_NO_EFFECT: "Diese Produktionsmethode hat derzeit keine Auswirkungen"
 BULK_CHANGE: "#header „[ProductionMethodGroup.GetName]“-[concept_production_method] für alle Gebäude der Art „[BuildingType.GetName]“ ändern#!"
 BULK_CHANGE_MIXED: "$BULK_CHANGE$\n[BuildingType.GetName] [GetPlayer.GetAltNameNoFlag('IN')] unterscheiden sich hinsichtlich der [Concept('concept_production_method', '$concept_production_methods$')] ([ProductionMethodGroup.GetName]), die sie verwenden"
 BULK_CHANGE_SAME: "$BULK_CHANGE$\nAlle Gebäude der Art „[BuildingType.GetName]“ haben derzeit die Produktionsmethode „[ProductionMethod.GetName]“\n$TOOLTIP$"
 SHOW_PER_LEVEL_VALUES: "Werte pro Stufe anzeigen"
 PER_LEVEL_VALUES_NESTED_TOOLTIP: "#tooltippable #tooltip:[GetRawTextTooltipTag('$PER_LEVEL_VALUES_OUTPUT$')] [AddTextIf(Not(StringIsEmpty('$PER_LEVEL_VALUES_OUTPUT$')), '$SHOW_PER_LEVEL_VALUES$')][AddTextIf(Not(StringIsEmpty('$PER_LEVEL_VALUES_OUTPUT$')), '\n')]#!#!"
 PRODUCTION_METHOD_TOOLTIP_FORMAT: "[ConcatIfNeitherEmpty('$PREDICTION$', '\n')][AddTextIf(Not(StringIsEmpty('$TOTAL_VALUES_OUTPUT$')),'$TOOLTIP_DELIMITER$\n')][ConcatIfNeitherEmpty('$TIMED_MODIFIERS$','\n\n')][ConcatIfNeitherEmpty('$TOTAL_VALUES_OUTPUT$','\n\n')]$PER_LEVEL_VALUES_NESTED_TOOLTIP$"
 PRODUCTION_METHOD_WITH_REQUIREMENTS_TOOLTIP_FORMAT: "[ConcatIfNeitherEmpty('$PREDICTION$', '\n')][AddTextIf(Not(StringIsEmpty('$TOTAL_VALUES_OUTPUT$')),'$TOOLTIP_DELIMITER$\n')][ConcatIfNeitherEmpty('$TIMED_MODIFIERS$','\n')][ConcatIfNeitherEmpty('$TOTAL_VALUES_OUTPUT$','\n\n')]$PER_LEVEL_VALUES_NESTED_TOOLTIP$[AddTextIf(Not(StringIsEmpty('$EMPTY_REQUIREMENTS$')), '\n$TOOLTIP_REQUIREMENTS_ANY$\n')]$REQUIREMENTS$[AddTextIf(Not(StringIsEmpty('$EMPTY_REQUIREMENTS$')), '\n')]$BUILDING_TYPE_INFO$"
 PER_LEVEL_VALUES_ONLY: "$VALUES$"
 COMPACT_PM_DESC_OUTPUT: " $ICON$#v $VAL|+^$#! "
 COMPACT_PM_DESC_INPUT: " $ICON$#v $VAL|-^$#! "
 COMPACT_PM_DESC_OUTPUT_MODIFIERS: "$NUM|v$ Modifikatoren"
 COMPACT_PM_DESC_MORE_EMPLOYEES: " #v $ICON$ $VAL|D$#! "
 COMPACT_PM_DESC_LESS_EMPLOYEES: " #v $ICON$ $VAL|=D$#! "
 COMPACT_PM_GOODS_DESC_FORMAT: "[AddTextIf(StringIsEmpty('$INPUT_GOODS$'), '#title Keine Waren#!')]$INPUT_GOODS$[ConcatIfNeitherEmpty('@turns_into! ','$OUTPUT_GOODS$')]"
 COMPACT_PM_EMPLOYMENT_DESC_FORMAT: "$MORE_EMPLOYEES$[ConcatIfNeitherEmpty(' ','$LESS_EMPLOYEES$')]#!"
 MARKET_PARTICIPANT_SHARE: "#V [Country.GetAltName('NOM')|U]#! hat einen [concept_market_share] von [MarketPanel.GetMarket.GetMarketSharePercentageFor(Country.Self)|v%] auf dem Markt „[MarketPanel.GetMarket.GetName]“\n$TOOLTIP_DELIMITER$\n"
 COIN_01_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin1!#!#! #bold Sehr viel billiger#! im Vergleich zum [concept_base_price] ($VAL|v=1%$)"
 COIN_02_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin2!#!#! #bold Viel billiger#! im Vergleich zum [concept_base_price] ($VAL|v=1%$)"
 COIN_03_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin3!#!#! #bold Billig#! im Vergleich zum [concept_base_price] ($VAL|v=1%$)"
 COIN_04_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin4!#!#! #bold Billig#! im Vergleich zum [concept_base_price] ($VAL|v=1%$)"
 COIN_05_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin5!#!#! #bold Geringfügig billiger#! im Vergleich zum [concept_base_price] ($VAL|v=1%$)"
 COIN_06_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin6!#!#! #bold Geringfügig billiger#! im Vergleich zum [concept_base_price] ($VAL|v=1%$)"
 COIN_07_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin7!#!#! #bold Etwa der gleiche Preis#! wie der [concept_base_price] ($VAL|v=1%$)"
 COIN_08_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin8!#!#! #bold Geringfügig teurer#! im Vergleich zum [concept_base_price] ($VAL|v=1%$)"
 COIN_09_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin9!#!#! #bold Geringfügig teurer#! im Vergleich zum [concept_base_price] ($VAL|v=1%$)"
 COIN_10_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin10!#!#! #bold Teuer#! im Vergleich zum [concept_base_price] ($VAL|v=1%$)"
 COIN_11_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin11!#!#! #bold Teuer#! im Vergleich zum [concept_base_price] ($VAL|v=1%$)"
 COIN_12_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin12!#!#! #bold Sehr viel teurer#! im Vergleich zum [concept_base_price] ($VAL|v=1%$)"
 COIN_13_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin13!#!#! #bold Sehr viel teurer#! im Vergleich zum [concept_base_price] ($VAL|v=1%$)"
 COIN_01_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin1!#!#!  #bold Sehr viel billiger#!"
 COIN_02_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin2!#!#!  #bold Viel billiger#!"
 COIN_03_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin3!#!#!  #bold Billig#!"
 COIN_04_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin4!#!#!  #bold Billig#!"
 COIN_05_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin5!#!#!  #bold Geringfügig billiger#!"
 COIN_06_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin6!#!#!  #bold Geringfügig billiger#!"
 COIN_07_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin7!#!#!  #bold Ungefähr Grundpreis#!"
 COIN_08_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin8!#!#!  #bold Geringfügig teurer#!"
 COIN_09_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin9!#!#!  #bold Geringfügig teurer#!"
 COIN_10_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin10!#!#!  #bold Teuer#!"
 COIN_11_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin11!#!#!  #bold Teuer#!"
 COIN_12_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin12!#!#!  #bold Sehr viel teurer#!"
 COIN_13_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin13!#!#!  #bold Sehr viel teurer#!"
 COIN_STACK_ICON_FORMAT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP $ICON$#!#!"
 COIN_STACK_ICON_FORMAT_NO_TOOLTIP: "$ICON$"
 COIN_STACK_TOOLTIP: "Das Preis-Symbol zeigt, wie teuer (oder billig) eine [concept_good] im Verhältnis zum [concept_base_price] dieser [concept_good] ist. Das Symbol reichen von sehr billig (@coin1!) über Grundpreis (@coin7!) bis sehr teuer (@coin13!)"
 GOODS_STATE_PRICE_AGAINST_BASE_PRICE_TOOLTIP: "#header [Goods.GetStatePriceLabel] im Verhältnis zum [concept_base_price]#!\n[Goods.GetCompareDescAgainstBasePrice(Goods.GetStatePrice)]\n$TOOLTIP_DELIMITER$\n[Goods.GetStatePriceLabel]: #variable @money![Goods.GetStatePrice|1]#!\n[concept_base_price]: #BOLD #V @money![Goods.GetBasePrice|1]#!#!"
 GOODS_MARKET_PRICE_AGAINST_BASE_PRICE_TOOLTIP: "#header [Goods.GetMarketPriceLabel] im Verhältnis zum [concept_base_price]#!\n[Goods.GetCompareDescAgainstBasePrice(Goods.GetMarketPrice )]\n$TOOLTIP_DELIMITER$\n[Goods.GetMarketPriceLabel]: #variable @money![Goods.GetMarketPrice|1]#!\n[concept_base_price]: #BOLD #V @money![Goods.GetBasePrice|1]#!#!"
 BUY_ORDERS: "[concept_buy_orders]"
 SELL_ORDERS: "[concept_sell_orders]"
 PRODUCTION: "[concept_good_production]"
 CONSUMPTION: "[concept_good_consumption]"
 BATTALIONS: "[Concept('concept_battalion', '$concept_battalions$')]"
 FLOTILLAS: "[Concept('concept_flotilla','$concept_flotillas$')]"
 GOOD_PRICE_BASED_ON_LAST_TICK_WARNING: "#lore Diese Werte werden mindestens einmal pro Woche aktualisiert.#!"
 GOODS_PRICE_DESC_FIXED: "Die Ware „[GOODS.GetTextIcon][GOODS.GetName]“ hat einen Festpreis von @money![GOODS.GetPrice|1v], der sich nie ändern wird."
 GOODS_PRICE_DESC_IN_MARKET: "#header [Goods.GetTextIcon][Nbsp][Goods.GetName] auf dem Markt „[Goods.GetMarket.GetName]“#!\n$TOOLTIP_DELIMITER$\n$DATA_GOODS_NAME_TOOLTIP$"
 GOODS_PRICE_DESC_IN_MARKET_PROGRESSBAR: "#header @money![Goods.GetMarketPrice|0v] [Goods.GetCompareIconAgainstBasePrice(Goods.GetMarketPrice)] ([Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=-])#!"
 GOODS_PRICE_DESC_IN_STATE: "#header [Goods.GetTextIcon][Nbsp][Goods.GetName] in „[State.GetName]“#!\n[concept_local_price]: @money![Goods.GetStatePrice|1v] [Goods.GetCompareIconAgainstBasePrice(Goods.GetStatePrice)]\n[SelectLocalization(GreaterThan_CFixedPoint(Goods.GetStateMonopolyPriceImpact,'(CFixedPoint)0'),'GOODS_MONOPOLY_STATE_PRICE_DESC','')][SelectLocalization(Goods.IsLocal,'','GOODS_LOCAL_PRICE_DIFF')]#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetStatePrice)|%0=-]#! verglichen mit dem [concept_base_price]\n$TOOLTIP_DELIMITER$\n[Goods.GetStateProductionWithTooltip] Orts-$PRODUCTION$\n[Goods.GetStateConsumptionWithTooltip] Orts-$CONSUMPTION$\n\n$PRICE_SETTING_INFO$[concept_base_price]: @money![Goods.GetBasePrice|1v]\n\n$GOOD_PRICE_BASED_ON_LAST_TICK_WARNING$"
 GOODS_PRICE_DESC_IN_WORLD_MARKET: "#header Preis von [Goods.GetTextIcon][Nbsp]„[Goods.GetName]“#!\n@money!$PRICE|1v$ $COMPARE_ICON$ auf dem [concept_world_market]\n$TOOLTIP_DELIMITER$\n[Goods.GetTextIcon][Nbsp]$EXPORTS$ [Concept('concept_trade','$concept_exports$')]\n[Goods.GetTextIcon][Nbsp]$IMPORTS$ [Concept('concept_trade','$concept_imports$')][ConcatIfNeitherEmpty('\n','$MONOPOLY_PRICE_IMPACT$')]\n\n$COMPARE_PRICE_DESC$\n$concept_base_price$: @money!$BASE_PRICE|1v$\n\n$GOOD_PRICE_BASED_ON_LAST_TICK_WARNING$"
 PRICE_SETTING_INFO: "#title Preisbildung#!\n[SelectLocalization(GreaterThan_CFixedPoint(Goods.GetMarketPriceShare, '(CFixedPoint)0'), 'MARKET_PRICE_SHARE_DESC', '')][SelectLocalization(GreaterThan_CFixedPoint(Goods.GetMarketMonopolyPriceImpact,'(CFixedPoint)0'),'GOODS_MONOPOLY_MARKET_PRICE_DESC','')][Goods.GetLocalPriceShare|%v0] durch $PRODUCTION$, $CONSUMPTION$ und [concept_world_market]-Handel in „[Goods.GetState.GetName]“\n[SelectLocalization(GreaterThan_CFixedPoint(Goods.GetStateMonopolyPriceImpact,'(CFixedPoint)0'),'GOODS_MONOPOLY_STATE_PRICE_DESC','')][SelectLocalization(Goods.IsLocal,'','GOODS_LOCAL_PRICE_DIFF')]"
 MARKET_PRICE_SHARE_DESC: "#tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_MARKET_PRICE_SHARE_TOOLTIP [Goods.GetMarketPriceShare|%v0]#!#! durch [concept_market_price] ([Goods.GetMarketPriceWithTooltip] in „[Goods.GetMarket.GetName]“)\n"
 GOODS_PRICE_DESC_IN_ISOLATED_MARKET: "#header [Goods.GetTextIcon][Nbsp][Goods.GetName] in „[Goods.GetState.GetName]“#!\nOrtspreis: @money![Goods.GetStatePrice|1v] [Goods.GetCompareIconAgainstBasePrice(Goods.GetStatePrice)] (#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetStatePrice)|%0=-]#! verglichen zum [concept_base_price])\n$TOOLTIP_DELIMITER$\n[Goods.GetStateProductionWithTooltip] [concept_sell_orders]\n[Goods.GetStateConsumptionWithTooltip] [concept_buy_orders]\n\n[concept_base_price]: @money![Goods.GetBasePrice|1v]\n\n$GOOD_PRICE_BASED_ON_LAST_TICK_WARNING$"
 GOODS_MARKET_PRICE_SHARE_TOOLTIP: "#header [Concept('concept_market_price', '$concept_market_price_share$')] für „[Goods.GetName]“ in „[Goods.GetState.GetName]“: [Goods.GetMarketPriceShare|%v1]#!\n$TOOLTIP_DELIMITER$\n[Goods.GetMarketPriceShareDesc]"
 GOODS_MARKET_PRICE_SHARE_DESC: "Errechnet sich durch den [concept_market_access] von #tooltippable #tooltip:$MARKET_ACCESS_BREAKDOWN$ $MARKET_ACCESS|v0%$#!#! multipliziert mit dem Modifikator für die #v $state_market_access_price_impact$#! von #tooltippable #tooltip:$PRICE_IMPACT_BREAKDOWN$ $MARKET_ACCESS_IMPACT|v%$#!#!"
 GOODS_MARKET_ACCESS_PRICE_IMPACT_DESC: "#header #v $state_market_access_price_impact$#!: $MARKET_ACCESS_IMPACT|v%$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 GOODS_MONOPOLY_WORLD_MARKET_PRICE_DESC: "$PRICE_IMPACT|v=%0$ $concept_world_market_price$, weil „[MARKET.GetName]“ $EXPORT_SHARE|v%0$ der [Concept('concept_trade','$concept_exports$')] kontrolliert"
 GOODS_MONOPOLY_MARKET_PRICE_DESC: "[Goods.GetMarketMonopolyPriceImpact|v%=0] $concept_market_price$ durch [Goods.GetMarketMonopolyFraction|v%0] der $concept_market$-[concept_sell_orders], die unter einem [concept_monopoly] produziert werden\n\n"
 GOODS_MONOPOLY_STATE_PRICE_DESC: "[Goods.GetStateMonopolyPriceImpact|v%=0] Staatspreis durch [Goods.GetStateMonopolyFraction|v%0] der $concept_state$s-[concept_good_production], die unter einem [concept_monopoly] produziert wird\n\n"
 GOODS_PRICE_MARKET_LOCAL_PRICE_LINK: "#tooltippable #tooltip:[GOODS.GetTooltipTag],GOODS_PRICE_MARKET_LOCAL_PRICE_BREAKDOWN Ortspreise#!#! auf dem Markt „[GOODS.GetMarket.GetName]“ anzeigen"
 GOODS_PRICE_MARKET_LOCAL_PRICE_BREAKDOWN: "[Goods.GetLocalPricesDesc]"
 GOODS_PRICE_MARKET_LOCAL_PRICE_HEADER: "#header Ortspreis der Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ auf dem Markt „[Goods.GetMarket.GetName]“#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_MARKET_LOCAL_PRICE_ITEM: "[State.GetName]: [Goods.GetStatePriceWithTooltip]"
 GOODS_PRODUCTION_VALUE: "#tooltippable #tooltip:$TAG$,$BREAKDOWN_CONTEXT$ $VALUE|Dv$#!#!"
 GOODS_CONSUMPTION_VALUE: "#tooltippable #tooltip:$TAG$,$BREAKDOWN_CONTEXT$ $VALUE|Dv$#!#!"
 GOODS_MARKET_PRODUCTION_BREAKDOWN: "[Goods.GetMarketProductionBreakdown]"
 GOODS_MARKET_CONSUMPTION_BREAKDOWN: "[Goods.GetMarketConsumptionBreakdown]"
 GOODS_STATE_PRODUCTION_BREAKDOWN: "[Goods.GetStateProductionBreakdown]"
 GOODS_STATE_CONSUMPTION_BREAKDOWN: "[Goods.GetStateConsumptionBreakdown]"
 GOODS_MARKET_SELL_ORDERS_VALUE: "#tooltippable #tooltip:$TAG$,GOODS_MARKET_SELL_ORDERS_BREAKDOWN $VALUE|vD$#!#!"
 GOODS_MARKET_BUY_ORDERS_VALUE: "#tooltippable #tooltip:$TAG$,GOODS_MARKET_BUY_ORDERS_BREAKDOWN $VALUE|vD$#!#!"
 GOODS_MARKET_SELL_ORDERS_BREAKDOWN: "[Goods.GetMarketSellOrdersBreakdown]"
 GOODS_MARKET_BUY_ORDERS_BREAKDOWN: "[Goods.GetMarketBuyOrdersBreakdown]"
 GOODS_BASE_IMPORTS_VALUE: "#tooltippable #tooltip:$TAG$,GOODS_BASE_IMPORTS_BREAKDOWN $VALUE|Dv$#!#!"
 GOODS_BASE_EXPORTS_VALUE: "#tooltippable #tooltip:$TAG$,GOODS_BASE_EXPORTS_BREAKDOWN $VALUE|Dv$#!#!"
 GOODS_BASE_IMPORTS_BREAKDOWN: "[Goods.GetBaseImportBreakdown]"
 GOODS_BASE_EXPORTS_BREAKDOWN: "[Goods.GetBaseExportBreakdown]"
 URBAN_BUILDINGS: "Städtisch"
 RURAL_BUILDINGS: "Ländlich"
 DEVELOPMENT_BUILDINGS: "Entwicklung"
 BASE_GOODS_MARKET_SELL_ORDERS: "[Goods.GetNonPrestigeGoodsMarketSellOrders|vD]\n~[Divide_CFixedPoint(Goods.GetNonPrestigeGoodsMarketSellOrders, Goods.GetMarketSellOrders)|0%]"
 BASE_GOODS_MARKET_BUY_ORDERS: "[Goods.GetNonPrestigeGoodsMarketBuyOrders|vD]\n~[Divide_CFixedPoint(Goods.GetNonPrestigeGoodsMarketBuyOrders, Goods.GetMarketBuyOrders)|0%]"
 BASE_GOODS_WORLD_MARKET_IMPORTS: "[Goods.GetNonPrestigeGoodsWorldMarketImports|vD]\n~[Divide_CFixedPoint(Goods.GetNonPrestigeGoodsWorldMarketImports, Goods.GetWorldMarketImports)|0%]"
 BASE_GOODS_WORLD_MARKET_EXPORTS: "[Goods.GetNonPrestigeGoodsWorldMarketExports|vD]\n~[Divide_CFixedPoint(Goods.GetNonPrestigeGoodsWorldMarketExports, Goods.GetWorldMarketExports)|0%]"
 BASE_GOODS_STATE_PRODUCTION: "[Goods.GetNonPrestigeGoodsStateProduction|vD]\n~[Divide_CFixedPoint(Goods.GetNonPrestigeGoodsStateProduction, Goods.GetStateProduction)|0%]"
 BASE_GOODS_STATE_CONSUMPTION: "[Goods.GetNonPrestigeGoodsStateConsumption|vD]\n~[Divide_CFixedPoint(Goods.GetNonPrestigeGoodsStateConsumption, Goods.GetStateConsumption)|0%]"
 PRESTIGE_GOODS_MARKET_SELL_ORDERS: "[Goods.GetMarketSellOrdersWithTooltip]\n~[Divide_CFixedPoint(Goods.GetMarketSellOrders, Goods.GetBaseGoods.GetMarketSellOrders)|0%]"
 PRESTIGE_GOODS_MARKET_BUY_ORDERS: "[Goods.GetMarketBuyOrdersWithTooltip]\n~[Divide_CFixedPoint(Goods.GetMarketBuyOrders, Goods.GetBaseGoods.GetMarketBuyOrders)|0%]"
 PRESTIGE_GOODS_STATE_PRODUCTION: "[Goods.GetStateProductionWithTooltip]\n~[Divide_CFixedPoint(Goods.GetStateProduction, Goods.GetBaseGoods.GetStateProduction)|0%]"
 PRESTIGE_GOODS_STATE_CONSUMPTION: "[Goods.GetStateConsumptionWithTooltip]\n~[Divide_CFixedPoint(Goods.GetStateConsumption, Goods.GetBaseGoods.GetStateConsumption)|0%]"
 PRESTIGE_GOODS_WORLD_IMPORTS: "[Goods.GetWorldMarketImportsWithTooltip]\n~[Divide_CFixedPoint(Goods.GetWorldMarketImports, Goods.GetBaseGoods.GetWorldMarketImports)|0%]"
 PRESTIGE_GOODS_WORLD_EXPORTS: "[Goods.GetWorldMarketExportsWithTooltip]\n~[Divide_CFixedPoint(Goods.GetWorldMarketExports, Goods.GetBaseGoods.GetWorldMarketExports)|0%]"
 GOODS_PRICE_MARKET_PRODUCTION_HEADER: "#header [concept_good_production] von „[GOODS.GetName]“ auf „[MARKET.GetName]ׅ“#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_MARKET_CONSUMPTION_HEADER: "#header [concept_good_consumption] von „[GOODS.GetName]“ auf „[MARKET.GetName]ׅ“#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_MARKET_PRODUCTION_ITEM: "[State.GetName]: #tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_STATE_PRODUCTION_BREAKDOWN [Goods.GetStateProduction|D]#!#!"
 GOODS_PRICE_MARKET_CONSUMPTION_ITEM: "[State.GetName]: #tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_STATE_CONSUMPTION_BREAKDOWN [Goods.GetStateConsumption|D]#!#!"
 GOODS_PRICE_MARKET_SELL_ORDER_HEADER: "#header [concept_sell_orders] für „$GOODS_NAME$“ auf dem „[MARKET.GetName]“#!\nDerzeitige Summe: $ORDERS|vD$\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_MARKET_BUY_ORDER_HEADER: "#header [concept_buy_orders] für „$GOODS_NAME$“ auf dem „[MARKET.GetName]“#!\nDerzeitige Summe: $ORDERS|vD$\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_MARKET_SELL_ORDER_ITEM: "[Goods.GetAccessAdjustedStateSell|Dv] in „[State.GetName]“ (#tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_STATE_PRODUCTION_BREAKDOWN [Goods.GetStateProduction|D]#!#! [concept_good_production] × [State.GetMarketAccess|v0%] [concept_market_access])"
 GOODS_PRICE_MARKET_BUY_ORDER_ITEM: "[Goods.GetAccessAdjustedStateBuy|Dv] in [State.GetName] (#tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_STATE_CONSUMPTION_BREAKDOWN [Goods.GetStateConsumption|D]#!#! [concept_good_consumption] × [State.GetMarketAccess|v0%] [concept_market_access])"
 GOODS_PRICE_MARKET_IMPORT_EXPORT: "Aus Handelsrouten: $VAL|=vD$"
 GOODS_PRICE_WORLD_MARKET_EXPORTS_HEADER: "#header [Concept('concept_trade','$concept_exports$')|U] von „$GOODS_NAME$“ zum [concept_world_market]#!\nDerzeitige Summe: $TRADES|vD$\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_WORLD_MARKET_IMPORTS_HEADER: "#header [Concept('concept_trade','$concept_imports$')] von „$GOODS_NAME$“ aus dem [concept_world_market]#!\nDerzeitige Summe: $TRADES|vD$\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_WORLD_MARKET_MARKET_EXPORTS_DESC: "#header [MARKET.GetOwner.GetFlagTextIcon] „[MARKET.GetName]“-[Concept('concept_trade','$concept_exports$')] $GOODS_NAME$ zum [concept_world_market]#!\nDerzeitige Summe: $TRADES|vD$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 GOODS_PRICE_WORLD_MARKET_MARKET_IMPORTS_DESC: "#header [MARKET.GetOwner.GetFlagTextIcon] „[MARKET.GetName]“-[Concept('concept_trade','$concept_imports$')] $GOODS_NAME$ aus dem [concept_world_market]#!\nDerzeitige Summe: $TRADES|vD$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 GOODS_WORLD_MARKET_EXPORTS_VALUE: "#tooltippable #tooltip:$TAG$,GOODS_WORLD_MARKET_EXPORTS_BREAKDOWN $VALUE|vD$#!#!"
 GOODS_WORLD_MARKET_IMPORTS_VALUE: "#tooltippable #tooltip:$TAG$,GOODS_WORLD_MARKET_IMPORTS_BREAKDOWN $VALUE|vD$#!#!"
 GOODS_WORLD_MARKET_EXPORTS_BREAKDOWN: "[Goods.GetWorldMarketExportsBreakdown]"
 GOODS_WORLD_MARKET_IMPORTS_BREAKDOWN: "[Goods.GetWorldMarketImportsBreakdown]"
 GOODS_WORLD_MARKET_MARKET_TRADES: "[MARKET.GetOwner.GetFlagTextIcon] [MARKET.GetName|U]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $TRADES|=vD$#!#!"
 GOODS_WORLD_MARKET_STATE_TRADES: "[GetBuildingType('building_trade_center').GetName] in [STATE.GetOwner.GetFlagTextIcon] „[STATE.GetName|U]“: #tooltippable #tooltip:$BREAKDOWN_TAG$ $TRADES|=vD$#!#!"
 GOODS_WORLD_MARKET_STATE_TO_STATE_EXPORTS: "#header „$GOODS_NAME$“ exportiert aus [STATE.GetOwner.GetFlagTextIcon] „[STATE.GetName|U]“#!\nDerzeitige Summe: $TRADES|vD$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 GOODS_WORLD_MARKET_STATE_TO_STATE_IMPORTS: "#header „$GOODS_NAME$“ importiert nach [STATE.GetOwner.GetFlagTextIcon] „[STATE.GetName|U]“#!\nDerzeitige Summe: $TRADES|vD$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 GOODS_WORLD_MARKET_STATE_TO_STATE_EXPORTS_ENTRY: "Exportiert nach [STATE.GetOwner.GetFlagTextIcon] „[STATE.GetName|U]“: $TRADES|=vD$"
 GOODS_WORLD_MARKET_STATE_TO_STATE_IMPORTS_ENTRY: "Importiert aus [STATE.GetOwner.GetFlagTextIcon] „[STATE.GetName|U]“: $TRADES|=vD$"
 GOODS_WORLD_MARKET_STATE_TO_STATE_EXPORTS_OVERFLOW: "Zusätzliche Exporte: $TRADES|=vD$"
 GOODS_WORLD_MARKET_STATE_TO_STATE_IMPORTS_OVERFLOW: "Zusätzliche Importe: $TRADES|=vD$"
 GOODS_WORLD_MARKET_DEMAND_BUFFER: "Inhärente Nachfrage: $TRADES|=vD$"
 MARKET_TO_MARKET_TRADE_VALUE_EXPORTS_ENTRY: "[GOODS.GetTextIcon] [GOODS.GetName|U]: Exportiert $AMOUNT|v1$ im Wert von @money!$VALUE|vD$"
 MARKET_TO_MARKET_TRADE_VALUE_IMPORTS_ENTRY: "[GOODS.GetTextIcon] [GOODS.GetName|U]: Importiert $AMOUNT|v1$ im Wert von @money!$VALUE|vD$"
 COUNTRY_TO_COUNTRY_TRADE_VALUE_DESC: "#header $FIRST_ADJ$-$SECOND_ADJ$er [Concept('concept_trade', 'Handelswert')]: @money!$VALUE|vD$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 COUNTRY_TO_COUNTRY_TRADE_VALUE_NONE: "Kein $concept_trade$ zwischen diesen $concept_markets$n"
 COUNTRY_TO_COUNTRY_TRADE_VALUE_MARKET_SHARE_DESC: "Multipliziert mit x$MULTIPLIER|v$ aufgrund der [Concept('concept_market_share','$concept_market_shares$')] von $OUR_SHARE|%v1$ und $THEIR_SHARE|%v1$"
 GOODS_PRICE_STATE_PRODUCTION_HEADER: "#header [concept_good_production] von „[GOODS.GetName]“ in „[STATE.GetName]“#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_STATE_CONSUMPITON_HEADER: "#header [concept_good_consumption] von „[GOODS.GetName]“ in „[STATE.GetName]“#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_STATE_STATE_HEADER: "#bold In [STATE.GetName]#!"
 GOODS_PRICE_STATE_BUILDING_PRODUCTION_ITEM: "[Building.GetName|U]: $VALUE|0v$"
 GOODS_PRICE_STATE_BUILDING_CONSUMPTION_ITEM: "[BUILDING.GetName|U]: $VALUE|0v$"
 GOODS_PRICE_STATE_POPS_PRODUCTION_ITEM: "Pops: #tooltippable #tooltip:[GOODS.GetTooltipTag]|[STATE.GetTooltipTag],GOODS_PRICE_STATE_POPTYPE_PRODUCTION_BREAKDOWN $VALUE|0$#!#!"
 GOODS_PRICE_STATE_POPS_CONSUMPTION_ITEM: "Pops: #tooltippable #tooltip:[GOODS.GetTooltipTag]|[STATE.GetTooltipTag],GOODS_PRICE_STATE_POPTYPE_CONSUMPTION_BREAKDOWN $VALUE|0$#!#!"
 GOODS_PRICE_STATE_POPTYPE_PRODUCTION_BREAKDOWN: "[Goods.GetStatePopTypeProductionBreakdown(State.Self)]"
 GOODS_PRICE_STATE_POPTYPE_CONSUMPTION_BREAKDOWN: "[Goods.GetStatePopTypeDemandBreakdown(State.Self)]"
 GOODS_PRICE_STATE_POPTYPE_PRODUCTION_HEADER: "#header [concept_good_production] von „[GOODS.GetName]“ in „[STATE.GetName]“ durch [concept_profession]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_STATE_POPTYPE_CONSUMPTION_HEADER: "#header [concept_good_consumption] von „[GOODS.GetName]“ in „[STATE.GetName]“ durch [concept_profession]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_STATE_POPTYPE_PRODUCTION_POPTYPE_ITEM: "[POP_TYPE.GetName]: #tooltippable #tooltip:[GOODS.GetTooltipTag]|[STATE.GetTooltipTag]|[POP_TYPE.GetTooltipTag],GOODS_PRICE_STATE_POP_PRODUCTION_BREAKDOWN $VALUE|0$#!#!"
 GOODS_PRICE_STATE_POPTYPE_CONSUMPTION_POPTYPE_ITEM: "[POP_TYPE.GetName]: #tooltippable #tooltip:[GOODS.GetTooltipTag]|[STATE.GetTooltipTag]|[POP_TYPE.GetTooltipTag],GOODS_PRICE_STATE_POP_CONSUMPTION_BREAKDOWN $VALUE|0$#!#!"
 GOODS_PRICE_STATE_POP_PRODUCTION_BREAKDOWN: "[Goods.GetStatePopProductionBreakdown(State.Self, PopType.Self)]"
 GOODS_PRICE_STATE_POP_CONSUMPTION_BREAKDOWN: "[Goods.GetStatePopDemandBreakdown(State.Self, PopType.Self)]"
 GOODS_PRICE_STATE_POP_PRODUCTION_HEADER: "#header [concept_good_production] von „[GOODS.GetName]“ in „[STATE.GetName]“ durch [POP_TYPE.GetName]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_STATE_POP_CONSUMPTION_HEADER: "#header [concept_good_consumption] von „[GOODS.GetName]“ in „[STATE.GetName]“ durch [POP_TYPE.GetName]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_STATE_POP_PRODUCTION_POPTYPE_ITEM: "[Pop.GetName] in [POP.GetWorksAt]: $VALUE|0v$"
 GOODS_PRICE_STATE_POP_CONSUMPTION_POPTYPE_ITEM: "[Pop.GetName] in [POP.GetWorksAt]: $VALUE|0v$"
 GOOD_GOOD_HEADER_TOOLTIP: "#header Warennamen#!\n$TOOLTIP_DELIMITER$\n#instruction Zum Sortieren klicken#!"
 GOOD_SELL_HEADER_TOOLTIP: "#header [concept_sell_orders]#!\n$TOOLTIP_DELIMITER$\n#instruction Zum Sortieren klicken#!"
 GOOD_BUY_HEADER_TOOLTIP: "#header [concept_buy_orders]#!\n$TOOLTIP_DELIMITER$\n#instruction Zum Sortieren klicken#!"
 GOOD_DELTA_WP_HEADER_TOOLTIP: "#header Preis im Vergleich zum [concept_base_price]#!\n$TOOLTIP_DELIMITER$\n#instruction Zum Sortieren klicken#!"
 MARKET_MARKET_BREAKDOWN: "#BOLD #V [Market.GetName]#!#!\nKontrolliert #BOLD #V [Market.GetOwner.GetAltName('VON')]#!#!\n$TOOLTIP_DELIMITER$\n#title Handelsstärke#!#!"
 EXPORTING: "Exportieren"
 IMPORTING: "Importieren"
 WORLD_MARKET_TRADE: "#header [Market.GetOwner.GetFlagTextIcon] [concept_world_market]-Handel#!"
 MARKET_IMPORTS: "[Market.GetTotalImportedAmount|vD] Importe"
 MARKET_EXPORTS: "[Market.GetTotalImportedAmount|vD] Exporte"
 MARKET_GOODS_IMPORT_DEPENDENCE: "#header [concept_world_market]-Abhängigkeit von „[Market.GetName|U]“ bei [Goods.GetTextIcon] „[Goods.GetName|U]“#!\n„[Market.GetName|U]“ ist zu #v [Divide_CFixedPoint(Goods.GetMarketImports, Goods.GetMarketSellOrders)|%0]#! abhängig von Importen vom [concept_world_market]\n$TOOLTIP_DELIMITER$\n[Goods.GetMarketSellOrdersWithTooltip|v] [concept_sell_orders] insgesamt, [Goods.GetMarketImports|vD] stammen aus Importen vom [concept_world_market]"
 MARKET_GOODS_EXPORT_DEPENDENCE: "#header [concept_world_market]-Abhängigkeit von „[Market.GetName|U]“ bei [Goods.GetTextIcon] „[Goods.GetName|U]“#!\n„[Market.GetName|U]“ ist zu #v [Divide_CFixedPoint(Goods.GetMarketExports, Goods.GetMarketBuyOrders)|%0]#! abhängig von Exporten zum [concept_world_market]\n$TOOLTIP_DELIMITER$\n[Goods.GetMarketSellOrdersWithTooltip|v] [concept_buy_orders] insgesamt, [Goods.GetMarketExports|vD] stammen aus Exporten zum [concept_world_market]"
 STATE_GOODS_IMPORT_DEPENDENCE: "#header [concept_world_market]-Abhängigkeit von „[State.GetName|U]“ bei [Goods.GetTextIcon] „[Goods.GetName|U]“#!\n„[State.GetName|U]“ ist zu #v [Divide_CFixedPoint(Goods.GetStateImports, Goods.GetStateProduction )|%0]#! abhängig von Importen vom [concept_world_market]\n$TOOLTIP_DELIMITER$\n[Goods.GetStateProductionWithTooltip|v] insgesamt [Concept('concept_good_production', 'produziert')], [Goods.GetStateImports|vD] stammen aus Importen vom [concept_world_market]"
 STATE_GOODS_EXPORT_DEPENDENCE: "#header [concept_world_market]-Abhängigkeit von „[State.GetName|U]“ bei [Goods.GetTextIcon] „[Goods.GetName]“#!\n„[State.GetName|U]“ ist zu #v [Divide_CFixedPoint(Goods.GetStateExports, Goods.GetStateConsumption )|%0]#! abhängig von Exporten vom [concept_world_market]\n$TOOLTIP_DELIMITER$\n[Goods.GetStateConsumptionWithTooltip|v] insgesamt [Concept('concept_good_consumption','produziert')], [Goods.GetStateExports|vD] stammen aus Exporten vom [concept_world_market]"
 STATE_MARKET: "#header [State.GetName]#! ist Teil des Markts #header „[State.GetMarket.GetName]“#!"
 GOODS_BUILDING_TYPE_BUY_ORDERS: "[BuildingType.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
 GOODS_BUILDING_TYPE_SELL_ORDERS: "[BuildingType.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
 GOODS_BUILDING_TYPE_BUY_ORDERS_BREAKDOWN: "#header [concept_buy_orders] für „$GOODS_NAME$“ durch „[BuildingType.GetName]“ auf dem Markt „[Market.GetName]“#!\nDerzeitige Summe: $ORDERS|=vD$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$$ORDERS|=vD$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 GOODS_BUILDING_TYPE_SELL_ORDERS_BREAKDOWN: "#header [concept_sell_orders] von „$GOODS_NAME$“ durch „[BuildingType.GetName]“ auf dem Markt „[Market.GetName]“#!\nDerzeitige Summe: $ORDERS|=vD$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 GOODS_SLAVE_CONSUMPTION_MARKET_ORDERS: "Für $slaves$ gekauft: $ORDERS|=vD$"
 GOODS_BUILDING_BUY_ORDERS: "[Building.GetName] in [Building.GetState.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
 GOODS_BUILDING_SELL_ORDERS: "[Building.GetName] in [Building.GetState.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
 GOODS_BUILDING_BUY_ORDERS_BREAKDOWN: "#header [concept_buy_orders] für „$GOODS_NAME$“ von „[Building.GetName]“ in „[Building.GetState.GetName]“#!\nDerzeitige Summe: $ORDERS|=vD$\n$TOOLTIP_DELIMITER$\n[concept_good_consumption] von $BASE_AMOUNT|vD$ $GOODS_NAME$ modifiziert durch den [concept_market_access] von [Building.GetState.GetMarketAccess|%v]"
 GOODS_BUILDING_SELL_ORDERS_BREAKDOWN: "#header [concept_sell_orders] der „$GOODS_NAME$“ von „[Building.GetName]“ in „[Building.GetState.GetName]“#!\nDerzeitige Summe: $ORDERS|=vD$\n$TOOLTIP_DELIMITER$\n[concept_good_production] von $BASE_AMOUNT|vD$ $GOODS_NAME$ modifiziert durch den [concept_market_access] von [Building.GetState.GetMarketAccess|%v]"
 GOODS_POP_CONSUMPTION_MARKET_ORDERS: "[concept_pop]-Verbrauch: #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
 GOODS_POP_CONSUMPTION_MARKET_ORDERS_HEADER: "#header [concept_buy_orders] für „$GOODS_NAME$“ durch [concept_pop]-Verbrauch auf dem Markt „[Market.GetName]“#!\nDerzeitige Summe: $ORDERS|=vD$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 GOODS_POP_TYPE_CONSUMPTION_MARKET_ORDERS: "[PopType.GetName]: $ORDERS|=vD$"
 GOODS_IMPORTS: "Importe: $ORDERS|=vD$"
 GOODS_EXPORTS: "Exporte: $ORDERS|=vD$"
 PRODUCES: "#title Produziert#!"
 USES: "#title Verbraucht#!"
 EFFICIENCY: "#title Effiziente Waren#! ([Building.GetEfficiencyBonus|=+0%] Effizienzbonus)"
 BALANCE: "Saldo"
 DEFICIT_OF: "#title Defizit von:#!"
 SUPPORTS: "#title Unterstützt:#!"
 OPPOSES: "#title Ist gegen:#!"
 CLOUT_HEADER: "#title [concept_clout]#!"
 IG_STATUS_HEADER: "#title [concept_approval]#!"
 IDEOLOGY_HEADER: "[Concept('concept_ideology','$concept_ideologies$')]"
 RESOURCES_HEADER: "#title Ressourcen:#!"
 POPULATION_HEADER: "#title Bevölkerung#!"
 BUILDINGS_HEADER: "#title Gebäude:#!"
 PRODUCTION_HEADER: "#title Wirtschaft#!"
 SPLIT_STATE_HEADER: "Dies ist ein #BOLD Teilstaat#!"
 INCORPORATED_STATE_HEADER: "Dies ist ein #BOLD [concept_incorporated_state|l]#!"
 UNINCORPORATED_STATE_HEADER: "Dies ist ein #BOLD [concept_unincorporated_state|l]#!"
 STATE_DECENTRALIZED: "Dieser #BOLD Staat#! befindet sich im Besitz einer #BOLD $decentralized_nation$#!."
 PRODUCTION_AMOUNT_TOOLTIP: "Menge (Prozentsatz der lokalen Marktproduktion)"
 INTEREST_GROUP_PRESSURED_IN_POLITICAL_MOVEMENT: "Ist [Concept('concept_political_movement_pressure', '$concept_political_movement_pressured_short$')|l]"
 IG_PANEL_POP_PORTRAIT_TOOLTIP: "[Pop.GetTotalSize|vD] [Pop.GetPopType.GetNameNoIcon] unterstützen die IG „[InterestGroup.GetNameNoFormatting]“"
 PRESSURING_MOVEMENTS_HEADER: "[Concept('concept_political_movement', '$concept_political_movements$')] üben [Concept('concept_political_movement_pressure', '$concept_political_movement_pressure_short$')] aus"
 NO_PRESSURING_MOVEMENTS: "Keine [Concept('concept_political_movement', '$concept_political_movements$')] üben [Concept('concept_political_movement_pressure', '$concept_political_movement_pressure_short$')] aus"
 POSSIBLE_LEADER_IDEOLOGIES_HEADER: "[concept_leader]-[Concept('concept_ideology', '$concept_ideologies$')] – Auftauchwahrscheinlichkeit"
 INTEREST_GROUP_CHARACTER_LEADER_IDEOLOGIES_HEADER: "Wahrscheinlichkeit für [concept_leader]-[Concept('concept_character', '$concept_characters$')] – Einschätzung in Reihenfolge"
 INTEREST_GROUP_RANDOM_LEADER_IDEOLOGIES_HEADER: "Wahrscheinlichkeit anderer [concept_leader]-[Concept('concept_ideology', '$concept_ideologies$')][AddLocalizationIf(Not(IsDataModelEmpty(InterestGroup.GetPossibleCharacterLeaderIdeologies)), 'EVALUATED_AFTER')]"
 EVALUATED_AFTER: " – Einschätzung nach $concept_characters$n"
 INTEREST_GROUP_CHARACTER_LEADER_IDEOLOGY_TOOLTIP: "[PotentialLeaderIdeology.GetCharacterFullName|v] als [Ideology.GetName]\nWahrscheinlichkeit von [PotentialLeaderIdeology.GetChancePercentage|0%v], dass der nächste [concept_leader] von „[InterestGroup.GetName]“ [PotentialLeaderIdeology.GetCharacterFullName|v] ist"
 INTEREST_GROUP_RANDOM_LEADER_IDEOLOGY_TOOLTIP: "[Ideology.GetName]\nWahrscheinlichkeit von [PotentialLeaderIdeology.GetChancePercentage|0%v], dass der nächste [concept_leader] von „[InterestGroup.GetName]“ diese [concept_ideology] hat\n$TOOLTIP_DELIMITER$\n[PotentialLeaderIdeology.GetChanceBreakdown]"
 POTENTIAL_LEADER_IDEOLOGY_FROM_MOVEMENT: "Dies beruht auf [Concept('concept_political_movement_pressure', '$concept_political_movement_pressured_short$')], der von der [PoliticalMovement.GetName] ausgeübt wird"
 POTENTIAL_LEADER_IDEOLOGY_FROM_IG: "Dies beruht auf der Gewichtung durch inhärente $concept_ideologies$ der [concept_interest_group]"
 POTENTIAL_LEADER_IDEOLOGY_CHANCE_BREAKDOWN: "$HEADER$:\n$TAB$#v [Ideology.GetNameNoFormatting]#!-Gewichtung: $WEIGHT|0v$[ConcatIfNeitherEmpty('\n','$MOVEMENT_PRESSURE_DESC$')]\n\nVerglichen mit der Gesamtgewichtung von $TOTAL|0v$"
 POTENTIAL_LEADER_IDEOLOGY_MOVEMENT_PRESSURE_DESC: "Multipliziert mit #v x$MULTIPLIER|2$#! aufgrund von $MOVEMENT_PRESSURE|v0%$ [concept_political_movement_pressure], der diese $concept_ideology$ vertritt"
 STATE_PANEL_POLLUTION: "[concept_pollution_impact]\n$STATE_POLLUTION_CONDENSED$"
 STATE_POLLUTION_CONDENSED: "#b [State.GetStateRegion.GetPollutionImpact|%R1]#!"
 STATE_POLLUTION: "#BOLD #V [concept_pollution_impact]#!#!\nDerzeitige $concept_pollution_impact$: #b [State.GetStateRegion.GetPollutionImpact|%R1]#!\nTendenz zu #b [State.GetStateRegion.GetPollutionImpactTargetLevel|%R1]#! mit einer täglichen Rate von #b [State.GetStateRegion.GetPollutionImpactDailyChange|%1]#!\n[concept_generated_pollution]: #tooltippable #b #tooltip:[State.GetTooltipTag],STATE_GENERATED_POLLUTION_TOOLTIP [State.GetPollutionGeneration|R0]#!#!#!\n[concept_arable_land]: #b [State.GetArableLandCapacity]#!\n$TOOLTIP_DELIMITER$\nDie $concept_pollution_impact$ in [State.GetName] verursachen einen Grundeffekt von:\n\n[State.GetStateRegion.GetPollutionEffects][SelectLocalization(EqualTo_CFixedPoint(State.GetPollutionHealthEffectsReduction, '(CFixedPoint)0'), 'EMPTY_KEY', 'POLLUTION_EFFECTS_REDUCTION_CONDENSED')]"
 STATE_GENERATED_POLLUTION_TOOLTIP: "#header [concept_generated_pollution]#!\n„[State.GetName]“ erzeugt derzeit #b [State.GetPollutionGeneration|R0]#! Verschmutzung\n$TOOLTIP_DELIMITER$\n[State.GetPollutionGenerationDesc]"
 STATE_POLLUTION_EFFECTS_REDUCTION_TOOLTIP: "#header $state_pollution_reduction_health_mult$#!\nDie Auswirkungen der [concept_pollution_impact] auf „[State.GetName]“ werden um #b [State.GetPollutionHealthEffectsReduction|%G0]#! verringert, und zwar aufgrund von Folgendem:\n$TOOLTIP_DELIMITER$\n[State.GetPollutionHealthEffectsReductionDesc]"
 POLLUTION_EFFECTS_REDUCTION_CONDENSED: "\n\nDie oben genannten Auswirkungen auf die öffentliche Gesundheit werden durch #tooltippable #b #tooltip:[State.GetTooltipTag],STATE_POLLUTION_EFFECTS_REDUCTION_TOOLTIP [State.GetPollutionHealthEffectsReduction|%G0]#!#!#! in „[State.GetName]“ weiter verringert"
 STATE_BLOCKADE_WORLD_MARKET_ACCESS_EFFECTS: "$VALUE|=%+0$ [concept_world_market_access]"
 STATE_BLOCKADE_SHIPPING_LANE_EFFECTS: "$VALUE|=%+0$ Effizienz für [Concept('concept_shipping_lane','$concept_shipping_lanes$')] aus oder nach „[State.GetNameNoFormatting]“"
 STATE_BLOCKADE_BUILDING_THROUGHPUT_EFFECTS: "$VALUE|=%+0$ [concept_throughput] für:\n$LIST$"
 STATE_BLOCKADE_LEVEL: "[Concept('concept_blockade','$concept_blockade_level$')]\n[State.GetBlockadeLevel|%-0]"
 TOOLTIP_STATE_BLOCKADE_LEVEL: "#header [Concept('concept_blockade','$concept_blockade_level$')]#!\n[State.GetBlockadeLevel|%-0] in „[State.GetName]“\n$TOOLTIP_DELIMITER$\n[State.GetBlockadeEffectsDesc]"
 STATE_DEVASTATION: "[concept_devastation]\n$STATE_DEVASTATION_CONDENSED$"
 TOOLTIP_STATE_DEVASTATION: "#BOLD #V [concept_devastation]#!#!\nDerzeitige Verwüstung: #b [StateRegion.GetDevastationLevel|%R1]#!\nTägliche Änderung: #b [StateRegion.CalcDevastationDailyChange|%-2]#!\n$TOOLTIP_DELIMITER$\n[StateRegion.GetDevastationEffects]"
 STATE_TURMOIL: "[concept_turmoil]\n$STATE_TURMOIL_CONDENSED$"
 TOOLTIP_STATE_TURMOIL: "#BOLD #V [concept_turmoil]#!#!\n[concept_turmoil] durch [Concept('concept_radical', 'radikale')|l] [Concept('concept_pop', '$concept_pops$')]: #b [State.CalcTurmoil|%2-]#!\n$TOOLTIP_DELIMITER$\n[State.GetTurmoilEffects]"
 STATE_TURMOIL_EFFECTS_MULT_DESC: "Die Auswirkungen von [concept_turmoil] werden mit $MULT|%=-$ multipliziert. Das basiert auf Folgendem:\n#b $MODIFIER_NAME$:#!\n$DETAILS$"
 TOOLTIP_SPLIT_STATE: "#BOLD #V [concept_split_state]#!#!\n$TOOLTIP_DELIMITER$\n#title Staaten in der Staatsregion „[State.GetStateRegion.GetName]“ ([concept_state_region])#!\n[State.GetStateRegion.GetStatesDesc]\n[concept_split_state_desc]"
 TOOLTIP_INCORPORATED_STATE: "#BOLD #V [concept_incorporated_state]#!"
 TOOLTIP_CAPITAL_STATE_HEADER: "(#header [concept_capital_state]#!)"
 TOOLTIP_MARKET_CAPITAL_STATE: "#HEADER [concept_market_capital]#!\n[State.GetName] ist der [concept_market_capital] des Markts „[State.GetMarket.GetName]“\n[State.GetMarketCapitalEffectsDesc]\n$TOOLTIP_DELIMITER$\n[State.GetMarketAccessDesc]"
 TOOLTIP_CAPITAL_STATE: "#HEADER [concept_capital_state]#!\n[State.GetName] ist der [concept_capital_state] [State.GetOwner.GetAltName('GEN')]\n$TOOLTIP_DELIMITER$\n[State.GetCapitalEffectsDesc]"
 TOOLTIP_TREATY_PORT: "#BOLD #V [concept_treaty_port]#!#!\n$TOOLTIP_DELIMITER$\n„[State.GetName]“ ist ein [concept_treaty_port] für „[State.GetMarket.GetName]“"
 TOOLTIP_UNINCORPORATED_STATE_NOT_VALID: "#BOLD #V [concept_unincorporated_state]#!#!\n[GetDesc(State.IncorporateState)]\n$TOOLTIP_DELIMITER$\n$concept_unincorporated_state_desc$"
 TOOLTIP_UNINCORPORATED_STATE_VALID: "#bold [concept_unincorporated_state]#!\n#instruction Zum [Concept('concept_incorporated_state', 'Inkorporieren')] von [State.GetName] klicken#!\nKosten: [State.PredictBureaucracyCost|1v] @bur![Nbsp][concept_bureaucracy]\n$TOOLTIP_DELIMITER$\n$TOOLTIP_UNINCORPORATED_STATE_INSTITUTIONS_EFFECT$\n$TOOLTIP_DELIMITER$\n$concept_unincorporated_state_desc$"
 TOOLTIP_INCORPORATED_STATE_VALID: "#bold [concept_incorporated_state]#!\n[State.GetCountry.GetAltName('NOM')|U] betrachtet [State.GetName] als [Concept('concept_incorporated_state', 'Inkorporierten Staat')]\n$TOOLTIP_DELIMITER$\n$TOOLTIP_INCORPORATED_STATE_INSTITUTIONS_EFFECT$\n$TOOLTIP_DELIMITER$\n$STATE_BUR_BREAKDOWN$"
 STATE_BUR_BREAKDOWN: "Die Gesamtkosten von #v @bur![State.GetBureaucracyCost|1=-]#! basieren auf Folgendem:\n$TAB$Grundkosten: [State.GetBaseBureaucracyCostRaw|1=-]\n$TAB$[Concept('concept_institution', 'Institutionskosten')]: #tooltippable #tooltip:[State.GetCountry.GetTooltipTag],INSTITUTION_BUR_FACTOR_BREAKDOWN #v [State.CalcPopInstitutionBureaucracyCost|1=-]#!#!#!\n$TAB$[State.GetPopulationSize|Dv] [Concept('concept_pop', 'Bevölkerungskosten')]: #v [State.GetBasePopBureaucracyCostRaw|1=-]#!"
 STATE_BUR_TOOLTIP: "#header [Concept('concept_bureaucracy', 'Bürokratiekosten')] für [State.GetName]#!\n$STATE_BUR_BREAKDOWN$"
 TOOLTIP_UNINCORPORATED_STATE_INSTITUTIONS_EFFECT: "[State.GetOwner.GetAdjectiveNoFormatting]e [Concept('concept_institution', '$concept_institutions$')] haben keine Auswirkungen auf [State.GetName], da es sich hierbei um einen [Concept('concept_unincorporated_state', 'Nicht-inkorporierten Staat')] handelt.\n[State.GetName] zu [Concept('concept_incorporated_state', 'inkorporieren')] hätte folgende Auswirkungen:\n[State.GetOwner.GetInstitutionsSummary]"
 TOOLTIP_INCORPORATED_STATE_INSTITUTIONS_EFFECT: "Wenn [State.GetName] ein [concept_incorporated_state] ist, hat dies folgende Auswirkungen:\n[State.GetOwner.GetInstitutionsSummary]"
 INSTITUTION_BUR_FACTOR_BREAKDOWN: "[Country.GetInstitutionInvestmentBureaucracyFactorDesc]"
 TREATY_PORT_INACTIVE: "Inaktiver [concept_treaty_port]"
 TREATY_PORT_INACTIVE_COUNTRY_RANK: "@simple_box! [COUNTRY.GetAdjective]er [concept_rank] muss höher als der [TARGET_COUNTRY.GetAdjective]e [concept_rank] von [TARGET_COUNTRY.GetRank] sein"
 TREATY_PORT_INACTIVE_OCCUPIED: "@simple_box! [State.GetName] darf nicht von einem feindlichen [concept_country] besetzt sein"
 TREATY_PORT_INACTIVE_ISOLATED: "@simple_box! [State.GetName] darf nicht von „[Market.GetName]“ isoliert sein"
 TREATY_PORT_INACTIVE_NO_ADJACENT_VALID: "@simple_box! „[State.GetName]“ muss an [Concept('concept_incorporated_state', 'Inkorporierten Staat')] angrenzen, der nicht von seinem [concept_market] isoliert ist"
 INCORPORATE_STATE_COST: "Kosten: $COST|1v$ @bur![Nbsp][concept_bureaucracy]"
 TOOLTIP_INCORPORATE_STATE: "#header Staat inkorporieren#!\nDauer: [State.GetYearsToIncorporate|v0] Jahre\n[State.GetBureaucracyCostDesc]\n$TOOLTIP_DELIMITER$\n[SelectLocalization(StringIsEmpty(GetDesc(State.IncorporateState)), 'STATE_INCORPORATION_TIME', 'STATE_INCORPORATION_ERROR')]"
 STATE_INCORPORATION_TIME: "[State.GetIncorporationTimeDesc]"
 STATE_INCORPORATION_ERROR: "[GetDesc(State.IncorporateState)]"
 TOOLTIP_CANCEL_INCORPORATION: "#header Inkorporieren abbrechen#!\nErstattung: [State.PredictBureaucracyCost|1v] @bur![Nbsp][concept_bureaucracy]\n\n@warning! #bold [State.GetIncorporationProgress|v%0] Inkorporierungsfortschritt geht verloren!#!"
 TOOLTIP_INCORPORATING_STATE: "#header Staat wird [Concept('concept_incorporated_state', '$concept_incorporated$')]#!\n$TOOLTIP_DELIMITER$\nVerbleibende Zeit: [State.GetIncorporationTimeLeft]\n\n[State.GetIncorporationTimeDesc]\n\n[State.GetIncorporationPartialEffectsDesc]\n$TOOLTIP_DELIMITER$\n[concept_unincorporated_state_desc]"
 INCORPORATION_PARTIAL_EFFECTS: "Da [State.GetName] zu [State.GetIncorporationProgress|v%0] [Concept('concept_incorporated_state', 'inkorporiert')] ist, hat dies folgende Auswirkungen:\n[Modifier.GetDesc]"
 PARTIAL_INCORPORATION_TAXATION_MODIFIER: "Nicht vollständig [Concept('concept_incorporated_state', 'inkorporiert')]"
 INCORPORATING: "[Concept('concept_incorporated_state','$concept_incorporating$')] (#tooltippable #tooltip:[State.GetTooltipTag],TOOLTIP_INCORPORATING_STATE [State.GetIncorporationProgress|v%0]#!#!)"
 INCORPORATE: "[Concept('concept_incorporated_state', '$concept_incorporate$')] @bur![State.PredictBureaucracyCost|1v]"
 INCORPORATION_TIME_SAME_CULTURE: "Es dauert insgesamt $YEARS|v0$ Jahre, bis [State.GetName] [Concept('concept_incorporated_state', 'inkorporiert')] ist, da [State.GetName] aufgrund der [Culture.GetName|l]en [concept_culture] ein [concept_homeland] [State.GetOwner.GetAltName('GEN')] ist."
 INCORPORATION_TIME_SAME_HERITAGE: "Es dauert insgesamt $YEARS|v0$ Jahre, bis [State.GetName] [Concept('concept_incorporated_state', 'inkorporiert')] ist, da [State.GetName] ein [concept_homeland] der [Culture.GetName|l]en [concept_culture] ist und die [concept_cultural_heritage_trait] „[DiscriminationTrait.GetName]“ mit einer anderen $concept_culture$ [State.GetOwner.GetAltName('IN')] teilt."
 INCORPORATION_TIME_SAME_TRAIT: "Es dauert insgesamt $YEARS|v0$ Jahre, bis [State.GetName] [Concept('concept_incorporated_state', 'inkorporiert')] ist, da [State.GetName] ein [concept_homeland] der [Culture.GetName|l]en [concept_culture] ist und die [concept_cultural_trait] „[DiscriminationTrait.GetName]“ mit einer anderen $concept_culture$ [State.GetOwner.GetAltName('IN')] teilt."
 INCORPORATION_TIME_NO_MATCH: "Es dauert insgesamt $YEARS|v0$ Jahre, bis [State.GetName] [Concept('concept_incorporated_state', 'inkorporiert')] ist, da das [concept_homeland] von [State.GetName] nichts mit anderen $concept_cultures$ [State.GetOwner.GetAltName('IN')] gemeinsam hat."
 INCORPORATION_TIME_MODIFIER_EFFECTS: "Inkorporierungstempo ändert sich um $YEARS|0-=$ Jahre aufgrund von:\n$DETAILS$"
 TOOLTIP_COLONY_STATE_NOT_VALID: "#BOLD #V $state_type_colony$#!#!\n$TOOLTIP_DELIMITER$\n[GetDesc(State.IncorporateState)]"
 TOOLTIP_COLONY_STATE_VALID: "#BOLD #V $state_type_colony$#!#!\n$TOOLTIP_DELIMITER$\nZum Inkorporieren dieses Staates klicken ([State.PredictBureaucracyCost|1] @bur![Nbsp][concept_bureaucracy])"
 TOOLTIP_STATE_DECENTRALIZED: "#HEADER $decentralized_nation$#!\n$TOOLTIP_DELIMITER$\n[concept_decentralized_nation_desc]"
 TOOLTIP_HOMELANDS: "#title [Concept('concept_homeland', '$concept_homelands$')]#!\n[State.GetHomelandsDesc]"
 TOOLTIP_CLAIMS: "#title [Concept('concept_claim', '$concept_claims$')]#!\n[State.GetClaimsDesc]"
 TOOLTIP_ARABLE_LAND: "#title #V [concept_arable_land]#!#!\n$TOOLTIP_DELIMITER$\nUngenutzt: #V [State.GetNumFreeArableLand]#!\nGenutzt: #V [State.GetNumUsedArableLand]#!\nMaximal: #V [State.GetArableLandCapacity]#!\n\n[concept_arable_land_desc]"
 TOOLTIP_STATE_MODIFIERS: "#title Staatsmodifikatoren#!\n[State.GetTimedModifiersBreakdown]"
 TOOLTIP_STATE_MODIFIER_ENTRY: "$NAME$:"
 TOOLTIP_STATE_MODIFIER_ENTRY_TIME: "($DATE_STR|v$)"
 TOOLTIP_OCCUPATION_EFFECT_PRODUCTION_PENALTY: "#variable -$FACTOR$#! [Concept('concept_good_production', 'Produktions')]-Ausstoß"
 TOOLTIP_OCCUPATION_EFFECT_MARKET_TAKEOVER: "#variable [COUNTRY.GetAltName('NOM')|U]#! Darf Verbindungen neu verknüpfen und so weiter!"
 TOOLTIP_STATE_OCCUPATION_MINIMAL: "25% durch #variable [State.GetOccupier.GetCountry.GetAltName('AKK')]#! besetzt\n#variable @army_SP![State.GetOccupationStrengthPoints]#! besetzten #variable [State.GetName]#!\n\n[State.GetOccupationEffectsAsString]"
 TOOLTIP_STATE_OCCUPATION_PARTIAL: "50 % durch #variable [State.GetOccupier.GetCountry.GetAltName('AKK')]#! besetzt\n#variable @army_SP![State.GetOccupationStrengthPoints]#! besetzen #variable [State.GetName]#!\n\n[State.GetOccupationEffectsAsString]"
 TOOLTIP_STATE_OCCUPATION_FULL: "100 % durch #variable [State.GetOccupier.GetCountry.GetAltName('AKK')]#! besetzt\n#variable @army_SP![State.GetOccupationStrengthPoints]#! besetzen #variable [State.GetName]#!\n\n[State.GetOccupationEffectsAsString]"
 PROFITABILITY_FORMAT_HIGH: "#P $VALUE|%0$#!"
 PROFITABILITY_FORMAT_MEDIUM: "#V $VALUE|%0$#!"
 PROFITABILITY_FORMAT_LOW: "#N $VALUE|%0$#!"
 EARNINGS_FORMAT_HIGH: "#P $VALUE|1$#!"
 EARNINGS_FORMAT_MEDIUM: "#V $VALUE|1$#!"
 EARNINGS_FORMAT_LOW: "#N $VALUE|1$#!"
 PROFITABILITY_FORMAT_GENERALIZED: "#v $VALUE|0%+=$#!"
 TOOLTIP_BUILDINGS_EMPLOYED: "#BOLD #V [Building.GetName]#!#!\n$TOOLTIP_DELIMITER$\nAngestellte: #BOLD #V [Building.GetNoOfEmployed]#!#!\nMax. Angestelle: #BOLD #V [Building.GetEmployeeCap]#!#!"
 TOOLTIP_BUILDINGS_OCCUPANCY: "#BOLD #V [Building.GetName]#!#!\n$TOOLTIP_DELIMITER$\n"
 TOOLTIP_BUILDING_EMPLOYMENT: "#BOLD #V Beschäftigung ([Building.GetName])#!#!\nBeschäftigung: #variable [Building.GetNoOfEmployed|1*]#! / #maximum [Building.GetEmployeeCap|1*] Angestellte#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)\n$TOOLTIP_DELIMITER$\n[Building.GetEmployeesBreakdown][Building.GetAllEmployeesTransferDesc][ConcatIfNeitherEmpty('\n\n',Building.GetAllFailedHiresDesc)]$EMPLOYMENT_HINT$"
 EMPLOYEE_POP: "[Pop.GetNumWorkforce|Dv] [Pop.GetName]"
 BUILDING_GOVERNMENT_EXPENSES_DESC: "[Building.GetGovernmentExpensesDesc]"
 TOOLTIP_BUILDING_GOVERNMENT_EXPENSES: "#header [concept_government_expenses] ([Building.GetName])#!\nWöchentliche Ausgaben: #variable @money!$VAL|D-$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 TOOLTIP_BUILDING_MATERIAL_EXPENSES: "Materialkosten: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] @money!$VAL|D-$#!#!"
 TOOLTIP_BUILDING_WAGES_EXPENSES: "Gehälter: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_WAGES_DESC @money!$VAL|D-$#!#!"
 TOOLTIP_BUILDING_SLAVE_UPKEEP: "Sklavenunterhalt: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDINGS_SLAVE_UPKEEP_DETAILS @money!$VAL|D-$#!#!"
 TOOLTIP_BUILDING_WAGE_SUBSIDIES: "Gehaltssubventionen: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_WAGES_DESC @money!$VAL|D-$#!#!"
 TOOLTIP_BUILDING_BALANCE_SUBSIDIES: "Saldosubventionen: @money!$VAL|D-$"
 TOOLTIP_BUILDING_SUBVENTIONS: "[concept_subventions]: @money!$VAL|D-$"
 TOOLTIP_BUILDING_WAGES_DESC: "[Building.GetLastWagesExpensesDesc]"
 TOOLTIP_BUILDING_TOTAL_WAGE_EXPENSES: "Wochengehälter gesamt: @money!$VAL|Dv$$SUBSIDIES$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 BUILDING_WAGE_SUBSIDIES: " + @money!$VAL|D-0$ ([concept_subsidies])"
 TOOLTIP_BUILDING_BASE_WAGE: "Das Grundgehalt für Gebäude der Art „[Building.GetName]“ (@money!$VAL|v$) basiert auf Folgendem:\n$BREAKDOWN$"
 COUNTRY_NORMAL_WAGE: "$TAB$[concept_normal_wage] [Building.GetOwner.GetAltName('IN')]: @money!$VAL|v$"
 BUILDING_NEEDED_WAGE: "$TAB$Durchschnittliches Jahresgehalt in „[Building.GetState.GetName]“: @money!$VAL|v$"
 BUILDING_WAGE_MODIFIER: "$TAB$$MODIFIER$"
 BUILDING_WAGE_DIFF_SUBSIDIES: "$TAB$[concept_subsidies] zum Erhalt eines [Concept('concept_normal_wage', 'Normalgehalts')] [Building.GetOwner.GetAltName('IN')]: @money!$VAL|v$"
 BUILDING_WAGES_INCREASING: "Gehälter sind seit letzter Woche gestiegen: #v @money!$VAL|D$#!"
 BUILDING_WAGES_DECREASING: "Gehälter sind seit letzter Woche gesunken: #v @money!$VAL|D$#!"
 TOOLTIP_BUILDING_POP_TYPE_WAGE: "@money! #tooltippable #tooltip:$BREAKDOWN_TAG$ $WAGE|Dv$#!#! - [PopType.GetName] ($NUM_WORKFORCE|Dv$)"
 BUILDING_POP_WAGE: "@money!$VAL|Dv$ – [Pop.GetName] (Jahresgehalt @money!#tooltippable #tooltip:$BREAKDOWN_TAG$ $ANNUAL_WAGE|v2$#!#! x $NUM_WORKFORCE|Dv$)"
 POP_ANNUAL_WAGE: "Jahresgehalt für Pop-Art „[Pop.GetName]“ (#v @money!$VAL$#!) basiert auf Folgendem:\n$BREAKDOWN$"
 POP_BUILDING_BASE_WAGE: "Grundgehalt in Gebäuden der Art „[Pop.GetBuilding.GetName]“: @money!$VAL|v$"
 POP_TYPE_WAGE_FACTOR: "Gehaltsfaktor für Pop-Art „[Pop.GetPopType.GetName]“: #v ×$VAL|1$#!"
 POP_WAGE_DISCRIMINATION_FACTOR: "[POP.GetWageDiscriminationDesc]"
 POP_WAGE_SUBSISTENCE_FACTOR: "$TAB$Subventionierungsfaktor für Pop-Art „[Pop.GetName]“: #v ×$VAL|1$#!"
 TOOLTIP_BUILDING_HIRING: "#BOLD #V „[Building.GetName]“ stellt derzeit neue Arbeiter ein#!#!\nBeschäftigung: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Angestellte#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)[Building.GetAllEmployeesTransferDesc][ConcatIfNeitherEmpty('\n\n',Building.GetAllFailedHiresDesc)]"
 TOOLTIP_BUILDING_HEALTH_WORLD: "#BOLD #V [Building.GetName]#!#!\n#variable ##[Building.GetProfitabilityRank]#! der produktivsten Gebäude der Welt\n#variable [Building.GetProfitability]#! ([Building.GetProfitabilityCompareIcon]) [concept_productivity] im Vergleich zum Durchschnitt\n\nEinnahmen: #tooltip:[Building.GetTooltipTag],EARNINGS_BREAKDOWN @money!#bold [Building.GetEarnings|D=+]#!#!\nGehälter: #BOLD #N @money!-[Building.GetLastWagesExpenses|D-]#!#!\n"
 TOOLTIP_BUILDING_HEALTH_BUILDING_TYPE: "#BOLD #V [Building.GetName]#!#!\n#variable ##[Building.GetProfitabilityRankInType]#! der produktivsten Gebäude vom Typ „[Building.GetName]“ in der Welt\n#variable [Building.GetProfitabilityInType]#! ([Building.GetProfitabilityCompareIconInType]) [concept_productivity] im Vergleich zum Durchschnitt für Gebäude der Art „[Building.GetBuildingType.GetName]“\n\nEinnahmen: #tooltippable #tooltip:[Building.GetTooltipTag],EARNINGS_BREAKDOWN @money!#bold [Building.GetEarnings|D=+]#!#!#!\nGehälter: #BOLD #N @money!-[Building.GetLastWagesExpenses|D-]#!#!\n"
 TOOLTIP_BUILDING_PRODUCTIVITY: "#header [concept_productivity]#!\nWert: @money![Building.GetAverageAnnualEarningsPerEmployeeFormatted] / Jahr (#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_BUILDING_TYPE,GraphTooltipTypeProfitability [Building.GetProfitabilityCompareIconInType]#!#! / #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_WORLD,GraphTooltipWorldProfitability [Building.GetProfitabilityCompareIcon]#!#!)\n$TOOLTIP_DELIMITER$\n#variable ##[Building.GetProfitabilityRankInType]#! der produktivsten Gebäude der Art „[Building.GetBuildingType.GetName]“ in der Welt \n[Building.GetProfitabilityInType] [concept_productivity] im Vergleich zum Durchschnitt für Gebäude der Art „[Building.GetBuildingType.GetName]“\n\n#variable ##[Building.GetProfitabilityRank]#! der produktivsten Gebäude der Welt\n[Building.GetProfitability] [concept_productivity] im Vergleich zum Durchschnitt\n"
 TOOLTIP_BUILDINGS_MATERIAL_EXPENSES: "\nMaterialkosten: #BOLD #N @money!-$VAL|D-$#!#!"
 TOOLTIP_BUILDINGS_SLAVE_UPKEEP: "\nSklavenunterhalt: #tooltip:$TAG$,TOOLTIP_BUILDINGS_SLAVE_UPKEEP_DETAILS #tooltippable #N @money!-$VAL|D-$#!#!#!"
 TOOLTIP_BUILDINGS_SLAVE_UPKEEP_DETAILS: "#header Sklavenunterhalt#!\nGesamtausgaben: #BOLD #V @money![Building.GetLastSlaveUpkeep|K1]#!#!\n$TOOLTIP_DELIMITER$\n[Building.GetLastSlaveBasketDesc]"
 TOOLTIP_BUILDING_HEADER: "[Building.GetBuildingType.GetName] in [Building.GetState.GetName]"
 BUILDING_RANK: "[Building.GetProfitabilityCompareIconInType] ##[Building.GetProfitabilityRankInType|v] [Building.GetBuildingType.GetNameNoFormatting]"
 BUILDING_RANK_WORLD: "[Building.GetProfitabilityCompareIcon] ##[Building.GetProfitabilityRank|v] in der Welt"
 TOOLTIP_BUILDINGS_BUDGET: "#BOLD #V [Building.GetName]#!#!\n[Building.GetBuildingType.GetBuildingKindDesc(Building.GetOwner.Self)]\n[concept_government_expenses]: #variable @money! [Building.GetGovernmentExpenses|-K]#!\n\nDie Gehälter (und eventuelle Materialkosten) werden aus der Landeskasse bezahlt. Die Gehälter bewegen sich in Richtung der Durchschnittsgehälter im Staat."
 TOOLTIP_PRODUCTION_AMOUNT: "#BOLD #V [GoodsProductionInfo.GetName]#!#! in „[ProductionMarker.AccessState.GetName]“\n$TOOLTIP_DELIMITER$\nProduziert: #BOLD #V [GoodsProductionInfo.GetAmount|D]#!#! Einheiten\n#BOLD #V [GoodsProductionInfo.GetMP|1%]#!#! der Gesamt-[concept_good_production] von „#variable [GoodsProductionInfo.GetName]#!“ auf „#variable [ProductionMarker.AccessState.GetMarket.GetName]#!“"
 TOOLTIP_PRODUCTION_PRICE: "#BOLD #V [GoodsProductionInfo.GetName]#!#!\n$TOOLTIP_DELIMITER$\nPreis: #BOLD #V @money![GoodsProductionInfo.GetPrice|1]#!#! / Einheit"
 TOOLTIP_PRODUCTION_SOLD_FOR: "#BOLD #V [GoodsProductionInfo.GetName]#!#!\n$TOOLTIP_DELIMITER$\nVerkaufte letzte Woche die Ware „[GoodsProductionInfo.GetName]“ für #BOLD #V @money![GoodsProductionInfo.GetSoldFor|D]#!#!"
 START_DIPLO_PLAY: "[concept_diplomatic_play] beginnen (Krieg erklären)"
 PRICE: "Marktpreis"
 WORLD_MARKET_PRICE: "Weltmarktpreis"
 GO_TO_BUTTON_FRONT: "Zu „[Front.GetName]“ gehen"
 GO_TO_BUTTON_BUILDING: "Zu „[Building.GetName]“ in [Building.GetState.GetName] gehen:"
 GO_TO_BUTTON_STATE: "Zu [State.GetName] gehen"
 GO_TO_BUTTON_SEA_REGION: "Gehe zu „[Province.GetSeaNodeName]“"
 GO_TO_BUTTON_COUNTRY: "Zu [Country.GetAltName('DAT')] gehen"
 GO_TO_BUTTON_CHARACTER: "Zu [Character.GetFullName] gehen"
 GO_TO_BUTTON_FORMATION: "Zu [MilitaryFormation.GetName] gehen"
 GO_TO_BUTTON_MARKET: "Zu „[Market.GetName]“ gehen"
 GO_TO_BUTTON_WORLD_MARKET: "Zum [concept_world_market] gehen"
 GO_TO_BUTTON_CONSTRUCTION_QUEUE: "Zu [concept_construction_queue] gehen"
 GO_TO_BUTTON_INTEREST_GROUP: "Zu „[InterestGroup.GetName]“ gehen"
 GO_TO_BUTTON_DIPLOMATIC_PLAY: "Zu „[DiplomaticPlay.GetName]“ gehen"
 GO_TO_BUTTON_WAR: "Zu „[War.GetName]“ gehen"
 GO_TO_BUTTON_JOURNAL: "Zu unserem Journal gehen"
 GO_TO_BUTTON_EXILED_AGITATORS: "Zu [Concept('concept_exile', 'ins Exil geschicktem')|l] [Concept('concept_agitator', '$concept_agitators$')] gehen"
 GO_TO_BUTTON_LAW: "Zur [concept_law_group] „[Law.GetGroup.GetName]“ gehen"
 GO_TO_BUTTON_MILITARY_FORMATION: "Zu [MilitaryFormation.GetName] gehen"
 GO_TO_BUTTON_POWER_BLOC: "Zu „[POWER_BLOC.GetName|U]“ gehen"
 GO_TO_BUTTON_MOVEMENT: "Zu „[PoliticalMovement.GetName]“ gehen"
 GO_TO_TREATY: "Zu „[Treaty.GetName|U]“ gehen"
 GO_TO_BUTTON_COMPANY_HQ: "Zum Kompanie-Hauptquartier-[concept_building] gehen"
 GO_TO_BUTTON_COMPANY: "Zu „[Company.GetName|U]“ gehen"
 START_RESEARCHING: "Forschung beginnen"
 POPULATION_CHARTS: "Diagramme"
 POPULATION_LIST: "Liste"
 TOOLTIP_STATE_POPULATION: "#header [Concept('concept_pop', '$concept_population$')] in [State.GetName]: #v [State.GetPopulationSize|*]#!#!\n$TOOLTIP_DELIMITER$\n[State.GetPopGrowthDesc]\n[State.GetMigrationDesc]\n[Concept('concept_pop_growth', '$concept_pop_growth_birthrate$')]: #v [State.GetPopBirthrate|+%1]#! jährlich\n[Concept('concept_pop_growth', '$concept_pop_growth_mortality$')]: #v [State.GetPopMortality|-%1]#! jährlich\n\n$STATE_AVAILABLE_LABOR$"
 TOOLTIP_STATE_MIGRATION: "#header [Concept('concept_migration', '$concept_weekly_migration$')] in „[State.GetName]“: #v [State.GetWeeklyPopNetMigration|D=+]#!#!\n$TOOLTIP_DELIMITER$\n[State.GetMigrationDesc]\n\n[State.GetMigrationAndSlaveTradeDetailsDesc]"
 STATE_MIGRATION_VALUE: "$concept_weekly_migration$ #v [State.GetWeeklyPopNetMigration|D=+]#!"
 STATE_MIGRATION_ATTRACTION: "$concept_migration_pull_short$ [State.GetMigrationLabel]"
 TOOLTIP_OCCUPANCY: "#BOLD #V Benötigte Kapazität#!#!\n$TOOLTIP_DELIMITER$\n[concept_occupancy_desc]"
 TOOLTIP_MORALE: "#BOLD #V [concept_morale]#!#!\n$TOOLTIP_DELIMITER$\nDie Moral ist der Prozentsatz der benötigten Vorräte, die eine Einheit erhält."
 TAXATION_REVENUE: "[Concept('concept_taxes','$concept_tax_revenue$')]"
 STATE_TAX_REVENUE: "$TAXATION_REVENUE$: @money!#BOLD [State.GetTaxationRevenue|+=D]#!"
 STATE_TAX_REVENUE_TOOLTIP_HEADER: "#header $TAXATION_REVENUE$ in „[State.GetName|U]“#!\nGesamt: @money![State.GetTaxationRevenue|+=D]\n$TOOLTIP_DELIMITER$"
 STATE_GOVERNMENT_EXPENSES: "[concept_government_expenses]: @money!#BOLD [State.GetGovernmentExpenses|+=D]#!"
 STATE_GOVERNMENT_EXPENSES_TOOLTIP_HEADER: "#header [concept_government_expenses] in „[State.GetName|U]“#!\nGesamt: @money![State.GetGovernmentExpenses|+=D]\n$TOOLTIP_DELIMITER$"
 STATE_TOTAL_LABOR: "#title [concept_workforce]:#! #V [State.GetTotalLabor|K]#!"
 STATE_TOTAL_LABOR_TOOLTIP: "#header [concept_workforce] gesamt#!\nAnzahl: #variable [State.GetTotalLabor|K]#!\n\n#concept Dies ist die Gesamtzahl der Staatsbevölkerung, die als Teil der Arbeitskräfte betrachtet wird und in Gebäuden beschäftigt werden kann.#!"
 STATE_AVAILABLE_LABOR: "$STATE_JOBSEEKERS$\n$STATE_PEASANTS$\n$STATE_UNEMPLOYED$\n$STATE_QUALIFICATIONS$"
 STATE_AVAILABLE_LABOR_TOOLTIP: "[State.GetJobseekersDesc]"
 STATE_INFRASTRUCTURE_PRODUCTION_MARKER: "$concept_infrastructure$: [State.GetInfrastructureBalance|0+=]"
 STATE_UNEMPLOYED: "#v [State.GetNumUnemployedWorkingAdults|D-]#! $concept_unemployed$"
 STATE_PEASANTS: "[State.GetNumSubsistenceWorkingAdults|Dv] [GetPopType('peasants').GetNameNoFormatting]"
 STATE_JOBSEEKERS: "[State.GetNumJobseekers|Dv] [Concept('concept_jobseeker', '$concept_jobseekers$')]"
 STATE_QUALIFICATIONS: "#tooltip:[State.GetTooltipTag],STATE_QUALIFICATIONS_BREAKDOWN [SelectLocalization(State.HasInsufficientQualificationsForAvailablePositions, '@red_cross!', '@green_checkmark!')]#! hat [concept_pop_qualifications], um alle aktuellen Leerstellen zu füllen"
 STATE_QUALIFICATIONS_BREAKDOWN: "[State.GetPotentialQualificationsDesc]"
 STATE_PRODUCTION_MARKER_TOOLTIP: "#header [State.GetName]#!\n$TOOLTIP_DELIMITER$\n[concept_infrastructure]: #tooltippable #tooltip:[State.GetTooltipTag],STATE_INFRASTRUCTURE_DESC [State.GetInfrastructureBalance|0+=]#!#!\n[concept_unemployed|U]: #v [State.GetNumUnemployedWorkingAdults|D-]#!\n[GetPopType('peasants').GetName]: #v [State.GetNumSubsistenceWorkingAdults|D]#!"
 MAP_LIST_STATE_AVAILABLE_LABOR: "[State.GetNumJobseekers|Dv] [SelectLocalization(State.HasInsufficientQualificationsForAvailablePositions, '@red_cross!', '@green_checkmark!')]"
 MAP_LIST_STATE_CONSCRIPTION_LIMIT: "@conscripts!#v [State.GetConscriptionLimit]#!"
 MAP_LIST_STATE_CONSCRIPTION_EXPECTED: "@conscripts!#v [MapListOption.GetActivateConscriptionCenterData.GetNumExpectedConscripts] / [State.GetConscriptionLimit]#!"
 STATE_CONSCRIPTION_TOOLTIP: "#header [Concept('concept_conscript_battalion','$concept_conscript_battalions$')] in „[State.GetName]“#!\n@conscripts!#v [MapListOption.GetActivateConscriptionCenterData.GetNumExpectedConscripts]#! derzeit\n@conscripts!#v #tooltippable #tooltip:[State.GetTooltipTag],STATE_CONSCRIPTION_LIMIT_TOOLTIP [State.GetConscriptionLimit]#!#!#! [concept_conscription_limit]"
 STATE_CONSCRIPTION_LIMIT_TOOLTIP: "#header [concept_conscription_limit] in „[State.GetName]“#!\nDerzeitige Schwelle: @conscripts!#v [State.GetConscriptionLimit]#!\n$TOOLTIP_DELIMITER$\n[State.GetConscriptionLimitDesc]"
 STATE_CONSCRIPTION_LIMIT_CONSCRIPTION_RATE: "$LEVELS|=+0$ durch $CONSCRIPTABLE_POPULATION|Dv$ wehrpflichtige [Concept('concept_pop','$concept_population$')] mit einer Einberufungsrate von #tooltippable #tooltip:$BREAKDOWN_TAG$ $CONSCRIPTION_RATE|v%$#!#!"
 STATE_CONSCRIPTION_LIMIT_MAX_LEVELS: "Maximum von $MAX_LEVELS|v0$ [concept_conscription_limit] in diesem [concept_state] aufgrund von:\n$DETAILS$"
 STATE_LITERACY: "#header [concept_literacy]#!\n[State.GetLiteracy|%1v] der [Concept('concept_pop', '$concept_pops$')] in [State.GetName] können lesen und schreiben."
 TOOLTIP_MASS_MIGRATION_TARGET: "#header [concept_migration_target]#!\n$TOOLTIP_DELIMITER$\nDieser und die umliegenden Staaten sind Ziel einer Migrationswelle der [State.GetMassMigrationOriginCountry.GetAdjective|l]en [State.GetMassMigrationCulture.GetName|l]en Menschen. Diese Migration hält bis zum #variable [State.GetMassMigrationEndDate]#! an."
 TOOLTIP_UNDISCOVERED_RESOURCES: "#header Entdeckbare Ressourcen#!\n$TOOLTIP_DELIMITER$\nIn diesem Staat gibt es unentdeckte Ressourcenvorkommen. Diese Ressourcen haben täglich die Chance, entdeckt zu werden, es sei denn, der Staat ist Teil einer [concept_isolated_state]."
 DISCOVERABLE_RESOURCES: "Entdeckbare Ressourcen"
 MARKET_ACCESS_WARNING: "@warning! #bold [StateInfraMarker.GetState.GetMarketAccess|0%]#!"
 MARKET_ACCESS_WARNING_SEA: "@warning!\n#bold [SeaRegionInfraMarker.GetStateRegion.GetSeaInfrastructure(GetPlayer)|0]%#!"
 ISOLATED: "@warning!"
 MIGRATION_TARGET_ENTRY: "#variable $TARGET$#!"
 INFLUENTIAL_CULTURE_FORMAT: "[Culture.GetNameNoFormatting]"
 STATE_AVERAGE_WAGE_TOOLTIP: "#header Gehälter#!\nStaatsdurchschnitt, jährlich: #variable @money!$VAL|D$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 BUILDING_AVERAGE_WAGE_ENTRY: "#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_AVERAGE_WAGE @money!$VAL|vD$#!#! – [Building.GetName]"
 POP_DEPENDENT_PRODUCTION: "Produktion durch [concept_dependents]"
 POP_CONSUMPTION: "[concept_pop_needs]"
 BUILDING_CONSUMPTION: "Gebäude-Verbrauch"
 BUILDING_PRODUCTION: "Gebäude-Produktion"
 GOODS_PANEL_VALUE_TOOLTIP_HEADER: "#header [GoodsPanelValue.GetName]#!\n[SelectLocalization(GoodsPanelValue.HasMarketContext, GoodsPanelValue.GetMarket.GetNameNoFormatting, GoodsPanelValue.GetState.GetNameNoFormatting)]: [GoodsPanelValue.GetValue|Dv]\n$TOOLTIP_DELIMITER$"
 GOODS_PANEL_STATE_PRICE: "[Goods.GetShortCompareDescAgainstBasePrice(Goods.GetStatePrice)]"
 TREATY_TRADE: "$goods_transfer$s-[Concept('concept_treaty', '$concept_treaties$')]"
 TREATY_TRADE_MARKET_ORDERS: "$TREATY_TRADE$: $ORDERS|=vD$"
 GOODS_ICON_AND_NAME_FORMAT: "[Goods.GetTextIcon][Nbsp][Goods.GetName]"
 GOODS_EMBARGO_HEADER: "#header [concept_embargo]#!"
 GOODS_ENCOURAGE_CONSUMPTION_HEADER: "#header [concept_encourage_consumption]#!"
 GOODS_DISCOURAGE_CONSUMPTION_HEADER: "#header [concept_discourage_consumption]#!"
 GOODS_TAX_HEADER: "#header [concept_consumption_tax]#!"
 GOODS_EMBARGO_INACTIVE: "Wir haben die Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ NICHT mit einem [concept_embargo] belegt"
 GOODS_EMBARGO_ACTIVE: "Wir haben die Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]\" mit einem [concept_embargo] belegt"
 GOODS_ENCOURAGE_CONSUMPTION_INACTIVE: "Wir [Concept('concept_encourage_consumption', 'fördern NICHT den Verbrauch')] der Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“"
 GOODS_ENCOURAGE_CONSUMPTION_ACTIVE: "Wir [Concept('concept_encourage_consumption', 'fördern den Verbrauch')] der Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“"
 GOODS_DISCOURAGE_CONSUMPTION_INACTIVE: "Wir [Concept('concept_discourage_consumption', 'vermeiden NICHT den Verbrauch')] der Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“"
 GOODS_DISCOURAGE_CONSUMPTION_ACTIVE: "Wir [Concept('concept_discourage_consumption', 'vermeiden den Verbrauch')] der Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“"
 GOODS_TAX_INACTIVE: "Wir verhängen KEINE [Concept('concept_consumption_tax', '$concept_consumption_taxes$')] auf die Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“"
 GOODS_TAX_ACTIVE: "Wir verhängen [Concept('concept_consumption_tax', '$concept_consumption_taxes$')] auf die Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“"
 TOGGLE_GOODS_EMBARGO_INACTIVE: "#instruction Linksklick#!, um Embargo zu beginnen"
 TOGGLE_GOODS_EMBARGO_ACTIVE: "#instruction Linksklick#!, um Embargo zu beenden"
 TOGGLE_GOODS_ENCOURAGE_CONSUMPTION_INACTIVE: "#instruction Linksklick#!, um Verbrauch zu fördern"
 TOGGLE_GOODS_ENCOURAGE_CONSUMPTION_ACTIVE: "#instruction Linksklick#!, um Förderung zu beenden"
 TOGGLE_GOODS_DISCOURAGE_CONSUMPTION_INACTIVE: "#instruction Linksklick#!, um Verbrauch zu vermeiden"
 TOGGLE_GOODS_DISCOURAGE_CONSUMPTION_ACTIVE: "#instruction Linksklick#!, um Vermeidung zu beenden"
 TOGGLE_GOODS_TAX_INACTIVE: "#instruction Linksklick#!, um Verbrauchssteuern einzuführen"
 TOGGLE_GOODS_TAX_ACTIVE: "#instruction Linksklick#!, um Verbrauchssteuern abzuschaffen"
 GOODS_ENCOURAGE_CONSUMPTION_EFFECTS_INACTIVE: "Eine [Concept('concept_encourage_consumption', 'Verbrauchsförderung')] der Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ kostet uns @aut![Nbsp]#v $COST|-0$#! und wird im Lauf der Zeit die Menge der Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ erhöhen, die [Concept('concept_pop', '$concept_pops$')] auf allen [Concept('concept_market', 'Märkten')], auf denen wir einen [concept_market_share] haben, als Teil eines [Concept('concept_goods_substitution', 'Warenersatzes')] konsumieren"
 GOODS_ENCOURAGE_CONSUMPTION_EFFECTS_ACTIVE: "Unsere [Concept('concept_encourage_consumption', 'Verbrauchsförderung')] der Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ zu beenden, wird die laufenden Kosten von @aut![Nbsp]#v $COST|+0$#! ebenfalls aufheben"
 GOODS_DISCOURAGE_CONSUMPTION_EFFECTS_INACTIVE: "Eine [Concept('concept_discourage_consumption', 'Verbrauchsvermeidung')] der Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ kostet uns @aut![Nbsp]#v $COST|-0$#! und wird im Lauf der Zeit die Menge der Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ verringern, die [Concept('concept_pop', '$concept_pops$')] auf allen [Concept('concept_market', 'Märkten')], auf denen wir einen [concept_market_share] haben, als Teil eines [Concept('concept_goods_substitution', 'Warenersatzes')] konsumieren"
 GOODS_DISCOURAGE_CONSUMPTION_EFFECTS_ACTIVE: "Unsere [Concept('concept_discourage_consumption', 'Verbrauchsvermeidung')] der Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ zu beenden, wird die laufenden Kosten von @aut![Nbsp]#v $COST|+0$#! ebenfalls aufheben"
 GOODS_TAX_EFFECTS_INACTIVE: "Eine [concept_consumption_tax] auf die Ware $GOODS_ICON$[Nbsp]„$GOODS_NAME$“ zu erheben, kostet uns @aut![Nbsp]#v $COST|-0$#! und erzeugt etwa @money!$REVENUE|K+$ an Einnahmen"
 GOODS_TAX_EFFECTS_ACTIVE: "Unsere [concept_consumption_tax] auf die Ware $GOODS_ICON$[Nbsp]„$GOODS_NAME$“ abzuschaffen, wird die laufenden Kosten von @aut![Nbsp]#v $COST|+0$#! aufheben, uns aber auch etwa @money!$REVENUE|K+$ an Einnahmen kosten"
 NOT_PERMITTED_TO_EMBARGO_GOODS: "Unsere Gesetze erlauben keine [Concept('concept_embargo', '$concept_embargoes$')] auf die Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“"
 NOT_PERMITTED_TO_ENCOURAGE_GOODS: "Unsere Gesetze erlauben keine [Concept('concept_encourage_consumption', 'Verbrauchsförderung')] der Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“"
 NOT_PERMITTED_TO_DISCOURGE_GOODS: "Unsere Gesetze erlauben keine [Concept('concept_discourage_consumption', 'Verbrauchsvermeidung')] der Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“"
 NOT_PERMITTED_TO_TAX_GOODS: "Unsere Gesetze erlauben es nicht, [Concept('concept_consumption_tax', '$concept_consumption_taxes$')] auf die Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ zu erheben"
 NOT_POSSIBLE_TO_TAX_FIXED_PRICE: "Es ist nicht möglich, [Concept('concept_consumption_tax', '$concept_consumption_taxes$')] auf die Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ zu erheben, da diese Ware einen Festpreis hat"
 NOT_POSSIBLE_TO_NO_BUY_ORDERS: "Es ist nicht möglich, [Concept('concept_consumption_tax', '$concept_consumption_taxes$')] auf die Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ zu erheben, da diese Ware keine [concept_buy_orders] auf unseren [Concept('concept_market', '$concept_markets$')] hat"
 NOT_POSSIBLE_TO_ENCOURAGE_IS_DISCOURAGING: "Wir [Concept('concept_discourage_consumption', 'vermeiden den Verbrauch')] der Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ bereits"
 NOT_POSSIBLE_TO_DISCOURAGE_IS_ENCOURAGING: "Wir [Concept('concept_encourage_consumption', 'fördern den Verbrauch')] der Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ bereits"
 NOT_POSSIBLE_TO_ENCOURAGE_NOT_BOUGHT_BY_POPS: "Eine [Concept('concept_encourage_consumption', 'Verbrauchsförderung')] der Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ einzuleiten, ist nicht möglich, da sie nicht von [Concept('concept_pop', '$concept_pops$')] verbraucht wird"
 NOT_POSSIBLE_TO_DISCOURAGE_NOT_BOUGHT_BY_POPS: "Eine [Concept('concept_discourage_consumption', 'Verbrauchsvermeidung')] der Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ einzuleiten, ist nicht möglich, da sie nicht von [Concept('concept_pop', '$concept_pops$')] verbraucht wird"
 NOT_POSSIBLE_TO_EMBARGO_NON_TRADABLE: "Es ist nicht möglich, ein [concept_embargo] auf die Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ zu verhängen, da sie nicht zwischen [Concept('concept_market', 'Märkten')] gehandelt werden kann"
 GOODS_INTERACTION_INSUFFICIENT_AUT: "Mindestens @aut! $REQVAL|0=+$ [concept_authority] haben"
 GOODS_INTERACTION_INSUFFICIENT_INF: "Nicht genügend $INFLUENCE$ verfügbar (benötigt: $REQVAL|1v$) "
 LAW: "#bold [Law.GetNameNoFormatting]#!"
 LAW_GROUP: "#title [Law.GetGroupName]#!"
 LAW_GROUP_ACTIVE_LAW: "#bold [Law.GetActiveGroupLaw.GetName]#!"
 INVESTMENT_LEVEL: "#variable @bur![Law.GetInvestmentCost]#!"
 INVESTMENT_LEVEL_DESC: "[concept_investment_level]: #variable [Law.GetInvestmentLevel]#!"
 CURRENT_LAW: "Derzeitiges Gesetz"
 CURRENT_LAW_TOOLTIP: "Dies ist das derzeitige Gesetz."
 COUNTRY_LAW_MODIFIER_NAME: "„[LAW_TYPE.GetName]“ [COUNTRY.GetAltNameNoFlag('IN')]"
 POPS_POLSTR_PIECHART_TITLE: "#title Pol. Str. nach [concept_profession]#!"
 POPS_POPULATION_PIECHART_TITLE: "#title Bevölkerung nach [concept_profession]#!"
 POPS_VOTES_PIECHART_TITLE: "#title Stimmen nach [concept_profession]#!"
 POPS_WORKING_IN_PIECHART_TITLE: "#title Arbeit nach Gebäudeart#!"
 POPS_CULTURE_POPULATION_PIECHART_TITLE: "#title Bevölkerung nach Kultur#!"
 POPS_CULTURE_POL_STR_PIECHART_TITLE: "#title Pol. Str. nach Kultur#!"
 POPS_RELIGION_POPULATION_PIECHART_TITLE: "#title Bevölkerung nach Religion#!"
 POPS_RELIGION_POL_STR_PIECHART_TITLE: "#title Pol. Str. nach Religion#!"
 POPULATION_PIECHART_HEADER: "[Concept('concept_pop', '$concept_population$')]"
 COUNTRY_OWNERSHIP_PIECHART_HEADER: "[Concept('concept_country', 'Landes')]-[Concept('concept_ownership_share','$concept_ownership_shares$')]"
 OWNERSHIP_DISTRIBUTION_PIECHART_HEADER: "[GetPlayer.GetAdjective|U]e [Concept('concept_building','$concept_buildings$')]-Besitzverteilung"
 POLITICAL_STRENGTH_PIECHART_HEADER: "[concept_political_strength]"
 POP_TYPE_HEADER: "#header [concept_profession]#!"
 POP_CULTURE_HEADER: "#header [concept_culture]#!"
 POP_RELIGION_HEADER: "#header [concept_religion]#!"
 POPULATION_CONCEPT_HEADER: "[Concept('concept_pop','$concept_population$')]:"
 AVERAGE_SOL_HEADER: "[concept_sol]:"
 POP_POLITICAL_MOVEMENTS_HEADER: "[Concept('concept_political_movement', '$concept_political_movements$')]"
 POLITICAL_MOVEMENT_IN_COUNTRY: "[Concept('concept_political_movement', '$concept_political_movement_short$')] [PoliticalMovement.GetCountry.GetAltName('IN')]"
 POLITICAL_MOVEMENT_SUPPORT_SHORT: "[Concept('concept_political_movement_support', '$concept_political_movement_support_short$')]"
 POLITICAL_LOBBY_IN_COUNTRY: "[Concept('concept_political_lobby','$concept_political_lobby_short$')] [PoliticalLobby.GetCountry.GetAltName('IN')]"
 SUPPORTING_INTEREST_GROUPS: "Unterstützende $concept_interest_groups$"
 SUPPORTING_AGITATORS: "Unterstützende $concept_agitators$"
 PRESSURED_INTEREST_GROUPS: "$concept_interest_groups$ $concept_political_movement_pressured_short$"
 POP_IG_INACTIVE_HEADER: "#header [concept_interest_group]#!\nDiese [concept_pop] ist [Concept('concept_politically_unaligned_aligned', '$concept_politically_unaligned$')|l]\n$TOOLTIP_DELIMITER$\n#title $concept_interest_group$n-Mitgliedschaft#!\n[Pop.GetIGMembershipDesc]"
 POP_IG_ATTRACTION_HEADER: "#header [concept_interest_group]#!\nDie primäre $concept_interest_group$ dieses [Concept('concept_pop', 'Pops')] ist die IG „[Pop.GetLargestInterestGroup.GetName]“\n$TOOLTIP_DELIMITER$\n#title $concept_interest_group$n-Mitgliedschaft#!\n[Pop.GetIGMembershipDesc]\n$POP_DETAILS_IG$"
 POP_IG_ATTRACTION_HEADER_NO_CLICK: "#header [concept_interest_group]#!\nDie primäre $concept_interest_group$ dieser [Concept('concept_pop', 'Pop')] ist die IG „[Pop.GetLargestInterestGroup.GetName]“\n$TOOLTIP_DELIMITER$\n#title $concept_interest_group$n-Mitgliedschaft#!\n[Pop.GetIGMembershipDesc]"
 POP_IG_DISCRIMINATED: "Diese $concept_pop$ gilt als [Concept('concept_disenfranchised', 'entrechtet')] aufgrund eines niedrigen [concept_acceptance]-Werts und kann daher keinen [Concept('concept_interest_group', '$concept_interest_groups$')] beitreten."
 POP_IG_MEMBERSHIP: "#variable $MEMBERS|D$#! unterstützt die IG „[INTEREST_GROUP.GetName]“ (Anziehung: #tooltip_header #tooltippable #tooltip:[INTEREST_GROUP.GetPopWithIG(POP.Self).GetTooltipTag],POP_IG_ATTRACTION_TOOLTIP $ATTRACTION|%0$#!#!#!)\n"
 POP_IG_ATTRACTION_TOOLTIP: "#header Pop-Anziehung zur Interessengruppe „[PopWithIG.GetInterestGroup.GetName]“#!\n$TOOLTIP_DELIMITER$\nGesamte Anziehung: [PopWithIG.CalcAttractionToIG|v]\n[PopWithIG.GetAttractionToIGDesc]"
 POP_IG_NO_MEMBERSHIP: "#variable $NUM_INACTIVE|D$#! sind #bold [Concept('concept_politically_unaligned_aligned', '$concept_politically_unaligned$')|l]#! und unterstützen daher keine [concept_interest_group]\n#variable $NUM_NON_PARTICIPATING|D$#! #bold entrechtete Angehörige#! dürfen sich nicht an der Politik beteiligen"
 POP_MOVEMENT_MEMBERSHIP: "#variable $MEMBERS|D$#! sind Teil der „[POLITICAL_MOVEMENT.GetName]“ (Anziehung: #tooltip_header #tooltippable #tooltip:$BREAKDOWN_TAG$ $ATTRACTION|%0$#!#!#!)\n"
 POP_MOVEMENT_ATTRACTION_TOOLTIP: "#header Pop-Anziehung zu „[PopWithMovement.GetPoliticalMovement.GetName]“#!\n$TOOLTIP_DELIMITER$\nGesamtanziehung: [PopWithMovement.CalcAttractionToMovement|v]\n[PopWithMovement.GetAttractionToMovementDesc]"
 POP_MOVEMENT_NO_MEMBERSHIP: "#variable $NUM_INACTIVE|D$#! haben sich keiner [concept_political_movement] angeschlossen\n#variable $NUM_NON_PARTICIPATING|D$#! #bold entrechtete Angehörige#! können nicht an Politik teilnehmen"
 INTEREST_GROUP_MOVEMENT_SUPPORT_INDIVIDUALS: "@population! [InterestGroup.GetNumSupportersForMovement(PoliticalMovementPanel.GetPoliticalMovement.Self)|vD] von [InterestGroup.GetPopulation|vD] [Concept('concept_individual','$concept_individuals$')]"
 INTEREST_GROUP_MOVEMENT_SUPPORT_CLOUT: "[InterestGroup.GetFractionOfCloutSupportingMovement(PoliticalMovementPanel.GetPoliticalMovement.Self)|%v0] [concept_political_movement_pressure]"
 INTEREST_GROUP_MOVEMENT_SUPPORT_CLOUT_TOOLTIP: "#header [concept_political_movement_pressure] auf „[InterestGroup.GetName]“#!\n[InterestGroup.GetFractionOfCloutSupportingMovement(PoliticalMovement.Self)|%v0] derzeit\n$TOOLTIP_DELIMITER$\nDie [Concept('concept_pop','$concept_pops$')], die [InterestGroup.GetCloutSupportingMovement(PoliticalMovement.Self)|%v0] des [Concept('concept_clout','Politischen Drucks')] insgesamt von [InterestGroup.GetClout|%v0] für „[InterestGroup.GetName]“ bilden, unterstützen diese [concept_political_movement], was zu [InterestGroup.GetFractionOfCloutSupportingMovement(PoliticalMovement.Self)|%v0] $concept_political_movement_pressure_short$ führt\n\nLiegt der $concept_political_movement_pressure$ über [GetDefine('NPolitics', 'IG_INFLUENCING_MOVEMENT_MIN_SUPPORTING_CLOUT')|0%v], gilt „[InterestGroup.GetName]“ als unter Druck durch die [PoliticalMovement.GetName]"
 POP_BASE_SUPPORT: "Grundunterstützung"
 POP_BASE_ATTRACTION: "Grundanziehung"
 POP_POVERTY: "Niedriger [concept_sol]"
 POP_STARVATION: "Hungernd"
 POP_DISCRIMINATED: "[Concept('concept_discrimination','$concept_discriminated_against$')]"
 POP_NOT_DISCRIMINATED: "Nicht [Concept('concept_discrimination','$concept_discriminated$')|l]"
 POP_RELIGIOUS_DISCRIMINATION: "Niedrige [concept_acceptance] der [concept_religion]"
 POP_NO_RELIGIOUS_DISCRIMINATION: "Hohe [concept_acceptance] der [concept_religion]"
 POP_ARISTOCRATS: "$aristocrats$-[concept_profession]"
 POP_BUREAUCRATS: "$bureaucrats$-[concept_profession]"
 POP_CAPITALISTS: "$capitalists$-[concept_profession]"
 POP_CLERGYMEN: "$clergymen$-[concept_profession]"
 POP_CLERKS: "$clerks$n-[concept_profession]"
 POP_ENGINEERS: "@engineers! Ingenieurs-[concept_profession]"
 POP_FARMERS: "@farmers! Landwirts-[concept_profession]"
 POP_PEASANTS: "$peasants$-[concept_profession]"
 POP_LABORERS: "$laborers$-[concept_profession]"
 POP_OFFICERS: "@officers! Offiziers-[concept_profession]"
 POP_ACADEMICS: "$academics$-[concept_profession]"
 POP_SHOPKEEPERS: "$shopkeepers$-[concept_profession]"
 POP_SLAVES: "$slaves$-[concept_profession]"
 POP_SOLDIERS: "$soldiers$-[concept_profession]"
 POP_MACHINISTS: "$machinists$-[concept_profession]"
 NO_LABOR_MOVEMENT: "Die [concept_technology] „#v $labor_movement$#!“ wurde noch nicht freigeschaltet"
 NO_EGALITARIANISM: "Die [concept_technology] „#v $egalitarianism$#!“ wurde noch nicht freigeschaltet"
 HAS_POLITICAL_AGITATION: "Die [concept_technology] „#v $political_agitation$#!“ wurde noch nicht freigeschaltet"
 URBAN_POP: "Nicht-landwirtschaftliche Beschäftigung"
 RURAL_POP: "Landwirtschaftliche Beschäftigung"
 POP_PRIMARY_CULTURE: "Hat [concept_primary_cultures]"
 POP_STATE_RELIGION: "Folgt der [concept_state_religion]"
 MONARCHY_BEING_ABOLISHED: "[GetLawType('law_monarchy').GetName] wird abgeschafft"
 POP_LITERACY: "Alphabetisierung"
 POP_WEALTH: "Wohlstand"
 POP_DANGEROUS_JOBS: "Gefährliche Beschäftigung"
 POP_WORKPLACE: "Arbeitsplatz"
 LITERACY_0_10: "Alphabetisierung niedriger als #variable 25 %#!"
 LITERACY_10_20: "Alphabetisierung zwischen #variable 10 %#! und #variable 20 %#!"
 LITERACY_20_30: "Alphabetisierung zwischen #variable 20 %#! und #variable 30 %#!"
 LITERACY_30_40: "Alphabetisierung zwischen #variable 30 %#! und #variable 40 %#!"
 LITERACY_40_50: "Alphabetisierung zwischen #variable 40 %#! und #variable 50 %#!"
 LITERACY_50_60: "Alphabetisierung zwischen #variable 50 %#! und #variable 60 %#!"
 LITERACY_60_70: "Alphabetisierung zwischen #variable 60 %#! und #variable 70 %#!"
 LITERACY_70_80: "Alphabetisierung zwischen #variable 70 %#! und #variable 80 %#!"
 LITERACY_80_90: "Alphabetisierung zwischen #variable 80 %#! und #variable 90 %#!"
 LITERACY_90_100: "Alphabetisierung über #variable 90 %#!"
 LEADER_POPULARITY: "[concept_popularity] von [SCOPE.gsInterestGroup('interest_group').GetLeader.GetFullNameWithTitle]"
 IN_GOVERNMENT_ATTRACTION: "Auswirkung der Besteuerung auf die Anziehung der Interessengruppe"
 MILITARY_INDUSTRIES: "Militärisch-industrielle Beschäftigung"
 POP_MILITARY_BUREAUCRACY: "Russisch-amerikanische Militärbürokratie"
 STATE_ATHEISM_LAW: "[concept_law] „[GetLawType('law_state_atheism').GetName]“"
 STATE_RELIGION_LAW: "[concept_law] „[GetLawType('law_state_religion').GetName]“"
 FREEDOM_OF_CONSCIENCE_LAW: "[concept_law] „[GetLawType('law_freedom_of_conscience').GetName]“"
 POP_LOYALISTS: "Durch Pop-Loyalisten"
 POP_RADICALS: "Durch Pop-Radikale"
 POP_RADICAL_MOVEMENT_LOSSES: "Durch konkurrierende radikale Bewegung"
 HOMESTEADING_LAW: "[concept_law] „[GetLawType('law_homesteading').GetName]“"
 ADMINISTRATION_ROLE: "Stadtverwalter"
 POP_BUREAUCRATS_ELECTED: "Besitzer hat „[GetLawType('law_elected_bureaucrats').GetName]“"
 RULER_WRONG_RELIGION: "[concept_ruler] hat die falsche [concept_religion]"
 RULER_NOT_PRIMARY_CULTURE: "[concept_ruler] gehört nicht zu einer Haupt-[concept_culture]"
 RULER_IS_ANTI_SLAVERY: "[concept_ruler] lehnt Sklaverei ab"
 RULER_IS_PRO_SLAVERY: "[concept_ruler] unterstützt Sklaverei"
 RULER_IS_CHILD: "[concept_ruler] ist ein Kind"
 RULER_IS_LIBERAL: "[concept_ruler] ist auf Reformen aus"
 RULER_POPULARITY: "[concept_ruler]-[concept_popularity]"
 ARMY_FRACTION_IN_SLAVE_STATES: "weniger als #v 50 %#! der [GetBuildingType('building_barracks').GetName]-Stufen liegen in Sklavenstaaten"
 NAVY_FRACTION_IN_SLAVE_STATES: "weniger als #v 50 %#! der [GetBuildingType('building_naval_base').GetName]-Stufen liegen in Sklavenstaaten"
 STANDARD_OF_LIVING_FOR_CULTURE: "[SCOPE.sCulture('culture').GetName|U]er [concept_sol] verglichen mit dem Durchschnitt im [concept_country]"
 STANDARD_OF_LIVING_FOR_PRIMARY_CULTURES: "[concept_primary_cultures]-[concept_sol] verglichen mit dem Durchschnitt im [concept_country]"
 STANDARD_OF_LIVING_FOR_RELIGION: "[SCOPE.sReligion('religion').GetName|U]er [concept_sol] verglichen mit dem Durchschnitt im [concept_country]"
 STANDARD_OF_LIVING_FOR_SLAVES: "[concept_sol] für [GetPopType('slaves').GetName] liegt unter #v 10#!"
 INSTITUTION_FUNDING_LEVEL_social_security: "Investitionsstufe für Institution „[GetInstitutionType('institution_social_security').GetName]“"
 INSTITUTION_FUNDING_LEVEL_colonial_affairs: "Investitionsstufe für Institution „[GetInstitutionType('institution_colonial_affairs').GetName]“"
 INSTITUTION_FUNDING_LEVEL_workplace_safety: "Investitionsstufe für Institution „[GetInstitutionType('institution_workplace_safety').GetName]“"
 INSTITUTION_FUNDING_LEVEL_schools: "Investitionsstufe für Institution „[GetInstitutionType('institution_schools').GetName]“"
 INSTITUTION_FUNDING_LEVEL_police: "Investitionsstufe für Institution „[GetInstitutionType('institution_police').GetName]“"
 INSTITUTION_FUNDING_LEVEL_health_system: "Investitionsstufe für Institution „[GetInstitutionType('institution_health_system').GetName]“"
 INSTITUTION_FUNDING_LEVEL_home_affairs: "Investitionsstufe für Institution „[GetInstitutionType('institution_home_affairs').GetName]“"
 NO_INSTITUTION_social_security: "Keine Institution „[GetInstitutionType('institution_social_security').GetName]“"
 NO_INSTITUTION_colonial_affairs: "Keine Institution „[GetInstitutionType('institution_colonial_affairs').GetName]“"
 NO_INSTITUTION_workplace_safety: "Keine Institution „[GetInstitutionType('institution_workplace_safety').GetName]“"
 NO_INSTITUTION_schools: "Keine Institution „[GetInstitutionType('institution_schools').GetName]“"
 NO_INSTITUTION_police: "Keine Institution „[GetInstitutionType('institution_police').GetName]“"
 NO_INSTITUTION_health_system: "Keine Institution „[GetInstitutionType('institution_health_system').GetName]“"
 NO_INSTITUTION_home_affairs: "Keine Institution „[GetInstitutionType('institution_home_affairs').GetName]“"
 IS_BELOW_15_SOL: "Durchschnitts-[concept_sol] liegt unter $STANDARD_OF_LIVING_LEVEL_15$"
 COUNTRY_TURMOIL: "[concept_turmoil] im [concept_country]"
 DISCRIMINATION_LEVEL_cultural_erasure: "Grundakzeptanzstufe ist @acceptance_status_2! „$cultural_erasure$“"
 DISCRIMINATION_LEVEL_violent_hostility: "Grundakzeptanzstufe ist @acceptance_status_1! „$violent_hostility$“"
 DISCRIMINATION_LEVEL_open_prejudice: "Grundakzeptanzstufe ist @acceptance_status_3! „$open_prejudice$“"
 NUMBER_OF_CLAIMS: "Zahl der [Concept('concept_claim','$concept_claims$')]"
 owner_has_modern_agriculture_tt: "Besitzer hat „[GetLawType('law_commercialized_agriculture').GetName]“ oder „[GetLawType('law_collectivized_agriculture').GetName]“"
 owner_has_homesteading_tt: "Besitzer hat „[GetLawType('law_homesteading').GetName]“ oder „[GetLawType('law_commercialized_agriculture').GetName]“"
 RELIGIOUS_SCHOOLS_LAW: "[concept_law] „[GetLawType('law_religious_schools').GetName]“"
 from_communal_divides_je: "den [concept_journal_entry] „$je_communal_divides$“"
 from_communal_divides_completed_je: "den erfolgreich abgeschlossenen [concept_journal_entry] „$je_communal_divides$“"
 CORPORATISM_TECH: "Die [concept_technology] „#v $corporatism$#!“ wurde freigeschaltet"
 NATIONALISM_TECH: "Die [concept_technology] „#v $nationalism$#!“ wurde freigeschaltet"
 PAN_NATIONALISM_TECH: "Die [concept_technology] „#v $pan-nationalism$#!“ wurde freigeschaltet"
 financial_districts_buy_farms_tt: "Der Beschluss von „[GetLawType('law_commercialized_agriculture').GetName]“ wird die Wahrscheinlichkeit erhöhen, dass [GetBuildingType('building_financial_district').GetName] $bg_plantations$-, $bg_ranching$- und $bg_agriculture$s-[Concept('concept_building','$concept_buildings$')] kaufen"
 farmers_pb_ig_shift_effect_tt: "Die IG „[GetInterestGroupVariant('ig_petty_bourgeoisie',GetPlayer).GetNameWithCountryVariant]“ wird [concept_middle_strata]-[Concept('concept_pop', '$concept_pops$')] anziehen, die in Landgebäuden angestellt sind"
 rural_laborers_tu_ig_shift_effect_tt: "Die IG „[GetInterestGroupVariant('ig_trade_unions',GetPlayer).GetNameWithCountryVariant]“ wird [concept_lower_strata]-[Concept('concept_pop', '$concept_pops$')] anziehen, die in Landgebäuden angestellt sind"
 farmers_pb_ig_shift_effect_negative_tt: "Die IG „[GetInterestGroupVariant('ig_petty_bourgeoisie',GetPlayer).GetNameWithCountryVariant]“ wird keine [concept_middle_strata]-[Concept('concept_pop', '$concept_pops$')] mehr anziehen, die in Landgebäuden angestellt sind"
 rural_laborers_tu_ig_shift_effect_negative_tt: "Die IG „[GetInterestGroupVariant('ig_trade_unions',GetPlayer).GetNameWithCountryVariant]“ wird keine [concept_lower_strata]-[Concept('concept_pop', '$concept_pops$')] mehr anziehen, die in Landgebäuden angestellt sind"
 bureaucrats_pb_ig_shift_effect_negative_tt: "Die IG „[GetInterestGroupVariant('ig_petty_bourgeoisie',GetPlayer).GetNameWithCountryVariant]“ wird weniger [GetPopType('bureaucrats').GetName] anziehen"
 urban_aristocrats_int_ig_shift_effect_negative_tt: "Die IG „[GetInterestGroupVariant('ig_intelligentsia',GetPlayer).GetNameWithCountryVariant]“ wird weniger [GetPopType('aristocrats').GetName] anziehen, die in Stadtgebäuden angestellt sind"
 bureaucrats_pb_ig_shift_effect_tt: "Die IG „[GetInterestGroupVariant('ig_petty_bourgeoisie',GetPlayer).GetNameWithCountryVariant]“ wird mehr [GetPopType('bureaucrats').GetName] anziehen"
 urban_aristocrats_int_ig_shift_effect_tt: "Die IG „[GetInterestGroupVariant('ig_intelligentsia',GetPlayer).GetNameWithCountryVariant]“ wird mehr [GetPopType('aristocrats').GetName] anziehen, die in Stadtgebäuden angestellt sind"
 aristocrats_af_ig_shift_effect_tt: "Die IG „[GetInterestGroupVariant('ig_armed_forces',GetPlayer).GetNameWithCountryVariant]“ wird mehr [GetPopType('aristocrats').GetName] anziehen"
 aristocrats_af_ig_shift_effect_negative_tt: "Die IG „[GetInterestGroupVariant('ig_armed_forces',GetPlayer).GetNameWithCountryVariant]“ wird weniger [GetPopType('aristocrats').GetName] anziehen"
 non_military_pops_af_ig_shift_effect_tt: "Die IG „[GetInterestGroupVariant('ig_armed_forces',GetPlayer).GetNameWithCountryVariant]“ wird weniger [Concept('concept_pop', '$concept_pops$')] anziehen, die [GetPopType('soldiers').GetName] oder [GetPopType('officers').GetName] sind"
 non_military_pops_af_ig_shift_effect_negative_tt: "Die IG „[GetInterestGroupVariant('ig_armed_forces',GetPlayer).GetNameWithCountryVariant]“ wird mehr [Concept('concept_pop', '$concept_pops$')] anziehen, die keine [GetPopType('soldiers').GetName] oder [GetPopType('officers').GetName] sind"
 military_pops_af_ig_shift_effect_tt: "Die IG „[GetInterestGroupVariant('ig_armed_forces',GetPlayer).GetNameWithCountryVariant]“ wird mehr [GetPopType('soldiers').GetName] anziehen"
 military_pops_af_ig_shift_effect_negative_tt: "Die IG „[GetInterestGroupVariant('ig_armed_forces',GetPlayer).GetNameWithCountryVariant]“ wird weniger [GetPopType('soldiers').GetName] anziehen"
 POP_HINDU: "Folgt der [concept_religion] „$hindu$“"
 POP_MUSLIM: "Folgt der [concept_religion] „$sunni$“ oder „$shiite$“"
 POP_INDIA_EUROPEAN_ADMINISTRATORS: "Europäische Verwalter"
 POP_INDIA_NATIVE_ADMINISTRATORS: "Kompanie-Funktionäre"
 POP_INDIA_COLONIAL_RULE: "Europäische Kolonialprivilegien"
 POP_INDIA_CIVIL_SERVICE: "Indisches Beamtentum"
 POP_INDIA_MONEYED_ELITES: "Indische vermögende Klasse"
 POP_INDIA_ADMINISTRATION_PRIVILEGES: "Ausgeschlossen von Kolonialverwaltung"
 has_colonial_growth_tt: "Muss eine Quelle für [concept_colonial_growth] haben"
 POP_SOL_OVER_EXPECTED: "[concept_sol] über [concept_expected_sol]"
 POP_SOL_UNDER_EXPECTED: "[concept_sol] über [concept_expected_sol]"
 URBAN_STATE: "[Concept('concept_urbanization', 'Staatsurbanisierung')]"
 POSITIVISM_BONUS: "Positivistische Bildung"
 from_early_trade_unions: "Gewerkschaftern fehlt Wahlrecht"
 SPRINGTIME_OF_THE_PEOPLES_UNDERWAY: "[concept_journal_entry] „Der Völkerfrühling“ läuft"
 LOW_MOVEMENT_IDENTITY_SUPPORT: "Niedrige Unterstützung innerhalb von Identität"
 POP_POLISH_ARISTOCRATS: "Erbe der Königlichen Republik"
 POP_POLISH_NATIONALISM: "Polnischer Nationalismus"
 COLONIAL_SETTLERS: "Kolonialsiedler"
 NATIONALISM: "Nationalismus erforscht"
 PAN_NATIONALISM: "Pan-Nationalismus erforscht"
 FAILED_TANZIMAT_REFORMS: "Gescheiterter [concept_journal_entry] „$je_sick_man_main$“"
 STRONG_SOCIALIST_MOVEMENT: "Mächtige sozialistische [concept_political_movement]"
 COUNTRY_IS_AUTOCRATIC: "Land hat keine „[Concept('concept_election', '$concept_election_voting_franchise$')]“"
 COUNTRY_IS_DEMOCRATIC: "Land hat demokratische [Concept('concept_election', 'Wahlen')]"
 POP_HIGH_URBANIZATION: "Stark urbanisierter [concept_state]"
 POP_LOW_URBANIZATION: "Kaum urbanisierter [concept_state]"
 POP_HIGH_LITERACY: "Hohe [concept_literacy]"
 POP_LOW_LITERACY: "Niedrige [concept_literacy]"
 EMPLOYEE_TRANSFERS: "\n\n#header Jüngste Änderungen bei Angestellten:#!\n"
 EMPLOYEE_TRANSFER_FROM: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|+=]#!#!#! [EMPLOYEE_TRANSFER.GetNewPopType.GetName] (vorher [EMPLOYEE_TRANSFER.GetOldPopType.GetName] in [EMPLOYEE_TRANSFER.GetOldEmployment.GetName])"
 EMPLOYEE_TRANSFER_TO: "#b #tooltippable #N #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN -[EMPLOYEE_TRANSFER.GetTotal|-]#!#!#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName] (wurden [EMPLOYEE_TRANSFER.GetNewPopType.GetName] in [EMPLOYEE_TRANSFER.GetNewEmployment.GetName])"
 EMPLOYEE_PROMOTION_DEMOTION_FROM: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|+]#!#!#! [EMPLOYEE_TRANSFER.GetNewPopType.GetName], die vorher der Pop-Art „[EMPLOYEE_TRANSFER.GetOldPopType.GetName]“ angehörten"
 EMPLOYEE_PROMOTION_DEMOTION_TO: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|-]#!#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName], die [EMPLOYEE_TRANSFER.GetNewPopType.GetName] wurden"
 EMPLOYEE_PROMOTION_DEMOTION_FROM_TO: "#tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|v]#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName] wurden [EMPLOYEE_TRANSFER.GetNewPopType.GetName]"
 EMPLOYEE_DIED: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|-]#!#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName] starben"
 EMPLOYEE_FIRED: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|-]#!#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName] wurden entlassen"
 EMPLOYEE_EMIGRATED: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|-]#!#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName] in einen anderen [concept_state] ausgewandert"
 EMPLOYEE_NEW: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|+=]#!#!#! [EMPLOYEE_TRANSFER.GetNewPopType.GetName], die vorher [concept_unemployed|l] waren"
 EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN: "Gesamt: [EmployeeTransfer.GetTotal|v]\nAlphabetisiert: [EmployeeTransfer.GetLiterate|v]\nNicht alphabetisiert: [EmployeeTransfer.GetIlliterate|v]"
 FAILED_HIRE: "Konnte #b keine#! „[POP_TYPE.GetName]“ anwerben aufgrund von:\n$REASONS$\n\n"
 FAILED_HIRE_NO_POP_TYPE: "Konnte #b nicht#! anwerben aufgrund von:\n$REASONS$\n\n"
 WARN_HIRE_LOW_WAGE: "\nÜberschüssige [POP_TYPE.GetName] wurden zu niedrigen Gehältern eingestellt"
 FAILED_HIRE_REASON_LOW_WAGE: "@red_cross! In Gebäuden der Art „[BUILDING.GetName]“ arbeitende [POP_TYPE.GetName] in [BUILDING.GetState.GetName], für die es $NUM_QUALIFIED_POPS|v1*$ qualifizierte [TARGET_POP_TYPE.GetName] gibt, weigern sich, zu einem Gehalt von #v @money!$OFFERED_WAGE$#! zu arbeiten. Sie würden ein Gehalt von #v @money!$MIN_ACCEPTABLE_WAGE$#! akzeptieren"
 FAILED_HIRE_REASON_LOW_QUALIFICATIONS: "@red_cross! #tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $NUM_QUALIFIED_POPS|1*$#!#!#! Pops erfüllen die [concept_pop_qualifications], [POP_TYPE.GetName] in [BUILDING.GetState.GetName] zu werden. Das Gebäude der Art „[BUILDING.GetName]“ möchte insgesamt #variable $TOTAL_TO_BE_HIRED|1*$#! einstellen"
 FAILED_HIRE_LOW_QUALIFICATIONS_BREAKDOWN: "$BREAKDOWN$"
 FAILED_HIRE_REASON_SLAVERY: "@red_cross! [POP_TYPE.GetName] kann nur angeworben werden, wenn [concept_unemployed] oder für Arbeit in einem [concept_subsistence_building]"
 FAILED_HIRE_REASON_LOW_EARNINGS: "@red_cross! Die Einstellung weiterer Angestellter würde [BUILDING.GetName] im Staat „[BUILDING.GetState.GetName]“ aufgrund der geringeren [concept_productivity] unrentabel machen (@money!$CUR_PRODUCTIVITY|1v$ -> @money!$NEW_PRODUCTIVITY|1v$)"
 FAILED_HIRE_REASON_LOW_PRODUCTIVITY: "@red_cross! Das Gebäude „[BUILDING.GetName]“ im Staat „[BUILDING.GetState.GetName]“ benötigt eine höhere [concept_productivity], um mit anderen [Concept('concept_building', '$concept_buildings$n')] im [concept_state] um Mitarbeiter konkurrieren zu können."
 FAILED_HIRE_REASON_COOLDOWN: "@red_cross! [BUILDING.GetName] in [BUILDING.GetState.GetName] konnten kürzlich keine weiteren Angestellten einstellen und werden es erst am #v $DATE$#! wieder versuchen"
 FAILED_HIRE_REASON_JOB_SATISFACTION: "@red_cross! [POP_TYPE.GetName] in [BUILDING.GetName] von „[BUILDING.GetState.GetName]“ sind [Concept('concept_job_satisfaction', '$concept_job_satisfaction_satisfied$')|l] mit ihrer derzeitigen [concept_employment] ($NUM_QUALIFIED_POPS|v1*$ sind qualifiziert für [TARGET_POP_TYPE.GetName])"
 FAILED_HIRE_REASON_JOB_SATISFACTION_NO_BUILDING: "@red_cross! [POP_TYPE.GetName] in [TARGET_BUILDING.GetState.GetName] sind [Concept('concept_job_satisfaction', '$concept_job_satisfaction_satisfied$')|l] mit ihrer derzeitigen Lage ($NUM_QUALIFIED_POPS|v1*$ sind qualifiziert für [TARGET_POP_TYPE.GetName])"
 FAILED_HIRE_BUILDING_CAN_ADJUST_HIRING_RATE: "@information! Dieses $concept_building$ wird sein Einstellungsziel verringern und nächste Woche erneut versuchen, Mitarbeiter einzustellen. Nächste Woche wird es versuchen, $HIRING_TARGET|v$ neue Angestellte einzustellen."
 FAILED_HIRE_BUILDING_CANNOT_ADJUST_HIRING_RATE: "@warning! Dieses $concept_building$ hat sein Einstellungsziel bereits auf das Minimum von $HIRING_TARGET|v$ Angestellten pro Woche verringert und kann keine neuen einstellen, bis die Probleme gelöst sind, die die Einstellung verhindern."
 WARNING_LOW_POTENTIAL_QUALIFIED_WORKFORCE: "@warning! Es gibt nur wenige Pops, die qualifiziert oder bereit sind, als [POP_TYPE.GetName] in „[TARGET_BUILDING.GetState.GetName]“ zu arbeiten, weil sie nicht bereits in lukrativeren Stellungen oder erfolgreicheren Branchen tätig sind.\nWir sollten erwägen, weitere [concept_pop_qualifications] für [POP_TYPE.GetName] aufzubauen, um den Durchsatz in [TARGET_BUILDING.GetName] zu verbessern."
 POPS_LIST_POPULATION: "#BOLD [PopListItem.GetTotalPopSizePercentage|%1]#! der Bevölkerung\n#BOLD [PopListItem.GetTotalPolStrPercentage|%1]#! der [Concept('concept_political_strength', 'Politischen Stärke')]"
 POP_LIST_POL_STR_TOOLTIP: "#header [concept_political_strength]#!\nWert: [PopListItem.GetTotalPolStr|Dv]\nDies sind #BOLD [PopListItem.GetTotalPolStrPercentage|%1v]#! der gesamten [Concept('concept_political_strength', 'Politischen Stärke')] dieser Pop-Gruppe"
 POP_LIST_SIZE_TOOLTIP: "#header Bevölkerung#!\n$POP_LIST_SIZE_BREAKDOWN$\n\nDiese Gruppe repräsentiert #BOLD [PopListItem.GetTotalPopSizePercentage|%1v]#! der angezeigten Gesamtbevölkerung"
 POP_LIST_SIZE_BREAKDOWN: "Gesamt: [PopListItem.GetTotalPopSize|Dv]\n$TAB$Erwachsene Arbeiterschaft: [PopListItem.GetWorkingAdultsPopSize|Dv]\n$TAB$[concept_dependents]: [PopListItem.GetDependentsPopSize|Dv]"
 POPS_LIST_TYPE_NAME: "#bold [PopListItem.GetTotalPopSize|D] [PopListItem.GetPopType.GetName]#!\n#bold [PopListItem.GetTotalPolStr|D]#! [concept_political_strength]"
 POPS_LIST_TYPE_SIZE_AND_NAME: "#bold [PopListItem.GetTotalPopSize|D] [PopListItem.GetPopType.GetName]#!"
 POPS_LIST_TYPE_POL_STR: "#v [PopListItem.GetTotalPolStr|D]#! [concept_political_strength]"
 POPS_LIST_MAX_SIZE: "#header [PopListItem.GetPopType.GetName]#!\nBeschäftigt: [PopListItem.GetWorkingAdultsPopSize|Dv]\n$TOOLTIP_DELIMITER$\nDieses Gebäude kann #variable [Building.GetMaxPopSize(PopListItem.GetPopType)|D]#! [PopListItem.GetPopType.GetName] beschäftigen. Dies beruht auf:\n[Building.GetMaxPopSizeDesc(PopListItem.GetPopType)] [Building.GetEmployeesTransferDesc(PopListItem.GetPopType)] [Building.GetFailedHiresDesc(PopListItem.GetPopType)]"
 POPS_LIST_SLAVES_ROLE_MAX_SIZE: "#header [PopListItem.GetPopType.GetName]#!\nBeschäftigt: [PopListItem.GetWorkingAdultsPopSize|Dv]\n[Building.GetPopTypeReplacementDesc(PopListItem.GetPopType)]\n$TOOLTIP_DELIMITER$\nDieses Gebäude kann #variable $MAX_POP_SIZE|D$#! [POP_TYPE.GetName] oder [TARGET_POP_TYPE.GetName] beschäftigen – dies beruht auf:\n$MAX_POP_SIZE_DESC$ [Building.GetEmployeesTransferDesc(TARGET_POP_TYPE.Self)] [Building.GetFailedHiresDesc(TARGET_POP_TYPE.Self)]"
 POPS_LIST_SOL: "[LabelingHelper.GetLabelForStandardOfLivingFloat(PopListItem.GetAverageSoL)|v] ([PopListItem.GetAverageSoL|1y])"
 POPS_LIST_SOL_TOOLTIP: "#header [concept_sol]#!\nDurchschnittlicher [concept_sol]: [LabelingHelper.GetLabelForStandardOfLivingFloat(PopListItem.GetAverageSoL)|v] ([PopListItem.GetAverageSoL|1y])\n\n[SelectLocalization(PopListItem.GetPopType.IsSlave, '', 'POPS_LIST_SOL_TOOLTIP_AVG_INCOME')]"
 POPS_LIST_SOL_TOOLTIP_AVG_INCOME: "Durchschnittliches Jahreseinkommen pro Pop: @money![PopListItem.GetAverageAnnualWage|vD]"
 ANNUAL_WAGE_TOOLTIP: "#header Jahresgehalt für [PopListItem.GetPopType.GetName]#!\n[PopListItem.GetPopType.GetName] in diesem Gebäude verdienen durchschnittlich #bold @money![PopListItem.GetAverageAnnualWage|Dv]#! im Jahr"
 POPS_LIST_CAN_BE_REPLACED_BY: "Kann durch [POP_TYPE.GetNameNoIcon] ersetzt werden"
 POPS_LIST_REPLACES_POP_TYPE: "Ersetzt [POP_TYPE.GetNameNoIcon]"
 POPS_LIST_FULLY_REPLACED_BY_SLAVES: "Vollständig durch [POP_TYPE.GetNameNoIcon] ersetzt"
 POPS_LIST_MAX_CAPACITY: "[POP_TYPE.GetNameNoIcon] befinden sich an der Kapazitätsgrenze"
 POPS_LIST_ESOL: "#title [PopListItem.GetAverageESoL|1]#!"
 POPS_LIST_LARGEST_IGS: "#title Primäre IG: #!"
 POP_LIST_POL_STR: "Pol. Str: #variable [Pop.GetPoliticalStrength|K]#!"
 POP_LIST_WEALTH: "Wohlstand: #variable [Pop.GetCurrentWealth|1*]#!"
 POP_LIST_NOT_ALL_POPS_SHOWN: "[GetDataModelSize(PopListItem.GetPops)]/[PopListItem.GetNumTotalPops] [Concept('concept_pop', '$concept_pops$')] angezeigt"
 STATE_CULTURES: "#title [Concept('concept_culture', '$concept_cultures$')]#!"
 STATE_RELIGIONS: "#title [Concept('concept_religion', '$concept_religions$')]#!"
 STATE_POP_TYPES: "#title [concept_profession]#!"
 VERSION_TOOLTIP: "#title Spiel-Version#!\n[GetVersion]\n#instruction Klicken, um in die Zwischenablage zu kopieren#!"
 MAX_DECLARED_INTERESTS_TOOLTIP: "#header Maximale [Concept('concept_declared_interest', '$concept_declared_interests$')] für [Country.GetAltName('AKK')]#!\n$TOOLTIP_DELIMITER$\n[Country.GetMaxNumDeclaredInterestsBreakdown]"
 MAP_INTERACTION_ADD_CONSCRIPTS: "Einen #v Staat#! auswählen, der [CombatUnitType.GetName|v] [Concept('concept_conscript_battalion', 'Wehrpflichtigen-Bataillone')] zu [MilitaryFormation.GetName|v] hinzufügen soll.\nHat derzeit @conscripts! [MilitaryFormation.GetMaxConscripts|v]"
 MAP_INTERACTION_ADD_CONSCRIPTS_INSTRUCTIONS: "#instruction Klicken, um 1 Einheit hinzuzufügen, $SHORTCUT_KEY_MOD_shift$-Klick für $SHIFT_NUM_LEVELS$, $SHORTCUT_KEY_MOD_ctrl$-Klick für $CTRL_NUM_LEVELS$#!"
 MAP_INTERACTION_ADD_CONSCRIPTS_TOOLTIP: "#header [CombatUnitType.GetName|v]-[concept_conscript_battalion] hinzufügen#!\nDerzeit $CURRENT_UNITS|v$/$MAX_UNITS|v$ [Concept('concept_conscript_battalion','$concept_conscript_battalions$')] aus „[State.GetName|v]“\n$TOOLTIP_DELIMITER$\n[concept_military_formation]: [MilitaryFormation.GetName|v]\n[concept_state]: [State.GetName|v]\n[concept_hq]: [Hq.GetName]\n\n@information! Dies fügt [MilitaryFormation.GetName|v] ein [concept_conscript_battalion] hinzu, rekrutiert aber bis zur Aushebung keine Pops.\n\n$KEY_MODIFIER_INSTRUCTIONS$"
 MAP_INTERACTION_ADD_CONSCRIPTS_LIMIT_HEADER_TOOLTIP: "#header Staats-[Concept('concept_conscript_battalion', 'Wohlstandswachstum')]-Schwelle#!\n$TOOLTIP_DELIMITER$\nWie viele [Concept('concept_conscript_battalion','$concept_conscript_battalions$')] von [Concept('concept_army', '$concept_armies$')] in [GetPlayer.GetName] beansprucht werden und wie viele vom [concept_state] unterstützt werden können."
 MAP_INTERACTION_ESC_TO_CANCEL: "#instruction #bold ESC#!, um derzeitige Karteninteraktion zu beenden#!"
 MAP_INTERACTION_BUILD_BUILDING_DESC: "Auswählen, in welchem #V Staat#! ein Gebäude der Art „#V [BUILDING_TYPE.GetName]#!“ errichtet werden soll\n#regular_size [BUILDING_TYPE.GetConstructionCosts]#!"
 MAP_INTERACTION_BUILD_BUILDING_MILTIARY_INFO_LINE: "Wird [CombatUnitType.GetName|v] für [MilitaryFormation.GetName|v] rekrutieren"
 MAP_INTERACTION_BUILD_BUILDING_MILTIARY_DESC: "$MAP_INTERACTION_BUILD_BUILDING_DESC$\n$MAP_INTERACTION_BUILD_BUILDING_MILTIARY_INFO_LINE$"
 MAP_INTERACTION_BUILD_BUILDING_PERFORMED: "Bau eines Gebäudes der Art „#V [BuildingType.GetName]#!“ begonnen"
 MAP_INTERACTION_BUILDING_BUILT: "Gebäude der Art „[Building.GetName]“ wurde in [Building.GetState.GetName] gebaut"
 MAP_INTERACTION_BUILDING_EXPANDED: "Gebäude der Art „[Building.GetName]“ in [Building.GetState.GetName] wurde auf Stufe #v [Building.GetExpansionLevel]#! erweitert"
 MAP_INTERACTION_CREATE_MARKET_DESC: "Auswählen, in welchem #V Staat#! ein #V Markt#! errichtet werden soll"
 MAP_INTERACTION_ESTABLISH_COLONY_DESC: "Auswählen, in welcher #V Staatsregion#! eine #V Kolonie#! gegründet werden soll"
 MAP_INTERACTION_ESTABLISH_COLONY_PERFORMED: "#V Kolonie#! [concept_colony] wurde gegründet"
 MAP_INTERACTION_DECLARE_INTEREST_DESC: "Die [concept_strategic_region] auswählen, in der ein [concept_interest] erklärt werden soll\n[GetPlayer.GetNumDeclaredInterests|v] / #tooltippable #tooltip:[GetPlayer.GetTooltipTag],MAX_DECLARED_INTERESTS_TOOLTIP [GetPlayer.CalcMaxNumDeclaredInterests|v]#!#! genutzt"
 MAP_INTERACTION_DECLARE_INTEREST_PERFORMED: "[concept_interest] wurde bekundet"
 MAP_INTERACTION_MERGE_MARKET_MARKET_DESC: "#V Markt#! auswählen, der mit einem #V Staat/Markt#! verbunden werden soll"
 MAP_INTERACTION_MERGE_MARKET_STATE_DESC: "#V Staat/Markt#! auswählen, der mit #V [MARKET.GetName]#! verbunden werden soll"
 MAP_INTERACTION_DIPLOMATIC_ACTION_DESC: "Das #V Land#! auswählen, dem [DIPLOMATIC_ACTION_TYPE.GetName|v] geschickt werden soll"
 MAP_INTERACTION_DIPLOMATIC_ACTION_PERFORMED: "[DIPLOMATIC_ACTION.GetNameWithContext|v]"
 MAP_INTERACTION_DIPLOMATIC_ACTION_TYPE_PERFORMED: "[DIPLOMATIC_ACTION_TYPE.GetName|v]"
 MAP_INTERACTION_DIPLOMATIC_ACTION_REDUNDANT: "[DiplomaticAction.GetName|v] gilt bereits in [Country.GetAltName('DAT')]"
 MAP_INTERACTION_DIPLOMATIC_ACTION_AI_WILL_APPROVE: "[DiplomaticAction.GetWillAcceptDesc]\n[DiplomaticAction.GetWillAcceptBreakdown]"
 MAP_INTERACTION_DIPLOMATIC_ACTION_TOOLTIP: "„[DIPLOMATIC_ACTION.GetNameWithContext|v]“ gegenüber [COUNTRY.GetAltName('AKK')][ConcatIfNeitherEmpty('\n', DIPLOMATIC_ACTION.GetMaintenanceCostFormatted)][ConcatIfNeitherEmpty('\n', DIPLOMATIC_ACTION.GetActionAcceptEffectDesc)][ConcatIfNeitherEmpty('\n', SelectLocalization(DIPLOMATIC_ACTION.IsActivePact, 'MAP_INTERACTION_DIPLOMATIC_ACTION_REDUNDANT', ''))][ConcatIfNeitherEmpty('\n\n', SelectLocalization(DIPLOMATIC_ACTION.RequiresApproval, 'MAP_INTERACTION_DIPLOMATIC_ACTION_AI_WILL_APPROVE', ''))]"
 MAP_INTERACTION_JOIN_POWER_BLOC_DESC: "Auswählen, welchem #v Machtblock#! eine Beitrittsanfrage geschickt werden soll"
 MAP_INTERACTION_JOIN_POWER_BLOC_TOOLTIP: "„[POWER_BLOC.GetName]“ eine Beitrittsanfrage schicken\n$TOOLTIP_DELIMITER$\n[DIPLOMATIC_ACTION.GetWillAcceptDesc]\n[DIPLOMATIC_ACTION.GetWillAcceptBreakdown][ConcatIfNeitherEmpty('\n\n','$ERRORS$')]"
 MAP_INTERACTION_INVASION_DESC: "Einen zu [Concept('concept_invasion', 'invadierenden')] [concept_state] auswählen"
 MAP_INTERACTION_INVASION_TOOLTIP: "#header $concept_invasion$ planen#! in [STATE.GetCountry.GetFlagTextIcon] [STATE.GetName]"
 MAP_INTERACTION_WARGOAL_wg_take_state_STATE_DESC: "Einen [concept_state] auswählen, der übernommen werden soll"
 MAP_INTERACTION_WARGOAL_wg_war_reparations_COUNTRY_DESC: "Das #v [concept_country]#! auswählen, von dem #V Kriegsreparationen#! gefordert werden sollen"
 MAP_INTERACTION_WARGOAL_wg_remove_interest_marker_COUNTRY_DESC: "Auswählen, welches #V [concept_interest]#! des [Concept('concept_country','Landes')] entfernt werden soll"
 MAP_INTERACTION_WARGOAL_wg_remove_interest_marker_STRATEGIC_REGION_DESC: "Auswählen, von welcher #V [concept_strategic_region]#! das #V [concept_interest]#! entfernt werden soll"
 MAP_INTERACTION_SET_DECREE_DESC: "[concept_state] für den [concept_decree] „$NAME|v$“ auswählen"
 MAP_INTERACTION_SET_DECREE_PERFORMED: "[DecreeType.GetName]"
 MAP_INTERACTION_INCORPORATE_STATE_DESC: "Zu inkorporierenden [concept_state] auswählen"
 MAP_INTERACTION_INCORPORATE_STATE_PERFORMED: "Staatsinkorporierung begonnen"
 MAP_INTERACTION_INCORPORATE_STATE_SELECT: "[STATE.GetName] inkorporieren ([STATE.PredictBureaucracyCost|1] @bur![Nbsp][concept_bureaucracy])"
 MAP_INTERACTION_MOVE_CAPITAL_STATE_DESC: "Einen neuen [concept_capital_state] auswählen"
 MAP_INTERACTION_MOVE_CAPITAL_STATE_PERFORMED: "Der [concept_capital_state] wurde geändert"
 MAP_INTERACTION_MOVE_CAPITAL_STATE_SELECT: "#header [concept_capital_state] nach [STATE.GetName] verlegen#!\n$TOOLTIP_DELIMITER$\n[STATE.GetName] zu unserem [concept_capital_state] zu machen, gibt dem Staat folgende Boni:\n[STATE.GetCapitalEffectsDesc]\n\nUnseren [concept_capital_state] zu wechseln, führt zu folgenden landesweiten Mali, die über einen Zeitraum von #V [GetDefine('NCountry', 'MOVE_CAPITAL_COOLDOWN_YEARS')]#! Jahren abklingen werden:\n[STATE.GetOwner.GetMoveCapitalEffectsDesc]\n\nSolange diese Mali aktiv sind, können wir den [concept_capital_state] nicht erneut wechseln."
 MAP_INTERACTION_MOVE_MARKET_CAPITAL_STATE_SELECT: "#header [concept_market_capital] nach [STATE.GetName] verlegen#!\n$TOOLTIP_DELIMITER$\n[STATE.GetName] zu unserem [concept_market_capital] zu machen, gibt außerdem die folgenden Boni:\n[STATE.GetMarketCapitalEffectsDesc]#!#!\n\nUnseren [concept_market_capital] zu wechseln, führt zu folgenden landesweiten Mali, die über einen Zeitraum von #V [GetDefine('NCountry', 'MOVE_MARKET_CAPITAL_COOLDOWN_YEARS')]#! Jahren abklingen werden:\n[STATE.GetOwner.GetMoveMarketCapitalEffectsDesc]\n\nSolange diese Mali aktiv sind, können wir den [concept_market_capital] nicht erneut wechseln."
 MAP_INTERACTION_DIPLOMATIC_PLAY_DESC: "Ziel für diese [concept_diplomatic_demand] wählen"
 MAP_INTERACTION_DIPLOMATIC_PLAY_PERFORMED: "„[DiplomaticPlayType.GetName|v]“ begonnen"
 MAP_INTERACTION_DIPLOMATIC_DEMAND_PERFORMED: "„[DiplomaticPlayType.GetName|v]“ verlangt"
 MAP_INTERACTION_FRONT_TOOLTIP: "$FRONT_ORDER_DESC$"
 MAP_INTERACTION_INVASION_CANNOT_TARGET_SELF: "#N Es ist nicht möglich, die eigenen unbesetzten Staaten als Ziel zu bestimmen#!"
 MAP_INTERACTION_ACTIVATE_CONSCRIPTION_CENTER_DESC: "[concept_state] auswählen, in dem ein [concept_conscription_center] errichtet werden soll"
 MAP_INTERACTION_ACTIVATE_CONSCRIPTION_CENTER_PERFORMED: "[concept_conscript_battalion] hinzugefügt"
 MAP_INTERACTION_SET_STRATEGIC_OBJECTIVE_ACTIVATE: "[State.GetCountry.GetFlagTextIcon] [State.GetName|U] als [concept_strategic_objective] für „[MilitaryFormation.GetName]“ zuweisen"
 MAP_INTERACTION_SET_STRATEGIC_OBJECTIVE_DEACTIVATE: "[concept_strategic_objective] in [State.GetCountry.GetFlagTextIcon] [State.GetName|U] für „[MilitaryFormation.GetName]“ entfernen"
 MAP_INTERACTION_SET_STRATEGIC_OBJECTIVE_DESC: "[concept_state] zuweisen als [concept_strategic_objective] für „[MilitaryFormation.GetName]“"
 MAP_INTERACTION_SET_STRATEGIC_OBJECTIVE_PERFORMED: "[concept_strategic_objective] zugewiesen"
 STATE_STRATEGIC_OBJECTIVE: "[concept_strategic_objective]\n[GetStrategicObjectiveFormationInState(GetPlayer.Self,State.Self).GetName]"
 STATE_STRATEGIC_OBJECTIVE_DESC: "[State.GetCountry.GetFlagTextIcon] [State.GetName|U] ist als $concept_strategic_objective$ zugewiesen für:\n$BREAKDOWN$"
 STATE_STRATEGIC_OBJECTIVE_TOOLTIP: "#header [concept_strategic_objective]#!\n$TOOLTIP_DELIMITER$\n[GetCountryStrategicObjectiveInStateDesc(GetPlayer.Self,State.Self)]"
 MAP_INTERACTION_BUILD_ARMY_FORMATION_DESC: "#V [concept_hq]#! auswählen, um [concept_army] aufzubauen"
 MAP_INTERACTION_BUILD_FLEET_FORMATION_DESC: "#V [concept_hq]#! auswählen, um [concept_fleet] aufzubauen"
 MAP_INTERACTION_BUILD_ARMY_FORMATION_VALID: "#header [concept_army] aufbauen#!\nWird im HQ „[HQ.GetName]“ stationiert"
 MAP_INTERACTION_BUILD_FLEET_FORMATION_VALID: "#header [concept_fleet] aufbauen#!\nWird im HQ „[HQ.GetName]“ stationiert"
 MAP_INTERACTION_BUILD_ARMY_FORMATION_FAIL: "[concept_army] kann nur in einem Land-[concept_hq] aufgebaut werden"
 MAP_INTERACTION_BUILD_FLEET_FORMATION_FAIL: "[concept_fleet] kann nur in einem Marine-[concept_hq] aufgebaut werden"
 MAP_INTERACTION_CREATE_FORMATION_PERFORMED: "Formation geschaffen"
 MONEY_PREFIX: "@money!"
 MAP_INTERACTION_RECRUIT_ADMIRALS_DESC: "#V [concept_hq]#! auswählen, in dem [Concept('concept_admiral', '$concept_admirals$')] rekrutiert werden sollen"
 MAP_INTERACTION_RECRUIT_ADMIRALS_FAIL_NAVAL: "[Concept('concept_admiral', '$concept_admirals$')] können nur für Marine-Hauptquartiere rekrutiert werden"
 MAP_INTERACTION_RECRUIT_ADMIRALS_VALID: "[Concept('concept_admiral', '$concept_admirals$')] für [HQ.GetName] rekrutieren"
 POWER_PROJECTION_ORDER_DESC: "#header Machtprojektion#! in der Staatsregion „[STRATEGIC_REGION.GetName]“\n[CHARACTER.GetFullName] befehlen, die eigene #variable Macht#! in die Staatsregion „[STRATEGIC_REGION.GetName]“ #variable zu projizieren#!"
 FRONT_ORDER_DESC: "„[COMMANDER_ORDER_TYPE.GetName]“ in [FRONT.GetName]"
 TRAVEL_TIME_DESC: "Die Reise hierhin dauert #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|v$#!#! "
 DECREE_DESC: "[ConcatIfNeitherEmpty('$ERRORS$','\n')]$EFFECT$\n\n#title Kosten:#! #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $COST|0$#!#!#! $AUTHORITY$\n\n#lore $DESC$#!"
 DECREE_COST_FORMATTED: "#title Kosten: #! #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $COST|0$#!#!#! $AUTHORITY$"
 SET_DECREE_IN_STATE_TOOLTIP: "#header „[Decree.GetName|U]“ in „[State.GetName|U]“ erteilen#!\n$TOOLTIP_DELIMITER$\n$DESC$"
 DECREE_TYPE_TOOLTIP: "$DESC$"
 DECREE_TOOLTIP: "$DESC$"
 DECREE_CANNOT_REMOVE_NOT_OWNER: "Kann „[Decree.GetName]“ #b nicht#! entfernen, der [Decree.GetCountry.GetAltName('VON')] erteilt wurde"
 DECREE_REMOVE: "#header „[Decree.GetName]“ in [Decree.GetState.GetName] aufheben#!"
 CANNOT_SET_DECREE: "#header #N [concept_decree] kann in [State.GetName] nicht beschlossen werden#!#!"
 DECREE_ALREADY_ACTIVE: "Der [concept_decree] „[DECREE.GetName]“ ist in [STATE.GetName] bereits aktiv"
 DECREE_ALREADY_ACTIVE_CANNOT_REMOVE: "Der [concept_decree] „[DECREE.GetName]“ in [Decree.GetState.GetName] wurde bereits [Decree.GetCountry.GetAltName('VON')] erteilt"
 DECREE_CANNOT_AFFORD: "Es werden mindestens @aut!$COST|vD$ [concept_authority] für diesen [concept_decree] benötigt"
 DECREE_COST_MINIMUM_VALUE: "Kosten von „[DECREE_TYPE.GetName]“ können #b nicht#! unter $VALUE|^v1$ fallen"
 DISABLE_DECREE_TOOLTIP: "#header Aufheben#! des Erlasses „[DecreeType.GetName]“ in [State.GetName]#!"
 DECREE_COST_ENTRY: " #variable #N -[DECREE.GetCost|0]#!#! durch „[DECREE.GetName]“ in „[DECREE.GetState.GetName|U]“"
 CHARTER_CANNOT_AFFORD: "Mindestens @aut!$COST|vD$ [concept_authority] für diese [concept_company_charter] benötigt"
 COMPANY_CHARTER_COST: " #variable #N -$COST|0$#!#! durch $COUNT$ [Concept('concept_company_charter','$concept_company_charters_short$')] über der Schwelle für freie Chartas"
 COMPANY_ALREADY_HAS_INDUSTRY_CHARTER: "Die [concept_company] hat bereits andere [GetCompanyCharterType('industry_charter').GetName]"
 COLONIAL_CHARTER_BREAKS_CONTINUITY: "Diese Kolonialcharta zu entfernen, würde die Verbindung zwischen „[STATE_REGION.GetName]“ und anderen Kolonialregionen unterbrechen."
 COLONIAL_CHARTER_NOT_CONNECTED: "Die Zielregion „[STATE_REGION.GetName]“ grenzt nicht an eine bestehende Kolonialcharta."
 SELECT_TARGET: "Ziel auswählen"
 CHANGE_TARGET: "Ziel ändern"
 SELECT: "Auswählen"
 LIBERATE: "Befreien"
 LIBERATE_TARGET_COUNTRY_FROM_COUNTRY: "[DiplomaticPlayConfirmation.GetCountryDefinition.GetName] von [DiplomaticPlayConfirmation.GetTargetCountry.GetName] befreien"
 SELECT_STATE: "Auswählen"
 CHANGE_STATE: "Ändern"
 CLEAR_STATE: "Zurücksetzen"
 NO_STATE_SELECTED: "Keine"
 DIPLOMATIC_ACTION_STATE_HEADER: "[Country.GetAdjective|U]er [concept_state]"
 START_DIPLOMATIC_PLAY_SUMMARY: "#header „[WarGoal.GetName]“-[concept_diplomatic_play] verlangen#!"
 START_DIPLOMATIC_PLAY_TOOLTIP: "#header #v $NAME$#! fordern #!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 START_DIPLOMATIC_WAR_GOAL_DESC: "[concept_primary_demand]: $DESC$"
 DIPLO_PLAY_TOOLTIP_PARTICIPANTS_HEADER: "Beteiligte [Concept('concept_country', '$concept_countries$')] in möglichem [concept_diplomatic_play]:"
 DIPLO_PLAY_TOOLTIP_ENEMY_SIDE: "Feindliche Seite: #tooltippable #tooltip:$BREAKDOWN_TAG$ #v @battalions!$NUM_BATTALIONS$#! + #v $NUM_CONSCRIPTABLE_BATTALIONS$#!#!#! ($COUNTRY_FLAGS$)"
 DIPLO_PLAY_TOOLTIP_OUR_SIDE: "Unsere Seite: #tooltippable #tooltip:$BREAKDOWN_TAG$ #v @battalions!$NUM_BATTALIONS$#! + #v $NUM_CONSCRIPTABLE_BATTALIONS$#!#!#! ($COUNTRY_FLAGS$)"
 DIPLO_PLAY_TOOLTIP_UNDECIDED: "Unentschlossen: #tooltippable #tooltip:$BREAKDOWN_TAG$ #v @battalions!$NUM_BATTALIONS$#! + #v $NUM_CONSCRIPTABLE_BATTALIONS$#!#!#! ($COUNTRY_FLAGS$)"
 DIPLO_PLAY_TOOLTIP_COUNTRIES_BREAKDOWN_UNDECIDED: "#header Mögliche [concept_diplomatic_play]-Teilnehmer#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 DIPLO_PLAY_TOOLTIP_COUNTRIES_BREAKDOWN_OUR_SIDE: "#header Mögliche [concept_diplomatic_play]-Verbündete#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 DIPLO_PLAY_TOOLTIP_COUNTRIES_BREAKDOWN_ENEMY_SIDE: "#header Mögliche [concept_diplomatic_play]-Feinde#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 DIPLO_PLAY_TOOLTIP_COUNTRY_ENTRY: "[COUNTRY.GetAltName('NOM')|U]: #variable @battalions![COUNTRY.GetBattalions|0]#! + #v [Country.CalcConscriptableBattalions]#!$LEANING_SIDE$"
 DIPLO_PLAY_TOOLTIP_COUNTRY_LEANING_SIDE: "(Tendenz zu [COUNTRY.GetAltName('DAT')])"
 DIPLO_PLAY_TOOLTIP_COUNTRY_CANNOT_JOIN_EITHER: "(Kann dem Spiel nicht beitreten)"
 DIPLO_PLAY_TOOLTIP_COUNTRY_CANNOT_JOIN_COUNTRY: "(Kann [COUNTRY.GetAltName('AKK')] nicht unterstützen)"
 DIPLO_PLAY_TOOLTIP_COUNTRY_UNDECIDED: "(Unentschlossen)"
 DIPLO_PLAY_STANCE_INITIATOR: "Initiator"
 DIPLO_PLAY_STANCE_TARGET: "Ziel"
 DIPLO_PLAY_STANCE_SUPPORTING_COUNTRY: "Unterstützt [COUNTRY.GetAltName('AKK')]"
 DIPLO_PLAY_STANCE_LEANING_COUNTRY: "Tendenz zu [COUNTRY.GetAltName('DAT')]"
 DIPLO_PLAY_STANCE_UNDECIDED: "Unentschlossen"
 PRESSED_WAR_GOALS: "Angefochtene [Concept('concept_war_goal', '$concept_war_goals$')]"
 UNPRESSED_WAR_GOALS: "Unangefochtene [Concept('concept_war_goal', '$concept_war_goals$')]"
 INTEREST_GROUPS_TAB: "Interessengruppen"
 IDEOLOGY_FOR: "Bevorzugte Ideologien: "
 IDEOLOGY_AGAINST: "Missfallende Ideologien: "
 IDEOLOGY: "$NAME$"
 PRO_IDEOLOGY: "$NAME|v$"
 ANTI_IDEOLOGY: "$NAME|v$"
 TOTAL_IDEOLOGY_APPROVAL: " ([Law.GetPercentPolStrApprove|v%1] von [Concept('concept_clout', 'Politischem Druck')] insgesamt)"
 TOTAL_IDEOLOGY_DISAPPROVAL: " ([Law.GetPercentPolStrDisapprove|v%1] von [Concept('concept_clout', 'Politischem Druck')]) insgesamt"
 INTEREST_GROUP_NAME: "#BOLD #V $NAME$#!#!"
 TOOLTIP_POPULATION: "#header [Concept('concept_interest_group', 'Interessengruppen')]-Bevölkerung#!\n[InterestGroup.GetCountry.GetAdjective|U]e Unterstützer der IG „[InterestGroup.GetName]“: [InterestGroup.GetPopulation|v1*] ([InterestGroup.GetPopulationInCountryAsPercentage|v%1])\n$TOOLTIP_DELIMITER$\n#title Nur [Concept('concept_pop','$concept_pops$')], die diese Kriterien erfüllen, werden in Erwägung ziehen, diese $concept_interest_group$ zu unterstützen:#!\n[InterestGroup.GetPopPotentialDesc]"
 IG_POPULATION_PIECHART: "#header [InterestGroup.GetName]#!\nBevölkerung: #variable [InterestGroup.GetPopulation|K]#!\n$TOOLTIP_DELIMITER$\nProzentualer Anteil der politisch verfolgten Bevölkerung [GetPlayer.GetAltName('IN')]: #variable [InterestGroup.GetPopulationInCountryAsPercentage|%1]#!"
 POPULATION_PIECHART: "#header [InterestGroup.GetName]#!\nAnführer-Ideologie: [InterestGroup.GetLeaderIdeologyDesc]\nIdeologien: [InterestGroup.GetIdeologyDesc]\nBevölkerung: #variable [InterestGroup.GetPopulation|K]#!\n$TOOLTIP_DELIMITER$\nProzentualer Anteil der politisch verfolgten Bevölkerung [GetPlayer.GetAltName('IN')]: #variable [InterestGroup.GetPopulationInCountryAsPercentage|%1]#!"
 IG_CLOUT_PIECHART: "#header [InterestGroup.GetName]#!\n$POL_STR_RATIO$\n$TOOLTIP_DELIMITER$\n$RAW_POL_STR$\n\n[concept_political_strength_desc]"
 CLOUT_PIECHART: "#header [InterestGroup.GetName]#!\nAnführer-Ideologie: [InterestGroup.GetLeaderIdeologyDesc]\nIdeologien: [InterestGroup.GetIdeologyDesc]\n$POL_STR_RATIO$\n$TOOLTIP_DELIMITER$\n$RAW_POL_STR$\n\n[concept_political_strength_desc]"
 CLOUT_PIECHART_STATE: "#header [InterestGroup.GetName]#!\nAnführer-Ideologie: [InterestGroup.GetLeaderIdeologyDesc]\nIdeologien: [InterestGroup.GetIdeologyDesc]\n[concept_clout] in [State.GetName]: #variable [InterestGroup.GetPoliticalStrengthInStateAsPercentage(State.Self)|%1]#!\n$TOOLTIP_DELIMITER$\nGesamter [concept_clout] [Country.GetAltName('IN')]: #variable [InterestGroup.GetClout|%1]#![InterestGroup.GetInfluenceDesc]\n\n$RAW_POL_STR$\n\n[concept_political_strength_desc]"
 CULTURE_PIECHART: "#header [Culture.GetName]#!\nBevölkerung: #v [Culture.GetPopulationAsPercentage(GetPlayer)|/%d] ([Culture.GetPopulation(GetPlayer)|*])#!\n$TAB$Beschäftigte: #variable [Culture.GetWorkforceAsPercentage(GetPlayer)|/%d] ([Culture.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents]: #variable [Culture.GetDependentsAsPercentage(GetPlayer)|/%d] ([Culture.GetDependents(GetPlayer)|*v])#!\n$TOOLTIP_DELIMITER$\n[concept_political_strength]: #variable [Culture.GetPolStrAsPercentage(GetPlayer)|/%d] ([Culture.GetPolStr(GetPlayer)|*])#!"
 RELIGION_PIECHART: "#header [Religion.GetName]#!\nBevölkerung: #v [Religion.GetPopulationAsPercentage(GetPlayer)|/%d] ([Religion.GetPopulation(GetPlayer)|*])#!\n$TAB$Beschäftigte: #variable [Religion.GetWorkforceAsPercentage(GetPlayer)|/%d] ([Religion.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents]: #variable [Religion.GetDependentsAsPercentage(GetPlayer)|/%d] ([Religion.GetDependents(GetPlayer)|*v])#!\n$TOOLTIP_DELIMITER$\n[concept_political_strength]: #variable [Religion.GetPolStrAsPercentage(GetPlayer)|/%d] ([Religion.GetPolStr(GetPlayer)|*])#!"
 HARVEST_CONDITIONS_HEADER: "[Concept('concept_harvest_condition', '$concept_harvest_conditions$')]"
 STARVATION_PIECHART_HEADER: "[concept_starvation]"
 STARVATION_PIESLICE_TOOLTIP: "#header [Concept('concept_pop','$concept_pops$')] mit „[StarvationType.GetName]“ in $FOOD_SECURITY_FILTER_CONTEXT_NAME$#!\n@population! [FoodSecurity.GetStarvationTypePopulation(StarvationType.Self)|Dv] ([FoodSecurity.GetStarvationTypePopulationAsPercentage(StarvationType.Self)|%0v]) derzeit\n@population! [FoodSecurity.GetNumPopsTotal|Dv] Gesamt-$concept_population$"
 FOOD_SECURITY_FILTER_CONTEXT_NAME: "[SelectLocalization(FoodSecurityFilter.HasSpecificState, 'FOOD_SECURITY_SPECIFIC_STATE', SelectLocalization(FoodSecurityFilter.HasSpecificCountry, 'FOOD_SECURITY_SPECIFIC_COUNTRY', FoodSecurityFilter.GetMarket.GetName))]"
 GLOBAL_STARVATION_DESC: "[STATE.GetFoodSecurityDesc]"
 HARVEST_CONDITION_DURATION_LABEL_VERY_HIGH: "Endlos"
 HARVEST_CONDITION_DURATION_LABEL_HIGH: "Kein Ende in Sicht"
 HARVEST_CONDITION_DURATION_LABEL_MODERATE: "Anhaltend"
 HARVEST_CONDITION_DURATION_LABEL_LOW: "Verweilend"
 HARVEST_CONDITION_DURATION_LABEL_VERY_LOW: "Nachlassend"
 HARVEST_CONDITION_DURATION_LABEL_LOWEST: "Abnehmend"
 POP_TYPE_PIECHART: "#header [PopType.GetName]#!\nBevölkerung: #v [PopType.GetPopulationAsPercentage(GetPlayer)|/%d] ([PopType.GetPopulation(GetPlayer)|*])#!\n$TAB$Beschäftigte: #variable [PopType.GetWorkforceAsPercentage(GetPlayer)|/%d] ([PopType.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents]: #variable [PopType.GetDependentsAsPercentage(GetPlayer)|/%d] ([PopType.GetDependents(GetPlayer)|*v])#!\n$TOOLTIP_DELIMITER$\n[concept_political_strength]: #variable [PopType.GetPolStrAsPercentage(GetPlayer)|/%d] ([PopType.GetPolStr(GetPlayer)|*])#!"
 CULTURE_PIECHART_POL_STR: "#header [Culture.GetName]#!\n[concept_political_strength]: #variable [Culture.GetPolStrAsPercentage(GetPlayer)|/%d] ([Culture.GetPolStr(GetPlayer)|*])#!\n$TOOLTIP_DELIMITER$\nBevölkerung: #v [Culture.GetPopulationAsPercentage(GetPlayer)|/%d] ([Culture.GetPopulation(GetPlayer)|*])#!\n$TAB$Beschäftigte: #variable [Culture.GetWorkforceAsPercentage(GetPlayer)|/%d] ([Culture.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents]: #variable [Culture.GetDependentsAsPercentage(GetPlayer)|/%d] ([Culture.GetDependents(GetPlayer)|*v])#!"
 RELIGION_PIECHART_POL_STR: "#header [Religion.GetName]#!\n[concept_political_strength]: #variable [Religion.GetPolStrAsPercentage(GetPlayer)|/%d] ([Religion.GetPolStr(GetPlayer)|*])#!\n$TOOLTIP_DELIMITER$\nBevölkerung: #v [Religion.GetPopulationAsPercentage(GetPlayer)|/%d] ([Religion.GetPopulation(GetPlayer)|*])#!\n$TAB$Beschäftigte: #variable [Religion.GetWorkforceAsPercentage(GetPlayer)|/%d] ([Religion.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents]: #variable [Religion.GetDependentsAsPercentage(GetPlayer)|/%d] ([Religion.GetDependents(GetPlayer)|*v])#!"
 POP_TYPE_PIECHART_POL_STR: "#header [PopType.GetName]#!\n[concept_political_strength]: #variable [PopType.GetPolStrAsPercentage(GetPlayer)|/%d] ([PopType.GetPolStr(GetPlayer)|*])#!\n$TOOLTIP_DELIMITER$\nBevölkerung: #v [PopType.GetPopulationAsPercentage(GetPlayer)|/%d] ([PopType.GetPopulation(GetPlayer)|*])#!\n$TAB$Beschäftigte: #variable [PopType.GetWorkforceAsPercentage(GetPlayer)|/%d] ([PopType.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents]: #variable [PopType.GetDependentsAsPercentage(GetPlayer)|/%d] ([PopType.GetDependents(GetPlayer)|*v])#!"
 STATE_CULTURE_PIECHART: "#header [Culture.GetName]#!\nBevölkerung: #v [Culture.GetStatePopulationAsPercentage(State.Self)|/%d] ([Culture.GetStatePopulation(State.Self)|*])#!\n$TAB$Beschäftigte: #variable [Culture.GetStateWorkforceAsPercentage(State.Self)|/%d] ([Culture.GetStateWorkforce(State.Self)|*v])#!\n$TAB$[concept_dependents]: #variable [Culture.GetStateDependentsAsPercentage(State.Self)|/%d] ([Culture.GetStateDependents(State.Self)|*v])#!\n\n[concept_political_strength]: #variable [Culture.GetStatePolStrAsPercentage(State.Self)|/%d] ([Culture.GetStatePolStr(State.Self)|*])#!"
 STATE_RELIGION_PIECHART: "#header [Religion.GetName]#!\nBevölkerung: #v [Religion.GetStatePopulationAsPercentage(State.Self)|/%d] ([Religion.GetStatePopulation(State.Self)|*])#!\n$TAB$Beschäftigte: #variable [Religion.GetStateWorkforceAsPercentage(State.Self)|/%d] ([Religion.GetStateWorkforce(State.Self)|*v])#!\n$TAB$[concept_dependents]: #variable [Religion.GetStateDependentsAsPercentage(State.Self)|/%d] ([Religion.GetStateDependents(State.Self)|*v])#!\n\n[concept_political_strength]: #variable [Religion.GetStatePolStrAsPercentage(State.Self)|/%d] ([Religion.GetStatePolStr(State.Self)|*])#!"
 STATE_POP_TYPE_PIECHART: "#header [PopType.GetName]#!\nBevölkerung: #v [PopType.GetStatePopulationAsPercentage(State.Self)|/%d] ([PopType.GetStatePopulation(State.Self)|*])#!\n$TAB$Beschäftigte: #variable [PopType.GetStateWorkforceAsPercentage(State.Self)|/%d] ([PopType.GetStateWorkforce(State.Self)|*v])#!\n$TAB$[concept_dependents]: #variable [PopType.GetStateDependentsAsPercentage(State.Self)|/%d] ([PopType.GetStateDependents(State.Self)|*v])#!\n\n[concept_political_strength]: #variable [PopType.GetStatePolStrAsPercentage(State.Self)|/%d] ([PopType.GetStatePolStr(State.Self)|*])#!"
 RAW_POL_STR: "[concept_political_strength]: #variable [InterestGroup.GetTotalPoliticalStrengthIncludingPartyVotes|K]#!\n[InterestGroup.GetPoliticalStrengthDesc]"
 TOOLTIP_MARGINALIZATION: "#BOLD #V Marginalisierung#!#!\n$TOOLTIP_DELIMITER$\n$MARGINALIZATION_CONCEPT$"
 POL_STR_RATIO: "[concept_clout] [InterestGroup.GetCountry.GetAltName('IN')]: #variable [InterestGroup.GetClout|%1]#![InterestGroup.GetInfluenceDesc]"
 MARGINAL_IG_DESC: "\nGilt als [concept_marginalized|l], weil [INTEREST_GROUP.GetInfluenceReason]"
 MARGINALIZATION_REASON_BELOW_THRESHOLD: "ihr [concept_clout] unter #variable [GetDefine('NPolitics', 'MARGINAL_IG_THRESHOLD')|%0]#! liegt"
 MARGINALIZATION_REASON_REVOLTING: "sie gegen #variable [INTEREST_GROUP.GetCountry.GetAltName('AKK')]#! revoltiert"
 POWERFUL_IG_DESC: "\nGilt als [concept_powerful|l], weil [INTEREST_GROUP.GetInfluenceReason]"
 POWERFUL_IG_TRAIT_BONUS_DESC: "Da diese [concept_interest_group] als [concept_powerful|l] angesehen wird, ist die Wirkung ihrer [Concept('concept_interest_group_trait', '$concept_interest_group_traits$')] um #variable [GetDefine('NPolitics', 'POWERFUL_IG_TRAIT_BONUS')|=%0]#! stärker."
 POWERFUL_REASON_ABOVE_THRESHOLD: "ihr [concept_clout] über #variable [GetDefine('NPolitics', 'POWERFUL_IG_THRESHOLD')|%0]#! liegt"
 POWERFUL_REASON_ABOVE_CUTOFF: "ihr [concept_clout] über #variable [GetDefine('NPolitics', 'POWERFUL_IG_CUTOFF')|%0]#! liegt"
 NEUTRAL_IG_DESC: "\nGilt als [concept_influential|l]"
 RADICAL_IG_TOOLTIP: "#N Die IG „[InterestGroup.GetName]“ unterstützt eine [concept_political_movement], die eine [concept_revolution] plant!#!"
 REVOLUTION_IG_TOOLTIP: "#N Die IG „[InterestGroup.GetName]“ unterstützt eine laufende [concept_revolution]!#!"
 RADICALIZATION_CHANCE_TOOLTIP: "[InterestGroup.GetChanceToRadicalizeDesc]"
 RADICALIZATION_CHANCE_BREAKDOWN: "#header Wöchentliche Chance auf Radikalisierung: #v $CHANCE|-%$#!#!\n$TOOLTIP_DELIMITER$\nDurch [concept_approval]: #v $BASE|-=1%$#![ConcatIfNeitherEmpty('$SUPPRESSION_MODIFIER_FORMAT$','$SUPPRESSION_MODIFIER$')]"
 SUPPRESSION_MODIFIER_FORMAT: "\n#header Unterdrückung:#!\n"
 POL_STR_FROM_VOTES: "[concept_political_strength] der [concept_votes] bei der letzten [concept_election]: #variable $VAL|+=D$#!"
 POL_STR_FROM_WEALTH: "Durch [concept_wealth]: #variable $VAL|+=D$#!\n$TAB$Wohlstand #tooltippable #tooltip:[POP.GetTooltipTag],TOOLTIP_WEALTH #v $WEALTH|0$#!#!#!: #bold $VALPERPOP|+=$#! pro politisch aktiver Pop"
 POL_STR_FROM_WEALTH_AVERAGE: "Durch [concept_wealth]: #variable $VAL|+=K$#!\n$TAB$Durchschnittlicher Wohlstand #variable $WEALTH|1$#!: #bold $VALPERPOP|+=2$#! pro politisch aktiver Pop"
 NO_ACTIVE_TRAITS: "Es gibt keine [Concept('concept_interest_group', '$concept_interest_groups$')] mit einer aktiven [Concept('concept_interest_group_trait', '$concept_interest_group_traits$')]"
 NO_ACTIVE_TRAITS_EXPLAIN: "#header [Concept('concept_interest_group_trait', '$concept_interest_group_traits$')]#!\nJede [concept_interest_group] hat eine Reihe von [Concept('concept_interest_group_trait', '$concept_interest_group_traits$')], die je nach [concept_approval] der [concept_interest_group] aktiv sind. Diese Eigenschaften haben entweder negative oder positive Auswirkungen auf das Land."
 PRODUCTION_METHOD_DISABLED_BY_GAME_RULE: "Diese $concept_production_method$ ist durch die Spielparameter deaktiviert"
 CHANGE_TO: "#title Wechseln zu:#!"
 CURRENT_SUFFIX: "#title (Derzeit)#!"
 INVESTMENT_TITLE: "Anzahl der [Concept('concept_investment_level', '$concept_investment_levels$')]"
 COST_PER_INVESTMENT_TITLE: "[concept_bureaucracy]-Kosten / [concept_investment_level]"
 WEEKLY_COSTS_TITLE: "Wöchentliche Gesamtkosten"
 INSTITUTION_LEVEL_CHANGE: "Wechsel auf Stufe [Institution.GetTargetInvestmentLevel]"
 INSTITUTION_CURRENT_LEVEL: "Stufe [Institution.GetInvestmentLevel]"
 INSTITUTION_TIME_TO_REACH_LEVEL: "$NUM_WEEKS|v$ Wochen"
 INSTITUTION_TIME_TO_REACH_LEVEL_DAYS: "$NUM_DAYS|v$ Tage"
 INSTITUTION_TIME_TO_REACH_LEVEL_ONE_DAY: "1 Tag"
 INSTITUTION_TIME_TO_REACH_LEVEL_LESS_THAN_ONE_DAY: "weniger als einen Tag"
 NO_INSTITUTIONS: "Keine [Concept('concept_institution', '$concept_institutions$')]"
 MINCOST: "Minimalkosten: $VAL|v1$"
 INCORPORATED_POPULATION_LAW_COST: "Die inkorporierte Bevölkerung von $POPULATION|vK$ kostet #v $COST|1+$#! pro Investition\n$TAB$Grundkosten: #v $BASECOST|1+$#! $MODIFIER$"
 INSTITUTION_INVESTMENT_FACTOR: "#title $COST_PER_INVESTMENT_TITLE$: #v $VAL|1+$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 INSTITUTION_INVESTMENT_TOTAL: "#header Gesamt-[Concept('concept_investment_level', '$concept_investment_levels$')]#!\nDerzeit: #variable @ins! $VAL|0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 INSTITUTION_INVESTMENT_LIST_ITEM: "#title [Institution.GetName]:#! #variable [Institution.GetInvestmentLevel]#!"
 CLOCK_TEXT: "#BOLD [TimeKeeper.GetCurrentDate.Format('wd. wmw wy')]#!"
 CLOCK_DEBUG_TEXT: "[TimeKeeper.GetDayOfWeek]"
 CLOCK_PAUSED: "(Pausiert)"
 CLOCK_PAUSED_BY_EVENT: "(Durch Ereignis pausiert)"
 CLOCK_PLAYING: "Spiel läuft"
 POLITICAL_ACTION_EFFECT: "#!Dies ist eine politische Handlung\nKosten: $POWER_COST$\n$DEMANDING_IGS$Diese geben #variable $TRUST|+=$#! Vertrauen#! $IG_EFFECTS$"
 POLITICAL_ACTION_EFFECT_IG_LINE: "\n#header $NAME$:#!"
 INFRASTRUCTURE_EFFECTS_HEADER: "Auswirkungen der [concept_infrastructure]:"
 SEA_REGION_PANEL_PRESENCE_OWNER: "[SeaRegionNavalPresence.GetCountry.GetAltNameNoFormatting('NOM')|U]"
 SEA_REGION_PANEL_PRESENCE_OWNER_TOOLTIP: "#variable [SeaRegionNavalPresence.GetCountry.GetAltName('NOM')|U]#! hat Kriegsschiffe in der Staatsregion „#variable [SeaRegionNavalPresence.GetProvince.GetStateRegion.GetName]#!“"
 SEA_REGION_PANEL_PRESENCE_INFRASTRUCTURE: "[SeaRegionNavalPresence.GetProvince.GetStateRegion.GetSeaInfrastructure(SeaRegionNavalPresence.GetCountry)]"
 SEA_REGION_PANEL_PRESENCE_INFRASTRUCTURE_TOOLTIP: "#header Infrastruktur#!\n[SeaRegionNavalPresence.GetProvince.GetStateRegion.GetSeaInfrastructureDesc(SeaRegionNavalPresence.GetCountry)]"
 NAVAL_PRESENCE: "Marinepräsenz"
 BATTLES: "Schlachten"
 SEA_REGION_MAP_MARKER_BATTLE_ONGOING: "Schlacht zwischen #variable [Battle.GetAttacker.GetAltName('DAT')]#! und #variable [Battle.GetDefender.GetAltName('DAT')]#!"
 SEA_INFRASTRUCTURE_MAP_MARKER_TOOLTIP: "#header [concept_market_access] in der Strategieregion „[StateRegion.GetName]“#!\n[StateRegion.GetSeaInfrastructureDesc(GetPlayer)]"
 STATE_INFRASTRUCTURE_MAP_MARKER_TOOLTIP: "#header [concept_market_access] von [State.GetName]#!\n[State.GetMarketAccessDesc]"
 ERROR_DEER_TOOLTIP: "#header Ach du lieber Hirsch!#!\n#instruction Linksklick#!, um das Fehler-Log zu öffnen\n#instruction Rechtsklick#!, um es auszublenden (bis man es erneut verärgert)"
 PRODUCTION_LENS: "[concept_production_lens]"
 POLITICAL_LENS: "[concept_political_lens]"
 DIPLOMATIC_LENS: "[concept_diplomatic_lens]"
 MILITARY_LENS: "[concept_military_lens]"
 TOOLTIP_GO_BACK: "#BOLD #V Zurück#!#!"
 TOOLTIP_CLOSE_WINDOW: "#BOLD #V Schließen#!#!"
 TOOLTIP_MINIMIZE_WINDOW: "#BOLD #V Minimieren#!#!"
 FOUND_IN_BUY_PACKAGES: "$TYPE|v$ Bewohner mit Wohlstand #variable $LOW$ – $HIGH$#!"
 rural: "Ländlich"
 urban: "Städtisch"
 TOOLTIP_WAR_SUMMARY: "#HEADER [War.GetName]#!\n#BOLD Angreifer#!:\n#V [War.GetAttackerListString]#!\n#BOLD Verteidiger#!:\n#V [War.GetDefenderListString]#!"
 TOOLTIP_REVOLUTION_SUMMARY: "#HEADER Revolution!"
 CALC_WAR_EXHAUSTION: "#indent_newline:3 In #variable $TIMER$#! Tagen wird sich dies um #bold $LOSS|+$#! ändern\n$BREAKDOWN$#!"
 WAR_EXHAUSTION_SCRIPT_VALUE_FORMAT: "#v [Negate_CFixedPoint('(CFixedPoint)$VALUE$')|=+2]#! durch $KEY$"
 WAR_EXHAUSTION_BASE: "Grundwert"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_NONE: "Keine feindliche Besetzung"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_LOW: "Niedrige feindliche Besetzung ([SCOPE.GetRootScope.GetCountry.GetEnemyOccupation|%1v])"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_MODERATE: "Mittlere feindliche Besetzung ([SCOPE.GetRootScope.GetCountry.GetEnemyOccupation|%1v])"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_SUBSTANTIAL: "Beträchtliche feindliche Besetzung ([SCOPE.GetRootScope.GetCountry.GetEnemyOccupation|%1v])"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_HIGH: "Hohe feindliche Besetzung ([SCOPE.GetRootScope.GetCountry.GetEnemyOccupation|%1v])"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_EXTREME: "Extreme feindliche Besetzung ([SCOPE.GetRootScope.GetCountry.GetEnemyOccupation|%1v])"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_TOTAL: "Vollständige feindliche Besetzung ([SCOPE.GetRootScope.GetCountry.GetEnemyOccupation|%1v])"
 WAR_EXHAUSTION_FROM_ENEMY_CONTESTED_WARGOALS: "[SCOPE.sWar('war').GetEnemyContestedWargoalsFraction(SCOPE.GetRootScope.GetCountry.Self)|%0v] gegnerische [Concept('concept_controlled_war_goal','Kontrolle')] über „$WARGOALS$“"
 WAR_EXHAUSTION_FROM_CASUALTIES: "[SCOPE.sWar('war').GetCasualties(SCOPE.GetRootScope.GetCountry.Self)|Dv] [concept_casualties] erlitten im Vergleich zur maximalen Militärgröße von #v [SCOPE.GetRootScope.GetCountry.GetNumCombatUnits|D]K#! und ihre Seite hat [SCOPE.sWar('war').GetSizeWeightedLostBattlesFraction(SCOPE.GetRootScope.GetCountry.Self)|%1v] der Schlachten verloren (skaliert mit der Größe der Schlacht)"
 WAR_EXHAUSTION_FROM_ACCEPTANCE_OF_DEAD: "Kultur-[concept_acceptance] durch #negative_value [SCOPE.sWar('war').GetTotalDeadWithWarExhaustionTooltip(SCOPE.GetRootScope.GetCountry.Self)]#! Todesopfern insgesamt"
 WAR_EXHAUSTION_TOTAL_DEAD_FORMATTED: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE|D$#!#!"
 WAR_EXHAUSTION_FROM_CULTURAL_ACCEPTANCE: "#header [concept_war_exhaustion] durch [Concept('concept_culture','$concept_cultural$')]e [concept_acceptance]#!\n#negative_value $VALUE|=2$#! pro Woche\n$TOOLTIP_DELIMITER$\n$DEATHS|vK$ [concept_dead] bisher\n$MOBILIZED|vK$ derzeitige [concept_manpower] im [concept_war]\n\n#indent_newline:3 #title $concept_war_exhaustion$ durch Todesfälle in der jeweiligen [concept_culture]#!:\n$BREAKDOWN$#!"
 WAR_EXHAUSTION_FROM_CULTURAL_ACCEPTANCE_ENTRY: "#indent_newline:3 #negative_value $VALUE|=2$#! durch $DEATHS|vD$ [Culture.GetName|l]e Todesfälle ([AcceptanceStatus.GetName])\n$BREAKDOWN$#!"
 WAR_EXHAUSTION_FROM_CULTURAL_ACCEPTANCE_NO_IMPACT_ENTRY: "Keine Auswirkungen durch $DEATHS|vD$ [Culture.GetName|l]e Todesfälle ([AcceptanceStatus.GetName])"
 WAR_EXHAUSTION_FROM_CULTURAL_ACCEPTANCE_ENTRY_BREAKDOWN: "#negative_value $IMPACT|=2$#! durch $DEATHS|vD$ Tote auf der [Country.GetAdjective|l]en Seite"
 WAR_EXHAUSTION_FROM_country_war_exhaustion_casualties_mult: "$country_war_exhaustion_casualties_mult$"
 WAR_EXHAUSTION_FROM_TURMOIL: "[Concept('concept_radical', 'Radikale')] Bevölkerung ([SCOPE.GetRootScope.GetCountry.CalcTurmoil|%1v])"
 WAR_SUPPORT_FROM_LOBBIES: "[concept_clout|U] von [Concept('concept_political_lobby', '$concept_political_lobbies_short$')], die den $concept_war$ unterstützen"
 WAR_OPPOSITION_FROM_LOBBIES: "[concept_clout|U] von [Concept('concept_political_lobby', '$concept_political_lobbies_short$')], die gegen den $concept_war$ sind"
 WAR_EXHAUSTION_FROM_EVENTS: "Ereignisse"
 WARGOAL_CONTESTED_DESC: "#header [concept_war_goal] in „[WarGoal.GetWar.GetName]“#!\n„[WarGoal.GetName|U]“ wird [Concept('concept_controlled_war_goal','$concept_controlled_war_goal_short$')|l]\n$TOOLTIP_DELIMITER$\n[WarGoal.GetIsContestedDesc]"
 WARGOAL_NOT_CONTESTED_DESC: "#header [concept_war_goal] in „[WarGoal.GetWar.GetName]“#!\n„[WarGoal.GetName|U]“ wird #n nicht#! [Concept('concept_controlled_war_goal','$concept_controlled_war_goal_short$')|l]\n$TOOLTIP_DELIMITER$\n[WarGoal.GetIsContestedDesc]"
 WAR_GOAL_CONTESTED_DESC_SHORT: "[SelectLocalization(WarGoal.IsContested,'WAR_GOAL_CONTESTED_SHORT','WAR_GOAL_NOT_CONTESTED_SHORT')]"
 WAR_GOAL_CONTESTED_SHORT: "@green_checkmark_box! „[WarGoal.GetName|U]“ wird [Concept('concept_controlled_war_goal','$concept_controlled_war_goal_short$')|l]#indent_newline:3 \n[WarGoal.GetIsContestedDesc]#!"
 WAR_GOAL_NOT_CONTESTED_SHORT: "@simple_box![WarGoal.GetName|U] wird #b nicht#! [Concept('concept_controlled_war_goal','$concept_controlled_war_goal_short$')|l]#indent_newline:3 \n[WarGoal.GetIsContestedDesc]#!"
 WARGOAL_CONTESTATION_CONTROL_HEADER_ANY: "$EFFECT_LIST_BULLET$#title Dieses [concept_war_goal] wird [Concept('concept_controlled_war_goal','$concept_controlled_war_goal_short$')|l], wenn ein #b beliebiger#! der folgenden Faktoren zutrifft:#!"
 WARGOAL_CONTESTATION_CONTROL_HEADER_ALL: "$EFFECT_LIST_BULLET$#title Dieses [concept_war_goal] wird [Concept('concept_controlled_war_goal','$concept_controlled_war_goal_short$')|l], wenn #b alle#! der folgenden Faktoren zutreffen:#!"
 WARGOAL_CONTESTATION_CONTROL_TARGET_STATE: "$TAB$$EFFECT_LIST_BULLET$[COUNTRY.GetAltName('NOM')|U] und die [Concept('concept_ally', '$concept_allies$n')] dieser Nation kontrollieren [TARGET_STATE.GetCountry.GetFlagTextIcon] „[TARGET_STATE.GetName]“"
 WARGOAL_CONTESTATION_CONTROL_ENEMY_CAPITAL: "$TAB$$EFFECT_LIST_BULLET$[COUNTRY.GetAltName('NOM')|U] und die [Concept('concept_ally', '$concept_allies$n')] dieser Nation kontrollieren den [TARGET_COUNTRY.GetAdjective|l]en [Concept('concept_capital_state','$concept_capital_state_short$')] ([TARGET_COUNTRY.GetCapital.GetName])"
 WARGOAL_CONTESTATION_CONTROL_ANY_ENEMY_STATE: "$TAB$$EFFECT_LIST_BULLET$[COUNTRY.GetAltName('NOM')|U] und die [Concept('concept_ally', '$concept_allies$n')] dieser Nation kontrollieren mindestens einen [TARGET_COUNTRY.GetAdjective|l]en [concept_state]"
 WARGOAL_CONTESTATION_CONTROL_OWN_STATE: "$TAB$$EFFECT_LIST_BULLET$[COUNTRY.GetAltName('NOM')|U] und die [Concept('concept_ally', '$concept_allies$n')] dieser Nation behalten die Kontrolle über [TARGET_STATE.GetCountry.GetFlagTextIcon] „[TARGET_STATE.GetName]“"
 WARGOAL_CONTESTATION_CONTROL_OWN_CAPITAL: "$TAB$$EFFECT_LIST_BULLET$[COUNTRY.GetAltName('NOM')|U] und die [Concept('concept_ally', '$concept_allies$n')] dieser Nation behalten die Kontrolle über den [COUNTRY.GetAdjective|l]en [Concept('concept_capital_state','$concept_capital_state_short$')] ([COUNTRY.GetCapital.GetName])"
 WARGOAL_CONTESTATION_CONTROL_ALL_OWN_STATES: "$TAB$$EFFECT_LIST_BULLET$[COUNTRY.GetAltName('NOM')|U] und die [Concept('concept_ally', '$concept_allies$n')] dieser Nation behalten die Kontrolle über alle [COUNTRY.GetAdjective|l]en [Concept('concept_state','$concept_states$')]"
 WARGOAL_CONTESTATION_CONTROL_ALL_CLAIMED_STATES: "$TAB$$EFFECT_LIST_BULLET$[COUNTRY.GetAltName('NOM')|U] und die [Concept('concept_ally', '$concept_allies$n')] dieser Nation behalten die Kontrolle über alle [COUNTRY.GetAdjective|l]en [Concept('concept_state','$concept_states$')], die [TARGET_COUNTRY.GetAltName('VON')] [Concept('concept_claim','beansprucht')] werden ($LIST$)"
 WARGOAL_CONTESTATION_CONTROL_ANY_RELEASABLE_STATE: "$TAB$$EFFECT_LIST_BULLET$[COUNTRY.GetAltName('NOM')|U] und die [Concept('concept_ally', '$concept_allies$n')] dieser Nation kontrollieren mindestens einen [TARGET_COUNTRY.GetAdjective|l]en [concept_state], der als Teil [COUNTRY_CREATION.GetAltName('VON')] freigegeben werden kann ($LIST$)"
 TOOLTIP_COUNTRY: "#BOLD #V [GetPlayer.GetAltName('NOM')|U]#!#!"
 TOOLTIP_COUNTRY_DELAYED: "\n$TOOLTIP_DELIMITER$\nKulturen: #VARIABLE [GetPlayer.GetPrimaryCulturesDesc]#!\nReligion: #VARIABLE [GetPlayer.GetStateReligion.GetName]#!\nHauptsitz: #VARIABLE [GetPlayer.GetCapital.GetName]#!\n\n[concept_country_desc]"
 TOOLTIP_BUILDING_USES: "#header [Goods.GetNameNoFormatting]#!"
 TOOLTIP_BUILDING_USES_UNITS_INFO: "#header [Goods.GetName]#!\nVerbrauchte Menge: #variable [Building.GetConsumption(Goods.Self)|0]#! / Woche\n[Building.GetConsumptionDesc(Goods.Self)]"
 TOOLTIP_BUILDING_PRODUCES: "#header [Goods.GetNameNoFormatting]#!\n"
 TOOLTIP_BUILDING_PRODUCES_UNITS_INFO: "#header [Goods.GetName]#!\nProduzierte Menge: #variable [Building.GetProduction(Goods.Self)|0]#!\n$TOOLTIP_DELIMITER$\nAusstoßanteil: #variable [Building.GetOutputPercentage(Goods.Self)|%1]#! [concept_good_production] durch „[Building.GetName]“\n[Building.GetProductionDesc(Goods.Self)]"
 TOOLTIP_BUILDING_USES_VALUE_INFO: "#header [Goods.GetTextIcon][Nbsp][Goods.GetName]#!\nAusgaben durch Nutzung der Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“: #variable @money![Building.GetConsumptionValue(Goods.Self)|D]#!\n$TOOLTIP_DELIMITER$\nStaatsregionspreis: [Goods.GetStatePriceWithTooltip|1]"
 TOOLTIP_BUILDING_PRODUCES_VALUE_INFO: "#header [Goods.GetName]#!\nEinnahmen durch Verkauf der Ware „#variable [Goods.GetName]#!“: #variable @money![Building.GetProductionValue(Goods.Self)|D]#!\n$TOOLTIP_DELIMITER$\nStaatsregionspreis: [Goods.GetStatePriceWithTooltip]"
 TOOLTIP_RESET: "#BOLD #V Zurücksetzen"
 MARKET_BALANCE: "#title Saldo:\n#variable @money![Market.GetBalance|D+=]#!#!"
 MARKET_BALANCE_TOOLTIP: "#header Marktsaldo#!\nMenge: #variable @money!$VAL|D+=$#!\n$TOOLTIP_DELIMITER$\nGesamtverkäufe: #variable @money!$SALESVAL|D+=$#!\n$SALESBREAKDOWN$\n\nGesamteinkäufe: #variable @money!$PURCHASEVAL|D+=$#!\n$PURCHASEBREAKDOWN$"
 MARKET_GOOD_PRODSTATS: "[GOODS.GetTextIcon] #variable $AMOUNT|D=+$#! für #variable @money!$VAL|D=+$#! verkauft ([GOODS.GetName])"
 MARKET_GOOD_CONSUMESTATS: "[GOODS.GetTextIcon] #variable $AMOUNT|D=+$#! für #variable @money!$VAL|D=+$#! gekauft ([GOODS.GetName])"
 AND_X_MORE_MONEY_VAL: "… und #variable $NUM$#! weitere im Wert von #variable @money!$VAL|D$#!"
 BUILDING_URBANIZATION_WITH_VALUE: "$VALUE|0v=$ ([BUILDING.GetName])"
 BUILDING_INFRA_USAGE_WITH_VALUE: "#v $VALUE|0-$#! für Gebäude der Art „[BUILDING.GetName]“"
 BUILDING_COMBAT_UNIT_PRODUCTION: "Stellt $UNIT_ICON$ $UNIT_COUNT|v$ bereit"
 BUILDING_COMBAT_UNIT_PRODUCTION_BREAKDOWN_FORMATION_ITEM: "#header [MilitaryFormation.GetName]#! #indent_newline:3 \n[Building.GetUnitsProvidedToFormationBreakdown(MilitaryFormation.Self)]#!"
 IMPORT_SUGGESTIONS_TITLE: "Waren mit erheblicher Importnachfrage"
 EXPORT_SUGGESTIONS_TITLE: "Waren mit erheblichem Exportpotenzial"
 NO_GOODS_IMPORT_SUGGESTION: "Keine [Concept('concept_good', '$concept_goods$')] haben beträchtliche Importnachfrage"
 NO_GOODS_EXPORT_SUGGESTION: "Keine [Concept('concept_good', '$concept_goods$')] haben beträchtliche Exportnachfrage"
 MARKET_GOODS_BALANCE_TOOLTIP: "[SelectLocalization(LessThan_int32(FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance), '(int32)0'), 'MARKET_GOODS_BALANCE_TOOLTIP_IMBALANCE', 'MARKET_GOODS_BALANCE_TOOLTIP_BALANCE')]"
 MARKET_GOODS_BALANCE_TOOLTIP_BALANCE: "#header Saldo für die Ware „[Goods.GetName]“#!\nDerzeitiges Gleichgewicht: #v [FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance)|=Do]#!\n$TOOLTIP_DELIMITER$\n[concept_sell_orders]: [Goods.GetMarketSellOrdersWithTooltip]\n[concept_buy_orders]: [Goods.GetMarketBuyOrdersWithTooltip]\n\nDer Balken zeigt die [Concept('concept_market_impact', '$concept_market_impact_short$')] an, die das derzeitige Gleichgewicht der Ware „[Goods.GetTextIcon] [Goods.GetName]“ auf den Markt „[Goods.GetMarket.GetName]“ hat. Je #blue blauer#! oder #gold goldener#! der Balken ist, desto größer ist die $concept_market_impact_short$."
 MARKET_GOODS_BALANCE_TOOLTIP_IMBALANCE: "#header Saldo für die Ware „[Goods.GetName]“#!\nDerzeitiges Ungleichgewicht: #v [FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance)|=Do]#!\n$TOOLTIP_DELIMITER$\n[concept_sell_orders]: [Goods.GetMarketSellOrdersWithTooltip]\n[concept_buy_orders]: [Goods.GetMarketBuyOrdersWithTooltip]\n\nDer Balken zeigt die [Concept('concept_market_impact', '$concept_market_impact_short$')] an, die das derzeitige Ungleichgewicht der Ware „[Goods.GetTextIcon] [Goods.GetName]“ auf den Markt „[Goods.GetMarket.GetName]“ hat. Je #blue blauer#! oder #gold goldener#! der Balken ist, desto größer ist die $concept_market_impact_short$."
 STATE_GOODS_BALANCE_TOOLTIP: "[SelectLocalization(LessThan_int32(FixedPointToInt(Goods.GetStateProductionConsumptionDiff), '(int32)0'), 'STATE_GOODS_BALANCE_TOOLTIP_IMBALANCE', 'STATE_GOODS_BALANCE_TOOLTIP_BALANCE')]"
 STATE_GOODS_BALANCE_TOOLTIP_BALANCE: "#header Saldo für „[Goods.GetName]“#!\nDerzeitiger Saldo: #v [FixedPointToInt(Goods.GetStateProductionConsumptionDiff)|=Do]#!\n$TOOLTIP_DELIMITER$\nProduktion: [Goods.GetStateProductionWithTooltip]\nVerbrauch: [Goods.GetStateConsumptionWithTooltip]\n\nDer Balken zeigt die [Concept('concept_market_impact', '$concept_market_impact_short$')] an, die der derzeitige Saldo von „[Goods.GetTextIcon] [Goods.GetName]“ in „[Goods.GetState.GetName]“ hat. Je #blue blauer#! oder #gold goldener#! der Balken ist, desto größer ist die $concept_market_impact_short$."
 STATE_GOODS_BALANCE_TOOLTIP_IMBALANCE: "#header Saldo für „[Goods.GetName]“#!\nDerzeitiges Ungleichgewicht: #v [FixedPointToInt(Goods.GetStateProductionConsumptionDiff)|=Du]#!\n$TOOLTIP_DELIMITER$\nProduktion: [Goods.GetStateProductionWithTooltip]\nVerbrauch: [Goods.GetStateConsumptionWithTooltip]\n\nDer Balken zeigt die [Concept('concept_market_impact', '$concept_market_impact_short$')] an, die das derzeitige Ungleichgewicht von „[Goods.GetTextIcon] [Goods.GetName]“ in „[Goods.GetState.GetName]“ hat. Je #blue blauer#! oder #gold goldener#! der Balken ist, desto größer ist die $concept_market_impact_short$."
 PRODUCED_IN: "Produziert in"
 CONSUMED_IN: "Verbraucht in"
 POP_IG_POPULATION: "#variable [PopListPopEntry.GetIGTotalPops|D]#!"
 POP_WORK_INFO: "von [Pop.GetWorksAt]"
 POP_TOTAL_INFO: "#header Gesamtgröße#!\n[Pop.GetTotalSize|Dv] einschließlich [concept_dependents]"
 POP_IG_POPULATION_TOOLTIP: "#header [Concept('concept_interest_group', 'Interessengruppen')]-Mitglieder#!\n$TOOLTIP_DELIMITER$\n$POP_IG_POPULATION_WORKING_ADULTS$\n$POP_IG_POPULATION_DEPENDENTS$"
 POP_IG_WORKING_ADULTS: "Erwachsene Arbeiterschaft: #variable [PopListPopEntry.GetIGWorkingAdults|D]#!"
 POP_IG_DEPENDENTS: "#header Angehörige#!\nWert: #variable [PopListPopEntry.GetIGDependents|1D]#!\n$TOOLTIP_DELIMITER$\n[concept_dependents_desc]"
 POP_IG_POPULATION_WORKING_ADULTS: "Diese Pop unterstützt die „#variable [PopListPopEntry.GetInterestGroupContext.GetName]#!“ mit #variable [PopListPopEntry.GetIGWorkingAdults|1K]#! ihrer #variable [PopListPopEntry.GetPop.GetNumWorkforce|1K]#! Beschäftigten"
 POP_IG_POPULATION_DEPENDENTS: "Diese Pop unterstützt „#variable [PopListPopEntry.GetInterestGroupContext.GetName]#!“ mit #variable [PopListPopEntry.GetIGDependents|1K]#! ihrer #variable [PopListPopEntry.GetPop.GetNumDependentPoliticalParticipants|1K]#! mündigen Angehörigen"
 POP_IG_WORKING_ADULTS_TOOLTIP: "#variable Erwachsene Arbeiterschaft#!\n$POP_IG_POPULATION_WORKING_ADULTS$"
 POP_IG_DEPENDENTS_TOOLTIP: "#variable Angehörige#!\n$POP_IG_POPULATION_DEPENDENTS$"
 POP_POL_STR_SLAVES_DESC: "[Concept('concept_slavery','$concept_slaves$')] haben keine $concept_political_strength$"
 POP_IG_POL_STR: "Pol. Str: #variable [PopListPopEntry.GetIGPolStr|D]#!"
 POP_IG_POL_STR_TOOLTIP: "#header [concept_political_strength]#!\n$TOOLTIP_DELIMITER$\nDiese Pop unterstützt „#variable [PopListPopEntry.GetInterestGroupContext.GetName]#!“ mit #variable [PopListPopEntry.GetIGPolStr|K]#! von #variable [PopListPopEntry.GetPop.GetPoliticalStrength|D]#! ihrer [Concept('concept_political_strength', 'Politischen Stärke')]."
 POP_POL_STR: "#header [concept_political_strength]#!\nWert: #variable [Pop.GetPoliticalStrength|1*]#!\n$TOOLTIP_DELIMITER$\n[Pop.GetPoliticalStrengthDesc]"
 POP_SUPPORTERS_POL_STR: "#header [concept_political_strength]#!\nWert: #v [Pop.GetPoliticalMovementSupportersPoliticalStrength(PoliticalMovement.Self)|1*]#!\n$TOOLTIP_DELIMITER$\n[Pop.GetPoliticalStrengthDesc][AddTextIf(Not(StringIsEmpty(Pop.GetPoliticalStrengthDesc)), '\n\n')]"
 POP_POPULATION: "#header [Pop.GetName]-[Concept('concept_pop','$concept_population$')] in [Pop.GetState.GetName]#!\n$POP_SIZE_BREAKDOWN$\n$TOOLTIP_DELIMITER$\n[Pop.GetPopGrowthDesc]\n[ConcatIfNeitherEmpty('\n',Pop.GetPopAssimilationDesc)][ConcatIfNeitherEmpty('\n',Pop.GetPopConversionDesc)]   $TOOLTIP_DELIMITER$\n[Pop.GetWorkforceRatioDesc]"
 POP_SIZE_BREAKDOWN: "Gesamt: #variable [Pop.GetTotalSize|Dv]#!\n$TAB$Beschäftigte: #variable [Pop.GetNumWorkforce|Dv]#!\n$TAB$Angehörige: #variable [Pop.GetDependentsSize|Dv]#!"
 WORKFORCE_RATIO_DESC: "#variable $VAL|%1$#! dieser Pop hat eine Beschäftigung, während der Rest aus Angehörigen besteht. Im Lauf der Zeit nähert sich dieses Verhältnis #variable $TARGET_VAL|%1$#! an. Dies basiert auf Folgendem:\n$BREAKDOWN$"
 TARGET_WORKFORCE_RATIO_BASE_FOR_TYPE: "Grundwert für „#variable $POP_TYPE$#!“: #variable $VAL|%1$#!"
 CHANGE_SPEED_TOOLTIP_1: "Spieltempo auf 1 setzen"
 CHANGE_SPEED_TOOLTIP_2: "Spieltempo auf 2 setzen"
 CHANGE_SPEED_TOOLTIP_3: "Spieltempo auf 3 setzen"
 CHANGE_SPEED_TOOLTIP_4: "Spieltempo auf 4 setzen"
 CHANGE_SPEED_TOOLTIP_5: "Spieltempo auf 5 setzen"
 POP_WORKFORCE_TOOLTIP: "#header Beschäftigte#!\nWert: #variable [Pop.GetNumWorkforce|1K]#!\n$TOOLTIP_DELIMITER$\n[concept_pop_qualifications]\n[Pop.GetQualificationsDesc]\n$TOOLTIP_DELIMITER$\n[concept_working_adults_desc]"
 POP_DEPENDENTS_TOOLTIP: "#header Angehörige#!\nWert: #variable [Pop.GetDependentsSize|1K]#!\n$TOOLTIP_DELIMITER$\n[concept_dependents_desc]"
 DEPENDENT_WAGE_SOURCES: "aus $BREAKDOWN$"
 DEPENDENT_WAGE_SOURCE_ODD_JOBS: "Aushilfsarbeiten"
 DEPENDENT_WAGES_TOOLTIP: "#header Angehörigen-Gehälter: #variable @money!$VAL|=+D$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 DEPENDENT_BASE_WAGES: "Grundwert: @money!$VAL|0v$ (@money!$PERPOP|3v$ pro Angehörigem)"
 POP_POPULATION_GROWTH: "#tooltip_header Bevölkerungswachstum#!\nJährliche Bevölkerungsveränderung: #variable [Pop.GetPopGrowth|+=0]#!\n$TOOLTIP_DELIMITER$\n[Pop.GetPopGrowthDesc]"
 POP_POPULATION_LITERACY: "#header Alphabetisierung#!\n[Pop.GetLiteracyDesc]"
 POP_BUILDING_SHARES: "[concept_ownership_share]: #v $SHARE|%1$#!"
 POP_DISCRIMINATION_STATUS_DISCRIMINATED: "$concept_discriminated$"
 POP_DISCRIMINATION_STATUS_ACCEPTED: "Akzeptiert"
 TURMOIL_TITLE: "#title [concept_turmoil]#!"
 TURMOIL_ENTRY_TITLE: "#title [concept_turmoil]:#!"
 NET_INCOME_TITLE: "#title Nettoeinkommen#!"
 PRODUCTION_NO_CONCEPT: "Produktion"
 STATISTICS: "Statistik"
 TURMOIL: "Aufruhr:"
 MIGRATION_TARGETS: "Migrationsziele:"
 CULTURAL_TRAITS: "Kultureigenschaften:"
 CULTURE_OBSESSIONS: "Versessenheiten:"
 CULTURE_TABOOS: "Tabus:"
 RELIGIONS: "$concept_religions$:"
 HOMELANDS: "Heimatländer"
 OWNER: "Besitzer"
 CULTURE_OF_SAME_HERITAGE: "Kulturen mit derselben Herkunft ([GetDataModelSize(Culture.AccessSameHeritageCultures)])"
 TURMOIL_OF_CULTURE: "Durschnittlicher [concept_turmoil] aller [Concept('concept_pop', '$concept_pops$')] dieser Kultur"
 ACCEPTANCE_IN_PLAYER_COUNTRY: "$concept_acceptance$ [GetPlayer.GetAltNameNoFormatting('IN')|U]"
 STATE_WITH_FLAG_UNLESS_OWNED_BY_PLAYER: "[AddTextIf(Not(ObjectsEqual(State.GetOwner, GetPlayer.Self)), State.GetOwner.GetFlagTextIcon)] [State.GetName|U]"
 MARKET_WITH_FLAG_UNLESS_OWNED_BY_PLAYER: "[AddTextIf(Not(ObjectsEqual(Market.GetOwner, GetPlayer.Self)), Market.GetOwner.GetFlagTextIcon)] [Market.GetName|U]"
 WORLD_MARKET_GOODS_BALANCE_TOOLTIP: "#header [concept_world_market]-Saldo#!\nWert: [Goods.GetWorldMarketExportsAndImportsBalance|v0]"
 POP_NEEDS_ENTRY_DEFAULT: "[Goods.GetName] – Standard-[Concept('concept_good', '$concept_goods$')] für „[PopNeed.GetNameNoFormatting]“"
 POP_NEEDS_ENTRY: "[Goods.GetName] – Entspricht $MULT|2v$ Einheit(en) von „[PopNeed.GetDefaultGoods.GetName]“"
 BUY_PACKAGE_POP_CONSUMPTION_WEALTH_SPECIFIC: "Wird von [Concept('concept_pop', '$concept_pops$')] der [Concept('concept_wealth', 'Wohlstandsstufe')] $LEVEL|v$ verbraucht"
 BUY_PACKAGE_POP_CONSUMPTION_WEALTH_TO_LEVEL: "Wird von [Concept('concept_pop', '$concept_pops$')] der [Concept('concept_wealth', 'Wohlstandsstufe')] $LEVEL|v$ oder niedriger verbraucht"
 BUY_PACKAGE_POP_CONSUMPTION_WEALTH_FROM_LEVEL: "Wird von [Concept('concept_pop', '$concept_pops$')] der [Concept('concept_wealth', 'Wohlstandsstufe')] $LEVEL|v$ oder höher verbraucht"
 BUY_PACKAGE_POP_CONSUMPTION_WEALTH_BETWEEN_LEVELS: "Wird von [Concept('concept_pop', '$concept_pops$')] verbraucht, die zwischen den [Concept('concept_wealth', 'Wohlstandsstufen')] $FROM|v$ bis $TO|v$ sind"
 BUY_PACKAGE_POP_CONSUMPTION_WEALTH_ALL: "Wird von [Concept('concept_pop', '$concept_pops$')] aller [Concept('concept_wealth', 'Wohlstandsstufen')] verbraucht"
 BUY_PACKAGE_POP_CONSUMPTION_WEALTH_NONE: "Wird von keinen [Concept('concept_pop', '$concept_pops$')] verbraucht"
 POPNEED_SUMMARY_DESC: "#tooltippable #tooltip:$TAG$,POPNEED_EXPENSES_TOOLTIP @money![PopNeed.CalcTotalCost|Dv]#!#! – [PopNeed.GetName]"
 POPNEED_DETAILS_DESC: "$CONSUMPTIONDESC$\n\n$GOODSDESC$"
 POPNEED_EXPENSES_DESC: "Derzeitige Ausgaben für die Ware „[PopNeed.GetNameNoFormatting]“ für [POP.GetTotalSize|Kv] [POP.GetCulture.GetName|l]e „[POP.GetPopType.GetName]“ in „[POP.GetState.GetName]“:\n$CONTENTS$\nGesamtkosten: @money![PopNeed.CalcTotalCost|Dv]"
 POPNEED_DETAILS_TOOLTIP: "[PopNeed.GetDetailsDesc]"
 POPNEED_EXPENSES_TOOLTIP: "[PopNeed.GetExpensesDesc]"
 BUY_PACKAGE_POP_NEEDS_ENTRY: "[Goods.GetTextIcon][Nbsp][Goods.GetName]$CULTURESTATUSDESC$\n#bold $AMOUNT|vD$#! ($AMOUNT_PERCENT|1v%$ der Menge)\n#variable @money!$GOODS_TOTAL_COST|D$#! ([Goods.GetCompareIconAgainstBasePrice('(CFixedPoint)$GOODS_UNITARY_PRICE$')]) ($GOODS_COST_PERCENT|1v%$ der Kosten)\n\n"
 BUY_PACKAGE_GOOD_CULTURE_TABOO: " ([concept_taboo])"
 BUY_PACKAGE_GOOD_CULTURE_OBSESSION: " ([concept_obsession])"
 POPNEED_USAGE_DESC: "Wird von [Concept('concept_pop', '$concept_pops$')] $WEALTHDESC$ verbraucht („[PopNeed.GetName]“-[Concept('concept_pop_needs', '$concept_pop_needs_short$')])"
 POPNEED_USAGE_WEALTH_SPECIFIC: "der [Concept('concept_wealth', 'Wohlstandsstufe')] $LEVEL|v$"
 POPNEED_USAGE_WEALTH_BETWEEN_LEVELS: "der [Concept('concept_wealth', 'Wohlstandsstufen')] $FROM|v$ bis $TO|v$"
 POPNEED_USAGE_WEALTH_ALL: "aller [Concept('concept_wealth', 'Wohlstandsstufen')]"
 POPNEED_USAGE_WEALTH_NONE: "keiner [Concept('concept_wealth', 'Wohlstandsstufen')]"
 BUY_PACKAGE_CONTENT_ENTRY_WITH_COSTS: "#bold $AMOUNT|vD$#! [Goods.GetTextIcon][Nbsp][Goods.GetName] – #variable @money!$GOODS_TOTAL_COST|D$#! ([GOODS.GetCompareIconAgainstBasePrice('(CFixedPoint)$GOODS_UNITARY_PRICE$')])"
 TOOLTIP_QOL_BUY_PACKAGE: "#header [concept_sol]#!\nliegt derzeit bei #variable [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(EmployeeStats.GetCurrentStandardOfLiving)]#! (#V [EmployeeStats.GetCurrentStandardOfLiving]#!)\nErwartet wird #variable [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(EmployeeStats.GetExpectedStandardOfLiving)]#! (#V [EmployeeStats.GetExpectedStandardOfLiving]#!)"
 BUILDINGS_OWNED: "Liegenschaftenportfolio"
 BUILDING: "Gebäude"
 OWNED: "Besessene Stufen"
 DIVIDENDS: "Dividenden"
 OWNERS: "Besitzer"
 IN_TOTAL: "Gesamt"
 POP_WEEKLY_INCOME: "#bold Wöchentliche Einnahmen: #variable @money!$VAL|+D$#!#!\n$BREAKDOWN$\n"
 POP_WEEKLY_EXPENSES: "#bold Wöchentliche Ausgaben: #variable @money!$VAL|+D$#!#!\n$BREAKDOWN$\n"
 POP_WEEKLY_MONEY: "#bold Wöchentliches Geld: #variable @money!$VAL|+D$#!#!\n$BREAKDOWN$\n"
 POP_WEEKLY_wage: "Gehälter: #variable @money!$VAL|+=D$#!\n$TAB$#indent_newline:3 [POP.GetWageDiscriminationDesc]#!"
 POP_WEEKLY_dependent_production: "Angehörigen-Gehälter: #variable @money!$VAL|+=D$#!"
 POP_WEEKLY_dividends: "Dividenden: #variable @money!$VAL|+=D$#!"
 POP_WEEKLY_interest: "Zinsen: #variable @money!$VAL|+=D$#!"
 POP_WEEKLY_diplomatic_pacts: "[concept_budget_diplomatic_pacts]: #variable @money!$VAL|+=D$#!"
 POP_WEEKLY_welfare: "[concept_welfare_payments]: #variable @money!$VAL|+=D$#!"
 POP_WEEKLY_income_taxes: "Einkommenssteuern: #variable @money!$VAL|+=D$#!"
 POP_WEEKLY_needs: "[Concept('concept_pop_needs', '$concept_pop_needs_short$')]: #tooltippable #tooltip:[Pop.GetTooltipTag],NEEDS_BREAKDOWN #variable @money!$VAL|+=D$#!#!#!"
 POP_WEEKLY_losses: "Investitionsverluste: #variable @money!$VAL|+=D$#!"
 TOOLTIP_WEALTH: "#header Wohlstand#!\nStufe [Pop.GetCurrentWealth|v] [Concept('concept_pop_needs', '$concept_pop_needs_short$')]\n$TOOLTIP_DELIMITER$\n$POP_NET_INCOME$"
 TOOLTIP_WEALTH_SLAVE: "#header Wohlstand#!\nDer Sklavenunterhalt befriedigt die [Concept('concept_pop_needs', '$concept_pop_needs_short$')] dieser [concept_pop] bis Stufe [Pop.GetCurrentWealth|v]\n$TOOLTIP_DELIMITER$\n#bold Aufschlüsselung des Sklavenunterhalts:#!\n[Pop.GetNeedsDesc]"
 TOOLTIP_WEALTH_SUBSISTENCE: "#header Wohlstand#!\nIhr [concept_subsistence_output] von @money![Pop.GetAverageAnnualWage|Dv] und die jährlichen [concept_budget_poll_taxes] von @money![Pop.CalcAnnualPollTaxAmount|Dv] befriedigen die [Concept('concept_pop_needs','$concept_pop_needs_short$')] von [GetPopType('peasants').GetName]-[Concept('concept_pop','Pops')] bis zu Stufe [Pop.GetCurrentWealth|v]\n\nEin [concept_building], das diese [concept_pop] einstellen möchte, muss mindestens ein Gehalt von @money![Pop.GetWageRequiredToHireFrom|Dv] zahlen."
 TOOLTIP_POP_NET_INCOME: "#header Netto-[Concept('concept_pop_income', '$concept_pop_income_short$')]#!\n#variable @money![Subtract_CFixedPoint(Pop.GetIncome, Pop.GetExpenses)|+=D]#!\n$TOOLTIP_DELIMITER$\n$POP_NET_INCOME$"
 POP_NET_INCOME: "[Pop.GetIncomeExpensesBalanceDesc]\nFortschritt in Richtung der nächsten Wohlstandsstufe: #v [Pop.GetWealthProgression|+=%0]#!\n\nJährliches Einkommen pro erwachsenem Arbeiter: @money![Pop.GetAverageAnnualWage|Dv]"
 POP_MONEY_BALANCE: "$INCOME$\n$EXPENSES$"
 POP_ECONOMY_WEEKLY_INCOME: "#title Wöchentliches $concept_pop_income$#!"
 POP_ECONOMY_WEEKLY_EXPENSES: "#title Wöchentliche $concept_pop_income_expenses$#!"
 POP_GOODS_CONSUMPTION_TOOLTIP_HEADER: "[PopConsumptionGoods.GetGoods.GetNameNoFormatting]-$concept_good_consumption$"
 POP_GOODS_BUDGET_EXPENDITURE_PERCENTAGE: "#header [Goods.GetTextIcon] [Goods.GetName]-Ausgaben-Prozentsatz#!\n#v [PopConsumptionGoods.GetConsumptionRatio|1%v]#! des Etats dieser [concept_pop] wird für „[Goods.GetName]“ ausgegeben.\nTeil der [PopConsumptionGoods.GetPopNeedsDesc]-[concept_pop_needs]."
 POP_GOODS_AMOUNT_CONSUMED: "Menge an durch [Pop.GetName] [Concept('concept_good_consumption', '$concept_good_consumed$en')|l] [Goods.GetTextIcon] [Goods.GetName]"
 POP_LIST_SOL: "#variable [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)]#!  ([Pop.GetCurrentStandardOfLiving|v])"
 NEEDS_BREAKDOWN: "#header [concept_pop_needs]#!\n[Pop.GetNeedsDesc]"
 AVG_WAGE_POP_LIST: "Durchschn. jährliches Gehalt: @money![PopListItem.GetAverageAnnualWage|vD]"
 AVG_WAGE_SUBSISTENCE_POP_LIST: "[concept_subsistence_output]: @money![PopListItem.GetAverageAnnualWage|vD]"
 TOOLTIP_POP_QOL_TURMOIL: "\nNiedriger [concept_sol] erhöht [concept_turmoil_target] um #variable $VAL|-=D$ #!"
 TOOLTIP_POP_QOL: "#header [concept_sol]#!\nDerzeit: #variable [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)]#! ([Pop.GetCurrentStandardOfLiving|v])\nMinimal erwartet: #variable [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetExpectedStandardOfLiving)]#! #tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_POP_EXPECTED_SOL ([Pop.GetExpectedStandardOfLiving|v])#!#!\nDer [concept_sol] beeinflusst die Wachstumsgeschwindigkeit von Pops und liegt derzeit bei #tooltippable #tooltip:[Pop.GetTooltipTag],GROWTH_RATE_BREAKDOWN [Pop.GetNetGrowthRate|%=+]#!#!\nLiegt der [concept_sol] unter dem minimal erwarteten, wird diese [concept_pop] mit der Zeit zunehmend [concept_radical|l] werden\n$TOOLTIP_DELIMITER$\nDiese Pop hat einen [concept_sol] von #variable [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)]#! ([Pop.GetCurrentStandardOfLiving|v]). Das basiert auf Folgendem:\n$TAB$Wohlstand: #variable #tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_WEALTH [Pop.GetCurrentWealth]#!#!#!\n[Pop.GetCurrentSoLModifiersDesc]\n[Pop.GetAdditionalSOLFactorsDesc]"
 JOB_SATISFACTION_ITEM: "[concept_job_satisfaction]: [SelectLocalization(Pop.IsLookingForJob, 'JOB_SATISFACTION_LOOKING_FOR_JOB', 'JOB_SATISFACTION_NOT_LOOKING_FOR_JOB')|v] (#tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_JOB_SATISFACTION [Pop.GetCurrentJobSatisfaction|0+]#!#!)"
 LABEL_JOB_SATISFACTION: "[SelectLocalization(Pop.IsLookingForJob, 'JOB_SATISFACTION_LOOKING_FOR_JOB', 'JOB_SATISFACTION_NOT_LOOKING_FOR_JOB')|v] ([Pop.GetCurrentJobSatisfaction|0+])"
 JOB_SATISFACTION_LOOKING_FOR_JOB: "Sucht nach besserer [concept_employment]"
 JOB_SATISFACTION_NOT_LOOKING_FOR_JOB: "Zufrieden"
 TOOLTIP_JOB_SATISFACTION: "#header [concept_job_satisfaction]#!\nDerzeit: $LABEL_JOB_SATISFACTION$\n$TOOLTIP_DELIMITER$\n[SelectLocalization(EqualTo_CFixedPoint(Pop.GetCurrentJobSatisfaction, Pop.GetNextJobSatisfaction), 'TOOLTIP_JOB_SATISFACTION_DUE_TO_SAME', 'TOOLTIP_JOB_SATISFACTION_DUE_TO_UPDATING')]\n[Pop.GetNextJobSatisfactionDesc]"
 TOOLTIP_JOB_SATISFACTION_DUE_TO_SAME: "Aufgrund von:"
 TOOLTIP_JOB_SATISFACTION_DUE_TO_UPDATING: "Dies wird in Kürze auf [Pop.GetNextJobSatisfaction|0+] aktualisiert aufgrund von:"
 JOB_SATISFACTION_BASE: "$VALUE|0+=$ durch Grundunzufriedenheit"
 JOB_SATISFACTION_FOR_NEWLY_HIRED: "$VALUE|0+=$, weil die [concept_pop] gerade eingestellt worden ist"
 JOB_SATISFACTION_PER_SOL_ABOVE_EXPECTED_SOL: "$VALUE|0+=$ aus der Differenz von derzeitigem Lebensstandard (#tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_POP_QOL [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)|v] ([Pop.GetCurrentStandardOfLiving|v])#!#!) und der [Concept('concept_expected_sol', '$concept_expected_sol_short$')] (#tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_POP_EXPECTED_SOL [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetExpectedStandardOfLiving)] ([Pop.GetExpectedStandardOfLiving|v])#!#!) [concept_sol]"
 JOB_SATISFACTION_PER_SOL_ABOVE_COUNTRY_STRATA_SOL: "$VALUE|0+=$ aus der Differenz von derzeitigem Lebensstandard (#tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_POP_QOL [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)|v] ([Pop.GetCurrentStandardOfLiving|v])#!#!) und dem Durchschnitts-[concept_sol] [Pop.GetCountry.GetAltName('IN')] für [Pop.GetSocialClass.GetStrataConcept] ([LabelingHelper.GetLabelForStandardOfLiving(FixedPointToInt('(CFixedPoint)$AVERAGE$'))|v] ($AVERAGE|v1$))"
 JOB_SATISFACTION_PER_SOL_ABOVE_STATE_STRATA_SOL: "$VALUE|0+=$ aus der Differenz von derzeitigem Lebensstandard (#tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_POP_QOL [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)|v] ([Pop.GetCurrentStandardOfLiving|v])#!#!) und dem Durchschnitts-[concept_sol] in „[Pop.GetState.GetName]“ für [Pop.GetSocialClass.GetStrataConcept] ([LabelingHelper.GetLabelForStandardOfLiving(FixedPointToInt('(CFixedPoint)$AVERAGE$'))|v] ($AVERAGE|v1$))"
 JOB_SATISFACTION_PER_PERCENT_WAGE_RATE_ABOVE_NORMAL: "$VALUE|0+=$ aus der relativen Differenz von #variable $DIFF|1$%#! zwischen [concept_building_wage] in [Pop.GetBuilding.GetName] (@money!$WORKPLACE_WAGE_RATE|v1$) und [Pop.GetCountry.GetAltName('NOM')] (@money!$NORMAL_WAGE_RATE|v1$)"
 JOB_SATISFACTION_DIVIDENDS: "$VALUE|0+=$ durch das Verhältnis von #variable $DIVIDENDS_WAGES_RATIO|0$ %#! zwischen verdienten [concept_dividends] (@money!$POP_DIVIDENDS|v1$) und [Concept('concept_budget_wages', 'Gehältern')] (@money!$POP_WAGES|v1$)"
 JOB_SATISFACTION_LOSSES: "$VALUE|0+=$ durch das Verhältnis von #variable $LOSSES_WAGES_RATIO|0$ %#! zwischen Investitionsverlusten (@money!$POP_LOSSES|v1$) und [Concept('concept_budget_wages', 'Gehältern')] (@money!$POP_WAGES|v1$)"
 JOB_SATISFACTION_FROM_CAN_AFFORD_EXPENSES: "$VALUE|0+=$, weil die [concept_pop] sich die [Concept('concept_pop_income', '$concept_pop_income_expenses_short$')] (@money!$EXPENSES|v1$) mit ihrem derzeitigen [Concept('concept_pop_income', '$concept_pop_income_short$')] (@money!$INCOME|v1$) leisten kann"
 JOB_SATISFACTION_FROM_CAN_BARELY_AFFORD_EXPENSES: "$VALUE|0+=$, weil die [concept_pop] sich die [Concept('concept_pop_income', '$concept_pop_income_expenses_short$')] kaum leisten kann"
 JOB_SATISFACTION_FROM_CANNOT_AFFORD_EXPENSES: "$VALUE|0+=$, weil die [concept_pop] sich die [Concept('concept_pop_income', '$concept_pop_income_expenses_short$')] (@money!$EXPENSES|v1$) mit ihrem derzeitigen [Concept('concept_pop_income', '$concept_pop_income_short$')] (@money!$INCOME|v1$) nicht leisten kann"
 JOB_SATISFACTION_PER_PERCENT_HIGHER_SOL_QUALIFICATION: "$VALUE|0+=$, weil $RATIO|%v1$ [Concept('concept_pop_qualifications', 'qualifziert')] für Arbeitsplätze mit höherem Grund-[concept_sol] als dem derzeitigen sind (#tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_POP_QOL [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)|v] ([Pop.GetCurrentStandardOfLiving|v])#!#!)"
 JOB_SATISFACTION_FROM_EMPLOYMENT: "$VALUE|0+=$ durch [Concept('concept_employment' ,'$concept_employed$')] sein"
 JOB_SATISFACTION_GOVERNMENT: "$VALUE|0+=$ durch Bezug eines Regierungsgehalts"
 GROWTH_RATE_BREAKDOWN: "#header Wachstumsrate#!\n[Pop.GetPopGrowthDesc]"
 TOOLTIP_POP_EXPECTED_SOL: "#header Minimal erwarteter [concept_sol]#!\nGesamt: [Pop.GetExpectedStandardOfLiving]\n$TOOLTIP_DELIMITER$\n[Pop.GetExpectedStandardOfLivingDesc]"
 EXPECTED_SOL_FROM_LITERACY: "Durch [concept_literacy]: #tooltippable #tooltip:[Pop.GetTooltipTag],EXPECTED_SOL_FROM_LITERACY_BREAKDOWN #v $VALUE|=$#!#!#!"
 EXPECTED_SOL_FROM_LITERACY_BREAKDOWN: "#header Minimal erwarteter [concept_sol] durch [concept_literacy]#!\nGesamt: [Pop.GetExpectedStandardOfLivingFromLiteracy]\n$TOOLTIP_DELIMITER$\n[Pop.GetExpectedStandardOfLivingFromLiteracyDesc]"
 MODIFIED_BY_LITERACY_RATE: "Aufgrund der [concept_literacy] modifiziert mit #v ×$LITERACY_RATE|2$#!"
 MODIFIED_BY_SUBSISTENCE_EMPLOYMENT: "Multipliziert mit #v x$MULTIPLIER$#! aufgrund der Beschäftigung in einem [concept_subsistence_building]"
 SOL_FACTOR_TAXES: "Sie zahlen im Schnitt #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $TAX_BURDEN|%1$#!#!#! ihres Einkommens als [concept_taxes], was ihr verfügbares Geld für [concept_pop_needs] reduziert"
 SOL_FACTOR_MODIFIERS: "Der [concept_sol] ändert sich aufgrund von Modifikatoren um #v $VALUE|1=+$#!"
 SOL_FACTOR_NO_MODIFIERS: "Sie werden derzeit nicht von [concept_sol]-Modifikatoren beeinflusst"
 SOL_FACTOR_GOODS: "Sie zahlen im Schnitt #v #tooltip:COIN_STACK_TOOLTIP $PRICEICON$#! #tooltippable #tooltip:$BREAKDOWN_TAG$ $RELATIVE_PRICE|=-%1$#!#!#! im Vergleich zum [concept_base_price] für ihre [concept_pop_needs].$GOODS_BREAKDOWN_SHORT_SUMMARY$"
 SOL_FACTOR_SLAVES: "$POP_FRACTION|%1v$ sind [Concept('concept_slavery', 'versklavt')|l], weshalb ihnen ein sehr niedriger [concept_sol] aufgezwungen wird"
 SOL_FACTOR_PEASANTS: "$POP_FRACTION|%1v$ sind [GetPopType('peasants').GetName] in [Concept('concept_subsistence_building', 'Subsistenzgebäuden')], weshalb sie auf einen niedrigen [concept_sol] beschränkt sind"
 SOL_FACTOR_TAX_ENTRY: "$TAX_LEVEL|%1v$ der Einnahmen sind $TAX_TYPE$"
 SOL_FACTOR_GOODS_ENTRY: "$RELATIVE_EXPENDITURES|v1%$ – [Goods.GetTextIcon][Nbsp][Goods.GetName] – @money!$PRICE|v1$ #tooltippable #tooltip:COIN_STACK_TOOLTIP $PRICEICON$#!#! ($RELATIVE_PRICE|=-%1$)"
 SOL_FACTOR_GOODS_ENTRY_SHORT: "[Goods.GetTextIcon][Nbsp][Goods.GetName] ($RELATIVE_EXPENDITURES|v1%$)"
 SOL_FACTOR_GOODS_BREAKDOWN_SHORT_SUMMARY: "Ihre größten Ausgaben sind $SUMMARY_LIST$."
 SOL_FACTOR_GOODS_BREAKDOWN: "#header [concept_pop_needs]#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 SOL_FACTOR_TAX_BREAKDOWN: "#header [Concept('concept_taxes','$concept_taxation$')]#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 EXPECTED_SOL_FACTOR_STRATA: "$FRACTION|%1v$ von ihnen sind $STRATA|v$: $VALUE|=v$"
 EXPECTED_SOL_FACTOR_LITERACY: "Sie haben im Schnitt $LITERACY|%0v$ [concept_literacy]: $VALUE|=v$"
 SOL_BELOW_EXPECTED: "@warning! $TOTAL|vD$ ($FRACTION|%1v$) haben einen [concept_sol], der niedriger als die $EXPECTED_SOL_SHORT$ ist und werden daher mit der Zeit zu [Concept('concept_radical', 'Radikalen')]"
 SOL_WELFARE: "$TOTAL|vD$ ($FRACTION|%1v$) erhalten [concept_welfare_payments], die ihren [concept_sol] anheben"
 TOOLTIP_SOL_MODIFIERS: "$BREAKDOWN$"
 POP_DETAILS_TITLE: "#bold Pop-Details#!"
 POP_DETAILS_IG: "\n#instruction Klicken#!, um die Interessengruppe „#variable [Pop.GetLargestInterestGroup.GetName]#!“ anzuzeigen"
 FOOD_SECURITY_LABEL_SECURED: "#g Sicher#! ($VAL|%0v$)"
 FOOD_SECURITY_LABEL_MODERATE: "#v Mäßig#! ($VAL|%0v$)"
 FOOD_SECURITY_LABEL_STARVATION: "#r Niedrig#! ($VAL|%0v$)"
 FOOD_SECURITY_LABEL_SEVERE_STARVATION: "#r Schwerwiegend#! ($VAL|%0v$)"
 POP_NEED_COST_SHARE: "$VAL|%1-$ des Pop-Etats werden für #v $popneed_basic_food$#! ausgegeben:\n$TAB$Gesamtkosten: @money!$COST|v$\n$TAB$Grundkosten dieses Kaufpakets:@money!$BASE_COST|v$"
 STATE_SHORTAGE_SEVERITY: "$VAL|%1-$ Knappheitsschwere in „[State.GetName]“:\n$TAB$$SELL|v$ [concept_sell_orders]\n$TAB$$BUY|v$ [concept_buy_orders]"
 POP_FOOD_SECURITY_HIGH: "#header Pop-[concept_food_security]#!:\nDerzeit: $VAL|%1+$"
 POP_FOOD_SECURITY: "#header Pop-[concept_food_security]#!:\nDerzeit: $VAL|%1v$\n$TOOLTIP_DELIMITER$\n$COST_DESC$\n$SHORTAGE_DESC$[AddTextIf(NotEqualTo_CFixedPoint('(CFixedPoint)$MODIFIER_VAL$','(CFixedPoint)0'), '\n$MODIFIER_DESC|%0v$')]"
 POP_FOOD_SECURITY_LOW: "#header Pop-[concept_food_security]#!\nDerzeit: $VAL|%1-$\n$TOOLTIP_DELIMITER$\nAufgrund von:\n$COST_DESC$\n$SHORTAGE_DESC$[AddTextIf(NotEqualTo_CFixedPoint('(CFixedPoint)$MODIFIER_VAL$','(CFixedPoint)0'), '\n$MODIFIER_DESC|%0v$')][ConcatIfNeitherEmpty('\n\n', Pop.GetStarvationEffectDesc)]"
 POP_STARVATION_EFFECT: "Diese Pop leidet unter #r Hunger#!:\n$DESC$"
 POP_SEVERE_STARVATION_EFFECT: "Diese Pop leidet unter #r großem Hunger#!:\n$DESC$"
 ALL_STATES_FOOD_SECURITY_FILTER_TOOLTIP: "#header Alle [Concept('concept_state', '$concept_states$')] in $FOOD_SECURITY_FILTER_CONTEXT_NAME$#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(GreaterThan_int32(FoodSecurity.GetNumStatesWithFamineRaw, '(int32)0'), 'NUMBER_OF_STATES_WITH_FAMINE'))]\n@population! [FoodSecurity.GetNumPopsTotal|D0v] Gesamt-[Concept('concept_pop', '$concept_population$')]\n$TOOLTIP_DELIMITER$\n@mild_starvation! [FoodSecurity.GetNumStarvingPopsMild|D0-] ([FoodSecurity.GetPercentageStarvingPopsMild|%0-]) mit [Concept('concept_starvation', 'leichtem Hunger')]\n@severe_starvation! [FoodSecurity.GetNumStarvingPopsSevere|D0-] ([FoodSecurity.GetPercentageStarvingPopsSevere|%0-]) mit [Concept('concept_starvation', 'großem Hunger')]"
 ALL_STATES_FOOD_SECURITY_FILTER_TOOLTIP_SELECTED: "#header Alle [Concept('concept_state', '$concept_states$')] in $FOOD_SECURITY_FILTER_CONTEXT_NAME$#! #i (Derzeit aktiver Filter)[ConcatIfNeitherEmpty('\n', AddLocalizationIf(GreaterThan_int32(FoodSecurity.GetNumStatesWithFamineRaw, '(int32)0'), 'NUMBER_OF_STATES_WITH_FAMINE'))]\n@population! [FoodSecurity.GetNumPopsTotal|D0v] Gesamt-[Concept('concept_pop', '$concept_population$')]\n$TOOLTIP_DELIMITER$\n@mild_starvation! [FoodSecurity.GetNumStarvingPopsMild|D0-] ([FoodSecurity.GetPercentageStarvingPopsMild|%0-]) mit [Concept('concept_starvation', 'leichtem Hunger')]\n@severe_starvation! [FoodSecurity.GetNumStarvingPopsSevere|D0-] ([FoodSecurity.GetPercentageStarvingPopsSevere|%0-]) mit [Concept('concept_starvation', 'großem Hunger')]"
 NUMBER_OF_STATES_WITH_FAMINE: "@warning! #v [FoodSecurity.GetNumStatesWithFamineRaw]#! $concept_states$ mit derzeit laufender [concept_famine]"
 STATE_FOOD_SECURITY: "[Concept('concept_starvation', '$concept_starving$e')|U] [Concept('concept_pop', '$concept_population$')]\n[State.GetFoodSecurity.GetNumStarvingPops|D-] ([State.GetFoodSecurity.GetPercentageStarvingPops|%0-])"
 STATE_FOOD_SECURITY_TOOLTIP: "#header [concept_starvation] in [State.GetCountry.GetFlagTextIcon] „[State.GetName]“#!\n[State.GetFoodSecurity.GetNumStarvingPops|D-] ([State.GetFoodSecurity.GetPercentageStarvingPops|%0-]) [Concept('concept_pop', '$concept_pops$')] hungern\n$TOOLTIP_DELIMITER$\n@mild_starvation! [State.GetFoodSecurity.GetNumStarvingPopsMild|D-] ([State.GetFoodSecurity.GetPercentageStarvingPopsMild|%0-]) leiden unter leichtem $concept_starvation$\n@severe_starvation! [State.GetFoodSecurity.GetNumStarvingPopsSevere|D-] ([State.GetFoodSecurity.GetPercentageStarvingPopsSevere|%0-]) unter großem $concept_starvation$[ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(State.HasFamine, State.GetFamineDesc))]"
 STATE_FOOD_SECURITY_MAP_TOOLTIP: "[SelectLocalization(State.HasFamine,State.GetFamineDesc,'STATE_FOOD_SECURITY_MAP_TOOLTIP_NO_FAMINE')]"
 STATE_FOOD_SECURITY_MAP_TOOLTIP_NO_FAMINE: "#header [concept_starvation] in [State.GetCountry.GetFlagTextIcon] „[State.GetName]“#!\n$STATE_STARVATION_NUMBERS$"
 STATE_STARVATION_NUMBERS: "#title [State.GetFoodSecurity.GetNumStarvingPops|D0-] ([State.GetFoodSecurity.GetPercentageStarvingPops|%0-]) [Concept('concept_pop', '$concept_pops$')] [SelectLocalization(State.HasFamine,Concept('concept_starvation','hungern'),'hungern')]:#!\n@mild_starvation! [State.GetFoodSecurity.GetNumStarvingPopsMild|Dv] ([State.GetFoodSecurity.GetPercentageStarvingPopsMild|%0v]) leiden unter leichtem Hunger\n@severe_starvation! [State.GetFoodSecurity.GetNumStarvingPopsSevere|-D0] ([State.GetFoodSecurity.GetPercentageStarvingPopsSevere|%0r]) leiden unter großem Hunger"
 FAMINE_DESC: "#header [concept_famine] in [State.GetCountry.GetFlagTextIcon] „[State.GetName]“#!\nBegann $START_DATE|v$ ($DURATION|v$)\n$TOOLTIP_DELIMITER$\n$STATE_STARVATION_NUMBERS$\n\n#title In diesen $DURATION|v$ führte die $concept_famine$ zu:#!\n$DEATHS|D-$ Toten\n$BIRTHS|D+$ ausbleibenden Geburten\n\n#title Eine $concept_famine$ wird in einem $concept_state$ ausgerufen, wenn diese beiden Bedingungen erfüllt sind:#!\n@green_checkmark_box! Mindestens #b #r [GetDefine('NPops', 'FAMINE_POPULATION_SHARE_IN_STARVATION')|0%]#!#! der $concept_population$ hungern\n@green_checkmark_box! Mindestens #b #r [GetDefine('NPops', 'FAMINE_POPULATION_SHARE_IN_SEVERE_STARVATION')|%0]#!#! leiden unter großem Hunger."
 HARVEST_CONDITIONS_MAP_TOOLTIP: "#header [State.GetCountry.GetFlagTextIcon] „[State.GetName]“#!\n$TOOLTIP_DELIMITER$\n#title [Concept('concept_harvest_condition', '$concept_harvest_conditions$')]:#!#indent_newline:3 \n$BREAKDOWN$#!"
 HARVEST_CONDITIONS_MAP_TOOLTIP_BREAKDOWN_ENTRY: "[HarvestCondition.GetName]: $INTENSITY|v$ [Concept('concept_harvest_condition_intensity', '$concept_harvest_condition_intensity_short$')]"
 HARVEST_CONDITIONS_MAP_TOOLTIP_NO_CONDITIONS: "#header [State.GetCountry.GetFlagTextIcon] „[State.GetName]“#!\nKeine [Concept('concept_harvest_condition', '$concept_harvest_conditions$')]"
 HARVEST_CONDITION_SORT_HEADER_INTENSITY: "$concept_harvest_condition_intensity_short$ ([GetDefine( 'NEconomy', 'HARVEST_CONDITION_MIN_INTENSITY' )]-[GetDefine( 'NEconomy', 'HARVEST_CONDITION_MAX_INTENSITY' )])#!"
 HARVEST_CONDITION_AREA_NAME_IN_STATE_REGION: "[HarvestConditionArea.GetName] in „[HarvestConditionArea.GetEpicenterRegion.GetName]“"
 EMPLOYEE_POPS_LIST: "$RELIGION$ $CULTURE$ $TYPE$: $SIZE$"
 CONDITIONS_NOT_SATISFIED: "Die folgenden Bedingungen verhindern diese Aktion:"
 CREATE_MARKET: "#BOLD [concept_market] in #V $STATE$#! gründen#!"
 MERGE_MARKET: "[STATE.GetName] mit dem Markt „#V [MARKET.GetName]#!“ verbinden"
 SPLIT_MARKET: "[STATE.GetName] vom „#V [MARKET.GetName]#!“ trennen"
 CANNOT_BUILD_BUILDING: "#BOLD #N #V [BUILDING_TYPE.GetName]#! in [STATE.GetName] kann nicht $BUILD_OR_EXPAND$ werden!#!#!"
 CANNOT_BUILD_MARKET: "#BOLD #N Hier kann kein #V Markt#! errichtet werden!#!#!"
 CANNOT_MERGE_MARKET: "#BOLD #N Dieser #V Markt#! kann nicht verbunden werden!#!#!"
 CANNOT_MERGE_MARKET_STATE: "#BOLD #N Es ist nicht möglich, sich mit dem Markt „#V [MARKET.GetName]#!“ zu verbinden#!#!"
 CANNOT_SPLIT_MARKET_STATE: "#BOLD #N Es ist nicht möglich, sich vom Markt „#V [MARKET.GetName]#!“ zu trennen#!#!"
 AND_X_MORE_NEEDS: "+[Subtract_int32(GetDataModelSize(Pop.GetGoodsConsumption), GetDataModelSize(Pop.GetTopGoodsConsumption))]"
 ACTIVE: "Aktiv"
 INACTIVE: "Inaktiv"
 CONSTRUCTION_SECTOR_INPUT_FACTOR: "Multipliziert mit #v x$MULT$#! aufgrund von unbenutztem [concept_construction]"
 CONSTRUCTION_BREAKDOWN: "#header [concept_construction]: $CONSTRUCTION_SPEED$#! / Woche\n$TOOLTIP_DELIMITER$\n#v #tooltippable #tooltip:$BREAKDOWN_TAG$ $BASE_CONSTRUCTION$#!#!#! durch [Country.GetAltName('AKK')] bereitgestellten [concept_construction][ConcatIfNeitherEmpty('\n\n','$CAPPEDDESC$')][ConcatIfNeitherEmpty('\n\n','$MODIFIERDESC$')]"
 CONSTRUCTION_MODIFIER_HEADER: "Die wöchentliche [concept_construction]-Effizienz in [State.GetName] wird durch Folgendes modifiziert:\n$MODIFIER_BREAKDOWN$"
 CONSTRUCTION_CAPPED_DESC: "Der Fortschritt des Gebäudes „[BuildingType.GetName]“ ist auf #v $MAXPOINTS$#! [concept_construction] / Woche begrenzt"
 CAN_EXPAND_BUILDING_PRODUCTIVITY_DELTA: "(@money!$PRODUCTIVITY_DELTA|=+1$ derzeit)"
 CAN_EXPAND_BUILDING_PRODUCTIVITY_DESC: "#tooltippable #tooltip:[GetRawTextTooltipTag('$PRODUCTIVITY_IMPACT_DESC$')] #v @money!$PRODUCTIVITY_IMPACT$#!#!#! Prognostizierte [concept_productivity]$PRODUCTIVITY_DELTA_DESC$"
 CAN_EXPAND_BUILDING_TOOLTIP: "#header „[BUILDING_TYPE.GetName]“ in „[STATE.GetName]“ $BUILD_OR_EXPAND$#! (Größe: [BUILDING.GetExpansionLevelBreakdownDesc])\n[AddLocalizationIf(Not(STATE.GetOwner.IsLocalPlayer), 'CAN_EXPAND_BUILDING_TOOLTIP_FOREIGN')]#tooltippable #tooltip:[GetRawTextTooltipTag('$PROFIT_IMPACT_DESC$')] #v @money!$PROFIT_IMPACT|K+=$#!#!#! Prognostizierte [SelectLocalization(Or(Or(ObjectsEqual(BUILDING.GetBuildingType, GetBuildingType('building_government_administration').Self), ObjectsEqual(BUILDING.GetBuildingType, GetBuildingType('building_construction_sector').Self)), BUILDING.GetBuildingType.IsMilitaryBuilding), 'BUILDING_UPKEEP_HEADER', 'BUILDING_EARNINGS_HEADER')] pro Woche\n[ConcatIfNeitherEmpty('$PRODUCTIVITY$', '\n')][ConcatIfNeitherEmpty('$QUALIFICATIONS$', '\n')][SelectLocalization(LessThan_CFixedPoint(State.GetConstructionEfficiency, '(CFixedPoint)0'), 'CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY_WARNING', '')]$TOOLTIP_DELIMITER$\n@construction! $REQUIRED_CONSTRUCTION|v0$ [concept_construction] ($CONSTRUCTION_COST_CHANGE$)\n$EXPAND_BUILDING_TT_NATIONAL_MAINTENANCE$\n\n$PRODUCTION_BREAKDOWN$\n\n[STATE.GetMarketAccessStatus]\nVerfügbare Arbeitskräfte: [State.GetNumSubsistenceWorkingAdults|Dv] [GetPopType('peasants').GetName] [SelectLocalization(GreaterThan_int64(State.GetNumUnemployedWorkingAdults, '(int64)0'), 'AND_UNEMPLOYED', '')][ConcatIfNeitherEmpty('$PORT_INFO$', '\n')]\n\n$KEY_MODIFIER_INSTRUCTIONS$"
 CAN_EXPAND_BUILDING_TOOLTIP_FOREIGN: "@foreign_investment![concept_foreign_investment] in „[State.GetOwner.GetName][AddLocalizationIf(Not(ObjectsEqual(State.GetMarket.Self, AccessPlayer.AccessFirstMarket.Self)), 'CAN_EXPAND_BUILDING_TOOLTIP_FOREIGN_IN_FOREIGN_MARKET')]“\n\n"
 CAN_EXPAND_BUILDING_TOOLTIP_FOREIGN_IN_FOREIGN_MARKET: "(Fremder Markt: [State.GetMarket.GetName])"
 AND_UNEMPLOYED: "und [State.GetNumUnemployedWorkingAdults|Dv] [Concept('concept_unemployed', 'Arbeitslose')]"
 MILITARY_BUILDING_INFO: "HQ: [State.GetStateRegion.GetStrategicRegion.GetName]\n"
 CONSTRUCTION_CAN_BE_FUNDED_BY_INVESTMENT_POOL: "[concept_budget_construction_goods] #P #bold können#!#! durch den [concept_investment_pool] finanziert werden. Dieser liegt derzeit bei #v @money![GetPlayer.GetInvestmentPool|D+]#!"
 CONSTRUCTION_TOTAL_COST_IMPACT: "#v @money!$COST|K-$#! prognostizierte Gesamtkosten an [concept_budget_construction_goods]"
 CONSTRUCTION_WEEKLY_COST_IMPACT: "#v @money!$COST|K-=$#! wöchentliche Kosten an [concept_budget_construction_goods]"
 EXPAND_TOOLTIP_EXPAND_BUILD: "gebaut"
 EXPAND_TOOLTIP_EXPAND_EXPAND: "erweitert"
 EXPAND_TOOLTIP_EXPAND: "#header [BUILDING_TYPE.GetName] in [STATE.GetName]$BUILD_OR_EXPAND$#!\nGröße: [BUILDING.GetExpansionLevelBreakdownDesc]\n[STATE.GetMarketAccessStatus]\nVerfügbare Arbeiter: [State.GetNumSubsistenceWorkingAdults|Dv] [GetPopType('peasants').GetName] und [State.GetNumUnemployedWorkingAdults|Dv] [concept_unemployed|l]"
 EXPAND_BUILDING_MODIFIERS_INSTRUCTIONS: "#instruction Klicken#!, um #v 1 Stufe#! zur Baureihe hinzuzufügen. #i $SHORTCUT_KEY_MOD_shift$ + Klick#!, um #v $SHIFT_NUM_LEVELS$#! Stufen hinzuzufügen. #i $SHORTCUT_KEY_MOD_ctrl$ + Klick#!, um #v $CTRL_NUM_LEVELS$#! Stufen hinzuzufügen\n#instruction $SHORTCUT_KEY_MOD_alt$Klicken#!, um es #v an die Spitze#! der [concept_construction_queue] zu setzen."
 DOWNSIZE_BUILDING_MODIFIERS_INSTRUCTIONS: "#instruction Klicken, um es um 1 Stufe zu verkleinern#!\n#instruction $SHORTCUT_KEY_MOD_shift$Klicken, um es um $SHIFT_NUM_LEVELS$ Stufen zu verkleinern#!\n#instruction $SHORTCUT_KEY_MOD_ctrl$Klicken, um es um $CTRL_NUM_LEVELS$ Stufen zu verkleinern#!"
 EXPANSION_PROFIT_IMPACT: "#header Prognostizierte [SelectLocalization(Or(ObjectsEqual(BUILDING.GetBuildingType, GetBuildingType('building_government_administration').Self), ObjectsEqual(BUILDING.GetBuildingType, GetBuildingType('building_construction_sector').Self)), 'BUILDING_UPKEEP_HEADER', 'BUILDING_EARNINGS_HEADER')] der neuen Stufe#!\n#v @money!$VAL|K+=$#! Prognostizierte [SelectLocalization(Or(ObjectsEqual(BUILDING.GetBuildingType, GetBuildingType('building_government_administration').Self), ObjectsEqual(BUILDING.GetBuildingType, GetBuildingType('building_construction_sector').Self)), 'BUILDING_UPKEEP_HEADER', 'BUILDING_EARNINGS_HEADER')] pro Woche\n(ausgenommen [Concept('concept_building_wage', '$concept_building_wages$')])\n$TOOLTIP_DELIMITER$\n$IMPACT_DETAILS$\n\n$BUILDING_PREDICTION_DISCLAIMER$"
 EXPANSION_PRODUCTIVITY_IMPACT: "#header Prognostizierte $EARNINGS_PER_EMPLOYEE$ nach Erweiterung#!: #v @money!$VAL|+$#!\n$TOOLTIP_DELIMITER$\n$IMPACT_DETAILS$\n\n$BUILDING_PREDICTION_DISCLAIMER$"
 EXPANSION_EMPLOYEES_VS_REVENUE: "#v @money!$REVENUE|K+$#! prognostizierte jährliche Einnahmen\n#v $EMPLOYEES|vD$#! Gesamt-Angestellte"
 EXPANSION_WAGES_IMPACT: "#v @money!$IMPACT|K+=$#! für wöchentliche Gehälter"
 GOODS_PROFIT_CONSUMPTION: "#v @money![Negate_CFixedPoint('(CFixedPoint)$IMPACT$')|K+=]#! durch #v $NUM_UNITS|0-$#! [Goods.GetTextIcon] „[Goods.GetName]“ ($PRICE_CUR_ICON$@arrow_right!$PRICE_NEW_ICON$)"
 GOODS_PROFIT_CONSUMPTION_AFTER_SUBSTITUTION: "#v @money![Negate_CFixedPoint('(CFixedPoint)$IMPACT$')|K+=]#! durch #v $NUM_UNITS|0-$#! [Goods.GetTextIcon] „[Goods.GetName]“ ($PRICE_CUR_ICON$@arrow_right!$PRICE_NEW_ICON$ nach [concept_goods_substitution])"
 GOODS_PROFIT_PRODUCTION: "#v @money!$IMPACT|K+=$#! durch #v $NUM_UNITS|0=+$#! [Goods.GetTextIcon] „[Goods.GetName]“ ($PRICE_CUR_ICON$@arrow_right!$PRICE_NEW_ICON$)"
 GOODS_PROFIT_PRODUCTION_AFTER_SUBSTITUTION: "#v @money!$IMPACT|K+=$#! durch #v $NUM_UNITS|0=+$#! [Goods.GetTextIcon] „[Goods.GetName]“ ($PRICE_CUR_ICON$@arrow_right!$PRICE_NEW_ICON$ nach [concept_goods_substitution])"
 NO_OPPOSITION: "#bold Es gibt keine [Concept('concept_interest_group', '$concept_interest_groups$')] in der Opposition#!"
 NO_POLITICAL_MOVEMENTS: "Es gibt keine [Concept('concept_political_movement', '$concept_political_movements$')]"
 IG_NO_POLITICAL_MOVEMENT: "Keine unterstützende [Concept('concept_political_movement', '$concept_political_movements$')]:"
 NO_LAW_BEING_ENACTED: "Es wird kein [concept_law] beschlossen"
 NO_INTERESTS: "Keine [Concept('concept_interest', '$concept_interests$')]"
 NO_POLITICAL_LOBBIES: "Keine $concept_political_lobbies$"
 POLITICAL_LOBBIES: "Politlobbys"
 TERRAIN_TOOLTIP: "#header [Battle.GetTerrain]#!\n$TOOLTIP_DELIMITER$\n[Battle.GetTerrainDesc]"
 TERRAIN_DESC: "[concept_combat_width]: $COMBAT_WIDTH|v0%$\n[concept_risk]: $RISK|v0%$\n[concept_terrain_labels]: #v $LABELS$#!"
 CANNOT_EXPAND_BUILDING_NO_URBAN_CAP: "Gebäude der Art „[BuildingType.GetName]“ braucht [concept_urbanization]"
 CANNOT_EXPAND_BUILDING_AT_MAX_LEVEL: "Gebäude der Art „[BuildingType.GetName]“ können nicht über die Maximalgröße von $VAL|v$ erweitert werden."
 CANNOT_EXPAND_BUILDING_AT_MAX_LEVEL_BREAKDOWN: ", was folgenden Grund hat:\n$BREAKDOWN$"
 CANNOT_EXPAND_BUILDING_NOT_EXPANDABLE: "Gebäude der Art „[BuildingType.GetName]“ können in der Staatsregion „[STATE_REGION.GetName]“ nicht über Stufe 1 hinaus erweitert werden"
 CANNOT_EXPAND_BUILDING_NO_ARABLE_LAND: "Gebäude der Art „[BuildingType.GetName]“ braucht [concept_arable_land]"
 CANNOT_EXPAND_BUILDING_NO_RESOURCE: "Unzureichende Ressourcenmenge in [State.GetName]"
 CANNOT_EXPAND_BUILDING_NOT_AVAILABLE_IN_STATE: "Gebäude der Art „[BUILDING_TYPE.GetName]“ wird in [STATE.GetName] nicht unterstützt"
 CANNOT_EXPAND_BUILDING_AT_REGION_MAX_CAP: "Gebäude „[BuildingType.GetName]“ hat maximale Kapazität in „[STATE_REGION.GetName]“"
 CANNOT_EXPAND_BUILDING_NOT_ACTIVE: "Gebäude der Art „[BuildingType.GetName]“ ist nicht aktiv"
 CANNOT_EXPAND_BUILDING_NOT_BUILDABLE: "Gebäude der Art „[BuildingType.GetName]“ kann nicht manuell gebaut werden"
 CANNOT_EXPAND_BUILDING_NOT_OWNABLE: "„[BuildingType.GetName]“ kann nicht in einem ausländischen Staat gebaut werden"
 CANNOT_EXPAND_BUILDING_IN_PLAY_AGAINST_STATE_OWNER: "Kann nicht in „[BuildingType.GetName]“ investieren, während ein [concept_diplomatic_play] gegen [Country.GetAltName('AKK')] läuft"
 CANNOT_EXPAND_BUILDING_STATE_HAS_NO_ACCESS_TO_GOODS: "„[State.GetName|U]“ hat keine [concept_supply] mit [Goods.GetTextIcon][Nbsp]„[Goods.GetName]“, was für „[CombatUnitType.GetName]“ erforderlich ist, und kann auch nicht vom [concept_world_market] importieren"
 CANNOT_EXPAND_BUILDING_IS_MONOPOLIZED: "$BUILDING_IS_MONOPOLIZED_BY$"
 FORMATION_BELONGS_TO_FOREIGN_COUNTRY: "„[MILITARY_FORMATION.GetName|U]“ gehört [COUNTRY.GetAltName('DAT')]"
 EXPAND_BUILDING_WARNING_MISSING_QUALIFICATIONS: "@warning! #tooltippable #tooltip:[BUILDING.GetTooltipTag],EXPAND_BUILDING_WARNING_MISSING_QUALIFICATIONS_BREAKDOWN Nicht genug#!#! [concept_pop_qualifications], um dieses Gebäude vollständig zu besetzen (es fehlen $POP_TYPES$)"
 EXPAND_BUILDING_WARNING_MISSING_QUALIFICATIONS_BREAKDOWN: "#header Mangelnde [concept_pop_qualifications]#!\n$TOOLTIP_DELIMITER$\n[Building.GetQueueConstructionPopQualificationsWarningBreakdown]"
 EXPAND_BUILDING_WARNING_MISSING_QUALIFICATIONS_ENTRY: "Nur $AVAILABLE|v$ von $REQUIRED|v$ beschäftigbaren [POP_TYPE.GetName] verfügbar; es fehlen $MONTHS|v$ Monat(e) [concept_pop_qualifications] bei der derzeitigen Wachstumsrate von $MONTHLY|=v$/Monat"
 EXPAND_BUILDING_WARNING_MISSING_QUALIFICATIONS_ENTRY_NO_GROWTH: "@warning! Nur $AVAILABLE|v$ von $REQUIRED|v$ beschäftigbaren [POP_TYPE.GetName] verfügbar #n ohne derzeitiges monatliches Wachstum#! von [concept_pop_qualifications]"
 CHANGE_PRODUCTION_METHOD_WARNING_ADDITIONAL_PM_CHANGED: "@warning! Ändert die aktive $GROUP|v$-Methode ($DISABLED_METHOD$ @arrow_right! $ENABLED_METHOD$)"
 CHANGE_PRODUCTION_METHOD_WARNING_GOODS_SHORTAGE: "@warning! Eine [Concept('concept_shortage','$concept_input_goods_shortage$')] ($LIST$) führt dazu, dass alle [concept_building] einen Malus auf den Ausstoß erhalten"
 CHANGE_PRODUCTION_METHOD_WARNING_MISSING_QUALIFICATIONS: "@warning! #tooltippable #tooltip:[BUILDING.GetTooltipTag]|[PRODUCTION_METHOD.GetTooltipTag],CHANGE_PRODUCTION_METHOD_WARNING_MISSING_QUALIFICATIONS_BREAKDOWN Nicht genügend#!#! [concept_pop_qualifications], um „[Building.GetName]“ vollständig zu besetzen ($POP_TYPES$ fehlen)"
 CHANGE_PRODUCTION_METHOD_WARNING_MISSING_QUALIFICATIONS_BREAKDOWN: "#header Unzureichende [concept_pop_qualifications]#!\n$TOOLTIP_DELIMITER$\n[Building.GetChangeProductionMethodPopQualificationsWarningBreakdown(ProductionMethod.Self)]"
 CHANGE_PRODUCTION_METHOD_WARNING_MISSING_QUALIFICATIONS_ENTRY: "Nur $AVAILABLE|v$ von $REQUIRED|v$ beschäftigbaren [Concept('concept_pop_qualifications', '$concept_qualifying$nden')|l] [POP_TYPE.GetName] verfügbar; es fehlen $MONTHS|v$ Monat(e) $concept_pop_qualifications$ bei der derzeitigen Wachstumsrate von $MONTHLY|=v$/Monat"
 CHANGE_PRODUCTION_METHOD_WARNING_MISSING_QUALIFICATIONS_ENTRY_NO_GROWTH: "@warning! Nur $AVAILABLE|v$ von $REQUIRED|v$ beschäftigbaren [POP_TYPE.GetName] verfügbar #n ohne derzeitiges monatliches Wachstum#! von [concept_pop_qualifications]"
 CANNOT_JOIN_FOREIGN_MARKET: "Es gibt kein Wirtschaftssystem-Gesetz und keine Zollunion, die es erlauben würden, dem Fremdmarkt „[MARKET.GetName]“ beizutreten"
 NO_STATE_TRAITS: "Keine Staatseigenschaften"
 QUICK_SELECT: "Schnellauswahl"
 MOVE_SELECTED: "Auswahl verlegen"
 #MARKET is the market to merge
 MERGE_MARKET_INFO_TOOLTIP: "Verbindet den Markt „#BOLD #V [MARKET.GetName]#!#!“ mit einem anderen Markt."
 MERGE_MARKET_NEGATIVE_INFO_TOOLTIP: "Es ist nicht möglich, den Markt „#BOLD #V [MARKET.GetName]#!#!“ mit einem anderen Markt zu verbinden."
 #STATE is the selected state, MARKET the market to merge to
 MERGE_MARKETS_INFO_TOOLTIP: "Verbindet den Markt „#BOLD #V [STATE.GetMarket.GetName]#!#!“ mit dem Markt „#BOLD #V [MARKET.GetName]#!#!“"
 MERGE_MARKETS_NEGATIVE_INFO_TOOLTIP: "Es ist nicht möglich, en Markt „#BOLD #V [STATE.GetMarket.GetName]#!#!“ mit dem Markt „#BOLD #V [MARKET.GetName]#!#!“ zu verbinden!"
 RETARGET_LINK_TOOLTIP: "Trennt die Verbindung von #BOLD #V [STATE.GetName]#!#! mit dem Markt „#BOLD #V [STATE.GetMarket.GetName]#!#!“ und verbindet es mit einem anderen."
 RETARGET_LINK_FAIL_TOOLTIP: "Es ist nicht möglich, die Verbindung in #BOLD #V [STATE.GetName]#!#! zu trennen."
 RETARGET_LINK_TO_TOOLTIP: "Trennt die Verbindung von #BOLD #V [STATE.GetName]#!#! mit dem Markt „#BOLD #V [STATE.GetMarket.GetName]#!#!“ und verbindet es mit dem Markt „#BOLD #V [MARKET.GetName]#!#!“."
 RETARGET_LINK_TO_FAIL_TOOLTIP: "Es ist nicht möglich, die Verbindung von #BOLD #V [STATE.GetName]#!#! auf den Markt „#BOLD #V [MARKET.GetName]#!#!“ zu wechseln"
 MARKET_CONTROLLER_TITLE: "#title Marktlenker#!\n#bold [Market.GetOwner.GetAltName('NOM')|U]#!"
 TOOLTIP_HOVER_STRATEGIC_REGION: "#V [STATE.GetName]#! (#V [STATE.GetCountry.GetAltName('NOM')]#!)\n[concept_strategic_region]: #V $STRATEGIC_REGION$#!"
 #Budget panel
 BUDGET: "Etat"
 BUDGET_PANEL_TITLE: "#BOLD Etat#!"
 WEEKLY_BALANCE: "Wochensaldo: [AccessPlayer.PredictWeeklyBalanceWithEconomyHealthHint]"
 BUDGET_TAB_OVERVIEW: "Übersicht"
 STATES: "Staaten"
 BUDGET_TAB_ASSETS: "Guthaben"
 POOLS: "Fonds"
 LAND_TAX: "[concept_budget_land_taxes]"
 HEATHEN_TAX: "[concept_budget_heathen_taxes]"
 PER_CAPITA_TAX: "[concept_budget_per_capita_taxes]"
 NATIONAL_REVENUE: "Nationaleinnahmen"
 BUDGET_TAXATION_LEVEL: "[Concept('concept_taxes','$concept_tax_level$')]"
 BUDGET_INCOME_TAXES: "[concept_budget_income_taxes]"
 BUDGET_POLL_TAXES: "[concept_budget_poll_taxes]"
 BUDGET_CONSUMPTION_TAXES: "[concept_budget_consumption_taxes]"
 BUDGET_ADDITIONAL_INCOME: "[concept_budget_additional_income]"
 BUDGET_ADDITIONAL_EXPENSES: "[concept_budget_additional_expenses]"
 BUDGET_DIVIDENDS_TAXES: "[concept_budget_dividends_taxes]"
 BUDGET_MINTING: "[concept_budget_minting]"
 BUDGET_TARIFFS: "[concept_tariffs]"
 BUDGET_INVESTMENT_INCOME: "[concept_budget_investment_income]"
 BUDGET_DIPLOMATIC_PACTS: "[concept_budget_diplomatic_pacts]"
 NATIONAL_EXPENSES: "Landesausgaben"
 BUDGET_GOODS_FOR_GOVERNMENT_BUILDINGS: "[concept_budget_goods_for_government_buildings]"
 BUDGET_GOODS_FOR_MILITARY_BUILDINGS: "[concept_budget_goods_for_military_buildings]"
 BUDGET_GOVERNMENT_WAGES: "[concept_budget_government_wages]"
 BUDGET_MILITARY_WAGES: "[concept_budget_military_wages]"
 BUDGET_GOVERNMENT_SLAVES: "[concept_budget_government_slaves]"
 BUDGET_MILITARY_SLAVES: "[concept_budget_military_slaves]"
 BUDGET_SUBSIDIES: "[concept_subsidies]"
 BUDGET_SUBVENTIONS: "[concept_subventions]"
 BUDGET_WELFARE_PAYMENTS: "[concept_welfare_payments]"
 BUDGET_INTEREST: "[concept_budget_interest]"
 BUDGET_CONSTRUCTION_GOODS: "[concept_budget_construction_goods]"
 PAUSE_ALL_CONSTRUCTION_BUTTON: "Alle pausieren"
 PAUSE_ALL_CONSTRUCTION_TOOLTIP_HEADER: "#header Pausiert alle Bauarbeiten#!"
 RESUME_ALL_CONSTRUCTION_BUTTON: "Alle fortsetzen"
 RESUME_ALL_CONSTRUCTION_TOOLTIP_HEADER: "#header Alle Bauarbeiten fortsetzen#!"
 CHANGE_ALL_CONSTRUCTION_SPEED_TOOLTIP_HEADER: "#header Gesamten $building_construction_sector$ auf die Produktionsmethode „[PRODUCTION_METHOD.GetName]“ ändern#!"
 TAXES: "Steuern"
 EXPENSES: "Ausgaben"
 invalid_market: "Kein gültiger Markt"
 diplomatic_play_invalid_state: "Ungültige Staatsregion"
 set_decree_select_state_tooltip: "[Concept('concept_decree', 'Erlässt')] „$NAME|v$“ in [STATE.GetName]"
 MANAGE_MARKET_BUTTON_LABEL: "Verwalten"
 MANAGE_MARKET_BUTTON_TOOLTIP: "Markt verwalten"
 MANAGE_MARKET_BUTTON_DISABLED_TOOLTIP: "$MANAGE_MARKET_BUTTON_TOOLTIP$\n@simple_box! Ist der Marktlenker"
 TRADING_TITLE: "#title Derzeitige Handelsnachfrage auf dem Markt $MARKET$#!\n"
 IMPORTING_TITLE: "\n#title Derzeit unbefriedigte Nachfrage auf dem Markt $MARKET$#!\n"
 NO_UP_TO_DATE_MARKET_INFO: "#N Es gibt keine aktuellen Wareninformationen für diesen Markt#!"
 MARKET_GOOD_SORT: "Ware"
 MARKET_PRODUCE_SORT: "Produktion"
 MARKET_CONSUME_SORT: "Verbrauch"
 MARKET_SELL_SORT: "Verkaufsaufträge"
 MARKET_BUY_SORT: "Kaufaufträge"
 MARKET_PRICE_SORT: "Preis"
 FRONT_PANEL_DEBUG_INFO: "#title Debug-Information#!:\nID: #variable [Front.GetID]#!\n#!\nInitiator-Schauplatz: [Front.GetInitiatorTheatersDebugDesc]\nZiel-Schauplatz: [Front.GetTargetTheatersDebugDesc]"
 FRONT_PANEL_FIRST_UNITS: "Einheiten (Erste Seite)"
 FRONT_PANEL_SECOND_UNITS: "Einheiten (Zweite Seite)"
 FRONT_PANEL_NO_PRESENT_GENERALS: "Auf dieser Seite sind keine [Concept('concept_general', '$concept_generals$')] vorhanden"
 FRONT_PANEL_NO_PRESENT_FORMATIONS: "Keine [Concept('concept_military_formation', '$concept_military_formations$')] auf dieser Seite präsent"
 FRONT_PANEL_NO_PRESENT_ARMIES: "Keine [Concept('concept_army', '$concept_armies$')] auf dieser Seite vor Ort"
 SAVING_GAME: "Speichere …"
 BUILDING_COSTS: "Baukosten"
 TARGET_STRENGTH: "Armee-Stärkepunkte des Ziels"
 STRATEGIC_GOODS: "Strategiewaren"
 WEEKLY_COST_STRATEGIC_REGION_TOOLTIP: "#header Wöchentliche Kosten für strategische Ressourcen#!"
 PDX_TOOLTIP_SHORTCUT: "Kürzel: #header $MODS$$SHORTCUT$#!"
 PDX_TOOLTIP_INPUT_ACTION: "Kürzel: $INPUT_ACTION_NAME|v$ ($BOUND_INPUT_1|v$[AddTextIf(Not(StringIsEmpty('$BOUND_INPUT_2$')), ' oder $BOUND_INPUT_2|v$')])"
 SHORTCUT_KEY: "$KEY$"
 SHORTCUT_KEY_MOD_shift: "Umschalt+"
 SHORTCUT_KEY_MOD_alt: "Alt+"
 SHORTCUT_KEY_MOD_ctrl: "Strg+"
 SHORTCUT_KEY_MOD_os: "Win+"
 KEY_MB4: "Maus 4"
 KEY_MOUSE_X1: "Maus 4"
 KEY_MOUSE_X2: "Maus 5"
 KEY_ESCAPE: "Esc"
 KEY_TAB: "Tab"
 KEY_RETURN: "Return / Enter"
 KEY_BACKSPACE: "Rücktaste"
 KEY_DEL: "Entf"
 KEY_LSHIFT: "L. Umschalt"
 KEY_LCTRL: "L. Strg"
 KEY_LOS: "L. OS"
 KEY_LALT: "L. Alt"
 KEY_SPACE: "Leertaste"
 KEY_RALT: "R. Alt"
 KEY_ROS: "R. OS"
 KEY_RCTRL: "R. Strg"
 KEY_RSHIFT: "R. Umschalt"
 KEY_SHIFT: "Umschalt"
 KEY_CTRL: "Strg"
 KEY_ALT: "Alt"
 KEY_EQUALS: "="
 KEY_MINUS: "-"
 KEY_LBRACKET: "["
 KEY_RBRACKET: "]"
 KEY_APOSTROPHE: "'"
 KEY_SLASH: "/"
 KEY_BACKSLASH: "\\"
 KEY_SEMICOLON: ";"
 KEY_PERIOD: "."
 KEY_COMMA: ","
 KEY_UP: "Pfeil oben"
 KEY_LEFT: "Pfeil links"
 KEY_DOWN: "Pfeil unten"
 KEY_RIGHT: "Pfeil rechts"
 KEY_KP_0: "Tastenfeld 0"
 KEY_KP_1: "Tastenfeld 1"
 KEY_KP_2: "Tastenfeld 2"
 KEY_KP_3: "Tastenfeld 3"
 KEY_KP_4: "Tastenfeld 4"
 KEY_KP_5: "Tastenfeld 5"
 KEY_KP_6: "Tastenfeld 6"
 KEY_KP_7: "Tastenfeld 7"
 KEY_KP_8: "Tastenfeld 8"
 KEY_KP_9: "Tastenfeld 9"
 KEY_KP_PLUS: "Tastenfeld +"
 KEY_KP_MINUS: "Tastenfeld -"
 RAW_MATERIALS: "Rohmaterial"
 INDUSTRIAL_GOODS: "Industrie"
 CONSUMER_GOODS: "Konsum"
 MILITARY_GOODS: "Militär"
 LUXURY_GOODS: "Luxus"
 PREVIOUS_WEEK_MODIFIERS: "#title Modifikatoren der Vorwoche#!"
 MODIFIER_ENTRY_TEXT: "[ModifierEntry.GetFormattedValue] [ModifierEntry.GetName]"
 MODIFIER_ENTRY_TOOLTIP: "#header [ModifierEntry.GetName]#!: [ModifierEntry.GetFormattedValue]\n$TOOLTIP_DELIMITER$\n[ModifierEntry.GetBreakdown]\n[ModifierEntry.GetDesc]"
 MODIFIER_ENTRY_VALUE_WITH_BREAKDOWN: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE$#!#!"
 MODIFIER_DEFINITION_NAME: "#tooltippable_name #tooltip:$DESCRIPTION_TAG$ $NAME$#!#!"
 FULL_MODIFIER_ENTRY_DESC: "$VALUE$ $NAME$"
 BALANCE_ITEM: "[TradeOverviewEntry.GetGoods.GetCompareIconAgainstBasePriceNoFormatting(TradeOverviewEntry.GetGoods.GetMarketPrice)] "
 RELATIONS_TOOLTIP: "#header $LABEL$[concept_relations]#!\nDie [concept_relations] zwischen [COUNTRY.GetAltName('DAT')] und [TARGET_COUNTRY.GetAltName('DAT')] sind #BOLD $LABEL$#! (#variable $VAL|+=$#!)$PROGRESS$"
 INFAMY_TOOLTIP: "#header [COUNTRY.GetAdjective|U]e [concept_infamy]: #BOLD $INFAMY_LABEL$#! (#variable $INFAMY|-1$#!)#![ConcatIfNeitherEmpty( '\n$TOOLTIP_DELIMITER$\n', Concatenate('$INFAMY_DECAY$', ConcatIfNeitherEmpty('\n\nEffekte:\n','$INFAMY_EFFECTS$')))]"
 INFAMY_DECAY_RATE: "[Concept('concept_infamy', 'Verrufenheitsverfall')]: #P #bold -$VAL|3$#!#! / Woche\n$TAB$Grundverfall: #P #bold -$YEARLYBASE|3$#!#!  / Jahr$MITIGATION$"
 TENSION_TOOLTIP: "Die [Concept('concept_tension', 'Spannungsstufe')] zwischen uns und [COUNTRY.GetAltName('DAT')] ist #BOLD $LABEL$#! (#variable $VAL|-$#!)$DECAY$"
 TENSION_DECAY_RATE: "[Concept('concept_tension', 'Spannungsverfall')]: #P #bold -$VAL|3$#!#! / Woche\n$TAB$Grundverfall: #P #bold -$YEARLYBASE|3$#!#!  / Jahr$MITIGATION$"
 RELATIONS_PROGRESS: "Fortschritt bei der Verbesserung der Beziehungen: $VAL|v%0$"
 RELATIONS_DECAY: "Beziehungsverfall: #N #bold -$VAL|-3$#!#! / Woche"
 lower: "@lower_strata! [concept_lower_strata]"
 middle: "@middle_strata! [concept_middle_strata]"
 upper: "@upper_strata! [concept_upper_strata]"
 LOWER_NO_ICON: "[concept_lower_strata]"
 MIDDLE_NO_ICON: "[concept_middle_strata]"
 UPPER_NO_ICON: "[concept_upper_strata]"
 BULK_CHANGE_HEADER: "$MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_FORMATIONS$ ändern"
 BULK_CHANGE_MOBILIZATION_OPTIONS: "[Concept('concept_mobilization_option','$concept_mobilization_options$')] für $MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_FORMATIONS$ ändern"
 MERGE_SELECTED_FORMATIONS_TOOLTIP: "#header Mit ausgewählten [Concept('concept_army','$concept_armies$')] zusammenlegen#!\n$TOOLTIP_DELIMITER$\n[GetDesc(MergeSelectedFormations)]" #[[ConcatIfNeitherEmpty('\n', )]
 SET_COMMANDER_ORDER_IN_SELECTED_FORMATIONS_TOOLTIP: "#header „[CommanderOrderType.GetName]“ [GetNumCommandersInSelectedFormations] [Concept('concept_commander','$concept_commanders$n')] befehlen#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(GreaterThan_int32(GetNumCommandersInSelectedFormationsWithOrderActive(CommanderOrderType.Self), '(int32)0'), 'ORDER_ALREADY_ACTIVE_FOR_X_COMMANDERS'))][ConcatIfNeitherEmpty('\n', AddLocalizationIf(GreaterThan_int32(GetNumCommandersInSelectedFormationsWithOrderNext(CommanderOrderType.Self), '(int32)0'), 'ORDER_NEXT_FOR_X_COMMANDERS'))]\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(AddLocalizationIf(GreaterThan_int32(GetNumCommandersInSelectedFormationsWithOrderBlocked(CommanderOrderType.Self), '(int32)0'), 'ORDER_BLOCKED_FOR_X_COMMANDERS'), '\n\n')][ConcatIfNeitherEmpty(GetDesc(SetCharacterOrderForSelectedFormations(CommanderOrderType.Self)), '\n\n')]$DATA_COMMANDER_ORDER_TYPE_NAME_TOOLTIP$"
 ORDER_ALREADY_ACTIVE_FOR_X_COMMANDERS: "Aktiv für [GetNumCommandersInSelectedFormationsWithOrderActive(CommanderOrderType.Self)|vu] [Concept('concept_commander','$concept_commanders$')]"
 ORDER_NEXT_FOR_X_COMMANDERS: "Nächster Befehl für [GetNumCommandersInSelectedFormationsWithOrderNext(CommanderOrderType.Self)|v] [Concept('concept_commander','$concept_commanders$')]"
 ORDER_BLOCKED_FOR_X_COMMANDERS: "Nicht aktivierbar für [GetNumCommandersInSelectedFormationsWithOrderBlocked(CommanderOrderType.Self)|vn] [Concept('concept_commander','$concept_commanders$')]"
 NUM_ACTIVE_ORDERS_FOR_SELECTED: "[GetNumCommandersInSelectedFormationsWithOrderActive(CommanderOrderType.Self)|vu]"
 NUM_ACTIVE_AND_NEXT_ORDERS_FOR_SELECTED: "[AddLocalizationIf(NotZero(GetNumCommandersInSelectedFormationsWithOrderActive(CommanderOrderType.Self)), 'ACTIVE_ORDERS_FOR_SELECTED')][AddLocalizationIf(NotZero(GetNumCommandersInSelectedFormationsWithOrderNext(CommanderOrderType.Self)), 'NEXT_ORDERS_FOR_SELECTED')]"
 ACTIVE_ORDERS_FOR_SELECTED: "[GetNumCommandersInSelectedFormationsWithOrderActive(CommanderOrderType.Self)|vu]"
 NEXT_ORDERS_FOR_SELECTED: " ([GetNumCommandersInSelectedFormationsWithOrderNext(CommanderOrderType.Self)|v])"
 DIVIDENDS_FROM_GOVERNMENT_SHARES: "[concept_government_dividends]"
 LOSSES_FROM_GOVERNMENT_SHARES: "Verluste aus [concept_nationally_owned]-[Concept('concept_building', '$concept_buildings$n')]"
 GOVERNMENT_DIVIDENDS_MULT_DESC: "$concept_government_dividends$-Effizienz: #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|%+$#!#!"
 GOVERNMENT_DIVIDENDS_WASTE_DESC: "Multipliziert mit #v x$MULTIPLIER$#! aufgrund von Verschwendung:"
 TAX_INCOME_BREAKDOWN: "#bold Nationaleinnahmen:#! #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_INCOME_BREAKDOWN,TotalIncomeTooltip #variable @money![GetPlayer.PredictWeeklyFixedIncome|D+=]#!#!#!"
 TAX_INCOME_INCOME: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],INCOME_TAXES_BREAKDOWN,TaxIncomeTooltip @money![GetPlayer.GetIncomeTaxIncome|D+=]#!#! [concept_budget_income_taxes]"
 TAX_INCOME_POLL: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],POLL_TAXES_BREAKDOWN,TaxPollTooltip @money![GetPlayer.GetPollTaxIncome|D+=]#!#! [concept_budget_poll_taxes]"
 TAX_INCOME_CONSUMPTION: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],CONSUMPTION_TAXES_BREAKDOWN,ConsumptionTaxTooltip @money![GetPlayer.PredictConsumptionTaxes|D+=]#!#! [concept_budget_consumption_taxes]"
 TAX_INCOME_DIVIDENDS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],DIVIDENDS_TAXES_BREAKDOWN,DividendsTaxTooltip @money![GetPlayer.PredictDividendsTaxes|D+=]#!#! [concept_budget_dividends_taxes]"
 TAX_INCOME_ADDITIONAL: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],ADDITIONAL_INCOME_BREAKDOWN,AdditionalIncomeTooltip @money![GetPlayer.GetModifier.GetValueFor('country_tax_income_add')|K+=]#!#! [concept_budget_additional_income]"
 TAX_INCOME_MINTING: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],MINTING_BREAKDOWN,MintingTooltip @money![GetPlayer.PredictMinting|D+=]#!#! [concept_budget_minting]"
 TAX_INCOME_INVESTMENT: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],INVESTMENT_INCOME_BREAKDOWN,InvestmentIncomeTooltip @money![GetPlayer.GetInvestmentIncome|D+=]#!#! [concept_budget_investment_income]"
 TAX_INCOME_DIPLOMATIC: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],DIPLOMATIC_PACTS_INCOME_BREAKDOWN,DiplomaticPactsIncomeTooltip @money![GetPlayer.PredictDiplomaticPactsIncome|D+=]#!#! [concept_budget_diplomatic_pacts]"
 TAX_INCOME_POWER_BLOC: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],POWER_BLOC_INCOME_BREAKDOWN,PowerBlocIncomeTooltip @money![GetPlayer.GetPowerBlocIncomeRaw|D+=]#!#! [concept_budget_power_bloc]"
 TAX_INCOME_TARIFFS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],TARIFFS_BREAKDOWN,TariffsTooltip @money![GetPlayer.PredictTariffs|D+=]#!#! [concept_tariffs]"
 TAX_INCOME_GOVERNMENT_SHARE_DIVIDENDS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],GOVERNMENT_SHARE_DIVIDENDS_BREAKDOWN,GovernmentShareDividendsTooltip @money![GetPlayer.PredictGovernmentShareDividends|D+=]#!#! $DIVIDENDS_FROM_GOVERNMENT_SHARES$"
 INVESTMENT_POOL: "[concept_investment_pool]: #tooltippable #tooltip:[GetPlayer.GetTooltipTag],INVESTMENT_POOL_BREAKDOWN,InvestmentPoolTooltip #v @money![GetPlayer.GetInvestmentPool|D+]#!#!#! (Änderung: #v @money![GetPlayer.GetInvestmentPoolChange|D+=]#!)"
 INVESTMENT_POOL_BREAKDOWN: "#header [concept_investment_pool]#!\nDerzeit: #v @money![GetPlayer.GetInvestmentPool|D+]#!\nWöchentliche Änderung: #v @money![GetPlayer.GetInvestmentPoolChange|D+=]#!\n$TOOLTIP_DELIMITER$\n$INVESTMENT_POOL_CHANGE$"
 INVESTMENT_POOL_CHANGE: "[GetPlayer.GetInvestmentPoolChangeFromConstructionDesc]\n[GetPlayer.GetInvestmentPoolChangeFromInvestmentDesc]"
 INVESTMENT_POOL_CHANGE_FROM_CONSTRUCTION: "#bold Neues [Concept('concept_construction', 'Bauvorhaben')]:#! #v @money!$CHANGE|D+$#!"
 INVESTMENT_POOL_CHANGE_FROM_CONSTRUCTION_EMPTY: "Es gibt keine neuen [Concept('concept_construction', 'Bauvorhaben')], die den $concept_investment_pool$ nutzen: #v @money!$CHANGE|D+=$#!"
 INVESTMENT_POOL_CHANGE_FROM_INVESTMENT: "[concept_reinvestment]: #v @money!#tooltippable #tooltip:[GetPlayer.GetTooltipTag],INVESTMENT_POOL_SOURCES_BREAKDOWN $CHANGE|D+=$#!#!#!\nAlle Investitionen werden aufgrund des [GetPlayer.GetAdjective|l]en [concept_gdp] von @money![GetPlayer.GetGDP|Dv] mit #v x$MULTIPLIER$#! multipliziert"
 INVESTMENT_POOL_CHANGE_FROM_INVESTMENT_EMPTY: "Keine Investitionsquellen: #v @money!$CHANGE|D+=$#!"
 INVESTMENT_POOL_SOURCES_BREAKDOWN: "#header [Concept('concept_building', '$concept_buildings$')], die dem [concept_investment_pool] [concept_money] hinzufügen#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetInvestmentPoolChangeFromInvestmentBreakdown]"
 INVESTMENT_FROM_BUILDING_DETAIL: "[BuildingType.GetName]: #N #variable @money!$VAL|D+$#!#!"
 CURRENT_INVESTMENT_POOL: "[concept_investment_pool]: #v @money![GetPlayer.GetInvestmentPool|D+]#! ([GetPlayer.GetInvestmentPoolChange|=+D])"
 NEXT_PRIVATE_CONSTRUCTION: "[GetPlayer.GetInvestmentPoolPredictedNextBuildingDesc]"
 NO_NEXT_PRIVATE_CONSTRUCTION_OTHER_REASON: "Keine potenziellen [Concept('concept_private_construction', '$concept_private_constructions$')] für Investitionen"
 NO_NEXT_PRIVATE_CONSTRUCTION_NO_INFRASTRUCTURE: "Es gibt keinen [concept_state] mit ausreichender [concept_infrastructure] und verfügbaren [Concept('concept_workforce', 'Beschäftigten')] für neue [Concept('concept_private_construction', '$concept_private_constructions$')]"
 NO_NEXT_PRIVATE_CONSTRUCTION_NO_CONSTRUCTION_SECTOR: "Ein [GetBuildingType('building_construction_sector').GetName] wird benötigt, um [Concept('concept_private_construction', '$concept_private_constructions$')] zu unterstützen"
 INVESTMENT_POOL_PRIVATIZING_NEXT_BUILDING_WITH_INVESTOR: "„[BUILDING_TYPE.GetName]“ in „[STATE.GetName]“ wird „[TARGET_BUILDING_TYPE.GetName]“ in „[TARGET_STATE.GetName]“ [concept_privatize|l]\nStatus: $STATUS$"
 INVESTMENT_POOL_PRIVATIZING_NEXT_BUILDING: "Wird „[BUILDING_TYPE.GetName]“ in „[STATE.GetName]“ [concept_privatize|l]\nStatus: $STATUS$"
 INVESTMENT_POOL_NEXT_BUILDING_WITH_INVESTOR: "„[BUILDING_TYPE.GetName]“ in „[STATE.GetName]“ wird „[TARGET_BUILDING_TYPE.GetName]“ in „[TARGET_STATE.GetName]“ erweitern\nStatus: $STATUS$"
 INVESTMENT_POOL_NEXT_BUILDING: "Wird „[BUILDING_TYPE.GetName]“ in „[STATE.GetName]“ erweitern\nStatus: $STATUS$"
 INVESTMENT_POOL_NEXT_BUILDING_WAITING_FOR_FUNDING: "#b Wartet auf verfügbare Finanzierung (#tooltippable #tooltip:$BREAKDOWN_TAG$ $PERCENTAGE|v%0$#!#!)#!"
 INVESTMENT_POOL_NEXT_BUILDING_WAITING_FOR_QUEUE: "#b Wartet auf Abschluss anderer [Concept('concept_private_construction', '$concept_private_constructions$')]#!"
 INVESTMENT_POOL_NEXT_BUILDING_READY: "#p Bereit für $concept_construction$#!"
 INVESTMENT_POOL_NEXT_PRIVATIZATION_READY: "#p Bereit für $concept_privatization$#!"
 INVESTMENT_POOL_NEXT_BUILDING_FUNDING_DESC: "#header Finanzierung von [BUILDING_TYPE.GetName] in [STATE.GetName]: $FUNDING|v%$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 INVESTMENT_POOL_PRIVATIZATION_COST: "Kosten für die [Concept('concept_privatize', '$concept_privatization$')] einer Stufe „[BUILDING.GetName]“: @money!$COST|vD$"
 INVESTMENT_POOL_NEXT_BUILDING_AVAILABLE_TOTAL_FUNDS: "@money!$CURRENT|vD$ in [concept_investment_pool] eingezahlt, wobei derzeit @money!$NEEDED|vD$ für [Concept('concept_private_construction', '$concept_private_constructions$')] in der Baukette gebraucht werden und somit @money!$AVAILABLE|vD$ verbleiben."
 INVESTMENT_POOL_NEXT_BUILDING_AVAILABLE_WEEKLY_FUNDS: "@money!$CURRENT|vD$ werden wöchentlich an den [concept_investment_pool] gezahlt, wobei derzeit @money!$NEEDED|vD$ für [Concept('concept_private_construction', '$concept_private_constructions$')] in der Baukette gebraucht werden und somit @money!$AVAILABLE|vD$ wöchentlich verbleiben."
 INVESTMENT_POOL_NEXT_BUILDING_NO_AVAILABLE_FUNDS: "@information!Alle eingezahlten und wöchentlichen Gelder des [concept_investment_pool] werden derzeit anderen Projekten zugewiesen."
 INVESTMENT_POOL_NEXT_FRACTION_HANDLED_BY_TOTAL_FUNDS: "$FRACTION|%0v$ der Gesamtbaukosten (@money!$COST|vD$) werden durch verfügbare eingezahlte Mittel aus dem [concept_investment_pool] abgedeckt"
 INVESTMENT_POOL_NEXT_FRACTION_HANDLED_BY_WEEKLY_FUNDS: "$FRACTION|%0v$ der wöchentlichen Gesamtbaukosten (@money!$COST|vD$) werden durch verfügbare wöchentliche Mittel des [concept_investment_pool] abgedeckt"
 INVESTMENT_POOL_TOTAL_FRACTION: "@information! Ein [concept_private_construction] gilt als finanziert, wenn die Gesamtsumme der Abdeckung der wöchentlichen Kosten und der Gesamtkosten-Abdeckung $REQUIRED|%v0$ (derzeit $TOTAL|%v0$) finanziert wird. Der Finanzierungsprozentsatz kann aufgrund von Faktoren wie dem aktuellen Preis der Bau-[Concept('concept_good', '$concept_goods$')] schwanken."
 INVESTMENT_POOL_PREVIOUS_INVESTMENTS_DESC: "#header Bisherige [Concept('concept_private_construction', '$concept_private_constructions$')] und [Concept('concept_privatize', '$concept_privatizations$')]#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 INVESTMENT_POOL_NO_PREVIOUS_INVESTMENTS: "Keine vorherigen Investitionen"
 INVESTMENT_POOL_PREVIOUS_PRIVATIZATION: "$EFFECT_LIST_BULLET$„[BUILDING_TYPE.GetName]“ in „[STATE.GetName]“ privatisierte „[TARGET_BUILDING_TYPE.GetName]“ in „[TARGET_STATE.GetName]“ am $DATE|v$"
 INVESTMENT_POOL_PREVIOUS_CONSTRUCTION: "$EFFECT_LIST_BULLET$„[BUILDING_TYPE.GetName]“ in „[STATE.GetName]“ baute „[TARGET_BUILDING_TYPE.GetName]“ in „[TARGET_STATE.GetName]“ am $DATE|v$"
 TOTAL_INCOME_BREAKDOWN: "[GetPlayer.GetIncomeBreakdown]"
 TOTAL_EXPENSES_BREAKDOWN: "[GetPlayer.GetExpensesBreakdown]"
 BUILDING_GROUP_LAW_HEADER: "Das Gesetz „[Law.GetName]“ erlaubt die Finanzierung der folgenden Gebäude durch [concept_investment_pool]:"
 INTEREST_EXPENSE_TOOLTIP: "#header Zinsen#!\nGesamt: #N @money!-[GetPlayer.GetInterestPayment|D-]"
 POLL_TAXES_BREAKDOWN: "#tooltip_header [concept_budget_poll_taxes]#!\nGesamt: #v @money![GetPlayer.GetPollTaxIncome|K+=]#!"
 INCOME_TAXES_BREAKDOWN: "#tooltip_header [concept_budget_income_taxes]#!\nGesamt: #v @money![GetPlayer.GetIncomeTaxIncome|K+=]#!"
 INCOME_TAX_RATE: "Der Einkommenssteuersatz von #v $VAL|+%0$#! basiert auf Folgendem:$BASE_INCOME_TAX_RATE_BREAKDOWN$$TAXCOLLECTION_EFFICIENCY_BREAKDOWN$"
 POP_INCOME_TAX_RATE: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $VAL|%1$#!#!#! [concept_budget_income_taxes]: #N #bold @money!-$TAX_LOSS|D$#!#!"
 POP_DIVIDEND_TAX_RATE: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $VAL|%1$#!#!#! [concept_budget_dividends_taxes]: #N #bold @money!-$TAX_LOSS|D$#!#!"
 POP_PER_CAPITA_TAX: "[concept_budget_per_capita_taxes]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #N #bold @money!-$TAX_LOSS|D$#!#!#!#!"
 POP_LAND_TAX: "[concept_budget_land_taxes]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #N #bold @money!-$TAX_LOSS|D$#!#!#!#!"
 POP_HEATHEN_TAX: "[concept_budget_heathen_taxes]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #N #bold @money!-$TAX_LOSS|D$#!#!#!#!"
 POP_CONSUMPTION_TAX: "[concept_budget_consumption_taxes]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #N #bold @money!-$TAX_LOSS|D$#!#!#!#!"
 POP_CONSUMPTION_TAX_BREAKDOWN: "#header [concept_budget_consumption_taxes]#!\n$BREAKDOWN$"
 POP_CONSUMPTION_TAX_ENTRY: "[Goods.GetName]: #N #bold @money!-$AMOUNT|D$#!#!#!#!"
 ECONOMIC_CONTRIBUTION: "Wirtschaftsbeitrag: $VAL|v%0$"
 TAXATION_BREAKDOWN: "#header Besteuerung#!\nDie Gesamtbesteuerungsstufe von #variable $VAL|%1$#! basiert auf Folgendem:\n$TAB$$STATE_TAX_MODIFIER$\n$TAB$$BREAKDOWN$"
 ECONOMIC_DEPENDENCE_ON_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $LABEL$ ($VALUE|1v$)#!#!"
 ECONOMIC_DEPENDENCE_GDP_RATIO_SECTION: "$VALUE|=v1$ durch #tooltippable #tooltip:$TOOLTIP_TAG$ $BASE_VALUE|%v1$#!#! des [COUNTRY.GetAdjectiveNoFormatting|l]en [concept_gdp] im Besitz [TARGET_COUNTRY.GetAltNameNoFormatting('VON')]"
 ECONOMIC_DEPENDENCE_MARKET_GDP_COMPARISON_SECTION: "Differenz von $VALUE|=v1$ bis $BASE_VALUE|=v0%$ im [concept_gdp] zwischen [COUNTRY.GetAltNameNoFlag('DAT')] (@money![COUNTRY.GetGDP|Dv]) und [TARGET_COUNTRY.GetAltNameNoFormatting('DAT')] (@money![TARGET_COUNTRY.GetGDP|Dv])"
 ECONOMIC_DEPENDENCE_POP_GOODS_DEPENDENCE_SECTION: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE|=v1$#!#! durch nicht erfüllte [COUNTRY.GetAdjectiveNoFormatting|l]e [concept_buy_orders], die durch [TARGET_COUNTRY.GetAltNameNoFormatting('AKK')] erfüllt werden"
 ECONOMIC_DEPENDENCE_TRADE_DEPENDENCE_SECTION: "$VALUE|=v1$ durch Handelswert #tooltippable #tooltip:$BREAKDOWN_TAG$ (@money!$BASE_VALUE|Dv$)#!#! mit [TARGET_COUNTRY.GetAltNameNoFlag('DAT')]"
 ECONOMIC_DEPENDENCE_ON_TOOLTIP: "#header [COUNTRY.GetAdjectiveNoFlag|U]e [concept_economic_dependence|l] [TARGET_COUNTRY.GetAltName('VON')]#!\nWert: [GetEconomicDependenceOnLabel('(CFixedPoint)$VALUE$')|v] ($VALUE|v1$)\n$TOOLTIP_DELIMITER$\n[SelectLocalization(StringIsEmpty('$BREAKDOWN$'),'ECONOMIC_DEPENDENCE_ON_NO_BREAKDOWN','$BREAKDOWN$')]"
 ECONOMIC_DEPENDENCE_ON_NO_BREAKDOWN: "Keine Faktoren tragen zur [Concept('concept_economic_dependence', 'wirtschaftlichen Abhängigkeit')] bei."
 ECONOMIC_DEPENDENCE_LABEL_0: "Unabhängig"
 ECONOMIC_DEPENDENCE_LABEL_1: "Wichtig"
 ECONOMIC_DEPENDENCE_LABEL_2: "Verstrickt"
 ECONOMIC_DEPENDENCE_LABEL_3: "Angewiesen"
 ECONOMIC_DEPENDENCE_LABEL_4: "Abhängig"
 ECONOMIC_DEPENDENCE_LABEL_5: "Kontrolliert"
 GOODS_DEPENDENCE_INSUFFICIENCE_SATISFIED_SECTION_HEADER: "@money!$VALUE|vD$ an unerfüllter Nachfrage, die [COUNTRY.GetAltName('VON')] befriedigt wird (verglichen mit einem Wochen-[concept_gdp] von @money![COUNTRY.GetWeeklyGDP|vD])"
 GOODS_DEPENDENCE_DOMESTIC_SUFFICIENCE_SECTION_HEADER: "@money!$VALUE|v0$ an durchs Inland erfüllter Nachfrage"
 GOODS_DEPENDENCE_INSUFFICIENCE_SATISFIED_ENTRY: "@money!$VALUE|vD$ ($AMOUNT|vD$) [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 GOODS_DEPENDENCE_DOMESTIC_SUFFICIENCE_ENTRY: "@money!$VALUE|v0$ ($AMOUNT|v0$) [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 GOODS_DEPENDENCE_BREAKDOWN: "#indent_newline:3 $INSUFFICIENCE_SATISFIED_HEADER$\n$INSUFFICIENCE_BREAKDOWN$#!"
 GOODS_DEPENDENCE_TOOLTIP: "#header [Concept('concept_good_consumption', 'Verbrauchsabhängigkeit')] der [COUNTRY.GetAdjective|l]en $concept_pops$ [TARGET_COUNTRY.GetAltName('VON')]#!\nWert: $VALUE|%1v$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$\n\n@information! Die Verbrauchsabhängigkeit misst die Verbrauchsnachfrage, die von der einheimischen Industrie eines Lands nicht selbst gedeckt werden kann, was dann stattdessen von einem anderen Land auf demselben Markt übernommen wird. Der Abhängigkeitswert fußt auf dem Marktpreis der gelieferten Güter und ihrem Anteil an der Gesamtproduktion dieser Waren auf dem Markt. Dieser Wert wird dann mit dem Wochen-BIP verglichen."
 CONSUMPTION_TAXES_BREAKDOWN: "[GetPlayer.GetConsumptionTaxesDesc]"
 CONSUMPTION_TAXES: "#tooltip_header Verbrauchssteuern#!\nGesamt: #v $VAL|K+=$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 CONSUMPTION_TAXES_GOODS_ENTRY: "#variable @money!$VAL|K+$#! durch die Ware „[GOODS.GetName]“"
 DIVIDENDS_TAXES_BREAKDOWN: "#tooltip_header Dividendensteuern#!\nGesamt: #v @money![GetPlayer.PredictDividendsTaxes|K+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictDividendsTaxesDesc]"
 DIVIDENDS_TAX_FROM_BUILDING_DETAIL: "#N #variable @money!$VAL|D+$#!#! durch Gebäude der Art „[BuildingType.GetName]“"
 GOVERNMENT_SHARES_FROM_BUILDING_DETAIL: "#N #variable @money!$VAL|D+$#!#! durch [concept_nationally_owned]-[BuildingType.GetName]"
 IMPORT_TARIFFS_FROM_GOODS_DETAIL: "#N #variable @money!$VAL|D+$#!#! durch den Import der Ware „[Goods.GetName]“"
 EXPORT_TARIFFS_FROM_GOODS_DETAIL: "#N #variable @money!$VAL|D+$#!#! durch den Export der Ware „[Goods.GetName]“"
 TARIFFS_BREAKDOWN: "#tooltip_header [concept_tariffs]#!\nGesamt: #v @money![GetPlayer.PredictTariffs|K+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictTariffsDesc]"
 MINTING_BREAKDOWN: "#tooltip_header [concept_budget_minting]#!\nGesamt: #v @money![GetPlayer.PredictMinting|D+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictMintingDesc]"
 MINTING_VALUE_FORMAT: "$VAL|D+=$"
 INVESTMENT_INCOME_BREAKDOWN: "#tooltip_header [concept_budget_investment_income]#!\nGesamt: #v @money![GetPlayer.GetInvestmentIncome|K+=]#!"
 GOVERNMENT_SHARE_DIVIDENDS_BREAKDOWN: "#tooltip_header $DIVIDENDS_FROM_GOVERNMENT_SHARES$#!\nGesamt: #v @money![GetPlayer.PredictGovernmentShareDividends|K+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictGovernmentShareDividendsDesc]"
 GOVERNMENT_SHARE_LOSSES_BREAKDOWN: "#tooltip_header $LOSSES_FROM_GOVERNMENT_SHARES$#!\nGesamt: #v @money![GetPlayer.PredictGovernmentShareLosses|K+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictGovernmentShareLossesDesc]"
 ADDITIONAL_INCOME_BREAKDOWN: "#tooltip_header Zusätzliches Einkommen#!\nGesamt: #v @money![GetPlayer.GetModifier.GetValueFor('country_tax_income_add')|K+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetModifier.GetDescFor('country_tax_income_add')]"
 ADDITIONAL_EXPENSES_BREAKDOWN: "#tooltip_header Zusätzliche Ausgaben#!\nGesamt: #v @money![GetPlayer.GetModifier.GetInvertedValueFor('country_expenses_add')|K+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetModifier.GetDescFor('country_expenses_add')]"
 WELFARE_PAYMENTS_EXPENSES_BREAKDOWN: "#tooltip_header [concept_welfare_payments]#!\nGesamt: #n @money!-[GetPlayer.GetWelfarePaymentsExpenses|D]#!"
 DIPLOMATIC_PACTS_INCOME_BREAKDOWN: "#tooltip_header Diplomatiepakte#!\nGesamt: #v @money![GetPlayer.PredictDiplomaticPactsIncome|K+]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictDiplomaticPactsIncomeDesc]"
 POWER_BLOC_INCOME_BREAKDOWN: "#tooltip_header Machtblock#!\nGesamt: #v @money![GetPlayer.GetPowerBlocIncomeRaw|K+]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetPowerBlocIncomeDesc]"
 ONLY_SHOW_AVAILABLE: "Nur verfügbare anzeigen"
 ONLY_SHOW_AVAILABLE_EXILED_AGITATORS_TOOLTIP: "Nur [Concept('concept_exile', 'ins Exil geschickte')|l] [Concept('concept_agitator', '$concept_agitators$')] anzeigen, die eingeladen werden können"
 EXPENSES_ADDITIONAL: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],ADDITIONAL_EXPENSES_BREAKDOWN,AdditionalExpensesTooltip @money![GetPlayer.GetModifier.GetInvertedValueFor('country_expenses_add')|K+=]#!#! [concept_budget_additional_expenses]"
 EXPENSES_WELFARE_PAYMENTS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],WELFARE_PAYMENTS_BREAKDOWN,WelfarePaymentsTooltip @money![Negate_CFixedPoint(GetPlayer.GetWelfarePaymentsExpenses)|D+=]#!#! [concept_welfare_payments]"
 EXPENSES_GOVERNMENT_SHARE_LOSSES: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],GOVERNMENT_SHARE_LOSSES_BREAKDOWN,GovernmentShareLossesTooltip @money![GetPlayer.PredictGovernmentShareLosses|D-]#!#! $LOSSES_FROM_GOVERNMENT_SHARES$"
 GOVERNMENT_BUILDINGS_EXPENSES_BREAKDOWN: "#tooltip_header Waren für Regierungsgebäude#!\nGesamt: #v #N @money!-[GetPlayer.GetGovernmentGoodsExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetGovernmentGoodsExpensesDesc]\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetGovernmentGoodsExpensesByGoodsDesc]"
 GOVERNMENT_WAGES_EXPENSES_BREAKDOWN: "#tooltip_header Regierungsgehälter#!\nGesamt: #v #N @money!-[GetPlayer.GetGovernmentWagesExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetGovernmentWagesExpensesDesc]"
 GOVERNMENT_SLAVES_EXPENSES_BREAKDOWN: "#tooltip_header Regierungssklaven#!\nGesamt: #v #N @money!-[GetPlayer.GetGovernmentSlavesExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetGovernmentSlavesExpensesDesc]"
 MILITARY_BUILDINGS_EXPENSES_BREAKDOWN: "#tooltip_header Waren für Militärgebäude#!\nGesamt: #v #N @money!-[GetPlayer.GetMilitaryGoodsExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetMilitaryGoodsExpensesDesc]\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetMilitaryGoodsExpensesByGoodsDesc]"
 MILITARY_WAGES_EXPENSES_BREAKDOWN: "#tooltip_header Militärgehälter#!\nGesamt: #v #N @money!-[GetPlayer.GetMilitaryWagesExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetMilitaryWagesExpensesDesc]"
 MILITARY_TOTAL_EXPENSES_BREAKDOWN: "#tooltip_header Summe der Militärausgaben#!\nGesamt: @money!#v #n -[Country.PredictTotalMilitaryExpenses|D]#!#!\n$TOOLTIP_DELIMITER$\nGehälter: #v #N @money!-[GetPlayer.GetMilitaryWagesExpenses|D-]#!#!\n#indent_newline:2   [GetPlayer.GetMilitaryWagesExpensesDesc]#!\n\nWaren: #v #N @money!-[GetPlayer.GetMilitaryGoodsExpenses|D-]#!#!\n#indent_newline:2   [GetPlayer.GetMilitaryGoodsExpensesByGoodsDesc]#!\n\nWarenausgaben nach Gebäudeart gruppiert:\n#indent_newline:2   [GetPlayer.GetMilitaryGoodsExpensesDesc]#!"
 MILITARY_SLAVES_EXPENSES_BREAKDOWN: "#tooltip_header Militärsklaven#!\nGesamt: #v #N @money!-[GetPlayer.GetMilitarySlavesExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetMilitarySlavesExpensesDesc]"
 DIPLOMATIC_PACTS_EXPENSES_BREAKDOWN: "#tooltip_header Diplomatiepakte#!\nGesamt: #v #N @money!-[GetPlayer.PredictDiplomaticPactsExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictDiplomaticPactsExpensesDesc]"
 POWER_BLOC_EXPENSE_BREAKDOWN: "#tooltip_header Machtblock#!\nGesamt: #v #N @money!-[GetPlayer.GetPowerBlocExpenseRaw|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetPowerBlocExpenseDesc]"
 CONSTRUCTION_GOODS_EXPENSES_BREAKDOWN: "#tooltip_header [Concept('concept_good', '$concept_goods$')] für [concept_government_construction]#!\nGesamt: #v #N @money!-[GetPlayer.GetConstructionGoodsExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetConstructionGoodsExpensesByGoodsDesc]"
 GOODS_EXPENSES_DETAIL: "#v @money!$EXPENSE|D-$#! wird für [Goods.GetTextIcon] „[Goods.GetName]“ ausgegeben"
 GOV_EXPENSES_DETAIL: "#N #variable @money!$EXPENSE|D-$#!#! durch Gebäude der Art „[BUILDING_TYPE.GetName]“"
 PACT_EXPENSE_DETAIL: "$ACTION$: #N #variable @money!#tooltippable #tooltip:$BREAKDOWN$ $VAL|D-$#!#!#!#!"
 PACT_INCOME_DETAIL: "$ACTION$: #P #variable @money!#tooltippable #tooltip:$BREAKDOWN$ $VAL|D+$#!#!#!#!"
 TRANSFER_GOODS_EXPENSE: "Vertragswaren (Übertragungsausgaben): #N #variable @money!#tooltippable #tooltip:$BREAKDOWN$ $VAL|D-$#!#!#!#!"
 TRANSFER_GOODS_EXPENSE_BREAKDOWN_ENTRY: "@money!$VAL|D-$ durch Kauf von $QUANTITY|0v$ „[Goods.GetName]“ für [Country.GetAltName('AKK')]"
 TRANSFER_GOODS_INCOME: "Vertragswaren (Übertragungseinnahmen): #P #variable @money!#tooltippable #tooltip:$BREAKDOWN$ $VAL|D+$#!#!#!#!"
 TRANSFER_GOODS_INCOME_BREAKDOWN_ENTRY: "@money!$VAL|D+$ durch Verkauf von $QUANTITY|0v$ „[Goods.GetName]“ [Country.GetAltName('IN')]"
 TRANSFER_MONEY_EXPENSE: "Vertragsgelder (Übertragungsausgaben): #N #variable @money!#tooltippable #tooltip:$BREAKDOWN$ $VAL|D-$#!#!#!#!"
 TRANSFER_MONEY_EXPENSE_BREAKDOWN_ENTRY: "@money!$VAL|D-$ übertragen an [Country.GetAltName('AKK')]"
 TRANSFER_MONEY_INCOME: "Vertragsgelder (Übertragungseinnahmen): #P #variable @money!#tooltippable #tooltip:$BREAKDOWN$ $VAL|D+$#!#!#!#!"
 TRANSFER_MONEY_INCOME_BREAKDOWN_ENTRY: "@money!$VAL|D+$ [Country.GetAltName('VON')] übertragen"
 INCOME_TRANSFER_FACTOR: "#v x$VAL$#! durch [SubjectType.GetNameNoIcon]"
 INCOME_TRANSFER_TOOLTIP: "#header [SubjectType.GetName]#!\nGesamt: @money!$VAL|K+$\n$TOOLTIP_DELIMITER$\n@money!$BASE|K+$ durch [Country.GetAdjective|l]e [concept_treasury]-Einnahmen[ConcatIfNeitherEmpty('\n', '$BREAKDOWN$')]"
 INCOME_TRANSFER_TOOLTIP_MAX_DESC: "Gedeckelt bei @money!$MAX|K+$ ($MAX_FRACTION|v0%$ der [COUNTRY.GetAdjective|l]en Einnahmen)"
 INCOME_TRANSFER_FACTOR_NO_SUBJECT: "#v x$VAL$#! durch „[DIPLOMATIC_ACTION_TYPE.GetName]“"
 INCOME_TRANSFER_TOOLTIP_NO_SUBJECT: "#header [DIPLOMATIC_ACTION_TYPE.GetName]#!\nGesamt: @money!$VAL|K+$\n$TOOLTIP_DELIMITER$\n@money!$BASE|K+$ durch [Country.GetAdjective|l]e [concept_treasury]-Einnahmen[ConcatIfNeitherEmpty('\n', '$BREAKDOWN$')]"
 SUBSIDIES_EXPENSES_BREAKDOWN: "#tooltip_header Subventionen: #N @money![GetPlayer.GetSubsidiesExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetSubsidiesExpensesDesc]"
 SUBVENTIONS_EXPENSES_BREAKDOWN: "#tooltip_header Subventionen: #N @money![GetPlayer.GetSubventionsExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetSubventionsExpensesDesc]"
 POWER_BLOC_EXPENSES_BREAKDOWN: "#tooltip_header Machtblock: #N @money!-[GetPlayer.GetPowerBlocExpenseRaw|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetPowerBlocExpenseDesc]"
 INCOME_TRANSFER_TO_POWER_BLOC_LEADER_FACTOR: "#v x$VAL$#! durch „$MODIFIER_NAME$“"
 INCOME_TRANSFER_TO_POWER_BLOC_LEADER: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] @money!$VAL|D-$#!#! an [COUNTRY.GetAltName('AKK')]"
 INCOME_TRANSFER_FROM_POWER_BLOC_MEMBER: "@money!$VAL|D+$ [COUNTRY.GetAltName('VON')]"
 DIPLOMATIC_ACTION_WITH_COUNTRY: "[COUNTRY.GetAltName('NOM')|U] – „[DIPLOMATIC_ACTION_TYPE.GetName]“"
 IMPORTANT_ACTIONS: "Derzeitige Lage"
 CURRENT_SITUATION_TOOLTIP: "#header Derzeitige Lage#!"
 UNREAD_MESSAGES: "#header Es gibt ungelesene Nachrichten!#!"
 RESET_TO_DEFAULT: "Auf Standardeinstellungen zurücksetzen"
 BALANCE_WITHOUT_TEMPORARY_INCOME_AND_EXPENSES: "\nSaldo (ohne temporäre Einnahmen und Ausgaben): #v @money![GetPlayer.PredictBalanceWithoutTemporaryIncomeAndExpenses|D+=]#!"
 TAX_OCCUPATION_LOSS: "Steuerverlust durch Besetzung: #variable [GetPlayer.GetTaxOccupationLoss|1-=]#!\n$lower$: #variable [GetPlayer.GetTaxOccupationLossFor('lower')|1-=]#!\n$middle$: #variable [GetPlayer.GetTaxOccupationLossFor('middle')|1-=]#!\n$upper$: #variable [GetPlayer.GetTaxOccupationLossFor('upper')|1-=]#!\n"
 FIXED_EXPENSES_BREAKDOWN: "#bold Fixe Landesausgaben:#! #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_EXPENSES_BREAKDOWN,TotalExpensesTooltip #bold #N @money!-[GetPlayer.GetWeeklyFixedExpenses|D-]#!#!#!#!"
 TEMPORARY_INCOME_BREAKDOWN: "#bold Temporäre Nationaleinnahmen:#! #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_INCOME_BREAKDOWN,TotalIncomeTooltip #bold #P @money!+[GetPlayer.GetWeeklyTemporaryIncome|D+]#!#!#!#!"
 TEMPORARY_EXPENSES_BREAKDOWN: "#bold Temporäre Landesausgaben:#! #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_EXPENSES_BREAKDOWN,TotalExpensesTooltip #bold #N @money!-[GetPlayer.GetWeeklyTemporaryExpenses|D-]#!#!#!#!"
 EXPENSES_BREAKDOWN: "#bold Landesausgaben:#! #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_EXPENSES_BREAKDOWN,TotalExpensesTooltip #bold #N @money!-[GetPlayer.GetWeeklyExpenses|D-]#!#!#!#!"
 EXPENSES_GOVERNMENT_BUILDING_GOODS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],GOVERNMENT_BUILDINGS_EXPENSES_BREAKDOWN,GovernmentGoodsExpenseTooltip #N @money!-[GetPlayer.GetGovernmentGoodsExpenses|D-]#!#!#! [concept_budget_goods_for_government_buildings]"
 EXPENSES_GOVERNMENT_WAGES: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],GOVERNMENT_WAGES_EXPENSES_BREAKDOWN,GovernmentWagesExpenseTooltip #N @money!-[GetPlayer.PredictGovernmentWagesExpenses|D-]#!#!#! [concept_budget_government_wages]"
 EXPENSES_GOVERNMENT_SLAVES: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],GOVERNMENT_SLAVES_EXPENSES_BREAKDOWN,GovernmentSlavesExpenseTooltip #N @money!-[GetPlayer.GetGovernmentSlavesExpenses|D-]#!#!#! [concept_budget_government_slaves]"
 EXPENSES_MILITARY_BUILDING_GOODS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],MILITARY_BUILDINGS_EXPENSES_BREAKDOWN,MilitaryGoodsExpenseTooltip #N @money!-[GetPlayer.GetMilitaryGoodsExpenses|D-]#!#!#! [concept_budget_goods_for_military_buildings]"
 EXPENSES_MILITARY_WAGES: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],MILITARY_WAGES_EXPENSES_BREAKDOWN,MilitaryWagesExpenseTooltip #N @money!-[GetPlayer.PredictMilitaryWagesExpenses|D-]#!#!#! [concept_budget_military_wages]"
 EXPENSES_MILITARY_SLAVES: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],MILITARY_SLAVES_EXPENSES_BREAKDOWN,MilitarySlavesExpenseTooltip #N @money!-[GetPlayer.GetMilitarySlavesExpenses|D-]#!#!#! [concept_budget_military_slaves]"
 EXPENSES_SUBSIDIES: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],SUBSIDIES_EXPENSES_BREAKDOWN,SubsidiesExpenseTooltip #N @money!-[GetPlayer.GetSubsidiesExpenses|D-]#!#!#! [concept_subsidies]"
 EXPENSES_SUBVENTIONS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],SUBVENTIONS_EXPENSES_BREAKDOWN,SubventionsExpenseTooltip #N @money!-[GetPlayer.GetSubventionsExpenses|D-]#!#!#! [concept_subventions]"
 EXPENSES_DIPLOMATIC_PACTS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],DIPLOMATIC_PACTS_EXPENSES_BREAKDOWN,DiplomaticPactsExpenseTooltip #N @money!-[GetPlayer.PredictDiplomaticPactsExpenses|D-]#!#!#! [concept_budget_diplomatic_pacts]"
 EXPENSES_POWER_BLOC: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],POWER_BLOC_EXPENSES_BREAKDOWN,PowerBlocExpenseTooltip #N @money!-[GetPlayer.GetPowerBlocExpenseRaw|D-]#!#!#! [concept_budget_power_bloc]"
 EXPENSES_CONSTRUCTION_GOODS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],CONSTRUCTION_GOODS_EXPENSES_BREAKDOWN,ConstructionGoodsExpenseTooltip #N @money!-[GetPlayer.GetConstructionGoodsExpenses|D-]#!#!#! [concept_budget_construction_goods]"
 EXPENSES_INTEREST: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],INTEREST_EXPENSE_TOOLTIP,InterestExpenseTooltip #N @money!-[GetPlayer.GetInterestPayment|D-]#!#!#! [concept_budget_interest]"
 ECONOMY_HEALTH: "Eure Wirtschaft ist $HEALTH$\n$TAB$$INCOME_RATIO$\n$TAB$$CREDIT_RATIO$ (Schulden: #variable @money!$CURRENT_LOAN_BALANCE|D$#!)"
 HEALTH_GOOD: "[Concept('concept_economy_health', '$concept_economy_health_healthy_short$')]"
 HEALTH_BAD: "[Concept('concept_economy_health', '$concept_economy_health_unhealthy_short$')]"
 INCOME_RATIO_GOOD: "@green_checkmark! Die wöchentlichen Einnahmen in Höhe von #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_INCOME_BREAKDOWN,TotalIncomeTooltip #variable @money!$INCOME|+K$#!#!#! übersteigen die Fixkosten in Höhe von #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_EXPENSES_BREAKDOWN,TotalExpensesTooltip #variable @money!$EXPENSES|-K$#!#!#!"
 INCOME_RATIO_BAD: "@red_cross! Die Fixkosten in Höhe von #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_EXPENSES_BREAKDOWN,TotalExpensesTooltip #variable @money!$EXPENSES|-K$#!#!#! übersteigen die wöchentlichen Einnahmen in Höhe von #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_INCOME_BREAKDOWN,TotalIncomeTooltip #variable @money!$INCOME|+K$#!#!#!"
 CREDIT_RATIO_GOOD: "@green_checkmark! Verwendete Kredite: #variable #P $CREDITRATIO|%1$#!#!"
 CREDIT_RATIO_BAD: "@red_cross! Verwendete Kredite: #variable #N $CREDITRATIO|%1$#!#!"
 TAX_INCOME: "Steuereinnahmen"
 DECLARE_BANKRUPTCY: "[concept_bankruptcy] erklären"
 DECLARE_BANKRUPTCY_TOOLTIP: "[Country.GetDeclareBankruptcyDesc]"
 DECLARE_BANKRUPTCY_NOT_IN_DEFAULT: "Wir sind nicht [concept_default]"
 DECLARE_BANKRUPTCY_DESC: "#header [concept_bankruptcy] erklären#!\n$TOOLTIP_DELIMITER$\nDen [concept_bankruptcy] zu erklären, wird unsere [concept_loans] tilgen und [GetPlayer.GetAltName('AKK')] aus der [Concept('concept_default', 'Zahlungsunfähigkeit')] herausführen, jedoch auch schwerwiegende innenpolitische Konsequenzen für unser [concept_country] haben:\n$EFFECTS$[ConcatIfNeitherEmpty('\n\nAufgrund von Folgendem nicht möglich:\n','$ERRORS$')]"
 DECLARE_BANKRUPTCY_CONFIRM_DESC: "#header [concept_bankruptcy] erklären#!\n\nEin Fortfahren wird drastische Auswirkungen auf [COUNTRY.GetAltName('AKK')] und beachtliche wirtschaftliche und politische Folgen für #v [GetDefine('NEconomy','DECLARE_BANKRUPTCY_PENALTY_DURATION_YEARS')]#! Jahre haben.\n\nZusätzliche Auswirkungen:\n #indent_newline:3 #v [Country.GetRadicalizationFromBankruptcy|D=-]#! [Concept('concept_pop', '$concept_pops$')] werden [concept_radical|l]\n@money! #v [Country.GetPredictedBalanceFromBankruptcy|D+=]#! wird unser neuer Saldo#! [AddLocalizationIf(LessThan_CFixedPoint(Country.GetPredictedBalanceFromBankruptcy, '(CFixedPoint)0'), 'DECLARE_BANKRUPTCY_NEGATIVE_BALANCE_WARNING')]"
 DECLARE_BANKRUPTCY_NEGATIVE_BALANCE_WARNING: "\n\n@warning! [Country.GetAdjective|U]er Saldo wird auch nach einer [Concept('concept_bankruptcy', 'Bankrotterklärung')] negativ sein: [COUNTRY.GetAltName('NOM')|U] ist dann wieder [concept_default], wenn keine drastischen Maßnahmen ergriffen werden."
 DECLARE_BANKRUPTCY_CONSTRUCTION_QUEUE_EFFECTS: "Alle Projekte in der [concept_construction_queue] werden abgebrochen"
 DECLARE_BANKRUPTCY_BUILDING_EFFECTS: "#v $AMOUNT$ [Concept('concept_building', '$concept_buildings$')]#! verlieren ihre gesamten [concept_cash_reserves]"
 DECLARE_BANKRUPTCY_POP_EFFECTS: "#v $AMOUNT|*$#! [Concept('concept_pop', '$concept_pops$')] werden [Concept('concept_radical', 'radikaler')]"
 DECLARE_BANKRUPTCY_MODIFIER_EFFECTS: "[GetPlayer.GetAltName('NOM')|U] erhält außerdem die folgenden zusätzlichen Strafen, die im Lauf von #v [GetDefine( 'NEconomy', 'DECLARE_BANKRUPTCY_PENALTY_DURATION_YEARS' )]#! Jahren abklingen:\n$EFFECTS$"
 CREDIT_PROGRESS: "#header Kredit#!\nDerzeitige [concept_principal]: #variable @money![GetPlayer.GetPrincipal|K]#! ([AccessPlayer.PredictWeeklyBalanceWithEconomyHealthHint])\nRegierung schuldet sich selbst #variable @money! [AccessPlayer.GetGovernmentSelfDebt|D]#! (#variable [AccessPlayer.GetGovernmentSelfDebtFraction|%]#! der Gesamtschulden)\n$TOOLTIP_DELIMITER$\nMaximaler Kredit: #variable @money![GetPlayer.GetMaxCredit|K]#!\n"
 GOLD_PROGRESS: "#header [concept_gold_reserves]#!\nDerzeitige Reserve: #variable @money![GetPlayer.GetGoldReserves|K]#! ([AccessPlayer.PredictWeeklyBalanceWithEconomyHealthHint])\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetGoldReserveLimitDesc]"
 #Reserves Limit: #variable @money![GetPlayer.GetGoldReserveLimit|K]#!"
 GOLD_RESERVE_DIMINISHING_RETURNS: "Übermäßig viel Gold zu lagern, führt zu einem Anstieg des Goldpreises. Mit einem Saldo in Höhe von #variable @money!$MONEY|D$#! kann man nur den Gegenwert von Gold im Wert von #variable @money!$VAL|D$#! kaufen."
 WAGES: "Gehälter"
 SLAVE_UPKEEP: "Sklavenunterhalt"
 PARTICIPANTS: "Teilnehmer"
 IMPORTERS: "Importeure"
 EXPORTERS: "Exporteure"
 IN_THIS_MARKET: "#title [Concept('concept_country', '$concept_countries$')] in diesem $concept_market$:#!"
 PRODUCTION_METHODS: "#title [Concept('concept_production_method', '$concept_production_methods$')]#!"
 PROCESS: "Fortschritt"
 PROCESS_TOOLTIP_HEADER: "$PROCESS$:"
 PORTFOLIO_TOOLTIP_HEADER: "Liegenschaftenportfolio:"
 WORLD_MARKET_IMPORTERS_TOOLTIP: "#header [Market.GetName|U]#!\nImportiert [Market.GetTotalImportedAmount|Dv] vom [concept_world_market]"
 WORLD_MARKET_EXPORTERS_TOOLTIP: "#header [Market.GetName|U]#!\nExportiert [Market.GetTotalExportedAmount|Dv] zum [concept_world_market]"
 IMPORTS: "Importe"
 EXPORTS: "Exporte"
 IMPORTS_TOTAL: "Import-Einnahmen: @money![State.GetTotalImportRevenue|+K]"
 EXPORTS_TOTAL: "Export-Einnahmen: @money![State.GetTotalExportRevenue|+K]"
 CONCEPT_IMPORT: "[Concept('concept_trade','$concept_import$')]"
 CONCEPT_EXPORT: "[Concept('concept_trade','$concept_export$')]"
 CONCEPT_IMPORTS: "[Concept('concept_trade','$concept_imports$')]"
 CONCEPT_EXPORTS: "[Concept('concept_trade','$concept_exports$')]"
 IMPORT_PRICE: "[concept_import_price]"
 EXPORT_PRICE: "[concept_export_price]"
 STATE_IMPORT_EXPORT_GOOD_TOOLTIP: "#header $GOODS_ICON$[Nbsp]$GOODS_NAME$ $DIRECTION_WITH_CONCEPT$#!\n$AMOUNT|0v$ in „[STATE.GetName|U]“\n@money!$TOTAL_PROFIT|+Kv$ Profit\n$TOOLTIP_DELIMITER$\n#tooltippable;tooltip:$ADVANTAGE_BREAKDOWN$ $ADVANTAGE|=+%0$#! [Concept('concept_trade_advantage','$concept_relative_trade_advantage$')]\n#tooltippable;tooltip:$TRADE_PRICE_BREAKDOWN$ @money!$TRADE_PRICE|1v$#! $TRADE_PRICE_ICON$ $TRADE_PRICE_CONCEPT$\n#tooltippable;tooltip:$LOCAL_PRICE_BREAKDOWN$ @money!$LOCAL_PRICE|1v$#! $LOCAL_PRICE_ICON$ [concept_local_price]\n#tooltippable;tooltip:$TARIFF_RATE_BREAKDOWN$ $TARIFF_RATE|1v%$#! [Concept('concept_tariffs','$concept_tariff$')]-Rate\n#tooltippable;tooltip:$SUBVENTION_RATE_BREAKDOWN$ $SUBVENTION_RATE|1v%$#! [Concept('concept_subventions','$concept_subvention$s')]-Rate\n\n@money!$PROFIT_PER_TRADE_CAPACITY|+D$ Profit für jede [concept_trade_capacity] (@money!$BASE_REVENUE|+1v$ an Preisunterschied plus @money!$SUBVENTION|+1v$ an $concept_subventions$ minus @money!$TARIFF|-1v$ an $concept_tariffs$, multipliziert mit einer [concept_traded_quantity] von $TRADED_QUANTITY|0v$)"
 STATE_IMPORT_TARIFF_RATE_TOOLTIP: "#header $GOODS_ICON$[Nbsp]$GOODS_NAME$ [Concept('concept_trade','$concept_import$')]-[concept_tariffs]#!\n$TARIFF_RATE|1v%$ in „[STATE.GetName|U]“\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 STATE_EXPORT_TARIFF_RATE_TOOLTIP: "#header $GOODS_ICON$[Nbsp]$GOODS_NAME$ [Concept('concept_trade','$concept_export$')]-[concept_tariffs]#!\n$TARIFF_RATE|1v%$ in „[STATE.GetName|U]“\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 STATE_IMPORT_SUBVENTION_RATE_TOOLTIP: "#header $GOODS_ICON$[Nbsp]$GOODS_NAME$ [Concept('concept_trade','$concept_import$')]-[concept_subventions]#!\n$SUBVENTION_RATE|1v%$ in „[STATE.GetName|U]“\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 STATE_EXPORT_SUBVENTION_RATE_TOOLTIP: "#header $GOODS_ICON$[Nbsp]$GOODS_NAME$ [Concept('concept_trade','$concept_export$')]-[concept_subventions]#!\n$SUBVENTION_RATE|1v%$ in „[STATE.GetName|U]“\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 STATE_IMPORT_PRICE_TOOLTIP: "#header $GOODS_ICON$[Nbsp]$GOODS_NAME$ [concept_import_price]#!\n@money!$PRICE|v1$ $PRICE_ICON$ in „[STATE.GetName|U]“\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 STATE_EXPORT_PRICE_TOOLTIP: "#header $GOODS_ICON$[Nbsp]$GOODS_NAME$ [concept_export_price]#!\n@money!$PRICE|v1$ $PRICE_ICON$ in „[STATE.GetName|U]“\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 STATE_IMPORT_ADVANTAGE_TOOLTIP: "#header $GOODS_ICON$[Nbsp]$GOODS_NAME$ [concept_trade_advantage] für [Concept('concept_trade','$concept_imports$')]#!\n$ADVANTAGE|vD$ in „[STATE.GetName|U]“\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 STATE_EXPORT_ADVANTAGE_TOOLTIP: "#header $GOODS_ICON$[Nbsp]$GOODS_NAME$ [concept_trade_advantage] für [Concept('concept_trade','$concept_exports$')]#!\n$ADVANTAGE|vD$ in „[STATE.GetName|U]“\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 STATE_RELATIVE_IMPORT_ADVANTAGE_TOOLTIP: "#header $GOODS_ICON$[Nbsp]„$GOODS_NAME$“ [Concept('concept_trade_advantage','$concept_relative_trade_advantage$')] für [Concept('concept_trade','$concept_imports$')]#!\n$RELATIVE_ADVANTAGE|=+0%$ in „[STATE.GetName|U]“\n$PRICE_IMPACT|=-0%$ [concept_import_price]\n$TOOLTIP_DELIMITER$\n$BASE_ADVANTAGE|0v$ Grund-$concept_trade_advantage_short$ aufgrund von:\n$BASE_ADVANTAGE_DETAILS$\n\n$DETAILS$"
 STATE_RELATIVE_EXPORT_ADVANTAGE_TOOLTIP: "#header $GOODS_ICON$[Nbsp]„$GOODS_NAME$“ [Concept('concept_trade_advantage','$concept_relative_trade_advantage$')] für [Concept('concept_trade','$concept_exports$')]#!\n$RELATIVE_ADVANTAGE|=+0%$ in „[STATE.GetName|U]“\n$PRICE_IMPACT|=+0%$ [concept_export_price]\n$TOOLTIP_DELIMITER$\n$BASE_ADVANTAGE|0v$ Grund-$concept_trade_advantage_short$ aufgrund von:\n$BASE_ADVANTAGE_DETAILS$\n\n$DETAILS$"
 MARKET_RELATIVE_IMPORT_ADVANTAGE_TOOLTIP: "#header $GOODS_ICON$[Nbsp]„$GOODS_NAME$“ [Concept('concept_trade_advantage','$concept_relative_trade_advantage$')] für [Concept('concept_trade','$concept_imports$')]#!\n$RELATIVE_ADVANTAGE|=+0%$ in „[MARKET.GetName]“\n$PRICE_IMPACT|=-0%$ [concept_import_price]\n$TOOLTIP_DELIMITER$\n$AVERAGE_ADVANTAGE|0v$ durchschnittlicher $concept_trade_advantage_short$ in $NUM_STATES|v$ [Concept('concept_state','$concept_states$')] mit $TOTAL_TRADE_CAPACITY|0v$ Gesamt-[concept_trade_capacity]:\n$STATE_DETAILS$"
 MARKET_RELATIVE_EXPORT_ADVANTAGE_TOOLTIP: "#header $GOODS_ICON$[Nbsp]„$GOODS_NAME$“ [Concept('concept_trade_advantage','$concept_relative_trade_advantage$')] for [Concept('concept_trade','$concept_exports$')]#!\n$RELATIVE_ADVANTAGE|=+0%$ in „[MARKET.GetName]“\n$PRICE_IMPACT|=+0%$ [concept_export_price]\n$TOOLTIP_DELIMITER$\n$AVERAGE_ADVANTAGE|0v$ durchschnittlicher $concept_trade_advantage_short$ in $NUM_STATES|v$ [Concept('concept_state','$concept_states$')] mit $TOTAL_TRADE_CAPACITY|0v$ Gesamt-[concept_trade_capacity]:\n$STATE_DETAILS$"
 MARKET_RELATIVE_ADVANTAGE_STATE_ENTRY: "#tooltippable;tooltip:$BREAKDOWN_TAG$ $ADVANTAGE|0v$#! ($RELATIVE_ADVANTAGE|=+0%$) für „[STATE.GetName]“ ($TRADE_CAPACITY|v0$ $concept_trade_capacity$)"
 WORLD_MARKET_STATE_EXPORT_ADVANTAGE: "#header [Goods.GetTextIcon][Nbsp][Goods.GetName] [Concept('concept_trade','$concept_export$')]-[Concept('concept_trade_advantage','$concept_trade_advantage_short$')]#!\n$BASE_VALUE|vD$ pro exportierter Einheit für „[STATE.GetName|U]“\n$VALUE|vD$ für $VOLUME|v0$ Einheiten\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 WORLD_MARKET_STATE_IMPORT_ADVANTAGE: "#header [Goods.GetTextIcon][Nbsp][Goods.GetName] [Concept('concept_trade','$concept_import$')]-[Concept('concept_trade_advantage','$concept_trade_advantage_short$')]#!\n$BASE_VALUE|vD$ pro importierter Einheit für „[STATE.GetName|U]“\n$VALUE|vD$ für $VOLUME|v0$ Einheiten\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 WORLD_MARKET_STATE_PRICE_WORLD_MARKET_PRICE: "@money!$PRICE|v1$ [concept_world_market_price]"
 WORLD_MARKET_STATE_ADVANTAGE_IMPORT_PRICE_EFFECT: "$PRICE_IMPACT|=-0%$ [concept_import_price] durch $concept_trade_advantage_short$"
 WORLD_MARKET_STATE_ADVANTAGE_EXPORT_PRICE_EFFECT: "$PRICE_IMPACT|=+0%$ [concept_export_price] durch $concept_trade_advantage_short$"
 WORLD_MARKET_STATE_PRICE_ADVANTAGE_MULTIPLIER: "$RELATIVE_ADVANTAGE|=+%0$ [Concept('concept_trade_advantage','$concept_relative_trade_advantage$')] durch $ADVANTAGE_SHARE|%v$ (#tooltippable;tooltip:$ADVANTAGE_BREAKDOWN_TAG$ $ADVANTAGE|vD$#!/#tooltippable;tooltip:$TOTAL_ADVANTAGE_BREAKDOWN_TAG$ $TOTAL_ADVANTAGE|vD$#!) des Welt-$concept_trade_advantage_short$s verglichen mit $VOLUME_SHARE|%v$ ($VOLUME|vD$/$TOTAL_VOLUME|vD$) des Welthandelsvolumens"
 WORLD_MARKET_STATE_PRICE_ADVANTAGE_NO_COMPETITORS: "Keine Preisauswirkung durch [concept_trade_advantage] aufgrund fehlender Wettbewerber"
 WORLD_MARKET_TOTAL_TRADE_ADVANTAGE_ENTRY: "#tooltippable;tooltip:$BREAKDOWN_TAG$ $ADVANTAGE|vD$#! für „[STATE.GetName]“ ($RELATIVE_ADVANTAGE|=+%0$ $concept_relative_trade_advantage$)"
 WORLD_MARKET_TOTAL_TRADE_ADVANTAGE_BREAKDOWN: "#header Weltweiter [concept_trade_advantage]#!\n$TOTAL_ADVANTAGE|vD$ für [GOODS.GetTextIcon][Nbsp]„[GOODS.GetName]“ ($DIRECTION$)\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADVANTAGE_FROM_CAPACITY: "$VAL|0%=+$ durch $CAPACITY|v$ [concept_trade_capacity] ($MAX|0%=+$ maximal)"
 ADVANTAGE_FROM_WORLD_MARKET_ACCESS: "#n x$VAL|2$#! aufgrund von [concept_world_market_access]"
 ADVANTAGE_FROM_OPPOSITE_DIRECTION_TRADE: "#n x$VAL|2$#! aufgrund von [concept_trade] in Gegenrichtung auf demselben [concept_market]"
 ADVANTAGE_FROM_POWER_BLOC: "#tooltippable;tooltip:$BREAKDOWN_TAG$ $VAL|D=+v$#! durch [concept_power_bloc]"
 ADVANTAGE_FROM_POWER_BLOC_BREAKDOWN: "#header [concept_trade_advantage] durch [concept_power_bloc]#!\n$VAL|D=+v$ in „$STATE_NAME$“\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADVANTAGE_FROM_POWER_BLOC_ENTRY: "$VAL|D=+v$, weil [TARGET_COUNTRY.GetAltName('NOM')] Teil von „[TARGET_COUNTRY.GetPowerBloc.GetName]“ ist"
 ADVANTAGE_FROM_RELIGION: "#tooltippable;tooltip:$BREAKDOWN_TAG$ $VAL|D=+v$#! durch [concept_religion]"
 ADVANTAGE_FROM_RELIGION_BREAKDOWN: "#header [concept_trade_advantage] durch [concept_religion]#!\n$VAL|D=+v$ in „$STATE_NAME$“\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADVANTAGE_FROM_RELIGION_ENTRY: "$VAL|D=+v$, weil [TARGET_COUNTRY.GetAltName('NOM')] [TARGET_COUNTRY.GetStateReligion.GetName|l] ist"
 ADVANTAGE_FROM_TRADE_AGREEMENTS: "#tooltippable;tooltip:$BREAKDOWN_TAG$ $VAL|D=+v$#! durch [Concept('concept_trade_privilege','$concept_trade_privileges$')]"
 ADVANTAGE_FROM_TRADE_AGREEMENTS_BREAKDOWN: "#header [concept_trade_advantage] durch [Concept('concept_trade_privilege','$concept_trade_privileges$')]#!\n$VAL|D=+v$ in $STATE_NAME$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADVANTAGE_FROM_TRADE_AGREEMENTS_ENTRY: "$VAL|D=+v$ durch [COUNTRY.GetAdjectiveNoFlag|l]-[TARGET_COUNTRY.GetAdjectiveNoFlag|l]es [concept_trade_privilege]"
 ADVANTAGE_FROM_TREATY_PORTS: "#tooltippable;tooltip:$BREAKDOWN_TAG$ $VAL|D=+v$#! durch [Concept('concept_treaty_port','$concept_treaty_ports$')]"
 ADVANTAGE_FROM_TREATY_PORTS_BREAKDOWN: "#header [concept_trade_advantage] durch [Concept('concept_treaty_port','$concept_treaty_ports$')]#!\n$VAL|D=+v$ in $STATE_NAME$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADVANTAGE_FROM_TREATY_PORT_ENTRY: "$VAL|D=+v$ durch [concept_trade_privilege] im [COUNTRY.GetAdjectiveNoFlag|l]en [concept_treaty_port] in „[TARGET_COUNTRY.GetMarket.GetName]“"
 ADVANTAGE_FROM_LACK_OF_INTERESTS: "#tooltippable;tooltip:$BREAKDOWN_TAG$ $VAL|D=+v$#! durch fehlendes [Concept('concept_interest','$concept_interests$')] auf relevanten [Concept('concept_market','$concept_markets$n')] ($RELEVANT_MARKETS_FLAGS$)"
 ADVANTAGE_FROM_LACK_OF_INTEREST_FLAG: "[MARKET.GetOwner.GetFlagTextIcon] "
 ADVANTAGE_FROM_LACK_OF_INTERESTS_BREAKDOWN: "#header [concept_trade_advantage] durch fehlendes [Concept('concept_interest','$concept_interests$')]#!\n$VAL|D=+v$ in „$STATE_NAME$“\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADVANTAGE_FROM_LACK_OF_INTERESTS_ENTRY: "$VAL|D=+v$ durch fehlendes [concept_interest] in [MARKET.GetOwner.GetFlagTextIcon] [MARKET.GetName|U]"
 ADVANTAGE_FROM_AT_WAR: "#tooltippable;tooltip:$BREAKDOWN_TAG$ $VAL|D=+v$#! durch [Concept('concept_war','$concept_wars$')]"
 ADVANTAGE_FROM_AT_WAR_BREAKDOWN: "#header [concept_trade_advantage] durch [Concept('concept_war','$concept_wars$')]#!\n$VAL|D=+v$ in „$STATE_NAME$“\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADVANTAGE_FROM_AT_WAR_ENTRY: "$VAL|D=+v$ durch Krieg mit [MARKET.GetOwner.GetAltName('DAT')] ([MARKET.GetName|U])"
 ADVANTAGE_FROM_EMBARGO: "#tooltippable;tooltip:$BREAKDOWN_TAG$ $VAL|D=+v$#! durch [Concept('concept_embargo','$concept_embargoes$')]"
 ADVANTAGE_FROM_EMBARGO_BREAKDOWN: "#header [concept_trade_advantage] durch [Concept('concept_embargo','$concept_embargoes$')]#!\n$VAL|D=+v$ in „$STATE_NAME$“\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADVANTAGE_FROM_EMBARGO_ENTRY: "$VAL|D=+v$ durch [MARKET.GetOwner.GetAdjective|l]es $concept_embargo$ ([MARKET.GetName|U])"
 ADVANTAGE_MARKET_AREA_GOODS_PRODUCTION: "$VAL|D=+v$ durch $AMOUNT|vD0$ [GOODS.GetTextIcon][Nbsp]„[GOODS.GetName]“-Produktion im [concept_market_area] ($FRACTION|v2%$ der Weltproduktion)"
 ADVANTAGE_MARKET_GOODS_TRADE_CHARTER: "$VAL|D=+v$ durch $AMOUNT|vD0$ [GOODS.GetTextIcon][Nbsp]„[GOODS.GetName]“-Produktion im [concept_market_area] durch Kompanien, die [GetCompanyCharterType('trade_charter').GetName] haben ($FRACTION|v2%$ der Gebietsproduktion)"
 ADVANTAGE_ENTRY_IMPORT_SUFFIX: "deckt $TRADE_FRACTION|%0v$ der Importe"
 ADVANTAGE_ENTRY_EXPORT_SUFFIX: "deckt $TRADE_FRACTION|%0v$ der Exporte"
 ADVANTAGE_MARKET_PRESTIGE_GOODS: "$VAL|D=v$ durch #tooltippable;tooltip:$BREAKDOWN_TAG$ $AMOUNT|vD0$#![Concept('concept_prestige_good', 'Prestigewaren')]-Produktion von [GOODS.GetTextIcon][Nbsp] „[GOODS.GetName]“ im [concept_market_area] ($FRACTION|v2%$ der Weltproduktion)"
 ADVANTAGE_MARKET_PRESTIGE_GOODS_BREAKDOWN: "$VAL|D=v$ durch [GOODS.GetTextIcon][Nbsp]„[GOODS.GetName]“-Prestigewaren-Produktion#!\n$VAL|0v$ in „[MARKET.GetName|U]“\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADVANTAGE_MARKET_PRESTIGE_GOODS_ENTRY: "$VAL|0v$ [GOODS.GetTextIcon][Nbsp][GOODS.GetName]"
 STATE_GOODS_IMPORT_ADVANTAGE: "[Goods.GetStateRelativeImportAdvantage|=+%0] [Concept('concept_trade','$concept_import$')]-[concept_trade_advantage]"
 STATE_GOODS_EXPORT_ADVANTAGE: "[Goods.GetStateRelativeExportAdvantage|=+%0] [Concept('concept_trade','$concept_export$')]-[concept_trade_advantage]"
 YOUR_IMPORT_ROUTE_HEADER: "#title Eigene Importhandelsrouten#!"
 YOUR_EXPORT_ROUTE_HEADER: "#title Eigene Exporthandelsrouten#!"
 IMPORT_ROUTE_HEADER: "#title Eingehende Handelsrouten#!"
 EXPORT_ROUTE_HEADER: "#title Ausgehende Handelsrouten#!"
 POP_LIST_TOTAL_TOOLTIP: "#header Bevölkerung insgesamt#!\nWert: [PopListItem.GetTotalPopSize|vD]"
 POP_LIST_TOTAL_WORKFORCE_TOOLTIP: "#header Beschäftigte insgesamt#!\nWert: [PopListItem.GetWorkingAdultsPopSize|vD]"
 TO: "nach"
 FROM: "von"
 IMPORT: "Import"
 EXPORT: "Export"
 SUPPLY_NETWORK_EMPTY_STATE: "[Country.GetAltName('NOM')|U] hat kein [concept_supply_network]"
 TRADE_AMOUNT_DELTA: "(#v $VAL|+=D$#!)"
 same_import_export_market: "Es ist nicht möglich, in denselben Markt zu importieren und aus ihm zu exportieren"
 MARKET_NAME_WITH_STATUS_ISOLATED: "#bold [MARKET.GetNameNoFormatting]#! #maximum (Isoliert)#!"
 MARKET_NAME_WITH_STATUS: "#bold [MARKET.GetNameNoFormatting]#!"
 PEACE_ACCEPTANCE_SUMMARY: "#title Annahmewert: #bold $VAL|+$#!#!"
 CAPITULATION_DESIRE_SUMMARY: "[concept_capitulation_desire] [Country.GetAltName('VON')]\nDerzeit: #value $VAL|+=$#!\n$TOOLTIP_DELIMITER$\n#title Aufgrund von:#!"
 PEACE_ACCEPTANCE_BASE_VALUE: "Grundwert: #bold $VAL|=+$#!"
 PEACE_ACCEPTANCE_WAR_SUPPORT: "[concept_war_support]: #bold $VAL|=+$#!"
 PEACE_ACCEPTANCE_WAR_LEADER: "[Country.GetAltName('NOM')|U] ist [concept_war_leader]: #bold $VAL|=+$#!"
 PEACE_ACCEPTANCE_WHITE_PEACE: "Weißer Friede: #bold $VAL|=+$#!"
 PEACE_ACCEPTANCE_OWN_WAR_GOALS: "[Country.GetAdjective|U]e [Concept('concept_war_goal', '$concept_war_goals$')], die verloren gingen: #bold $VAL|=+$#!"
 PEACE_ACCEPTANCE_ENEMY_WAR_GOALS_ON_SELF: "[Concept('concept_war_goal', '$concept_war_goals$')], die bei [Country.GetAltName('DAT')] angefochten werden: #bold $VAL|=+$#!"
 MEMBERS_SUMMARY_ITEM: "[InterestGroup.GetTextIcon]"
 MEMBERS_SUMMARY_FORMAT: "($MEMBERS_LIST$)"
 PEACE_ACCEPTANCE_PRESSED_WARGOAL: "[WAR_GOAL.GetName] ist Teil des [Concept('concept_peace_deal', 'Friedensvertrags')]: $VAL|=+$"
 PEACE_ACCEPTANCE_ACHIEVABLE_WARGOAL: "[WAR_GOAL.GetName] ist durch Kapitulation zu erreichen: $VAL|=+$"
 PEACE_ACCEPTANCE_ACHIEVABLE_PRESSED_WARGOAL: "[WAR_GOAL.GetName] ist Teil des [Concept('concept_peace_deal', 'Friedensvertrags')]: $VAL|=+$ (Effekt wird reduziert, weil das [concept_war_goal] bei einer Kapitulation wahrscheinlich verloren geht)"
 PEACE_ACCEPTANCE_TOTAL_VICTORY: "Sieg auf ganzer Linie: #bold $VAL|=+$#!"
 UNIFICATION_SUPPORT_ATTITUDE_SCORE: "#v [Country.GetAttitudeTowards(COUNTRY_THIRD_PARTY.Self).GetName]e#! Haltung: #v $VALUE$#!"
 UNIFICATION_SUPPORT_RELATIONS_SCORE: "#v [Country.GetRelationsWithDesc(COUNTRY_THIRD_PARTY.Self)]e#! Beziehungen: #v $VALUE$#!"
 UNIFICATION_SUPPORT_RANK_SCORE: "[Country.GetAltName('NOM')|U] ist #v [COUNTRY.GetRank]#!: #v $VALUE$#!"
 UNIFICATION_SUPPORT_POWER_BLOC_SCORE: "[Country.GetAltName('NOM')|U] und [TARGET_COUNTRY.GetAltName('NOM')] sind [Concept('concept_power_bloc_member','$concept_power_bloc_members$')]: #v $VAL$#!"
 UNIFICATION_SUPPORT_COHESION_SCORE: "„[PowerBloc.GetName]“ hat [concept_power_bloc_cohesion]: #v $VAL$#! ([CohesionLevel.GetName])"
 UNIFICATION_SUPPORT_FOR_CANDIDATES_ENTRY: "[Country.GetAltName('NOM')|U]: #tooltippable #tooltip:$BREAKDOWN_TAG$ #v $VALUE$#!#!#!"
 UNIFICATION_SUPPORT_FOR_CANDIDATES_DESC: "Unterstützung des [CountryFormation.GetAdjective]en [Concept('concept_unification_candidate', '$concept_unification_candidates$')]:\n$DETAILS$"
 UNIFICATION_CANDIDATE_SUPPORT_BREAKDOWN: "#header [Country.GetAdjectiveNoFormatting]e Unterstützung für [COUNTRY_THIRD_PARTY.GetAltName('AKK')] als [concept_unification_candidate] für [CountryFormation.GetName]: #v $VALUE$#!#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 NO_VALID_WAR_GOALS: "Keine gültigen [Concept('concept_war_goal', '$concept_war_goals$')]"
 WARGOAL_SUBHEADER_HOLDER_AND_TARGET: "[WarGoal.GetHolder.GetAltName('NOM')|U] zielt ab auf [WarGoal.GetTarget.GetAltName('AKK')]"
 WARGOAL_INFAMY_DESC: "@infamy! #tooltippable #tooltip:$BREAKDOWN_TAG$ [WAR_GOAL.GetInfamyAmount|-1]#!#! [concept_infamy] für [WAR_GOAL.GetCreator.GetAltName('AKK')]"
 WARGOAL_POTENTIAL_INFAMY_DESC: "@infamy! #tooltippable #tooltip:$BREAKDOWN_TAG$ [WAR_GOAL.GetInfamyAmount|-1]#!#! [concept_infamy] für [WAR_GOAL.GetCreator.GetAltName('AKK')]"
 BASE_WARGOAL_MANEUVERS_COST_DESC: "@maneuver! #tooltippable #tooltip:$BREAKDOWN_TAG$ [WAR_GOAL.CalcBaseManeuversCost|v]#!#! [Concept('concept_maneuver', '$concept_maneuvers$')]"
 ADD_WARGOAL_MANEUVERS_COST_DESC: "@maneuver! #tooltippable #tooltip:$BREAKDOWN_TAG$ [WAR_GOAL.CalcManeuversCostToAdd|v]#!#! [Concept('concept_maneuver', '$concept_maneuvers$')]"
 WARGOAL_IS_INVALID: "#N Ungültig#! und kann derzeit nicht [WarGoal.GetHolder.GetAltName('VON')] angefochten werden:#!#indent_newline:3 \n$ERRORS$#!"
 WARGOAL_IS_EXECUTED: "Wurde gegen [WAR_GOAL.GetWarGoalStakeholder.GetAltName('AKK')] #b durchgesetzt#!"
 WARGOAL_IS_PRESSED: "Wird derzeit durch [WarGoal.GetHolder.GetAltName('AKK')] im Krieg ([WAR_GOAL.GetWar.GetName]) #P angefochten#! und wird durchgesetzt, wenn alle beteiligten Länder den derzeitigen [concept_peace_deal] akzeptieren"
 WARGOAL_IS_NOT_PRESSED: "Wird derzeit #N nicht angefochten#! durch [WarGoal.GetHolder.GetAltName('AKK')] im Krieg ([WAR_GOAL.GetWar.GetName]) und wird daher auch #b nicht#! durchgesetzt, wenn alle beteiligten Ländern den derzeitigen [concept_peace_deal] akzeptieren"
 OBLIGATION_MANEUVERS_COST: "@maneuvers![GetDefine( 'NDiplomacy', 'SWAY_OFFER_OWE_OBLIGATION_MANEUVERS_COST' )|v]"
 OBLIGATION_MANEUVERS_COST_TOOLTIP: "#header [concept_obligation]#!\n@maneuvers![GetDefine( 'NDiplomacy', 'SWAY_OFFER_OWE_OBLIGATION_MANEUVERS_COST' )|v][Concept('concept_maneuver', '$concept_maneuvers$')]-Kosten: \nWir haben [DiplomaticPlay.GetNumManeuversRemaining(GetPlayer.Self)|v] [Concept('concept_maneuver', '$concept_maneuvers$')] übrig"
 OBLIGATION_MANEUVERS_DESC: "Das Anbieten einer [concept_obligation] kostet immer @maneuvers![GetDefine( 'NDiplomacy', 'SWAY_OFFER_OWE_OBLIGATION_MANEUVERS_COST' )|v] [Concept('concept_maneuver', '$concept_maneuvers$')]"
 OBLIGATION_CALL_IN_MANEUVERS_COST: "@maneuvers![GetDefine( 'NDiplomacy', 'SWAY_OFFER_CALL_IN_OBLIGATION_MANEUVERS_COST' )|v]"
 OBLIGATION_CALL_IN_MANEUVERS_COST_TOOLTIP: "#header [concept_obligation]#!\n@maneuvers![GetDefine( 'NDiplomacy', 'SWAY_OFFER_CALL_IN_OBLIGATION_MANEUVERS_COST' )|v][Concept('concept_maneuver', '$concept_maneuvers$')]-Kosten: \nWir haben [DiplomaticPlay.GetNumManeuversRemaining(GetPlayer.Self)|v] [Concept('concept_maneuver', '$concept_maneuvers$')] übrig"
 OBLIGATION_CALL_IN_MANEUVERS_DESC: "Eine [concept_obligation] einzufordern, kostet immer @maneuvers![GetDefine( 'NDiplomacy', 'SWAY_OFFER_OWE_OBLIGATION_MANEUVERS_COST' )|v] [Concept('concept_maneuver', '$concept_maneuvers$')]"
 SWAY_OFFER_MANEUVERS_DESC: "„$NAME|v$“ anzubieten, kostet immer @maneuvers!$COST|v$ [Concept('concept_maneuver', '$concept_maneuvers$')]"
 OFFER_SUPPORT: "Unterstützung verhandeln"
 ARTICLE_WARGOAL_SELECT_INPUT_TOOLTIP: "#instruction Klicken, um Zufuhr auszuwählen#!"
 ADD_ARTICLE_WARGOAL_MANEUVERS_COST_TOOLTIP: "#header [concept_war_goal]-[Concept('concept_maneuver', '$concept_maneuvers$')]-Kosten#!\n@maneuvers![ArticleDraft.GetWarGoalManeuversCost(GetPlayer.Self, WarGoal.GetDiplomaticPlay.Self)|v] für „[WarGoal.GetName|v]“\n$TOOLTIP_DELIMITER$\n[ArticleDraft.GetWarGoalManeuversCostDesc(GetPlayer.Self, WarGoal.GetDiplomaticPlay.Self)]"
 ADD_ARTICLE_WARGOAL_MANEUVERS_COST: "@maneuvers![ArticleDraft.GetWarGoalManeuversCost(GetPlayer.Self, WarGoal.GetDiplomaticPlay.Self)|v] [Concept('concept_maneuver', '$concept_maneuvers$')]"
 ADD_ARTICLE_WARGOAL_INFAMY_VALUE_TOOLTIP: "#header [concept_war_goal]-[concept_infamy]#!\n[ArticleDraft.GetWarGoalInfamyValue(GetPlayer.Self)|-1] für „[WarGoal.GetName|v]“\n$TOOLTIP_DELIMITER$\n[ArticleDraft.GetWarGoalInfamyValueDesc(GetPlayer.Self)]"
 ADD_ARTICLE_WARGOAL_INFAMY_VALUE: "@infamy![ArticleDraft.GetWarGoalInfamyValue(GetPlayer.Self)|-1] [concept_infamy]"
 ADD_ARTICLE_WARGOAL_BINDING_PERIOD: "Hätte eine [concept_binding_period] von #v [GetDefine('NDiplomacy', 'TREATY_DEFAULT_BINDING_DURATION_YEARS')] Jahren#!"
 SWAY_OFFER_MANEUVERS_COST_DESC: "#header @maneuvers!$COST|v$ [Concept('concept_maneuver', '$concept_maneuvers$')] für „$SWAY_OFFER|v$“#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADD_WARGOAL_MANEUVERS_COST: "@maneuvers![WarGoal.CalcManeuversCostToAdd|v]"
 ADD_WARGOAL_MANEUVERS_COST_WITH_LABEL: "@maneuvers![WarGoal.CalcManeuversCostToAdd|v] [Concept('concept_maneuver', '$concept_maneuvers$')]-Kosten"
 ADD_WARGOAL_MANEUVERS_COST_TOOLTIP: "#header [concept_war_goal]-[Concept('concept_maneuver', '$concept_maneuvers$')]-Kosten: [WarGoal.CalcManeuversCostToAdd|v]#!\n$TOOLTIP_DELIMITER$\n[WarGoal.GetManeuversCostToAddDesc]\nUns bleiben noch [WarGoal.GetDiplomaticPlay.GetNumManeuversRemaining(GetPlayer.Self)|v] [Concept('concept_maneuver', '$concept_maneuvers$')]"
 BASE_WARGOAL_MANEUVERS_COST: "@maneuvers![WarGoal.CalcBaseManeuversCost|v-]"
 BASE_WARGOAL_MANEUVERS_COST_TOOLTIP: "#header [concept_war_goal]-[Concept('concept_maneuver', '$concept_maneuvers$')]-Kosten: [WarGoal.CalcBaseManeuversCost|v]#!\n$TOOLTIP_DELIMITER$\n[WarGoal.GetBaseManeuversCostDesc]\nUns bleiben noch [WarGoal.GetDiplomaticPlay.GetNumManeuversRemaining(GetPlayer.Self)|v] [Concept('concept_maneuver', '$concept_maneuvers$')]"
 WARGOAL_INFAMY_TOOLTIP: "#header [concept_war_goal]-[concept_infamy]: [WarGoal.GetInfamyAmount|-1]#!\n$TOOLTIP_DELIMITER$\n[WarGoal.GetInfamyDesc]"
 WARGOAL_INFAMY: "@infamy! [WarGoal.GetInfamyAmount|-1]"
 WARGOAL_INFAMY_WITH_LABEL: "@infamy! [WarGoal.GetInfamyAmount|-1] [concept_infamy]"
 WARGOAL_WILL_ENACT_LAWS: "Die folgenden $concept_laws$ werden auferlegt: $LAWS$"
 WAR_SUPPORT_CANNOT_BE_NEGATIVE: "Diese [concept_war_support] kann nicht auf unter #v 0#! verringert werden, da die folgenden [Concept('concept_war_goal','$concept_war_goals$')] #b nicht#! von der gegnerischen Seite [Concept('concept_controlled_war_goal','$concept_controlled_war_goal_short$')|l] werden:"
 WAR_SUPPORT_CANNOT_BE_NEGATIVE_WAR_GOAL_ENTRY: "$EFFECT_LIST_BULLET$ #tooltippable;tooltip:[WAR_GOAL.GetTooltipTag],WARGOAL_CONTESTED_OR_NOT_DESC [WAR_GOAL.GetName]#!"
 DO_COUNTRY_ACCEPT_THIS_PEACE_DEAL: "Akzeptieren wir diesen [concept_peace_deal]?"
 DAYS_UNTIL_PEACE_DEAL_FAILS: "#v [War.GetDaysUntilPeaceDealFails] verbleibende Tage#!"
 CURRENTLY_REJECTING_PEACE_DEAL_TOOLTIP: "Wir lehnen derzeit den [concept_peace_deal] ab, der in #v [War.GetDaysUntilPeaceDealFails] Tagen#! vollständig abgelehnt werden wird, sofern wir unsere Meinung nicht ändern"
 REJECTING_PEACE_DEAL_TOOLTIP: "Wenn wir ablehnen, wird der [concept_peace_deal] in #v [War.GetDaysUntilPeaceDealFails] Tagen#! vollständig abgelehnt werden, sofern wir unsere Meinung nicht ändern"
 ACCEPTING_PEACE_DEAL_TOOLTIP: "Wenn wir akzeptieren, wird der [concept_war] „[War.GetName]“ beendet und die oben #b angefochtenen#! [Concept('concept_war_goal', '$concept_war_goals$')] durchgesetzt"
 CURRENTLY_ACCEPTING_PEACE_DEAL_TOOLTIP: "Wir haben den [concept_peace_deal] akzeptiert, wodurch der [concept_war] „[War.GetName]“ beendet wird und die oben #b angefochtenen#! [Concept('concept_war_goal', '$concept_war_goals$')] durchgesetzt werden"
 WAR_PANEL_CURRENT_PEACE_DEAL_PROPOSER: "Vorgeschlagen [WarPanel.GetWar.GetCountryProposingPeace.GetAltName('VON')]"
 WAR_PANEL_NO_CURRENT_PEACE_DEAL: "Es liegt kein [concept_peace_deal] vor"
 WAR_PANEL_CURRENT_PEACE_DEAL: "Derzeitiger [concept_peace_deal]"
 WAR_PANEL_OVERVIEW: "Übersicht"
 WAR_PANEL_PEACE: "Frieden schließen"
 WAR_PANEL_PEACE_TOOLTIP: "#header $WAR_PANEL_CURRENT_PEACE_DEAL$#!\n$TOOLTIP_DELIMITER$\n#title Angefochtene [Concept('concept_war_goal', '$concept_war_goals$')]:#!\n[War.GetPressedWarGoalsString]\n\n[ConcatIfNeitherEmpty(War.GetPeaceDealValidationDesc, '\n')][War.GetAcceptActivePeaceDealDesc]"
 WAR_PANEL_ALL_ACCEPT_PEACE: "@green_checkmark_box! #bold Alle Parteien akzeptieren diesen [concept_peace_deal].#!"
 WAR_PANEL_NONE_ACCEPT_PEACE: "@red_cross! #bold Keine Partei akzeptiert diesen [concept_peace_deal].#!"
 WAR_PANEL_ACCEPT_PEACE_ONE: "@green_checkmark_box! $COUNTRY$ #bold akzeptiert#! diesen [concept_peace_deal]."
 WAR_PANEL_ACCEPT_PEACE_LIST: "@green_checkmark_box! $LIST$ #bold akzeptieren#! diesen [concept_peace_deal]."
 WAR_PANEL_NOT_ACCEPT_PEACE_ONE: "@red_cross! $COUNTRY$ akzeptiert diesen [concept_peace_deal] #bold NICHT#!."
 WAR_PANEL_NOT_ACCEPT_PEACE_LIST: "@red_cross! $LIST$ akzeptieren diesen [concept_peace_deal] #bold NICHT#!."
 WAR_PANEL_LIKELY_ACCEPT_PEACE_ONE: "@green_checkmark_box! $COUNTRY$ wird diesem [concept_peace_deal] #bold wahrscheinlich zustimmen#!."
 WAR_PANEL_LIKELY_ACCEPT_PEACE_LIST: "@green_checkmark_box! $LIST$ werden diesem [concept_peace_deal] #bold wahrscheinlich zustimmen#!."
 WAR_PANEL_LIKELY_NOT_ACCEPT_PEACE_ONE: "@red_cross! $COUNTRY$ wird diesem [concept_peace_deal] #bold wahrscheinlich NICHT zustimmen#!."
 WAR_PANEL_LIKELY_NOT_ACCEPT_PEACE_LIST: "@red_cross! $LIST$ werden diesem [concept_peace_deal] #bold wahrscheinlich NICHT zustimmen#!."
 WAR_PANEL_ACCEPT_PEACE: "Wir akzeptieren diesen [concept_peace_deal] #bold #N NICHT#!#!"
 WAR_PANEL_NOT_ACCEPT_PEACE: "Wir akzeptieren diese [concept_peace_deal]"
 WAR_PANEL_PEACE_YES: "#header Friedensakzeptanz#!\n$TOOLTIP_DELIMITER$\n#variable $COUNTRY$#! würde dem derzeitigen [concept_peace_deal] #P #bold zustimmen#!#!\n\n$BREAKDOWN$"
 WAR_PANEL_PEACE_NO: "#header Friedensakzeptanz#!\n$TOOLTIP_DELIMITER$\n#variable $COUNTRY$#! würde den derzeitigen [concept_peace_deal] #N #bold ablehnen#!#!\n\n$BREAKDOWN$"
 WAR_PANEL_PEACE_PLAYER: "Dieses Land wird von einem Spieler gesteuert und kann daher eigenständig entscheiden."
 WAR_PANEL_CAPITULATE: "Kapitulieren"
 WAR_PANEL_CAPITULATE_TOOLTIP: "Unser Land verlässt den Krieg augenblicklich. $WARGOALS$, die auf uns abzielen, werden durchgesetzt.\n[GetDesc(WarPanel.GetWar.Capitulate(GetPlayer.Self))]"
 WAR_PANEL_PROPOSE_PEACE_DEAL: "[concept_peace_deal] vorschlagen"
 WAR_PANEL_PROPOSE_PEACE: "[concept_peace_deal] vorschlagen"
 WAR_PANEL_PROPOSE_PEACE_TOOLTIP: "#header $WAR_PANEL_PROPOSE_PEACE$#!\n$TOOLTIP_DELIMITER$\nAllen anderen Verhandlungsparteien Frieden auf der Grundlage unseres vorgeschlagenen [Concept('concept_peace_deal', 'Friedensvertrags')] einen Frieden vorschlagen[concept_peace_deal][ConcatIfNeitherEmpty('\n\n',GetDesc(WarPanel.GetWar.ProposePeaceDeal(GetPlayer.Self)))]\n\n[WarPanel.GetWar.GetAcceptProposedPeaceDealDesc(GetPlayer.Self)]"
 WAR_PANEL_WHITE_PEACE: "Weißer Friede"
 WAR_PANEL_SET_WHITE_PEACE: "Bedingungen für einen Weißen Frieden festlegen"
 WAR_PANEL_SET_WHITE_PEACE_TOOLTIP: "#header $WAR_PANEL_SET_WHITE_PEACE$#!\n$TOOLTIP_DELIMITER$\nEntfernt alle angefochtenen [Concept('concept_war_goal', '$concept_war_goals$')] aus unserem vorgeschlagenen [concept_peace_deal][ConcatIfNeitherEmpty('\n\n',GetDesc(WarPanel.GetWar.SetWhitePeace(GetPlayer.Self)))]\n\n[WarPanel.GetWar.GetAcceptWhitePeaceDealDesc]"
 CANNOT_CAPITULATE_OVERLORD_IN_WAR: "Man kann nicht kapitulieren, solange der eigene Suzerän weiterhin am Krieg teilnimmt"
 CANNOT_CAPITULATE_SOVEREIGNTY_VIOLATED: "Wir können nicht in einem Krieg kapitulieren, den wir begonnen haben, weil unsere Souveränität verletzt wurde"
 CANNOT_CAPITULATE_OVERLORD_WARGOAL_STAKEHOLDER: "Man kann nicht kapitulieren, wenn der eigene Suzerän an $WARGOALS$ gegen das eigene Land beteiligt ist"
 WAR_PANEL_PARTICIPANT_TOOLTIP: "[WarParticipant.GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[WarParticipant.GetWarSupportDescDelayed]\n[WarParticipant.GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',WarParticipant.GetCanCapitulateDesc)]"
 WAR_RIGHT_LEADER_TOOLTIP: "[War.AccessRightSideLeaderParticipant.GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[War.AccessRightSideLeaderParticipant.GetWarSupportDescDelayed]\n[War.AccessRightSideLeaderParticipant.GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',War.AccessRightSideLeaderParticipant.GetCanCapitulateDesc)]"
 WAR_LEFT_LEADER_TOOLTIP: "[War.AccessLeftSideLeaderParticipant.GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[War.AccessLeftSideLeaderParticipant.GetWarSupportDescDelayed]\n[War.AccessLeftSideLeaderParticipant.GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',War.AccessLeftSideLeaderParticipant.GetCanCapitulateDesc)]"
 WAR_ATTACKER_LEADER_TOOLTIP: "[War.AccessAttackerLeaderParticipant.GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[War.AccessAttackerLeaderParticipant.GetWarSupportDescDelayed]\n[War.AccessAttackerLeaderParticipant.GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',War.AccessAttackerLeaderParticipant.GetCanCapitulateDesc)]"
 WAR_DEFENDER_LEADER_TOOLTIP: "[War.AccessDefenderLeaderParticipant.GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[War.AccessDefenderLeaderParticipant.GetWarSupportDescDelayed]\n[War.AccessDefenderLeaderParticipant.GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',War.AccessDefenderLeaderParticipant.GetCanCapitulateDesc)]"
 WAR_PANEL_RIGHT_LEADER_TOOLTIP: "[WarPanel.AccessWar.AccessParticipant(WarPanel.GetRightLeader.Self).GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[WarPanel.AccessWar.AccessParticipant(WarPanel.GetRightLeader.Self).GetWarSupportDescDelayed]\n[WarPanel.AccessWar.AccessParticipant(WarPanel.GetRightLeader.Self).GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',WarPanel.AccessWar.AccessParticipant(WarPanel.GetRightLeader.Self).GetCanCapitulateDesc)]"
 WAR_PANEL_LEFT_LEADER_TOOLTIP: "[WarPanel.AccessWar.AccessParticipant(WarPanel.GetLeftLeader.Self).GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[WarPanel.AccessWar.AccessParticipant(WarPanel.GetLeftLeader.Self).GetWarSupportDescDelayed]\n[WarPanel.AccessWar.AccessParticipant(WarPanel.GetLeftLeader.Self).GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',WarPanel.AccessWar.AccessParticipant(WarPanel.GetLeftLeader.Self).GetCanCapitulateDesc)]"
 WAR_PANEL_WAR_SUPPORT_DESC: "#HEADER Kriegswille#! ($COUNTRY_NAME$)\nDerzeitiger Wert: #variable $SUPPORT|1+=$#!"
 WAR_PANEL_WAR_SUPPORT_DESC_INITIAL: "Anfänglicher [concept_war_support]: #variable [GetDefine('NDiplomacy','BASE_WAR_SUPPORT')|+=1]#!"
 WAR_PANEL_WAR_SUPPORT_DESC_BATTLES: "\nDurch Schlachten: #variable $BATTLES|1+=$#!"
 WAR_PANEL_WAR_SUPPORT_DESC_EXHAUSTION: "\nDurch Kriegsmüdigkeit: #variable $EXHAUSTION|1+=$#!"
 WAR_PANEL_WAR_SUPPORT_DESC_SITUATIONS: "\nDurch Ereignisse: #variable $SITUATIONS|1+=$#!"
 WAR_PANEL_WAR_SUPPORT_UNABLE_TO_CAPITULATE: "@warning! Kann nicht kapitulieren aufgrund von:\n$DETAILS$"
 PEACE_TOAST_TITLE: "Friedensvertrag"
 PEACE_SIGNED_DATE: "Am [DiplomaticPlay.GetEndDate] unterzeichnet"
 CAPITULATION_TITLE: "Kapitulation"
 CAPITULATION_ENFORCED: "Die folgenden $WARGOALS$ wurden bei [Country.GetAltName('DAT')] durchgesetzt"
 IS_PROMOTED: "wird befördert zu"
 IS_DEMOTED: "wird degradiert zu"
 REMAINS_SAME_RANK: "bleibt"
 COMMANDER_COMMAND_LIMIT_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v0$#!#!"
 COMMANDER_COMMAND_LIMIT_UNITS: "$NUM_UNITS|v$"
 COMMANDER_COMMAND_LIMIT_UNITS_TOOLTIPPABLE: "#tooltippable #tooltip:$NUM_UNITS_BREAKDOWN$ $NUM_UNITS|v$#!#!"
 COMMANDER_COMMAND_LIMIT_DIVIDER: " / "
 COMMANDER_COMMAND_LIMIT_ENDING_BATTALIONS: " $NAME$"
 COMMANDER_COMMAND_LIMIT_ENDING_FLOTILLAS: " $NAME$"
 #Terrains
 plains: "Ebenen"
 ocean: "Ozean"
 lakes: "Seen"
 river: "Fluss"
 forest: "Wald"
 hills: "Hügel"
 mountain: "Berge"
 jungle: "Dschungel"
 wetland: "Feuchtgebiete"
 desert: "Wüste"
 tundra: "Tundra"
 savanna: "Savanne"
 snow: "Arktisch"
 farmland_rye: "Ackerland"
 farmland_rice: "Reisfelder"
 farmland_millet: "Ackerland"
 plantation: "Ackerland"
 pasture: "Ackerland"
 farmland_wheat: "Ackerland"
 farmland_maize: "Ackerland"
 cleared_land: "Freiland"
 mining: "Minen"
 forestry: "Waldländer"
 docks: "Werften"
 MILITARY_FORMATION_FRONT_DISTRIBUTION: "[Front.GetName]: @battalions! $NUM_UNITS|v$:\n$BREAKDOWN$"
 MILITARY_FORMATION_STATE_DISTRIBUTION_ENTRY: "$TAB$@battalions! $NUM_UNITS|v$ aus „[State.GetName]“"
 MILITARY_PANEL_FRONT_TROOP_BREAKDOWN_HEADER: "Truppenverteilung"
 MILITARY_PANEL_FRONT_TROOP_BREAKDOWN: "[Front.GetName]: @battalions! $NUM_TROOPS|v$ ($PERCENT_OF_TROOPS|%1+$)"
 MILITARY_PANEL_COMMAND_LIMIT_BREAKDOWN_TOOLTIP: "#header Einheiten#!\n[MilitaryFormation.GetName] beinhalten [GetUnitStrengthHeader(MilitaryFormation.GetCurrentManpower, MilitaryFormation.GetMaxManpower, MilitaryFormation.GetCombatUnitsTypeIcon)]"
 REGULARS: "Berufssoldaten"
 CONSCRIPTS: "Wehrpflichtige"
 EVENT_DLC_TOOLTIP: "Dieses Ereignis ist Teil des DLC #v [Event.GetDLCName]#!"
 FORMATION_PANEL_DEBUG_INFO: "#title Debug-Informationen#!:\nID: #variable [MilitaryFormation.GetIDString]#!"
 FORMATION_PANEL_ARMY_MOBILIZATION_FORMATTED: "[Concept('concept_mobilize_army', '$concept_mobilize_army_mobilization$')]: $VALUE|v%0$"
 WAR_PANEL_INITIATOR_HEADER: "Initiator"
 WAR_PANEL_INITIATOR_HEADER_TOOLTIP: "Die Seite des Initiators in diesem [concept_war]"
 WAR_PANEL_TARGET_HEADER: "Ziel"
 WAR_PANEL_TARGET_HEADER_TOOLTIP: "Die Seite des Ziels in diesem [concept_war]"
 WAR_PANEL_INITIATOR_WARGOALS: "#title Initiator-[Concept('concept_war_goal', '$concept_war_goals$')]#!"
 WAR_PANEL_TARGET_WARGOALS: "#title Ziel-[Concept('concept_war_goal', '$concept_war_goals$')]#!"
 PROMOTION_EFFECTS_TOOLTIP: "[AddTextIf(IsValid(Character.GetPromoteCommand), Character.GetNextCommanderRankBenefits)]"
 PROMOTE_CHARACTER_HEADER: "#header [Character.GetFullName][AddTextIf(Not(Character.IsMaxRank), Concatenate(' zu ', Character.GetRankNameFor(Character.GetNextCommanderRank)))] befördern#!"
 MILITARY_PANEL_PROMOTE_CHARACTER_TOOLTIP: "$PROMOTE_CHARACTER_HEADER$[ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\nAuswirkungen:\n', Localize('PROMOTION_EFFECTS_TOOLTIP'))][ConcatIfNeitherEmpty('\n\n', GetDesc(Character.GetPromoteCommand))]"
 MILITARY_PANEL_PROMOTE_CHARACTER_TOOLTIP_MAX_RANK: "#header [Character.GetFullName] befördern#!\n\n#N [GetDesc(Character.GetPromoteCommand)]#!"
 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_HEADER: "#header Aufteilen in neue [SelectLocalization(Character.GetMilitaryFormation.IsArmy,'MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_ARMY','MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_FLEET')]#!"
 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_TOOLTIP: "$MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_HEADER$\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(GetDesc(Character.SplitIntoOwnFormation),'\n\n')]#indent_newline:3 [Character.GetFullName] würde [Character.GetNumUnitsThatWouldBeSplitOff|v0] [Concept('concept_unit','$concept_units$')] befehligen aufgrund von:\n[Character.GetCommandLimit] [concept_command_limit]\n[Character.GetMilitaryFormation.GetCommandLimit] [Character.GetMilitaryFormation.GetName] Gesamt-[concept_command_limit]\n[Character.GetMilitaryFormation.GetNumCombatUnits|v0] von [Concept('concept_unit','$concept_units$')] in [Character.GetMilitaryFormation.GetName]#!\n\n@information! Um dies genauer zu bestimmen, kann man #b Übertragen#! auf der #b Militärformation#!-Tafel verwenden."
 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_ARMY: "[concept_army]"
 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_FLEET: "[concept_fleet]"
 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_CONFIRMATION: "Sind Sie sicher, dass wir $CHARACTERS$ und $NUM_UNITS|v0$ [Concept('concept_unit','$concept_units$')] als neue [SelectLocalization(MilitaryFormation.IsArmy,'MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_ARMY','MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_FLEET')] abspalten sollten?"
 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_CONFIRMATION_ONLY_UNITS: "Sind Sie sicher, dass wir $NUM_UNITS|v0$ [Concept('concept_unit','$concept_units$')] als neue [SelectLocalization(MilitaryFormation.IsArmy,'MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_ARMY','MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_FLEET')] abspalten sollten?"
 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_CONFIRMATION_ONLY_COMMANDERS: "Sind Sie sicher, dass wir $CHARACTERS$ (ohne [Concept('concept_unit','$concept_units$')]) als neue [SelectLocalization(MilitaryFormation.IsArmy,'MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_ARMY','MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_FLEET')] abspalten sollten?"
 RECRUIT_CHARACTER_HEADER: "#header Charakter rekrutieren#!"
 ACQUIRING_TITLE: "#title Beschaffung#!"
 COST_TITLE: "#title Kosten#!"
 CONSUMED_TITLE: "#title Verbrauch#!"
 BALANCE_TITLE: "#title Saldo#!"
 STOCKPILE_TITLE: "#title Vorrat#!"
 COMMANDER_ORDER_REDUNDANT: "#V Ist bereits diesem Befehl zugewiesen#!"
 COMMANDER_ORDER_NAVAL_NO_COASTAL: "#N [STATE.GetName] hat keine Küstenprovinzen#!"
 COMMANDER_ORDER_NAVAL_COAST_FULLY_IMPASSABLE: "#N Die $ENEMY_ADJ$e Küste von $STATE_NAME$ hat keine passierbaren Provinzen#!"
 COMMANDER_ORDER_NAVAL_NOT_ENEMY: "#N Befindet sich nicht mit [COUNTRY.GetAltName('DAT')] im Krieg#!"
 COMMANDER_ORDER_NAVAL_REPAIRING: "#N $ADMIRAL_REPAIRING_DATE$#!"
 COMMANDER_ORDER_NAVAL_NEED_GENERAL: "#N [Country.GetAltName('NOM')|U] hat keine [Concept('concept_general', '$concept_generals$')] in einem Küsten-[concept_hq] mit Truppen, die eine Marineinvasion durchführen könnten#!"
 COMMANDER_ORDER_NAVAL_GENERAL_NOT_COASTAL: "#N Der [concept_general] muss in einem Küsten-[concept_hq] sein, um eine Marineinvasion durchzuführen#!"
 COMMANDER_ORDER_NAVAL_GENERAL_NO_TROOPS: "#N Der [concept_general] befehligt keine [Concept('concept_battalion', '$concept_battalions$')], die eine Marineinvasion durchführen könnten#!"
 COMMANDER_ORDER_POWER_PROJECTION_ALREADY_PRESENT: "#N Dieser Befehl wird bereits in der Strategieregion „[STRATEGIC_REGION.GetName]“ durchgeführt und erzeugt hier automatisch ein [concept_interest].#!"
 COMMANDER_ORDER_POWER_PROJECTION_NOT_ADJACENT: "#N Es gibt keine angrenzende #variable [concept_strategic_region]#!"
 COMMANDER_ORDER_ADVANCE_FRONT_FAIL_NOT_PARTICIPATING: "#N [Country.GetAltName('NOM')|U] hat keine Beteiligung an [Front.GetName]#!"
 COMMANDER_ORDER_DEFEND_FRONT_FAIL_NOT_PARTICIPATING: "#N [Country.GetAltName('NOM')|U] hat keine Beteiligung an [Front.GetName]#!"
 COMMANDER_ORDER_PATROL_SAME_HQ: "#N Muss gegen ein entferntes HQ gerichtet sein#!"
 COMMANDER_ORDER_PATROL_NOT_FRIENDLY_HQ: "#N Kann nur gegen ein befreundetes HQ eingesetzt werden#!"
 COMMANDER_PANEL_CURRENT_ORDER: "Derzeitiger [concept_order]: #b [Character.GetOrderType.GetAltName('gerund')]#! [AddLocalizationIf(Not(Or(Character.IsAdmiral, Character.GetOrderType.IsStandBy)), 'COMMANDER_PANEL_CURRENT_ORDER_LOCATION')]"
 COMMANDER_PANEL_CURRENT_ORDER_SHORT: "Derzeitiger [concept_order]: #b [Character.GetOrderType.GetName]#!"
 COMMANDER_PANEL_NEXT_ORDER_SHORT: "Nächster [concept_order]: #b [Character.GetOrderType.GetName]#!"
 FORMATION_PANEL_CURRENT_ORDER: "Derzeitiger [concept_order]: #TODO#b [MilitaryFormation.GetFormationOrder.GetType.GetAltName('gerund')]#!#! [AddLocalizationIf(Not(Or(MilitaryFormation.IsFleet, MilitaryFormation.GetFormationOrder.GetType.IsStandBy)), 'FORMATION_PANEL_CURRENT_ORDER_LOCATION')]"
 COMMANDER_PANEL_CURRENT_ORDER_LOCATION: "[AddTextIf(Character.IsAtFront,Character.GetMilitaryFormation.GetCurrentFront.GetName)]"
 FORMATION_PANEL_CURRENT_ORDER_LOCATION: "[AddTextIf(MilitaryFormation.IsAtFront,MilitaryFormation.GetCurrentFront.GetName)]"
 NEXT: "Nächster"
 FORMATION_SETTINGS: "Formationseinstellungen"
 ALLOW_BORROWING_AND_LENDING: "Leih und Verleih von Truppen erlauben"
 NEXT_OR_CURRENT_ORDER: "[AddLocalizationIf(ObjectsEqual(Character.GetOrderType.Self, CommanderOrderType.Self), 'CURRENT_ORDER_STATUS')][AddLocalizationIf(ObjectsEqual(Character.GetNextOrderType.Self, CommanderOrderType.Self), 'NEXT_ORDER_STATUS')][AddTextIf(And(Not(StringIsEmpty(GetDesc(Character.SelectOrder(CommanderOrderType.Self)))), Or(ObjectsEqual(Character.GetOrderType.Self, CommanderOrderType.Self), ObjectsEqual(Character.GetNextOrderType.Self, CommanderOrderType.Self))), '\n')][GetDesc(Character.SelectOrder(CommanderOrderType.Self))]"
 UNAVAILABLE_ORDERS: "Nicht verfügbare [Concept('concept_order', '$concept_orders$')]"
 UNAVAILABLE_ORDERS_TOOLTIP: "Es gibt #v [GetDataModelSize(Character.AccessUnavailableOrders)]#! nicht verfügbare [Concept('concept_order', '$concept_orders$')]"
 TRAIT_UNLOCKABLE_ORDERS_TITLE: "Schaltet die folgenden [Concept('concept_order', '$concept_orders$')] frei"
 RECRUIT_COMMANDER_SPECIAL_ORDERS_TITLE: "Verfügbare Sonder-[Concept('concept_order', '$concept_orders$')]"
 NO_SPECIAL_ORDERS_TITLE: "Keine verfügbaren Sonder-[Concept('concept_order', '$concept_orders$')]"
 MAKE_PEACE_NOT_AT_WAR_WITH: "#N #HEADER [COUNTRY.GetAltName('NOM')|U]#! befindet sich nicht mit #HEADER [TARGET_COUNTRY.GetAltName('DAT')]#! im Krieg#!"
 LOCAL_GOOD: "[concept_local_good]"
 LOCAL_GOODS: "[Concept('concept_local_good','$concept_local_goods$')]"
 GOODS_STATE_PANEL_PRICE_MARKET_SHARE: "#tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_MARKET_PRICE_SHARE_TOOLTIP [Goods.GetMarketPriceShare|%v1]#!#! [Concept('concept_market_price', '$concept_market_price_share$')]"
 GOODS_PANEL_STATE_PRICE_RIGHT_NOW: "#variable [Goods.GetStatePriceWithTooltip|1]#!"
 GOODS_PANEL_STATE_PRICE_COMPARE: "[SelectLocalization(Goods.IsLocal,'LOCAL_GOOD','GOODS_LOCAL_PRICE_DIFF_AND_MARKET_PRICE_SHARE')]"
 GOODS_PANEL_PRICE_RIGHT_NOW: "#variable [Goods.GetMarketPriceWithTooltip|1]#!"
 GOODS_PANEL_PRICE_COMPARE: "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=-]#! verglichen mit [concept_base_price]\nMarkt-Saldo: #variable [Goods.GetMarketBuyAndSellOrdersBalance|=D+]#!"
 GOODS_LOCAL_PRICE_DIFF_AND_MARKET_PRICE_SHARE: "$GOODS_LOCAL_PRICE_DIFF$$GOODS_STATE_PANEL_PRICE_MARKET_SHARE$"
 GOODS_LOCAL_PRICE_DIFF: "[Goods.GetStateToMarketPriceDiff|%0=-] in „[Goods.GetState.GetName]“ verglichen mit dem „[Goods.GetMarket.GetName]“-[Concept('concept_market_price', '$MARKET_PRICE$')]\n"
 SOLD_BY: "#title Verkauft von#!"
 BOUGHT_BY: "#title Gekauft von#!"
 PRODUCED_BY: "Produziert von"
 CONSUMED_BY: "Verbraucht von"
 RESOURCE_POTENTIALS: "[Concept('concept_resource_potential','$concept_resource_potentials$')]"
 INFORMATION: "Information"
 STATE_MODIFIERS: "Staatsmodifikatoren:\n[State.GetModifier.GetDesc]"
 SP_CAPACITY_CONCEPT: "#concept Das Militär wird versuchen, die volle Stärkepunktkapazität zu erreichen, indem es Geld aus dem Militäretat nimmt, Militärwaren kauft und diese für die Ausbildung von Soldaten in den Kasernen und Marinebasen verwendet.#!"
 STAPLE: "Grundbedarf"
 STAPLE_FILTER: "#header Grundbedarfswaren#! #instruction anzeigen/verbergen#!\n\n#concept Grundbedarfswaren sind Waren für den Grundbedarf.#!"
 INDUSTRIAL_GOODS_FILTER: "#header Industriewaren#! #instruction anzeigen/verbergen#!\n\n#concept Industriewaren sind von Fertigungswerken hergestellte Waren, die von anderen Fertigungswerken weiterverwendet werden können.#!"
 LUXURY_GOODS_FILTER: "#header Luxuswaren#! #instruction anzeigen/verbergen#!\n\n#concept Luxuswaren sind jene Waren, die Pops ab einer höheren [concept_sol]-Stufe verbrauchen.#!"
 MILITARY_GOODS_FILTER: "#header Militärwaren#! #instruction anzeigen/verbergen#!\n\n#concept Militärwaren sind jene Waren, die vom Militär verwendet werden.#!"
 NATIONAL_SP_CAPACITY: "#title Landes-Stärkepunktkapazität#!"
 ARMY_TITLE: "@army_SP! #TITLE Armee#!"
 NAVY_TITLE: "#title @navy_SP! Marine#!"
 NAVY_SP_CAPACITY_TITLE: "#HEADER Marine-Stärkepunktkapazität#!\n$TOOLTIP_DELIMITER$\nZiel: #variable @army_SP![Country.GetNavySPCapacity]#!\n\n$SP_CAPACITY_CONCEPT$"
 ARMY_SP_CAPACITY_TITLE: "#HEADER Armee-Stärkepunktkapazität#!\n$TOOLTIP_DELIMITER$\nZiel: #variable @navy_SP![Country.GetArmySPCapacity]#!\n\n$SP_CAPACITY_CONCEPT$"
 COMMANDS_TITLE: "#title Kommandos#!"
 CURRENT_ARMY_SP: "Derzeit: #variable @army_SP![Country.GetStrengthPointArmy]#!"
 CURRENT_NAVY_SP: "Derzeit: #variable @navy_SP![Country.GetStrengthPointNavy]#!"
 UNASSIGNED_CHARACTERS_TITLE: "#title Nicht zugewiesene Charaktere#!"
 PRIO_TITLE: "#title Prio:#!"
 TRAITS_TITLE: "#title Eigenschaften#!"
 AGE_VALUE: "#title Alter:#! #BOLD [Character.GetAge]#!"
 INTEREST_GROUP_VALUE: "#title [concept_interest_group]:#! #BOLD #underline [Character.GetInterestGroup.GetName]#!#!"
 INTEREST_GROUP_VALUE_TWO_ROWS: "#title [concept_interest_group]:#!\n#BOLD #underline [InterestGroup.GetName]#!#!"
 RULER_OF_COUNTRY: "Landesoberhaupt #variable [Character.GetCountry.GetAltName('GEN')]#!"
 HEIR_OF_COUNTRY: "Rechtmäßiger Erbe #variable [Character.GetCountry.GetAltName('VON')]#!"
 AT_THE_WAR_OFFICE: "Nicht zugewiesen"
 RECRUIT_CHARACTER_GENERAL: "Zusätzlichen [concept_general] rekrutieren"
 RECRUIT_CHARACTER_ADMIRAL: "Zusätzlichen [concept_admiral] rekrutieren"
 CREATE_ARMY_FORMATION: "[concept_army] schaffen"
 CREATE_FLEET_FORMATION: "[concept_fleet] schaffen"
 RECRUIT_CHARACTER_GENERAL_HEADER: "#bold Zu rekrutierenden General auswählen#!"
 RECRUIT_CHARACTER_ADMIRAL_HEADER: "#bold Zu rekrutierenden Admiral auswählen#!"
 RECRUIT_CHARACTER_BUTTON: "Rekrutieren"
 RECRUIT_COMMANDER_TOO_MANY_OF_TYPE: "[MilitaryFormation.GetName] hat bereits [GetDefine('NMilitary','MAX_NUM_COMMANDERS_PER_FORMATION')|0v] Kommandanten, die [Character.GetPrimaryRoleName] sind, und kann daher keine weiteren rekrutieren"
 RECRUIT_COMMANDER_TARGET_WILL_EXCEED_LIMIT: "„[MILITARY_FORMATION.GetName]“ hätte nach laufenden Zusammenführungen mehr als [GetDefine('NMilitary','MAX_NUM_COMMANDERS_PER_FORMATION')|0v] [CHARACTER.GetPrimaryRoleName] und kann nicht mehr rekrutieren"
 RECRUIT_COMMANDER_WRONG_COUNTRY: "#R [Character.GetFullName] gehört nicht zu [Country.GetAltName('DAT')]#!"
 RECRUIT_COMMANDER_HQ_WRONG_COUNTRY: "#R [Hq.GetName] gehört nicht zu [Country.GetAltName('DAT')]#!"
 RECRUIT_COMMANDER_FORMATION_WRONG_COUNTRY: "#R [MilitaryFormation.GetName] gehört nicht [TARGET_COUNTRY.GetAltName('DAT')]"
 RECRUIT_COMMANDER_TEMP_HQ: "#R [Hq.GetName] ist ein temporäres [concept_hq]#!"
 CHARACTER_TOOLTIP: "[Character.GetInfoTooltip]"
 CHARACTER_IS_BUSY: "[Character.GetFullName|U] ist [concept_busy|l] und kann keine Aufträge annehmen"
 CREATE_FORMATION_TEMP_HQ: "#R [Hq.GetName|U] ist ein temporäres [concept_hq]#!"
 CREATE_FORMATION_HQ_WRONG_COUNTRY: "#R [Hq.GetName|U] gehört nicht [Country.GetAltName('DAT')]#!"
 DISBAND_UNIT_WRONG_COUNTRY: "#[CombatUnit.GetName] gehört nicht [Country.GetAltName('DAT')]"
 DISBAND_UNIT_FORMATION_WRONG_COUNTRY: "#R [MilitaryFormation.GetName] gehört nicht [TARGET_COUNTRY.GetAltName('DAT')]"
 DISBAND_UNIT_TYPE_EMPTY: "[MilitaryFormation.GetName] hat keine „[CombatUnitType.GetName]“"
 DISBAND_COMBAT_UNIT: "[CombatUnit.GetName|v][ConcatIfNeitherEmpty('\n\n', GetDesc(CombatUnit.GetMilitaryFormation.GetDisbandUnitCommand(CombatUnit.Self)))] auflösen\n\nDadurch wird eine Stufe von [CombatUnit.GetBuilding.GetName] in „[CombatUnit.GetBuilding.GetState.GetName]“ entfernt"
 character_role_general: "[concept_general]"
 character_role_admiral: "[concept_admiral]"
 character_role_politician: "[concept_politician]"
 character_role_agitator: "[concept_agitator]"
 character_role_ruler: "[concept_ruler]"
 character_role_heir: "[concept_heir]"
 character_role_executive: "[concept_executive]"
 character_role_general_title: "General"
 character_role_admiral_title: "Admiral"
 character_role_politician_title: "" #Empty on purpose
 character_role_agitator_title: "" #Intentionally empty
 character_role_executive_title: "Geschäftsführer"
 ROLE: "[concept_character_role]"
 CHARACTER_PRIMARY_ROLE: "#v [Character.GetAllRoleNames]#!"
 CHARACTER_PRIMARY_ROLE_TOOLTIP: "#header [Character.GetFullName]#! hat die Rolle „#v [Character.GetAllRoleNames]#!“"
 INPUT_MULT: "[concept_input_mult]: #v [Building.GetInputMult|-=%0]#!"
 INPUT_MULT_TOOLTIP: "[Building.GetInputMultDesc]"
 THROUGHPUT: "[SelectLocalization(EqualTo_CFixedPoint(Building.GetThroughputBonusCurrent, Building.GetThroughputBonusTarget), 'THROUGHPUT_CONSTANT', 'THROUGHPUT_CHANGING')]"
 THROUGHPUT_CONSTANT: "[concept_throughput]: #v [Building.GetThroughputBonusCurrent|%=+0]#!"
 THROUGHPUT_CHANGING: "[concept_throughput]: #v [Building.GetThroughputBonusCurrent|%=+0]#! @arrow_right! #v [Building.GetThroughputBonusTarget|%=+0]#!"
 THROUGHPUT_TOOLTIP: "[SelectLocalization(EqualTo_CFixedPoint(Building.GetThroughputBonusCurrent, Building.GetThroughputBonusTarget), 'THROUGHPUT_TOOLTIP_CONSTANT', 'THROUGHPUT_TOOLTIP_CHANGING')]"
 THROUGHPUT_TOOLTIP_CONSTANT: "#header Durchsatzbonus#!\n[Building.GetThroughputDesc]"
 THROUGHPUT_TOOLTIP_CHANGING: "Der [concept_throughput] des Gebäudes ändert sich.\n\n#header Durchsatzbonus#!\n[Building.GetThroughputDesc]"
 EXPAND_ECONOMY_OF_SCALE_EFFECT_PER_LEVEL: "$EFFECT$ pro Stufe (begrenzt bei Stufe $MAX_LEVEL|v$)"
 EXPAND_ECONOMY_OF_SCALE_EFFECT_TOTAL: "$EFFECT$ gesamt (begrenzt bei Stufe $MAX_EFFECT$)"
 BUILDING_ECONOMY_OF_SCALE_CAP_TOOLTIP: "[Building.GetName] in [Building.GetState.GetName] unterliegt dem [concept_economy_of_scale] bis zur Stufe [Building.GetModifier.GetValueWithBreakdownFor('building_economy_of_scale_level_cap_add')]"
 BUILDING_TYPE_ECONOMY_OF_SCALE_CAP_TOOLTIP: "Das Gebäude „[BUILDING_TYPE.GetName]“ im Staat „[STATE.GetName]“ unterliegt dem [concept_economy_of_scale] bis zur Stufe [MODIFIER.GetValueWithBreakdownFor('building_economy_of_scale_level_cap_add')]"
 BUILDING_ECONOMY_OF_SCALE_NATIONALIZATION_EFFECT: "[concept_economy_of_scale]-Boni verringert um $AMOUNT|=+%0$ aufgrund von $LEVELS|v$/$TOTAL_LEVELS|v$ Stufen im [concept_nationally_owned]."
 character_ig_info: "[concept_interest_group]: #variable [CHARACTER.GetInterestGroup.GetName]#!"
 character_name_info: "[CHARACTER.GetFullNameWithTitle]"
 character_role_info: "#bold [CHARACTER.GetPrimaryRoleName]#!"
 character_age_info: "Alter: #variable [CHARACTER.GetAge]#!"
 character_traits_info: "#title Eigenschaften#!\n[CHARACTER.GetTraitsDesc]"
 character_command_limit_army: "[concept_command_limit]: [CHARACTER.GetCommandLimit]#! @battalions!"
 character_command_limit_navy: "[concept_command_limit]: [CHARACTER.GetCommandLimit]#! @flotillas!"
 character_ideology_info: "Ideologie: [CHARACTER.GetIdeology.GetName]"
 CHARACTER_TRAIT_FORMAT: "#variable $TRAIT$#!"
 CHAR_TRAIT_MODIFIER_HEADER_COUNTRY: "#title Als [concept_ruler]:#!"
 CHAR_TRAIT_MODIFIER_HEADER_COMMAND: "#title Als [concept_commander]:#!"
 CHAR_TRAIT_MODIFIER_HEADER_EXECUTIVE: "#title Als [concept_executive]:#!"
 CHAR_TRAIT_MODIFIER_HEADER_IG_LEADER: "#title Als [Concept('concept_interest_group', 'Interessengruppen')]-[concept_leader]:#!"
 CHAR_TRAIT_MODIFIER_HEADER_AGITATOR: "#title Als [concept_agitator]:#!"
 CHAR_TRAIT_MODIFIER_HEADER_COUNTRY_INACTIVE: "#title Als [concept_ruler] (inaktiv):#!"
 CHAR_TRAIT_MODIFIER_HEADER_COMMAND_INACTIVE: "#title Als [concept_commander] (inaktiv):#!"
 CHAR_TRAIT_MODIFIER_HEADER_EXECUTIVE_INACTIVE: "#title Als [concept_executive] (inaktiv):#!"
 CHAR_TRAIT_MODIFIER_HEADER_IG_LEADER_INACTIVE: "#title Als [Concept('concept_interest_group', 'Interessengruppen')]-[concept_leader] (inaktiv):#!"
 CHAR_TRAIT_MODIFIER_HEADER_AGITATOR_INACTIVE: "#title Als [concept_agitator] (Inaktiv):#!"
 POPULARITY_HATED: "#r Gehasst#!"
 POPULARITY_DISLIKED: "#r Unbeliebt#!"
 POPULARITY_NEUTRAL: "Neutral"
 POPULARITY_LIKED: "#g Beliebt#!"
 POPULARITY_LOVED: "#g Geliebt#!"
 character_info_with_ig_tooltip_general: "$character_info_tooltip_general$\n\n$character_ig_info$"
 character_info_with_ig_tooltip_admiral: "$character_info_tooltip_admiral$\n\n$character_ig_info$"
 character_info_with_ig_tooltip_politician: "$character_info_tooltip_politician$\n\n$character_ig_info$"
 character_info_tooltip_general: "#HEADER $character_name_info$#!\n$character_role_info$ \n$TOOLTIP_DELIMITER$\n$character_age_info$\n$character_assignments_info$\n\n$character_command_limit_army$\n\n$character_traits_info$"
 character_info_tooltip_admiral: "#HEADER $character_name_info$#!\n$character_role_info$\n$TOOLTIP_DELIMITER$\n$character_age_info$\n$character_assignments_info$\n\n$character_command_limit_navy$\n\n$character_traits_info$"
 character_info_tooltip_politician: "#HEADER $character_name_info$#!\n$character_role_info$\n$TOOLTIP_DELIMITER$\n$character_ideology_info$\n$character_age_info$\n\n$character_traits_info$"
 character_info_tooltip_ruler: "#HEADER $character_name_info$#!\n$character_role_info$\n$TOOLTIP_DELIMITER$\n$character_age_info$\n\n$character_traits_info$"
 character_info_tooltip_heir: "#HEADER $character_name_info$#!\n$character_role_info$\n$TOOLTIP_DELIMITER$\n$character_age_info$\n\n$character_traits_info$"
 MILITARY_PANEL: "Militär"
 MILITARY_PANEL_TAB_ARMY: "Armee"
 MILITARY_PANEL_TAB_ARMY_SELECTED: "#bold Armee#!"
 MILITARY_PANEL_TAB_GARRISON: "Garnisonen"
 MILITARY_PANEL_TAB_GARRISON_SELECTED: "#bold Garnisonen#!"
 MILITARY_PANEL_TAB_NAVY: "Marine"
 MILITARY_PANEL_TAB_NAVY_SELECTED: "#bold Marine#!"
 TITLE_RULER: "#title Landesoberhaupt#!"
 TITLE_HEIR: "#title Thronfolger#!"
 TITLE_LEADER: "#title Anführer#!"
 IDEOLOGY_STRONG_APPROVAL: "#P Starke Befürwortung#!"
 IDEOLOGY_APPROVAL: "#P Billigung#!"
 IDEOLOGY_NEUTRAL: "#V Neutral#!"
 IDEOLOGY_DISAPPROVAL: "#N Missbilligung#!"
 IDEOLOGY_STRONG_DISAPPROVAL: "#N Starke Ablehnung#!"
 IDEOLOGY_NO_LAW_STANCES: "#bold Keine Haltung#!"
 IDEOLOGY_LAW_STANCE_GROUP: "#title Haltung gegenüber „$LAW_GROUP$“#!"
 IDEOLOGY_LAW_STANCE_STRONGLY_APPROVE: "#P Befürworten stark#! „$LAWS$“"
 IDEOLOGY_LAW_STANCE_APPROVE: "#P Befürworten#! „$LAWS$“"
 IDEOLOGY_LAW_STANCE_DISAPPROVE: "#N Sind gegen#! „$LAWS$“"
 IDEOLOGY_LAW_STANCE_STRONGLY_DISAPPROVE: "#N Sind stark gegen#! „$LAWS$“"
 IDEOLOGY_LAW_STANCE_NEUTRAL: "#V Neutral#! gegenüber „$LAWS$“"
 POL_PANEL_IG_STATUS_HEADER: "#title Zustimmung#!"
 ig_approval_loyal: "#bold #P Loyal#!#!"
 ig_approval_happy: "#bold #P Zufrieden#!#!"
 ig_approval_neutral: "#bold Neutral#!"
 ig_approval_unhappy: "#bold #N Unzufrieden#!#!"
 ig_approval_angry: "#bold #N Wütend#!#!"
 WILL_RADICALIZE_WARNING: "@warning! Wird die IG „[INTEREST_GROUP.GetName]“ [Concept('concept_radical', '$concept_radicalize$')|l]"
 IG_APPROVAL_FROM_LEADER: "(durch [CHARACTER.GetFullName] [INTEREST_GROUP.GetTextIcon])"
 IG_APPROVES_OF_LAW: "#BOLD $VAL|+=$#! durch @approves! „[Law.GetName]“\n"
 IG_DISAPPROVES_OF_LAW: "#BOLD $VAL|+=$#! durch @disapproves! „[Law.GetName]“\n"
 IG_APPROVES_OF_LAW_CHANGE: "@approves! $NAME$ $CLOUT_OPTIONAL$: #tooltippable #tooltip:[INTEREST_GROUP.GetTooltipTag]|[LAW.GetTooltipTag],IG_LAW_APPROVAL_BREAKDOWN #BOLD $APPROVAL_DELTA|+=$#!#!#! (von #v $CURR_APPROVAL|+$#! bis #v $PROJECTED_APPROVAL|+$#!)\n\n"
 IG_APPROVES_OF_PREVIOUS_LAW_CHANGE: "@approves! $NAME$ $CLOUT_OPTIONAL$#P #bold $concept_endorses$#!#! den kürzlichen Wechsel von „[LAW_OTHER.GetName]“ auf „[LAW.GetName]“: #BOLD $APPROVAL_DELTA|+=$#!#!#!\n\n"
 IG_DISAPPROVES_OF_LAW_CHANGE: "@disapproves! $NAME$ $CLOUT_OPTIONAL$: #tooltippable #tooltip:[INTEREST_GROUP.GetTooltipTag]|[LAW.GetTooltipTag],IG_LAW_APPROVAL_BREAKDOWN #BOLD $APPROVAL_DELTA|+=$#!#!#! (von #v $CURR_APPROVAL|+$#! bis #v $PROJECTED_APPROVAL|+$#!)\n\n"
 IG_DISAPPROVES_OF_PREVIOUS_LAW_CHANGE: "@disapproves! $NAME$ $CLOUT_OPTIONAL$#N #bold $concept_opposes$#!#! den kürzlichen Wechsel von „[LAW_OTHER.GetName]“ auf „[LAW.GetName]“: #BOLD $APPROVAL_DELTA|+=$#!#!#!\n\n"
 IG_NAME_WITH_LEADER: "[INTEREST_GROUP.GetName] (durch [CHARACTER.GetFullName])"
 IG_APPROVES_OF_LAW_LONG: "@approves! $NAME$ $CLOUT_OPTIONAL$#P #bold $concept_endorse$#!#! „[Law.GetName]“: #BOLD $VAL|+=$#!\n"
 IG_DISAPPROVES_OF_LAW_LONG: "@disapproves! $NAME$ $CLOUT_OPTIONAL$#N #bold $concept_oppose$#!#! „[Law.GetName]“: #BOLD $VAL|+=$#!\n"
 IG_STRONGLY_APPROVES_OF_LAW_LONG: "@approves! $NAME$ $CLOUT_OPTIONAL$#P #bold Befürwortet #!#! „[Law.GetName]“ stark: #BOLD $VAL|+=$#!\n"
 IG_STRONGLY_DISAPPROVES_OF_LAW_LONG: "@disapproves! $NAME$ $CLOUT_OPTIONAL$#N #bold Ist stark gegen#!#! „[Law.GetName]“: #BOLD $VAL|+=$#!\n"
 IG_APPROVES_OF_LAW_CHANGE_BREAKDOWN: "@approves! Die Interessengruppe „#variable [INTEREST_GROUP.GetName]#!“ #P #bold billigt#!#! den Wechsel von „#variable $OLD_LAW$#!“ ($OLD_APPROVAL$) zu „#variable $LAW$#!“ ($APPROVAL$)\n#BOLD $APPROVAL_DELTA|+=$#! (von $CURR_APPROVAL|=$ zu $PROJECTED_APPROVAL|=$)"
 IG_DISAPPROVES_OF_LAW_CHANGE_BREAKDOWN: "@disapproves! Die Interessengruppe „#variable [INTEREST_GROUP.GetName]#!“ #N #bold ist gegen#!#! den Wechsel von „#variable $OLD_LAW$#!“ ($OLD_APPROVAL$) zu „#variable $LAW$#!“ ($APPROVAL$)\n#BOLD $APPROVAL_DELTA|+=$#! (von $CURR_APPROVAL|=$ zu $PROJECTED_APPROVAL|=$)"
 IG_LAW_APPROVAL_BREAKDOWN: "[InterestGroup.GetLawApprovalBreakdown(Law.Self)]"
 IG_APPROVAL_DECAY_DESC: "#bold Nach Verabschiedung#! fällt $APPROVAL_DELTA|+=$ über einen Zeitraum von $MONTHS|0v$ Monaten auf #BOLD $VAL|+=$#! zurück"
 IG_APPROVAL_DECAY_IN_PROGRESS_DESC: "(Diese Reaktion verfällt in $MONTHS$ Monaten und wird dann mit einem Zustimmungswert von #BOLD $VAL|+=$#! ($APPROVAL$) ersetzt.)"
 IG_WITH_CLOUT: "([INTEREST_GROUP.GetClout|%1v])"
 IG_MARGINAL_WITH_CLOUT: "([INTEREST_GROUP.GetClout|%1v] - [concept_marginalized|l])"
 NO_CHANGE_IN_APPROVAL: "Die Interessengruppe „[INTEREST_GROUP.GetName]“ mag das Gesetz „$LAW$“ genauso sehr wie „$OLD_LAW$“"
 ENACTING: "Beschließend"
 CURRENTLY_ENACTING: "Beschließt derzeit:"
 ZOOM_TO_CAPITAL_STATE: "[Country.GetCapital.GetName] ([concept_capital_state]) zentrieren"
 GOV_STABILITY_DROP_FROM_LAW: "$TAB$ #variable $IGNAME$#! $IDEOLOGY$: #BOLD #N -$VAL|0%$#!#!"
 IG_STABILITY_DROP_FROM_LAW: "Beschloss „$LAW$“"
 IG_STABILITY_BONUS_SINGLE_GROUP: "Einzige [concept_interest_group] in der Regierung: #variable #P $VAL|=0%$#!#!#!\n"
 IG_STABILITY_PENALTY_RELATION: "Die Interessengruppe „#bold $DISLIKING_IG$#!“ mag die Interessengruppe „#bold $LEADER_IG$#!“ nicht: #variable #N $VAL|0%$#!#!\n"
 IG_STABILITY_BONUS_RELATION: "Die Interessengruppe „#bold $LIKING_IG$#!“ mag die Interessengruppe „#bold $LEADER_IG$#!“: #variable #P $VAL|=0%$#!#!\n"
 IG_STABILITY_PENALTY_RECENT_LAW: "Die Interessengruppe „#bold $DISLIKING_IG$#!“ ist gegen kürzlich verabschiedete Gesetze: #variable #N $VAL|0%$#!#!\n"
 IG_STABILITY_PENALTY_OPPOSITION: "Politischer Druck der Opposition: #variable #N $VAL|0%$#!#!\n"
 GOV_IG_ENACTMENT_SUPPORT: "   @approves! Die Interessengruppe „[INTEREST_GROUP.GetName]“ ($CLOUT_SHARE|%1v$) #P #bold ist dafür#!#!: #BOLD $VAL|-=$#! Tag(e)"
 GOV_IG_ENACTMENT_NEUTRAL: "   Die Interessengruppe „[INTEREST_GROUP.GetName]“ ($CLOUT_SHARE|%v1$) ist #tooltippable #tooltip:INDIFFERENT_BREAKDOWN gleichgültig#!#!: #BOLD $VAL|-=$#! Tag(e)"
 GOV_IG_ENACTMENT_OPPOSITION: "   @disapproves! Die Interessengruppe „[INTEREST_GROUP.GetName]“ ($CLOUT_SHARE|%v1$) #bold #N ist dagegen#!#!: #BOLD $VAL|-=$#! Tag(e)"
 LAW_APPROVAL: "#bold [Law.GetPercentPolStrApprove|%1]#!"
 #LAW_APPROVAL: "#bold [Law.GetNumIGsApprove]#! ([Law.GetPercentPolStrApprove|%0])"
 LAW_DISAPPROVAL: "#bold [Law.GetPercentPolStrDisapprove|%1]#!"
 #LAW_DISAPPROVAL: "#bold [Law.GetNumIGsDisapprove]#! ([Law.GetPercentPolStrDisapprove|%0])"
 LAW_INDIFFERENT: "#bold [Law.GetPercentPolStrUndecided|%1]#!"
 #LAW_UNDECIDED: "#bold [Law.GetNumIGsUndecided]#! ([Law.GetPercentPolStrUndecided|%0])"
 TOOLTIP_LAW_APPROVAL: "#header @approves! [Concept('concept_endorse_oppose', '$concept_endorsement$')]#!\n$LAW_IGS_APPROVE$"
 TOOLTIP_LAW_INDIFFERENT: "#header @indifferent! [Concept('concept_endorse_oppose', '$concept_indifferent$')]#!\n$LAW_IGS_INDIFFERENT$"
 TOOLTIP_LAW_DISAPPROVAL: "#header @disapproves! [Concept('concept_endorse_oppose', '$concept_opposition$')]#!\n$LAW_IGS_DISAPPROVE$"
 LAW_IGS_APPROVE: "#variable [Law.GetPercentPolStrApprove|%1]#! des [Concept('concept_clout', 'Politischen Drucks')] im [concept_country]@approves! billigt „#variable [Law.GetName]#!“.[ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', Law.GetIGsApproveList)]"
 LAW_IGS_DISAPPROVE: "#variable [Law.GetPercentPolStrDisapprove|%1]#! des [Concept('concept_clout', 'Politischen Drucks')] im [concept_country]@disapproves! ist gegen „#variable [Law.GetName]#!“.[ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', Law.GetIGsDisapproveList)]"
 LAW_IGS_INDIFFERENT: "#variable [Law.GetPercentPolStrUndecided|%1]#! des [Concept('concept_clout', 'Politischen Drucks')] im [concept_country] #bold interessiert#! „#variable [Law.GetName]#!“ nicht.[ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', Law.GetIGsUndecidedList)]"
 LAW_NO_GOVERNMENT_OR_MOVEMENT_SUPPORT: "Keine [concept_interest_group] [concept_in_government|l] stimmt für das Gesetz „[Law.GetName]“, und es gibt auch keine [concept_political_movement], die das Gesetz unterstützt"
 LAW_NO_CHANCE_TO_PASS: "Chance für [concept_enactment_success] liegt über #v 0 %#!"
 NEVER: "#b Dauerhaft#!"
 TOOLTIP_IDEOLOGY: "#HEADER [Ideology.GetName]#!\n$TOOLTIP_DELIMITER$\n[Ideology.GetLawStanceDesc]\n\n#lore [Ideology.GetDesc]#!"
 TOOLTIP_IG_TRAIT_FROM_PAIR: "#HEADER [InterestGroupAndTraitPair.GetInterestGroup.GetName] – [InterestGroupAndTraitPair.GetTrait.GetName]#! [InterestGroupAndTraitPair.GetTrait.GetInactiveString(InterestGroupAndTraitPair.GetInterestGroup)]\n[InterestGroupAndTraitPair.GetTrait.GetModifiersDesc(InterestGroupAndTraitPair.GetInterestGroup)]\n$TOOLTIP_DELIMITER$\n[InterestGroupAndTraitPair.GetTrait.GetTriggersDesc(InterestGroupAndTraitPair.GetInterestGroup)]\n\n#lore [InterestGroupAndTraitPair.GetTrait.GetDesc]#!"
 TOOLTIP_STATE_TRAIT: "#HEADER [StateTrait.GetName]#!\n[StateTrait.GetModifiersDesc]"
 IN_GOVERNMENT: "[concept_in_government]"
 IN_OPPOSITION: "[concept_in_opposition]"
 IN_GOVERNMENT_WITH_ICON: "@in_government! [concept_in_government|U]"
 IN_OPPOSITION_WITH_ICON: "@in_opposition! [concept_in_opposition|U]"
 MARGINAL: "[concept_marginalized]"
 MARGINAL_GROUPING: "$MARGINAL$"
 MARGINAL_AND_INACTIVE_GROUPING: "Randst. + Inaktiv"
 INTEREST_GROUP_ITEM: "#variable [INTEREST_GROUP.GetClout|1%]#! [INTEREST_GROUP.GetName]"
 INTEREST_GROUP_ITEM_POPULATION: "[INTEREST_GROUP.GetName]: #variable [INTEREST_GROUP.GetPopulation|K]#!"
 POP_TYPE_POPULATION_ITEM: "$TYPE$: #variable $VAL|K$#!\n"
 LEADING_IG: "#header Führende [concept_interest_group]#!\nIdeologie des Anführers: [InterestGroup.GetLeaderIdeologyDesc]\nIdeologien: [InterestGroup.GetIdeologyDesc]\n\nDa die [concept_interest_group] „[InterestGroup.GetName]“ die höchste [Concept('concept_political_strength', 'Politische Stärke')] in der Regierung hat, wird sie als führende [concept_interest_group] angesehen."
 FAVORS_IDEOLOGY: "Befürwortet „#variable $IDEOLOGY_NAME$#!“: $VAL|+=$"
 OPPOSES_IDEOLOGY: "Ist gegen „#variable $IDEOLOGY_NAME$#!“: $VAL|+=$"
 RELATION_TO_IG: "Beziehung zur Interessengruppe „#variable $IG_NAME$#!“ insgesamt: $RELATION_VALUE|+=$\n$TOOLTIP_DELIMITER$\n$RELATION_BREAKDOWN$"
 IN_GOVERNMENT_DESC: "#HEADER In der Regierung#!\n$TOOLTIP_DELIMITER$\n[concept_in_government_desc]"
 IN_OPPOSITION_DESC: "#HEADER In der Opposition#!\n$TOOLTIP_DELIMITER$\n[concept_in_opposition_desc]"
 MARGINAL_DESC: "#HEADER Randständig#!\n$TOOLTIP_DELIMITER$\n[concept_marginalized_desc]"
 IN_REVOLUTION_DESC: "#HEADER Revolutionär#!\n$TOOLTIP_DELIMITER$\n$IN_REVOLUTION_CONCEPT$"
 IG_IDEOLOGY_LABEL: "[Ideology.GetNameNoFormatting][AddLocalizationIf(Ideology.IsCharacterIdeology, 'IG_IDEOLOGY_FROM_LEADER')]"
 IG_IDEOLOGY_FROM_LEADER: " #lore (durch Anführer)#!"
 SECESSION_ALERT_ENTRY_CHANCE: "[CULTURE.GetName] [CULTURE.GetChanceForSecessionMovement(GetPlayer.Self)|%1v]"
 SECESSION_ALERT_ENTRY_GROWING: "[CULTURE.GetName]"
 COST_OF_WAR_ENTRY: "$TYPE$ [Country.GetAltName('VON')]: @money!$COST|vD$"
 COST_OF_WAR_TYPE_MATERIEL: "Militärwaren"
 COST_OF_WAR_TYPE_WAGES: "Einberufenen-Gehälter"
 COST_OF_WAR_TOOLTIP: "#header Kriegskosten insgesamt: @money!$COST|vD$#!\n$COST_OF_WAR_TYPE_MATERIEL$: @money!$MATERIEL_COST|vD$\n$COST_OF_WAR_TYPE_WAGES$: @money!$WAGES_COST|vD$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 FILTERS: "Filter"
 MARKET_PANEL_WORLD_MARKET_TRADE: "Handel"
 TODO: "#todo TODO#!"
 TARIFFS: "Zölle"
 GOODS_WITHOUT_WORLD_MARKET_TRADE: "Waren ohne Weltmarktpreis"
 GOODS_CATEGORY: "Warenkategorie"
 SHOW_ZERO_TRADE: "Hat beliebigen Handel"
 TARIFFS_SHOW_ALL: "Alle anzeigen"
 TARIFFS_SHOW_ALL_TT: "Alle anzeigen"
 TARIFFS_SHOW_ONLY_TRADED: "Nur gehandelte"
 TARIFFS_SHOW_ONLY_TRADED_TT: "Nur gehandelte"
 TOTAL_TARIFFS_SUBVENTIONS_MONEY_STATE_BALANCE_FOR_GOODS: "@money![Goods.GetStateTariffsSubventionsBalance|K=+]"
 TOTAL_TARIFFS_SUBVENTIONS_MONEY_STATE_BALANCE_FOR_GOODS_TOOLTIP: "[Goods.GetStateTariffsSubventionsBalanceDesc]"
 TOTAL_TARIFFS_SUBVENTIONS_MONEY_MARKET_BALANCE_FOR_GOODS: "@money![Goods.GetMarketTariffsSubventionsBalance|K=+]"
 TOTAL_TARIFFS_SUBVENTIONS_MONEY_MARKET_BALANCE_FOR_GOODS_TOOLTIP: "[Goods.GetMarketTariffsSubventionsBalanceDesc]"
 TOTAL_TARIFFS_SUBVENTIONS_MONEY_BALANCE_FOR_GOODS_HEADER: "#header [concept_tariffs] und [concept_subventions] für $GOODS_ICON$[Nbsp]„$GOODS_NAME$“#!"
 TOTAL_TARIFFS_SUBVENTIONS_MONEY_BALANCE_FOR_GOODS_DESC: "$HEADER$\n$VALUE|K=+$ in „$NAME$“\n$TOOLTIP_DELIMITER$\n$TARIFFS|K=+$ durch $concept_tariffs$ ($TARIFF_RATE|%0v$ $concept_tariff$-Rate)\n$SUBVENTIONS|K=+$ durch $concept_subventions$ ($SUBVENTION_RATE|%0v$ $concept_subvention$s-Rate)"
 TOTAL_TARIFFS_SUBVENTIONS_MONEY_BALANCE_FOR_GOODS_NO_TRADE_DESC: "$HEADER$\n$TOOLTIP_DELIMITER$\nKein [concept_trade] dieser [concept_good] in „$NAME|v$“"
 TOTAL_TARIFFS_SUBVENTIONS_MONEY_BALANCE_FOR_GOODS_NONE_DESC: "$HEADER$\n$TOOLTIP_DELIMITER$\nKeine $concept_tariffs$ oder $concept_subventions$ für diese [concept_good] in „$NAME|v$“"
 WORLD_MARKET_GOODS_EXPORT_TOOLTIP: "#header „[Goods.GetName]“-Exporte in [Market.GetName]#!\nMenge: [Market.GetExportedAmount(Goods.Self)|v0]"
 WORLD_MARKET_GOODS_IMPORT_TOOLTIP: "#header „[Goods.GetName]“-Importe in [Market.GetName]#!\nMenge: [Market.GetImportedAmount(Goods.Self)|v0]"
 revolution_name: "[concept_revolution]"
 secession_name: "[concept_secession]"
 REVOLUTIONS_HEADER: "#header $concept_revolution$#!"
 REVOLUTIONS_HEADER_TOOLTIP: "Es gibt [Concept('concept_interest_group', '$concept_interest_groups$')], die aktiv versuchen, die Regierung zu stürzen!"
 SECESSION_HEADER: "#header $concept_secession$#!"
 SECESSION_HEADER_TOOLTIP: "Ein Teil des [Concept('concept_country', 'Landes')] wird versuchen, sich abzuspalten!"
 SECESSIONS: "Sezessionen"
 CIVIL_WAR_PROGRESS_TOOLTIP: "#header „[PoliticalMovement.GetCivilWar.GetName]“-Fortschritt#!\n#v [PoliticalMovement.GetCivilWar.GetProgress|1%]#! Gesamtfortschritt[ConcatIfNeitherEmpty('\n', AddLocalizationIf(PoliticalMovement.IsInsurrectionary, 'POLITICAL_MOVEMENT_REVOLUTION_CLOCK_CHECKPOINT'))][ConcatIfNeitherEmpty('\n', AddLocalizationIf(PoliticalMovement.IsInsurrectionary, 'POLITICAL_MOVEMENT_REVOLUTION_PROGRESS_AT_CHECKPOINT'))]\n$TOOLTIP_DELIMITER$\nErreicht er #v 100#!, bricht ein [concept_civil_war] aus.\n\n[PoliticalMovement.GetCivilWar.GetMaxProgressDesc]"
 UPRISING_PROGRESS_TOOLTIP_STATE_ENTRY: "$TAB$ $VALUE|%0v$ Risiko in [STATE.GetName]"
 UPRISING_PROGRESS_TOOLTIP_STATE_ENTRY_GUARANTEED: "$TAB$[STATE.GetName]"
 UPRISING_PROGRESS_TOOLTIP_STATE_ENTRY_UNIT: "$ICON$ $VALUE|v$"
 UPRISING_PROGRESS_TOOLTIP_NUM_UNITS: "Unterstützt von @battalions!$ARMY_UNITS|v$ und @flotillas!$NAVY_UNITS|v$"
 UPRISING_PROGRESS_TOOLTIP_CIVIL_WAR_CONSCRIPTION_RATE: "Wird weitere @conscripts!$NUM_UNITS|v$ aufgrund von $CONSCRIPTION_RATE|=v%$ [Concept('concept_conscription_center','Einberufungs')]-Rate durch öffentliche Unterstützung und [Concept('concept_clout', 'Politischen Druck')] der [Concept('concept_insurrection','aufständischen')] [concept_interest_group]"
 CIVIL_WAR_MAX_PROGRESS_BREAKDOWN: "Maximaler Fortschritt ist #v $TOTAL_MAX|%0$#! aufgrund von: #indent_newline:3 \n$POLITICAL_MOVEMENT_RADICALISM_WITH_LABEL$"
 CIVIL_WAR_MAX_UNSUPPORTED_PROGRESS: "Diese Revolution kann einen Fortschritt von über [Multiply_CFixedPoint('(CFixedPoint)$PROGRESS_LIMIT$','(CFixedPoint)100')|0v] nicht aufrechterhalten, da die [concept_political_movement] keine Unterstützung von einer [concept_interest_group] hat."
 CIVIL_WAR_PROGRESS_AT_MAX_PROGRESS: "#header Wöchentlicher Fortschritt\n$TOOLTIP_DELIMITER$\nDie [concept_revolution] hat den derzeit maximalen Fortschritt von #tooltippable #tooltip:$BREAKDOWN_TAG$ [Multiply_CFixedPoint('(CFixedPoint)$MAX_PROGRESS$','(CFixedPoint)100')|0]#!#!"
 CIVIL_WAR_PROGRESS_ABOVE_MAX_PROGRESS: "#header Wöchentlicher Fortschritt\n$TOOLTIP_DELIMITER$\nDie [concept_revolution] liegt über dem derzeit maximalen Fortschritt von #tooltippable #tooltip:$BREAKDOWN_TAG$ [Multiply_CFixedPoint('(CFixedPoint)$MAX_PROGRESS$','(CFixedPoint)100')|0]#!#!"
 CIVIL_WAR_PROGRESS_AT_CHECKPOINT_TOOLTIP: "#header Fortschritt der [concept_revolution]#!\n$PROGRESS|=%-1$ am nächsten Fixpunkt\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 CIVIL_WAR_PROGRESS_AT_CHECKPOINT_FROM_RADICALISM: "#v $PROGRESS|=%-1$#! durch [Concept('concept_radical', '$concept_radicalism$')]"
 CIVIL_WAR_PROGRESS_AT_CHECKPOINT_NEAR_CAP: "\nDiese [Concept('concept_political_movement', '$concept_political_movement_short$')] kann nicht weiter als $MAX_PROGRESS|%0v$ voranschreiten (derzeit bei $PROGRESS|1%v$) und der Fortschritt beim nächsten Fixpunkt wird daher auf $MAX_DELTA|=%-1$ verringert"
 REVOLUTIONS_UPRISING_HEADER_LOYALIST: "Widersetzen sich [CivilWar.GetUprisingCountry.GetAltName('DAT')]!"
 REVOLUTIONS_UPRISING_HEADER_REBEL: "Widersetzen sich [CivilWar.GetOriginCountry.GetAltName('DAT')]!"
 REVOLUTIONS_IG_LIST_HEADER: "#title Aufständische [Concept('concept_interest_group', '$concept_interest_groups$')]:#!"
 REVOLUTIONS_IG_LIST_HEADER_TOOLTIP: "Dies sind die aufständischen [Concept('concept_interest_group', '$concept_interest_groups$')] im Land"
 BATTALIONS_STILL_FIGHTING: "@battalions! Bataillone"
 BATTALIONS_FIGHTING_HISTORY: "@battalions! Bataillone kämpfen gegen die Geschichte an"
 MANPOWER_FIGHTING_HISTORY: "Kämpfen gegen fähige Männer"
 SECESSION_UPRISING_HEADER: "#N #BOLD [CivilWar.GetUprisingCountry.GetAltName('NOM')|U] hat sich von uns abgespalten!#!#!"
 SECESSION_UPRISING_HEADER_LOYALIST: "Wir bekämpfen die Verräter [CivilWar.GetUprisingCountry.GetAltName('IN')]!"
 SECESSION_UPRISING_HEADER_REBEL: "Wir bekämpfen die Tyrannen [CivilWar.GetOriginCountry.GetAltName('IN')]!"
 ADD_TO_GOVERNMENT: "Der Regierung hinzufügen"
 REMOVE_FROM_GOVERNMENT: "Aus der Regierung entfernen"
 LEGITIMACY_CHANGE_SWITCH_TOOLTIP: "Dies würde zu einer [Concept('concept_legitimacy', 'Legitimitätsänderung')] von #variable $VAL|+=0$#! führen (derzeit #variable [GetPlayer.GetGovernmentLegitimacy]#!)\n$TOOLTIP_DELIMITER$\nDie daraus resultierende Regierungslegitimität würde wie folgt aussehen:\n$DESC$"
 TOOLTIP_REFORM_GOVERNMENT: "#HEADER $REFORM_GOVERNMENT$#!\n[ReformGovernment.GetConfirmDesc][ConcatIfNeitherEmpty('\n', AddLocalizationIf(LessThan_int32(ReformGovernment.GetPredictedLegitimacy, '(int32)25'), 'ILLEGITIMATE_GOVERNMENT_WARNING_REFORM'))]"
 ILLEGITIMATE_GOVERNMENT_WARNING_REFORM: "@warning! Dies würde zu „[ReformGovernment.GetPredictedLegitimacyLevel.GetNameNoFormatting]“ führen – dann können keine [Concept('concept_law', '$concept_laws$')] mehr ohne [concept_political_movement] [Concept('concept_enactment_of_laws','beschlossen')] werden"
 ILLEGITIMATE_GOVERNMENT_WARNING: "@warning! Dies ist eine „[Country.GetGovernmentLegitimacyLevel.GetNameNoFormatting]“ – es können keine [Concept('concept_law', '$concept_laws$')] mehr ohne [concept_political_movement] [Concept('concept_enactment_of_laws','beschlossen')] werden"
 ADD_TO_GOVERNMENT_SHORT: "Hinzufügen"
 REMOVE_FROM_GOVERNMENT_SHORT: "Entfernen"
 FORM_GOV_DATE_INVALID: "Wir können den Regierungsstatus der Interessengruppe „#variable $IG$#!“ bis #BOLD #V $DATE$#!#! nicht wechseln\n"
 FORM_GOV_IG_NOT_IN_GOVERNMENT: "Nicht [concept_in_government|l]"
 FORM_GOV_REVOLUTIONARY_COUNTRY: "Revolutionäre [Concept('concept_interest_group', '$concept_interest_groups$')] können nicht aus einem Revolutionsland entfernt werden"
 FORM_GOV_IG_ALREADY_IN_GOVERNMENT: "Bereits [concept_in_government|l]"
 FORM_GOV_IG_IS_MARGINAL: "[concept_marginalized] [Concept('concept_interest_group', '$concept_interest_groups$')] können nicht an die Macht kommen"
 FORM_GOV_IG_IS_ANGRY: "[Concept('concept_interest_group', '$concept_interest_groups$')] mit einer #bold #N wütenden#!#! [concept_approval] können nicht an die Macht kommen"
 FORM_GOV_IG_IS_INSURRECTIONARY: "Aufständische [Concept('concept_interest_group', '$concept_interest_groups$')] können nicht an die Macht kommen"
 FORM_GOV_IG_IS_SUPPRESSED: "Unterdrückte [Concept('concept_interest_group', '$concept_interest_groups$')] können nicht an die Macht kommen"
 FORM_GOV_GOVERNMENT_TOO_SMALL: "Die Regierung muss mindestens aus einer [concept_interest_group] bestehen"
 FORM_GOV_MISSING_PARTY_IG: "Da die IG „[InterestGroup.GetName]“ Teil der Partei „[Party.GetName]“ [Party.GetMembersSummary] ist, muss sie auch Teil der Regierung sein."
 FORM_GOV_NO_CHANGE: "An der amtierenden [concept_government] werden derzeit keine Änderungen vorgenommen."
 FORM_GOV_EMPTY: "Die Regierung muss mindestens aus einer [concept_interest_group] bestehen."
 FORM_GOV_RECENT_REGIME_CHANGE: "Wir haben unlängst einen Regimewechsel durchlebt"
 FORM_GOV_IG_WANTS_TO_JOIN_PARTY: "Die IG „$IG_NAME$“ möchte der Partei „$PARTY_NAME$“ beitreten"
 FORM_GOV_CIVIL_WAR_COUNTRY: "Länder, die durch einen [concept_civil_war] entstehen, können ihre [concept_government] während des laufenden [Concept('concept_civil_war', 'Bürgerkriegs')] nicht reformieren"
 MEMBERS: "Mitglieder"
 RULER_JOIN_IG_SHORT: "Beitreten"
 RULER_JOIN_IG_LONG: "Den [concept_ruler] der [concept_interest_group] beitreten lassen"
 RULER_LEGITEMACY_NO_CHANGE_TOOLTIP: "Dies würde nicht zu einer [Concept('concept_legitimacy', 'Legitimitätsänderung')] führen (derzeit #variable [GetPlayer.GetGovernmentLegitimacy]#!)"
 RULER_LEGITEMACY_CHANGE_TOOLTIP: "Dies würde zu einer [Concept('concept_legitimacy', 'Legitimitätsänderung')] von #variable $VAL|+=0$#! führen (derzeit #variable [GetPlayer.GetGovernmentLegitimacy]#!)"
 TOOLTIP_RULER_JOIN_IG_DESC: "\n$TOOLTIP_DELIMITER$\nDen eigenen [concept_ruler] dieser [concept_interest_group] beitreten lassen, um deren Ideologien zu fördern\n\nDies wird die derzeitige [concept_interest_group] stark verärgern und wir werden [GetDefine( 'NPolitics', 'RULER_CHANGE_IG_COOLDOWN_YEARS' )|v] Jahre lang nicht in der Lage sein, die [concept_interest_group] des [Concept('concept_ruler', 'Herrschers')] erneut zu ändern#!"
 TOOLTIP_RULER_JOIN_IG: "#HEADER $IG_RIGHT_CLICK_MENU_RULER_JOIN_IG$#!\n[InterestGroup.GetRulerJoinGovDesc]"
 SUPPRESS_SHORT: "$concept_suppress$"
 SUPPRESS_NOT_SHORT: "[concept_suppress] beenden"
 SUPPRESSED: "[Concept('concept_suppress', '$concept_suppressed$')]"
 BOLSTER_SHORT: "$concept_bolster$"
 BOLSTER_NOT_SHORT: "[Concept('concept_bolster','$concept_bolstering$')] einstellen"
 BOLSTERED: "[Concept('concept_bolster','$concept_bolstered$')|U]"
 TOOLTIP_SUPPRESS: "#header $SUPPRESS_SHORT$ [PoliticalMovement.GetName]#!\n$SUPPRESSION_EFFECTS$[SelectLocalization(StringIsEmpty(GetDesc(PoliticalMovement.ToggleSuppression)), '', '\n\n')][GetDesc(PoliticalMovement.ToggleSuppression)]"
 TOOLTIP_SUPPRESS_NOT: "#header $SUPPRESS_NOT_SHORT$ [PoliticalMovement.GetName]#!\n[GetDesc(PoliticalMovement.ToggleSuppression)]"
 TOOLTIP_BOLSTER: "#header $BOLSTER_SHORT$ [PoliticalMovement.GetName]#!\n$PROMOTION_EFFECTS$[SelectLocalization(StringIsEmpty(GetDesc(PoliticalMovement.ToggleBolstering)), '', '\n\n')][GetDesc(PoliticalMovement.ToggleBolstering)]"
 TOOLTIP_BOLSTER_NOT: "#header $BOLSTER_NOT_SHORT$ [PoliticalMovement.GetName]#!\n[GetDesc(PoliticalMovement.ToggleBolstering)]"
 TOOLTIP_SUPPRESSED: "#header $SUPPRESSED$#!\n$TOOLTIP_DELIMITER$\n$SUPPRESSION_EFFECTS$"
 TOOLTIP_BOLSTERED: "#header $BOLSTERED$#!\n$TOOLTIP_DELIMITER$\n$PROMOTION_EFFECTS$"
 SUPPRESSION_EFFECTS: "[PoliticalMovement.GetCountry.GetModifier.GetValueWithBreakdownFor('country_suppression_attraction_factor')] $country_suppression_attraction_factor$[ConcatIfNeitherEmpty('\n', PoliticalMovement.GetSuppressionEffectDesc)]\n\n#title Kosten:#! [PoliticalMovement.GetCountry.GetSuppressionCostDesc] wöchentlich"
 PROMOTION_EFFECTS: "[PoliticalMovement.GetCountry.GetModifier.GetValueWithBreakdownFor('country_bolster_attraction_factor')] $country_bolster_attraction_factor$[ConcatIfNeitherEmpty('\n', PoliticalMovement.GetBolsteringEffectDesc)]\n\n#title Kosten:#! [PoliticalMovement.GetCountry.GetBolsteringCostDesc] wöchentlich"
 SUPPRESSION_COST: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VAL|v0$#!#! @aut![concept_authority]"
 SUPPRESSION_COST_TOOLTIP: "#header [Concept('concept_suppress', 'Unterdrückungskosten')]: $VAL|v0$ @aut![concept_authority]#!\n$TOOLTIP_DELIMITER$\nGrundwert: @aut!$BASE|v0$\n$BREAKDOWN$"
 BOLSTER_COST: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VAL|v0$#!#! @aut![concept_authority]"
 BOLSTER_COST_TOOLTIP: "#header [Concept('concept_bolster', 'Stärkungskosten')]: $VAL|v0$ @aut![concept_authority]#!\n$TOOLTIP_DELIMITER$\nGrundwert: @aut!$BASE|v0$\n$BREAKDOWN$"
 PROMOTE_COMMANDER: "Befördern"
 CHANGE_RANK_CANNOT_PROMOTE: "[Character.GetFullName] hat bereits den höchsten Rang als [Character.GetRankName] erreicht und kann nicht weiter befördert werden."
 CHANGE_RANK_CANNOT_PROMOTE_RULER: "[Character.GetFullName] ist [Character.GetCustom('DE_ART_DEF_S_N')] [Character.GetPrimaryRoleTitle] [Character.GetCountry.GetAltName('VON')] und kann daher nicht über den Rang „[Character.GetRankName]“ hinaus befördert werden"
 DESIGNATE_STRATEGIC_OBJECTIVE_IMPOSSIBLE_STATE: "[State.GetNameNoFormatting] befindet sich weder an einer [Country.GetAdjectiveNoFormatting|l]en Feindes-[concept_front] noch ist es Eigentum [Country.GetAltNameNoFormatting('VON')]"
 SUPPRESS_MOVEMENT_IS_PROMOTED: "[concept_political_movement] wird [Concept('concept_bolster','$concept_bolstered$')|l]"
 SUPPRESS_MOVEMENT_INSUFFICIENT_AUT: "Nicht genügend $AUTHORITY$ verfügbar (benötigt: $REQVAL|1v$) "
 SUPPRESS_MOVEMENT_NO_SUPPRESSION_POWER: "Es gibt keine rechtliche Grundlage, um [Concept('concept_political_movement', '$concept_political_movements$')] zu [concept_suppress|l]"
 PROMOTE_MOVEMENT_IS_SUPPRESSED: "[concept_political_movement] wird [Concept('concept_suppress','$concept_suppressed$')|l]"
 PROMOTE_MOVEMENT_INSUFFICIENT_AUT: "Nicht genügend $AUTHORITY$ verfügbar (benötigt: $REQVAL|1v$)"
 PROMOTE_MOVEMENT_NO_PROMOTION_POWER: "Es gibt keine rechtliche Grundlage, um [Concept('concept_political_movement', '$concept_political_movements$')] zu [concept_bolster|l]"
 IG_IS_IN_GOVERNMENT: "[concept_in_government]: #variable [GetDefine( 'NPolitics', 'IG_IN_GOVERNMENT_APPROVAL' )|+=]#!"
 IG_IS_IN_OPPOSITION: "[concept_in_opposition]: #variable [GetDefine( 'NPolitics', 'IG_IN_OPPOSITION_APPROVAL' )|+=]#!"
 IG_POWERFUL_IS_IN_OPPOSITION: "[concept_powerful] und [concept_in_opposition|l]: #variable [GetDefine( 'NPolitics', 'IG_POWERFUL_IN_OPPOSITION_APPROVAL' )|+=]#!"
 IG_INSURRECTIONARY_IN_GOVERNMENT: "[Concept('concept_insurrection','Aufständische')] [Concept('concept_interest_group', '$concept_interest_groups$')] [concept_in_government|l] haben maximale [concept_approval]"
 IG_LAW_APPROVAL_CAPPED: "Die Gesamt-[concept_approval] von #B $TOTAL|+=$#! (vom eigentlichen Wert #B $UNCAPPED|+=$#! abgeriegelt) basiert auf Folgendem:"
 IG_LAW_APPROVAL: "Die Gesamt-[concept_approval] von #B $TOTAL|+=$#! basiert auf Folgendem:"
 IG_LOYALISTS_APPROVAL: "#v $POL_STR|0%$#! der [Concept('concept_political_strength', 'Politischen Stärke')] innerhalb der [concept_interest_group] stammt von [Concept('concept_loyalist', '$concept_loyalists$')]: #v $APPROVAL|=+$#!"
 IG_RADICALS_APPROVAL: "#v $POL_STR|0%$#! der [Concept('concept_political_strength', 'Politischen Stärke')] innerhalb der [concept_interest_group] stammt von [Concept('concept_radical', '$concept_radicals$')]: #v $APPROVAL|=+$#!"
 IG_ACTIVE_LAWS_HEADER: "#title Aktive Gesetze#!"
 IG_LAW_CHANGES_HEADER: "#title Gesetzesänderungen#!"
 IG_OTHER_FACTORS_HEADER: "#title Andere Faktoren#!"
 IG_LOBBY_APPEASEMENT: "$VALUE|=+$ durch $concept_political_lobby_appeasement$ von „[POLITICAL_LOBBY.GetName]“"
 IG_APPROVAL_FROM_APPEASEMENT: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|=+$#!#! durch [concept_political_lobby_appeasement] von [Concept('concept_political_lobby','$concept_political_lobbies$')]"
 IG_LOBBY_APPEASEMENT_NUM_LOBBIES_MULTIPLIER: "Multipliziert mit #v x$MULTIPLIER$#!, da sie Teil von $NUM_LOBBIES|v$ [Concept('concept_political_lobby','$concept_political_lobbies$')] sind"
 IS_SUPPRESSED_ATTRACTION: "[Concept('concept_suppress','$concept_suppressed$')U]: #variable $VAL|+=%0$#!"
 IS_BOLSTERED_ATTRACTION: "[Concept('concept_bolster','$concept_bolstered$')|U]: #variable $VAL|+=%0$#!"
 PEOPLE_ABROAD_TOOLTIP: "#BOLD #V Nicht-inkorporierte Bevölkerung#!#!\n$TOOLTIP_DELIMITER$\n$ABROAD_POP_CONCEPT$"
 INTEREST_GROUP_TITLE: "#title [concept_interest_group]#!"
 LAW_TITLE: "#title Gesetze#!"
 CLOUT_TITLE: "#title Politischer Druck#!"
 SP_TITLE: "#title Armee-Stärkepunkte#!"
 SP_NAVAL_TITLE: "#title Marine-Stärkepunkte#!"
 REVOLUTION_TITLE: "#title Revolution!#!"
 REVOLUTION_CAPITAL_STATE_PROGRESS: "Hält Hauptstaat-Provinzen: "
 REVOLUTION_CAPITAL_TAKE_DESC: "Sobald die Revolution alle Provinzen im Hauptstaat hält, beginnt die Zeit, bis zum Sieg herunterzuzählen.\n#variable [RevolutionaryFaction.GetCountry.GetAltName('NOM')|U]#! hält #variable [RevolutionaryFaction.GetCapitalControl]#! Provinzen. Die Aufständischen halten #variable [RevolutionaryFaction.GetRevolutionCapitalControl]#! Provinzen"
 REVOLUTION_VICTORY_DESC: "Halten die Aufständischen alle Hauptsitz-Provinzen, beginnt sich dieser Balken zu füllen. Sobald er voll ist, gewinnen die Aufständischen und setzen alle ihre Forderungen durch"
 REVOLUTION_SURRENDER_DESC: "Dieser Balken zeigt an, wie viele Stärkepunkte noch in den Kommandos vorhanden sind, die für die Revolution kämpfen. Fällt dieser Wert auf unter [GetDefineCountryRevolutionarySurrenderCutoff|1%] jenes Werts, den die Revolution zu Beginn hatte, wird sie kapitulieren"
 REVOLUTION_VICTORY_DETAILS: "Wenn die Rebellen gewinnen, setzen sie Folgendes durch:\n[RevolutionaryFaction.GetVictoryEffectDesc]"
 COUNTRY_NAME: "[ConcatIfNeitherEmpty('$PREFIX$',' ')]$NAME$"
 REVOLUTION_COUNTRY_NAME: "Revolutions-[ConcatIfNeitherEmpty('$PREFIX$',' ')]$NAME$"
 SECESSION_COUNTRY_NAME: "$ADJECTIVE$er Aufstand"
 COUNTRY_ADJECTIVE: "[ConcatIfNeitherEmpty('$PREFIX$',' ')]$ADJECTIVE$"
 REVOLUTION_COUNTRY_ADJECTIVE: "Revolutions-[ConcatIfNeitherEmpty('$PREFIX$',' ')]$ADJECTIVE$"
 SECESSION_COUNTRY_ADJECTIVE: "$ADJECTIVE$er Aufstand"
 COMPANY_COUNTRY_NAME: "$NAME$"
 SECESSION_NO_REVOLT_TAG: "Blockade"
 SECESSION_NO_REVOLT_TAG_TOOLTIP: "Dieser [concept_secession] fehlt eine Nationalidentität, hinter der man sich sammeln könnte, und sie kann daher nicht stattfinden."
 WAR_GOAL_WORTH: "#header [concept_war_goal]#!\nDieses [concept_war_goal] durchzusetzen, kostet [WarGoal.GetInitiator.GetAltName('AKK')] #BOLD [WarGoal.GetWorth]#! Kriegspunkte. Man kann [Concept('concept_war_goal', '$concept_war_goals$')] nur bis zu einem Wert durchsetzen, der den eigenen Kriegspunkten minus denen der Gegner entspricht."
 WAR_START_TITLE: "Es ist ein Krieg mit #variable [COUNTRY.GetAltName('DAT')]#! ausgebrochen!"
 WAR_START_TITLE_NOPLAYER: "Zwischen #variable $ATTACKER$#! und #variable $DEFENDER$#! ist ein Krieg ausgebrochen!"
 WAR_START_DESC: "Das Diplomatiespiel „#variable $PLAY_NAME$#!“ in #variable $WHERE$#! hat einen Krieg zwischen #bold uns#! und #bold $MAIN_ENEMY$#! ausgelöst."
 WAR_START_DESC_NOPLAYER: "Das Diplomatiespiel „$PLAY_NAME$“ in $WHERE$ hat einen Krieg zwischen #bold $FIRST$#! und #bold $SECOND$#! ausgelöst."
 REGIONS_TITLE: "#title Regionen#!"
 TOOLTIP_RADICALISM: "#header Radikalität#!\n$TOOLTIP_DELIMITER$\n[INTEREST_GROUP.GetActiveIncidents]\n"
 NEXT_RADICALISM_INCIDENT: "Löst einen Radikalitätszwischenfall aus:\n#variable [INTEREST_GROUP.GetNextIncident]#! in #variable ~[INTEREST_GROUP.GetWeeksUntilNextIncident]#! Wochen ([INTEREST_GROUP.GetRadicalism|%1] Fortschritt)"
 TOOLTIP_STATE_RADICALISM: "#header Radikalität#!\n$TOOLTIP_DELIMITER$\n[STATE.GetActiveRadicalismIncidents]\n"
 RADICALISM_IN_STATE: "#BOLD #V Radikalität#!#! in #BOLD #V $STATE$#!#!\n$TOOLTIP_DELIMITER$\n"
 RADICALISM_GROUPS_IN_STATE_HEADER: "Die folgende [Concept('concept_interest_group', '$concept_interest_groups$')] wird einen Radikalitätszwischenfall auslösen:"
 RADICALISM_GROUPS_IN_STATE_ITEM: "„#variable [INTEREST_GROUP.GetName]#!“ in #variable ~[INTEREST_GROUP.GetWeeksUntilNextIncident]#! Wochen ([INTEREST_GROUP.GetRadicalism|%1] Fortschritt)"
 RADICALISM_INCIDENT_START_EFFECTS_HEADER: "#title Anfangseffekte:#!"
 RADICALISM_INCIDENT_EFFECT_GROUPS_HEADER: "#title Effektgruppen:#!"
 RADICALISM_INCIDENT_END_EFFECTS_HEADER: "#title Endeffekte:#!"
 RADICALISM_INCIDENT_DEMAND_HEADER: "#title Forderung:#!"
 BUILDING_OPTION_CHANGE: "Ändern"
 BUILDING_OPTION_CHANGE_TOOLTIP: "#header Gebäude ändern#!\nÄndert das Gebäude der Art „#variable [BuildingType.GetBuildingGroupName]#!“ in diesem Staat zu „#variable [BuildingType.GetName]#!“"
 CHANGE_BUILDING_NEW: "#bold Alternatives Gebäude#!"
 CHANGE_BUILDING_CURRENT: "#bold Derzeitiges Gebäude#!"
 CHANGE_BUILDING_HEADER: "#BOLD [Building.GetBuildingGroupName] in [Building.GetState.GetName]#!"
 BUILDING_CHANGE_WRONG_TYPE: "#N Gebäude aus der Gruppe „[BUILDING.GetBuildingGroupName]“ können nicht auf diese Weise geändert werden#!"
 BUILDING_CHANGE_NO_ALTERNATIVES: "#N In diesem Staat gibt es keine Alternativgebäude in der Gruppe „[BUILDING.GetBuildingGroupName]“, zu denengewechselt werden könnte#!"
 BUILDING_PANEL_EXPAND: "Erweitern"
 BUILDING_PANEL_DOWNSIZE: "Verkleinern"
 BUILDING_PANEL_CHANGE: "Ändern"
 CANNOT_DOWNSIZE_NOT_DOWNSIZEABLE: "#N Diese Gebäudeart kann nicht verkleinert werden#!"
 CANNOT_DOWNSIZE_BUILDING_PROTECTED: "Dieses [concept_building] wird vor Verkleinerungen geschützt durch:\n$DETAILS$"
 CANNOT_DOWNSIZE_UNDER_CONSTRUCTION: "#N Das Gebäude kann nicht verkleinert werden, während es erweitert wird#!"
 CANNOT_DOWNSIZE_INVALID_BUILDING: "#N Ungültiges Gebäude#!"
 CANNOT_DOWNSIZE_NO_OWNERSHIP: "#N Gebäude kann nicht verkleinert werden, da es keine besessenen Gebäudestufen gibt#!"
 CANNOT_DOWNSIZE_REVOLUTION: "#N Kann aufgrund der sich zusammenbrauenden [concept_revolution] nicht verkleinert werden#!"
 CANNOT_DOWNSIZE_SECESSION: "#N Kann aufgrund der wachsenden [Concept('concept_secession', 'Sezessions')]-Bewegung nicht verkleinert werden#!"
 CANNOT_DISBAND_REVOLUTION: "#N Kann aufgrund der sich zusammenbrauenden [concept_revolution] nicht aufgelöst werden#!"
 CANNOT_DISBAND_SECESSION: "#N Kann aufgrund der wachsenden [Concept('concept_secession', 'Sezessions')]-Bewegung nicht aufgelöst werden#!"
 BUILDING_DOWNSIZE_TOOLTIP: "#header $BUILDING_PANEL_DOWNSIZE$#!\nVerringert die Größe des [Concept('concept_building', 'Gebäudes')] in „[Building.GetState.GetName]“ auf #v $NEW_LEVEL$#!"
 BUILDING_DOWNSIZE_TOOLTIP_HEADER: "#bold $BUILDING_PANEL_DOWNSIZE$#!"
 BUILDING_CHANGE_TOOLTIP: "#header Gebäude ändern#!\nÄndert ein Gebäude der Gruppe „#variable [BUILDING.GetBuildingGroupName]#!“ in diesem Staat"
 BUILDING_CHANGE_CAN_SWITCH_TO: "#bold Alternative Gebäude:#!"
 RADICALIZATION_CHANGES_DOWNSIZE: "@warning! Die Verkleinerung dieses [Concept('concept_building', 'Gebäudes')] wird einen Teil der [Concept('concept_workforce', 'Beschäftigten')] [Concept('concept_radical', 'radikalisieren')], falls die Maßnahme zur Entlassung von Mitarbeitern führt"
 BUILDING_PROD_METH_ALREADY_ACTIVE: "Diese [concept_production_method] ist bereits aktiv"
 BUILDING_PROD_METH_ALREADY_ACTIVE_BULK: "Diese [concept_production_method] ist bereits in allen Gebäuden aktiv"
 BUILDING_DETAILS_PRODUCED_MODIFIER_TOOLTIP: "#header [ModifierEntry.GetName]#!\n[ModifierEntry.GetDesc]\n$TOOLTIP_DELIMITER$\n[ModifierEntry.GetBreakdown]"
 TOOLTIP_NEW_PRODUCTION_METHOD: "#header Neue Produktionsmethode verfügbar#!\n$TOOLTIP_DELIMITER$\nIn diesem Gebäude kann eine neu erforschte Produktionsmethode aktiviert werden"
 POLITICAL_ACTION_REFORM_DESC: "#variable $REFORM_GROUP$ – $REFORM$#! einführen"
 POLITICAL_ACTION_REFORM_PAST_TENSE_DESC: "Führte #variable $REFORM_GROUP$ – $REFORM$#! ein"
 POLITICAL_ACTION_TAX_DESC: "Steuern für #variable $STRATA$#! auf #variable $VALUE|%$#! setzen"
 POLITICAL_ACTION_TAX_PAST_TENSE_DESC: "Setzte die Steuern für die #variable $STRATA$#! auf #variable $VALUE|%$#!"
 POLITICAL_ACTION_BUILDING_DESC: "Größe #variable $LEVEL$ $BUILDING_TYPE$#! errichten"
 POLITICAL_ACTION_BUILDING_PAST_TENSE_DESC: "Baute ein Gebäude der Art #variable $BUILDING_TYPE$ der Größe $LEVEL$#!"
 POLITICAL_ACTION_DIPLOMATIC_PLAY_DESC: "[concept_diplomatic_play] „$PLAY_TYPE$“ gegen $AGAINST$ beginnen"
 POLITICAL_ACTION_DIPLOMATIC_PLAY_PAST_TENSE_DESC: "Begann das [concept_diplomatic_play] „$PLAY_TYPE|v$“ gegen $AGAINST|v$"
 POLITICAL_ACTION_EXPAND_MARKET_DESC: "Marktabdeckung erweitern"
 POLITICAL_ACTION_EXPAND_MARKET_PAST_TENSE_DESC: "Erweiterte die Marktabdeckung"
 INTERACTION_NOT_ALLOWED_FOR: "Diese Aktion ist nicht zulässig für [Country.GetAltName('AKK')]"
 CANNOT_AFFORD_LAW: "Die @aut!#variable $VAL$#! sind zu hoch"
 LAW_HAS_NOT_PASSED_COOLDOWN: "Es muss bis #variable $DATE$#! gewartet werden, bevor Änderungen an dem Gesetz „$TYPE$“ vorgenommen werden können."
 LACKING_TECHNOLOGY_GLOBAL_SINGLE: "„$TECHNOLOGY$“ wurde noch #b nicht#! erfunden"
 LACKING_TECHNOLOGY_GLOBAL_MULTI: "Eines davon muss noch erfunden werden"
 LACKING_TECHNOLOGY_SINGLE: "[Country.GetAltName('NOM')|U] muss „[Technology.GetName]“ erfunden haben"
 LACKING_TECHNOLOGY_MULTI: "[Country.GetAltName('NOM')|U] muss eines der folgenden erfunden haben:\n$BREAKDOWN$"
 LACKING_TECHNOLOGY_MULTI_ENTRY: "[Technology.GetName]"
 LACKING_IDENTITY_SINGLE: "[Country.GetAltNameNoFormatting('NOM')|U] hat [concept_power_bloc_identity] „[PowerBlocIdentity.GetName]“"
 LACKING_IDENTITY_MULTI: "[Country.GetAltNameNoFormatting('NOM')] hat eine [concept_power_bloc_identity] von:\n$BREAKDOWN$"
 LACKING_IDENTITY_MULTI_ENTRY: "[PowerBlocIdentity.GetName]"
 LACKING_PRINCIPLE_SINGLE: "[Country.GetAltNameNoFormatting('NOM')] hat [concept_power_bloc_principle] „[PowerBlocPrinciple.GetName]“"
 LACKING_PRINCIPLE_MULTI: "[Country.GetAltNameNoFormatting('NOM')] hat ein [concept_power_bloc_principle] von:\n$BREAKDOWN$"
 LACKING_PRINCIPLE_MULTI_ENTRY: "[PowerBlocPrinciple.GetName]"
 LACKING_UNLOCKING_LAW_SINGLE: "[Country.GetAltName('NOM')|U] muss „$LAW$“ beschlossen haben"
 LACKING_UNLOCKING_LAW_MULTI: "[Country.GetAltName('NOM')|U] muss eines der folgenden beschlossen haben:"
 LACKING_UNLOCKING_LAW_MULTI_WITH_BREAKDOWN: "$LACKING_UNLOCKING_LAW_MULTI$\n$BREAKDOWN$"
 LACKING_UNLOCKING_LAW_MULTI_ENTRY: "[Law.GetFullName]"
 LACKING_UNLOCKING_STATE_RELIGION_SINGLE: "[GetPlayer.GetAltName('NOM')|U] hat [Religion.GetName|l] als Staats-[concept_religion]"
 LACKING_UNLOCKING_STATE_RELIGION_MULTI: "[GetPlayer.GetAltName('NOM')|U] hat eine der folgenden Religionen als Staats-[concept_religion]:"
 HAS_DISALLOWING_STATE_RELIGION_SINGLE: "[GetPlayer.GetAltName('NOM')|U] darf [Religion.GetName|l] #b nicht#! als Staats-[concept_religion] haben"
 HAS_DISALLOWING_STATE_RELIGION_MULTI: "[GetPlayer.GetAltName('NOM')|U] darf #b nicht#! eine der folgenden Religionen als Staats-[concept_religion] haben:"
 HAS_DISALLOWING_LAW_SINGLE: "Das Gesetz „$LAW$“ darf nicht beschlossen sein"
 HAS_DISALLOWING_LAW_MULTI: "Die folgenden Gesetze dürfen nicht beschlossen sein:"
 LACKING_PRODUCTION_METHOD_SINGLE: "Die PM „$PRODUCTION_METHOD$“ ist im Gebäude aktiv"
 LACKING_PRODUCTION_METHOD_MULTI: "Eine der folgenden Produktionsmethoden ist im Gebäude aktiv:"
 LACKING_PRODUCTION_METHOD_BULK: "@warning! $COUNT|v$ $concept_states$ haben inkompatible $concept_production_methods$"
 LAW_DISALLOWED_BY_LAW_SINGLE: "[COUNTRY.GetAltName('NOM')|U] darf #b nicht#! „$LAW$“ beschlossen haben"
 LAW_DISALLOWED_BY_LAW_MULTI: "[COUNTRY.GetName] darf #b keines#! der folgenden Dinge beschlossen haben:"
 REQUIRES_ACCESS_TO_GOODS: "Staat hat Zugriff auf „[Goods.GetName]“"
 REQUIRES_ACCESS_TO_GOODS_BULK: "@warning! $COUNT|v$ $concept_states$ haben keinen Zugang zu den erforderlichen $concept_goods$"
 DIPLOMATIC_ACTION_INSTANT: "[concept_instant_diplomatic_action]"
 DIPLOMATIC_ACTION_ONGOING: "[concept_ongoing_diplomatic_action]"
 DIPLOMATIC_ACTION_PACT: "[concept_diplomatic_pact]"
 DIPLOMATIC_ACTION_HEADER: "[SelectLocalization(DiplomaticAction.IsActivePact, 'DIPLOMATIC_ACTION_ACTIVE_HEADER', 'DIPLOMATIC_ACTION_NON_ACTIVE_HEADER')]"
 DIPLOMATIC_ACTION_NON_ACTIVE_HEADER: "#header #tooltippable #tooltip:[DiplomaticAction.GetTooltipTag],DIPLOMATIC_ACTION_DESC [DiplomaticAction.GetType.GetName]#!#!#!"
 DIPLOMATIC_ACTION_ACTIVE_HEADER: "#header [DiplomaticAction.GetBreakName|U]#!"
 DIPLOMATIC_ACTION_SECOND_HEADER: "„[AddLocalizationIf(DiplomaticAction.IsActivePact, Concatenate('$BREAK$', ' '))][SelectLocalization(DiplomaticAction.GetType.IsInstantDiplomaticAction, 'DIPLOMATIC_ACTION_INSTANT', 'DIPLOMATIC_ACTION_ACTIVE_PACT_OR_ONGOING_ACTION')|U]“ mit [DiplomaticAction.GetSecondCountry.GetAltName('DAT')]"
 DIPLOMATIC_ACTION_ACTIVE_PACT_OR_ONGOING_ACTION: "[SelectLocalization(DiplomaticAction.GetType.IsOngoingDiplomaticPact, 'DIPLOMATIC_ACTION_PACT', 'DIPLOMATIC_ACTION_ONGOING')][AddLocalizationIf(DiplomaticAction.IsActivePact, 'DIPLOMATIC_ACTION_ACTIVE_PACT_NAME')]"
 DIPLOMATIC_ACTION_ACTIVE_PACT_NAME: " ([DiplomaticAction.GetName])"
 BREAK: "Brechen"
 DIPLOMATIC_ACTION_DESC: "[DiplomaticAction.GetDesc]"
 DIPLOMATIC_ACTION_TOOLTIP: "[DiplomaticAction.GetTooltip]"
 DIPLOMATIC_PROPOSAL_TITLE: "[Proposal.GetDiplomaticAction.GetProposalNotificationName]"
 DIPLOMATIC_PROPOSAL_DESC: "[ConcatIfNeitherEmpty(Proposal.GetDiplomaticAction.GetMaintenanceCostForAcceptingCountryDesc, '\n\n')][Proposal.GetDiplomaticAction.GetProposalNotificationDesc]\n\n[Proposal.GetDiplomaticAction.GetActionDesc]"
 DIPLOMATIC_PROPOSAL_OFFER_OBLIGATION_DESC: "$DIPLOMATIC_PROPOSAL_DESC$\n\n$THEY_OFFER_OBLIGATION$"
 DIPLOMATIC_PROPOSAL_CALL_IN_OBLIGATION_DESC: "$DIPLOMATIC_PROPOSAL_DESC$\n\n$THEY_CALL_IN_OBLIGATION_SHORT$"
 DIPLOMATIC_PROPOSAL_BREAK_TITLE: "[Proposal.GetDiplomaticAction.GetProposalNotificationBreakName]"
 DIPLOMATIC_PROPOSAL_BREAK_DESC: "[Proposal.GetDiplomaticAction.GetProposalNotificationBreakDesc]\n\n[Proposal.GetDiplomaticAction.GetActionDesc]"
 DIPLOMATIC_ACTION_MODIFIERS: "[DiplomaticAction.GetModifierDesc]"
 DIPLOMATIC_ACTION_MODIFIER_HEADER: "#title Fügt Modifikatoren für [Country.GetAltName('AKK')] hinzu:#!"
 DIPLOMATIC_ACTION_MODIFIER_HEADER_ACTIVE: "#title Modifikatoren für [Country.GetAltName('AKK')]:#!"
 DIPLOMATIC_ACTION_MODIFIER_HEADER_BREAK: "#title Entfernt Modifikatoren für [Country.GetAltName('AKK')]:#!"
 DIPLOMATIC_ACTION_LOBBY_MEMBER_MODIFIER_HEADER: "#title Mitglieder der relevanten $LOBBY_CATEGORY$:#!"
 DIPLOMATIC_ACTION_POPUP_MAINTENANCE_COST: "Unterhalt wird uns $COST$ kosten"
 DIPLOMATIC_ACTION_POPUP_MAINTENANCE_COST_BREAK: "Unterhalt wird uns nicht mehr $COST$ kosten"
 DIPLOMATIC_ACTION_ON_ENACT: "#title Auswirkungen:#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_BREAK: "#title Wenn wir diesen [concept_diplomatic_pact] brechen:#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_END: "#title Wenn wir diese [concept_ongoing_diplomatic_action] beenden:#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_ACCEPT: "#title Falls akzeptiert:#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_DECLINE: "#title Falls abgelehnt:#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_DAILY: "#title Jeden aktiven Tag:#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_WEEKLY: "#title Jede aktive Woche:#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_MONTHLY: "#title Jeden aktiven Monat:#!\n$DESC$"
 DIPLOMATIC_ACTION_INCOME_TRANSFER: "• Würde jede Woche #tooltippable #tooltip:$BREAKDOWN_TAG$ @money!$MONEY|Kv$#!#! [COUNTRY.GetAltName('VON')] zu [TARGET_COUNTRY.GetAltName('DAT')] übertragen"
 DIPLOMATIC_ACTION_INCOME_TRANSFER_ACTIVE: "• Überträgt jede Woche #tooltippable #tooltip:$BREAKDOWN_TAG$ @money!$MONEY|Kv$#!#! [COUNTRY.GetAltName('VON')] zu [TARGET_COUNTRY.GetAltName('DAT')]"
 DIPLOMATIC_ACTION_INCOME_TRANSFER_BREAK: "• Würde nicht mehr jede Woche @money!$MONEY|Kv$ [COUNTRY.GetAltName('VON')] an [TARGET_COUNTRY.GetAltName('AKK')] übertragen"
 DIPLOMATIC_ACTION_INCOME_TRANSFER_TO_POPS: "• Würde jede Woche @money!$MONEY|Kv$ [COUNTRY.GetAltName('VON')] zu [Concept('concept_pop', '$concept_pops$')] [TARGET_COUNTRY.GetAltName('IN')] übertragen"
 DIPLOMATIC_ACTION_INCOME_TRANSFER_TO_POPS_ACTIVE: "• Überträgt jede Woche @money!$MONEY|Kv$ [COUNTRY.GetAltName('VON')] zu [Concept('concept_pop', '$concept_pops$')] [TARGET_COUNTRY.GetAltName('IN')]"
 DIPLOMATIC_ACTION_INCOME_TRANSFER_TO_POPS_BREAK: "• Würde nicht mehr jede Woche @money!$MONEY|Kv$ [COUNTRY.GetAltName('VON')] an [Concept('concept_pop', '$concept_pops$')] [TARGET_COUNTRY.GetAltName('IN')] übertragen"
 DIPLOMATIC_ACTION_NEGATIVE_INCOME_TRANSFER: "• Würde jede Woche Zahlungen [COUNTRY.GetAltName('VON')] an [TARGET_COUNTRY.GetAltName('AKK')] um #tooltippable #tooltip:$BREAKDOWN_TAG$ @money!$MONEY|Kv$#!#! verringern"
 DIPLOMATIC_ACTION_NEGATIVE_INCOME_TRANSFER_ACTIVE: "• Verringert jede Woche Zahlungen [COUNTRY.GetAltName('VON')] an [TARGET_COUNTRY.GetAltName('AKK')] um #tooltippable #tooltip:$BREAKDOWN_TAG$ @money!$MONEY|Kv$#!#!"
 DIPLOMATIC_ACTION_NEGATIVE_INCOME_TRANSFER_BREAK: "• Würde nicht mehr jede Woche Zahlungen [COUNTRY.GetAltName('VON')] an [TARGET_COUNTRY.GetAltName('AKK')] um @money!$MONEY|Kv$ verringern"
 DIPLOMATIC_ACTION_NEGATIVE_INCOME_TRANSFER_TO_POPS: "• Würde jede Woche Zahlungen [COUNTRY.GetAltName('VON')] an [Concept('concept_pop', '$concept_pops$')] [TARGET_COUNTRY.GetAltName('IN')] um @money!$MONEY|Kv$ verringern"
 DIPLOMATIC_ACTION_NEGATIVE_INCOME_TRANSFER_TO_POPS_ACTIVE: "• Verringert jede Woche Zahlungen [COUNTRY.GetAltName('VON')] an [Concept('concept_pop', '$concept_pops$')] [TARGET_COUNTRY.GetAltName('IN')] um @money!$MONEY|Kv$"
 DIPLOMATIC_ACTION_NEGATIVE_INCOME_TRANSFER_TO_POPS_BREAK: "• Verringert nicht mehr jede Woche Zahlungen [COUNTRY.GetAltName('VON')] an [Concept('concept_pop', '$concept_pops$')] [TARGET_COUNTRY.GetAltName('IN')] um @money!$MONEY|Kv$ verringern"
 DIPLOMATIC_ACTION_RIVALRY: "• Eine [concept_rivalry] mit [TARGET_COUNTRY.GetAltName('DAT')] zu haben, hat folgende Vorzüge:\n$DESC$"
 DIPLOMATIC_ACTION_RIVALRY_ACTIVE: "• Unsere [concept_rivalry] mit [TARGET_COUNTRY.GetAltName('DAT')] hat folgende Vorzüge:\n$DESC$"
 DIPLOMATIC_ACTION_RIVALRY_BREAK: "• Beendet die [concept_rivalry] mit [TARGET_COUNTRY.GetAltName('DAT')]"
 DIPLOMATIC_ACTION_EMBARGO: "• Würde ein [concept_embargo] gegen [TARGET_COUNTRY.GetAltName('AKK')] verhängen"
 DIPLOMATIC_ACTION_EMBARGO_ACTIVE: "• Hält ein [concept_embargo] gegen [TARGET_COUNTRY.GetAltName('AKK')] aufrecht"
 DIPLOMATIC_ACTION_EMBARGO_BREAK: "• Beendet ein [concept_embargo] gegen [TARGET_COUNTRY.GetAltName('AKK')]"
 DIPLOMATIC_ACTION_TECH_SPREAD: "• Würde die [concept_technology_spread] zwischen [COUNTRY.GetAltName('DAT')] und [TARGET_COUNTRY.GetAltName('DAT')] erhöhen"
 DIPLOMATIC_ACTION_TECH_SPREAD_ACTIVE: "• Erhöht die [concept_technology_spread] zwischen [COUNTRY.GetAltName('DAT')] und [TARGET_COUNTRY.GetAltName('DAT')]"
 DIPLOMATIC_ACTION_TECH_SPREAD_BREAK: "• Beendet die [concept_technology_spread] zwischen [COUNTRY.GetAltName('DAT')] und [TARGET_COUNTRY.GetAltName('DAT')]"
 DIPLOMATIC_ACTION_ALLIANCE: "• Schafft ein [concept_alliance] zwischen [COUNTRY.GetAltName('DAT')] und [TARGET_COUNTRY.GetAltName('DAT')]"
 DIPLOMATIC_ACTION_ALLIANCE_ACTIVE: "• Hält das [concept_alliance] zwischen [COUNTRY.GetAltName('DAT')] und [TARGET_COUNTRY.GetAltName('DAT')] aufrecht"
 DIPLOMATIC_ACTION_ALLIANCE_BREAK: "• Bricht das [concept_alliance] zwischen [COUNTRY.GetAltName('DAT')] und [TARGET_COUNTRY.GetAltName('DAT')]"
 DIPLOMATIC_ACTION_DEFENSIVE_PACT: "• Schafft einen [concept_defensive_pact] zwischen [COUNTRY.GetAltName('DAT')] und [TARGET_COUNTRY.GetAltName('DAT')]"
 DIPLOMATIC_ACTION_DEFENSIVE_PACT_ACTIVE: "• Hält einen [concept_defensive_pact] zwischen [COUNTRY.GetAltName('DAT')] und [TARGET_COUNTRY.GetAltName('DAT')] aufrecht"
 DIPLOMATIC_ACTION_DEFENSIVE_PACT_BREAK: "• Bricht den [concept_defensive_pact] zwischen [COUNTRY.GetAltName('DAT')] und [TARGET_COUNTRY.GetAltName('DAT')]"
 DIPLOMATIC_ACTION_GUARANTEE_INDEPENDENCE: "• Schafft eine [COUNTRY.GetAdjective|l]e [Concept('concept_guarantee_independence','$concept_guarantee_of_independence$')] für [TARGET_COUNTRY.GetAltName('AKK')]"
 DIPLOMATIC_ACTION_GUARANTEE_INDEPENDENCE_ACTIVE: "• Hält eine [COUNTRY.GetAdjective|l]e [Concept('concept_guarantee_independence','$concept_guarantee_of_independence$')] für [TARGET_COUNTRY.GetAltName('AKK')] aufrecht"
 DIPLOMATIC_ACTION_GUARANTEE_INDEPENDENCE_BREAK: "• Entfernt [COUNTRY.GetAdjective|l]e [Concept('concept_guarantee_independence','$concept_guarantee_of_independence$')] für [TARGET_COUNTRY.GetAltName('AKK')]"
 DIPLOMATIC_ACTION_TRADE_AGREEMENT: "• Schafft ein [concept_trade_privilege] zwischen [COUNTRY.GetAltName('DAT')] und [TARGET_COUNTRY.GetAltName('DAT')]"
 DIPLOMATIC_ACTION_TRADE_AGREEMENT_ACTIVE: "• Unterhält ein [concept_trade_privilege] zwischen [COUNTRY.GetAltName('DAT')] und [TARGET_COUNTRY.GetAltName('DAT')]"
 DIPLOMATIC_ACTION_TRADE_AGREEMENT_BREAK: "• Verstößt gegen das [concept_trade_privilege] zwischen [COUNTRY.GetAltName('DAT')] und [TARGET_COUNTRY.GetAltName('DAT')]"
 DIPLOMATIC_ACTION_FOREIGN_INVESTMENT_RIGHTS: "• [TARGET_COUNTRY.GetAltName('NOM')|U] wird [COUNTRY.GetAltName('DAT')] [concept_foreign_investment_rights] gewähren"
 DIPLOMATIC_ACTION_FOREIGN_INVESTMENT_RIGHTS_ACTIVE: "• [TARGET_COUNTRY.GetAltName('NOM')|U] gewährt [COUNTRY.GetAltName('DAT')] [concept_foreign_investment_rights]"
 DIPLOMATIC_ACTION_FOREIGN_INVESTMENT_RIGHTS_BREAK: "• Beendet die [COUNTRY.GetAltName('DAT')] [TARGET_COUNTRY.GetAltName('VON')] gewährten [Concept('concept_foreign_investment_rights', 'ausländischen Investitionsrechte')]"
 DIPLOMATIC_ACTION_MUTUAL_FOREIGN_INVESTMENT_RIGHTS: "• [COUNTRY.GetAltName('NOM')|U] und [TARGET_COUNTRY.GetAltName('NOM')] werden sich gegenseitige [concept_foreign_investment_rights] gewähren"
 DIPLOMATIC_ACTION_MUTUAL_FOREIGN_INVESTMENT_RIGHTS_ACTIVE: "• [COUNTRY.GetAltName('NOM')|U] und [TARGET_COUNTRY.GetAltName('NOM')] gewähren einander gegenseitige [concept_foreign_investment_rights]"
 DIPLOMATIC_ACTION_MUTUAL_FOREIGN_INVESTMENT_RIGHTS_BREAK: "• Beendet die gegenseitigen [Concept('concept_foreign_investment_rights', 'ausländischen Investitionsrechte')] zwischen [COUNTRY.GetAltName('DAT')] und [TARGET_COUNTRY.GetAltName('DAT')]"
 DIPLOMATIC_ACTION_SUBJECT_RELATION: "• Erschafft eine [concept_subject]-Beziehung „$SUBJECT_TYPE$“ zwischen [COUNTRY.GetAltName('DAT')] und [TARGET_COUNTRY.GetAltName('DAT')] mit [COUNTRY.GetAltName('DAT')] als Suzerän"
 DIPLOMATIC_ACTION_SUBJECT_RELATION_ACTIVE: "• Hält die [concept_subject]-Beziehung „$SUBJECT_TYPE$“ zwischen [COUNTRY.GetAltName('DAT')] und [TARGET_COUNTRY.GetAltName('DAT')] aufrecht"
 DIPLOMATIC_ACTION_SUBJECT_RELATION_BREAK: "• Beendet die [concept_subject]-Beziehung der Art „$SUBJECT_TYPE$“ zwischen [COUNTRY.GetAltName('DAT')] und [TARGET_COUNTRY.GetAltName('DAT')]"
 DIPLOMATIC_ACTION_RELATIONS_CHANGE_POS_EFFECT: "• Verbessert [concept_relations] um #g +1#! alle $DAYS|v$ Tage$MAXDESC$"
 DIPLOMATIC_ACTION_RELATIONS_CHANGE_NEG_EFFECT: "• Verschlechtert [concept_relations] um #r -1#! alle $DAYS|v$ Tage$MINDESC$"
 DIPLOMATIC_ACTION_RELATIONS_CHANGE_POS_BREAK_EFFECT: "• Würde nicht mehr [concept_relations] um #g +1#! alle $DAYS|v$ Tage verbessern$MAXDESC$"
 DIPLOMATIC_ACTION_RELATIONS_CHANGE_NEG_BREAK_EFFECT: "• Würde nicht mehr [concept_relations] um #r -1#! alle $DAYS|v$ Tage verschlechtern$MINDESC$"
 DIPLOMATIC_ACTION_EXEMPT_FROM_SERVICE: "• Würde [TARGET_COUNTRY.GetAltName('AKK')] vom Beitritt zu [COUNTRY.GetAdjective|l]en [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$n')] ausschließen"
 DIPLOMATIC_ACTION_EXEMPT_FROM_SERVICE_ACTIVE: "• Schließt [TARGET_COUNTRY.GetAltName('AKK')] vom Beitritt zu [COUNTRY.GetAdjective|l]en [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$n')] aus"
 DIPLOMATIC_ACTION_EXEMPT_FROM_SERVICE_BREAK: "• Schließt [TARGET_COUNTRY.GetAltName('AKK')] nicht mehr vom Beitritt zu [COUNTRY.GetAdjective|l]en [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$n')] aus"
 DIPLOMATIC_ACTION_MARKET_CONTROL: "• Würde [COUNTRY.GetAltName('DAT')] die Kontrolle über den eigenen [concept_market] gewähren"
 DIPLOMATIC_ACTION_MARKET_CONTROL_ACTIVE: "• Gewährt [COUNTRY.GetAltName('DAT')] die Kontrolle über den eigenen [concept_market]"
 DIPLOMATIC_ACTION_MARKET_CONTROL_BREAK: "• Bringt [COUNTRY.GetAltName('AKK')] zurück auf den [concept_market] [Concept('concept_overlord','$concept_overlord_possessive$')]"
 DIPLOMATIC_ACTION_AUTO_SUPPORT: "• [COUNTRY.GetAltName('NOM')|U] wird automatisch [TARGET_COUNTRY.GetAltName('AKK')] in [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')] ($LIST$) unterstützen"
 DIPLOMATIC_ACTION_AUTO_SUPPORT_ACTIVE: "• [COUNTRY.GetAltName('NOM')|U] unterstützt automatisch [TARGET_COUNTRY.GetAltName('AKK')] in [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')] ($LIST$)"
 DIPLOMATIC_ACTION_AUTO_SUPPORT_BREAK: "• [COUNTRY.GetAltName('NOM')|U] wird nicht mehr automatisch [TARGET_COUNTRY.GetAltName('AKK')] in [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')] ($LIST$) unterstützen"
 THEY_OFFER_OBLIGATION: "Sie bieten an, eine [concept_obligation] uns gegenüber einzugehen, wenn wir annehmen."
 THEY_CALL_IN_OBLIGATION_SHORT: "Sie fordern eine [concept_obligation] ein, weshalb eine Ablehnung ihres Angebots negative diplomatische Folgen für uns haben würde."
 THEY_CALL_IN_OBLIGATION: "@warning! Sie fordern eine [concept_obligation] ein. Eine Ablehnung würde folgende Auswirkungen für uns haben:\n$REPUDIATE_OBLIGATION_EFFECTS$"
 WE_NOW_OWE_OBLIGATION: "Wir haben jetzt eine [concept_obligation] ihnen gegenüber"
 THEY_USED_OBLIGATION: "Sie haben eine [concept_obligation] genutzt, um uns zur Annahme zu zwingen."
 REPUDIATE_OBLIGATION_EFFECTS: "– Stark verminderte [concept_relations] zu dem [concept_country], dessen [concept_obligation] wir abgelehnt haben\n– Verminderte [concept_relations] zu allen anderen Ländern, denen wir eine [concept_obligation] schulden\n– Vermindertes [concept_prestige], langsameres Abklingen von [concept_infamy] und ein weit verbreitetes Misstrauen gegenüber neuen [Concept('concept_obligation', '$concept_obligations$')] von uns für einen Zeitraum von 5 Jahren."
 repudiated_obligation: "Kam Verpflichtung nicht nach"
 TRADE_DEFICIT_SURPLUS: "Handelsdefizit/-überschuss"
 TRADE_DEFICIT_SURPLUS_VALUE: "[Market.GetTradeSurplus|=v%0]"
 TRADE_SURPLUS_TOOLTIP: "[Market.GetTradeSurplusBreakdown]"
 TRADE_SURPLUS_EXPORTS_BREAKDOWN_DESC: "#header Wert der [Concept('concept_trade','$concept_exports$')]#!\n@money!$VALUE|Kv=$ in $MARKET_NAME$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 TRADE_SURPLUS_IMPORTS_BREAKDOWN_DESC: "#header Wert der [Concept('concept_trade','$concept_imports$')]#!\n@money!$VALUE|Kv=$ in $MARKET_NAME$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 TRADE_SURPLUS_BREAKDOWN_DESC: "#header $TRADE_DEFICIT_SURPLUS$#!\n[Market.GetTradeSurplus|=v%0] in $MARKET_NAME$\n$TOOLTIP_DELIMITER$\n#tooltippable;tooltip:$EXPORTS_BREAKDOWN_TAG$ @money!$EXPORTS_VALUE|Kv$#! in [Concept('concept_trade','$concept_exports$')]\n#tooltippable;tooltip:$IMPORTS_BREAKDOWN_TAG$ @money!$IMPORTS_VALUE|Kv$#! in [Concept('concept_trade','$concept_imports$')]\n\n@information! Handelsdefizit/-überschuss wird berechnet, indem der Gesamtexportwert durch den Gesamtimportwert geteilt wird."
 TRADE_SURPLUS_EXPORTS_ENTRY: "@money!$VALUE|Kv=$ durch $AMOUNT|v0D$ [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 TRADE_SURPLUS_IMPORTS_ENTRY: "@money!$VALUE|Kv=$ durch $AMOUNT|v0D$ [Goods.GetTextIcon][Nbsp][Goods.GetName]"
 proposal_break_pact_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakName]"
 proposal_break_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakDesc]"
 proposal_break_pact_tooltip: "#title $proposal_break_pact_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_break_pact_desc$"
 proposal_break_pact_owe_obligation_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakName]"
 proposal_break_pact_owe_obligation_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakDesc]\n\n$THEY_OFFER_OBLIGATION$"
 proposal_break_pact_owe_obligation_tooltip: "#header $proposal_break_pact_owe_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_break_pact_owe_obligation_desc$"
 proposal_break_pact_call_in_obligation_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakName]"
 proposal_break_pact_call_in_obligation_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakDesc]\n\n$THEY_CALL_IN_OBLIGATION$"
 proposal_break_pact_call_in_obligation_tooltip: "#header $proposal_break_pact_call_in_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_break_pact_call_in_obligation_desc$"
 proposal_diplomatic_action_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationName]"
 proposal_diplomatic_action_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationDesc]"
 proposal_diplomatic_action_tooltip: "#header $proposal_diplomatic_action_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_diplomatic_action_desc$"
 proposal_treaty_name: "[SCOPE.GetRootScope.GetTreaty.GetNameNoFormatting]"
 proposal_treaty_desc: "[SCOPE.GetRootScope.GetTreaty.GetBindingPeriodFormatted] [concept_binding_period]\n\n#title Auswirkungen:#!#indent_newline:3 [ConcatIfNeitherEmpty('\n', SCOPE.GetRootScope.GetTreaty.GetEffectsDesc)][ConcatIfNeitherEmpty('\n', SCOPE.GetRootScope.GetTreaty.GetDirectedEffectsDesc(SCOPE.GetRootScope.GetTreaty.GetFirstCountry.Self))][ConcatIfNeitherEmpty('\n', SCOPE.GetRootScope.GetTreaty.GetDirectedEffectsDesc(SCOPE.GetRootScope.GetTreaty.GetSecondCountry.Self))][ConcatIfNeitherEmpty('\n', SCOPE.GetRootScope.GetTreaty.GetRelationsEffectDesc)][ConcatIfNeitherEmpty('\n', SCOPE.GetRootScope.GetTreaty.GetMutualModifierDesc)][ConcatIfNeitherEmpty('\n', SCOPE.GetRootScope.GetTreaty.GetSourceModifierDesc)]#![ConcatIfNeitherEmpty('\n', SCOPE.GetRootScope.GetTreaty.GetTargetModifierDesc)]"
 proposal_treaty_tooltip: "#header $proposal_treaty_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_treaty_desc$"
 proposal_diplomatic_action_owe_obligation_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationName]"
 proposal_diplomatic_action_owe_obligation_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationDesc]\n\n$THEY_OFFER_OBLIGATION$"
 proposal_diplomatic_action_owe_obligation_tooltip: "#header $proposal_diplomatic_action_owe_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_diplomatic_action_owe_obligation_desc$"
 proposal_diplomatic_action_call_in_obligation_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationName]"
 proposal_diplomatic_action_call_in_obligation_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationDesc]\n\n$THEY_CALL_IN_OBLIGATION$"
 proposal_diplomatic_action_call_in_obligation_tooltip: "#header $proposal_diplomatic_action_call_in_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_diplomatic_action_call_in_obligation_desc$"
 proposal_sway_offer_tooltip: "#header $proposal_sway_offer_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_sway_offer_desc$"
 proposal_sway_offer_name: "Beeinflussungsversuch"
 proposal_sway_offer_desc: "#variable [SCOPE.sC('actor').GetAltName('NOM')|U]#! versucht, uns bei seinem [concept_diplomatic_play] gegen #variable [SCOPE.sC('target').GetAltName('AKK')]#! so zu beeinflussen, dass wir auf seiner Seite stehen."
 proposal_reverse_sway_offer_tooltip: "#header $proposal_reverse_sway_offer_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_reverse_sway_offer_desc$"
 proposal_reverse_sway_offer_name: "Unterstützungsangebot"
 proposal_reverse_sway_offer_desc: "#variable [SCOPE.sC('actor').GetAltName('NOM')|U]#! bietet uns Unterstützung im [concept_diplomatic_play] gegen #variable [SCOPE.sC('target').GetAltName('DAT')]#! an."
 proposal_diplomatic_demand_tooltip: "#header $proposal_diplomatic_demand_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_diplomatic_demand_desc$"
 proposal_diplomatic_demand_name: "[concept_diplomatic_demand]"
 proposal_diplomatic_demand_desc: "[SCOPE.sC('actor').GetAltName('NOM')|U] fordert ‚[SCOPE.GetRootScope.GetDiplomaticDemand.GetDemandedWarGoal.GetName]‘ von uns."
 notification_diplomatic_action_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationName]"
 notification_diplomatic_action_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationDesc]"
 notification_diplomatic_action_notification_tooltip: "#header $notification_diplomatic_action_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_action_notification_desc$"
 notification_diplomatic_action_used_obligation_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationName]"
 notification_diplomatic_action_used_obligation_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationDesc]\n$THEY_USED_OBLIGATION$"
 notification_diplomatic_action_used_obligation_notification_tooltip: "#header $notification_diplomatic_action_used_obligation_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_action_used_obligation_notification_desc$"
 notification_diplomatic_proposal_accepted_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalAcceptedName]"
 notification_diplomatic_proposal_accepted_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalAcceptedDesc]"
 notification_diplomatic_proposal_accepted_tooltip: "#header $notification_diplomatic_proposal_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_accepted_desc$"
 notification_diplomatic_proposal_accepted_owe_obligation_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalAcceptedName]"
 notification_diplomatic_proposal_accepted_owe_obligation_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalAcceptedDesc]\n$WE_NOW_OWE_OBLIGATION$"
 notification_diplomatic_proposal_accepted_owe_obligation_tooltip: "#header $notification_diplomatic_proposal_accepted_owe_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_accepted_owe_obligation_desc$"
 notification_diplomatic_proposal_declined_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalDeclinedName]"
 notification_diplomatic_proposal_declined_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalDeclinedDesc]"
 notification_diplomatic_proposal_declined_tooltip: "#header $notification_diplomatic_proposal_declined_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_declined_desc$"
 notification_diplomatic_action_overlord_decrease_autonomy_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetAltName('NOM')|U] änderte [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetAltName('AKK')] zu „[SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetSubjectType.GetName]“"
 notification_diplomatic_action_overlord_decrease_autonomy_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetAltName('NOM')|U] verringerte die [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetAdjective|l]e [concept_autonomy] [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetSubjectType.GetHigherAutonomySubjectType(SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry).GetAltName('VON')] und machte diese Nation zu: „[SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetSubjectType.GetName]“"
 notification_diplomatic_action_overlord_decrease_autonomy_notification_tooltip: "#header $notification_overlord_decrease_autonomy_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_overlord_decrease_autonomy_notification_desc$"
 notification_diplomatic_action_overlord_increase_autonomy_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetAltName('NOM')|U] änderte [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetAltName('AKK')] zu „[SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetSubjectType.GetName]“"
 notification_diplomatic_action_overlord_increase_autonomy_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetAltName('NOM')|U] erhöhte die [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetAdjective|l]e [concept_autonomy] [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetSubjectType.GetLowerAutonomySubjectType(SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry).GetAltName('VON')] und machte diese Nation zu: „[SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetSubjectType.GetName]“"
 notification_diplomatic_action_overlord_increase_autonomy_notification_tooltip: "#header $notification_diplomatic_action_overlord_increase_autonomy_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_action_overlord_increase_autonomy_notification_desc$"
 notification_diplomatic_action_subject_increase_own_autonomy_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetAltName('NOM')|U] zu „[SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetSubjectType.GetName]“ geändert"
 notification_diplomatic_action_subject_increase_own_autonomy_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetAltName('NOM')|U] erhöhte die [concept_autonomy] [SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetSubjectType.GetLowerAutonomySubjectType(SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry).GetAltName('VON')] und machte diese Nation zu: „[SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetSubjectType.GetName]“"
 notification_diplomatic_action_subject_increase_own_autonomy_notification_tooltip: "#header $notification_subject_increase_autonomy_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_subject_increase_autonomy_notification_desc$"
 notification_diplomatic_action_break_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationBreakName]"
 notification_diplomatic_action_break_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationBreakDesc]"
 notification_diplomatic_action_break_notification_tooltip: "#header $notification_diplomatic_action_break_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_action_break_notification_desc$"
 notification_diplomatic_action_break_used_obligation_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationBreakName]"
 notification_diplomatic_action_break_used_obligation_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationBreakDesc]\n$THEY_USED_OBLIGATION$"
 notification_diplomatic_action_break_used_obligation_notification_tooltip: "#header $notification_diplomatic_action_break_used_obligation_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_action_break_used_obligation_notification_desc$"
 notification_diplomatic_proposal_break_accepted_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakAcceptedName]"
 notification_diplomatic_proposal_break_accepted_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakAcceptedDesc]"
 notification_diplomatic_proposal_break_accepted_tooltip: "#header $notification_diplomatic_proposal_break_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_break_accepted_desc$"
 notification_diplomatic_proposal_break_accepted_owe_obligation_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakAcceptedName]"
 notification_diplomatic_proposal_break_accepted_owe_obligation_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakAcceptedDesc]\n$WE_NOW_OWE_OBLIGATION$"
 notification_diplomatic_proposal_break_accepted_owe_obligation_tooltip: "#header $notification_diplomatic_proposal_break_accepted_owe_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_break_accepted_owe_obligation_desc$"
 notification_diplomatic_proposal_break_declined_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakDeclinedName]"
 notification_diplomatic_proposal_break_declined_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakDeclinedDesc]"
 notification_diplomatic_proposal_break_declined_tooltip: "#header $notification_diplomatic_proposal_break_declined_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_break_declined_desc$"
 notification_diplomatic_proposal_third_party_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyName]"
 notification_diplomatic_proposal_third_party_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyDesc]"
 notification_diplomatic_proposal_third_party_notification_tooltip: "#header $notification_diplomatic_proposal_third_party_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_notification_desc$"
 notification_diplomatic_proposal_third_party_break_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakName]"
 notification_diplomatic_proposal_third_party_break_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakDesc]"
 notification_diplomatic_proposal_third_party_break_notification_tooltip: "#header $notification_diplomatic_proposal_third_party_break_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_break_notification_desc$"
 notification_diplomatic_proposal_third_party_accepted_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyAcceptedName]"
 notification_diplomatic_proposal_third_party_accepted_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyAcceptedDesc]"
 notification_diplomatic_proposal_third_party_accepted_tooltip: "#header $notification_diplomatic_proposal_third_party_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_accepted_desc$"
 notification_diplomatic_proposal_third_party_declined_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyDeclinedName]"
 notification_diplomatic_proposal_third_party_declined_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyDeclinedDesc]"
 notification_diplomatic_proposal_third_party_declined_tooltip: "#header $notification_diplomatic_proposal_third_party_declined_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_declined_desc$"
 notification_diplomatic_proposal_third_party_break_accepted_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakAcceptedName]"
 notification_diplomatic_proposal_third_party_break_accepted_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakAcceptedDesc]"
 notification_diplomatic_proposal_third_party_break_accepted_tooltip: "#header $notification_diplomatic_proposal_third_party_break_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_break_accepted_desc$"
 notification_diplomatic_proposal_third_party_break_declined_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakDeclinedName]"
 notification_diplomatic_proposal_third_party_break_declined_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakDeclinedDesc]"
 notification_diplomatic_proposal_third_party_break_declined_tooltip: "#header $notification_diplomatic_proposal_third_party_break_declined_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_break_declined_desc$"
 notification_diplomatic_pact_auto_break_notification_name: "„[SCOPE.GetRootScope.GetDiplomaticPact.GetName]“ gebrochen"
 notification_diplomatic_pact_auto_break_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetName] mit [AddTextIf(SCOPE.GetRootScope.GetDiplomaticPact.IsFirstCountry(GetPlayer), SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('DAT'))][AddTextIf(SCOPE.GetRootScope.GetDiplomaticPact.IsSecondCountry(GetPlayer), SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('DAT'))] kann nicht länger aufrechterhalten werden, da folgende Bedingungen nicht mehr zutreffen:\n[SCOPE.GetRootScope.GetDiplomaticPact.GetAutoBreakReasonDesc]"
 notification_diplomatic_pact_auto_break_notification_tooltip: "#header $notification_diplomatic_pact_auto_break_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_pact_auto_break_notification_desc$"
 notification_diplomatic_pact_third_party_auto_break_notification_name: "„[SCOPE.GetRootScope.GetDiplomaticPact.GetName]“ gebrochen"
 notification_diplomatic_pact_third_party_auto_break_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetName] mit [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('DAT')] und [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('DAT')] kann nicht länger aufrechterhalten werden, da folgende Bedingungen nicht mehr zutreffen:\n[SCOPE.GetRootScope.GetDiplomaticPact.GetAutoBreakReasonDesc]"
 notification_diplomatic_pact_third_party_auto_break_notification_tooltip: "#header $notification_diplomatic_pact_third_party_auto_break_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_pact_third_party_auto_break_notification_desc$"
 notification_character_died_notification_name: "[SCOPE.GetRootScope.GetCharacter.GetFullName] ([SCOPE.GetRootScope.GetCharacter.GetPrimaryRoleName]) ist gestorben"
 notification_character_died_notification_desc: "[SCOPE.GetRootScope.GetCharacter.GetPrimaryRoleName] [SCOPE.GetRootScope.GetCharacter.GetFullName], ist gestorben."
 notification_character_died_notification_tooltip: "$notification_character_died_notification_name$\n$notification_character_died_notification_desc$"
 notification_character_new_formation_notification_name: "[SCOPE.GetRootScope.GetCharacter.GetFullName] ([SCOPE.GetRootScope.GetCharacter.GetPrimaryRoleName]) hat neue [concept_military_formation]"
 notification_character_new_formation_notification_desc: "[SCOPE.GetRootScope.GetCharacter.GetFullName] gehört jetzt zu [AccessScopeReference(SCOPE.GetRootScope).AccessCharacter.GetMilitaryFormation.GetName]"
 notification_character_new_formation_notification_tooltip: "$notification_character_new_formation_notification_name$\n$notification_character_new_formation_notification_desc$"
 notification_character_died_war_office_notification_name: "$notification_character_died_notification_name$"
 notification_character_died_war_office_notification_desc: "Unser Charakter [SCOPE.GetRootScope.GetCharacter.GetFullName] ist in der Kriegskanzlei gestorben"
 notification_character_died_war_office_notification_tooltip: "$notification_character_died_war_office_notification_name$\n$notification_character_died_war_office_notification_desc$"
 notification_agitator_spawned_name: "Ein [concept_agitator] erscheint!"
 notification_agitator_spawned_desc: "[SCOPE.sCha('character').GetAgitatorSpawnedNotificationText]"
 notification_agitator_spawned_tooltip: "$notification_agitator_spawned_name$\n$notification_agitator_spawned_desc$"
 notification_acquired_technology_notification_name: "„[SCOPE.sT('technology').GetName]“ erlangt!"
 notification_acquired_technology_notification_desc: "Wir haben die Technik „[SCOPE.sT('technology').GetName]“ erlangt"
 notification_acquired_technology_notification_tooltip: "$notification_acquired_technology_notification_name$\n$notification_acquired_technology_notification_desc$"
 notification_spreading_technology_notification_name: "„[SCOPE.sT('technology').GetName]“ breitet sich aus"
 notification_spreading_technology_notification_desc: "Wissen über die Technik „[SCOPE.sT('technology').GetName]“ hat begonnen, sich in unserem Land zu verbreiten"
 notification_spreading_technology_notification_tooltip: "$notification_spreading_technology_notification_name$\n$notification_spreading_technology_notification_desc$"
 notification_price_report_name: "Monatlicher Preisbericht für den Markt „[SCOPE.GetRootScope.GetCountry.GetCapital.GetMarket.GetName]“"
 notification_price_report_desc: "[SCOPE.GetRootScope.GetCountry.GetPriceReportDesc]"
 notification_price_report_tooltip: "$notification_price_report_name$\n$notification_price_report_desc$"
 notification_law_changed_notification_name: "„[SCOPE.GetRootScope.GetLaw.GetName]“ verabschiedet"
 notification_law_changed_notification_desc: "Wir haben das Gesetz „[SCOPE.GetRootScope.GetLaw.GetName]“ erfolgreich beschlossen"
 notification_law_changed_notification_tooltip: "$notification_law_changed_notification_name$\n$notification_law_changed_notification_desc$"
 notification_claim_added_notification_name: "[SCOPE.sC('actor').GetName] [Concept('concept_claim','beansprucht')] [SCOPE.sStateRegion('region').GetName]"
 notification_claim_added_notification_desc: "[SCOPE.sStateRegion('region').GetName] wird jetzt [Concept('concept_claim','$concept_claimed$')|U] [SCOPE.sC('actor').GetAltName('VON')|U]"
 notification_claim_added_notification_tooltip: "$notification_claim_added_notification_name$\n$notification_claim_added_notification_desc$"
 notification_institution_investment_increased_name: "Investitionsstufe der Institution „[SCOPE.GetRootScope.GetInstitution.GetName]“ erhöht"
 notification_institution_investment_increased_desc: "Die Investitionsstufe der Institution „[SCOPE.GetRootScope.GetInstitution.GetName]“ wurde auf [SCOPE.GetRootScope.GetInstitution.GetInvestmentLevel|v] erhöht"
 notification_institution_investment_increased_tooltip: "$notification_institution_investment_increased_name$\n$notification_institution_investment_increased_desc$\n\n#i Auswirkung:#!\n[SCOPE.GetRootScope.GetInstitution.GetModifier.GetDesc]"
 notification_institution_investment_decreased_name: "Investitionsstufe der Institution „[SCOPE.GetRootScope.GetInstitution.GetName]“ verringert#!"
 notification_institution_investment_decreased_desc: "Die Investitionsstufe der Institution „[SCOPE.GetRootScope.GetInstitution.GetName]“ wurde auf [SCOPE.GetRootScope.GetInstitution.GetInvestmentLevel|v] verringert"
 notification_institution_investment_decreased_tooltip: "$notification_institution_investment_decreased_name$\n$notification_institution_investment_decreased_desc$\n\n#i Auswirkung:#!\n[SCOPE.GetRootScope.GetInstitution.GetModifier.GetDesc]"
 notification_rank_changed_notification_name: "Machtrang geändert"
 notification_rank_changed_notification_desc: "Wir sind jetzt [SCOPE.sC('actor').GetRank|v]"
 notification_rank_changed_notification_tooltip: "$notification_rank_changed_notification_name$\n$notification_rank_changed_notification_desc$"
 notification_heir_born_notification_name: "Erbe geboren"
 notification_heir_born_notification_desc: "[SCOPE.GetRootScope.GetCharacter.GetFullName], [concept_heir] des Throns [SCOPE.GetRootScope.GetCharacter.GetCountry.GetAltName('VON')], wurde geboren"
 notification_heir_born_notification_tooltip: "$notification_heir_born_notification_name$\n$notification_heir_born_notification_desc$"
 notification_cobelligerent_in_default_notification_name: "Kriegsmitbeteiligter ist zahlungsunfähig"
 notification_cobelligerent_in_default_notification_desc: "[SCOPE.sC('in_default_country').GetAltName('NOM')|U] ist [concept_default|l]. Das Land wird mit größerer Wahrscheinlichkeit kapitulieren oder einen Frieden annehmen."
 notification_cobelligerent_in_default_notification_tooltip: "$notification_cobelligerent_in_default_notification_name$\n$notification_cobelligerent_in_default_notification_desc$"
 notification_country_nationalized_building_name: "[SCOPE.GetRootScope.GetBuilding.GetState.GetCountry.GetAltName('NOM')|U] verstaatlichte Gebäude"
 notification_country_nationalized_building_desc: "[SCOPE.GetRootScope.GetBuilding.GetState.GetCountry.GetAltName('NOM')|U] [Concept('concept_nationalize','verstaatlichte')] [SCOPE.GetRootScope.GetBuilding.GetName] in „[SCOPE.GetRootScope.GetBuilding.GetState.GetName]“ und zahlt dafür eine Entschädigung von #v @money![SCOPE.GetValue('number')|D]#!\n\nDiese Handlungen haben unsere gegenseitigen Beziehungen um [SCOPE.GetValue('relations')|=+0] verschlechtert"
 notification_country_nationalized_building_tooltip: "$notification_nationalized_building_notification_name$\n$notification_nationalized_building_notification_desc$"
 notification_country_nationalized_building_no_compensation_name: "[SCOPE.GetRootScope.GetBuilding.GetState.GetCountry.GetAltName('NOM')|U] verstaatlichte Gebäude"
 notification_country_nationalized_building_no_compensation_desc: "[SCOPE.GetRootScope.GetBuilding.GetState.GetCountry.GetAltName('NOM')|U] [Concept('concept_nationalize','verstaatlichte')] [SCOPE.GetRootScope.GetBuilding.GetName] in „[SCOPE.GetRootScope.GetBuilding.GetState.GetName]“ und zahlt dafür keine Entschädigung\n\nDiese Handlungen haben unsere gegenseitigen Beziehungen um [SCOPE.GetValue('relations')|=+0] verschlechtert"
 notification_country_nationalized_building_no_compensation_tooltip: "$notification_nationalized_building_notification_name$\n$notification_nationalized_building_notification_desc$"
 notification_fleet_defeated_name: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] besiegt"
 notification_fleet_defeated_desc: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] muss ins HQ „[SCOPE.sHQ('hq').GetName]“ zurückkehren."
 notification_fleet_defeated_tooltip: "$notification_fleet_defeated_notification_name$\n$notification_fleet_defeated_notification_desc$"
 notification_fleet_repaired_name: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] repariert"
 notification_fleet_repaired_desc: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] wurde vollständig repariert."
 notification_fleet_repaired_tooltip: "$notification_fleet_repaired_notification_name$\n$notification_fleet_repaired_notification_desc$"
 notification_enemy_in_default_notification_name: "Feind ist zahlungsunfähig"
 notification_enemy_in_default_notification_desc: "[SCOPE.sC('in_default_country').GetAltName('NOM')|U] ist [concept_default|l]. Das Land wird mit größerer Wahrscheinlichkeit kapitulieren oder einen Frieden annehmen."
 notification_enemy_in_default_notification_tooltip: "$notification_enemy_in_default_notification_name$\n$notification_enemy_in_default_notification_desc$"
 notification_formation_could_not_find_other_formation_to_automatically_merge_into_name: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] konnte keine andere [concept_military_formation] zum Zusammenführen finden"
 notification_formation_could_not_find_other_formation_to_automatically_merge_into_desc: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] konnte keine andere [concept_military_formation] zum Zusammenführen finden; sie wird daher in [SCOPE.sHQ('hq').GetName] stationiert"
 notification_formation_could_not_find_other_formation_to_automatically_merge_into_tooltip: "$notification_formation_could_not_find_other_formation_to_automatically_merge_into_name$\n$notification_formation_could_not_find_other_formation_to_automatically_merge_into_desc$"
 COMMANDER_COMBAT_UNIT_HEADER: "[CHARACTER.GetFullName]:"
 HQ_TROOP_ALLOCATION_CHANGE_HEADER: "Truppenänderungen in [HQ.GetNameNoFlag]:"
 HQ_TROOP_ALLOCATION_CHANGE_COMMANDER: "[CHARACTER.GetFullName]:"
 HQ_TROOP_ALLOCATION_CHANGE_ENTRY: "[Hq.GetCombatUnitsIcon] #v $VALUE|+=$#! durch [BUILDING.GetName] in [State.GetName]"
 HQ_TROOP_ALLOCATION_CHANGE_UNIT_TYPE: "$ICON_STR$ #tooltippable #tooltip:$BREAKDOWN$ $VALUE|+=$#!#! $UNIT_TYPE_NAME$"
 MILITARY_PANEL_GENERALS: "#ITALIC Generäle#!"
 MILITARY_PANEL_ADMIRALS: "#ITALIC Admiräle#!"
 HQ_PANEL_HOME_STATISTICS: "#title Statistik#!"
 HQ_PANEL_TOTAL_HEADER: "#title Derzeit in [Hq.GetNameNoFlag]#!"
 HQ_MAP_MARKER_TOOLTIP: "#header [Hq.GetName]#!"
 FRONT_SUPPLIED_BY_HQ_ITEM: "$TAB$@battalions! #v $NUM$#! zur Front „[Front.GetName]“\n"
 CAN_TRAIN_NO_BARRACKS: "#N Wir haben keine $BUILDING_NAMES$.#!"
 CAN_TRAIN_NO_BARRACKS_OR: "oder"
 CAN_TRAIN_MAXIMUM_SOLDIERS: "#N Wir haben das Maximum an Soldaten erreicht#!"
 CAN_TRAIN_REACHED_TARGET: "#N Wir haben das Stärkepunkte-Ziel erreicht#!"
 CAN_TRAIN_NO_BUDGET: "#N Euer derzeitiger Etat reicht nicht aus, um weitere Truppen auszubilden#!"
 CONDITIONS_TOOLTIP: "\n#title Bedingungen:#!\n$CONDITIONS$"
 MODIFIERS_TOOLTIP: "#header [InterestGroupModifier.GetName]#!\n$TOOLTIP_DELIMITER$\n[InterestGroupModifier.GetDesc]\n\nVerbleibende Zeit: [InterestGroupModifier.GetRemainingDays]"
 STATE_INDUSTRY_OUTPUT_MULT: "TEST"
 STATE_INDUSTRY_OUTPUT_MULT_desc: "TESTING_DESC"
 TECHNOLOGY_PLACE_IN_QUEUE: "#header [Technology.GetName]#!\n#v ##[Technology.GetResearchQueuePosition(GetPlayer.Self)]#! in Reihe\nVoraussichtlich erforscht in [Technology.PredictTimeLeftInQueueDesc(GetPlayer.Self)]"
 ELECTION_RESULTS_TITLE: "#BOLD Wahlergebnisse <2>#!"
 TOTAL_VOTES_TITLE: "#title Stimmen insgesamt#!"
 LOCATION_TITLE: "#title Ort#!"
 COUNTRY_TITLE: "#title Land#!"
 TOTAL_POLITICAL_STRENGTH_TITLE: "#title [concept_political_strength] insgesamt#!"
 TOTAL_CAPITAL_GAIN_TITLE: "#title Erhaltene [concept_authority]#!"
 POPULATION_TITLE: "#title Bevölkerung#!"
 WORKING_ADULTS_TITLE: "#title Beschäftigte#!"
 WORKING_ADULTS_INCOME_TITLE: "#title Beschäftigten-Einkommen#!"
 DEPENDENTS_TITLE: "#title Angehörige#!"
 DEPENDENTS_INCOME_TITLE: "#title Angehörigen-Einkommen#!"
 VOTES_TITLE: "#title Stimmen#!"
 CULTURE_TITLE: "#title [concept_culture]#!"
 RELIGION_TITLE: "#title [concept_religion]#!"
 MAJORITY_RELIGION_TITLE: "Mehrheitsreligion"
 POL_STR_TITLE: "[concept_political_strength]"
 POLITICAL_STRENGTH_TITLE: "#title [concept_political_strength]#!"
 TOTAL_CAPITAL_GAIN_DESC: "#title Erhaltene [concept_authority]#!"
 TIME_REMAINING: "Verbleibende Zeit: #BOLD [GetPlayer.GetGovernmentData.GetTimeRemainingElection] Tag(e)#!"
 CHANGE_GOVERNMENT_BUTTON: "Regierung gründen: (#BOLD [GetPlayer.GetGovernmentData.GetCost] @aut!#!)"
 FORM_GOVERNMENT: "Regierung gründen"
 NAME_OF_GOVERNMENT_TYPE: "[concept_government_type]"
 CHANGE_GOVERNMENT_TOOLTIP: "#header Herrschende [Concept('concept_interest_group', '$concept_interest_groups$')] ändern#!\n$TOOLTIP_DELIMITER$\nErsetzt die herrschende $concept_interest_groups$ durch die ausgewählten."
 VERY_GOOD_IDEA: "#title $VERY_GOOD_IDEA_NAME$#!"
 #(>[GetGoodThreshold|+2])#!"
 VERY_BAD_IDEA: "#title $VERY_BAD_IDEA_NAME$#!"
 #(<[GetVeryBadThreshold|+2])#!"
 GOOD_IDEA: "#title $GOOD_IDEA_NAME$#!"
 #(>[GetBadThreshold|+2] && <[GetGoodThreshold|+2])#!"
 BAD_IDEA: "#title $BAD_IDEA_NAME$#!"
 #(>[GetVeryBadThreshold|+2] && <[GetBadThreshold|+2])#!"
 VERY_GOOD_IDEA_NAME: "Befürwortet deutlich"
 VERY_BAD_IDEA_NAME: "Ist deutlich gegen"
 GOOD_IDEA_NAME: "Befürwortet"
 BAD_IDEA_NAME: "Ist gegen"
 NEUTRAL_IDEA_NAME: "Ist unentschlossen gegenüber"
 VERY_GOOD_IDEA_TOOLTIP: "#bold #P Befürwortet#!#! dies #bold #P deutlich#!#!"
 VERY_BAD_IDEA_TOOLTIP: "Ist #bold #P deutlich gegen#!#! dies"
 GOOD_IDEA_TOOLTIP: "#bold #P Befürwortet#!#! dies"
 BAD_IDEA_TOOLTIP: "Ist #bold #N gegen#!#! dies"
 NEUTRAL_IDEA_TOOLTIP: "ist dies #header gleichgültig#!"
 EVENT_NO_TIME_LIMIT: "Kein Zeitlimit"
 EVENT_WINDOW_EVENT_LOCATION: "[SelectLocalization(Or(EventWindow.GetEvent.HasCategory('enactment'), EventWindow.GetEvent.HasCategory('revolution')), 'EVENT_WINDOW_CATEGORY_SUBTITLE', 'EVENT_WINDOW_SUBTITLE')]"
 EVENT_WINDOW_SUBTITLE: "Ereignis in [EventWindow.AccessEvent.GetState.GetName]"
 EVENT_WINDOW_CATEGORY_SUBTITLE: "[AddLocalizationIf(EventWindow.GetEvent.HasCategory('enactment'), 'EVENT_WINDOW_CATEGORY_ENACTMENT_SUBTITLE')][AddLocalizationIf(EventWindow.GetEvent.HasCategory('revolution'), 'EVENT_WINDOW_CATEGORY_REVOLUTION_SUBTITLE')]"
 EVENT_WINDOW_CATEGORY_ENACTMENT_SUBTITLE: "[AddLocalizationIf(GetPlayer.GetLawBeingEnacted.HasEnactmentLastCheckpoint, Concatenate(GetPlayer.GetLawBeingEnacted.GetEnactmentLastCheckpointResult, ' '))]Ereignis beim [Concept('concept_enactment_of_laws','$concept_enactment_of_laws_enactment$')] von „[GetPlayer.GetLawBeingEnacted.GetName]“"
 EVENT_WINDOW_CATEGORY_REVOLUTION_SUBTITLE: "$REVOLUTION_EVENT_TOOLTIP$"
 test.pink_elephant_tooltip: "Verbleibende Tage: [EVENT.GetRemainingDays]"
 test.election_tooltip: "Die Wahlergebnisse sind da!"
 test.pre.election_tooltip: "#BOLD Wahl in [GetPlayer.GetGovernmentData.GetTimeRemainingPreElection] Tag(en)#!\nDerzeitiger Stand der Stimmen:"
 test.acquired_technology_tooltip: "Neue Technik erworben!"
 PEOPLE_ABROAD_TITLE: "#title Nicht-inkorporierte Bevölkerung#!"
 POLITICALLY_UNALIGNED_TITLE: "#title [Concept('concept_politically_unaligned_aligned', '$concept_politically_unaligned$')|U]#!"
 POLITICALLY_UNALIGNED_TITLE_NO_FORMATTING: "#title Politisch unbeteiligt#!" #Don't turn this into a concept, it will break some IG tooltips
 TRAIT_INACTIVE: "(Inaktiv)"
 politically_unaligned_POPULATION: "[Concept('concept_politically_unaligned_aligned', '$concept_politically_unaligned$e')|U] Bevölkerung: [Country.GetInactivePopulation|kv]"
 POLITICALLY_UNALIGNED_POPULATION_TOOLTIP: "#header [Concept('concept_politically_unaligned_aligned', '$concept_politically_unaligned$e')|U] Bevölkerung#!\nGesamt: [GetPlayer.GetInactivePopulation|kv]\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetInactivePopulationDesc]"
 POLITICALLY_INVOLVED_POPULATION_TOOLTIP: "#header [Concept('concept_politically_unaligned_aligned', '$concept_politically_involved$')|U]e Bevölkerung#!\nGesamt: [GetPlayer.GetPoliticallyInvolvedPopulation|kv]\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetPoliticallyInvolvedPopulationDesc]"
 POLITICAL_STRENGTH_SUBTITLE: "#title [concept_political_strength]#!"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN_DESC: "[BUILDING.GetExpansionLevelDesc]"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN_URBAN_CAPACITY: "[Concept('concept_urbanization', 'Urbanisierungsstufe')] von #v [STATE.GetUrbanization]#!"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN_TOOLTIP: "[Building.GetExpansionLevelBreakdown]"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN: "Die Maximalstufe ($MAXIMUM|v$) von [BUILDING.GetName] basiert auf Folgendem:\n$TAB$$EXPLANATION$"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN_ARABLE_LAND: "Verfügbares [concept_arable_land] in [STATE.GetName]: $AVAILABLE_ARABLE_LAND|v$"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN_LAND_SHARE: "Gesamtpotenzial in der Staatsregion „[STATE_REGION.GetName]“: $MAX_IN_STATE_REGION|v$\n$TAB$Von [STATE.GetName] besessener Grundbesitzanteil in der Staatsregion „[STATE_REGION.GetName]“: $LAND_SHARE|v1%$"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN_UNCAPPED: "Gebäude der Art „[BUILDING.GetName]“ hat keine Maximalstufe"
 BUILDING_HAS_INVALID_LEVELS_IN_QUEUE: "Dieses Gebäude hat ungültige Stufen in der [concept_construction_queue]."
 CONSTRUCTION: "Bauvorhaben"
 CHANGE_SPEED_NOT_HOST_OR_LOCAL: "#N Nur der Host kann das Spieltempo ändern#!"
 INCREASE_SPEED_ALREADY_MAX: "#N Das Spieltempo kann nicht noch weiter erhöht werden#!"
 DECREASE_SPEED_ALREADY_MIN: "#N Das Spieltempo kann nicht noch weiter verringert werden#!"
 INCREASE_SPEED_TOOLTIP: "Spieltempo erhöhen"
 DECREASE_SPEED_TOOLTIP: "Spieltempo verringern"
 GAME_PAUSED: "Das Spiel ist pausiert. #instruction Klicken,#! um es fortzusetzen"
 GAME_RUNNING: "Das Spiel läuft. #instruction Klicken#!, um es zu pausieren"
 TOGGLE_PAUSE_NOT_HOST_OR_LOCAL: "#N Nur der Host kann das Spiel pausieren und fortsetzen#!"
 PAUSED_BY_PLAYER_MP: "Pausiert durch #v [TimeKeeper.GetPausedBy]#!"
 PAUSED_BY_UNPAUSE_ONLY_ME: "Nur man selbst kann die Pause in den nächsten [TimeKeeper.GetTimeAnyoneUnpause] Sekunden aufheben"
 PAUSED_BY_UNPAUSE_ONLY_PAUSED_BY: "Nur #v [TimeKeeper.GetPausedBy]#! kann die Pause in den nächsten [TimeKeeper.GetTimeAnyoneUnpause] Sekunden aufheben"
 PAUSED_BY_UNPAUSE_ANYONE: "Jeder kann die Pause wieder aufheben"
 ESTABLISH_COLONY_BUILDING_TOOLTIP: "#variable [BUILDING_TYPE.GetName]#!"
 STATE_COLONY_ACTIVE_INTEREST: "Das nächste Koloniewachstum wird voraussichtlich am #variable [State.GetColonyGrowthDateDesc]#! stattfinden\n\nDer Fortschritt erhöht sich jeden Tag um #variable [State.GetDailyColonyProgress|%]#!. Dies basiert auf Folgendem: \n[State.GetColonyGrowthModifierDesc]"
 STATE_COLONY_TOOLTIP_INACTIVE_INTEREST: "\n#R Kann aufgrund fehlendem [State.GetOwner.GetAdjective|l]em [Concept('concept_active_interest', 'aktivem Interesse')] in [State.GetStateRegion.GetStrategicRegion.GetName] nicht voranschreiten#!"
 STATE_COLONY_TOOLTIP: "#header [State.GetOwner.GetAdjective|U]e Kolonie#!\n[SelectLocalization(State.IsCompanyColony, 'COMPANY_ESTABLISHING_COLONY', 'COUNTRY_ESTABLISHING_COLONY')]\n[GetPlayer.GetTensionTooltip(State.GetNextColonyProvince.GetState.GetOwner)][ConcatIfNeitherEmpty('\n', AddLocalizationIf(GreaterThan_int32(GetPlayer.GetTensionWith(State.GetNextColonyProvince.GetState.GetOwner), '(int32)50'), 'TENSIONS_ARE_HIGH'))]\n$TOOLTIP_DELIMITER$\nFortschritt zum Erhalt einer weiteren Provinz: #variable [State.GetColonyProgress|%]#!\n[SelectLocalization(State.IsColonyProgressBlockedByInactiveInterest, 'STATE_COLONY_TOOLTIP_INACTIVE_INTEREST', 'STATE_COLONY_ACTIVE_INTEREST')]"
 TENSIONS_ARE_HIGH: "@warning! [Concept('concept_tension', '$concept_tensions$')] sind hoch"
 COUNTRY_ESTABLISHING_COLONY: "#header Gründet [State.GetOwner.GetAdjective|l]e $concept_colony$ in „[State.GetName|U]“#!"
 COMPANY_ESTABLISHING_COLONY: "#header [State.GetColonyCompany.GetName|U] gründet [State.GetOwner.GetAdjective|l]e $concept_colony$ in „[State.GetName|U]“#!"
 MARKET_CAPITAL_CONCEPT: "[concept_market_capital]"
 MARKET_CAPITAL: "#title [concept_market_capital]#!\n[Market.GetMarketCapital.GetName]"
 MOVE_CAPITAL_FORBIDDEN_WHILE_IN_ACTIVE_DIPLO_PLAY: "#N Während eines laufenden [Concept('concept_diplomatic_play', 'Diplomatenspiels')] kann der Hauptsitz nicht verlegt werden#!"
 MOVE_MARKET_CAPITAL_FORBIDDEN_WHILE_IN_ACTIVE_DIPLO_PLAY: "#N Während eines laufenden [Concept('concept_diplomatic_play', 'Diplomatenspiels')] kann der [concept_market_capital] nicht verlegt werden#!"
 MOVE_CAPITAL_FORBIDDEN_WHILE_AT_WAR: "#N Während eines [Concept('concept_war', 'Kriegs')] kann der Hauptsitz nicht verlegt werden#!"
 MOVE_MARKET_CAPITAL_FORBIDDEN_WHILE_AT_WAR: "#N Während eines [Concept('concept_war', 'Kriegs')] kann der [concept_market_capital] nicht verlegt werden#!"
 MOVE_CAPITAL_ALREADY_MOVED_RECENTLY: "#N Wir haben unseren [concept_capital_state] erst kürzlich gewechselt und können ihn bis zum $DATE|v$ nicht erneut wechseln#!"
 MOVE_CAPITAL_IS_ALREADY_CAPITAL: "#N [STATE.GetName] ist bereits unser [concept_capital_state]#!"
 MOVE_CAPITAL_NOT_INCORPORATED: "#N Nur ein [concept_incorporated_state] kann zu einem [concept_capital_state] gemacht werden#!"
 MOVE_CAPITAL_NOT_CULTURAL_HOMELAND: "#N Nur das [concept_homeland] einer unserer [concept_primary_cultures] kann zu einem [concept_capital_state] gemacht werden#!"
 MOVE_MARKET_CAPITAL_ALREADY_MOVED_RECENTLY: "#N Wir haben unseren [concept_market_capital] erst kürzlich gewechselt und können ihn bis zum $DATE|v$ nicht erneut wechseln#!"
 MOVE_MARKET_CAPITAL_IS_ALREADY_CAPITAL: "#N [STATE.GetName] ist bereits unser [concept_market_capital]#!"
 MOVE_MARKET_CAPITAL_NOT_INCORPORATED: "#N Nur ein [concept_incorporated_state] kann zu einem [concept_market_capital] gemacht werden#!"
 MOVE_MARKET_CAPITAL_NOT_MARKET_OWNER: "#N Wir sind Teil des [Concept('concept_market', 'Marktes')] eines anderen [Concept('concept_country', 'Landes')] und können den [concept_market_capital] daher nicht ändern#!"
 INCORPORATE_STATE_NO_NEIGHBOUR: "Es können nur Staaten inkorporiert werden, die an einen bereits vorhandenen Inkorporierten Staat angrenzen"
 INCORPORATE_STATE_COLONY_NOT_FINISHED: "Es ist nicht möglich, eine [concept_colony] zu inkorporieren, die sich noch im Wachstum befindet"
 INCORPORATE_STATE_ALREADY_INCORPORATED: "Bereits inkorporiert"
 INCORPORATE_STATE_ALREADY_INCORPORATING: "Wird bereits inkorporiert"
 INCORPORATE_STATE_HAS_DIPLOMATIC_PLAY_IN_REGION: "Eine [concept_decentralized_nation] hat bereits ein laufendes [concept_diplomatic_play] in dieser [concept_state_region]"
 INCORPORATE_STATE_HAS_TRUCE_IN_REGION: "[concept_colony] kann nicht inkorporiert werden, während ein Waffenstillstand besteht und man keine [concept_colonization_rights] bei der [concept_decentralized_nation] in dieser [concept_state_region] hat"
 INCORPORATE_STATE_CANNOT_INCORPORATE_TREATY_PORT: "Ein [concept_treaty_port] kann nicht inkorporiert werden"
 INCORPORATE_STATE_INCORPORATION_DISALLOWED: "Kann nicht inkorporiert werden aufgrund von:#!\n$TAB$[State.GetModifier.GetDescFor('state_disallow_incorporation_bool')]"
 INCORPORATE_STATE_NOT_ENOUGH_BUREAUCRACY: "@warning! Die Kosten zum [Concept('concept_incorporated_state', 'Inkorporieren')] von $STATE_NAME$ würden zu einem Defizit führen (@bur!$PROJECTED_TOTAL|v+1$)"
 incorporate_state: "Staat inkorporieren"
 incorporate_state_tooltip: "#header $incorporate_state$#!\n$TOOLTIP_DELIMITER$\n[concept_incorporated_state_desc]"
 REVOLUTIONARY_PARTY_CANNOT_JOIN_GOVERNMENT: "Eine oder mehrere IG in der Partei „[Party.GetName]“ [Party.GetMembersSummary] unterstützen eine laufende Revolution"
 SUPPRESSED_PARTY_CANNOT_JOIN_GOVERNMENT: "Eine oder mehrere IG in der Partei „[Party.GetName]“ [Party.GetMembersSummary] werden [Concept('concept_suppress','$concept_suppressed$')|l]"
 UNINCORPORATE_STATE_TOOLTIP: "Klicken, um die Inkorporierung abzubrechen"
 ESTABLISH_COLONY_STATE_NOT_VALID: "Das Ziel ist kein gültiger [concept_state]."
 ESTABLISH_COLONY_REVOLUTIONARY: "Revolutionäre Nationen können keine Staaten [Concept('concept_colony', '$concept_colonize$')|l], bis der Bürgerkrieg beendet ist."
 ESTABLISH_COLONY_NO_INTEREST: "Wir müssen ein [concept_interest] an $REGION|v$ erklären, um hier [Concept('concept_colony','$concept_colonize$')|l] zu können."
 ESTABLISH_COLONY_TYPE_NOT_VALID: "Die [concept_colony]-Art ist ungültig."
 ESTABLISH_COLONY_TARGET_COUNTRY_NOT_VALID: "In diesem [concept_state] gibt es keine gültigen Ziele, die [Concept('concept_colony','$concept_colonized$')|l] werden könnten."
 ESTABLISH_COLONY_ALREADY_HAS_COLONY: "Wir haben hier bereits eine [concept_colony]!"
 ESTABLISH_COLONY_ALREADY_HAS_TREATY_PORT: "Wir haben hier bereits einen [concept_treaty_port]!"
 ESTABLISH_COLONY_OUT_OF_RANGE: "Wir können diesen [concept_state] nicht erreichen"
 ESTABLISH_COLONY_CANNOT_AFFORD_MAINTENANCE: "Wir können uns die Unterhaltskosten von $NEXTCOST|v$ @bur!/Monat nicht leisten!\nWir haben monatlich nur $CURRENTINCOME|v$ @bur! verfügbar."
 ESTABLISH_COLONY_INTEREST_MARKER_INSUFFICIENT: "Unser [concept_interest] ist unzureichend!"
 ESTABLISH_COLONY_BAD_RANK: "[Concept('concept_country','$concept_countries$')] vom [concept_rank] [COUNTRY.GetRank] können keine [Concept('concept_colony','$concept_colonies$')] errichten"
 ESTABLISH_COLONY_NO_COLONIAL_GROWTH: "Wir haben keinerlei [concept_colonial_growth]"
 ESTABLISH_COLONY_TRUCE_BLOCKED: "[Concept('concept_colony','$concept_colonization$')] ist hier nicht erlaubt, solange wir einen Waffenstillstand mit den Einheimischen haben"
 ESTABLISH_COLONY_DIPLO_PLAY_BLOCKED: "[Concept('concept_colony','$concept_colonization$')] ist hier nicht erlaubt, während ein beliebiges [concept_country] in der [concept_state_region] ein laufendes [concept_diplomatic_play] oder einen [concept_war] hat"
 ESTABLISH_COLONY_MISSING_TECH: "Wir haben nicht die benötigte [concept_technology] „#variable $TECH$#!“"
 ESTABLISH_COLONY_FOREIGN_CLAIMS: "Wir können diese [concept_state_region] nicht kolonisieren, weil die folgenden [Concept('concept_country', '$concept_countries$')] [Concept('concept_claim', '$concept_claims$')] und $INTERESTS$ dort haben und aufrechterhalten: $LIST$"
 ESTABLISH_COLONY_NON_COLONIZATION_AGREEMENT: "Wir werden durch einen [concept_treaty] verpflichtet, die [concept_strategic_region] „$REGION|v$“ nicht zu kolonisieren."
 ESTABLISH_COLONY_PORT_COST: "Hier eine [concept_colony] aufzubauen, kostet @money!$COST|vD$ und baut einen Stufe-[GetDefine('NEconomy','ESTABLISH_COLONY_PORT_LEVEL')|v0]-[GetBuildingType('building_port').GetName]"
 ESTABLISH_COLONY_COMMAND_COASTAL_PORT_COST_CONFIRMATION: "Wollen wir @money!$COST|vD$ bezahlen, um „[StateRegion.GetName]“ zu [Concept('concept_colony','$concept_colonize$')|l] und ein [GetBuildingType('building_port').GetName]-$concept_building$ dort zu bauen?[ConcatIfNeitherEmpty('\n\n', '$INVESTMENT_DESC$')]"
 ESTABLISH_COLONY_COMMAND_COST_PAID_BY_INVESTMENT: "@money!$COST_INVESTMENT|vD$ der Kosten werden aus dem [concept_investment_pool] bezahlt"
 CANCEL_COLONY_TOOLTIP: "[Concept('concept_colony','$concept_colonization$')] abbrechen"
 CANCEL_COLONY_NO_COLONY: "#N Wir haben hier keine [concept_colony]!#!"
 CANCEL_COLONY_INCORPORATED: "#N Wir können die Kolonisierung eines [Concept('concept_incorporated_state', 'Inkorporierten Staats')] nicht abbrechen!#!"
 CANCEL_COLONY_HAS_DIPLO_PLAY: "#N Während einem aktiven [concept_diplomatic_play] kann eine [concept_colony] nicht entfernt werden#!"
 CANCEL_COLONY_TARGET_COUNTRY_NOT_VALID: "#N Es gibt keine gültigen Ziele, die die [concept_colony] von uns übernehmen könnten#!"
 CANCEL_COLONY_COMPANY_CHARTER: "#N Eine [concept_colony] kann nicht entfernt werden, während sie eine Charta von „[COMPANY.GetName]“ erhält#!"
 COLONIZATION_PAUSED: "[Concept('concept_colony','$concept_colonization$')] pausiert"
 COLONIZATION_IS_OCCUPIED_IN_WAR: "„[State.GetName|U]“ ist [Concept('concept_occupation','besetzt')]"
 COLONIZATION_ISOLATED_FROM_MARKET: "„[State.GetName|U]“ ist [Concept('concept_isolated_state','$concept_isolated_state_short$')] vom eigenen [concept_market]"
 COLONIZATION_STOPPED_ACTIVE_DIPLOMATIC_PLAY: "[Concept('concept_colony','$concept_colonization$')] ist aufgrund des laufenden [Concept('concept_native_uprising', 'Einheimischenaufstands')] angehalten"
 COLONIZATION_STOPPED_TRUCE: "[Concept('concept_colony','$concept_colonization$')] ist angehalten, solange wir einen Waffenstillstand mit den Einheimischen haben"
 COLONIZATION_STOPPED_NON_COLONIZATION_AGREEMENT: "Wir werden durch einen [concept_treaty] verpflichtet, die [concept_strategic_region] „$REGION|v$“ nicht zu kolonisieren."
 CANNOT_ESTABLISH_COLONY_HOVER: "#header #N [STATE_REGION.GetName] kann nicht kolonisiert werden#!#!"
 CANNOT_ESTABLISH_COLONY_NOT_A_STATE_REGION: "#header #N Wir können das nicht kolonisieren#!#!"
 ESTABLISH_COLONY_HOVER: "#header Staatsregion „[STATE_REGION.GetName]“ kolonisieren#!"
 REMOVE_COLONY_TOOLTIP: "#header Kolonie in der Staatsregion „[StateRegion.GetName]“ entfernen"
 REMOVE_COLONY_CONFIRM: "#header Sicher, dass die [Concept('concept_colony', 'Kolonisierung')] von „[STATE.GetName]“ abgebrochen werden soll?#!\n\nHierdurch wird der gesamte Fortschritt, einschließlich bereits [Concept('concept_colony', '$concept_colonized$en')|l] Provinzen, verloren gehen\n[STATE.GetColonyProvinceProgressDesc]\nFortschritt für die nächste Provinz: #tooltippable #tooltip:[STATE.GetTooltipTag],STATE_COLONY_TOOLTIP [STATE.GetColonyProgress|%]#!#!"
 STATE_PROVINCES_COLONIZED: "#variable $CURRENT$#!/#variable $TOTAL$#! Provinzen [Concept('concept_colony', '$concept_colonized$')|l]"
 HAS_NO_INTEREST_MARKER: "#N Diese Region hat kein [concept_interest]#!"
 HAS_INTEREST_MARKER: "#N Diese Region hat bereits ein [concept_interest]#!"
 NO_STATE_ADJACENT_REGION: "#N Wir besitzen keinen Staat, der an diese Region angrenzt#!"
 LACKING_DIPLO_CAPITAL: "#N Benötigt @inf!$VALUE|0$#!"
 RIVAL_RULES_NOT_MET: "#N Rivalitätsbedingungen nicht erfüllt!#!"
 SET_INTEREST_MARKER: "#header Setzt das [concept_interest] auf Stufe $LEVEL$#!"
 IM_RANK_UNDER_MIN: "#N Es ist nicht möglich, ein [concept_interest] der Stufe $LEVEL$ herabzustufen#!"
 IM_RANK_OVER_MAX: "#N Es ist nicht möglich, ein [concept_interest] der Stufe $LEVEL$ aufzustufen#!"
 IM_COUNTRY_RANK_TOO_LOW: "#N Der Landesrang muss mindestens $RANK$ sein, um dies zu tun#!"
 INTERESTS: "[Concept('concept_interest', '$concept_interests$')]"
 DECLARE_INTEREST_ALREADY_HAS_INTEREST: "[Country.GetAltName('NOM')|U] bekundet bereits ein [concept_interest] an der Strategieregion „[StrategicRegion.GetName]“"
 DECLARE_INTEREST_TOO_MANY_DECLARED_INTERESTS: "[Country.GetAltName('NOM')|U] kann keine weiteren [Concept('concept_interest', '$concept_interests$')] erklären"
 DECLARE_INTEREST_ADD_TOOLTIP: "#header [Concept('concept_declared_interest','$concept_declare_interest$')] in „[StrategicRegion.GetName]“#!\n$TOOLTIP_DELIMITER$\nFügt ein [concept_declared_interest] in der Strategieregion „[StrategicRegion.GetName]“ hinzu\nWir nutzen derzeit [GetPlayer.GetNumDeclaredInterests|v] unserer #tooltippable #tooltip:[GetPlayer.GetTooltipTag],MAX_DECLARED_INTERESTS_TOOLTIP [GetPlayer.CalcMaxNumDeclaredInterests|v]#!#! [Concept('concept_declared_interest', 'erklärten Interessen')]"
 DECLARE_INTEREST_REMOVE_TOOLTIP: "#header [Concept('concept_declared_interest','$concept_declare_interest$')] in „[StrategicRegion.GetName]“#!\n$TOOLTIP_DELIMITER$\nEntfernt ein [concept_declared_interest] aus der Strategieregion „[StrategicRegion.GetName]“\nWir nutzen derzeit [GetPlayer.GetNumDeclaredInterests|v] unserer #tooltippable #tooltip:[GetPlayer.GetTooltipTag],MAX_DECLARED_INTERESTS_TOOLTIP [GetPlayer.CalcMaxNumDeclaredInterests|v]#!#! [Concept('concept_declared_interest', 'erklärten Interessen')]"
 DECLARE_INTEREST_NOT_COASTAL_NOT_ADJACENT: "Die Strategieregion „[StrategicRegion.GetName]“ liegt weder an der Küste, noch grenzt sie an eines unserer natürlichen [Concept('concept_interest', '$concept_interests$')]"
 DECLARE_INTEREST_COASTAL_BUT_NO_COAST: "Die Strategieregion „[StrategicRegion.GetName]“ grenzt an keines unserer natürlichen [Concept('concept_interest', '$concept_interests$')] und wir haben keine Küsten"
 ACTOR_COUNTRY_NOT_VALID: "Ungültiges Startland."
 TARGET_COUNTRY_NOT_VALID: "#N Ungültiges Zielland.#!"
 TARGET_STATE_NOT_VALID: "#N Ungültiger Zielstaat.#!"
 TARGET_STRATEGIC_REGION_NOT_VALID: "#N Ungültige [concept_strategic_region].#!"
 NO_ACTIVE_RESEARCH: "Derzeit keine Forschung"
 ACTIVE_RESEARCH: "Derzeitige Forschung"
 PASSIVELY_SPREADING_TECHS: "[concept_technology_spread]"
 REMAINING_RESEARCH_QUEUE: "#v +[GetDataModelSize(AccessPlayer.GetResearchQueueBottom)]#!"
 START_RESEARCH_COMMANDS: "\n#instruction Klicken, um sofort mit der Erforschung von „[Technology.GetName]“ zu beginnen\n$SHORTCUT_KEY_MOD_shift$Klicken, um dies zur Forschungsreihe hinzuzufügen#!"
 START_RESEARCH_COMMANDS_IN_QUEUE: "\n#instruction Klicken, um sofort mit der Erforschung von „[Technology.GetName]“ zu beginnen#!"
 RESEARCH_TECHNOLOGY_BUTTON: "Neue Forschung beginnen ([AccessPlayer.AccessNumResearchableTechnologies|v])"
 REPLACE_TECHNOLOGY_BUTTON: "Forschung wechseln ([AccessPlayer.AccessNumResearchableTechnologies|v])"
 RESEARCH_TECHNOLOGY_BUTTON_TOOLTIP: "#header Neue Forschung auswählen#!\nEs gibt [AccessPlayer.AccessNumResearchableTechnologies|v] Techniken, die erforscht werden können"
 INNOVATION_DESCRIPTION: "Wöchentliche Innovation: #v @innovation![Country.GetWeeklyInnovation|+0]#!"
 INNOVATION_TOOLTIP: "#header [concept_innovation]#!\n[COUNTRY.GetAltName('NOM')|U] erzeugt wöchentlich #v @innovation![Country.GetWeeklyInnovation|+2]#! [concept_innovation]:\n[Country.GetWeeklyInnovationDesc]\n\nEin Maximum von @innovation![Country.GetWeeklyMaxInnovation|v2] [concept_innovation] kann jede Woche in eine aktive Forschung investiert werden:\n[Country.GetWeeklyMaxInnovationDesc]\n\nJegliche [concept_innovation], die aufgrund von Investitionslimitierungen nicht ausgegeben werden kann oder der Mangel an einer aktiven Forschung, erhöht die [concept_technology_spread] in unserem Land"
 TECHNOLOGY_SPREAD_RATE_DESCRIPTION: "[concept_technology_spread]: #v [Country.GetWeeklyTechnologySpreadDesc]#!"
 TECHNOLOGY_SPREAD_RATE_TOOLTIP: "#header [concept_technology_spread]#!\n$TECHNOLOGY_SPREAD_RATE_BREAKDOWN$[ConcatIfNeitherEmpty('\n\n',Country.GetCurrentlySpreadingTechsDesc)]"
 TECHNOLOGY_SPREAD_RATE_BREAKDOWN: "[Country.GetWeeklyTechnologySpreadBreakdown]"
 CURRENTLY_SPREADING_TECHS: "#header Sich derzeit ausbreitende Techniken#!\n$BREAKDOWN$"
 TECH_SPREAD_ENTRY: "$PROGRESS|%0v$ – [Technology.GetName] ([Technology.GetCategoryName])"
 TECHNOLOGY_TYPE_DESCRIPTION: "#b [Technology.GetEra.GetNumber]#!"
 TECHNOLOGY_INVENTED_IN: "Erfunden in #BOLD [Technology.GetOrigin.GetName]#!"
 TECHNOLOGY_IN_QUEUE: "Wird voraussichtlich in #v [Technology.PredictTimeLeftInQueueDesc(GetPlayer.Self)]#! abgeschlossen (Platz in der Reihe: #v [Technology.GetResearchQueuePosition(GetPlayer.Self)]#!)"
 TECHNOLOGY_TOOLTIP_COST: "#title Kosten:#! #tooltippable #tooltip:TECHNOLOGY_COST @innovation![TECHNOLOGY.GetCost(GetPlayer.Self)|0vk]#!#! Innovation ([TECHNOLOGY.PredictTimeLeftDesc(GetPlayer.Self)] zur Erforschung)"
 TECHNOLOGY_TOOLTIP_MODIFIERS_LABEL: "#title Modifikatoren#!"
 TECHNOLOGY_TOOLTIP_ADOPTION_EFFECTS_LABEL: "#title Annahmeeffekte#!"
 TECHNOLOGY_TOOLTIP_SPREAD_EFFECTS_LABEL: "#title Verbreitungseffekte#!"
 TECHNOLOGY_TOOLTIP_UNLOCKS_LABEL: "#title Entsperrt#!"
 TECHNOLOGY_TOOLTIP_LORE: "#lore $LORE$#!"
 COMMON_KNOWLEDGE: "Allgemeinwissen"
 RESEARCHABLE_TITLE: "#title Erforschbar#!"
 NUM_URBAN_BUILDINGS: "#header Stadtgebäude#!\nEs gibt insgesamt #variable [StatesPanel.GetNumUrbanLevels]#! Stufen an Stadtgebäuden in [State.GetName]"
 NUM_RESOURCE_BUILDINGS: "#header Ressourcengebäude#!\nEs gibt insgesamt #variable [StatesPanel.GetNumResourceLevels]#! Stufen an Ressourcengebäuden in [State.GetName]"
 NUM_AGRICULTURE_BUILDINGS: "#header Landwirtschaftliche Gebäude#!\nEs gibt insgesamt #variable [StatesPanel.GetNumAgricultureLevels]#! Stufen an Landwirtschaftsgebäuden in [State.GetName]"
 NUM_DEVELOPMENT_BUILDINGS: "#header Entwicklungsgebäude#!\nEs gibt insgesamt #variable [StatesPanel.GetNumDevelopmentLevels]#! Stufen an Entwicklungsgebäuden in [State.GetName]"
 TECHNOLOGY_PROGRESS_FORMAT_NO_SPREAD: "#P $FIXED_TECH_PROGRESS|0$#!"
 TECHNOLOGY_PROGRESS_FORMAT_WITH_SPREAD: "#v $MIN_TECH_PROGRESS|0+$ – $MAX_TECH_PROGRESS|0+$#!"
 TECHNOLOGY_SPREAD_FORMAT: "#v $MIN_TECH_SPREAD|0+$ – $MAX_TECH_SPREAD|0+$#!"
 TECHNOLOGY_NO_SPREAD_FORMAT: "#v $TECH_SPREAD|0+$#!"
 TECHNOLOGY_PROGRESS_WEEKS_MIN_MAX: "$MIN_TIME$ – $MAX_TIME$"
 TREATY_ENFORCED_ON_COUNTRY_CANNOT_WITHDRAW: "Dieser Vertrag wird für [Country.GetAltName('AKK')] erzwungen; man kann sich also nicht daraus zurückziehen."
 TREATY_ENFORCED_ON_COUNTRY_CANNOT_RENEGOTIATE: "Dieser Vertrag wird für [Country.GetAltName('AKK')] erzwungen; er kann also nicht neu verhandelt werden."
 TREATY_PROPOSAL_ALREADY_PENDING_WITH_COUNTRY: "[Country.GetAltName('NOM')|U] erwägt bereits einen Vertragsvorschlag von uns"
 TREATY_PROPOSAL_NO_BINDING_PERIOD: "Eine [concept_binding_period] hinzufügen"
 BUILD_URBAN_BUILDING: "Neues Stadtgebäude bauen\nDiese Aktion hat #v [StatesPanel.AccessState.GetNumConstructableUrbanBuildings|+]#! zulässige Ziele"
 STATE_GDP: "BIP: #variable [State.GetGDPContributionPercentage|%1]#!"
 STATE_TAX: "Steuern: #variable [State.GetTaxationRevenue|+=K]#!"
 NUM_RURAL_BUILDINGS: "#header Landgebäude#!\nEs gibt insgesamt #variable [StatesPanel.GetNumRuralLevels]#! Stufen an Landgebäuden in [State.GetName]"
 NUM_RURAL_BUILDINGS_OVERVIEW: "#header Landgebäude#!\nEs gibt insgesamt #variable [StatesPanel.GetNumRuralLevels]#! Stufen an Landgebäuden in [State.GetName]"
 NUM_POPS: "#header Bevölkerung#!\nEs leben insgesamt [State.GetPopulationSize|Kv] Menschen in [State.GetName]"
 NUM_SOL: "#header [concept_sol]#! in [State.GetName]\nDerzeitiger Durchschnitt: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetAverageStandardOfLivingAll)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_SOL_ALL [State.GetAverageStandardOfLivingAll|1v]#!#!)\n$TOOLTIP_DELIMITER$\nDurchschnittliche $EXPECTED_SOL_SHORT$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingAll)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_EXPECTED_SOL_ALL [State.GetExpectedStandardOfLivingAll|v1]#!#!)\n[State.GetPopulationRatioBelowExpectedStandardOfLiving|%v1] der [Concept('concept_pop', '$concept_pops$')] haben einen [concept_sol] unter der $EXPECTED_SOL_SHORT$"
 STATE_SOL_ALL: "#header Durchschnittlicher [concept_sol] für alle [Concept('concept_pop', '$concept_pops$')] in [State.GetName]#!\n#v [State.GetFormattedStandardOfLivingLabelAll] ([State.GetFormattedStandardOfLivingAll]#!)\n$TOOLTIP_DELIMITER$\n[State.GetAdditionalSOLFactorsDescAll]"
 STATE_SOL_POOR: "#header Durchschnittlicher [concept_sol] für $lower$ in „[State.GetName]“#!\n#v [State.GetFormattedStandardOfLivingLabelPoor] ([State.GetFormattedStandardOfLivingPoor]#!)\n$TOOLTIP_DELIMITER$\n[State.GetAdditionalSOLFactorsDescPoor]"
 STATE_SOL_MIDDLE: "#header Durchschnittlicher [concept_sol] für die $middle$ in [State.GetName]#!\n#v [State.GetFormattedStandardOfLivingLabelMiddle] ([State.GetFormattedStandardOfLivingMiddle]#!)\n$TOOLTIP_DELIMITER$\n[State.GetAdditionalSOLFactorsDescMiddle]"
 STATE_SOL_RICH: "#header Durchschnittlicher [concept_sol] für $upper$ in „[State.GetName]“#!\n#v [State.GetFormattedStandardOfLivingLabelRich] ([State.GetFormattedStandardOfLivingRich]#!)\n$TOOLTIP_DELIMITER$\n[State.GetAdditionalSOLFactorsDescRich]"
 STATE_EXPECTED_SOL_ALL: "#header Durchschnittliche [concept_expected_sol] für alle [Concept('concept_pop', '$concept_pops$')] in [State.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingAll)] ([State.GetExpectedStandardOfLivingAll|1]#!)\n$TOOLTIP_DELIMITER$\n[State.GetExpectedSOLFactorsDescAll]"
 STATE_EXPECTED_SOL_POOR: "#header Durchschnittliche [concept_expected_sol] für $lower$ in „[State.GetName]“#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingPoor)] ([State.GetExpectedStandardOfLivingPoor|1]#!)\n$TOOLTIP_DELIMITER$\n[State.GetExpectedSOLFactorsDescPoor]"
 STATE_EXPECTED_SOL_MIDDLE: "#header Durchschnittliche [concept_expected_sol] für die $middle$ in [State.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingMiddle)] ([State.GetExpectedStandardOfLivingMiddle|1]#!)\n$TOOLTIP_DELIMITER$\n[State.GetExpectedSOLFactorsDescMiddle]"
 STATE_EXPECTED_SOL_RICH: "#header Durchschnittliche [concept_expected_sol] für $upper$ in „[State.GetName]“#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingRich)] ([State.GetExpectedStandardOfLivingRich|1]#!)\n$TOOLTIP_DELIMITER$\n[State.GetExpectedSOLFactorsDescRich]"
 PRESTIGE_GOODS_VARIANT: "[Goods.GetTextIcon] „[Goods.GetName]“ ist eine [Concept('concept_prestige_good', '$concept_prestige_goods$')]-Variante von [Goods.GetBaseGoods.GetTextIcon] „[Goods.GetBaseGoods.GetName]“"
 WE_NOW_HAVE_LAW: "#bold Wir haben jetzt „[PlayerMessageItem.GetLaw.GetName]“!#!"
 GAINED_MODS: "#title Durch den Wechsel auf „[PlayerMessageItem.GetLaw.GetName]“ erhalten:#!"
 LOST_MODS: "#title Durch den Wechsel von „[PlayerMessageItem.GetPrevLaw.GetName]“ verloren:#!"
 ENACT_APPROVAL_CHANGES: "#title Die [concept_interest_group]-Zustimmung ändert sich durch das Beschließen des Gesetzes „[PlayerMessageItem.GetLaw.GetName]“#!"
 ABOLISH_APPROVAL_CHANGES: "#title Die [concept_interest_group]-Zustimmung ändert sich durch das Abschaffen von „[Notification.GetPrevLaw.GetName]“#!"
 LAW_LORE: "#lore #bold [PlayerMessageItem.GetLaw.GetName]#!\n[PlayerMessageItem.GetLaw.GetFlavor]#!"
 LAW_LORE_HEADER: "#b [PlayerMessageItem.GetLaw.GetFlavor]#!"
 PREVIOUS_LAW_POPUP_HEADER: "Geändert von [PlayerMessageItem.GetPrevLaw.GetName]"
 INVALID_ERA: "Ungültige Ära"
 TECHNOLOGY_PROGRESS: "#v @innovation! [Technology.GetProgress(GetPlayer.Self)|D]#! / #maximum [Technology.GetCost(GetPlayer.Self)|D]#!"
 TECHNOLOGY_COST: "[Technology.GetCostDesc(GetPlayer.Self)]"
 TECHNOLOGY_COST_DESC: "#header Kosten für Erforschung von „[Technology.GetName]“: @innovation!$COST|0$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 TECHNOLOGY_COST_DETAILS: "Grundkosten für [Concept('concept_technology_era', '$concept_technology_era_short$')]: @innovation!$VAL|0v$"
 TECHNOLOGY_COST_PENALTY: "Vorzeitigkeitsabzug @innovation!$VAL|0-$ aufgrund von:\n$DESC$"
 RESEARCH_PENALTY_BASE: "$VAL|v0$ durch Grundwert"
 RESEARCH_PENALTY_UNRESEARCHED_TECHS: "#n x#!$VAL|0-$ durch unerforschte [Concept('concept_technology', '$concept_technologies$')] früherer Ären:\n$DESC$"
 RESEARCH_PENALTY_UNRESEARCHED_TECHS_ONE_ENTRY: "#n x#!$VAL|0-$ durch die Zahl unerforschter [Concept('concept_technology', '$concept_technologies$')] aus #v Ära [Era.GetNumber]:#!"
 RESEARCH_PENALTY_UNRESEARCHED_TECHS_ENTRY: "$TAB$$TAB$$VAL|0-=$ durch $NUM|v$ $concept_technologies$ in #v Ära [Era.GetNumber]#!"
 TECHNOLOGY_PROGRESS_GAIN: "#v #tooltippable #tooltip:[Technology.GetTooltipTag],TECHNOLOGY_GAIN_BREAKDOWN [GetPlayer.GetWeeklyTechnologyProgressDescForTech(Technology.Self)]#!#!#!"
 TECHNOLOGY_PROGRESS_TIME_LEFT: "[Technology.GetTimeLeftDesc(GetPlayer.Self)] verbleibend"
 TECHNOLOGY_PROGRESS_WITH_GAIN: "$TECHNOLOGY_PROGRESS$ ($TECHNOLOGY_PROGRESS_GAIN$)"
 TECHNOLOGY_PROGRESS_WITH_GAIN_AND_TIME_LEFT: "$TECHNOLOGY_PROGRESS_WITH_GAIN$ ($TECHNOLOGY_PROGRESS_TIME_LEFT$)"
 NO_TECH_IN_RESEARCH_QUEUE: "Keine eingereihten [Concept('concept_technology', '$concept_technologies$')]"
 RESEARCH_QUEUE: "Forschungsreihe"
 ADD_TO_TECH_QUEUE: "„[Technology.GetName]“ der Forschungsreihe hinzufügen"
 REMOVE_TECH_FROM_QUEUE: "„[Technology.GetName]“ aus der Forschungsreihe entfernen"
 HOW_TO_ADD_TO_RESEARCH_QUEUE: "Fügen Sie [Concept('concept_technology', '$concept_technologies$')] der Forschungsreihe hinzu, indem Sie UMSCH drücken und auf eine verfügbare Technik oder auf das #b +#! neben ihr klicken."
 TECH_QUEUE_BUTTON_NUMBER: "#b [Add_int32('(int32)1', Add_int32(GetDataModelSize(AccessPlayer.GetResearchQueueTop), GetDataModelSize(AccessPlayer.GetResearchQueueBottom)))]#!"
 TECHNOLOGY_SPREAD_TOOLTIP: "#header [concept_technology_spread]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetWeeklyTechnologySpreadForTechDesc(Technology.Self)]"
 TECHNOLOGY_GAIN_BREAKDOWN: "#header Technikfortschritt#!\nDurch „[Technology.GetCategoryName]“-Forschungstempo: #tooltippable #tooltip:[Technology.GetTooltipTag]|[GetPlayer.GetTooltipTag],RESEARCH_SPEED_TOOLTIP #v [GetPlayer.GetWeeklyResearchSpeed|=+1]#!#!#!\nDurch [concept_technology_spread]: #tooltippable #tooltip:[Technology.GetTooltipTag],TECHNOLOGY_SPREAD_TOOLTIP [GetPlayer.GetWeeklyTechnologySpreadForTechDesc(Technology.Self)]#!#!"
 RESEARCH_SPEED_TOOLTIP: "[Country.GetWeeklyResearchSpeedDesc]"
 BASE_WEEKLY_TECH_SPREAD: "Wöchentliche Grund-[concept_technology_spread]: #v $VALUE|+2$#!"
 RANDOMIZED_WEEKLY_TECH_SPREAD: "Daraus ergibt sich eine [concept_technology_spread], die wöchentlich zwischen #P $MIN|1$#! und #P $MAX|1$#! @innovation![concept_innovation] liegt und in [Concept('concept_technology', '$concept_technologies$')] investiert wird, die sich zu uns hin ausbreiten."
 TECH_SPREAD_FROM_NEIGHBOR: "[concept_technology_spread] aus $COUNTRY|v$: #v $VALUE|+=2$#! (Nachbar)"
 TECH_SPREAD_FROM_PACT: "[concept_technology_spread] aus $COUNTRY|v$: #v $VALUE|+=2$#! ($PACT$)"
 TECH_SPREAD_MAX_CAP: "[concept_technology_spread] ist auf #v $VALUE|+2$#!/Woche begrenzt"
 test.acquired_technology.t: "[ROOT.GetCountry.GetAltName('NOM')|U] erlangte die Technik „[ROOT.GetTechnology.GetName]“!"
 test.acquired_technology.d: "TODO Description"
 test.acquired_technology.f: "TODO Flavor"
 SHOW_MORE: "#header Mehr anzeigen#!"
 SHOW_LESS: "#header Weniger anzeigen#!"
 BATTLE_SIZE_BASE_TOTAL_BATTALIONS_ON_FRONT: "Gesamt-$concept_battalions$ an der [concept_front]"
 BATTLE_SIZE_NUMERIC_ADVANTAGE: "Zahlenmäßiger Vorteil an [concept_front]"
 BATTLE_SIZE_TERRAIN_INFRASTRUCTRE: "Beschränkt durch [concept_terrain] und [concept_infrastructure]\n$TAB$[concept_combat_width] von „[SCOPE.sProvince('province').GetTerrainName]“: [SCOPE.sProvince('province').GetTerrainCombatWidth|v1%]\n$TAB$$concept_infrastructure$ von [SCOPE.sProvince('province').GetState.GetName]: [SCOPE.sProvince('province').GetState.GetInfrastructure|v0]"
 BATTLE_SIZE_MAX_AMOUNT_REACHED: "Maximale Anzahl an Bataillonen erreicht"
 BATTLE_SIZE_MIN_AMOUNT_REACHED: "Mindestanforderungen für den Vormarsch"
 BATTLE_SIZE_FRONT_SIZE: "Durch die Länge der Front"
 BATTLE_SIZE_CONCENTRATION_ACROSS_LENGTH_OF_FRONT: "Geringe Konzentration von $concept_battalions$n über die Gesamtlänge der [concept_front]"
 NAVAL_BATTLE_SIZE_ADMIRAL_SHARE: "Anteil an [Concept('concept_flotilla','$concept_flotillas$')], der für den [concept_admiral] in der [concept_military_formation] verfügbar ist"
 NAVAL_BATTLE_SIZE_UNIT_RATIO_TO_ENEMY: "Anpassung der Zahl gegnerischer $concept_flotillas$"
 NAVAL_BATTLE_SIZE_UNIT_NOT_IN_BATTLE: "Zahl der $concept_flotillas$, die für die [concept_battle] zur Verfügung stehen"
 JOURNAL_ENTRY_TOOLTIP: "[SelectLocalization(Not(StringIsEmpty(JournalEntry.GetStatusDesc)), 'JOURNAL_ENTRY_STATUS', '')][SelectLocalization(StringIsEmpty(JournalEntry.GetStatusDesc), 'JOURNAL_ENTRY_TOOLTIP_WITH_LINE', JournalEntry.GetTooltip)]"
 JOURNAL_ENTRY_STATUS: "[JournalEntry.GetStatusDesc]\n\n"
 JOURNAL_ENTRY_TOOLTIP_WITH_LINE: "[JournalEntry.GetTooltip]"
 JOURNAL_ENTRY_ACTIVATION_HEADER: "#title Wird aktiviert, wenn:\n#!"
 JOURNAL_ENTRY_COMPLETION_HEADER: "#title Wird abgeschlossen, wenn folgende Bedingungen erfüllt sind:\n#!"
 JOURNAL_ENTRY_FAILURE_HEADER: "#title Wird fehlschlagen, wenn:\n#!"
 JOURNAL_ENTRY_INVALIDATION_HEADER: "#title Wird ungültig, wenn:\n#!"
 JOURNAL_ENTRY_TIMEOUT: "#title Wird in #v $TIMELEFT_STRING$#! ablaufen#!"
 JOURNAL_ENTRY_WITH_GROUP: "[JournalEntry.GetType.GetGroup.GetName]\n[concept_journal_entry]"
 DIPLO_PLAY_SET_POSITION: "Ändern"
 DIPLOMATIC_PLAY_CONFIRMATION_HEADER: "#header „[DiplomaticPlayType.GetName]“ fordern#!"
 SUPPORT_TARGET_DIPLOMATIC_PLAY_TOOLTIP: "Unterstützt #v [DiplomaticPlay.GetTarget.GetAltName('AKK')]#! bedingungslos in diesem [concept_diplomatic_play].[ConcatIfNeitherEmpty('\n\n', DiplomaticPlay.GetSupportTargetValidTooltip(GetPlayer))]"
 SUPPORT_TARGET_DIPLOMATIC_PLAY_OPPOSING_SUBJECTS: "@warning! Wir haben Klientelländer, die die gegnerische Seite in diesem Spiel unterstützen: Diese werden zur Neutralität gezwungen und erleiden einen #r #bold [GetDefine('NDiplomacy','RELATION_PENALTY_OVERLORD_KICK_BACKER_SUBJECT')]#!#! Beziehungsabzug mit uns#!"
 SUPPORT_INITIATOR_DIPLOMATIC_PLAY_TOOLTIP: "Unterstützt #v [DiplomaticPlay.GetInitiator.GetAltName('AKK')]#! bedingungslos in diesem [concept_diplomatic_play].[ConcatIfNeitherEmpty('\n\n', DiplomaticPlay.GetSupportTargetValidTooltip(GetPlayer))]"
 LEAN_TOWARDS_TARGET_DIPLOMATIC_PLAY_TOOLTIP: "Setzt unsere Haltung in diesem [concept_diplomatic_play] auf #b Neigt mehr in Richtung#! #v  [DiplomaticPlay.GetTarget.GetAltName('VON')]#!.\n\n[DiplomaticPlay.GetLeanTowardsTargetValidTooltip(GetPlayer)]"
 LEAN_TOWARDS_INITIATOR_DIPLOMATIC_PLAY_TOOLTIP: "Setzt unsere Haltung in diesem [concept_diplomatic_play] auf #b Neigt mehr in Richtung#! #v  [DiplomaticPlay.GetInitiator.GetAltName('VON')]#!.\n\n[DiplomaticPlay.GetLeanTowardsInitiatorValidTooltip(GetPlayer)]"
 BE_ON_THE_FENCE_DIPLOMATIC_PLAY_TOOLTIP: "Setzt unsere Haltung in diesem [concept_diplomatic_play] auf #b unentschlossen#!.\n\n[DiplomaticPlay.GetBeOnTheFenceValidTooltip(GetPlayer)]"
 YIELD_DIPLOMATIC_PLAY_TOOLTIP: "#HEADER Gibt#! die derzeitige Position in diesem [concept_diplomatic_play][ConcatIfNeitherEmpty('\n\n', DiplomaticPlay.GetYieldValidTooltip(GetPlayer))] auf"
 DECLARE_NEUTRALITY_DIPLOMATIC_PLAY_TOOLTIP: "Erklärt in diesem [concept_diplomatic_play] unsere Neutralität[ConcatIfNeitherEmpty(DiplomaticPlay.GetDeclareNeutralityValidTooltip(GetPlayer),'\n\n')]"
 DIPLOMATIC_PLAY_INITIATOR_TOOLTIP: "#variable [DiplomaticPlay.GetInitiator.GetAltName('NOM')|U]#! ist der Initiator dieses [Concept('concept_diplomatic_play', 'Diplomatiespiels')]"
 DIPLOMATIC_PLAY_DESCRIPTION_TOOLTIP: "Dieses [concept_diplomatic_play] zielt darauf ab, #variable [DiplomaticPlay.GetTarget.GetAltName('AKK')]#! zu Folgendem zu zwingen: #variable [DiplomaticPlay.GetDiplomaticPlayType.GetName]#!"
 DIPLOMATIC_PLAY_INTEREST_MARKER_TOOLTIP: "#variable [DiplomaticPlay.GetTarget.GetAltName('NOM')|U]#! hat ein Stufe-#variable [DiplomaticPlay.GetInterestMarker(DiplomaticPlay.GetTarget).GetInterestStatus]#!-[concept_interest] in der [concept_strategic_region] dieses [Concept('concept_diplomatic_play', 'Diplomatiespiels')]"
 DIPLOMATIC_PLAY_SUPPORTS_TOOLTIP: "#variable [Country.GetAltName('NOM')|U]#! ist dafür"
 DIPLOMATIC_PLAY_OPPOSES_TOOLTIP: "#variable [Country.GetAltName('NOM')|U]#! ist dagegen"
 DIPLOMATIC_PLAY_UNDECIDED_TOOLTIP: "#variable [Country.GetAltName('NOM')|U]#! ist unentschlossen"
 DIPLOMATIC_PLAY_SWITCH_COUNTRY_TOOLTIP: "Als [DiplomaticPlay.GetInitiator.GetName|v] spielen\n$TOOLTIP_DELIMITER$\n[DiplomaticPlay.GetSwitchSideBreakdown][ConcatIfNeitherEmpty(GetDesc(DiplomaticPlay.SwitchSide(GetPlayer)), '\n\n')]"
 DIPLOMATIC_PLAY_SWITCH_COUNTRY_BREAKDOWN_CURRENT_GOVERNMENT: "Derzeitige Regierung:"
 DIPLO_PLAY_TAKE_SIDE_CURRENT_BACKER_CONFIRM: "Die Unterstützung für [COUNTRY.GetAltName('AKK')] beenden? Alle [Concept('concept_war_goal', '$concept_war_goals$')] oder [Concept('concept_obligation', '$concept_obligations$')], die man uns versprach, gehen dadurch verloren und unsere [Concept('concept_relations', '$concept_relations$')] werden sich um #variable #N [GetDefine('NDiplomacy', 'DIPLOMATIC_PLAY_ABANDON_SUPPORT_RELATIONS_IMPACT')]#!#! verschlechtern"
 DIPLO_PLAY_TAKE_SIDE_CIVIL_WAR_AGAINST_SUBJECT: "[TARGET_COUNTRY.GetAltName('NOM')|U] wird [COUNTRY.GetAltName('AKK')] als Ihr [concept_subject] ersetzen, sobald der [concept_war] beginnt."
 DIPLO_PLAY_TAKE_SIDE_CIVIL_WAR_AGAINST_POWER_BLOC_MEMBER: "[TARGET_COUNTRY.GetAltName('NOM')|U] wird [COUNTRY.GetAltName('AKK')] als Mitglied Ihres [Concept('concept_power_bloc', 'Machtblocks')] ersetzen, sobald der [concept_war] beginnt."
 DIPLOMATIC_PLAY_ESCALATION: "[DiplomaticPlay.GetPhaseName|v]"
 DIPLOMATIC_PLAY_ESCALATION_TOOLTIP: "#header Eskalation#!\nPhase: [DiplomaticPlay.GetPhaseName|v]\nWert: #variable [DiplomaticPlay.GetEscalation]#!"
 DIPLOMATIC_PLAY_SUPPORTS: "#header Unterstützter#!"
 DIPLOMATIC_PLAY_OPPOSES: "#header Gegner#!"
 DIPLOMATIC_PLAY_UNDECIDED: "#header Unentschlossene#!"
 DIPLOMATIC_PLAY_NAME: "[concept_diplomatic_play] in der Strategieregion „[DiplomaticPlay.GetStrategicRegion.GetName]“"
 DIPLOMATIC_PLAY_SWITCH_COUNTRY: "Seiten wechseln"
 DIPLOMATIC_PLAY_OUTLINER_TOOLTIP: "#header [concept_diplomatic_play] in der Region „[DiplomaticPlay.GetStrategicRegion.GetName]“#!\n$TOOLTIP_DELIMITER$\n$DIPLO_PLAY_INITIATOR$: [DiplomaticPlay.GetInitiator.GetName]\n$DIPLO_PLAY_TARGET$: [DiplomaticPlay.GetTarget.GetName]"
 COUNTRY_STRENGTH_POINT_ARMY_TOOLTIP: "Armee-Stärkepunkte insgesamt\n#variable [Country.GetStrengthPointArmy]#!\n\nEffektivität: #variable [Country.GetCombatEffectivenessArmy|2]#!\nVerstärkungsrate: #variable [Country.GetReinforcementRateArmy]#!\nVerfügbare Stärkepunkt-Kapazitäten von Kasernen: #variable [Country.GetBarracksStrengthPointCapacityArmy] Stärkepunkte#!"
 COUNTRY_STRENGTH_POINT_NAVY_TOOLTIP: "Marine-Stärkepunkte insgesamt\n#variable [Country.GetStrengthPointNavy]#!\n\nTötungsrate: #variable [Country.GetKillRateNavy]#!\nVerstärkungsrate: #variable [Country.GetReinforcementRateNavy]#!\nVerfügbare Stärkepunkt-Kapazitäten von Kasernen: #variable [Country.GetBarracksStrengthPointCapacityNavy] Stärkepunkte#!"
 NATIONAL_RESERVE_TOOLTIP: "#HEADER Landesreserve#!\n$TOOLTIP_DELIMITER$\n[concept_gold_reserves_desc]"
 INTEREST_GROUP: "[concept_interest_group]"
 INCREASE: "erhöhen"
 DECREASE: "verringern"
 NO_PREVIOUS_ELECTION: "Keine vorherigen [concept_election]"
 ADMIRAL_REPAIRING_DATE: "[Character.GetFullName] hat kürzlich eine Seeschlacht verloren und ist nicht verfügbar"
 ADMIRAL_REPAIRING_DATE_TOOLTIP: "#header Repariert#!\n[Character.GetFullName] hat kürzlich eine Seeschlacht verloren und ist nicht verfügbar"
 NO_ORDERS: "Keine Befehle"
 IN_RESERVE: "In Reserve"
 CURRENT: "Derzeit"
 START_OF_BATTLE: "Beginn der Schlacht"
 END_OF_BATTLE: "Schlachtende"
 UNDER_COMMAND: "Wird befehligt"
 BORROWED: "Geliehen"
 DETAILS: "Details"
 YOU: "(Wir)"
 ENEMY: "(Feind)"
 COMBAT_UNIT_NOT_MOBILIZED: "Inaktiv (nicht [Concept('concept_mobilize_battalion', 'mobilisiert')])"
 COMBAT_UNIT_NOT_UNDER_DIRECT_COMMAND: "Inaktiv (im Kampf, aber unter keinem direkten Kommando)"
 BATTLE_IN: "Schlacht in $STATE_REGION_NAME$"
 BATTLE_NEAR: "Schlacht bei $CITY_NAME$"
 BATTLE_FOR: "Schlacht um $CITY_NAME$"
 MILITARY_LENS_CHARACTER_TOOLTIP: "#HEADER $NAME$ #!"
 TOOLTIPPABLE_FORMAT: "#tooltippable #tooltip:$TOOLTIP_TAG$ $STRING$#!#!"
 BATTLE_STATUS_OVERVIEW: "#header [Battle.GetName]#!\n$TOOLTIP_DELIMITER$\nVorrückend: [Battle.GetAttacker.GetName] (@unit_offense! [Battle.GetOffenseRaw|v0])\nVerteidigend: [Battle.GetDefender.GetName] (@unit_defense! [Battle.GetDefenseRaw|v0])"
 BATTLE_DAYS_DURATION: "Die Schlacht dauerte [Battle.GetDurationInDaysRaw] Tag(e) zwischen \n[Battle.GetStartDate|v] und [Battle.GetEndDate|v]."
 BATTLE_STATUS_INCONCLUSIVE: "Diese Schlacht zwischen [Battle.GetAttacker.GetAltName('DAT')] und [Battle.GetDefender.GetAltName('DAT')] endete ergebnislos.\n$BATTLE_DAYS_DURATION$"
 BATTLE_STATUS_CONCLUDED: "#header [Battle.GetName]#!\nSieger: [Battle.GetWinner.GetName][AddTextIf(GreaterThan_CFixedPoint(Battle.GetOccupationWonRaw,'(CFixedPoint)0'),Concatenate('\n$BATTLE_STATUS_OCCUPATION_WON_LABEL$',Battle.GetOccupationWon))]\n\n$BATTLE_DAYS_DURATION$"
 BATTLE_STATE_VICTORY_SCORE_FORMAT: "$VALUE|0v$"
 BATTLE_STATE_OCCUPATION_FORMAT: "$VALUE|%0v$"
 BATTLE_STATUS_OCCUPATION_WON_LABEL: "Besetzung gewonnen:"
 BATTLE_STATUS_OCCUPATION_WON_TOOLTIP: "#header Gesamtbesetzung gewonnen#!\n[Battle.GetWinner.GetAltName('NOM')|U] gewann [Battle.GetOccupationWonRaw|%0v] [concept_occupation] in der Schlacht „[Battle.GetName]“\n$TOOLTIP_DELIMITER$\nSiegpunkte: [Battle.GetVictoryScore]\n\nDies führte zu:\n$BREAKDOWN$"
 BATTLE_STATE_OCCUPATION_ENTRY_GAINED: "$VALUE_MAYBE_BREAKDOWN$ Besetzung im Staat „[Battle.GetState.GetName]“ erlangt"
 BATTLE_STATE_OCCUPATION_ENTRY_CLEARED: "$VALUE_MAYBE_BREAKDOWN$ Besetzung im Staat „[Battle.GetState.GetName]“ entfernt"
 BATTLE_SCORE_SCRIPT_VALUE_FORMAT: "$NEUTRAL_SCRIPT_VALUE_FORMAT$"
 BATTLE_VICTORY_BASE: "Grundwert"
 BATTLE_VICTORY_UNIT_OCCUPATION_MULT: "Einheiten-Staatsbesatzungs-Modifikator"
 VICTORY_SCORE_TOOLTIP: "#header Siegpunkte „[Battle.GetName]“#!\nSieger: [Battle.GetWinner.GetName|U] $STRING$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 OCCUPATION_COST_TOOLTIP: "#header Besetzungskosten#!\n[Battle.GetState.GetName|U]: $COST|0v$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 OCCUPATION_COST_SCRIPT_VALUE_FORMAT: "$NEUTRAL_SCRIPT_VALUE_FORMAT$"
 OCCUPATION_COST_FROM_POPULATION: "[SCOPE.GetRootScope.GetState.GetPopulationSize|Dv] [Concept('concept_pop','$concept_population$')]"
 OCCUPATION_COST_FROM_NUM_HAZARDOUS_PROVINCES: "[SCOPE.ScriptValue('provinces_with_hazardous_terrain')|0v] [GetLabel('label_hazardous').GetName|vl]e [Concept('concept_province','$concept_provinces$')] im Staat „[SCOPE.GetRootScope.GetState.GetName]“"
 OCCUPATION_COST_FROM_NUM_FORESTED_PROVINCES: "[SCOPE.ScriptValue('provinces_with_forested_terrain')|0v] [GetLabel('label_forested').GetName|vl]e [Concept('concept_province','$concept_provinces$')] im Staat „[SCOPE.GetRootScope.GetState.GetName]“"
 OCCUPATION_COST_FROM_NUM_ELEVATED_PROVINCES: "[SCOPE.ScriptValue('provinces_with_elevated_terrain')|0v] [GetLabel('label_elevated').GetName|vl]e [Concept('concept_province','$concept_provinces$')] im Staat „[SCOPE.GetRootScope.GetState.GetName]“"
 OCCUPATION_COST_FROM_INFRASTRUCTURE_USAGE: "[SCOPE.GetRootScope.GetState.GetInfrastructureUsage|0v] [Concept('concept_infrastructure_usage', 'Infrastrukturnutzungsausgleich')] für schwieriges [concept_terrain]"
 OCCUPATION_COST_FROM_CONCENTRATION_OF_BATTALIONS: "[SCOPE.GetRootScope.GetState.GetTheater(SCOPE.GetRootScope.GetState.GetController.Self).GetName|U] hat [SCOPE.GetRootScope.GetState.GetTheater(SCOPE.GetRootScope.GetState.GetController.Self).GetNumMobilizedUnitsInTheater|0v] verteidigende @battalions! [Concept('concept_mobilize_battalion','mobilisierte Bataillone')] in [SCOPE.GetRootScope.GetState.GetTheater(SCOPE.GetRootScope.GetState.GetController.Self).GetNumProvinces|0v] [Concept('concept_province','$concept_provinces$')]"
 OCCUPATION_COST_MAX_VALUE_REACHED: "Maximale Kosten erreicht"
 OCCUPATION_COST_MIN_VALUE_REACHED: "Minimalkosten erreicht"
 TOOLTIP_STATE_OCCUPATION_PIESLICE: "#header [concept_occupation] im Staat „[State.GetName]“#!\n[OccupationPiechartData.GetCountry.GetName] [SelectLocalization(ObjectsEqual(State.AccessOwner, OccupationPiechartData.GetCountry), 'IS_STILL_IN_CONTROL_OF', 'OCCUPIES')] [OccupationPiechartData.GetOccupationFraction|v0%] des Staats „[State.GetName]“"
 OCCUPIES: "besetzt"
 IS_STILL_IN_CONTROL_OF: "kontrolliert immer noch"
 MILITARY_FORMATION_MANPOWER_TOOLTIP: "#header [concept_manpower]#!\n@manpower![MilitaryFormation.GetCurrentManpower|vK] / #maximum [MilitaryFormation.GetMaxManpower|vK]#! [concept_manpower]"
 BATTLE_UNITS_AT_START_TOOLTIP: "#header Anfängliche Zahl von [Concept('concept_unit', '$concept_units$')]#!\n$UNIT_ICON$ [Select_CString( Battle.IsNavalBattle, Concept('concept_flotilla','$concept_flotillas$'), Concept('concept_battalion', '$concept_battalions$'))]: $VALUE|v$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 BATTLE_INITIAL_WANTED_UNITS: "Forderte $UNIT_ICON$ #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v$#!#! [Select_CString(Battle.IsNavalBattle, Concept('concept_flotilla','$concept_flotillas$'), Concept('concept_battalion','$concept_battalions$'))] zu Beginn der Schlacht"
 BATTLE_BATTALIONS_BREAKDOWN_HEADER: "$UNIT_ICON$ $VALUE|v$ [Select_CString(Battle.IsNavalBattle, Concept('concept_flotilla','$concept_flotillas$'), Concept('concept_battalion','$concept_battalions$'))]"
 BATTLE_BATTALIONS_BREAKDOWN_HEADER_ATTACKER_START_OF_BATTLE: "[ConcatIfNeitherEmpty(Battle.GetAttackerNumWantedUnitsDesc, '\n')]$BATTLE_BATTALIONS_BREAKDOWN_HEADER$ greifen zu Beginn der Schlacht an"
 BATTLE_BATTALIONS_BREAKDOWN_HEADER_DEFENDER_START_OF_BATTLE: "[ConcatIfNeitherEmpty( Battle.GetDefenderNumWantedUnitsDesc, '\n' )]$BATTLE_BATTALIONS_BREAKDOWN_HEADER$ verteidigen zu Beginn der Schlacht"
 BATTLE_BATTALIONS_BREAKDOWN_HEADER_ATTACKER: "$BATTLE_BATTALIONS_BREAKDOWN_HEADER$ Angriff mit @manpower! [Battle.CalcCurrentAttackerManpower|*1v] [concept_manpower]"
 BATTLE_BATTALIONS_BREAKDOWN_HEADER_DEFENDER: "$BATTLE_BATTALIONS_BREAKDOWN_HEADER$ Verteidigung mit @manpower! [Battle.CalcCurrentDefenderManpower|*1v] [concept_manpower]"
 BATTLE_BATTALIONS_BREAKDOWN_DIRECTLY_COMMANDED: "$UNIT_ICON$ $VALUE|v$ stehen unter dem direkten Kommando von [Character.GetFullName]"
 BATTLE_BATTALIONS_BREAKDOWN_BY_GENERAL: "$UNIT_ICON$ $VALUE|v$ wurden von [Character.GetFullName] geliehen"
 BATTLE_BATTALIONS_BREAKDOWN_BY_FORMATION: "$UNIT_ICON$ $VALUE|v$ von [MilitaryFormation.GetName] geborgt"
 BATTLE_ATTACKER_CURRENT_MORALE_TOOLTIP: "Die Moral der Angreifer liegt derzeit bei #[GetMoraleColorString( Battle.CalcCurrentAttackerMorale )] [Battle.CalcCurrentAttackerMorale|0%]#!"
 BATTLE_DEFENDER_CURRENT_MORALE_TOOLTIP: "Die Moral der Verteidiger liegt derzeit bei #[GetMoraleColorString( Battle.CalcCurrentDefenderMorale )] [Battle.CalcCurrentDefenderMorale|0%]#!"
 BATTLE_ATTACKER_INITIAL_MORALE_TOOLTIP: "Die anfängliche Moral der Angreifer lag bei #[GetMoraleColorString( Battle.GetInitialAttackerMorale )] [Battle.GetInitialAttackerMorale|0%]#!"
 BATTLE_DEFENDER_INITIAL_MORALE_TOOLTIP: "Die anfängliche Moral der Verteidiger lag bei #[GetMoraleColorString( Battle.GetInitialDefenderMorale )] [Battle.GetInitialDefenderMorale|0%]#!"
 BATTLE_ATTACKER_ENDING_MORALE_TOOLTIP: "Am Ende lag die Moral der Angreifer bei #[GetMoraleColorString( Battle.GetEndingAttackerMorale )] [Battle.GetEndingAttackerMorale|0%]#!"
 BATTLE_DEFENDER_ENDING_MORALE_TOOLTIP: "Am Ende lag die Moral der Verteidiger bei #[GetMoraleColorString( Battle.GetEndingDefenderMorale )] [Battle.GetEndingDefenderMorale|0%]#!"
 BATTLE_BATTALION_GROUP_AVERAGE_MORALE: "Die durchschnittliche Moral der Einheiten liegt bei #[GetMoraleColorString( BattleBuildingEntry.GetAverageMorale )] [BattleBuildingEntry.GetAverageMorale|0%]#!"
 BATTLE_NONALLY_VICTORY: "[Battle.GetWinner.GetName] war siegreich!"
 BATTLE_ALLY_VICTORY: "Ihr Verbündeter „[Battle.GetWinner.GetName]“ war siegreich!"
 BATTLE_ALLY_DEFEAT: "Ihr Verbündeter „[Battle.GetWinner.GetName]“ war siegreich!"
 BATTLE_INCONCLUSIVE_OUTCOME: "Ein unklarer Ausgang!"
 BATTLE_CAPTURING_COUNTRY: "[Battle.GetCapturingCountry.GetAltName('NOM')] eroberte [Battle.GetNumCapturedProvinces|v] Provinzen"
 BATTLE_COUNTRY_DEFEAT: "[Battle.GetLoosingProvincesCountry.GetAltName('NOM')] verlor [Battle.GetNumCapturedProvinces|v] Provinzen"
 DEAD_TOOLTIP_ATTACKER: "Auf der [Battle.GetAttacker.GetAdjective|l]en Seite gab es [Battle.GetAttackerTotalDead|0v] [concept_dead]"
 DEAD_TOOLTIP_DEFENDER: "Auf der [Battle.GetDefender.GetAdjective|l]en Seite gab es [Battle.GetDefenderTotalDead|0v] [concept_dead]"
 WOUNDED_TOOLTIP_ATTACKER: "Auf der [Battle.GetAttacker.GetAdjective|l]en Seite gab es [Battle.GetAttackerTotalWounded|0v] [concept_wounded]"
 WOUNDED_TOOLTIP_DEFENDER: "Auf der [Battle.GetDefender.GetAdjective]en Seite gab es [Battle.GetDefenderTotalWounded|0v] [concept_wounded]"
 DEMORALIZED_TOOLTIP_ATTACKER: "Die [Battle.GetAttacker.GetAdjective|l]e Seite hat [Battle.GetAttackerTotalDemoralized|0v] [concept_morale_demoralized|l]e Soldaten"
 DEMORALIZED_TOOLTIP_DEFENDER: "Die [Battle.GetDefender.GetAdjective|l]e Seite hat [Battle.GetDefenderTotalDemoralized|0v] [concept_morale_demoralized|l]e Soldaten"
 BATTLE_MODIFIER_UNDER_COMMAND_HEADER: "Einheiten, die unter einem direkten Kommando stehen, erhalten folgende Vorteile:\n$TOOLTIP_DELIMITER$\n"
 BATTLE_MODIFIER_TOOLTIP_ATTACKER: "[Battle.GetAttackerUnderCommandBreakdown]"
 BATTLE_MODIFIER_TOOLTIP_DEFENDER: "[Battle.GetDefenderUnderCommandBreakdown]"
 BATTLE_BORROWED_TOOLTIP: "Ausgeliehene Einheiten erhalten keine Modifikatoren durch den [concept_commander]"
 MISSING_CHARACTER: "#N Diesem Kommando ist kein Charakter zugewiesen#!"
 DETACHMENTS: "#title Einheiten#!"
 STATE_TT_WORLD_MARKET_ACCESS: "[concept_world_market_access]: [State.GetWorldMarketAccess|v0%]"
 STATE_TT_TRADE_CAPACITY: "[concept_trade_capacity]: Verwendet [State.GetTradeCapacityUsage|v] von [State.GetTradeCapacity|v]"
 NOT_CONNECTED_TO_THE_WORLD_MARKET: "Handelt nicht auf dem [concept_world_market] (kein [GetBuildingType('building_trade_center').GetName])"
 EXPORTING_TO_TITLE: "#title Exportiert nach:#!"
 IMPORTING_FROM_TITLE: "#title Importiert aus:#!"
 MARKET_STATUS_MARKET_CAPITAL: "Auf dem Markt „[MARKET.GetName]“ ([Concept('concept_market_capital','$concept_market_capital_short$')])\n$MARKET_STATUS_CONNECTION_INFO$"
 MARKET_STATUS_CONNECTED_STATE: "Auf dem Markt „[MARKET.GetName]“\n$MARKET_STATUS_CONNECTION_INFO$"
 MARKET_STATUS_ISOLATED: "Teil des Markts „[MARKET.GetName]“ ([concept_isolated_state])"
 MARKET_STATUS_CONNECTION_INFO: "[concept_infrastructure]: [State.GetInfrastructureBalance|0+=][AddLocalizationIf(LessThan_CFixedPoint(State.GetMarketAccess, '(CFixedPoint)1'),'MARKET_STATUS_CONNECTION_INFO_LOW_ACCESS')]"
 MARKET_STATUS_CONNECTION_INFO_LOW_ACCESS: "\n@warning! Niedriger [concept_market_access]: #variable [State.GetMarketAccess|%0v]#!"
 MARKET_ACCESS_DESC_HEADER: "[concept_market_access] in [State.GetName]: $MARKET_ACCESS|%0v$\n$TOOLTIP_DELIMITER$\n"
 MARKET_ACCESS_DESC_BASE_MIN: "Da die [concept_infrastructure] auf #b 0#! ist, liegt der Grund-[concept_market_access] bei #P $MARKET_ACCESS|%0v$#!"
 MARKET_ACCESS_DESC_BASE_MAX: "Da die [concept_infrastructure_usage] kleiner oder gleich der [concept_infrastructure] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_INFRASTRUCTURE_DESC [State.GetInfrastructureBalance|0+=]#!#!) ist, liegt der Grund-[concept_market_access] bei #P $MARKET_ACCESS|%0v$#!"
 MARKET_ACCESS_DESC_BASE: "@warning! Da die [concept_infrastructure_usage] größer als die [concept_infrastructure] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_INFRASTRUCTURE_DESC [State.GetInfrastructureBalance|0+=]#!#!) ist, wird der Grund-[concept_market_access] auf #N $MARKET_ACCESS|%0v$#! reduziert"
 MARKET_ACCESS_DESC_CONNECTED_LAND: "Über den Landweg mit dem Markt „[State.GetMarket.GetName]“ verbunden"
 MARKET_ACCESS_DESC_CONNECTED_OVERSEAS: "Mit vollem Grund-[concept_market_access] von #P $MARKET_ACCESS|%0v$#! über die Häfen von [ShippingLane.GetBeginState.GetName] und [ShippingLane.GetEndState.GetName] mit dem Markt „[State.GetMarket.GetName]“ verbunden"
 MARKET_ACCESS_DESC_CONNECTED_OVERSEAS_INEFFICIENT: "Mit reduziertem [concept_market_access] von #N $MARKET_ACCESS|%0v$#! aufgrund einer niedrigen [concept_shipping_lane_effectiveness] über den [ShippingLane.GetCountry.GetAdjectiveNoFormatting|l]en [concept_shipping_lane] durch die Häfen von [ShippingLane.GetBeginState.GetName] und [ShippingLane.GetEndState.GetName] mit dem Markt „[State.GetMarket.GetName]“ verbunden"
 MARKET_ACCESS_DESC_DISCONNECTED_OVERSEAS: "Es ist weder über den Land- noch den Seeweg möglich, eine Verbindung zum Markt „[State.GetMarket.GetName]“ herzustellen"
 MARKET_ACCESS_DESC_NO_EXIT_PORT: "Konnte [State.GetMarket.GetName] nicht über Land verbinden und [State.GetName] hat keinen Hafen"
 MARKET_ACCESS_DESC_NO_ENTRY_PORT: "Konnte [State.GetMarket.GetName] nicht über Land verbinden und der Hafen in [State.GetName] kann keinen Kontakt zu anderen Häfen in [State.GetMarket.GetName] aufnehmen."
 MARKET_PANEL_DETAILS_TAB_LABEL: "Waren"
 MARKET_PANEL_DETAILS_TAB_LABEL_BOLD: "#bold $MARKET_PANEL_DETAILS_TAB_LABEL$#!"
 MARKET_PANEL_STATES_TAB_LABEL: "Mitglieder"
 MARKET_PANEL_STATES_TAB_LABEL_BOLD: "#bold $MARKET_PANEL_STATES_TAB_LABEL$#!"
 MARKET_PANEL_FOOD_SECURITY_TAB_LABEL: "Nahrungssicherheit"
 MARKET_PANEL_GOODS_PRICE_GOLD: "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=o]#!"
 MARKET_PANEL_GOODS_PRICE: "[Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=v]"
 MARKET_PANEL_GOODS_PRICE_BLUE: "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=u]#!"
 GOODS_LOCAL_PRICE_GOLD: "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetStatePrice)|%0=o]#!"
 GOODS_LOCAL_PRICE: "[Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetStatePrice)|%0=v]"
 GOODS_LOCAL_PRICE_BLUE: "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetStatePrice)|%0=u]#!"
 MARKET_PANEL_BALANCE_GOLD: "#v [FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance)|o=D]#!"
 MARKET_PANEL_BALANCE: "[FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance)|=Dv]"
 MARKET_PANEL_BALANCE_BLUE: "#v [FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance)|u=D]#!"
 GOODS_LOCAL_PRICE_PANEL_BALANCE_GOLD: "#v [FixedPointToInt(Goods.GetStateProductionConsumptionDiff)|o=D]#!"
 GOODS_LOCAL_PRICE_PANEL_BALANCE: "[FixedPointToInt(Goods.GetStateProductionConsumptionDiff)|=Dv]"
 GOODS_LOCAL_PRICE_PANEL_BALANCE_BLUE: "#v [FixedPointToInt(Goods.GetStateProductionConsumptionDiff)|u=D]#!"
 WORLD_MARKET_PANEL_BALANCE_GOLD: "#v [FixedPointToInt(Goods.GetWorldMarketExportsAndImportsBalance)|o=D]#!"
 WORLD_MARKET_PANEL_BALANCE: "[FixedPointToInt(Goods.GetWorldMarketExportsAndImportsBalance)|=Dv]"
 WORLD_MARKET_PANEL_BALANCE_BLUE: "#v [FixedPointToInt(Goods.GetWorldMarketExportsAndImportsBalance)|u=D]#!"
 WORLD_MARKET_PANEL_GOODS_PRICE_GOLD: "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetWorldMarketBasePrice)|%0=o]#!"
 WORLD_MARKET_PANEL_GOODS_PRICE: "[Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetWorldMarketBasePrice)|%0=v]"
 WORLD_MARKET_PANEL_GOODS_PRICE_BLUE: "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetWorldMarketBasePrice)|%0=u]#!"
 BUILDING_AVERAGE_WAGE: "@money!#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_AVERAGE_WAGE [Building.GetAverageAnnualWage|Dv]#!#! [concept_average_wage]"
 BUILDING_AVERAGE_WAGE_FLIPPED: "[concept_average_wage]: @money!#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_AVERAGE_WAGE [Building.GetAverageAnnualWage|Dv]#!#! "
 TOOLTIP_BUILDING_AVERAGE_WAGE: "#header [concept_average_wage] im Gebäude „[Building.GetName]“: @money![Building.GetAverageAnnualWage|Dv]#![AddLocalizationIf(Building.IsSubsidized,'INCLUDED_WAGE_SUBSIDIES')]\n$TOOLTIP_DELIMITER$\n[Building.GetAverageAnnualWageBreakdown]"
 INCLUDED_WAGE_SUBSIDIES: "\nBeinhaltet @money![Building.GetAverageAnnualWageSubsidies|Dv] von [concept_subsidies]"
 POPTYPE_AVG_ANNUAL_WAGE_ENTRY: "#tooltippable #tooltip:[Building.GetTooltipTag]|[PopType.GetTooltipTag],TOOLTIP_BUILDING_POPTYPE_AVERAGE_WAGE @money!$WAGE|Dv$#!#! - [PopType.GetName] ([Building.GetNumEmployeesOfType(PopType.Self)|vD])"
 TOOLTIP_BUILDING_POPTYPE_AVERAGE_WAGE: "#header [PopType.GetName] in [Building.GetName]#!\n[concept_average_wage] @money![Building.GetAverageAnnualWageForPopType(PopType.Self)|Dv]\n$TOOLTIP_DELIMITER$\n[Building.GetAverageAnnualWageBreakdownForPopType(PopType.Self)]"
 POP_AVG_ANNUAL_WAGE_ENTRY: "@money!$WAGE|Dv$ - [Pop.GetCulture.GetName] [Pop.GetReligion.GetName] ([Pop.GetNumWorkforce|vD])"
 NON_LOCAL_GOODS: "Kein [Concept('concept_good_production','$concept_good_produced$')] oder [Concept('concept_good_consumption','Verbrauchen')] im Staat „[State.GetName]“"
 STARVATION_HEADER: "Hunger"
 FOOD_SECURITY_SPECIFIC_COUNTRY: "[FoodSecurityFilter.GetSelectedCountry.GetAltName('NOM')|U]"
 FOOD_SECURITY_SPECIFIC_STATE: "[FoodSecurityFilter.GetSelectedState.GetCountry.GetFlagTextIcon] [FoodSecurityFilter.GetSelectedState.GetName]"
 FOOD_SECURITY_COUNTRY_FILTER_LABEL: "[SelectLocalization(FoodSecurityFilter.HasSpecificCountry, 'FOOD_SECURITY_SPECIFIC_COUNTRY', 'FOOD_SECURITY_FILTER_ALL_COUNTRIES')][AddLocalizationIf(ObjectsEqual(GetPlayer.Self, FoodSecurityFilter.GetSelectedCountry.Self),' (Wir)')]"
 FOOD_SECURITY_COUNTRY_FILTER_TOOLTIP: "[Concept('concept_country','$concept_countries$')] auf dem Markt [Market.GetOwner.GetFlagTextIcon] „[Market.GetName]“ filtern"
 FOOD_SECURITY_STATE_FILTER_LABEL: "[SelectLocalization(FoodSecurityFilter.HasSpecificState, 'FOOD_SECURITY_SPECIFIC_STATE', 'FOOD_SECURITY_FILTER_ALL_STATES')]"
 FOOD_SECURITY_STATE_FILTER_TOOLTIP: "[Concept('concept_state','$concept_states$')] auf dem Markt [Market.GetOwner.GetFlagTextIcon] „[Market.GetName]“ filtern"
 FOOD_SECURITY_FILTER_ALL_STATES: "Alle [Concept('concept_state','$concept_states$')]"
 FOOD_SECURITY_FILTER_ALL_COUNTRIES: "Alle [Concept('concept_country', '$concept_countries$')]"
 SHOW_STARVATION_MAP_MODE: "[concept_starvation] auf der Karte zeigen"
 SHOW_HARVEST_CONDITIONS_MAP_MODE: "[Concept('concept_harvest_condition','$concept_harvest_conditions$')] auf der Karte zeigen"
 MARKET_COUNTRIES_FILTER_TITLE: "[concept_country] zum Filtern auswählen"
 MARKET_STATES_FILTER_TITLE: "[concept_state] zum Filtern auswählen"
 NO_ONGOING_FAMINES: "Keine laufenden [Concept('concept_famine','$concept_famines$')]"
 HAS_ONGOING_FAMINES: "Laufende [Concept('concept_famine','$concept_famines$')] in [FoodSecurity.GetNumStatesWithFamineFormatted] [Concept('concept_state','$concept_states$')]"
 NUM_STATES_WITH_FAMINE_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL$#!#!"
 FOOD_SECURITY_GOODS_ITEM_HAS_SHORTAGE_IN_STATE: "@goods_shortage! [Goods.GetShortageRatioInState|0%v]"
 FOOD_SECURITY_GOODS_ITEM_HAS_SHORTAGE_IN_MARKET: "@goods_shortage! [Goods.GetShortageRatioInMarket|0%v]"
 FOOD_SECURITY_GOODS_ITEM_NO_SHORTAGE: "Keine $concept_shortage$"
 FOOD_SECURITY_POPULATION_NUMBER: "#v 999K#! [Concept('concept_pop', '$concept_pops$')]"
 GOODS_MARKET_PRICE_HEADER_SHORT: "[Concept('concept_market_price', '$concept_market_price_short$')]"
 BASIC_FOOD_POP_NEED_HEADER: "Grundnahrungsmittel-Pop-Bedarf"
 BASIC_FOOD_GOODS_CONTRIBUTION_BAR_CHART_HEADER: "[Concept('concept_good', '$concept_goods$')]-Beitrag zu [GetPopNeed('popneed_basic_food').GetName]-[Concept('concept_pop_needs','$concept_pop_need_short$')]"
 BASIC_FOOD_GOODS_LIST_HEADER: "[GetPopNeed('popneed_basic_food').GetName][ConcatIfNeitherEmpty(' ', AddLocalizationIf(GoodsList.HasStateContext, 'POP_NEED_IN_STATE'))] bestehen aus folgenden [Concept('concept_goods_substitution','$concept_goods_substitutable$')|l]en [Concept('concept_good', '$concept_goods$')]"
 POP_NEED_IN_STATE: "in [GoodsList.GetState.GetCountry.GetFlagTextIcon] [GoodsList.GetState.GetName]"
 POP_NEEDS_GOOD_BAR_CHART_ITEM_TOOLTIP: "#header [Goods.GetName|U]#!\n[GoodsList.GetPopConsumptionRatio(Goods.Self)|0%v] des[GetPopNeed('popneed_basic_food').GetName]-[Concept('concept_pop_needs','$concept_pop_need_short$s')] werden durch „[Goods.GetName]“ auf dem „[Goods.GetMarket.GetName]“ erfüllt, [SelectLocalization(FoodSecurityFilter.HasSpecificState, 'FOOD_SECURITY_SPECIFIC_STATE', 'FOOD_SECURITY_FILTER_ALL_STATES')][ConcatIfNeitherEmpty(', ', SelectLocalization(FoodSecurityFilter.HasSpecificCountry, 'FOOD_SECURITY_SPECIFIC_COUNTRY',  AddLocalizationIf(Not(FoodSecurityFilter.HasSpecificState), 'FOOD_SECURITY_FILTER_ALL_COUNTRIES')))]\n$TOOLTIP_DELIMITER$\n[concept_market_price]: @money![Goods.GetMarketPrice|0v] [Goods.GetCompareIconAgainstBasePrice(Goods.GetMarketPrice)] ([Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=-])"
 FOOD_SECURITY_HARVEST_CONDITION_TOOLTIP: "#header [HarvestConditionType.GetName]#!\n[HarvestConditionList.GetNumStatesWithType(HarvestConditionType.Self)|v] [Concept('concept_state','$concept_states$')] betroffen\n$TOOLTIP_DELIMITER$\n[HarvestConditionList.GetStatesBreakdown(HarvestConditionType.Self)]"
 BALANCE_TOOLTIP: "#header [Building.GetBalance|D+=] Wochensaldo#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$\n\nDas Saldo von @money!#v [Building.GetBalance|D+=]#! basiert auf Folgendem:#indent_newline:3 \n$BUILDING_BALANCE_BREAKDOWN$#!"
 BALANCE_DESC: "[Building.GetBalanceDesc]"
 BUILDING_BALANCE_BREAKDOWN: "#v @money![Building.GetLastRevenue|D+=]#! Wöchentliche Einnahmen\n#v @money![Negate_CFixedPoint(Building.GetTotalExpenses)|+=D]#! Wöchentliche Ausgaben"
 BUILDING_BALANCE_PROFIT: "#v @money!$VALUE|D+$#! des positiven Saldos und der abgerufenen Reserven gehen an:\n$BREAKDOWN$"
 BUILDING_BALANCE_PROFIT_WASTE: "Verschwendeter Gewinn:\n$BREAKDOWN$"
 BUILDING_BALANCE_LOSS: "#v @money!$VALUE|D-$#! zum Decken des negativen Saldos stammen aus:\n$BREAKDOWN$"
 BALANCE_INVESTMENT: "[concept_reinvestment]: #v @money!$VAL|D$#!"
 BALANCE_CASH_DEPOSIT: "[concept_cash_reserves]: #v @money!$VAL|D$#!"
 BALANCE_SHAREHOLDER_DIVIDENDS: "[Concept('concept_workforce', 'Beschäftigten')]-[concept_dividends]: #v @money!#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|D$#!#!#!"
 BALANCE_GOVERNMENT_DIVIDENDS: "[concept_government_dividends]: #v $VAL|D$#!"
 BALANCE_OTHER_BUILDING_DIVIDENDS: "[concept_dividends] für andere [Concept('concept_building', '$concept_buildings$')]: #v $VAL|D$#!"
 BALANCE_DIVIDENDS_TAX: "[concept_budget_dividends_taxes]: #v @money!$VAL|D$#!"
 BALANCE_CASH_WITHDRAW: "[concept_cash_reserves]: #v @money!$VAL|D-$#!"
 BALANCE_SHAREHOLDER_LOSSES: "[Concept('concept_workforce', 'Beschäftigten')]-Taschen: #v @money!#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|D-$#!#!#!"
 BALANCE_OTHER_BUILDING_LOSSES: "[concept_ownership_share]-Halter für andere [Concept('concept_building', '$concept_buildings$')]: #v $VAL|D-$#!"
 BALANCE_GOVERNMENT_LOSSES: "Die [concept_treasury]: #v $VAL|D-$#!"
 BALANCE_SUBSISTENCE_WASTE: "[concept_subsistence_building] verschwendet: #v @money!$VAL|D-$#!"
 BALANCE_DIVIDENDS_TAX_WASTE: "[concept_tax_waste]: #v @money!$VAL|D-$#!"
 SHAREHOLDER_BALANCE: "@money!$VAL|Dv$ – [Pop.GetName] ($SHARE|%1$)"
 BUILDING_BUDGET: "Etat: #BOLD @money![Building.GetLastIncome|1]#!"
 BUILDING_TAXES: "Wöchentliche Steuern:"
 TOOLTIP_BUILDING_TAXES_TOOLTIP: "#header Wöchentliche Steuern#!\nGesamt: @money![Building.GetTaxationRevenue|D+=]\n$TOOLTIP_DELIMITER$\n[Building.GetTaxationRevenueTooltip]\n\n[concept_taxes_desc]"
 UNINCORPORATED_STATE_NO_TAX: "Gebäude in [Concept('concept_unincorporated_state', 'Nicht-inkorporierten Staaten')] zahlen keine Einkommenssteuern\n"
 BUILDING_TYPE_NO_TAX: "Bei dieser Art von [concept_building] werden keine Steuern gezahlt\n"
 INCOME_TAX: "[concept_budget_income_taxes]: #tooltippable #tooltip:[GetRawTextTooltipTag('$INCOME_TAX_BREAKDOWN$')] #variable @money!$VAL|D+$#!#!#!"
 INCOME_TAX_BREAKDOWN: "#header Einkommenssteuern#!\nGesamt: @money!$VAL|D+=$\n$TOOLTIP_DELIMITER$\nSteuersätze:\n$BREAKDOWN$"
 INCOME_TAX_ENTRY: "$ENTRY_TYPE$: @money!$VAL|vD$\n$BREAKDOWN$"
 POLL_TAX: "[concept_budget_poll_taxes]: #tooltippable #tooltip:[GetRawTextTooltipTag('$POLL_TAX_BREAKDOWN$')] #variable @money!$VAL|D+$#!#!#!"
 POLL_TAX_BREAKDOWN: "#header Kopfsteuern#!\nGesamt: @money!$VAL|D+=$\n$TOOLTIP_DELIMITER$\nSteuersätze:\n$BREAKDOWN$"
 POLL_TAX_ENTRY: "$ENTRY_TYPE$: @money!$VAL|vD$\n$BREAKDOWN$"
 DIVIDENDS_TAX: "[concept_budget_dividends_taxes]: @money!$VAL|D+$"
 BUILDING_TAX_MODIFIER: "Steuermodifikator für Gebäude: #variable $VAL|%0+$#!"
 MAINTAINING: "Gleichbleibend @arrow_none!"
 HIRING: "Hochskalieren @arrow_up_up!"
 DOWNSIZING: "Gürtel enger schnallen @arrow_down_down!"
 EARNINGS_BREAKDOWN: "#header Einnahmen#!\nWert: @money![Building.GetEarnings|vD=]\n$TOOLTIP_DELIMITER$\nEinnahmen: #BOLD #V @money![Building.GetLastRevenue|D+=]#!#![Building.GetLastMaterialExpensesDesc][Building.GetLastSlaveUpkeepDesc]"
 WORKFORCE: "#title Beschäftigte#!"
 SORTED_BY: "Nach #BOLD durchschnittlichem Gehalt#! sortiert"
 SORTED_BY_POPULATION: "Sortiert nach #BOLD Bevölkerung#!"
 WARS_LABEL: "#title Kriege#!"
 WARS: "[Concept('concept_war','$concept_wars$')]"
 NO_WARS: "Keine $WARS$"
 ACTIVE_DIPLOMATIC_PLAYS: "Aktive [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')]"
 NO_ACTIVE_DIPLOMATIC_PLAYS: "Keine aktiven [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')]"
 DIPLOMATIC_PLAYS_AND_WARS: "$concept_wars$ & $concept_diplomatic_plays$"
 ONGOING_DIPLOMATIC_ACTIONS_CONCEPT: "[Concept('concept_ongoing_diplomatic_action', '$concept_ongoing_diplomatic_actions$')]"
 NO_WARS_OR_DIPLOMATIC_PLAYS: "Kein aktiven [Concept('concept_war','$concept_wars$')] oder [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')]"
 DIPLOMATIC_ACTION_NAME: "[DiplomaticAction.GetNameNoFormatting|U]"
 DIPLOMATIC_ACTION_ACTIVE_AND_NON_ACTIVE_NAME: "[DiplomaticAction.GetNameWithContext]"
 DIPLOMATIC_ACTION_BREAK_NAME: "[DiplomaticAction.GetBreakName|U]"
 DIPLO_ACTIONS: "[Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')] gegen [Country.GetAltName('AKK')]"
 NO_DIPLO_ACTIONS: "Es gibt keine verfügbare [concept_diplomatic_action]"
 NO_OVERLORD_ACTIONS: "Keine verfügbare [concept_overlord_action]"
 NO_SUBJECT_ACTIONS: "Keine verfügbare [concept_subject_action]"
 NO_BLOC_LEADER_ACTIONS: "Keine verfügbare [concept_bloc_leader_action]"
 NO_BLOC_MEMBER_ACTIONS: "Keine verfügbare [concept_bloc_member_action]"
 NO_DIPLO_PLAYS: "Es gibt kein verfügbares [concept_diplomatic_play]"
 NO_ACTIVE_DIPLOMACY: "Keine aktive Diplomatie"
 DIPLOMATIC_DEMANDS_TARGETING_COUNTRY: "[Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')] gegenüber [Country.GetAltName('DAT')]"
 UNAVAILABLE_DIPLOMATIC_DEMANDS_TARGETING_COUNTRY: "Nicht verfügbare $concept_diplomatic_demands_short$"
 UNAVAILABLE_DIPLOMATIC_DEMANDS_TARGETING_STATE: "Nicht verfügbare $concept_diplomatic_demands_short$ gegenüber $concept_states$"
 NO_DIPLOMATIC_DEMANDS_TARGETING_COUNTRY: "Keine [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')] verfügbar"
 NO_DIPLOMATIC_DEMANDS_TARGETING_STATE: "Keine [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')] verfügbar"
 DIPLOMATIC_STATUS_HEADER: "#title Diplomatiestatus#!"
 TRUCES: "Waffenstillstände"
 OBLIGATIONS_OWED_FROM: "Geschuldete Verpflichtungen von"
 OBLIGATIONS_OWED_TO: "Hat eine Verpflichtung gegenüber:"
 INTEREST_MARKERS: "#title [Concept('concept_interest', '$concept_interests$')]#!"
 OH_DEER: "„#italic Ach du lieber Hirsch! Es gibt #! #bold [ErrorDeer.NumberOrErrors|v]#! #italic Fehler!#!“"
 ERROR_DEER_SLOW_TICK_OPERATIONS: "#header Langsame Fehlererfassung#!"
 NOT_AVAILABLE: "n. a."
 SOL_SHORT: "[Concept('concept_sol', '$SOL_SHORT_TEXT$')]"
 SOL_SHORT_TEXT: "LST"
 TRUCE_WITH: "[concept_truce] mit [Country.GetAltName('DAT')]"
 TRUCE_TOOLTIP: "#header [concept_truce] mit [Country.GetAltName('DAT')]#!\n$TOOLTIP_DELIMITER$\n$concept_truce$ dauert bis #variable [Truce.GetFirstTruceDate]#! an"
 BATTLE_LOSSES_ATTACKER_STATS: "Verluste (Angreifer): #v [Negate_int32(Battle.GetAttackerLostUnits)|+=]#!"
 BATTLE_LOSSES_DEFENDER_STATS: "Verluste (Verteidiger): #v [Negate_int32(Battle.GetDefenderLostUnits)|+=]#!"
 THEATER: "Schauplatz"
 show_supply_areas_lens_option: "Versorgungsregionen zeigen"
 show_supply_areas_lens_option_tooltip: "Versorgungsregionen zeigen"
 planned_advance: "Geplanter Vormarsch"
 rapid_advance: "Schneller Vormarsch"
 dispersed: "Zerstreut"
 defensive: "Defensiv"
 TITLE_MAIN_OBJECTIVE: "#title Hauptziel#!"
 STOCKPILE_CURRENT_TOOLTIP: "#header Vorrat#!\n$TOOLTIP_DELIMITER$\n$STOCKPILE_MAXIMUM_TOOLTIP$"
 STOCKPILE_MAXIMUM_TOOLTIP: "#title Vorratsmodifikatoren:#!\n[Stockpile.GetCapacityBreakdown]\n\n$STRATEGIC_GOODS_STOCKPILE_CONCEPT$"
 PACKAGE_TOOLTIP: ""
 STRATEGIC_GOODS_STOCKPILE_CONCEPT: "#concept Wie viele Munitionskisten derzeit auf Vorrat sind / Wie viele Munitionskisten maximal auf Vorrat sein können#!"
 OBJ_STANCE_TOOLTIP: "#header Zielhaltung: #![AreaOfOperation.GetAOStance(GetPlayer)]"
 OBJ_STANCE_DETACHMENT_TOOLTIP: "#header Zielhaltung: #![MilitaryCommandDetachment.GetAOStance]"
 occupation_lens_option: "Besetzung"
 occupation_lens_option_tooltip: "#header Besetzung#!"
 power_projection_lens_option: "Machtprojektion"
 power_projection_lens_option_tooltip: "#header Machtprojektion#!"
 no_power_projection: "Machtprojektion beenden"
 create_army_lens_option: "Armee erschaffen"
 create_army_lens_option_tooltip: "#header Armee erschaffen#!"
 create_fleet_lens_option: "Flotte erschaffen"
 create_fleet_lens_option_tooltip: "#header Flotte erschaffen#!"
 HAS_NO_POWER_PROJECTION: "#N In diesem Staat wird keine Macht projiziert#!"
 HAS_POWER_PROJECTION: "#N In diesem Staat ist eine Machtprojektion im Gange#!"
 ALREADY_HAS_POWER_PROJECTION: "#N Dieses Kommando hat bereits $LEVEL$#!"
 COMMAND_NOT_ADJACENT_TO_STRATEGIC_REGION: "#N Dieses Kommando grenzt nicht an eine Strategieregion an#!"
 COMMAND_NOT_IN_STRATEGIC_REGION: "#N Dieses Kommando befindet sich nicht in dieser Strategieregion#!"
 establish_presence: "Präsenz aufbauen"
 project_power: "Macht projizieren"
 project_great_power: "Großmacht projizieren"
 presence: "Präsenz"
 power: "Macht"
 no_power: "Keine Macht"
 RANK_HEADER: "#header Machtrang#!"
 RANK_TOOLTIP_NEXT: "Beträgt das $concept_prestige$ [COUNTRY.GetAltName('GEN')] mindestens [COUNTRY.GetPrestigeForNextRank|v], erhöht sich sein $concept_rank$ auf [COUNTRY.GetNextRank|v]"
 RANK_TOOLTIP_PREV: "Liegt das $concept_prestige$ [COUNTRY.GetAltName('GEN')] für längere Zeit unter [COUNTRY.GetPrestigeToMaintainRank|v], reduziert sich sein $concept_rank$ auf [COUNTRY.GetPreviousRank|v]"
 RANK_TOOLTIP_MAX_SUBJECT: "@information! [COUNTRY.GetAltName('NOM')|U] kann keinen höheren $concept_rank$ als $HIGHEST_RANK|v$ erreichen, da es ein [concept_subject] [Country.GetOverlord.GetAltName('GEN')] ist. Dies begrenzt es zusätzlich auf der Weltrangliste, auf der es maximal Position #v ##$HIGHEST_POSITION$#! erreichen kann"
 RANK_TOOLTIP_MAX_COUNTRY_TYPE: "@information! [COUNTRY.GetAltName('NOM')|U] kann keinen höheren $concept_rank$ als $HIGHEST_RANK|v$ erreichen, da es den Status „$COUNTRY_TYPE|v$“ hat. Dies begrenzt es zusätzlich auf der Weltrangliste, auf der es maximal Position #v ##$HIGHEST_POSITION$#! erreichen kann"
 COUNTRY_RANK_TOOLTIP: "#header [concept_rank]#!\n$TOOLTIP_DELIMITER$\n[COUNTRY.GetAltName('NOM')|U] hält derzeit den $concept_rank$ #variable [COUNTRY.GetRank]#! und befindet sich in der Weltrangliste auf Position #variable ##[COUNTRY.GetCountryScorePositionDesc]#!.\n\n[concept_prestige]: @prestige!#tooltippable #tooltip:[COUNTRY.GetTooltipTag],COUNTRY_PRESTIGE_BREAKDOWN [COUNTRY.GetPrestige|v]#!#!"
 COUNTRY_PRESTIGE_BREAKDOWN: "#header [concept_prestige] [Country.GetAltName('VON')]:#!\nDerzeit: @prestige![Country.GetPrestige|v]\n$TOOLTIP_DELIMITER$\n[Country.GetPrestigeDesc]"
 OBSERVER_RANK_TOOLTIP: "#header [concept_rank]#!\n#v ##0 #!$OBSERVER_NO_COUNTRY_SELECTED$"
 POWER_BLOC_RANK_TOOLTIP: "#header [concept_power_bloc_rank]#!\n$TOOLTIP_DELIMITER$\n„$POWER_BLOC_NAME$“ ist derzeit #variable $POWER_BLOC_RANK_FORMATTED$#! von allen [Concept('concept_power_bloc', '$concept_power_blocs$n')] aufgrund des [Concept('concept_prestige', 'Gesamtprestiges')] von @prestige!#v #tooltippable #tooltip:$POWER_BLOC_TOOLTIP_TAG$,POWER_BLOC_PRESTIGE_BREAKDOWN $POWER_BLOC_TOTAL_PRESTIGE$#!#!#!"
 POWER_BLOC_PRESTIGE_BREAKDOWN: "#header [concept_prestige] von „[PowerBloc.GetName]“#!\nGesamt: @prestige![PowerBloc.GetTotalPrestige|v]\n$TOOLTIP_DELIMITER$\n[PowerBloc.GetPrestigeDesc]"
 POWER_BLOC_PRESTIGE_BREAKDOWN_COUNTRY_ITEM: "[COUNTRY.GetAltName('NOM')|U]: @prestige!#tooltippable #tooltip:[COUNTRY.GetTooltipTag],COUNTRY_PRESTIGE_BREAKDOWN [COUNTRY.GetPrestige|v]#!#!"
 POWER_BLOC_MEMBER_COUNTRY_NAME_AND_PRESTIGE: "[Country.GetAltName('NOM')|U] (@prestige!#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_PRESTIGE_BREAKDOWN [Country.GetPrestige|v]#!#![AddLocalizationIf(Country.IsPowerStruggling, 'POWER_BLOC_POWER_STRUGGLE_WARNING')])"
 POWER_BLOC_POWER_STRUGGLE_WARNING: "#tooltip:[Country.GetTooltipTag],COUNTRY_POWER_BLOC_POWER_STRUGGLE_STATUS @warning!#!"
 HOMELAND_MAP_MARKER_TOOLTIP: "Das [HomelandMarker.GetCulture.GetName|l]e Volk sieht [State.GetName] als [concept_homeland] an.\nBesitzer: [State.GetOwner.GetAltName('NOM')|U]"
 CURRENT_RANK_INFO: "Um #variable [COUNTRY.GetNextRank]#! zu werden, sind #variable #bold [COUNTRY.GetPrestigeForNextRank]#!#! Prestige nötig.\n\nSein [concept_prestige] von #variable #bold [COUNTRY.GetPrestige]#!#! basiert auf Folgendem:\n[COUNTRY.GetPrestigeDesc]\n\nFällt das [concept_prestige] auf unter #v [COUNTRY.GetPrestigeForCurrentRank]#!, verliert es seinen Status als #v [COUNTRY.GetRank]#!."
 CURRENT_RANK_INFO_LOWERCASE: "Um zu #variable [Country.GetNextRank]#! zu werden, sind #variable #bold [Country.GetPrestigeForNextRank]#!#! [concept_prestige] nötig.\n\nSein [concept_prestige] von #variable #bold [Country.GetPrestige]#!#! basiert auf Folgendem:\n[Country.GetPrestigeDesc]\n\nFällt das [concept_prestige] auf unter #v [Country.GetPrestigeForCurrentRank]#!, verlieren es seinen Status als #v [Country.GetRank]#!."
 AGENDAS_TITLE: "\n#title Agenda:#!"
 COST: "Kosten: #variable $VALUE$#! $TYPE$"
 COST_MONEY: "Kosten: @money!#variable $VALUE|K$#!"
 COST_CREDIT: "Kosten: @money!#variable $VALUE|K$#! Kredit"
 AUTHORITY: "@aut![Nbsp][concept_authority]"
 BUREAUCRACY: "@bur![Nbsp][concept_bureaucracy]"
 INFLUENCE: "@inf![Nbsp][concept_influence]"
 VERY_STRONGLY_AGAINST_PROGRESS: "#N #bold Sehr stark dagegen#!#!"
 STRONGLY_AGAINST_PROGRESS: "#N #bold Stark dagegen#!#!"
 AGAINST_PROGRESS: "#N #bold Dagegen#!#!"
 FOR_PROGRESS: "#P #bold Dafür#!#!"
 STRONGLY_FOR_PROGRESS: "#P #bold Deutlich dafür#!#!"
 VERY_STRONGLY_FOR_PROGRESS: "#P #bold Sehr deutlich dafür#!#!"
 DURATION: "Dauer"
 STARTING_DIPLO_PLAYS: "Beginnt [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')]"
 MODIFIER_LABEL: ""
 MODIFIERS_HEADER: "#title Modifikatoren#!"
 MODIFIERS_ATTACKER_HEADER: "#title Angreifer-Modifikatoren#!"
 MODIFIERS_DEFENDER_HEADER: "#title Verteidiger-Modifikator#!"
 CASUALTIES_ATTACKER_HEADER: "#title Angreifer-Verluste#!"
 CASUALTIES_DEFENDER_HEADER: "#title Verteidiger-Verluste#!"
 CASUALTY_ENTRY_HEADER: "[CultureCasualtyStatistics.GetCulture.GetName|vD]"
 CASUALTY_ENTRY_DEAD: "Tote: [CultureCasualtyStatistics.GetDead|vD]"
 CASUALTY_ENTRY_WOUNDED: "Verwundete: [CultureCasualtyStatistics.GetWounded|vD]"
 CASUALTY_ENTRY_TOOLTIP: "Auf dieser Seite der Schlacht gab es [CultureCasualtyStatistics.GetDead|v] tote und [CultureCasualtyStatistics.GetWounded|v] verwundete [CultureCasualtyStatistics.GetCulture.GetName|l]e [Concept('concept_pop', '$concept_pops$')]"
 BATTLE_STARTING_ATTACKER_STATS: "Angreifende Armee zu Beginn der Schlacht:\n@battalions! [Battle.GetStartingAttackerUnits|v] Bataillone\n@manpower![Battle.GetStartingAttackerManpower|v] Mannstärke"
 BATTLE_END_ATTACKER_STATS: "Angreifende Armee am Ende der Schlacht:\n@battalions! [Battle.GetFinalAttackerUnits|v]  Bataillone\n@manpower![Battle.GetFinalAttackerManpower|v] Mannstärke"
 BATTLE_STARTING_DEFENDER_STATS: "Verteidigende Armee zu Beginn der Schlacht:\n@battalions! [Battle.GetStartingDefenderUnits|v] Bataillone\n@manpower![Battle.GetStartingDefenderManpower|v] Mannstärke"
 BATTLE_END_DEFENDER_STATS: "Verteidigende Armee am Ende der Schlacht:\n@battalions! [Battle.GetFinalDefenderUnits|v] Bataillone\n@manpower![Battle.GetFinalDefenderManpower|v] Mannstärke"
 OFFER_OBLIGATION: "[concept_obligation] anbieten"
 CALL_IN_OBLIGATION: "[concept_obligation] einfordern"
 SWAY_TYPE_CALL_ALLY: "[Concept('concept_ally', 'Verbündeten')] einfordern"
 SWAY_TYPE_BECOME_SUBJECT: "[concept_subject] werden"
 SWAY_TYPE_TRANSFER_SUBJECT: "[Concept('concept_subject', '$concept_subjects$')] übertragen"
 SWAY_TYPE_TRANSFER_STATE: "[Concept('concept_state', '$concept_states$')] übertragen"
 SWAY_TYPE_DIPLOMATIC_PACT: "[Concept('concept_diplomatic_pact','Diplomatiepakte')]:"
 SWAY_OFFER_TRANSFER_SUBJECT: "[COUNTRY_THIRD_PARTY.GetName|U] übertragen"
 SWAY_OFFER_BECOME_SUBJECT: "Wird #v $SUBJECT_TYPE$#!"
 SWAY_OFFER_TRANSFER_STATE: "[STATE.GetName|U] übertragen"
 SWAY_OFFER_WARGOAL_TYPE: "Mit „[WarGoalType.GetName]“ beeinflussen"
 REVERSE_SWAY_OFFER_WARGOAL_TYPE: "„[WarGoalType.GetName]“ verlangen"
 REVERSE_SWAY_OFFER_OBLIGATION: "[concept_obligation] verlangen"
 REVERSE_SWAY_CALL_IN_OBLIGATION: "Einfordern von [concept_obligation] verlangen"
 SWAY_OFFER_TYPE: "Mit „[SwayOfferType.GetName]“ beeinflussen"
 REVERSE_SWAY_OFFER_TYPE: "„[SwayOfferType.GetName]“ verlangen"
 SWAY_OFFER_NAME: "Mit „$NAME|v$“ beeinflussen"
 REVERSE_SWAY_OFFER_NAME: "„$NAME|v$“ verlangen"
 DIPLO_PLAY_PREFERENCE_ON_THE_FENCE: "Bevorzugt keine der beiden Seiten"
 DIPLO_PLAY_STRONG_PREFERENCE_INITIATOR: "Bevorzugt [DiplomaticPlay.GetInitiator.GetAltName('AKK')]"
 DIPLO_PLAY_STRONG_PREFERENCE_TARGET: "Bevorzugt [DiplomaticPlay.GetTarget.GetAltName('AKK')]"
 DIPLO_PLAY_PREFERENCE_INITIATOR: "Bevorzugt [DiplomaticPlay.GetInitiator.GetAltName('AKK')] leicht"
 DIPLO_PLAY_PREFERENCE_TARGET: "Bevorzugt [DiplomaticPlay.GetTarget.GetAltName('AKK')] leicht"
 DIPLO_PLAY_PREFERENCE_FOR_COUNTRY_DESC: "#header [COUNTRY.GetAltName('NOM')|U] bevorzugt [COUNTRY_THIRD_PARTY.GetAltName('AKK')]#!\n$DETAILS$"
 DIPLO_PLAY_PREFERENCE_TOOLTIP: "#header Unterstützungstendenz für [COUNTRY.GetAltName('AKK')]#!\n$TOOLTIP_DELIMITER$\nTendenz zur Unterstützung [INITIATOR_COUNTRY.GetAltName('GEN')]: #tooltippable #tooltip:$INITIATOR_BREAKDOWN_TAG$ $INITIATOR_SCORE|v$#!#!\nTendenz zur Unterstützung [TARGET_COUNTRY.GetAltName('GEN')]: #tooltippable #tooltip:$TARGET_BREAKDOWN_TAG$ $TARGET_SCORE|v$#!#!"
 DIPLO_PLAY_PREFERENCE_DESC: "[COUNTRY.GetAdjective|U]er relativer Vorzug für [ALLY_COUNTRY.GetAltName('AKK')]: $SCORE|+=$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 DIPLO_PLAY_PREFERENCE_BREAKDOWN: "Vorzug für die Unterstützung [ALLY_COUNTRY.GetAltName('VON')]: #v $ALLY_SCORE|+=$#!#indent_newline:3 \n$ALLY_BREAKDOWN$\n#!\nVorzug für die Unterstützung [ENEMY_COUNTRY.GetAltName('VON')]: #v $ENEMY_SCORE|+=$#!#indent_newline:3 \n$ENEMY_BREAKDOWN$#!\n\n[concept_neutrality]: #v $NEUTRALITY_SCORE$#! #indent_newline:3 \n$NEUTRALITY_BREAKDOWN$#!\n\n@information! Der relative Vorzug errechnet sich aus dem [COUNTRY.GetAdjective|l]en Vorzug für die Unterstützung [ALLY_COUNTRY.GetAltName('GEN')] #b abzüglich#! entweder dem Vorzug für die Unterstützung [ENEMY_COUNTRY.GetAltName('GEN')] oder dem Wert in [concept_neutrality], je nachdem, welches Ergebnis niedriger ausfällt"
 DIPLO_PLAY_CANNOT_SUPPORT_COUNTRY: "#header [COUNTRY.GetAltName('NOM')|U] bevorzugt [COUNTRY_THIRD_PARTY.GetAltName('AKK')]#!\n$TOOLTIP_DELIMITER$\n[COUNTRY.GetAltName('NOM')|U] kann [COUNTRY_THIRD_PARTY.GetAltName('AKK')] nicht mehr unterstützen aufgrund von:\n$ERRORS$"
 DIPLO_PLAY_NEUTRALITY_ALREADY_COMMITTED: "[concept_neutrality] ist immer #n 0#!, wenn ein [concept_country] sich bereits auf eine Seite festgelegt hat"
 DIPLO_PLAY_PREFERENCE_DESC_NESTED_TOOLTIPS: "[COUNTRY.GetAdjective|U]er relativer Vorzug für [ALLY_COUNTRY.GetAltName('AKK')]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $SCORE|+=$#!#!"
 DIPLO_PLAY_PREFERENCE_BREAKDOWN_NESTED_TOOLTIPS: "#header [COUNTRY.GetAdjective|U]er relativer Vorzug für [ALLY_COUNTRY.GetAltName('AKK')]: $SCORE|+=$#!\n$TOOLTIP_DELIMITER$\nVorzug für die Unterstützung [ALLY_COUNTRY.GetAltName('VON')]: #tooltippable #tooltip:$ALLY_BREAKDOWN_TAG$ $ALLY_SCORE|v$#!#!\nVorzug für die Unterstützung [ENEMY_COUNTRY.GetAltName('VON')]: #tooltippable #tooltip:$ENEMY_BREAKDOWN_TAG$ $ENEMY_SCORE|v$#!#!\n[concept_neutrality]: #tooltippable #tooltip:$NEUTRALITY_BREAKDOWN_TAG$ $NEUTRALITY_SCORE|v$#!#!\n\n@information! Der relative Vorzug errechnet sich aus dem [COUNTRY.GetAdjective|l]en Vorzug für die Unterstützung [ALLY_COUNTRY.GetAltName('GEN')] abzüglich entweder dem Vorzug für die Unterstützung [ENEMY_COUNTRY.GetAltName('GEN')] oder dem Wert in [concept_neutrality], je nachdem, welches Ergebnis niedriger ausfällt"
 CALL_ALLY_DECLINED_BROKEN_PACTS_DESC: "Wenn wir ablehnen, brechen wir diesen [Concept('concept_diplomatic_pact', '$concept_diplomatic_pacts_short$')]:\n#v $LIST$#!"
 SWAY_OFFER_TITLE: "Beeinflussungsversuch"
 REVERSE_SWAY_OFFER_TITLE: "Unterstützungsangebot"
 SWAY_OFFER_TITLE_SELECTOR: "[SelectLocalization(Proposal.GetDiplomaticPlay.GetIncomingSway(Proposal.GetActor.Self, Proposal.GetRecipient.Self).IsReverseSway, 'REVERSE_SWAY_OFFER_TITLE', 'SWAY_OFFER_TITLE')]"
 SWAY_OFFER_WARGOAL_DESC: "[COUNTRY.GetAltName('NOM')|U] bietet uns das [concept_war_goal] „#variable [WarGoal.GetName]#!“, wenn wir das laufende [concept_diplomatic_play] gegen [ENEMY_COUNTRY.GetAltName('AKK')] unterstützen."
 SWAY_OFFER_OBLIGATION_DESC: "[COUNTRY.GetAltName('NOM')|U] bietet uns eine [concept_obligation] an, wenn wir das laufende [concept_diplomatic_play] gegen [ENEMY_COUNTRY.GetAltName('AKK')] unterstützen."
 SWAY_OFFER_CALL_IN_OBLIGATION_DESC: "[COUNTRY.GetAltName('NOM')|U] bittet um unsere Unterstützung im laufenden [concept_diplomatic_play] gegen [ENEMY_COUNTRY.GetAltName('AKK')|U].\n\n$THEY_CALL_IN_OBLIGATION$"
 SWAY_OFFER_CALL_ALLY_DESC: "[COUNTRY.GetAltName('NOM')|U] fordert unsere Unterstützung als [concept_ally] im laufenden [concept_diplomatic_play] gegen [ENEMY_COUNTRY.GetAltName('AKK')|U].\n\nWenn wir annehmen, fügen wir ein [concept_war_goal] für uns als [concept_secondary_demand][ConcatIfNeitherEmpty('\n\n',GetPlayer.GetPactsBrokenFromCallToArmsDeclinedDesc(COUNTRY.Self))] hinzu"
 SWAY_OFFER_BECOME_SUBJECT_DESC: "[COUNTRY.GetAltName('NOM')|U] bietet an, unser $SUBJECT_TYPE|v$ zu werden, wenn wir das laufende [concept_diplomatic_play] gegen [ENEMY_COUNTRY.GetAltName('AKK')] unterstützen."
 SWAY_OFFER_TRANSFER_SUBJECT_DESC: "[COUNTRY.GetAltName('NOM')|U] bietet an, das [concept_subject] „[COUNTRY_THIRD_PARTY.GetName]“ an uns zu übertragen, wenn wir das laufende [concept_diplomatic_play] gegen [ENEMY_COUNTRY.GetAltName('AKK')] unterstützen."
 SWAY_OFFER_TRANSFER_STATE_DESC: "[COUNTRY.GetAltName('NOM')|U] bietet an, den [concept_state] „[STATE.GetName]“ an uns zu übertragen, wenn wir das laufende [concept_diplomatic_play] gegen [ENEMY_COUNTRY.GetAltName('AKK')] unterstützen."
 SWAY_OFFER_DIPLOMATIC_PACT_DESC: "[COUNTRY.GetAltName('NOM')|U] bietet uns eine „[DIPLOMATIC_ACTION_TYPE.GetName]“ an, wenn wir das laufende [concept_diplomatic_play] gegen [ENEMY_COUNTRY.GetAltName('AKK')] unterstützen."
 REVERSE_SWAY_OFFER_WARGOAL_DESC: "[COUNTRY.GetAltName('NOM')|U] bietet uns Unterstützung im laufenden [concept_diplomatic_play] gegen [ENEMY_COUNTRY.GetAltName('AKK')] im Gegenzug für das [concept_war_goal] „#variable [WarGoal.GetName]#!“ an."
 REVERSE_SWAY_OFFER_OBLIGATION_DESC: "[COUNTRY.GetAltName('NOM')|U] bietet uns Unterstützung im laufenden [concept_diplomatic_play] gegen [ENEMY_COUNTRY.GetAltName('AKK')] im Gegenzug für das [concept_war_goal] „[WarGoal.GetName]“ an."
 REVERSE_SWAY_OFFER_CALL_IN_OBLIGATION_DESC: "[COUNTRY.GetAltName('NOM')|U] bietet uns Unterstützung im laufenden [concept_diplomatic_play] gegen [ENEMY_COUNTRY.GetAltName('AKK')] im Gegenzug für die Entbindung von der geschuldeten [concept_obligation] an."
 REVERSE_SWAY_OFFER_BECOME_SUBJECT_DESC: "[COUNTRY.GetAltName('NOM')|U] bietet uns Unterstützung im laufenden [concept_diplomatic_play] gegen [ENEMY_COUNTRY.GetAltName('AKK')] an, wenn wir sein „$SUBJECT_TYPE|v$“ werden."
 REVERSE_SWAY_OFFER_TRANSFER_SUBJECT_DESC: "[COUNTRY.GetAltName('NOM')|U] bietet uns Unterstützung im laufenden [concept_diplomatic_play] gegen [ENEMY_COUNTRY.GetAltName('AKK')] im Gegenzug für unser [concept_subject] „[COUNTRY_THIRD_PARTY.GetName]“ an."
 REVERSE_SWAY_OFFER_TRANSFER_STATE_DESC: "[COUNTRY.GetAltName('NOM')|U] bietet uns Unterstützung im laufenden [concept_diplomatic_play] gegen [ENEMY_COUNTRY.GetAltName('AKK')] im Gegenzug für unseren [concept_state] „[STATE.GetName]“ an."
 REVERSE_SWAY_OFFER_DIPLOMATIC_PACT_DESC: "[COUNTRY.GetAltName('NOM')|U] bietet uns Unterstützung im laufenden [concept_diplomatic_play] gegen [ENEMY_COUNTRY.GetAltName('AKK')] im Gegenzug für „[DIPLOMATIC_ACTION_TYPE.GetName]“ an."
 DIPLOMATIC_DEMAND_PROPOSAL_DESC: "[COUNTRY.GetAltName('NOM')|U] fordert ‚[WAR_GOAL.GetName]‘ von uns. Nehmen wir an, geben wir dem geforderten [concept_war_goal] nach und gehen einen [concept_truce] für #v 5#! Jahre ein.\n\n@warning! Weigern wir uns, wird man ein [concept_diplomatic_play] gegen uns beginnen, das zu einem [concept_war] eskalieren kann."
 DIPLOMATIC_DEMAND_LENS_DESC: "#header „[DIPLOMATIC_PLAY_TYPE.GetName|v]“-[concept_diplomatic_demand]#!\n$TOOLTIP_DELIMITER$\nDas [concept_war_goal] ‚[DIPLOMATIC_PLAY_TYPE.GetName|v]‘ von einem anderen [concept_country] fordern. Nimmt es an, wird dem ausgewählten [concept_war_goal] nachgegeben und ein Waffenstillstand geschlossen. Weigert es sich, beginnt ein [concept_diplomatic_play] mit uns als [concept_initiator].\n\n@information! Wir können uns auch entscheiden, das [concept_diplomatic_play] sofort zu beginnen, um zusätzliche Forderungen an das Ziel zu stellen."
 SWAY_NEITHER_PRIMARY_PARTICIPANT: "Keines der beiden [Concept('concept_country', 'Länder')] ist ein Hauptbeteiligter dieses [Concept('concept_diplomatic_play', 'Diplomatiespiels')]"
 SWAY_SUBJECT_ENEMY: "Ein [concept_subject] von uns, das sich uns entgegenstellt, #b kann nicht#! [Concept('concept_sway', 'beeinflusst')] werden"
 SWAY_OVERLORD_ENEMY: "Unser [concept_overlord], der sich uns entgegenstellt, #b kann nicht#! [Concept('concept_sway', 'beeinflusst')] werden"
 ALREADY_HAS_SWAY_IN_THIS_COUNTRY: "Wir versuchen bereits, dieses Land zu beeinflussen."
 ALREADY_SWAYING_COUNTRY: "Wir versuchen bereits, ein anderes [concept_country] zu [Concept('concept_sway', 'zu beeinflussen')] oder ihm [Concept('concept_offer_support', 'Unterstützung anzubieten')]."
 ALREADY_BEING_SWAYED: "Wir sind derzeit das Ziel einer [Concept('concept_sway', 'Beeinflussung')] oder eines [Concept('concept_offer_support','Unterstützungsangebots')] eines anderen [Concept('concept_country', 'Landes')]."
 RECENTLY_DECLINED_SWAY: "[COUNTRY.GetAltName('NOM')|U] hat kürzlich eine [Concept('concept_sway', 'Beeinflussung')] oder ein [Concept('concept_offer_support','Unterstützungsangebot')] von uns abgelehnt; wir können es am #v $DATE$#! erneut versuchen."
 ALREADY_OWES_OBLIGATION_TO: "Wir schulden #variable [COUNTRY.GetAltName('DAT')]#! bereits eine [concept_obligation]."
 ADD_WARGOAL_PANEL_HEADER: "#BOLD [concept_war_goal] hinzufügen#!"
 ADD_WARGOAL_NOT_ALLOWED: "Dieses [concept_diplomatic_play] erlaubt es nicht, zusätzliche $WARGOALS$ hinzuzufügen."
 ADD_WARGOAL_TOOLTIP: "#header [concept_war_goal] hinzufügen#!\n[DiplomaticPlay.GetCountryCanAddWarGoalDesc(GetPlayer)]"
 CLICK_TO_ADD_WARGOAL: "#instruction Klicken, um die [concept_war_goal]-Auswahl zu öffnen#!"
 WARGOAL_TRUST_COST: "Vertrauenskosten: #BOLD #N [WarGoalType.GetTrustCost]#!#!"
 TOOLTIP_WARGOAL_TRUST_COST: "Die Menge an Vertrauen, die beim Hinzufügen dieses [Concept('concept_war_goal', 'Kriegsziels')] abgezogen wird"
 ADD_WARGOAL_NOT_PARTICIPANT: "[COUNTRY.GetAltName('NOM')|U] ist nicht Teil dieses [Concept('concept_diplomatic_play', 'Diplomatiespiels')]"
 ADD_WARGOAL_NOT_PRIMARY_PARTICIPANT: "[COUNTRY.GetAltName('NOM')|U] ist kein Hauptbeteiligter dieses [Concept('concept_diplomatic_play', 'Diplomatiespiels')] und schließt sich nicht durch ein „$SWAY_TYPE_CALL_ALLY$“-[concept_sway] an"
 SIDE_NOT_VALID_IN_DIPLOMATIC_PLAY: "Es gibt keine gültige Seite, der man beitreten kann"
 ADD_WARGOAL_NOT_ENOUGH_TRUST: "Wir benötigen $COST$ Vertrauen, um dieses [concept_war_goal] hinzuzufügen"
 ADD_WARGOAL_TARGET_NOT_IN_REGION: "[COUNTRY.GetAltName('NOM')|U] ist nicht in der Region #variable $REGION$#! präsent"
 ADD_WARGOAL_ALREADY_EXISTS: "Dieses [concept_war_goal] ist bereits Teil des [Concept('concept_war', 'Krieges')]"
 ADD_WARGOAL_NOT_ENOUGH_MANEUVERS: "Wir benötigen mindestens $COST|v$ [Concept('concept_maneuver', '$concept_maneuvers$')], um diese Aktion durchführen zu können"
 ADD_WARGOAL_NO_MANEUVERS_REMAINING: "Diese Seite des [Concept('concept_diplomatic_play', 'Diplomatiespiels')] hat keine [Concept('concept_maneuver', '$concept_maneuvers$')] übrig"
 ADD_WARGOAL_ON_ALLY: "Kann kein [concept_war_goal] gegen einen [Concept('concept_ally', 'Verbündeten')] hinzufügen"
 ADD_WARGOAL_WAR_HAS_STARTED: "Der Krieg hat bereits begonnen"
 ADD_WARGOAL_ALLY_TOO_COSTLY: "Unterstützer in einem [concept_diplomatic_play] können nur [Concept('concept_war_goal', '$concept_war_goals$')] hinzufügen, die [GetDefine('NDiplomacy','ALLY_WARGOAL_MAX_MANEUVERS_COST')] [Concept('concept_maneuver', '$concept_maneuvers$')] oder weniger kosten"
 ADD_WARGOAL_ALREADY_ADDED_WARGOAL: "Hat bereits ein [concept_war_goal] hinzugefügt"
 ADD_WARGOAL_NOT_ON_A_SIDE: "[COUNTRY.GetAltName('NOM')|U] hat sich im [concept_diplomatic_play] noch nicht auf eine Seite geschlagen"
 JOIN_DIPLO_PLAY_COUNTRY_ALREADY_SWAYED: "[COUNTRY.GetAltName('NOM')|U] hat bereits ein akzeptiertes Beeinflussungsangebot"
 CANNOT_REVERSE_SWAY_CALL_ALLY: "„$CALL_ALLY$“ kann nicht für [Concept('concept_offer_support','Unterstützungsangebot')] verwendet werden"
 CANNOT_CALL_ALLY_NON_ALLY: "„$CALL_ALLY$“ kann nur bei [Concept('concept_ally', '$concept_allies$n')] eingesetzt werden"
 COUNTRY_ALREADY_SUBJECT: "[COUNTRY.GetAltName('NOM')|U] ist bereits ein [concept_subject]"
 NOT_VALID_SUBJECT_TYPE: "#v $SUBJECT_TYPE$#! ist keine gültige [Concept('concept_subject', 'Klientelland-Art')] für diese Interaktion"
 STATE_IS_CAPITAL: "„[STATE.GetName|U]“ ist der [concept_capital_state]"
 NOT_VALID_DIPLOMATIC_ACTION: "„[DIPLOMATIC_ACTION.GetName]“ ist nicht zulässig für diese Interaktion"
 ALREADY_ACTIVE_PACT: "Hat bereits einen laufenden [concept_diplomatic_pact] für „[DIPLOMATIC_ACTION.GetName]“"
 COUNTRY_MUST_BE_SUBJECT: "[COUNTRY_THIRD_PARTY.GetName|U] ist kein [concept_subject] [COUNTRY.GetAltName('GEN')]"
 WARGOAL_MUST_BE_INDEPENDENT: "[COUNTRY.GetAltName('NOM')|U] darf kein [concept_subject] sein"
 ALREADY_PROMISED_SWAY: "[COUNTRY.GetAltName('NOM')|U] hat diese [Concept('concept_sway', 'Beeinflussung')] bereits einem anderen [concept_country] versprochen"
 SWAY_OFFER_NOT_VALID_FOR_SUBJECT: "[COUNTRY.GetAltName('NOM')|U] kann nur mit einem [concept_war_goal] #v $war_goal_independence_type_name$#! oder #v $war_goal_increase_autonomy_type_name$#! gegen den eigenen [concept_overlord] [Concept('concept_sway','$concept_swayed$')|l] werden und auch dann nur, wenn der [concept_liberty_desire] hoch genug ist"
 WARGOAL_NOT_POWER_BLOC_LEADER: "[COUNTRY.GetAltName('NOM')|U] muss Anführer eines [Concept('concept_power_bloc', 'Machtblocks')] sein"
 WARGOAL_NOT_IN_POWER_BLOC_LED_BY: "[COUNTRY.GetAltName('NOM')|U] muss in einem [concept_power_bloc] sein, den [TARGET_COUNTRY.GetAltName('NOM')] anführt"
 NUM_BUILDINGS_WITH_PROD_METHOD_ACTIVE: "Die Produktionsmethode „[ProductionMethod.GetName]“ ist derzeit in [ProductionMethod.GetNumOfBuildingsUsingThis(GetPlayer.Self)|v] [Concept('concept_building', 'Gebäuden')] aktiv:\n[ProductionMethod.GetBuildingTypesUsingThisDesc(GetPlayer.Self)]"
 BUILDING_TYPE_USING_PM_ENTRY: "[BuildingType.GetName]: #variable $NUM$#!"
 ACTIVE_PRODUCTION_METHODS_PRODUCING: "[Concept('concept_production_method', 'Produktionsmethoden')], die die Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ [GetPlayer.GetAltName('IN')] produzieren"
 ACTIVE_PRODUCTION_METHODS_CONSUMING: "[Concept('concept_production_method', 'Produktionsmethoden')], die die Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ [GetPlayer.GetAltName('IN')] verbrauchen"
 INACTIVE_PRODUCTION_METHODS: "Derzeit nicht aktiv"
 PRODUCTION_METHOD_ITEM: "#variable [ProductionMethod.GetName]#!"
 BUILDING_TYPE_BULK_CHANGE_TOOLTIP: "[BuildingBrowserBuildingTypeItem.GetBulkChangeTooltip(ProductionMethodGroup.Self)][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(IsDataModelEmpty(BuildingBrowserBuildingTypeItem.GetBuildingsInCountry), 'CANNOT_BULK_CHANGE_NOT_OWNED'))]"
 CANNOT_BULK_CHANGE_NOT_OWNED: "@red_cross! Kein „[BuildingBrowserBuildingTypeItem.GetBuildingType.GetName]“ ist unser Eigentum"
 PARTIES_TITLE: "#title Parteien#!"
 COLONIZABLE_NO_POWER_PROJECTION: "#N Kolonisierbare Nationen können keine Macht projizieren#!"
 MARKET_CONTROLLER_TOOLTIP: "[concept_market_owner_desc]"
 MILITARY_THEATER: "[concept_theater]"
 STRATEGIC_REGION_MARKER_ADD_IM: "#header [concept_interest] erklären#!\nEine regionale #bold Machtprojektionsmission#! auswählen und Stärkepunkte aufwenden, um die eigene Macht in die Strategieregion „#variable [StrategicRegion.GetName]#!“ zu projizieren\n\n[concept_power_projection_desc]"
 STRATEGIC_REGION_MARKER_START_DP: "#header [concept_diplomatic_play] beginnen#!\nDa wir ein #variable Interesse#! an der Strategieregion „#variable [StrategicRegion.GetName]#! haben, können wir hier ein [concept_diplomatic_play] beginnen"
 TOOLTIP_INTEREST_GROUP: "#header [InterestGroup.GetName]#!\n$TOOLTIP_DELIMITER$\nAnführer-Ideologie: [InterestGroup.GetLeaderIdeologyDesc]\nIdeologien: [InterestGroup.GetIdeologyDesc]\n\nPolitischer Druck: [InterestGroup.GetClout|%1v]\nBevölkerung: #variable [InterestGroup.GetPopulation|*]#!\n\n#lore [InterestGroup.GetDesc]#!\n"
 INTEREST_GROUP_NAME_WITH_CLOUT_VALUE: "[InterestGroup.GetNameNoIcon] (#v #tooltippable #tooltip:[InterestGroup.GetTooltipTag],IG_CLOUT_BREAKDOWN,IGCloutTooltip [InterestGroup.GetClout|%1]#!#!#!)"
 TOOLTIP_ENACT_LAW_NAME: "#header [LawType.GetName|U] beschließen#!"
 TOOLTIP_ENACT_LAW_CURRENT_LAW_NAME: "Derzeitiges [concept_law]: [Law.GetActiveGroupLaw.GetName]"
 TOOLTIP_CANCEL_LAW: "#header „[Law.GetName]“ nicht länger beschließen#!\nWir werden sämtlichen Fortschritt verlieren."
 TOOLTIP_CANCEL_LAW_DISALLOWED: "#header Kann nicht aufhören, „[Law.GetName]“ zu beschließen#!"
 TOOLTIP_CANCEL_LAW_COOLDOWN: "@warning!Ihr werdet #v [GetDefine('NPolitics','LAW_ENACTMENT_COOLDOWN_DAYS')|0] Tage #! lang nicht in der Lage sein, „[Law.GetName]“ zu beschließen."
 TOOLTIP_CANCEL_LAW_POLITICAL_MOVEMENT_EFFECT: "@warning! Die [concept_political_movement] „[PoliticalMovement.GetName]“ wird dies wütend machen, was zu Folgendem führt:\n[GetStaticModifier('supported_law_cancelled').GetDesc]"
 LAW_CANCEL_ENACTMENT_EFFECT_ON_MOVEMENT_ACTIVISM_HEADER: "#title Bricht Beschluss-Effekt auf [concept_activism] ab:#!"
 TEMPORARY_APPROVAL_FROM_LAW_CHANGE_TITLE: "#title Zeitweise Änderung der [concept_approval] durch [Concept('concept_endorse_oppose', '$concept_endorsement$')]:#!"
 PREDICT_APPROVAL_WHILE_ENACT: "$TEMPORARY_APPROVAL_FROM_LAW_CHANGE_TITLE$\n$BREAKDOWN$"
 CLICK_TO_OPEN_LAW_GROUP: "#instruction Klicken, um [concept_law_group] anzusehen#!"
 COMMAND_CONFIRMATION_START_IMPOSING_LAW: "„[Law.GetName|U]“ [Law.GetCountry.GetAltName('DAT')]#b auferlegen#!?\n\n$LAW_ENACTMENT_IMPOSITION_OUTCOME_BREAKDOWN$"
 LAW_ENACTMENT_IMPOSITION_OUTCOME_BREAKDOWN: "In #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP [Law.GetCheckpointRemainingDays|v]#!#! Tage(n) geschieht eines der folgenden Dinge:\n$IMPOSITION_OUTCOME_SUCCESS$\n$IMPOSITION_OUTCOME_ADVANCE$\n$IMPOSITION_OUTCOME_DEBATE$\n$IMPOSITION_OUTCOME_STALL$"
 INTERST_GROUP_APPROVAL_CHANGE_BREAKDOWN_TOOLTIP: "#header Änderung der [concept_approval] für IG „[InterestGroup.GetName|U]“#!\n#v [InterestGroup.GetApprovalValueDeltaFromEnactment(Law.GetLawType.Self)|=+]#! wenn „[Law.GetName|U]“ [Concept('concept_enactment_of_laws', 'beschlossen')] wird\n„[InterestGroup.GetName|U]“-$concept_approval$ ändert sich vermutlich um #v [InterestGroup.GetApprovalValue|+]#! auf #v [InterestGroup.GetApprovalValueIfEnacted(Law.GetLawType.Self)|+]#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(InterestGroup.WillRadicalizeIfEnacted(Law.GetLawType.Self), 'WILL_RADICALIZE_IG'))]\n$TOOLTIP_DELIMITER$\nDies geschieht aufgrund des Unterschieds in Sachen [Concept('concept_endorse_oppose', '$concept_endorsement$')] oder [Concept('concept_endorse_oppose', '$concept_opposition$')] der IG „[InterestGroup.GetName]“ des aktiven „[Law.GetActiveGroupLaw.GetName]“-[Concept('concept_law', 'Gesetzes')] ([InterestGroup.GetLawStanceLabel(Law.GetActiveGroupLaw.GetLawType.Self)]) und „[Law.GetName]“ ([InterestGroup.GetLawStanceLabel(Law.GetLawType.Self)])[ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(InterestGroup.IsLeaderInfluencingEnactment(Law.GetLawType.Self), 'INTEREST_GROUP_LEADER_ENDORSEMENT'))]\n\n[InterestGroup.GetApprovalValueDecayIfEnactedDesc(Law.GetLawType.Self)]"
 INTEREST_GROUP_LEADER_ENDORSEMENT: "Die „[InterestGroup.GetLawStanceLabel(Law.GetLawType.Self)]“-Haltung der IG „[InterestGroup.GetName]“ zu „[Law.GetName]“ wird durch die [concept_ideology] von [InterestGroup.GetLeader.GetFirstName] ([concept_leader]) beeinflusst: [InterestGroup.GetLeader.GetIdeology.GetName|U]"
 WILL_RADICALIZE_IG: "@warning! Wird die IG „[InterestGroup.GetName]“ [Concept('concept_radical', '$concept_radicalize$')|l]"
 IMPOSITION_OUTCOME_SUCCESS: "[Concept('concept_enactment_success', '$concept_enactment_success_short$')]: #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN [Law.GetCheckpointSuccessWithImpositionChance|v%1]#!#!"
 IMPOSITION_OUTCOME_ADVANCE: "[Concept('concept_enactment_advance', '$concept_enactment_advance_short$')]: #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_ADVANCE_CHANCE_BREAKDOWN [Law.GetCheckpointAdvanceWithImpositionChance|v%1]#!#!"
 IMPOSITION_OUTCOME_DEBATE: "[Concept('concept_enactment_debate', '$concept_enactment_debate_short$')]: #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_DEBATE_CHANCE_BREAKDOWN [Law.GetCheckpointDebateWithImpositionChance|v%1]#!#!"
 IMPOSITION_OUTCOME_STALL: "[Concept('concept_enactment_stall', '$concept_enactment_stall_short$')]: #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_STALL_CHANCE_BREAKDOWN [Law.GetCheckpointStallWithImpositionChance|v%1]#!#!"
 IMPOSITION_SUCCESS_CHANCE_BREAKDOWN: "#header Chance auf einen [Concept('concept_enactment_success', 'Beschlusserfolg')]#!\nDerzeit: [Law.GetCheckpointSuccessWithImpositionChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointSuccessWithImpositionBreakdown)), 'IMPOSITION_SUCCESS_CHANCE_BREAKDOWN_DUE_TO')]"
 IMPOSITION_SUCCESS_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title Aufgrund von:#!\n[Law.GetCheckpointSuccessWithImpositionBreakdown]"
 IMPOSITION_ADVANCE_CHANCE_BREAKDOWN: "#header Chance auf ein [Concept( 'concept_enactment_advance', 'Vorankommen')]#!\nDerzeit: [Law.GetCheckpointAdvanceWithImpositionChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointAdvanceWithImpositionBreakdown)), 'IMPOSITION_ADVANCE_CHANCE_BREAKDOWN_DUE_TO')]"
 IMPOSITION_ADVANCE_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title Aufgrund von:#!\n[Law.GetCheckpointAdvanceWithImpositionBreakdown]"
 IMPOSITION_DEBATE_CHANCE_BREAKDOWN: "#header Chance auf eine [Concept('concept_enactment_debate', 'Debatte')]#!\nDerzeit: [Law.GetCheckpointDebateWithImpositionChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointDebateWithImpositionBreakdown)), 'IMPOSITION_DEBATE_CHANCE_BREAKDOWN_DUE_TO')]"
 IMPOSITION_DEBATE_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title Aufgrund von:#!\n[Law.GetCheckpointDebateWithImpositionBreakdown]"
 IMPOSITION_STALL_CHANCE_BREAKDOWN: "#header Chance auf [Concept('concept_enactment_stall', '$concept_enactment_stall_short$')]#!\nDerzeit: [Law.GetCheckpointStallWithImpositionChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointStallWithImpositionBreakdown)), 'IMPOSITION_STALL_CHANCE_BREAKDOWN_DUE_TO')]"
 IMPOSITION_STALL_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title Aufgrund von:#!\n[Law.GetCheckpointStallWithImpositionBreakdown]"
 COMMAND_CONFIRMATION_CANCEL_LAW_ENACTMENT: "[Law.GetCancelTooltip]"
 LAW_ENACTMENT_PROGRESS_TOPBAR: "[SelectLocalization(GetPlayer.IsEnactingLaw, 'ENACTING_LAW', 'NOT_ENACTING_LAW')]\n[GetPlayer.GetLawEnactmentProgressDesc]"
 ENACTING_LAW: "[GetPlayer.GetAltName('NOM')|U] beschließt derzeit „#variable [GetPlayer.GetLawBeingEnacted.GetName]#!“"
 NOT_ENACTING_LAW: "[GetPlayer.GetAltName('NOM')|U] beschließt kein [concept_law] aktiv."
 LAW_ENACTMENT_PHASE_LABEL: "Phase #v [Law.GetEnactmentPhase]/3#!"
 LAW_ENACTMENT_SETBACKS_LABEL: "[Concept('concept_enactment_setback', '$concept_enactment_setbacks_short$')]:"
 LAW_ENACTMENT_ATTEMPT_TOO_SOON: "Der letzte Versuch, das Gesetz „[Law.GetName]“ zu beschließen, wurde erst vor Kurzem unterkommen. Wir müssen $TIME_REMAINING$ warten, bevor wir es erneut versuchen können."
 LAW_ENACTMENT_PROGRESS: "#header „[Law.GetName]“ [Concept('concept_enactment_of_laws', '$concept_enactment_of_laws_enacting$')|l]#!\n[Concept('concept_enactment_phase','$concept_enactment_phase_short$')]: [Law.GetCountry.GetCustom(Law.GetCurrentEnactmentPhaseKey)|v] (#v [Add_int32('(int32)1', Law.GetEnactmentPhase)]/[GetDefine('NPolitics','LAW_ENACTMENT_MAX_PHASES')]#!)\n$LAW_ENACTMENT_SETBACKS_LABEL$ [Law.GetEnactmentSetbackCount|-]/[Law.GetCountry.GetMaxLawEnactmentSetbacks|-]\n[SelectLocalization(EqualTo_CFixedPoint(Law.GetCountry.GetModifier.GetValueFor('country_cannot_enact_laws_bool'), '(CFixedPoint)0'), 'LAW_ENACTMENT_PROGRESS_NOT_STALLED', 'LAW_ENACTMENT_PROGRESS_STALLED')][ConcatIfNeitherEmpty('\n\n', Law.PredictLegitimacyChangeToEnactDesc)]\n$TOOLTIP_DELIMITER$\n$LAW_ENACTMENT_OUTCOME_BREAKDOWN$[AddLocalizationIf(Law.HasEnactmentLastCheckpoint,'LAW_ENACTMENT_LAST_CHECKPOINT')]"
 LAW_ENACTMENT_PROGRESS_NOT_STALLED: "[SelectLocalization(EqualTo_int32(Add_int32('(int32)1', Law.GetEnactmentPhase), GetDefine('NPolitics','LAW_ENACTMENT_MAX_PHASES')), 'LAW_ENACTMENT_PROGRESS_LAST_PHASE', 'LAW_ENACTMENT_PROGRESS_PHASES')]"
 LAW_ENACTMENT_PROGRESS_PHASES: "#v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN [Law.GetCheckpointSuccessChance|+%0]#!#!#! Wahrscheinlichkeit auf den Fortschritt zu [Law.GetCountry.GetCustom(Law.GetNextEnactmentPhaseKey)|v] am #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP [Law.GetCheckpointEndDate.GetString]#!#!"
 LAW_ENACTMENT_PROGRESS_LAST_PHASE: "#v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN [Law.GetCheckpointSuccessChance|+%0]#!#!#! Wahrscheinlichkeit, das [concept_law] am #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP [Law.GetCheckpointEndDate.GetString] zu beschließen#!#!"
 LAW_ENACTMENT_PROGRESS_STALLED: "$LAW_ENACTMENT_STALLED_WARNING$#indent_newline:2 \n$LAW_ENACTMENT_STALL_BREAKDOWN$#!"
 LAW_ENACTMENT_LAST_CHECKPOINT: "Das Ergebnis des letzten Fixpunkts am [Law.GetEnactmentLastCheckpointDate.GetString] war [Law.GetEnactmentLastCheckpointResult|v]"
 LAW_ENACTMENT_OUTCOME_BREAKDOWN: "In #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP [Law.GetCheckpointRemainingDays|v]#!#! Tagen geschieht eines der folgenden Dinge:\n$OUTCOME_SUCCESS$\n$OUTCOME_ADVANCE$\n$OUTCOME_DEBATE$\n$OUTCOME_STALL$[AddTextIf(Law.HasEnactmentLastCheckpoint,'\n\n')]"
 LAW_ENACTMENT_EFFECT_ON_MOVEMENT_ACTIVISM_HEADER: "#title Beschluss-Effekt auf [concept_activism]:#!"
 LAW_ENACTMENT_AFFECTED_MOVEMENTS_ADDITIONAL: "und #v [GetDataModelSize(DataModelSkipFirst(Law.GetAffectedMovementsFromStartEnact, '(int32)5'))]#! weitere …"
 LAW_ENACTMENT_AFFECTED_MOVEMENT_TOOLTIP: "#header [Concept('concept_activism', '$concept_activism_short$')] durch [Concept('concept_enactment_of_laws','Gesetzesbeschluss')] von „[Law.GetName]“#!\n[SelectLocalization(GreaterThanOrEqualTo_CFixedPoint(Law.GetRadicalismEffectOnMovementFromStartEnact(PoliticalMovement.Self), '(CFixedPoint)0.5'), 'ACTIVISM_RED_ICON', 'ACTIVISM_ICON')] [Law.GetRadicalismEffectOnMovementFromStartEnact(PoliticalMovement.Self)|-=0%] für [PoliticalMovement.GetName]\n$TOOLTIP_DELIMITER$\n[SelectLocalization(EqualTo_CFixedPoint(Law.GetRadicalismDriftTargetOnMovementFromStartEnact(PoliticalMovement.Self), PoliticalMovement.GetTargetRadicalism), 'LAW_ENACTMENT_AFFECTED_MOVEMENT_SAME_RADICALISM_DRIFT', 'LAW_ENACTMENT_AFFECTED_MOVEMENT_DIFFERENT_RADICALISM_DRIFT')]"
 LAW_ENACTMENT_AFFECTED_MOVEMENT_SAME_RADICALISM_DRIFT: "Während des $concept_enactment_of_laws_enactment$es und falls dieses [concept_law] $concept_enactment_of_laws_enacted$ wird, hat die [PoliticalMovement.GetName] derzeit einen voraussichtlichen $concept_activism_short$ von #b [LabelingHelper.GetLabelForRadicalism(PoliticalMovement.GetTargetRadicalism)]#! (#tooltippable #tooltip:[PoliticalMovement.GetTooltipTag],POLITICAL_MOVEMENT_RADICALISM_BREAKDOWN [SelectLocalization(GreaterThanOrEqualTo_CFixedPoint(PoliticalMovement.GetTargetRadicalism, '(CFixedPoint)1'), 'POLITICAL_MOVEMENT_TARGET_RADICALISM_WITHOUT_LABEL_RED', 'POLITICAL_MOVEMENT_TARGET_RADICALISM_WITHOUT_LABEL')]#!#!)"
 LAW_ENACTMENT_AFFECTED_MOVEMENT_DIFFERENT_RADICALISM_DRIFT: "Während des $concept_enactment_of_laws_enactment$es und falls dieses [concept_law] beschlossen wird, wird hat die [PoliticalMovement.GetName] derzeit einen voraussichtlichen $concept_activism_short$ von #b [LabelingHelper.GetLabelForRadicalism(PoliticalMovement.GetTargetRadicalism)]#! (#tooltippable #tooltip:[PoliticalMovement.GetTooltipTag],POLITICAL_MOVEMENT_RADICALISM_BREAKDOWN [SelectLocalization(GreaterThanOrEqualTo_CFixedPoint(PoliticalMovement.GetTargetRadicalism, '(CFixedPoint)1'), 'POLITICAL_MOVEMENT_TARGET_RADICALISM_WITHOUT_LABEL_RED', 'POLITICAL_MOVEMENT_TARGET_RADICALISM_WITHOUT_LABEL')]#!#!), der sich zu [LabelingHelper.GetLabelForRadicalism(Law.GetRadicalismDriftTargetOnMovementFromStartEnact(PoliticalMovement.Self))] ändern wird (#v [Law.GetRadicalismDriftTargetOnMovementFromStartEnact(PoliticalMovement.Self)|0%]#!)"
 CANCEL_LAW_ENACTMENT_AFFECTED_MOVEMENT_TOOLTIP: "#header [Concept('concept_activism', '$concept_activism_short$')] durch den Abbruch des [Concept('concept_enactment_of_laws','Gesetzesbeschlusses')] von „[Law.GetName]“#!\n[SelectLocalization(GreaterThanOrEqualTo_CFixedPoint(Law.GetRadicalismEffectOnMovementFromCancelEnact(PoliticalMovement.Self), '(CFixedPoint)0.5'), 'ACTIVISM_RED_ICON', 'ACTIVISM_ICON')] [Law.GetRadicalismEffectOnMovementFromCancelEnact(PoliticalMovement.Self)|-=0%] für [PoliticalMovement.GetName]\n$TOOLTIP_DELIMITER$\n[SelectLocalization(EqualTo_CFixedPoint(Law.GetRadicalismDriftTargetOnMovementFromCancelEnact(PoliticalMovement.Self), PoliticalMovement.GetTargetRadicalism), 'CANCEL_LAW_ENACTMENT_AFFECTED_MOVEMENT_SAME_RADICALISM_DRIFT', 'CANCEL_LAW_ENACTMENT_AFFECTED_MOVEMENT_DIFFERENT_RADICALISM_DRIFT')]"
 CANCEL_LAW_ENACTMENT_AFFECTED_MOVEMENT_SAME_RADICALISM_DRIFT: "Wenn der [Concept('concept_law', 'Gesetzes')]-$concept_enactment_of_laws_enactment$ abgebrochen wird, hat die [PoliticalMovement.GetName] derzeit einen voraussichtlichen $concept_activism_short$ von #b [LabelingHelper.GetLabelForRadicalism(PoliticalMovement.GetTargetRadicalism)]#! (#tooltippable #tooltip:[PoliticalMovement.GetTooltipTag],POLITICAL_MOVEMENT_RADICALISM_BREAKDOWN [SelectLocalization(GreaterThanOrEqualTo_CFixedPoint(PoliticalMovement.GetTargetRadicalism, '(CFixedPoint)1'), 'POLITICAL_MOVEMENT_TARGET_RADICALISM_WITHOUT_LABEL_RED', 'POLITICAL_MOVEMENT_TARGET_RADICALISM_WITHOUT_LABEL')]#!#!)"
 CANCEL_LAW_ENACTMENT_AFFECTED_MOVEMENT_DIFFERENT_RADICALISM_DRIFT: "Wenn der [Concept('concept_law', 'Gesetzes')]-$concept_enactment_of_laws_enactment$ abgebrochen wird, hat die [PoliticalMovement.GetName] derzeit einen $concept_activism_short$ von #b [LabelingHelper.GetLabelForRadicalism(PoliticalMovement.GetTargetRadicalism)]#! (#tooltippable #tooltip:[PoliticalMovement.GetTooltipTag],POLITICAL_MOVEMENT_RADICALISM_BREAKDOWN [SelectLocalization(GreaterThanOrEqualTo_CFixedPoint(PoliticalMovement.GetTargetRadicalism, '(CFixedPoint)1'), 'POLITICAL_MOVEMENT_TARGET_RADICALISM_WITHOUT_LABEL_RED', 'POLITICAL_MOVEMENT_TARGET_RADICALISM_WITHOUT_LABEL')]#!#!), der sich zu [LabelingHelper.GetLabelForRadicalism(Law.GetRadicalismDriftTargetOnMovementFromCancelEnact(PoliticalMovement.Self))] ändern wird (#v [Law.GetRadicalismDriftTargetOnMovementFromCancelEnact(PoliticalMovement.Self)|0%]#!)"
 LAW_ENACTMENT_STALLED_WARNING: "#r Derzeitiges Gesetz unterliegt einer Beschlussblockade!#!"
 LAW_ENACTMENT_STALL_BREAKDOWN: "[Law.GetCountry.GetModifier.GetDescFor('country_cannot_enact_laws_bool')]"
 LAW_ENACTMENT_STALL_BREAKDOWN_FULL: "[Law.GetCountry.GetModifier.GetTooltipFor('country_cannot_enact_laws_bool')]"
 LAW_ENACTMENT_MIN_TOTAL_DAYS: "Minimaltage: [GetDefine('NPolitics','LAW_ENACTMENT_MIN_TOTAL_DAYS')|v^2]"
 LAW_NEXT_CHECKPOINT_TIME: "In [Law.GetCheckpointRemainingDays|v] Tag(en) ([Law.GetCheckpointEndDateString])"
 LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP: "#header Gesetzes-Beschlusszeit#!\n[Law.GetCheckpointTotalDays|v] Tage zwischen Fixpunkten\n$TOOLTIP_DELIMITER$\nGrundtage für Gesetz „[Law.GetName]“: [Law.GetCheckpointBaseDays|v]\n[Law.GetCheckpointTotalDaysBreakdown]"
 LAW_NEXT_CHECKPOINT_TIME_DESC: "Der nächste Fixpunkt für den Gesetzesbeschluss fällt in [Law.GetCheckpointRemainingDays|v] Tagen an ([Law.GetCheckpointEndDateString])\n\n[Law.GetCheckpointTotalDays|v] Tage zwischen Fixpunkten\n$TOOLTIP_DELIMITER$\nGrundtage für Gesetz „[Law.GetName]“: [Law.GetCheckpointBaseDays|v]\n[Law.GetCheckpointTotalDaysBreakdown]"
 LAW_NEXT_CHECKPOINT_OUTCOME_CHANCES_DESC: "$NEXT_CHECKPOINT$\n$TAB$$OUTCOME_SUCCESS$\n$TAB$$OUTCOME_ADVANCE$\n$TAB$$OUTCOME_DEBATE$\n$TAB$$OUTCOME_STALL$"
 LAW_NEXT_CHECKPOINT_OUTCOME_CHANCES_DESC_NO_DATE: "$NEXT_CHECKPOINT_NO_DATE$\n$TAB$$OUTCOME_SUCCESS$\n$TAB$$OUTCOME_ADVANCE$\n$TAB$$OUTCOME_DEBATE$\n$TAB$$OUTCOME_STALL$"
 LAW_NEXT_CHECKPOINT_OUTCOME_CHANCES_DESC_NO_NESTING: "$NEXT_CHECKPOINT_NO_NESTING$\n$TAB$$OUTCOME_SUCCESS$\n$TAB$$OUTCOME_ADVANCE$\n$TAB$$OUTCOME_DEBATE$\n$TAB$$OUTCOME_STALL$"
 NEXT_CHECKPOINT: "Beim nächsten Fixpunkt am #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP #v [Law.GetCheckpointEndDateString]#!#!#! wird eines der folgenden Dinge passieren:"
 NEXT_CHECKPOINT_SHORT_WITH_LABEL: "[Law.GetCheckpointRemainingDays|v] Tag(e) bis zum nächsten Fixpunkt (#tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP #v [Law.GetCheckpointEndDateString]#!#!#!)"
 NEXT_CHECKPOINT_NO_DATE: "Beim nächsten Fixpunkt wird eines der folgenden Dinge passieren:"
 NEXT_CHECKPOINT_SHORT: "#tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_DESC #v [Law.GetCheckpointEndDateString]#!#!#!:"
 NEXT_CHECKPOINT_IS: "Der nächste Fixpunkt liegt bei: #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_DESC #v [Law.GetCheckpointEndDateString]#!#!#!"
 NEXT_CHECKPOINT_NO_NESTING: "Beim nächsten Fixpunkt am #v [Law.GetCheckpointEndDateString]#! wird eines der folgenden Dinge passieren:"
 OUTCOME_SUCCESS: "[Concept('concept_enactment_success', '$concept_enactment_success_short$')]: #v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN [Law.GetCheckpointSuccessChance|+%0]#!#!#!"
 OUTCOME_SUCCESS_SHORT: "[Concept('concept_enactment_success', '$concept_enactment_success_short$')]: #v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN [Law.GetCheckpointSuccessChance|+%0]#!#!#!"
 OUTCOME_ADVANCE: "[Concept('concept_enactment_advance', '$concept_enactment_advance_short$')]: #v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_ADVANCE_CHANCE_BREAKDOWN [Law.GetCheckpointAdvanceChance|v%0]#!#!#!"
 OUTCOME_DEBATE: "[Concept('concept_enactment_debate', '$concept_enactment_debate_short$')]: #v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_DEBATE_CHANCE_BREAKDOWN [Law.GetCheckpointDebateChance|v%0]#!#!#!"
 OUTCOME_STALL: "[Concept('concept_enactment_stall', '$concept_enactment_stall_short$')]: #v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_STALL_CHANCE_BREAKDOWN [Law.GetCheckpointStallChance|-%0]#!#!#!"
 LAST_CHECKPOINT_RESULT_SUCCESS: "[Concept('concept_enactment_success', '$concept_enactment_success_short$')]"
 LAST_CHECKPOINT_RESULT_ADVANCE: "[Concept('concept_enactment_advance', '$concept_enactment_advance_short$')]"
 LAST_CHECKPOINT_RESULT_DEBATE: "[Concept('concept_enactment_debate', '$concept_enactment_debate_short$')]"
 LAST_CHECKPOINT_RESULT_STALL: "[Concept('concept_enactment_stall', '$concept_enactment_stall_short$')]"
 CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN: "#header Chance auf einen [Concept('concept_enactment_success', 'Beschlusserfolg')]#!\nDerzeit: [Law.GetCheckpointSuccessChance|v%1][SelectLocalization(StringIsEmpty(Law.GetCheckpointSuccessBreakdown), 'CHECKPOINT_SUCCESS_CHANCE_NO_SUCCESS', 'CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN_DUE_TO')]"
 CHECKPOINT_SUCCESS_CHANCE_NO_SUCCESS: "\n$TOOLTIP_DELIMITER$\n#title Keine [Concept('concept_interest_group', '$concept_interest_groups$')] [concept_in_government|l] [Concept('concept_endorse_oppose','$concept_endorses$')|l] dieses [concept_law] noch gibt es unterstützende [Concept('concept_political_movement', '$concept_political_movements$')]#!"
 CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title Aufgrund von:#!\n[Law.GetCheckpointSuccessBreakdown]"
 CHECKPOINT_ADVANCE_CHANCE_BREAKDOWN: "#header [Concept( 'concept_enactment_advance', 'Vorankommens')]-Wahrscheinlichkeit#!\nDerzeit: [Law.GetCheckpointAdvanceChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointAdvanceBreakdown)), 'CHECKPOINT_ADVANCE_CHANCE_BREAKDOWN_DUE_TO')]"
 CHECKPOINT_ADVANCE_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title Aufgrund von:#!\n[Law.GetCheckpointAdvanceBreakdown]"
 CHECKPOINT_DEBATE_CHANCE_BREAKDOWN: "#header [Concept('concept_enactment_debate', 'Debattier')]-Wahrscheinlichkeit#!\nDerzeit: [Law.GetCheckpointDebateChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointDebateBreakdown)), 'CHECKPOINT_DEBATE_CHANCE_BREAKDOWN_DUE_TO')]"
 CHECKPOINT_DEBATE_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title Aufgrund von:#!\n[Law.GetCheckpointDebateBreakdown]"
 CHECKPOINT_STALL_CHANCE_BREAKDOWN: "#header [Concept('concept_enactment_stall', '$concept_enactment_stall_short$')]-Wahrscheinlichkeit#!\nDerzeit: [Law.GetCheckpointStallChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointStallBreakdown)), 'CHECKPOINT_STALL_CHANCE_BREAKDOWN_DUE_TO')]"
 CHECKPOINT_STALL_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title Aufgrund von:#!\n[Law.GetCheckpointStallBreakdown]"
 ENACTMENT_SUPPORTING_IGS_BREAKDOWN_HEADER: "Durch [Concept('concept_endorse_oppose', 'Befürworten')] von [Concept('concept_interest_group', '$concept_interest_groups$n')] [concept_in_government|l]:"
 ENACTMENT_SUPPORTING_IGS_BREAKDOWN_ITEM: "$TAB$[InterestGroup.GetName]: [InterestGroup.GetClout|=v%1]"
 ENACTMENT_OPPOSING_IGS_BREAKDOWN_HEADER: "Durch opponierende [Concept('concept_interest_group', '$concept_interest_groups$')] mit niedriger [concept_approval]:"
 ENACTMENT_OPPOSING_IGS_BREAKDOWN_ITEM: "$TAB$[InterestGroup.GetName]: $VALUE|=v%1$ (#v x$MULTIPLIER|1$#! durch „$APPROVAL_RATING$“)"
 ENACTMENT_STALL_MULT_BREAKDOWN: "Blockadechance wird um $MULTIPLIER|=+$ modifiziert:\n$DETAILS$"
 ENACTMENT_SUPPORTING_MOVEMENTS_BREAKDOWN_HEADER: "Von unterstützenden [Concept('concept_political_movement', '$concept_political_movements$')]:"
 ENACTMENT_SUPPORTING_MOVEMENTS_BREAKDOWN_ITEM: "$TAB$[PoliticalMovement.GetName]: $EFFECT|=v%1$"
 ENACTMENT_RULER_BREAKDOWN_ITEM: "[Character.GetFullName] hat die [concept_ideology] „[Ideology.GetName]“: $VALUE|=v%1$"
 ENACTMENT_LAW_COMMITMENT_BREAKDOWN_ITEM: "$law_commitment$ in [TREATY.GetName]: $VALUE|=v%1$"
 ENACTMENT_OPPOSING_MOVEMENTS_BREAKDOWN_HEADER: "Von opponierenden [Concept('concept_political_movement', '$concept_political_movements$')]:"
 ENACTMENT_OPPOSING_MOVEMENTS_BREAKDOWN_ITEM: "$TAB$[PoliticalMovement.GetName]: $EFFECT|=v%1$"
 ENACTMENT_PAST_CHECKPOINTS_HEADER: "Von früheren Fixpunkten:"
 ENACTMENT_DEBATE_CHANCE_EFFECTS_BREAKDOWN: "Die Chance von $DEBATE_CHANCE|v%1$ auf eine [concept_enactment_debate] resultiert in:\n$TAB$$DESC$"
 ENACTMENT_FACTOR_ENTRY: "[concept_end_of_discussion_factor]: x$VAL|v2$"
 ENACTMENT_BREAKDOWNS_BASE_CHANCE_ENTRY: "Grundwert: $VAL|v%1$"
 ENACTMENT_BASE_SUCCESS_CHANCE_ENTRY: "[concept_base_success_chance]: $VAL|=v%1$"
 ENACTMENT_SUCCESS_CHANCE_ENTRY: "Chance auf [concept_enactment_success]: $VAL|=v%1$"
 ENACTMENT_ADVANCE_CHANCE_ENTRY: "Chance auf [concept_enactment_advance]: $VAL|=v%1$"
 ENACTMENT_ADVANCE_FACTOR_ENTRY: "[concept_advance_factor]: x$VAL|v2$"
 ENACTMENT_STALL_CHANCE_ENTRY: "Chance auf [concept_enactment_stall]: $VAL|=v%1$"
 ENACTMENT_FASTENACT_IS_ACTIVE: "„fastenact“ (Schnellere Erlasse) ist aktiv"
 ENACTMENT_EVENT_DESCRIPTION: "Dies ist ein Gesetzesbeschluss-Ereignis. Dieses Ereignis wurde #italic wahrscheinlich#! durch den letzten Beschluss-Fixpunkt beim derzeit zu beschließenden Gesetz „[Law.GetName]“ ausgelöst. Der Fixpunkt fand am [Law.GetEnactmentLastCheckpointDate.GetString] statt und ergab [Law.GetEnactmentLastCheckpointResult]."
 IMPORTS_TA: "Importvorteil"
 EXPORTS_TA: "Exportvorteil"
 LAWS_WITH_GVT_SUPPORT: "Gesetze, die von der Regierung oder von Protestbewegungen unterstützt werden"
 LAWS_WITHOUT_GVT_SUPPORT: "Gesetze, die NICHT von der Regierung oder von Protestbewegungen unterstützt werden"
 CHEAPEST_LAWS_HEADER: "$LAWS_WITH_GVT_SUPPORT$ ([GetDataModelSize(AccessPlayer.AccessLawsWithGovernmentOrMovementSupport)|v])"
 LAWS_WITHOUT_SUPPORT: "$LAWS_WITHOUT_GVT_SUPPORT$ ([GetDataModelSize(AccessPlayer.AccessLawsWithoutGovernmentOrMovementSupport)|v])"
 CHEAPEST_LAWS_HEADER_REFORM: "$LAWS_WITH_GVT_SUPPORT$ ([GetDataModelSize(ReformGovernment.GetPredictedLawsWithGovernmentOrMovementSupport)|v])"
 LAWS_WITHOUT_SUPPORT_REFORM: "$LAWS_WITHOUT_GVT_SUPPORT$ ([GetDataModelSize(ReformGovernment.GetPredictedLawsWithoutGovernmentOrMovementSupport)|v])"
 LAWS_HAS_CHANGED: "Wird sich ändern!"
 CHEAPEST_LAWS_IG_HEADER: "#bold Gesetze, die die IG „[InterestGroup.GetName]“ verabschieden möchte#!"
 PREDICTED_LAWS_WITH_GVT_SUPPORT: "$LAWS_WITH_GVT_SUPPORT$ ($PREDICTION$)"
 PREDICTED_LAWS_WITHOUT_GVT_SUPPORT: "$LAWS_WITHOUT_GVT_SUPPORT$ ($PREDICTION$)"
 TOOLTIP_CHANGE_FROM_LAW: "#header [concept_law] in der Gruppe „[LawGroup.GetName]“ ändern#!\nEs gibt #variable [LawGroup.GetNumEnactable|+]#! verfügbare Alternativen für „[Law.GetName]“ in „[LawGroup.GetName]“"
 TOOLTIP_CHANGE_FROM_LAW_CURRENTLY_ENACTING: "#header „[concept_law]“ in der Gruppe „[LawGroup.GetName]“ ändern#!\nWir beschließen derzeit „[GetPlayer.GetLawBeingEnacted.GetName]“ aus der Gesetzesgruppe „[GetPlayer.GetLawBeingEnacted.GetGroup.GetName]“\nWäre dem nicht so, hätten wir #variable [LawGroup.GetNumPotentialEnactable|+]#! verfügbare Alternativen für „[Law.GetName]“ in „[LawGroup.GetName]“"
 PREDICT_LEGITIMACY_TO_ENACT: "Der Beschluss dieses [Concept('concept_law', 'Gesetzes')] würde die [concept_legitimacy] der [concept_government] um #variable $VAL|=+0$#! ändern"
 LAW_BEING_ENACTED: "Wird beschlossen"
 ENACTING_TO_LAW: "Beschließt „[GetPlayer.GetLawBeingEnacted.GetName]“"
 LAW_NO_EFFECT: "#italic Kein Effekt#!\n"
 ENACT: "Beschließen"
 ENACT_LAW: "#b Beschließen#! mit #v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN [Law.GetCheckpointSuccessChance|+0%]#!#!#! [Concept('concept_enactment_success', '$concept_enactment_success_short$s')]-Wahrscheinlichkeit und #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_STALL_CHANCE_BREAKDOWN [Law.GetCheckpointStallChance|v0%]#!#! [Concept('concept_enactment_stall', '$concept_enactment_stall_short$')]-Wahrscheinlichkeit beim ersten Fixpunkt"
 ENACT_LAW_CHANCES_HEADER: "#title Beim ersten Fixpunkt:#!"
 ENACT_LAW_SUCCESS_CHANCE: "@green_checkmark! #v [Law.GetCheckpointSuccessChance|+0%]#!"
 ENACT_LAW_STALL_CHANCE: "@red_cross! #v [Law.GetCheckpointStallChance|-0%]#!"
 SUCCESS_CHANCE_SHORT_CONCEPT: "[Concept('concept_enactment_success', '$concept_enactment_success_short$')]"
 STALL_CHANCE_SHORT_CONCEPT: "[Concept('concept_enactment_stall', '$concept_enactment_stall_short$')]"
 REENACT_LAW: "Erneut beschließen"
 CHANGE_FROM_LAW: "Ändern"
 LAW_CANNOT_ENACT_TRIGGER_DESC: "Um dieses Gesetz zu beschließen, muss Folgendes erfüllt sein:\n$REASON$\n"
 LAW_WOULD_CAUSE_STABILITY_DROP_DESC: "Dieses [concept_law] zu beschließen, würde die Stabilität um #BOLD #N -$VAL|0%$#!#! verringern\n$REASON$\n"
 CHANGE_LAW_HEADER: "#BOLD $concept_law_group$#!"
 LAW_GROUP_DOES_NOT_APPLY_TO_COUNTRY: "Die [concept_law_group] für „[Law.GetName]“ ([Law.GetGroupName]) ist nicht auf [Law.GetCountry.GetAltName('AKK')] anwendbar"
 LAW_ALREADY_ENACTED: "Das Gesetz „[Law.GetName]“ wurde bereits beschlossen"
 LAW_ALREADY_ENACTING: "[Law.GetCountry.GetAltName('NOM')|U] ist bereits dabei, „[Law.GetName]“ zu beschließen. Derzeitiger Fortschritt: #variable [Law.GetCheckpointProgress|%1]#!"
 LAW_IS_CIVIL_WAR: "#N Während eines Bürgerkriegs ist dies nicht möglich!#!"
 LAW_CANNOT_ENACT: "[LAW.GetCountry.GetAltName('NOM')|U] kann keine [Concept('concept_law', '$concept_laws$')] beschließen.#indent_newline:4 \n[LAW.GetCountry.GetModifier.GetDescFor('country_cannot_enact_laws_bool')]#!"
 LAW_CANNOT_CANCEL_ENACTMENT: "[LAW.GetCountry.GetAltName('NOM')|U] kann den Beschluss von [Concept('concept_law', '$concept_laws$n')] nicht abbrechen.#indent_newline:4 \n[LAW.GetCountry.GetModifier.GetDescFor('country_cannot_enact_laws')]#!"
 LAW_MUST_HAVE_POLITICAL_MOVEMENT: "[Law.GetCountry.GetAltName('NOM')|U] kann [Concept('concept_law','$concept_laws$')] nur mit Unterstützung einer [concept_political_movement] beschließen#indent_newline:4 \n[LAW.GetCountry.GetModifier.GetDescFor('country_must_have_movement_to_enact_laws_bool')]#!"
 CHARACTER_WOULD_START_MOVEMENT: "#header [Character.GetFullNameWithTitle]#!\n$AGITATOR_POLITICAL_MOVEMENT_PREDICTION_INVITE_START$, die „[Law.GetName]“ @approves! [Concept('concept_endorse_oppose','befürwortet')]"
 CHARACTER_WOULD_JOIN_MOVEMENT: "#header [Character.GetFullNameWithTitle]#!\n$AGITATOR_POLITICAL_MOVEMENT_PREDICTION_INVITE_JOIN$, die „[Law.GetName]“ @approves! [Concept('concept_endorse_oppose','befürwortet')]"
 YOU_MUST_HAVE: "Wir #bold müssen#! Folgendes haben "
 YOU_CANNOT_HAVE: "Wir #bold dürfen NICHT#! Folgendes haben "
 ENACTED: " erlassen haben:"
 OR_WITH_SPACE: " $OR$ "
 TOOLTIP_NUM_INVITEABLE_EXILES: "#header $EXILED_AGITATORS$ einladen#!\nEs gibt #variable [GetExilePool.GetNumInviteableExiles]#! $EXILED_AGITATORS$, die [GetPlayer.GetAltName('NACH')] eingeladen werden können"
 DIPLOMACY: "Diplomatie"
 BUTTON_DIPLOMATIC_OVERVIEW: "#header Diplomatie#!"
 BUTTON_JOURNAL: "#header Journal#!"
 BUTTON_BUILDINGS: "#header Gebäude#!"
 BUTTON_DECISIONS: "#header Entscheidungen#!"
 LAW_ABOLITION_COST: "Abschaffungskosten: #variable @aut!$VAL$#!"
 LAW_ABOLITION_BASECOST: "Grundkosten: #variable $VAL$#!"
 LAW_ABOLITION_PREMIUM: "Aufschlag durch Regierungswiderstand: #N #bold +$VAL$#!#!"
 SWITCHING_TO: "Reform in Gang:"
 ACTIVE_LAWS_TITLE: "#title [Concept('concept_law', '$concept_laws$')]#!"
 ACTIVE_INSTITUTIONS_TITLE: "#title Institutionen#!"
 REFORM: "Reformieren"
 max_tariffs: "Maximale Zölle"
 high_tariffs: "Hohe Zölle"
 low_tariffs: "Niedrige Zölle"
 no_tariffs_or_subventions: "Keine Zölle oder Subventionen"
 low_subventions: "Niedrige Subventionen"
 high_subventions: "Hohe Subventionen"
 max_subventions: "Maximale Subventionen"
 expense_level_very_low: "Sehr niedrig"
 expense_level_low: "Niedrig"
 expense_level_medium: "Mittel"
 expense_level_high: "Hoch"
 expense_level_very_high: "Sehr hoch"
 government_wages_very_low: "$expense_level_very_low$e [concept_budget_government_wages]"
 government_wages_low: "$expense_level_low$e [concept_budget_government_wages]"
 government_wages_medium: "Mittlere [concept_budget_government_wages]"
 government_wages_high: "Hohe [concept_budget_government_wages]"
 government_wages_very_high: "Sehr hohe [concept_budget_government_wages]"
 military_wages_very_low: "$expense_level_very_low$e [concept_budget_military_wages]"
 military_wages_low: "$expense_level_low$e [concept_budget_military_wages]"
 military_wages_medium: "Mittlere [concept_budget_military_wages]"
 military_wages_high: "Hohe [concept_budget_military_wages]"
 military_wages_very_high: "Sehr hohe [concept_budget_military_wages]"
 tax_level_very_low: "Sehr niedrig"
 tax_level_low: "Niedrig"
 tax_level_medium: "Mittel"
 tax_level_high: "Hoch"
 tax_level_very_high: "Sehr hoch"
 tax_modifier_very_low: "$tax_level_very_low$e [concept_budget_income_taxes]"
 tax_modifier_low: "$tax_level_low$e [concept_budget_income_taxes]"
 tax_modifier_medium: "Mittlere [concept_budget_income_taxes]"
 tax_modifier_high: "Hohe [concept_budget_income_taxes]"
 tax_modifier_very_high: "Sehr hohe [concept_budget_income_taxes]"
 EFFECTS_FOR_TAX_LEVELS: "[Concept('concept_taxes', 'Besteuerungsstufen')]: #indent_newline:3 \n$BREAKDOWN$#!"
 EFFECTS_FOR_CURRENT_TAX_LEVEL: "#variable $LEVEL$#! $TAX_OR_EXPENSE_LEVEL_CURRENT$#indent_newline:3 \n$BREAKDOWN$#!"
 EFFECTS_FOR_OTHER_TAX_LEVEL_TITLE: "#variable $LEVEL$ [Concept('concept_taxes', 'Besteuerungsstufe')]#!\nmit [concept_law] $LAW$"
 EFFECTS_FOR_OTHER_TAX_LEVEL: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $LEVEL$#!#!#!"
 INCOME_TAX_LEVEL_TITLE: "#title Einkommenssteuern#!"
 CONSUMPTION_TAX_LEVEL_TITLE: "#title Verbrauchssteuern#!"
 PREDICTED_TAX_LEVEL_REVENUE: "Prognostizierte Einnahmen: @money!$VALUE|Kv$"
 CURRENT_TAX_LEVEL_REVENUE: "Derzeitige Einnahmen: @money!$VALUE|Kv$"
 PREDICTED_TAX_LEVEL_DELTA: "Einnahmenänderung durch derzeitige Steuerstufe: #variable @money!$DELTA_INCOME|+=D$#!"
 PREDICTED_TAX_LAW_DELTA: "Einnahmenänderung durch derzeitige Steuergesetze: #variable @money!$DELTA_INCOME|+=D$#!"
 TAX_LEVEL_HEADER: "#variable Steuerstufe $TAX_LEVEL$#!"
 TAX_LEVEL_TAX_LAW: "Besteuerungsgesetz: [LawType.GetName]"
 TAX_LEVEL_NO_TAX_LAW: "Besteuerungsgesetz: Keines"
 TAXED_GOODS: "Derzeit besteuerte [Concept('concept_good', '$concept_goods$')]: $GOODSDESC$"
 TAX_OR_EXPENSE_LEVEL_EFFECTS_HEADER: "#header Auswirkungen:#!"
 TAX_OR_EXPENSE_LEVEL_CURRENT: "#i #b (Derzeitige Stufe)#!#!"
 GOVERNMENT_WAGES_LEVEL: "$GOVERNMENT_WAGES_LEVEL_HEADER$ $CURRENT$\n$TOOLTIP_DELIMITER$\n$TAX_OR_EXPENSE_LEVEL_EFFECTS_HEADER$"
 GOVERNMENT_WAGES_LEVEL_TITLE: "#title Regierungsgehälter#!"
 GOVERNMENT_WAGES_LEVEL_HEADER: "#variable Regierungsgehälter ($EXPENSE_LEVEL$)#!"
 GOVERNMENT_WAGES_WEEKLY_EXPENSES_CURRENT: "Die durchschnittlichen jährlichen Regierungsgehälter von @money!$CURRENT_AVERAGE_ANNUAL_WAGE|v2$ kosten wöchentlich @money!$CURRENT_WEEKLY_EXPENSES|vD$"
 GOVERNMENT_WAGES_WEEKLY_EXPENSES_NEW: "Sie von #variable $WAGE_CHANGE_MULT|-=%0$#! auf @money!$NEW_AVERAGE_ANNUAL_WAGE|v2$ zu ändern, würde die Kosten von #variable @money!$DELTA_EXPENSES|-=D$#! auf @money!$NEW_WEEKLY_EXPENSES|vD$ $CHANGETYPE$"
 MILITARY_WAGES_LEVEL: "$MILITARY_WAGES_LEVEL_HEADER$ $CURRENT$\n$TOOLTIP_DELIMITER$\n$TAX_OR_EXPENSE_LEVEL_EFFECTS_HEADER$"
 MILITARY_WAGES_LEVEL_TITLE: "#title Militärgehälter#!"
 MILITARY_WAGES_LEVEL_HEADER: "#variable $EXPENSE_LEVEL$ Militärgehälter#!"
 MILITARY_WAGES_WEEKLY_EXPENSES_CURRENT: "Die durchschnittlichen jährlichen Militärgehälter von @money!$CURRENT_AVERAGE_ANNUAL_WAGE|v2$ kosten wöchentlich @money!$CURRENT_WEEKLY_EXPENSES|vD$"
 MILITARY_WAGES_WEEKLY_EXPENSES_NEW: "Sie von #variable $WAGE_CHANGE_MULT|-=%0$#! auf @money!$NEW_AVERAGE_ANNUAL_WAGE|v2$ zu ändern, würde die Kosten von #variable @money!$DELTA_EXPENSES|-=D$#! auf @money!$NEW_WEEKLY_EXPENSES|vD$ $CHANGETYPE$"
 EFFECTS_ON_ACCEPTANCE_law_ethnostate: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Pops mit niedrigen Akzeptanzwerten erwartet ein hartes Leben, während Pops mit höherem Status gedeihen#!#!"
 EFFECTS_ON_ACCEPTANCE_law_national_supremacy: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Pops mit niedrigen Akzeptanzwerten müssen viel erdulden, Pops mit höherem Status werden von der Regierung besser aufgenommen#!#!"
 EFFECTS_ON_ACCEPTANCE_law_racial_segregation: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Moderate Folgen für Pops mit niedriger Akzeptanz#!#!"
 EFFECTS_ON_ACCEPTANCE_law_cultural_exclusion: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Das Leben von Pops mit dem niedrigsten Akzeptanzstatus ist nicht angenehm, aber erträglich#!#!"
 EFFECTS_ON_ACCEPTANCE_law_multicultural: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Pops führen ähnliche Leben mit wenigen abträglichen Folgen, auch wenn sie nicht akzeptiert sind#!#!"
 WELFARE_PAYMENTS_BREAKDOWN: "#tooltip_header Sozialhilfezahlungen#!\nGesamt: #v #N @money!-[GetPlayer.GetWelfarePaymentsExpenses|D-]"
 NO_TARIFFS: "Keine [concept_tariffs] auf irgendwelche [Concept('concept_good', '$concept_goods$')]"
 NO_TARIFFS_SINGLE_GOOD: "Keine $DIRECTION$-[concept_tariffs] oder -[concept_subventions] auf „[Goods.GetName]“"
 PREDICTED_TARIFFS_SUBVENTIONS_GOODS_ENTRY: "@money!$VALUE|Kv$ für [Goods.GetTextIcon][Nbsp]„[Goods.GetName|U]“"
 PREDICTED_TARIFF_RATE: "$VALUE|%1v$ durchschnittliche $concept_tariff$rate (#v x$MULTIPLIER$#! für $TARIFF_LEVEL|v$)"
 PREDICTED_SUBVENTION_RATE: "$VALUE|%1v$ durchschnittliche $concept_subvention$srate (#v x$MULTIPLIER$#! für $TARIFF_LEVEL|v$)"
 PREDICTED_TARIFF_LEVEL_REVENUE: "@money!$VALUE|K+$ prognostizierte Einnahmen"
 PREDICTED_TARIFF_LEVEL_COST: "@money!$VALUE|K-$ prognostizierte Kosten"
 PREDICTED_TARIFF_LEVEL_NO_REVENUE_OR_COST: "Keine prognostizierten Kosten oder Einnahmen"
 PREDICTED_TARIFF_LEVEL_DELTA: "@money!$DELTA_INCOME|+=D$ Einnahmenänderung im Vergleich zur derzeitigen Stufe"
 PREDICTED_TARIFF_LAW_DELTA: "@money!$DELTA_INCOME|+=D$ Einnahmenänderung im Vergleich zum derzeitigen $concept_law$"
 PREDICTED_SUBVENTION_LAW_DELTA: "@money!$DELTA_COST|-=D$ Kostenänderung im Vergleich zum derzeitigen $concept_law$"
 TARIFF_LEVEL_HEADER: " #header $TARIFF_LEVEL$ für $DIRECTION$#!"
 TARIFF_LEVEL_TARIFF_LAW: "Handelspolitik: [LawType.GetName]"
 TARIFF_LEVEL_NO_TARIFF_LAW: "Handelspolitik: Keine"
 SET_TARIFF_LEVEL_ALREADY_ACTIVE: "[concept_tariffs]/[concept_subventions] liegen bereits bei $LEVEL|v$"
 SET_TARIFF_LEVEL_NOT_ALLOWED: "Unsere Handelspolitik oder unterzeichnete Verträge erlauben es uns nicht, $LEVEL|v$ festzulegen"
 SET_TARIFF_LEVEL_NOT_MARKET_OWNER: "Nur der [concept_market_owner] kann [Concept('concept_tariffs','$concept_tariff$')]-Stufen festlegen"
 TARIFF_LEVEL_MULTIPLIER_EFFECT: "#v x$MULTIPLIER$#! durch $LEVEL|v$"
 TREATY_PORT_NO_TARIFFS_OR_SUBVENTIONS: "[concept_tariffs] und [concept_subventions] gelten nicht für [Concept('concept_treaty_port','$concept_treaty_ports$')]"
 SET_TARIFF_LEVEL_ON_COOLDOWN: "[concept_tariffs]/[concept_subventions] können erst am $DATE|v$ geändert werden"
 LOCAL_PRICES: "Ortspreise"
 LAW_FROM_TO: "„[GetPlayer.GetActiveLawFromGroup(Law.GetGroup.GetKey).GetName]“ zu „[Law.GetName]“"
 GROW_INSTITUTION: "#header Investitionsstufe der Institution „[INSTITUTION.GetName]“ erhöhen#!"
 SHRINK_INSTITUTION: "#header Investitionsstufe der Institution „[INSTITUTION.GetName]“ verringern#!"
 INSTITUTION_CHANGE_TITLE: "#bold Auswirkungen der Stufe $LEVEL|v$:#!"
 CANCEL_INSTITUTION_SIZE_CHANGE_TOOLTIP: "Beendet die Erhöhung der Investitionsstufe dieser Institution"
 LAW_INSTITUTION_TOOLTIP: "#header [Law.GetInstitutionType.GetName]#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 INSTITUTION_TYPE_EFFECT_PER_LEVEL: "#b Auswirkungen der Institution „[INSTITUTION_TYPE.GetName]“ pro Stufe:#!\n$BREAKDOWN$"
 LAW_INSTITUTION_EFFECT_PER_LEVEL: "#b Auswirkungen des Gesetzes „[Law.GetName]“:#!\n$BREAKDOWN$"
 INSTITUTION_PROVIDING_LAWS: "$LAW_LIST$ [concept_law]"
 DISABLES_INSTITUTION: "Deaktiviert die [concept_institution] „[INSTITUTION.GetName]“"
 PROVIDES_INSTITUTION_TYPE: "Aktiviert die [concept_institution] „[INSTITUTION_TYPE.GetName]“\nZusätzliche $BUREAUCRACY$-Kosten: $COST|=v1$"
 PROVIDES_INSTITUTION: "Aktiviert die [concept_institution] „[INSTITUTION.GetName]“"
 INSTITUTION_TYPE_NEW_EFFECT: "„[LawType.GetName]“ würde „[INSTITUTION_TYPE.GetName]“ (Stufe #v 1#!) Folgendes geben:\n$EFFECTS$"
 INSTITUTION_NEW_EFFECT: "„[LawType.GetName]“ würde „[INSTITUTION.GetName]“ (Stufe [Institution.GetInvestmentLevel|v]) Folgendes geben:\n$EFFECTS$"
 INSTITUTION_SAME_EFFECT: "„[LawType.GetName]“ gibt „[Institution.GetName]“ (Stufe [Institution.GetInvestmentLevel|v]) Folgendes:\n$EFFECTS$"
 COUNTRY_CANNOT_AFFORD_NEW_INSTITUTION_TYPE: "@red_cross! [Law.GetCountry.GetAltName('NOM')|U] verfügt nicht über die notwendigen #v @bur![Multiply_CFixedPoint(GetPlayer.GetInstitutionInvestmentBureaucracyFactor,'(CFixedPoint)-1')]#! [concept_bureaucracy], um die neue [concept_institution] „[INSTITUTION_TYPE.GetName]“ zu gründen"
 INVESTMENT_CURRENT_LEVEL: "Dies ist die derzeitige [concept_investment_level]."
 INVESTMENT_TOO_LOW: "Die Investitionsstufe dieser Institution kann nicht unter ihr Minimum von $MIN|v$ gesenkt werden."
 INVESTMENT_TOO_HIGH: "Die Investitionsstufe dieser Institution kann nicht über ihr Maximum von $MAX|v$ erhöht werden.\n\nDie Maximalstufe dieser Institution basiert auf Folgendem:\n$BREAKDOWN$"
 INVESTMENT_EXCEEDS_INCOME: "Wir können uns die benötigten #v @bur!$BUR_REQ|0$#! [concept_bureaucracy] für diese Investitionsstufe nicht leisten."
 INVESTMENT_WEEKLY_COST_CHANGE: "Wöchentliche Kostenänderung: #variable @bur! $COSTCHANGE|1=$#!"
 LAW_DOES_NOT_SUPPORT_INVESTMENT: "Dieses Gesetz hat keine [Concept('concept_investment_level', '$concept_investment_levels$')]"
 ON_RESEARCHED: "#title Nach Erforschung:#!"
 ON_ENACT: "#title Bei Inkrafttreten:#!"
 ON_REVOKE: "#title Bei Widerruf:#!"
 ON_REVOKE_ACTIVE: "#title Wenn das derzeit erlassene Gesetz „$LAW$“ widerrufen wird#!"
 THIS_IS_DUE_TO: "#title Die Auswirkungen dieses Gesetzes basieren auf Folgendem:#!"
 LAW_EFFECT: "#bold Auswirkungen:#!"
 LAW_EFFECT_FOR_LEVEL: "#bold Auswirkungen für [concept_investment_level] #variable $LEVEL$#!:#!"
 BASE_LAW_EFFECT: "#bold Grundauswirkung:#!"
 FOR_EACH_LAW_INVESTMENT_LEVEL: "#bold Auswirkungen pro [concept_investment_level]:#!"
 LAW_EFFECT_FOR_CURRENT_INVESTMENT_LEVEL: "#bold Die [concept_investment_level] #variable $LEVEL$#! hat derzeit folgende Auswirkungen:#!"
 LAW_EFFECT_FOR_TARGET_INVESTMENT_LEVEL: "#bold Die [concept_investment_level] #variable $LEVEL$#! hätte folgende Auswirkungen:#!"
 LAW_ALLOWED_BUILDING_GROUPS_FROM_INVESTMENT_POOL: "Gelder aus dem [concept_investment_pool] können verwendet werden, um Folgendes zu bauen: "
 CULTURE_ACCEPT_RULE_CHANGE: "[Concept('concept_culture', '$ONE_OR_MANY_CULTURES$')] werden [Concept('concept_accepted_culture', '$concept_accepted_culture_short$')|l] beruhend auf:\n" #this loc string is likely to be cut, see C++ code that uses it
 RELIGION_ACCEPT_RULE_CHANGE: "[Concept('concept_religion', '$ONE_OR_MANY_RELIGIONS$')] werden [Concept('concept_accepted_religion', '$concept_accepted_religion_short$')|l] beruhend auf:\n" #this loc string is likely to be cut, see C++ code that uses it
 ONE_OR_MANY_CULTURES: "Kultur(en)"
 ONE_OR_MANY_RELIGIONS: "Religion(en)"
 MARKET_TITLE: "#title Markt#!"
 UNITS_PRODUCED_TITLE: "#title Produzierte Menge#!"
 PRICE_TITLE: "#title Preis#!"
 IMPORTED: "Importiert"
 EXPORTED: "Exportiert"
 ARMY_STOCKPILE: "Armee-Vorrat"
 NAVY_STOCKPILE: "Marine-Vorrat"
 CHARACTER_NAME_FORMAT: "$FIRST$ $LAST$"
 CHARACTER_NAME_WITH_TITLE_FORMAT: "$TITLE$ $FIRST$ $LAST$"
 TO_MARKET: "Nach [MARKET.GetName]"
 FROM_MARKET: "Aus [MARKET.GetName]"
 CHARACTER_PANEL_SUBTITLE: "[SelectLocalization( Character.IsInExilePool, 'CHARACTER_PANEL_SUBTITLE_EXILE', 'CHARACTER_PANEL_SUBTITLE_GENERAL_AT_FRONT' )]"
 CHARACTER_PANEL_SUBTITLE_EXILE: "[Character.GetPrimaryRoleName] [Concept('concept_exile', 'im Exil')|l]"
 CHARACTER_PANEL_SUBTITLE_GENERAL_AT_FRONT: "[SelectLocalization( And( Not( Character.IsInExilePool ), And( Character.IsGeneral, Character.IsAtFront ) ), 'CHARACTER_PANEL_SUBTITLE_GENERAL_AT_FRONT_YES' , 'CHARACTER_PANEL_SUBTITLE_ADMIRAL_RAIDING_SEA_REGION') ]"
 CHARACTER_PANEL_SUBTITLE_GENERAL_AT_FRONT_YES: "[Character.GetPrimaryRoleTitle] an [Character.GetFront.GetName]"
 CHARACTER_PANEL_SUBTITLE_ADMIRAL_RAIDING_SEA_REGION: "[SelectLocalization(And(Not(Character.IsInExilePool), And(Character.IsAdmiral, Character.GetOrderType.IsRaidConvoys)), 'CHARACTER_PANEL_SUBTITLE_ADMIRAL_RAIDING_SEA_REGION_YES' , 'CHARACTER_PANEL_SUBTITLE_OTHER')]"
 CHARACTER_PANEL_SUBTITLE_ADMIRAL_RAIDING_SEA_REGION_YES: "[Character.GetPrimaryRoleTitle]"
 CHARACTER_PANEL_SUBTITLE_OTHER: "[SelectLocalization(Character.IsRuler, Concept('concept_ruler', Character.GetPrimaryRoleTitle), Character.GetPrimaryRoleName)] [SelectLocalization(Character.IsRuler, 'von', 'in')] [Character.GetCountry.GetAltName('DAT')]"
 INSUFFICIENT_AUT: "Wir brauchen #variable #N $VAL$#!#! $AUTHORITY$, haben aber nur #variable $CURRENT$#!"
 INSUFFICIENT_BUR: "Wir brauchen #variable #N $VAL$#!#! $BUREAUCRACY$, haben aber nur #variable $CURRENT$#!"
 INSUFFICIENT_DIP: "Wir brauchen #variable #N $VAL$#!#! $INFLUENCE$, haben aber nur #variable $CURRENT$#!"
 GDP: "[concept_gdp]"
 GDP_SHORT: "[Concept('concept_gdp', '$concept_gdp_short$')]"
 TOOLTIP_GDP: "Das [concept_gdp] des Landes basiert auf der [concept_good_production] von Waren und deren Marktpreisen"
 GDP_OWNED_BY_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|%1v$#!#!"
 GDP_OWNED_BY_ENTRY: "$VALUE|%2v$ (@money!$PRODUCED|Dv$) in „[State.GetName]“"
 GDP_OWNED_BY_TOOLTIP_NONE: "#header „$OTHER_COUNTRY$“ besitzt keinen Teil des [Country.GetAdjective|l]en [concept_gdp]#!"
 GDP_OWNED_BY_TOOLTIP: "#header [Country.GetAdjective|U]es [concept_gdp] im Besitz von „$OTHER_COUNTRY$“#!\nWert: $VALUE|%1v$\n$TOOLTIP_DELIMITER$\nAm meisten beitragende [Concept('concept_state','$concept_states$')]:\n$BREAKDOWN$"
 GDP_OWNED_BY_STATE_TOOLTIP_NONE: "#header $OTHER_COUNTRY$ besitzt keinen Teil des [State.GetAdjective|l]en [concept_gdp]#!"
 GDP_OWNED_BY_STATE_TOOLTIP: "#header [concept_gdp] in „[State.GetName]“ im Besitz von „$OTHER_COUNTRY$“#!\nWert: $VALUE|%1v$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 GDP_OWNED_BY_STATE_ENTRY_THIS: "$VALUE|%2v$ (@money!$PRODUCED|Dv$) durch [Country.GetAltName('AKK')]"
 GDP_OWNED_BY_STATE_ENTRY_NOT_THIS: "#italic $GDP_OWNED_BY_STATE_ENTRY_THIS$#!"
 GOV_EXP_SHORT: "[Concept('concept_government_expenses', '$concept_government_expenses_short$')]"
 CREDIT: "[concept_credit]"
 CREDIT_TOOLTIP: "#header Kreditschwelle: #N @money!$CREDIT|Dv$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$\n\n[concept_credit_desc]"
 CREDIT_DETAIL_BASE: "Grundwert: #N @money!$BASE|Dv$#!"
 CREDIT_DETAIL: "[BUILDING_TYPE.GetName]: #N @money!$RESERVES|Dv$#!"
 GOLD_RESERVE_LIMIT: "Goldreserven-Schwelle: #N @money!$LIMIT|Dv$#![ConcatIfNeitherEmpty('\n','$MODIFIER$')]\n\n[concept_gold_reserves_desc]"
 RESERVES: "Reserven:"
 PRINCIPAL: "[concept_principal]:"
 TOOLTIP_PRINCIPAL: "#header [concept_principal]#!\n$TOOLTIP_DELIMITER$\n[concept_principal_desc]"
 REMAINING_CREDIT: "Übriger [concept_credit]:"
 NO_MODIFIER_DATA_COLLECTED: "Es wurden noch keine Daten zu Modifikatoren gesammelt. Details zur Zusammensetzung von Modifikatoren werden nicht im Speicherstand gespeichert, um die Dateigröße zu reduzieren. Läuft das Spiel eine Weile, erhält man mehr Details."
 DOMESTIC_LOANS: "#title [concept_loans]#!"
 TOOLTIP_DOMESTIC_LOANS: "#header [concept_loans]#!\n$TOOLTIP_DELIMITER$\n[concept_loans_desc]"
 INTEREST_RATE: "Zinssatz: #variable [GetPlayer.GetYearlyInterestRate|1%]#!"
 TOOLTIP_INTEREST_RATE: "#header Zinssatz#!\nIn der letzten Woche haben wir @money!#variable [GetPlayer.GetInterestPayment|1]#! als Zinsen bei einem jährlichen Zinssatz von #variable [GetPlayer.GetYearlyInterestRate|2%]#! gezahlt\n$TOOLTIP_DELIMITER$\n"
 TOOLTIP_INTEREST_RATE_ADD: "#BOLD #V Additive Zinssatz-Modifikatoren#!#!"
 TOOLTIP_INTEREST_RATE_PER_LOAN: "#BOLD #V Modifikatoren für den Zinssatz pro Anleihe#!#!"
 TOOLTIP_INTEREST_RATE_MULT: "#BOLD #V Multiplikative Zinssatz-Modifikatoren#!#!"
 TOOLTIP_INTEREST_RATE_GOVERNMENT_OWNED_DEBT: "Multipliziert mit #v x$MULTIPLIER$#! durch [concept_nationally_owned]-[Concept('concept_building','$concept_buildings$')]"
 TAKE_LOAN: "#variable @money![GetPlayer.GetLoanIncrement|1*]#! leihen"
 TOOK_LOAN: "Nahm eine Inlandsanleihe auf"
 TOOLTIP_TAKE_LOAN: "#header Anleihe aufnehmen#!\n$TOOLTIP_DELIMITER$\nWir leihen uns #variable @money!$AMOUNT$#! aus inländischen Quellen.\nDies erhöht die Schulden und den Zinssatz\n\n"
 TAKE_LOAN_NOT_ENOUGH_CREDIT: "#N Die Kreditwürdigkeit reicht nicht aus, um eine weitere Anleihe aufzunehmen!#!"
 TAKE_LOAN_NEGATIVE_CASHFLOW: "#N Die voraussichtlichen Ausgaben für die nächste Woche sind höher, als es die Landeskasse derzeit hergibt!#!"
 TAKE_LOAN_NOT_ENOUGH_POWER: "#N Wir verfügen nicht über genügend Macht, um eine Anleihe aufzunehmen!#!"
 PAY_BACK_LOAN: "#variable @money!$AMOUNT|1*$#! zurückzahlen"
 PAID_BACK_LOAN: "Zahlte eine Inlandsanleihe zurück"
 TOOLTIP_PAY_BACK_LOAN: "#header Anleihe zurückzahlen#!\n$TOOLTIP_DELIMITER$\nZahlt #variable @money!$AMOUNT$#! der Inlandsanleihen zurück.\nDies reduziert die Schulden und den Zinssatz\n\n"
 PAY_BACK_LOAN_NOT_ENOUGH_MONEY: "#N Wir haben nicht genügend Geld, um eine Anleihe zurückzuzahlen!#!"
 PAY_BACK_LOAN_NO_LOANS: "#N Es gibt keine Anleihen, die man zurückzahlen könnte!#!"
 PAY_BACK_LOAN_NOT_ENOUGH_POWER: "#N Wir verfügen nicht über genügend Macht, um eine Anleihe zurückzuzahlen!#!"
 PAY_BACK_SEVERAL_LOANS: "#variable @money!$AMOUNT$#! zurückzahlen"
 PAID_BACK_SEVERAL_LOANS: "Zahlte mehrere Inlandsanleihen zurück"
 TOOLTIP_PAY_BACK_SEVERAL_LOANS: "#header Alle Anleihen abbezahlen#!\n$TOOLTIP_DELIMITER$\nWir zahlen #variable @money!$AMOUNT$#!.\nDies reduziert die Schulden und den Zinssatz\n\n"
 NAVAL_MISSION_NOT_HOSTILE: "#N Der Zielstaat gehört keiner Nation, mit der wir uns im Krieg befinden!#!"
 NAVAL_MISSION_NO_COASTLINE: "#N Der Zielstaat ist kein Küstenstaat!#!"
 NAVAL_MISSION_NO_PORT: "#N Der Zielstaat hat keine Häfen!#!"
 NAVAL_INVASION_NO_BEACHHEAD: "#N Der Zielstaat hat keine Provinzen, in denen ein Brückenkopf errichtet werden kann!#!"
 BLOCKADE_MISSION_NOT_AT_WAR: "#N Häfen können nur im Krieg blockiert werden!#!"
 TIMED_MODIFIERS: "[Concept('concept_timed_modifier', '$concept_timed_modifiers$')]"
 maintain: "Bereithalten"
 maintain_desc: "Dieser Charakter unterhält hier eine Marinepräsenz und kann sich bietende Gelegenheiten zum Abfangen oder zur Flucht wahrnehmen."
 evade: "Ausweichen"
 evade_desc: "Dieser Charakter weicht feindlichen Flotten aus und versenkt die Schiffe von Versorgungsflottillen, ohne seine Position preiszugeben."
 bulwark: "Eskortieren"
 bulwark_desc: "Dieser Charakter eskortiert und schützt befreundete Versorgungsflottillen und fügt feindlichen Flotten nur minimalen Schaden zu."
 CASUALTIES_DUE_TO_ATTRITION_TOOLTIP: "#header Verluste durch Zermürbung#!\nDurch Fahnenflucht: #variable $SPIRIT_SP|+=3$#! SP beim letzten Berechnungsschritt\nDurch mangelnde Konzentration: #variable $CONCENTRATION_SP|+=3$#! SP beim Berechnungsschritt"
 AGITATORS_IN_QUEUE: "#v [GetDataModelSize(PoliticalMovement.GetBottomSupportingCharacters)|=]#!"
 AGITATORS_IN_QUEUE_DESC_ENTRY: "[CHARACTER.GetFullName] – [LabelingHelper.GetLabelForSupport(PoliticalMovement.GetCharacterSupport(CHARACTER.Self))] (#tooltippable #tooltip:[GetRawTextTooltipTag(PoliticalMovement.GetCharacterSupportDesc(CHARACTER.Self))] [PoliticalMovement.GetCharacterSupport(CHARACTER.Self)|v0]#!)#!"
 outliner_title_wars: "#outliner_header Kriege#!"
 outliner_title_diplo_plays: "#outliner_header Diplomatiespiele#!"
 outliner_title_situations: "#outliner_header Ereignisse#!"
 outliner_title_commanders: "#outliner_header Befehlshaber#!"
 outliner_title_formations: "#outliner_header Formationen#!"
 outliner_title_politicians: "#outliner_header Politiker#!"
 outliner_title_countries: "#outliner_header Länder#!"
 outliner_title_unrecognized_countries: "#outliner_header Nebenländer#!"
 outliner_title_generals: "#outliner_header Generäle#!"
 outliner_title_admirals: "#outliner_header Admiräle#!"
 outliner_title_army: "#outliner_header Armee#!  (#tooltip:[GetPlayer.GetTooltipTag],PANEL_MILITARY_ARMY_OVERVIEW_TOOLTIP #variable @battalions![GetPlayer.GetBattalions|0]#!#!)"
 outliner_title_navy: "#outliner_header Marine#!  (#tooltip:[GetPlayer.GetTooltipTag],PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP #variable @navy_SP![GetPlayer.GetWarships|0]#!#!)"
 outliner_title_agitators: "#outliner_header Agitatoren#!"
 outliner_title_companies: "#outliner_header Kompanien#!"
 outliner_title_interest_groups: "#outliner_header Interessengruppen#!"
 outliner_title_marginalized_interest_groups: "#outliner_header Randgruppen#!"
 outliner_title_markets: "#outliner_header Märkte#!"
 outliner_title_isolated_states: "#outliner_header Exklavenstaaten#!"
 outliner_title_colonies: "#outliner_header Kolonien#!"
 outliner_title_states: "#outliner_header Staaten#!"
 outliner_title_unincorporated_states: "#outliner_header Nicht-inkorporiertes Territorium#!"
 outliner_title_players: "#outliner_header Spieler#!"
 outliner_title_market: "#outliner_header [OutlinerEntry.AccessScope.AccessMarket.GetNameNoFormatting]#!"
 outliner_title_goods: "#outliner_header Waren#!"
 outliner_title_staple: "#outliner_header Grundbedarfswaren#!"
 outliner_title_industrial: "#outliner_header Industriewaren#!"
 outliner_title_luxury: "#outliner_header Luxuswaren#!"
 outliner_title_military: "#outliner_header Militärwaren#!"
 outliner_title_buildings: "#outliner_header Gebäude#!"
 outliner_title_building_type: "#outliner_header [OutlinerEntry.AccessScope.AccessBuildingType.GetNameNoFormatting]#!"
 outliner_title_political_lobbies: "#outliner_header Politlobbys#!"
 outliner_title_non_revolutionary_political_movements: "#outliner_header Protestbewegungen#!"
 outliner_title_treaties: "#outliner_header Verträge#!"
 ADD_ANYTHING_TO_OUTLINER: "#title Hier können noch weitere Dinge angepinnt werden!#!"
 POLITICS_PANEL_HEADER: "Politik"
 LAW_CATEGORIES_HEADER: "Rechtskategorien#!"
 POLITICS_PANEL_HEADER_CHANGE_CONSTITUTION: "#BOLD [concept_law] ändern#!"
 POLITICS_PANEL_HEADER_CHANGE_LAW: "#BOLD Gesetz ändern#!"
 EXILE_POOL_INTEREST_GROUP_FILTER: "[SelectLocalization(GetExilePool.IsInterestGroupFilteredToShowOnly(InterestGroup.Self), 'EXILE_POOL_INTEREST_GROUP_FILTER_RESET', 'EXILE_POOL_INTEREST_GROUP_FILTER_SHOW_ONLY')]\n[SelectLocalization(GetExilePool.IsInterestGroupFiltered(InterestGroup.Self), 'EXILE_POOL_INTEREST_GROUP_FILTER_SHOW', 'EXILE_POOL_INTEREST_GROUP_FILTER_HIDE')]"
 EXILE_POOL_INTEREST_GROUP_FILTER_SHOW_ONLY: "#instruction Klicken#!, um nur [Concept('concept_agitator', '$concept_agitators$')] [Concept('concept_exile','im Exil')|l] anzuzeigen, die die IG „[InterestGroup.GetName]“ unterstützen"
 EXILE_POOL_INTEREST_GROUP_FILTER_RESET: "#instruction Klicken#!, um Filter zurückzusetzen"
 EXILE_POOL_INTEREST_GROUP_FILTER_SHOW: "#instruction $SHORTCUT_KEY_MOD_shift$Klicken#!, um [Concept('concept_agitator', '$concept_agitators$')] [Concept('concept_exile','im Exil')|l] anzuzeigen, die die IG „[InterestGroup.GetName]“ unterstützen"
 EXILE_POOL_INTEREST_GROUP_FILTER_HIDE: "#instruction $SHORTCUT_KEY_MOD_shift$Klicken#!, um [Concept('concept_agitator', '$concept_agitators$')] [Concept('concept_exile','im Exil')|l] zu verbergen, die die IG „[InterestGroup.GetName]“ unterstützen"
 NO_EXILED_AGITATORS: "Keine [Concept('concept_agitator', '$concept_agitators$')] [Concept('concept_exile','im Exil')|l] in den ausgewählten [Concept('concept_interest_group', '$concept_interest_groups$')]"
 ENACT_NEW_LAW: "Neues Gesetz beschließen"
 ABOLISH: "Widerrufen"
 NO_MARKET_SHORTAGES: "Keine Marktwaren-[concept_shortage]"
 NARROW_VICTORY: "Knapper Sieg in der Schlacht „$BATTLE_NAME$“"
 NARROW_LOSS: "Unvorhergesehene Niederlage in der Schlacht „$BATTLE_NAME$“"
 NORMAL_VICTORY: "Schlachtfeld-Sieg in der Schlacht „$BATTLE_NAME$“"
 NORMAL_LOSS: "Schlachtfeld-Niederlage in der Schlacht „$BATTLE_NAME$“"
 HEROIC_VICTORY: "Heldenhafter Sieg in der Schlacht „$BATTLE_NAME$“"
 HEROIC_LOSS: "Demütigende Niederlage in der Schlacht „$BATTLE_NAME$“"
 YEARLYGROWTH: "Jährliches Nettowachstum: #variable $NETGROWTHRATE|%=+1$#!"
 YEARLYBIRTHS: "Geburten jährlich: #variable $VAL|+0$#! (Jährliche Geburtenrate: #tooltippable #tooltip:$BREAKDOWN_TAG$ $BIRTHRATE|%1=+$)#!#!"
 BIRTHS_FROM_SOL: "Durch [Concept('concept_sol', 'Lebensstandard')]: #variable $VAL|+=0$#!"
 YEARLYDEATHS: "Tode jährlich: #variable $VAL|-0$#! (Jährliche Sterblichkeitsrate: #tooltippable #tooltip:$BREAKDOWN_TAG$ $MORTALITY|%1=-$#!#!)"
 DEATHS_FROM_SOL: "Durch [Concept('concept_sol', 'Lebensstandard')]: #variable $VAL|-=0$#!"
 CURRENTLITERACY: "Mitglieder der Gesamt-[concept_pop]-Bevölkerung, die lesen und schreiben können: $VAL|1*v$\nAlphabetisierungsrate: $RATE|%2v$ $TRENDARROW$"
 POP_ASSIMILATION: "#header Monatliche [concept_assimilation] zur [CULTURE.GetName|l]en Kultur: $TOTAL_ASSIMILATED_POPS|v0$#!\n$TOOLTIP_DELIMITER$\nGrundwert: $BASE_ASSIMILATED_POPS|v0$\n$TAB$$POPULATION$: [Pop.GetTotalSize|Dv]\n$TAB$Assimilierungsgrundrate: $BASE_RATE|v3%$[ConcatIfNeitherEmpty('\n','$MODIFIER_DESC$')]\nDa die Pop-Art „[Pop.GetName]“ eine ausreichend hohe [concept_acceptance] hat, in einem [Concept('concept_incorporated_state', 'Inkorporierten Staat')] lebt und „[Pop.GetState.GetName]“ nicht als [concept_homeland] ansieht, wird sie zur [CULTURE.GetName|l]en $concept_culture$ assimiliert, da dies die an ihrem Wohnort akzeptierteste $concept_culture$ ist, mit der sie eine [concept_cultural_heritage_trait] gemeinsam hat"
 POP_CONVERSION: "#header Monatliche [concept_conversion] zur [RELIGION.GetName|l]en Religion: $TOTAL_CONVERTED_POPS|v0$#!\n$TOOLTIP_DELIMITER$\nGrundwert: $BASE_CONVERTED_POPS|v0$\n$TAB$$POPULATION$: [Pop.GetTotalSize|Dv]\n$TAB$Bekehrungsgrundrate: $BASE_RATE|v3%$[ConcatIfNeitherEmpty('\n','$MODIFIER_DESC$')]\n„[RELIGION.GetName|U]“ wurde ausgewählt, da dies die [Concept('concept_acceptance','$concept_accepted$este')] [concept_religion] in „[Pop.GetState.GetName]“ ist"
 POP_ASSIMILATION_RADICALS: "Grundassimilierungsrate wird mit $FACTOR|2v$ multipliziert aufgrund von $RADICALS_FRACTION|v%$ [Concept('concept_radical', '$concept_radicals$')]\n"
 POP_ASSIMILATION_MIN: "Minimal werden $MIN|v$ assimiliert\n"
 POP_CONVERSION_RADICALS: "Grundkonvertierungsrate wird aufgrund von $RADICALS_FRACTION|v%$ [Concept('concept_radical', '$concept_radicals$')] mit $MULT|2v$ multipliziert\n"
 POP_CONVERSION_UNINCORPORATED: "Grundkonvertierungsrate wird in [Concept('concept_unincorporated_state','Nicht-inkorporierten Staaten')] mit $MULT|2v$ multipliziert\n"
 POP_CONVERSION_MIN: "Minimal konvertieren $MIN|v$\n"
 EDUCATION_ACCESS_HEADER: "[concept_education_access]: #tooltippable #tooltip:$TAG$,EDUCATION_ACCESS_DETAILS_TOOLTIP $VAL|2%$#!#!"
 EDUCATION_ACCESS_DETAILS: "#header [concept_education_access]#!\nBildungszugang: [POP.GetEducationAccess|2%v]\nWohlstand: [POP.GetCurrentWealth|v]\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 EDUCATION_ACCESS_UNIVERSAL: "Durch „$institution_schools$“-Stufe von #b $INSTITUTE_LEVEL|v$#!: #b $VALUE|=+2%$#!"
 EDUCATION_ACCESS_DETAILS_TOOLTIP: "[Pop.GetEducationAccessDetailsDesc]"
 EDUCATION_ACCESS_FROM_WEALTH: "Durch die [concept_wealth]s-Stufe von $WEALTH|v$: #b $TOTAL|=+2%$#!\n#P #b $PER_LEVEL|%|2$#!#! pro Stufe [concept_wealth]:"
 EDUCATION_ACCESS_POP_TYPE: "Durch [POP.GetPopType.GetName] ([concept_profession]): #b $VALUE|=+%2$#!"
 INSTITUTION_FROM_EACH_LEVEL: "jede „$INSTITUTION_TYPE$“-Stufe (#b $INSTITUTE_LEVEL|v$#!)"
 INSTITUTION_PER_LEVEL: "pro Stufe „$INSTITUTION_TYPE$“ (#b $INSTITUTE_LEVEL|v$#!)"
 STATE_POTENTIAL_QUALIFICATIONS: "#header Mögliche beschäftigbare [concept_pop_qualifications] in „[State.GetName]“#!\n$STATE_QUALIFICATIONS_SUMMARY$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 INSUFFICIENT_QUALIFICATIONS_TO_FILL_POSITIONS: "@red_cross! Es werden $POSITIONS|vD$ [POP_TYPE.GetName] für die Vollbeschäftigung benötigt. Es sind jedoch nur $QUALIFICATIONS|vD$ verfügbar"
 #[State.GetPotentialQualificationsDesc]
 STATE_QUALIFICATIONS_SUMMARY: "[SelectLocalization(State.HasInsufficientQualificationsForAvailablePositions, '$INSUFFICIENT_QUALIFICATIONS$', '$SUFFICIENT_QUALIFICATIONS$')]"
 INSUFFICIENT_QUALIFICATIONS: "@red_cross! Hat keine möglichen beschäftigbaren Qualifikationen, um alle derzeitigen Leerstellen zu füllen"
 SUFFICIENT_QUALIFICATIONS: "@green_checkmark! Hat mögliche beschäftigbare Qualifikationen, um alle derzeitigen Leerstellen zu füllen"
 STATE_POTENTIAL_QUALIFICATIONS_ENTRY: "#tooltippable #tooltip:[State.GetTooltipTag]|[PopType.GetTooltipTag],STATE_POTENTIAL_POPTYPE_QUALIFICATIONS $POTENTIAL_QUALIFICATIONS|vD$#!#! [PopType.GetName] ($POTENTIAL_QUALIFICATIONS_CHANGE|=vD$ / Monat)"
 STATE_POTENTIAL_POPTYPE_QUALIFICATIONS: "[State.GetPotentialQualificationsBreakdown(State.Self.Self)]"
 STATE_POTENTIAL_QUALIFICATIONS_BREAKDOWN: "#header Mögliche beschäftigbare [PopType.GetName] in „[State.GetName]“: [State.GetPotentialQualifications(PopType.Self)|vD]#!\nMonatliche Änderung: $TOTAL_QUALIFICATIONS_CHANGE|=vD$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 STATE_POTENTIAL_QUALIFICATIONS_BREAKDOWN_ENTRY: "$EMPLOYABLE_QUALIFICATIONS|vD$ [AddTextIf(Not(Pop.IsEmployed), '$concept_unemployed$e')] [Pop.GetName] [AddTextIf(Pop.IsEmployed, Concatenate('in ', Pop.GetBuilding.GetName))] (#tooltippable #tooltip:[Pop.GetTooltipTag]|[PopType.GetTooltipTag],POP_POPTYPE_QUALIFICATIONS_CHANGE $QUALIFICATIONS_CHANGE|=vD$#!#! / Monat)"
 POP_POPTYPE_QUALIFICATIONS_CHANGE: "[Pop.GetQualificationsChangeDesc(PopType.Self)]"
 POP_QUALIFICATIONS_ENTRY: "[PopType.GetName]: $QUALIFICATIONS|vD$ (#tooltippable #tooltip:$TAG$|[PopType.GetTooltipTag],POP_POPTYPE_QUALIFICATIONS_CHANGE $CHANGEVAL|+=D$#!#! / Monat)"
 QUALIFICATIONS_CHANGE_POPTYPE_TOOLTIP: "#header Qualifikationen ([PopType.GetName])#!\n $CURRENT_WORKFORCE|vD$ [Concept('concept_individual', '$concept_individuals$')] derzeit\n #v $MONTHLY_CHANGE|=+D$#! monatlich\n$TOOLTIP_DELIMITER$\n #v $MONTHLY_CHANGE|=+D$#! [PopType.GetName] monatlich aufgrund von: #indent_newline:3 \n#v $BASE_VALUE|=+D$#! Grundwert\n$BREAKDOWN$#!\n\n[PopType.GetQualificationsGrowthDesc]"
 WORKFORCE_FACTOR_DESC: "#v ×$FACTOR|2$#!-Multiplikator durch [Concept('concept_workforce', 'Beschäftigten')]-Einfluss (@population! #v $SIZE|D$#!)"
 QUALIFICATIONS_LOWER_BOUND: "(Gedeckelt bei @population! #b $VALUE|vD$#!#!)"
 QUALIFICATIONS_UPPER_BOUND: "(Gedeckelt bei @population! #b $VALUE|vD$#!#!)"
 QUEUE_CONSTRUCTION_POINTS_SUMMARY: "[LabelingHelper.GetFormattedDays(Multiply_int32(Country.EstimatedConstructionQueueDuration, '(int32)7'))]"
 QUEUE_CONSTRUCTION_POINTS_SUMMARY_TOOLTIP: "#header Geschätzte Bauzeit#!\n[Country.GetAltName('NOM')|U] hat noch etwa [LabelingHelper.GetFormattedDays(Multiply_int32(Country.EstimatedConstructionQueueDuration, '(int32)7'))] in der [concept_construction_queue]\n$TOOLTIP_DELIMITER$\n[LabelingHelper.GetFormattedDays(Multiply_int32(Country.EstimatedConstructionQueueDuration, '(int32)7'))] in der [concept_government_construction]-Reihe\n[LabelingHelper.GetFormattedDays(Multiply_int32(Country.EstimatedPrivateConstructionQueueDuration, '(int32)7'))] in der [concept_private_construction]-Reihe"
 NUM_PRIVATE_CONSTRUCTION_TOOLTIP: "#header [Concept('concept_private_construction', '$concept_private_constructions$')]#!\nEs gibt [Country.GetNumPrivateConstructionsInQueue|v] [Concept('concept_private_construction', '$concept_private_constructions$')] in der [Country.GetAdjective|l]en [concept_construction_queue]"
 NUM_GOVERNMENT_CONSTRUCTION_TOOLTIP: "#header [Concept('concept_government_construction', '$concept_government_constructions$')]#!\nEs gibt [Country.GetNumGovernmentConstructionsInQueue|v] [Concept('concept_government_construction', '$concept_government_constructions$')] in der [Country.GetAdjective|l]en [concept_construction_queue]"
 QUALIFICATIONS_LITERACY_FACTOR: "durch [Pop.GetLiteracyRate|v0%] [concept_literacy]"
 QUALIFICATIONS_WEALTH_FACTOR: "durch [Pop.GetCurrentWealth|v0] [concept_wealth]"
 QUALIFICATIONS_FAVORED_TYPE: "durch Zugehörigkeit zu „[Pop.GetPopType.GetName]“"
 QUALIFICATIONS_INSUFFICIENT_LITERACY_DECAY: "durch unzureichende [concept_literacy] ([Pop.GetLiteracyRate|v0%])"
 QUALIFICATIONS_INSUFFICIENT_WEALTH_DECAY: "durch unzureichenden [concept_wealth] ([Pop.GetCurrentWealth|v0])"
 QUALIFICATIONS_PEASANTS_UNDER_SERFDOM: "durch Zugehörigkeit zu „[Pop.GetPopType.GetName]“ unter „[GetLawType('law_serfdom').GetName]“"
 QUALIFICATIONS_CLERGYMEN_UNDER_TOTAL_SEPARATION: "durch Zugehörigkeit zu „[Pop.GetPopType.GetName]“ unter „[GetLawType('law_total_separation').GetName]“"
 QUALIFICATIONS_DEPLOYED_SERVICEMEN: "durch den Einsatz als „[Pop.GetPopType.GetName]“ im Krieg"
 POTENTIALS_CULTURAL_RELIGIOUS_ACCEPTANCE: "durch hohe [concept_acceptance] der [concept_religion]"
 QUALIFICATIONS_CULTURAL_DISCRIMINATION: "durch niedrige [concept_acceptance] der [concept_culture]"
 POTENTIALS_RELIGIOUS_DISCRIMINATION: "durch niedrige [concept_acceptance] der [concept_religion]"
 QUALIFICATIONS_OFFICERS_PEASANT_LEVIES: "durch [GetLawType('law_peasant_levies').GetName]"
 QUALIFICATIONS_OFFICERS_PEASANT_LEVIES_DESC: "Die meisten [concept_pop_qualifications] in Sachen [GetPopType('officers').GetName] stammen von den [GetPopType('aristocrats').GetName]"
 GROWTH_TITLE: "#title Wachstum#!"
 LITERACY_TITLE: "#title [concept_literacy]#!"
 INCOME_TITLE: "#title Einnahmen#!"
 EXPENSES_TITLE: "#title Ausgaben#!"
 PRIMARY_IG_TITLE: "#title [Concept('concept_interest_group','$concept_interest_groups$')]#!"
 IG_TITLE: "#title IG#!"
 POP_TYPE_INFORMATION: "[Pop.GetPopType.GetName] [Pop.GetState.GetOwner.GetAltName('IN')]"
 GOODS_IN_COUNTRY: "[Goods.GetName] [GetPlayer.GetAltName('IN')]"
 GUIDE_ME: "Eine Anleitung bitte"
 #TUTORIAL_CANNOT_START: "Cannot start lesson while another tutorial lesson is active"
 TELL_ME_HOW: "Sagt mir, wie"
 TELL_ME_WHY: "Sagt mir, warum"
 RADICALS_TITLE: "$concept_radicals$"
 LOYALISTS_TITLE: "$concept_loyalists$"
 RELATIONS_TITLE: "#title Beziehung#!"
 TOWARDS_THEM_TITLE: "#title Wir @arrow_right! Sie#!"
 TOWARDS_US_TITLE: "#title Sie @arrow_right! Wir#!"
 OUR_COUNTRY_TEXT: "Wir spielen als #variable [Country.GetAltName('NOM')]#!"
 RELATION_WITH: "Unsere Beziehungen sind #BOLD [Country.GetRelationsWithDesc( GetPlayer )]#! ([Country.GetRelationsWith(GetPlayer)|+])"
 CANNOT_MOVE_COMMANDER_NON_FRIENDLY_HQ: "#N [Hq.GetName] ist kein eigenes oder verbündetes [concept_hq]#!"
 MOVE_COMMANDER_ALREADY_THERE_TOOLTIP: "#N [Character.GetFullName] befindet sich bereits in [Hq.GetName]#!"
 ADD_GENERAL_ROLE: "Befehlsgewalt übertragen"
 REMOVE_GENERAL_ROLE: "Befehlsgewalt entziehen"
 ADD_GENERAL_ROLE_DESC: "#header $ADD_GENERAL_ROLE$#!\n$TOOLTIP_DELIMITER$\nErlaubt [CHARACTER.GetFullName], als [concept_general] zu fungieren und zusätzlich zu [CHARACTER.GetCustom('DE_PRO_POS_S_3P')]en anderen Pflichten eine Armee zu befehligen[ConcatIfNeitherEmpty( '\n', '$COMMAND_DESC$' )]"
 REMOVE_GENERAL_ROLE_DESC: "#header $REMOVE_GENERAL_ROLE$#!\n$TOOLTIP_DELIMITER$\nEntzieht [CHARACTER.GetFullName] die Erlaubnis, als [concept_general] zu fungieren[ConcatIfNeitherEmpty( '\n', '$COMMAND_DESC$' )]"
 MAP_INTERACTION_MOVE_COMMANDER_DESC: "Wählt ein Hauptquartier aus, in das sich [Character.GetFullName] begeben soll"
 MAP_INTERACTION_MOVE_COMMANDER_PERFORMED: "[Character.GetFullName] hat das Hauptquartier gewechselt"
 MAP_INTERACTION_RESET_PRODUCTION_METHODS_STATE_DESC: "Zurücksetzen der Produktionsmethoden auf nationale Standards"
 MAP_INTERACTION_RESET_PRODUCTION_METHODS_STATE_SELECT: "#header Produktionsmethoden zurücksetzen#!\nDie folgenden Anpassungen werden in ganz „[State.GetName]“ vorgenommen:\n\n$LIST$"
 RESET_PRODUCTION_METHODS_BUILDING: "#header Produktionsmethoden zurücksetzen#!\n[ConcatIfNeitherEmpty(AddLocalizationIf(Not(IsValid(Building.ResetProductionMethodsToStandard)), 'RESET_PM_NOT_VALID'), '\n\n')]Dies würde die [Concept('concept_production_method', '$concept_production_methods$')] von „$NAME$“ in „[State.GetName]“ auf unsere verbreitetsten nationalen Standards zurücksetzen. Die folgenden Anpassungen werden vorgenommen:\n\n$LIST$"
 RESET_PRODUCTION_METHODS_BUILDING_TYPE: "#header Produktionsmethoden zurücksetzen#!\n[ConcatIfNeitherEmpty(AddLocalizationIf(Not(IsValid($BUILDING_TYPE$.ResetProductionMethodsToStandard)), 'RESET_PM_NOT_VALID'), '\n\n')]Alle [Concept('concept_production_method', '$concept_production_methods$')] für alle „$NAME$“ [Country.GetAltName('IN')] werden auf unsere verbreitetsten nationalen Standards zurückgesetzt. Die folgenden Anpassungen werden vorgenommen:\n\n$LIST$"
 RESET_PM_NOT_VALID: "@red_cross! Es gibt keine [Concept('concept_production_method','$concept_production_methods$')] zum Zurücksetzen"
 RESET_PM_BUILDING: "Produktionsmethoden von „[Building.GetState.GetName]“ zurücksetzen"
 RESET_PM_BUILDING_TYPE: "Produktionsmethoden [Country.GetAltName('IN')] zurücksetzen"
 MAP_INTERACTION_RESET_PRODUCTION_METHODS_STATE_PERFORMED: "$concept_production_methods$ abgestimmt"
 RESET_PRODUCTION_METHODS_ALL_BUILDINGS_STANDARD: "Alle [Concept('concept_production_method', '$concept_production_methods$')] wurden bereits auf die nationalen Standards abgestimmt"
 RESET_PRODUCTION_METHOD_TOOLTIP_LIST_ENTRY: "[Building.GetName]: $ACTIVE_METHOD$ @arrow_right! $STANDARD_METHOD$"
 RESET_PRODUCTION_METHOD_TOOLTIP_LIST_ENTRY_WITH_STATE_NAME: "[Building.GetName] in [Building.GetState.GetName]: $ACTIVE_METHOD$@arrow_right!$STANDARD_METHOD$"
 notification_peace_agreement_signed_war_leader_tooltip: "#header $notification_peace_agreement_signed_war_leader_name$#!\n$TOOLTIP_DELIMITER$\n$notification_peace_agreement_signed_war_leader_desc$"
 notification_peace_agreement_signed_war_leader_name: "Frieden mit [SCOPE.sC('recipient').GetAltName('DAT')]"
 notification_peace_agreement_signed_war_leader_desc: "Wir haben ein Friedensabkommen mit #variable [SCOPE.sC('recipient').GetAltName('DAT')]#! unterzeichnet und damit die Feindseligkeiten zwischen uns beendet."
 notification_peace_agreement_signed_war_participant_tooltip: "#header $notification_peace_agreement_signed_war_participant_name$#!\n$TOOLTIP_DELIMITER$\n$notification_peace_agreement_signed_war_participant_desc$"
 notification_peace_agreement_signed_war_participant_name: "Frieden zwischen [SCOPE.sC('actor').GetAltName('DAT')] und [SCOPE.sC('target').GetAltName('DAT')]"
 notification_peace_agreement_signed_war_participant_desc: "#variable [SCOPE.sC('actor').GetAltName('NOM')|U]#! hat ein Friedensabkommen mit #variable [SCOPE.sC('target').GetAltName('DAT')]#! unterzeichnet und damit die Feindseligkeiten zwischen uns beendet."
 notification_peace_agreement_signed_non_participant_tooltip: "#header $notification_peace_agreement_signed_non_participant_name$#!\n$TOOLTIP_DELIMITER$\n$notification_peace_agreement_signed_non_participant_desc$"
 notification_peace_agreement_signed_non_participant_name: "Frieden zwischen [SCOPE.sC('actor').GetAltName('DAT')] und [SCOPE.sC('target').GetAltName('DAT')]"
 notification_peace_agreement_signed_non_participant_desc: "#variable [SCOPE.sC('actor').GetAltName('DAT')]#! hat ein Friedensabkommen mit #variable [SCOPE.sC('target').GetAltName('DAT')]#! unterzeichnet und damit die Feindseligkeiten zwischen ihnen beendet."
 notification_self_capitulated_tooltip: "#header $notification_self_capitulated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_self_capitulated_desc$"
 notification_self_capitulated_name: "Unser Land kapituliert"
 notification_self_capitulated_desc: "Unser Land hat kapituliert. Alle gegen uns gerichteten $WARGOALS$ wurden durchgesetzt."
 notification_enemy_capitulated_tooltip: "#header $notification_enemy_capitulated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_enemy_capitulated_desc$"
 notification_enemy_capitulated_name: "#variable [SCOPE.sC('target').GetAltName('NOM')|U]#! kapituliert"
 notification_enemy_capitulated_desc: "Unser Feind – #variable [SCOPE.sC('target').GetAltName('NOM')]#! – hat kapituliert. Alle gegen ihn gerichteten $WARGOALS$ wurden durchgesetzt."
 notification_ally_capitulated_tooltip: "#header $notification_ally_capitulated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ally_capitulated_desc$"
 notification_ally_capitulated_name: "#variable [SCOPE.sC('target').GetAltName('NOM')|U]#! kapituliert"
 notification_ally_capitulated_desc: "Unser Verbündeter – #variable [SCOPE.sC('target').GetAltName('NOM')]#! – hat kapituliert. Alle gegen ihn gerichteten $WARGOALS$ wurden durchgesetzt."
 notification_diplo_play_start_notification_tooltip: "#header $notification_diplo_play_start_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_start_notification_desc$"
 notification_diplo_play_start_notification_name: "[SCOPE.sC('actor').GetAdjective]es [concept_diplomatic_play] gegen uns"
 notification_diplo_play_start_notification_desc: "[SCOPE.sC('actor').GetAltName('NOM')|U] begann ein [concept_diplomatic_play] ([SCOPE.GetRootScope.GetDiplomaticPlay.GetDiplomaticPlayType.GetName|b]) gegen uns."
 notification_diplo_play_start_third_party_notification_tooltip: "#header $notification_diplo_play_start_third_party_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_start_third_party_notification_desc$"
 notification_diplo_play_start_third_party_notification_name: "[SCOPE.sC('actor').GetFlagTextIcon] [SCOPE.GetRootScope.GetDiplomaticPlay.GetDiplomaticPlayType.GetName|b] in [SCOPE.GetRootScope.GetDiplomaticPlay.GetStrategicRegion.GetName]"
 notification_diplo_play_start_third_party_notification_desc: "[SCOPE.sC('actor').GetAltName('NOM')|U] begann ein [concept_diplomatic_play] ([SCOPE.GetRootScope.GetDiplomaticPlay.GetDiplomaticPlayType.GetName|b]) gegen [SCOPE.sC('target').GetAltName('AKK')]."
 notification_diplo_play_back_down_notification_tooltip: "#header $notification_diplo_play_back_down_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_back_down_notification_desc$"
 notification_diplo_play_back_down_notification_name: "[SCOPE.sC('actor').GetAltName('NOM')|U] lenkt ein"
 notification_diplo_play_back_down_notification_desc: "[SCOPE.sC('actor').GetAltName('NOM')|U] verließ unser [concept_diplomatic_play] und überließ uns das primäre Kriegsziel."
 notification_diplo_play_back_down_involved_notification_tooltip: "#header $notification_diplo_play_back_down_involved_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_back_down_involved_notification_desc$"
 notification_diplo_play_back_down_involved_notification_name: "[SCOPE.sC('actor').GetAltName('NOM')|U] lenkt ein"
 notification_diplo_play_back_down_involved_notification_desc: "[SCOPE.sC('actor').GetAltName('NOM')|U] verließ das [concept_diplomatic_play] gegen [SCOPE.sC('target').GetAltName('DAT')]."
 notification_diplo_play_join_side_notification_tooltip: "#header $notification_diplo_play_join_side_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_join_side_notification_desc$"
 notification_diplo_play_join_side_notification_name: "[SCOPE.sC('actor').GetAltName('NOM')|U] stellt sich auf die Seite [SCOPE.sC('target').GetAltName('GEN')]"
 notification_diplo_play_join_side_notification_desc: "[SCOPE.sC('actor').GetAltName('NOM')|U] stellte sich im [concept_diplomatic_play] gegen [SCOPE.sC('recipient').GetAltName('AKK')] auf die Seite [SCOPE.sC('target').GetAltName('GEN')]."
 notification_diplo_play_abandon_side_notification_tooltip: "#header $notification_diplo_play_abandon_side_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_abandon_side_notification_desc$"
 notification_diplo_play_abandon_side_notification_name: "[SCOPE.sC('actor').GetAltName('NOM')|U] gab [SCOPE.sC('target').GetAltName('AKK')] auf"
 notification_diplo_play_abandon_side_notification_desc: "[SCOPE.sC('actor').GetAltName('NOM')|U] unterstützt [SCOPE.sC('target').GetAltName('AKK')] im [concept_diplomatic_play] gegen [SCOPE.sC('recipient').GetAltName('AKK')] nicht mehr."
 notification_diplo_play_war_start_third_party_notification_tooltip: "#header $notification_diplo_play_war_start_third_party_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_war_start_third_party_notification_desc$"
 notification_diplo_play_war_start_third_party_notification_name: "Krieg zwischen [SCOPE.sC('actor').GetAltName('DAT')] und [SCOPE.sC('target').GetAltName('DAT')]"
 notification_diplo_play_war_start_third_party_notification_desc: "Zwischen [SCOPE.sC('actor').GetAltName('DAT')] und [SCOPE.sC('target').GetAltName('DAT')] ist Krieg ausgebrochen."
 notification_diplo_play_subject_released_notification_tooltip: "#header $notification_diplo_play_subject_released_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_subject_released_notification_desc$"
 notification_diplo_play_subject_released_notification_name: "[SCOPE.sC('target').GetAltName('NOM')|U] ist unabhängig"
 notification_diplo_play_subject_released_notification_desc: "Da es [SCOPE.sC('actor').GetAltName('DAT')] nicht gelungen ist, seinen Untertan – [SCOPE.sC('target').GetAltName('NOM')] – zu schützen, ist ihr Pakt mit sofortiger Wirkung null und nichtig."
 notification_diplo_play_subject_released_overlord_notification_tooltip: "#header $notification_diplo_play_subject_released_overlord_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_subject_released_overlord_notification_desc$"
 notification_diplo_play_subject_released_overlord_notification_name: "[SCOPE.sC('target').GetAltName('NOM')|U] ist unabhängig"
 notification_diplo_play_subject_released_overlord_notification_desc: "Da wir es versäumt haben, unseren Untertan – [SCOPE.sC('target').GetAltName('AKK')] – zu schützen, hat er seine Unabhängigkeit erlangt."
 notification_diplo_play_declare_neutrality_notification_tooltip: "#header $notification_diplo_play_declare_neutrality_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_declare_neutrality_notification_desc$"
 notification_diplo_play_declare_neutrality_notification_name: "[SCOPE.sC('actor').GetAltName('NOM')|U] erklärt Neutralität"
 notification_diplo_play_declare_neutrality_notification_desc: "[SCOPE.sC('actor').GetAltName('NOM')|U] erklärte im [concept_diplomatic_play] zwischen [SCOPE.sC('initiator').GetAltName('DAT')] und [SCOPE.sC('target').GetAltName('DAT')] Neutralität."
 notification_resource_discovered_tooltip: "#header $notification_resource_discovered_name$#!\n$TOOLTIP_DELIMITER$\n$notification_resource_discovered_desc$"
 notification_resource_discovered_name: "[SCOPE.sBT('target').GetDiscoveredResourceName] in [SCOPE.GetRootScope.GetStateRegion.GetName] entdeckt"
 notification_resource_discovered_desc: "[SCOPE.sBT('target').GetDiscoveredResourceName] wurde in [SCOPE.GetRootScope.GetStateRegion.GetName] entdeckt. Die [concept_state_region] kann nun zusätzliche Gebäude des Typs „[SCOPE.sBT('target').GetName]“ unterhalten."
 notification_resource_depleted_tooltip: "#header $notification_resource_depleted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_resource_depleted_desc$"
 notification_resource_depleted_name: "[SCOPE.sBT('target').GetDiscoveredResourceName] in [SCOPE.GetRootScope.GetStateRegion.GetName] erschöpft"
 notification_resource_depleted_desc: "Die Vorkommen der Ressource [SCOPE.sBT('target').GetDiscoveredResourceName] in [SCOPE.GetRootScope.GetStateRegion.GetName] sind erschöpft. Die[concept_state_region] kann nun weniger Gebäude der Art „[SCOPE.sBT('target').GetName]“ unterhalten."
 notification_new_culture_obsession_tooltip: "#header $notification_new_culture_obsession_name$#!\n$TOOLTIP_DELIMITER$\n$notification_new_culture_obsession_desc$"
 notification_new_culture_obsession_name: "[SCOPE.GetRootScope.GetCulture.GetName]e Kultur sehnt sich nach der Ware „[SCOPE.sG('goods').GetName]“"
 notification_new_culture_obsession_desc: "Die [SCOPE.GetRootScope.GetCulture.GetName|l]e Kultur ist von der Ware „[SCOPE.sG('goods').GetName]“ besessen."
 notification_commander_order_invalidated_tooltip: "#header $notification_commander_order_invalidated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_commander_order_invalidated_desc$"
 notification_commander_order_invalidated_name: "Neuer Befehlshaber-Befehl"
 notification_commander_order_invalidated_desc: "[SCOPE.GetRootScope.GetCharacter.GetFullName] hat nun den Befehl „[SCOPE.sCOT('target').GetName]“ (vorher: [SCOPE.sCOT('actor').GetName])"
 notification_migration_target_created_tooltip: "#header $notification_migration_target_created_name$#!\n$TOOLTIP_DELIMITER$\n$notification_migration_target_created_desc$"
 notification_migration_target_created_name: "[SCOPE.GetRootScope.GetState.GetMassMigrationCulture.GetName|U]e Einwanderungswelle"
 notification_migration_target_created_desc: "Ein großer Anteil der [SCOPE.GetRootScope.GetState.GetMassMigrationCulture.GetName|l]en Bevölkerung hat begonnen, aus [SCOPE.sC('country').GetAltName('DAT')] nach [SCOPE.GetRootScope.GetState.GetName] sowie in die umliegenden [Concept('concept_state', '$concept_states$')] auszuwandern."
 notification_migration_target_created_other_tooltip: "#header $notification_migration_target_created_other_name$#!\n$TOOLTIP_DELIMITER$\n$notification_migration_target_created_other_desc$"
 notification_migration_target_created_other_name: "[SCOPE.GetRootScope.GetState.GetMassMigrationCulture.GetName|U]e Auswanderungswelle"
 notification_migration_target_created_other_desc: "Ein großer Anteil der [SCOPE.GetRootScope.GetState.GetMassMigrationCulture.GetName|l]en Bevölkerung hat begonnen, aus unserem [concept_country] nach [SCOPE.GetRootScope.GetState.GetName] sowie in die umliegenden [Concept('concept_state', '$concept_states$')] auszuwandern."
 notification_country_swayed_tooltip: "#header $notification_country_swayed_name$#!\n$TOOLTIP_DELIMITER$\n$notification_country_swayed_desc$"
 notification_country_swayed_name: "[SCOPE.sC('recipient').GetAltName('NOM')|U] beeinflusst"
 notification_country_swayed_desc: "[SCOPE.sC('recipient').GetAltName('NOM')|U] wurde beeinflusst und befindet sich im [concept_diplomatic_play] gegen [SCOPE.sC('target').GetAltName('AKK')] auf der Seite [SCOPE.sC('actor').GetAltName('GEN')]."
 notification_sway_offer_accepted_tooltip: "#header $notification_sway_offer_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_sway_offer_accepted_desc$"
 notification_sway_offer_accepted_name: "[SCOPE.sC('recipient').GetAltName('NOM')|U] beeinflusst"
 notification_sway_offer_accepted_desc: "[SCOPE.sC('recipient').GetAltName('NOM')|U] wurde beeinflusst und befindet sich im [concept_diplomatic_play] gegen [SCOPE.sC('target').GetAltName('AKK')] auf unserer Seite."
 notification_reverse_sway_offer_accepted_tooltip: "#header $notification_reverse_sway_offer_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_reverse_sway_offer_accepted_desc$"
 notification_reverse_sway_offer_accepted_name: "[SCOPE.sC('recipient').GetAltName('NOM')|U] hat unsere Unterstützung angenommen"
 notification_reverse_sway_offer_accepted_desc: "[SCOPE.sC('recipient').GetAltName('NOM')|U] hat unser [Concept('concept_offer_support','$concept_offer_of_support$')] im [concept_diplomatic_play] gegen [SCOPE.sC('target').GetAltName('AKK')] angenommen"
 notification_sway_offer_rejected_tooltip: "#header $notification_sway_offer_rejected_name$#!\n$TOOLTIP_DELIMITER$\n$notification_sway_offer_rejected_desc$"
 notification_sway_offer_rejected_name: "Beeinflussungsversuch [SCOPE.sC('recipient').GetAltName('GEN')] fehlgeschlagen"
 notification_sway_offer_rejected_desc: "[SCOPE.sC('recipient').GetAltName('NOM')|U] ließ sich nicht beeinflussen und befindet sich im [concept_diplomatic_play] gegen [SCOPE.sC('target').GetAltName('AKK')] daher nicht auf unserer Seite."
 notification_reverse_sway_offer_rejected_tooltip: "#header $notification_reverse_sway_offer_rejected_name$#!\n$TOOLTIP_DELIMITER$\n$notification_reverse_sway_offer_rejected_desc$"
 notification_reverse_sway_offer_rejected_name: "[SCOPE.sC('recipient').GetAltName('NOM')|U] hat unser [Concept('concept_offer_support','$concept_offer_of_support$')] abgelehnt"
 notification_reverse_sway_offer_rejected_desc: "[SCOPE.sC('recipient').GetAltName('NOM')|U] hat unser [Concept('concept_offer_support','$concept_offer_of_support$')] im [concept_diplomatic_play] gegen [SCOPE.sC('target').GetAltName('AKK')] abgelehnt"
 notification_diplomatic_demand_accepted_tooltip: "#header $notification_diplomatic_demand_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_demand_accepted_desc$"
 notification_diplomatic_demand_accepted_name: "[SCOPE.sC('recipient').GetAltName('NOM')|U] akzeptiert die Forderungen"
 notification_diplomatic_demand_accepted_desc: "[SCOPE.sC('recipient').GetAltName('NOM')|U] hat die [concept_diplomatic_demand] ‚[SCOPE.GetRootScope.GetDiplomaticDemand.GetDemandedWarGoal.GetName]‘ [SCOPE.sC('actor').GetAltName('VON')] akzeptiert"
 notification_diplomatic_demand_rejected_tooltip: "#header $notification_diplomatic_demand_rejected_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_demand_rejected_desc$"
 notification_diplomatic_demand_rejected_name: "[SCOPE.sC('recipient').GetAltName('NOM')|U] lehnt die Forderungen ab"
 notification_diplomatic_demand_rejected_desc: "[SCOPE.sC('recipient').GetAltName('NOM')|U] lehnte unsere [concept_diplomatic_demand] ‚[SCOPE.GetRootScope.GetDiplomaticDemand.GetDemandedWarGoal.GetName]‘ ab und löste damit ein [concept_diplomatic_play] aus"
 notification_interest_activated_tooltip: "#header $notification_interest_activated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_activated_desc$"
 notification_interest_activated_name: "[concept_interest] an der Strategieregion „[SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName]“ bekundet"
 notification_interest_activated_desc: "Wir können uns nun an [Concept('concept_diplomatic_play', 'Diplomatiespielen')] beteiligen oder Diplomatie mit [Concept('concept_country', '$concept_countries$n')] in der Region [SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName] betreiben."
 notification_interest_deactivated_tooltip: "#header $notification_interest_deactivated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_deactivated_desc$"
 notification_interest_deactivated_name: "[concept_interest] an [SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName] entfernt"
 notification_interest_deactivated_desc: "Wir können uns nicht mehr an [Concept('concept_diplomatic_play', 'Diplomatiespielen')] beteiligen oder Diplomatie mit [Concept('concept_country', '$concept_countries$n')] in der Region [SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName] betreiben."
 notification_interest_activated_third_party_tooltip: "#header $notification_interest_activated_third_party_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_activated_third_party_desc$"
 notification_interest_activated_third_party_name: "Diplomatische Bande mit [SCOPE.sCountry('actor').GetAltName('DAT')]"
 notification_interest_activated_third_party_desc: "Da [SCOPE.sCountry('actor').GetAltName('NOM')] ein [concept_interest] in [SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName] aufbaut, können wir jetzt Diplomatie mit ihnen betreiben."
 notification_interest_deactivated_third_party_tooltip: "#header $notification_interest_deactivated_third_party_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_deactivated_third_party_desc$"
 notification_interest_deactivated_third_party_name: "Diplomatische Bande mit [SCOPE.sCountry('actor').GetAltName('DAT')] verloren"
 notification_interest_deactivated_third_party_desc: "Da [SCOPE.sCountry('actor').GetAltName('NOM')] sein [concept_interest] in [SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName] verliert, können wir nicht länger Diplomatie mit ihnen betreiben."
 notification_colony_created_tooltip: "#header $notification_colony_created_name$#!\n$TOOLTIP_DELIMITER$\n$notification_colony_created_desc$"
 notification_colony_created_name: "[SCOPE.sCountry('actor').GetAltName('NOM')|U] hat [SCOPE.GetRootScope.GetState.GetStateRegion.GetName] kolonisiert"
 notification_colony_created_desc: "[SCOPE.sCountry('actor').GetAltName('NOM')|U] hat die [concept_colony] [SCOPE.GetRootScope.GetState.GetName] gegründet."
 notification_colony_complete_tooltip: "#header $notification_colony_complete_name$#!\n$TOOLTIP_DELIMITER$\n$notification_colony_complete_desc$"
 notification_colony_complete_name: "Kolonisierung von [SCOPE.GetRootScope.GetState.GetStateRegion.GetName] abgeschlossen"
 notification_colony_complete_desc: "Unsere Kolonisierung von [SCOPE.GetRootScope.GetState.GetName] ist abgeschlossen. Die ehemalige [concept_colony] ist jetzt ein richtiger [concept_state]."
 notification_colony_complete_third_party_tooltip: "#header $notification_colony_complete_third_party_name$#!\n$TOOLTIP_DELIMITER$\n$notification_colony_complete_third_party_desc$"
 notification_colony_complete_third_party_name: "[SCOPE.sCountry('actor').GetAdjective]e Koloniserung von [SCOPE.GetRootScope.GetState.GetStateRegion.GetName] abgeschlossen"
 notification_colony_complete_third_party_desc: "[SCOPE.sCountry('actor').GetAltName('NOM')|U] hat die Kolonisierung von [SCOPE.GetRootScope.GetState.GetName] abgeschlossen. Die ehemalige [concept_colony] ist jetzt ein richtiger [concept_state]."
 notification_company_prestige_goods_production_activated_tooltip: "#header $notification_company_prestige_goods_production_activated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_company_prestige_goods_production_activated_desc$"
 notification_company_prestige_goods_production_activated_name: "[SCOPE.GetRootScope.GetCompany.GetName] beginnt „$PRESTIGE_GOODS_CONCEPT$“ zu produzieren"
 notification_company_prestige_goods_production_activated_desc: "[SCOPE.GetRootScope.GetCompany.GetName] wird jetzt „[SCOPE.GetRootScope.GetCompany.GetProducedPrestigeGoodsDesc]“ produzieren"
 notification_company_prosperity_bonus_activated_tooltip: "#header $notification_company_prosperity_bonus_activated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_company_prosperity_bonus_activated_desc$"
 notification_company_prosperity_bonus_activated_name: "Wohlstandsbonus von [SCOPE.GetRootScope.GetCompany.GetName] aktiviert"
 notification_company_prosperity_bonus_activated_desc: "Weil man [concept_prosperity] [GetDefine('NEconomy','COMPANY_PROSPERITY_BONUS_ACTIVATION_THRESHOLD')|v0] erreicht hat\n\n#title Auswirkungen#!\n[SCOPE.GetRootScope.GetCompany.GetCompanyType.GetProsperityModifier.GetDesc]"
 notification_company_prosperity_bonus_deactivated_tooltip: "#header $notification_company_prosperity_bonus_deactivated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_company_prosperity_bonus_deactivated_desc$"
 notification_company_prosperity_bonus_deactivated_name: "Wohlstandsbonus von [SCOPE.GetRootScope.GetCompany.GetName] deaktiviert"
 notification_company_prosperity_bonus_deactivated_desc: "Weil der [concept_prosperity] unter [GetDefine('NEconomy','COMPANY_PROSPERITY_BONUS_DEACTIVATION_THRESHOLD')|v0] gefallen ist\n\n#title Auswirkungen (gelten nicht mehr)#!\n[SCOPE.GetRootScope.GetCompany.GetCompanyType.GetProsperityModifier.GetDesc]"
 notification_ig_trait_activated_tooltip: "#header $notification_ig_trait_activated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_trait_activated_desc$"
 notification_ig_trait_activated_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] – [SCOPE.sInterestGroupTrait('target').GetName(SCOPE.GetRootScope.GetInterestGroup.Self)] aktiviert"
 notification_ig_trait_activated_desc: "Dies liegt an ihrer [concept_approval] von [SCOPE.GetRootScope.GetInterestGroup.GetApprovalRating] (#tooltippable #tooltip:[SCOPE.GetRootScope.GetInterestGroup.GetTooltipTag],IG_APPROVAL_BREAKDOWN [SCOPE.GetRootScope.GetInterestGroup.GetApprovalValue|=+]#!#!)\n\n#title Auswirkungen#!\n[SCOPE.sInterestGroupTrait('target').GetModifiersDesc(SCOPE.GetRootScope.GetInterestGroup.Self)]"
 notification_ig_became_influential_tooltip: "#header $notification_ig_became_influential_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_became_influential_desc$"
 notification_ig_became_influential_name: "IG „[SCOPE.GetRootScope.GetInterestGroup.GetName]“ ist jetzt [concept_influential|l]"
 notification_ig_became_influential_desc: "Die Interessengruppe „[SCOPE.GetRootScope.GetInterestGroup.GetName]“ war einst [concept_marginalized|l] und ist jetzt [concept_influential|l]."
 notification_ig_became_powerful_tooltip: "#header $notification_ig_became_powerful_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_became_powerful_desc$"
 notification_ig_became_powerful_name: "IG „[SCOPE.GetRootScope.GetInterestGroup.GetName]“ ist jetzt [concept_powerful|l]"
 notification_ig_became_powerful_desc: "Die Interessengruppe „[SCOPE.GetRootScope.GetInterestGroup.GetName]“ war einst [concept_influential|l] und ist jetzt [concept_powerful|l]."
 notification_ig_no_longer_powerful_tooltip: "#header $notification_ig_no_longer_powerful_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_no_longer_powerful_desc$"
 notification_ig_no_longer_powerful_name: "IG „[SCOPE.GetRootScope.GetInterestGroup.GetName]“ ist nicht mehr [concept_powerful|l]"
 notification_ig_no_longer_powerful_desc: "Die Interessengruppe „[SCOPE.GetRootScope.GetInterestGroup.GetName]“ war einst [concept_powerful|l] und ist jetzt [concept_influential|l]."
 notification_ig_no_longer_influential_tooltip: "#header $notification_ig_no_longer_influential_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_no_longer_influential_desc$"
 notification_ig_no_longer_influential_name: "IG „[SCOPE.GetRootScope.GetInterestGroup.GetName]“ ist nicht mehr [concept_influential|l]"
 notification_ig_no_longer_influential_desc: "Die Interessengruppe „[SCOPE.GetRootScope.GetInterestGroup.GetName]“ war einst [concept_influential|l] und ist jetzt [concept_marginalized|l]."
 notification_ig_trait_deactivated_tooltip: "#header $notification_ig_trait_deactivated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_trait_deactivated_desc$"
 notification_ig_trait_deactivated_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] – [SCOPE.sInterestGroupTrait('target').GetName(SCOPE.GetRootScope.GetInterestGroup.Self)] deaktiviert"
 notification_ig_trait_deactivated_desc: "Dies liegt an ihrer [concept_approval] von [SCOPE.GetRootScope.GetInterestGroup.GetApprovalRating] (#tooltippable #tooltip:[SCOPE.GetRootScope.GetInterestGroup.GetTooltipTag],IG_APPROVAL_BREAKDOWN [SCOPE.GetRootScope.GetInterestGroup.GetApprovalValue|=+]#!#!)\n\n#title Auswirkungen (nicht mehr aktiv)#!\n[SCOPE.sInterestGroupTrait('target').GetModifiersDesc(SCOPE.GetRootScope.GetInterestGroup.Self)]"
 notification_ig_movement_left_marginal_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] – [SCOPE.sPoliticalMovement('political_movement').GetName] (links gerichtet)"
 notification_ig_movement_left_marginal_desc: "Dies basiert darauf, dass die Interessengruppe randständig wird"
 notification_ig_movement_left_marginal_tooltip: "#header $notification_ig_movement_left_marginal_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_movement_left_marginal_desc$"
 notification_ig_movement_left_in_government_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] – [SCOPE.sPoliticalMovement('political_movement').GetName] (links gerichtet)"
 notification_ig_movement_left_in_government_desc: "Dies basiert darauf, dass die Interessengruppe Teil der Regierung geworden ist"
 notification_ig_movement_left_in_government_tooltip: "#header $notification_ig_movement_left_in_government_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_movement_left_in_government_desc$"
 notification_ig_movement_left_happy_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] – [SCOPE.sPoliticalMovement('political_movement').GetName] (links gerichtet)"
 notification_ig_movement_left_happy_desc: "Dies liegt an ihrer [concept_approval] von [SCOPE.GetRootScope.GetInterestGroup.GetApprovalRating] (#tooltippable #tooltip:[SCOPE.GetRootScope.GetInterestGroup.GetTooltipTag],IG_APPROVAL_BREAKDOWN [SCOPE.GetRootScope.GetInterestGroup.GetApprovalValue|=+]#!#!)"
 notification_ig_movement_left_happy_tooltip: "#header $notification_ig_movement_left_happy_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_movement_left_happy_desc$"
 notification_parties_activated_name: "Neu gegründete Parteien"
 notification_parties_activated_desc: "Neue Parteien in unserem Land: [SCOPE.GetRootScope.GetCountry.GetRecentPartiesDesc]"
 notification_parties_activated_tooltip: "#header $notification_parties_activated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_parties_activated_desc$"
 RECENT_PARTIES_ITEM: "[Party.GetName]"
 RECENT_PARTIES_DESC: "$PARTIES_LIST$"
 notification_ig_resigned_government_tooltip: "#header $notification_ig_resigned_government_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_resigned_government_desc$"
 notification_ig_resigned_government_name: "Rücktritt aus der [concept_government]"
 notification_ig_resigned_government_desc: "Die Interessengruppe „[SCOPE.GetRootScope.GetInterestGroup.GetName]“ ist aus der [concept_government] zurückgetreten, da ihre [concept_approval] „$ig_approval_angry$“ ist"
 notification_violate_sovereignty_third_party_joins_name: "[SCOPE.sC('third_party_country').GetAltName('NOM')|U] hilft [SCOPE.sC('target_country').GetAltName('AKK')]"
 notification_violate_sovereignty_third_party_joins_desc: "[SCOPE.sC('third_party_country').GetAltName('NOM')|U] kam [SCOPE.sC('target_country').GetAltName('DEM')] zu Hilfe, nachdem die Souveränität durch [SCOPE.sC('initiator').GetAltName('AKK')] verletzt wurde."
 SUBSIDIZED_YES: "$SUBSIDIZED_YES_HEADER$[ConcatIfNeitherEmpty('\n\n', Building.GetSubsidiesDesc)]\n\n[SelectLocalization(IsValid(Building.ToggleSubsidies), 'REVOKE_SUBSIDIES_POSSIBLE', GetDesc(Building.ToggleSubsidies))]"
 SUBSIDIZED_YES_HEADER: "#header [Concept('concept_subsidies', '$concept_subsidized$')|U]#!\n$TOOLTIP_DELIMITER$\nDieses [concept_building] wird subventioniert und kostet #N #bold @money! [Building.GetSubsidies|D]#!#! / Woche"
 REVOKE_SUBSIDIES_POSSIBLE: "#instruction Klicken, um die Subventionierung zu beenden#!"
 SUBSIDIES_MANDATED_BY_MODIFIER: "$MODIFIERNAME$#indent_newline:3 \n$DESCRIPTION$#!"
 SUBSIDIZED_NO: "$SUBSIDIZED_NO_HEADER$\n\n[SelectLocalization(IsValid( Building.ToggleSubsidies ), 'SUBSIDIZE_POSSIBLE', GetDesc(Building.ToggleSubsidies))]"
 SUBSIDIZED_NO_HEADER: "#header Nicht [Concept('concept_subsidies', '$concept_subsidized$')]#!\n$TOOLTIP_DELIMITER$\nDieses [concept_building] wird nicht subventioniert"
 SUBSIDIZE_POSSIBLE: "#instruction Klicken, um es zu subventionieren#!"
 NOT_PERMITTED_TO_SUBSIDIZE_BUILDING_GROUP: "Dieses [concept_building] zu subventionieren, ist in unserem Land nicht erlaubt. Dies wird in der Regel durch [Concept('concept_law', '$concept_laws$')] für die Wirtschaft bestimmt."
 CANNOT_SUBSIDIZE_GOVERNMENT_BUILDINGS: "[Concept('concept_government_building', '$concept_government_buildings$')] können nicht subventioniert werden."
 CANNOT_SUBSIDIZE_SUBSISTENCE_BUILDINGS: "[Concept('concept_subsistence_building', '$concept_subsistence_buildings$')] können nicht subventioniert werden."
 CANNOT_SUBSIDIZE_OWNS_OTHER_BUILDINGS: "[Concept('concept_building','$concept_buildings$')], die ihre [concept_revenue] von anderen $concept_buildings$n erhalten, können nicht subventioniert werden."
 SUBSIDIZED_ALL_YES: "Alle inländischen [Concept('concept_building','$concept_buildings$')] dieser [Concept('concept_building','$concept_building_industry$')] werden [Concept('concept_subsidies', 'subventioniert')].\n\n#instruction Klicken, um alle inländischen Subventionen zu entfernen#!"
 SUBSIDIZED_ALL_NO: "Keines der inländischen [Concept('concept_building','$concept_buildings$')] dieser [Concept('concept_building','$concept_building_industry$')] wird [Concept('concept_subsidies', 'subventioniert')].\n\n#instruction Klicken, um alle inländischen [Concept('concept_building','$concept_buildings$')] zu subventionieren#!"
 SUBSIDIZED_ALL_MIXED: "Einige der inländischen [Concept('concept_building','$concept_buildings$')] dieser [Concept('concept_building','$concept_building_industry$')] werden [Concept('concept_subsidies', 'subventioniert')].\n\n#instruction Klicken, um alle inländischen [Concept('concept_building','$concept_buildings$')] zu subventionieren#!"
 AUTO_EXPAND_ALL_YES: "#header Automatische Erweiterung#!\nAlle [Concept('concept_building','$concept_buildings$')] dieser [Concept('concept_building','$concept_building_industry$')] werden automatisch erweitert.\n\n#instruction Klicken, um alle automatischen Erweiterungen zu entfernen.#!"
 AUTO_EXPAND_ALL_NO: "#header Keine automatische Erweiterung#!\nKeines der [Concept('concept_building','$concept_buildings$')] dieser [Concept('concept_building','$concept_building_industry$')] wird automatisch erweitert.\n\n#instruction Klicken, um alle [Concept('concept_building','$concept_buildings$')] automatisch zu erweitern.#!"
 AUTO_EXPAND_ALL_MIXED: "#header Teilweise automatische Erweiterung#!\nEinige der [Concept('concept_building','$concept_buildings$')] dieser [Concept('concept_building','$concept_building_industry$')] werden automatisch erweitert.\n\n#instruction Klicken, um alle [Concept('concept_building','$concept_buildings$')] automatisch zu erweitern.#!"
 DISALLOWED_PRIVATIZATION_ERROR: "@red_cross! Alle [Concept('concept_privatize', '$concept_privatization$en')] sind [Building.GetState.GetCountry.GetAltName('IN')] #r verboten#!"
 FORCED_PRIVATIZATION_ERROR: "@red_cross! Alle „[BuildingType.GetName]“ werden zwangsweise [Concept('concept_privatize', '$concept_privatized$')|l]"
 REMOVE_PRIVATIZATION_EFFECT: "• Entfernt die exklusiven Baurechte für „[BuildingType.GetName]“ von [Concept('concept_pop', '$concept_pops$')], die entweder [Concept('concept_workforce', 'Beschäftigte')] des [Concept('concept_building', 'Gebäudes')] selbst oder die $concept_workforce$n von Herrenhäusern oder Bankenvierteln (vor allem $ARISTOCRATS_GC_LINK$ und $CAPITALISTS_GC_LINK$) sind"
 ADD_PRIVATIZATION_EFFECT: "• Gewährt exklusive Baurechte für „[BuildingType.GetName]“ den [Concept('concept_pop', '$concept_pops$')], die entweder [Concept('concept_workforce', 'Beschäftigte')] des [Concept('concept_building', 'Gebäudes')] selbst oder die $concept_workforce$n von Herrenhäusern oder Banlenvierteln (vor allem $ARISTOCRATS_GC_LINK$ und $CAPITALISTS_GC_LINK$) sind"
 REMOVE_COUNTRY_MONOPOLIZATION_EFFECT: "• Entfernt die [BuildingType.GetMonopolyCountryIn(GetPlayer.Self).GetAdjective|l]en exklusiven Baurechte für „[BuildingType.GetName]“"
 ADD_COUNTRY_MONOPOLIZATION_EFFECT: "• Gewährt [GetPlayer.GetAltName('DAT')] die exklusiven Baurechte für „[BuildingType.GetName]“, sodass [Concept('concept_building_level','$concept_building_levels$')] ausschließlich in [concept_nationally_owned] sein können"
 PRIVATIZATION_ALL_YES: "#header Entfernt alle [Concept('concept_privatize', '$concept_privatization$en')]#!\n$TOOLTIP_DELIMITER$\n$REMOVE_PRIVATIZATION_EFFECT$\n\n$PRIVATIZATION_ALL_ACTIVE$"
 PRIVATIZATION_ALL_NO: "#header Diese [Concept('concept_building','$concept_building_industry$')] [concept_privatize|l]#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(IsValid(BuildingBrowserBuildingTypeItem.ToggleAllPrivatization)), 'PRIVATIZATION_ALL_INVALID'))]\n$TOOLTIP_DELIMITER$\n$ADD_PRIVATIZATION_EFFECT$\n\nDerzeit werden keine „[BuildingType.GetName]“-[Concept('concept_building','$concept_buildings$')] [Concept('concept_privatize', '$concept_privatized$')|l]"
 PRIVATIZATION_ALL_MIXED_DEACTIVATE_ALL: "#header Entfernt alle [Concept('concept_privatize', '$concept_privatization$en')]#!\n$TOOLTIP_DELIMITER$\n$REMOVE_PRIVATIZATION_EFFECT$\n$PRIVATIZATION_MIXED_ACTIVE$"
 PRIVATIZATION_ALL_MIXED_ACTIVATE_ALL: "#header Diese [Concept('concept_building','$concept_building_industry$')] [concept_privatize|l]#!\n$TOOLTIP_DELIMITER$\n$ADD_PRIVATIZATION_EFFECT$\n\nEinige der „[BuildingType.GetName]“-[Concept('concept_building','$concept_buildings$')] sind bereits [Concept('concept_privatize', '$concept_privatized$')|l]"
 PRIVATIZATION_ALL_INVALID: "@red_cross! Es gibt keine „[BuildingType.GetName]“-[Concept('concept_building','$concept_buildings$')], die [Concept('concept_privatize', '$concept_privatized$')|l] werden können[ConcatIfNeitherEmpty('\n', GetDesc(BuildingBrowserBuildingTypeItem.ToggleAllPrivatization))]"
 PRIVATIZATION_ALL_ACTIVE: "Alle „[BuildingType.GetName]“-[Concept('concept_building','$concept_buildings$')] werden derzeit [Concept('concept_privatize', '$concept_privatized$')|l]"
 PRIVATIZATION_MIXED_ACTIVE: "Einige der „[BuildingType.GetName]“-[Concept('concept_building','$concept_buildings$')] werden bereits [Concept('concept_privatize', '$concept_privatized$')|l]"
 COUNTRY_MONOPOLIZE_TOOLTIP_DEACTIVATE: "#header [concept_country_monopoly] entfernen#![ConcatIfNeitherEmpty('\n', GetDesc(BuildingType.ToggleMonopoly))]\n$TOOLTIP_DELIMITER$\n$REMOVE_COUNTRY_MONOPOLIZATION_EFFECT$[ConcatIfNeitherEmpty('\n', BuildingType.GetToggleMonopolyEffectDesc)]\n\n$COUNTRY_MONOPOLIZE_TOOLTIP_ACTIVE$"
 COUNTRY_MONOPOLIZE_TOOLTIP_ACTIVATE: "#header Diese [Concept('concept_building','$concept_building_industry$')] [Concept('concept_country_monopoly', '$concept_country_monopolize$')|l]#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(BuildingBrowserBuildingTypeItem.HasAllForcedPrivatization, 'FORCED_PRIVATIZATION_ERROR'))][ConcatIfNeitherEmpty('\n', GetDesc(BuildingType.ToggleMonopoly))]\n$TOOLTIP_DELIMITER$\n$ADD_COUNTRY_MONOPOLIZATION_EFFECT$[ConcatIfNeitherEmpty('\n', BuildingType.GetToggleMonopolyEffectDesc)]"
 COUNTRY_MONOPOLIZE_TOOLTIP_ACTIVE: "Alle „[BuildingType.GetName]“-[Concept('concept_building','$concept_buildings$')] werden derzeit von [BuildingType.GetMonopolyCountryIn(GetPlayer.Self).GetName] [Concept('concept_country_monopoly', '$concept_country_monopolized_short$')|l]"
 COUNTRY_MONOPOLIZE_TOOLTIP_NONE_ACTIVE: "Keine „[BuildingType.GetName]“-[Concept('concept_building','$concept_buildings$')] werden derzeit [Concept('concept_monopoly', '$concept_monopolized$')|l] oder [Concept('concept_privatize', '$concept_privatized$')|l]"
 SUBSIDIES_TOOLTIP: "Erforderliche [concept_subsidies] beim Gehalt: #v @money!$VAL|-0$#!\n$TAB$Für Vollbeschäftigung erforderliche [Concept('concept_building_wage', '$concept_building_wages$')]: #v @money!$SUB_VAL|0$#!\n$TAB$$NAME$ Kapazitätskosten: #v @money!$REG_VAL|0+$#!\n\nWarenzufuhr-Subventionen erforderlich #v @money!$BALANCE_VAL|-0$#!"
 PRIVATIZE_OR_MONOPOLIZE_RIGHT_CLICK_MENU_TITLE: "„[BuildingType.GetName]“ [Concept('concept_country_monopoly', '$concept_country_monopolize_short$')] oder [concept_privatize]"
 BUILDING_RIGHT_CLICK_MENU_TITLE: "[Building.GetName]"
 BUILDING_ACTIONS_RIGHT_CLICK_MENU_TITLE: "Verfügbare Aktionen bei „[Building.GetName]“ in „[State.GetName]“"
 SHOW_BUILDING_ACTIONS: "Verfügbare Aktionen bei „[Building.GetName]“ in „[Building.GetState.GetName]“ anzeigen[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(ObjectsEqual(Building.GetState.GetOwner.Self, GetPlayer.Self)), 'BUILDING_NOT_OWNED_BY_PLAYER'))]"
 BUILDING_NOT_OWNED_BY_PLAYER: "@red_cross! Dieses [concept_building] liegt #b nicht#! [GetPlayer.GetAltName('IN')] $YOU$"
 BUILDING_RIGHT_CLICK_MENU_SUBTITLE: "in [State.GetName]"
 BUILDING_RIGHT_CLICK_MENU_EXPAND: "In [State.GetName] erweitern"
 BUILDING_RIGHT_CLICK_MENU_EXPAND_FOREIGN: "Erweitern in [State.GetCountry.GetFlagTextIcon] [State.GetName]"
 BUILDING_RIGHT_CLICK_MENU_DOWNSIZE: "Verkleinern"
 BUILDING_RIGHT_CLICK_MENU_CANCEL_CONSTRUCTION: "Erweiterung abbrechen"
 BUILDING_RIGHT_CLICK_MENU_SUBSIDIZE_ON: "Subventionieren"
 BUILDING_RIGHT_CLICK_MENU_SUBSIDIZE_OFF: "Subventionen widerrufen"
 BUILDING_RIGHT_CLICK_MENU_AUTOEXPAND_ON: "Auto. Vergrößerung"
 BUILDING_RIGHT_CLICK_MENU_AUTOEXPAND_OFF: "Auto. Vergrößerung abbrechen"
 CANCEL_CONSTRUCTION_TOOLTIP: "#header $BUILDING_RIGHT_CLICK_MENU_CANCEL_CONSTRUCTION$#!\nBricht die laufende Erweiterung dieses Gebäudes ab."
 CANCEL_CONSTRUCTION_MODIFIERS_INSTRUCTIONS: "#instruction Klicken, um 1 Stufe abzubrechen#!\n#instruction $SHORTCUT_KEY_MOD_shift$Klicken, um $SHIFT_NUM_LEVELS$ Stufen abzubrechen#!\n#instruction $SHORTCUT_KEY_MOD_ctrl$Klicken, um $CTRL_NUM_LEVELS$ Stufen#! abzubrechen"
 IG_RIGHT_CLICK_MENU_TITLE: "[InterestGroup.GetName]"
 IG_RIGHT_CLICK_MENU_ADD_GOV: "Der Regierung hinzufügen"
 IG_RIGHT_CLICK_MENU_REM_GOV: "Aus der Regierung entfernen"
 RIGHT_CLICK_MENU_SUPPRESS: "$SUPPRESS_SHORT$"
 RIGHT_CLICK_MENU_SUPPRESS_NOT: "$SUPPRESS_NOT_SHORT$"
 RIGHT_CLICK_MENU_BOLSTER: "$BOLSTER_SHORT$"
 RIGHT_CLICK_MENU_BOLSTER_NOT: "$BOLSTER_NOT_SHORT$"
 IG_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(InterestGroup.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 COUNTRY_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(Country.IsPinnedInOutliner, 'UNPIN_COUNTRY_IN_OUTLINER', 'PIN_COUNTRY_IN_OUTLINER')]"
 POLITICAL_MOVEMENT_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(PoliticalMovement.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 DIPLOMATIC_PLAY_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(DiplomaticPlay.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 CHARACTER_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(Character.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 STATE_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(State.IsPinnedInOutliner, 'UNPIN_STATE_IN_OUTLINER', 'PIN_STATE_IN_OUTLINER')]"
 MARKET_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(Market.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 GOODS_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(Goods.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 MILITARY_FORMATION_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(MilitaryFormation.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 PIN_IN_OUTLINER: "An der Pinnwand festmachen"
 UNPIN_IN_OUTLINER: "Von der Pinnwand lösen"
 PIN_COUNTRY_IN_OUTLINER: "„[Country.GetAltName('NOM')|U]“ an Pinnwand anheften"
 UNPIN_COUNTRY_IN_OUTLINER: "„[Country.GetAltName('NOM')|U]“ von Pinnwand lösen"
 PIN_STATE_IN_OUTLINER: "„[State.GetName|U]“ an Pinnwand anheften"
 UNPIN_STATE_IN_OUTLINER: "„[State.GetName|U]“ von Pinnwand lösen"
 SELECT_ORDER_RIGHT_CLICK_MENU_TITLE: "[concept_order] für [Character.GetFullName] auswählen"
 CHARACTER_RIGHT_CLICK_MENU_TITLE: "[Character.GetFullName]"
 CHARACTER_RIGHT_CLICK_MENU_SUBTITLE: "[Character.GetRoleTitle]"
 CHARACTER_RIGHT_CLICK_MENU_INFORMATION: "Information"
 CHARACTER_RIGHT_CLICK_MENU_PROMOTE_COMMANDER: "Befördern"
 CHARACTER_RIGHT_CLICK_MENU_SPLIT_INTO_OWN_FORMATION: "Formation aufspalten"
 DECREE_RIGHT_CLICK_MENU_TITLE: "„[Decree.GetName]“ in [Decree.GetState.GetName]"
 DECREE_RIGHT_CLICK_MENU_REMOVE: "Abbrechen"
 SET_DEFAULT_UNIT_TYPE_RIGHT_CLICK_MENU_TITLE: "Standard-[concept_combat_unit_group] festlegen"
 STATE_RIGHT_CLICK_MENU_DECLARE_INTEREST: "Interesse erklären"
 STATE_RIGHT_CLICK_MENU_REVOKE_INTEREST: "Interesse widerrufen"
 STATE_RIGHT_CLICK_MENU_REVOKE_INTEREST_TOOLTIP: "Unser Interesse in [State.GetStateRegion.GetStrategicRegion.GetName] widerrufen"
 STATE_RIGHT_CLICK_MENU_DECLARE_INTEREST_TOOLTIP: "Interesse an [State.GetStateRegion.GetStrategicRegion.GetName] erklären"
 DECREE_DUPLICATE_ROAD_MAINTENANCE: "Kein anderes Land führt den $decree_road_maintenance$ in der [concept_state_region] durch"
 MARKET_RIGHT_CLICK_MENU_TITLE: "[Market.GetName]"
 MARKET_RIGHT_CLICK_MENU_MANAGE_MARKET: "Markt verwalten"
 MANAGE_MARKET: "Verwalten"
 STATE_RIGHT_CLICK_MENU_TITLE: "[Country.GetAltName('NOM')|U]"
 STATE_RIGHT_CLICK_MENU_SUBTITLE: "[State.GetName]"
 STATE_RIGHT_CLICK_MENU_COUNTRY_TITLE: "#header [Country.GetAltNameNoFlag('NOM')|U]#! (Land)"
 STATE_RIGHT_CLICK_MENU_STATE_TITLE: "#header [State.GetName]#! (Staat)"
 MARKET_RIGHT_CLICK_MENU_MARKET_TITLE: "#header [State.GetMarket.GetName]#! (Markt)"
 STATE_RIGHT_CLICK_MENU_STRATEGIC_REGION_TITLE: "#header [State.GetStateRegion.GetStrategicRegion.GetName]#! ([concept_strategic_region])"
 STATE_RIGHT_CLICK_MENU_SUBJECT_ACTIONS: "[Concept('concept_subject_action', '$concept_subject_actions$')]"
 STATE_RIGHT_CLICK_MENU_SUBJECT_ACTIONS_TOOLTIP: "Mögliche [Concept('concept_subject_action', '$concept_subject_actions$')] anzeigen"
 STATE_RIGHT_CLICK_MENU_OVERLORD_ACTIONS: "[Concept('concept_overlord_action', '$concept_overlord_actions$')]"
 STATE_RIGHT_CLICK_MENU_OVERLORD_ACTIONS_TOOLTIP: "Mögliche [Concept('concept_overlord_action', '$concept_overlord_actions$')] anzeigen"
 STATE_RIGHT_CLICK_MENU_BLOC_MEMBER_ACTIONS: "[Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')]"
 STATE_RIGHT_CLICK_MENU_BLOC_MEMBER_ACTIONS_TOOLTIP: "Mögliche [Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')] anzeigen"
 STATE_RIGHT_CLICK_MENU_DIPLOMACY: "Diplomatie öffnen"
 STATE_RIGHT_CLICK_MENU_COUNTRY_INFORMATION: "Information"
 STATE_RIGHT_CLICK_MENU_COLONIZE: "Kolonisieren"
 STATE_RIGHT_CLICK_MENU_CREATE_MARKET: "Markt gründen"
 STATE_RIGHT_CLICK_MENU_INCORPORATE: "$INCORPORATE$"
 STATE_RIGHT_CLICK_MENU_CANCEL_INCORPORATION: "Inkorporation abbrechen ([State.GetIncorporationProgress|v%0] Fortschritt)"
 SUBJECT_ACTIONS_BUTTON_TOOLTIP: "#header [Concept('concept_subject_action', '$concept_subject_actions$')] mit [Country.GetAltName('DAT')] anzeigen#!\n#v [GetDataModelSize(Country.GetAvailableSubjectDiploActions)|+]#! Aktionen verfügbar"
 OVERLORD_ACTIONS_BUTTON_TOOLTIP: "#header [Concept('concept_overlord_action', '$concept_overlord_actions$')] mit [Country.GetAltName('DAT')] anzeigen#!\n#v [GetDataModelSize(Country.GetAvailableOverlordDiploActions)|+]#! Aktionen verfügbar"
 BLOC_ACTIONS_BUTTON_TOOLTIP: "#header [Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')] [Country.GetAltName('IN')] anzeigen#!\n#v [GetDataModelSize(Country.GetAvailablePowerBlocMemberDiploActions)|+]#! Aktion(en) verfügbar"
 BLOC_LEADER_ACTIONS_BUTTON_TOOLTIP: "#header [Concept('concept_bloc_leader_action', '$concept_bloc_leader_actions$')] [Country.GetAltName('IN')] anzeigen#!\n#v [GetDataModelSize(Country.GetAvailablePowerBlocLeaderDiploActions)|+]#! Aktion(en) verfügbar"
 IMPOSE_LAWS_IN_SUBJECT: "[Country.GetAltName('DAT')|U] „[Concept('concept_law', '$concept_laws$')]“ auferlegen"
 SUBJECT_COUNTRY_NAME_HEADER_TOOLTIP: "Nach [Concept('concept_country', 'Landes')]-Namen sortieren"
 SUBJECT_LIBERTY_DESIRE_HEADER_TOOLTIP: "Nach [concept_liberty_desire] sortieren"
 SUBJECT_RANK_HEADER_TOOLTIP: "Nach [concept_rank] sortieren"
 BY_SUBJECT_TYPE: "Nach Klientelart sortieren"
 POWER_BLOC_COUNTRY_NAME_HEADER_TOOLTIP: "Nach [Concept('concept_country', 'Landesnamen')] sortieren"
 POWER_BLOC_LIBERTY_DESIRE_HEADER_TOOLTIP: "Nach [concept_power_bloc_leverage] sortieren"
 POWER_BLOC_RANK_HEADER_TOOLTIP: "Nach [concept_rank] sortieren"
 POTENTIAL_SUBJECT_ACTIONS: "Mögliche [Concept('concept_subject_action', '$concept_subject_actions$')]"
 POTENTIAL_SUBJECT_ACTIONS_TOOLTIP: "Mögliche [Concept('concept_subject_action', '$concept_subject_actions$')] anzeigen"
 POTENTIAL_OVERLORD_ACTIONS: "Mögliche [Concept('concept_overlord_action', '$concept_overlord_actions$')]"
 POTENTIAL_OVERLORD_ACTIONS_TOOLTIP: "Mögliche [Concept('concept_overlord_action', '$concept_overlord_actions$')] anzeigen"
 POTENTIAL_BLOC_ACTIONS: "Mögliche [Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')]"
 POTENTIAL_BLOC_ACTIONS_TOOLTIP: "Mögliche [Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')] anzeigen"
 POTENTIAL_BLOC_LEADER_ACTIONS: "Mögliche [Concept('concept_bloc_leader_action', '$concept_bloc_leader_actions$')]"
 POTENTIAL_BLOC_LEADER_ACTIONS_TOOLTIP: "Mögliche [Concept('concept_bloc_leader_action', '$concept_bloc_leader_actions$')] anzeigen"
 POTENTIAL_DIPLOMATIC_ACTIONS: "Mögliche [Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')]"
 POTENTIAL_DIPLOMATIC_ACTIONS_TOOLTIP: "Mögliche [Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')] anzeigen"
 POTENTIAL_DIPLOMATIC_DEMANDS: "Mögliche [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')]"
 POTENTIAL_DIPLOMATIC_DEMANDS_TOOLTIP: "Mögliche [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')] anzeigen"
 POTENTIAL_DIPLOMATIC_DEMANDS_TARGETING_STATES: "Mögliche [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')], die auf [Concept('concept_state', '$concept_states$')] [Country.GetAltName('IN')] abzielen"
 POTENTIAL_DIPLOMATIC_DEMANDS_TARGETING_STATES_TOOLTIP: "Mögliche [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')] anzeigen, die auf [Concept('concept_state', '$concept_states$')] [Country.GetAltName('IN')] abzielen"
 POTENTIAL_DIPLOMATIC_DEMANDS_TARGETING_SPECIFIC_STATE_TOOLTIP: "Mögliche [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')] anzeigen, die auf „[State.GetName]“ abzielen"
 AVAILABLE_SUBJECT_ACTIONS: "Verfügbare [Concept('concept_subject_action', '$concept_subject_actions$')]"
 AVAILABLE_SUBJECT_ACTIONS_TOOLTIP: "Verfügbare [Concept('concept_subject_action', '$concept_subject_actions$')] anzeigen"
 AVAILABLE_OVERLORD_ACTIONS: "Verfügbare [Concept('concept_overlord_action', '$concept_overlord_actions$')]"
 AVAILABLE_OVERLORD_ACTIONS_TOOLTIP: "Verfügbare [Concept('concept_overlord_action', '$concept_overlord_actions$')] anzeigen"
 AVAILABLE_BLOC_ACTIONS: "Verfügbare [Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')]"
 AVAILABLE_BLOC_ACTIONS_TOOLTIP: "Verfügbare [Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')] anzeigen"
 AVAILABLE_BLOC_LEADER_ACTIONS: "Verfügbare [Concept('concept_bloc_leader_action', '$concept_bloc_leader_actions$')]"
 AVAILABLE_BLOC_LEADER_ACTIONS_TOOLTIP: "Verfügbare [Concept('concept_bloc_leader_action', '$concept_bloc_leader_actions$')] anzeigen"
 SUBJECT_ACTIONS: "$concept_subject_actions$"
 OVERLORD_ACTIONS: "$concept_overlord_actions$"
 BLOC_MEMBER_ACTIONS: "$concept_bloc_member_actions$"
 BLOC_LEADER_ACTIONS: "$concept_bloc_leader_actions$"
 DIPLOMATIC_ACTIONS_TEXT: "$concept_diplomatic_actions$"
 DIPLOMATIC_DEMANDS_TEXT: "$concept_diplomatic_demands$"
 DIPLOMATIC_DEMANDS_TARGETING_STATES_TEXT: "$concept_diplomatic_demands$, die auf $concept_states$ abzielen"
 DIPLOMATIC_DEMANDS_IN_STATE_TEXT: "$concept_diplomatic_demands$, die auf „[State.GetName]“ abzielen"
 NO_DIPLO_DEMANDS: "Keine möglichen [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')]"
 NO_STATES_IN_COUNTRY: "Keine [Concept('concept_state', '$concept_states$')] [Country.GetAltName('IN')]"
 YOUR_LIBERTY_DESIRE: "Unser [concept_liberty_desire] als [GetPlayer.GetSubjectTypeName]"
 YOUR_OVERLORD: "Euer [concept_overlord]"
 COUNTRY_OVERLORD: "[concept_overlord] [COUNTRY.GetAltName('VON')]"
 COUNTRY_DIPLOMACY_TAB_LIBERTY_DESIRE: "[concept_liberty_desire] [COUNTRY.GetAltName('VON')] als [GetPlayer.GetSubjectTypeName]"
 DIPLOMATIC_ACTIONS_CONCEPT: "[Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')]"
 DIPLOMATIC_DEMANDS_CONCEPT: "[Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')]"
 COUNTRY_RIGHT_CLICK_MENU_DIPLOMATIC_ACTIONS_TOOLTIP: "Mögliche [Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')] [COUNTRY.GetAltName('IN')] anzeigen"
 COUNTRY_RIGHT_CLICK_MENU_DIPLOMATIC_DEMANDS_TOOLTIP: "Mögliche [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')] [COUNTRY.GetAltName('IN')] anzeigen"
 COUNTRY_RIGHT_CLICK_MENU_STATE_DIPLOMATIC_DEMANDS_TOOLTIP: "[Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')] in „[State.GetName]“ anzeigen"
 COUNTRY_RIGHT_CLICK_MENU_ACTIVE_TREATIES_TOOLTIP: "Aktive [Concept('concept_treaty', '$concept_treaties$')] mit [Country.GetAltName('DAT')]"
 ACTIVE_TREATIES: "Eure [Concept('concept_treaty', '$concept_treaties$')] mit [Country.GetAltName('DAT')]"
 ACTIVE_TREATIES_OUTLINER_HEADER: "#v $concept_treaties$#!"
 DECREES_CONCEPT: "[Concept('concept_decree','$concept_decrees$')]"
 DECREES_IN_STATE: "[Concept('concept_decree','$concept_decrees$')] in „[State.GetName]“ anzeigen"
 COMPANY_CHARTERS_TITLE: "[Concept('concept_company_charter','$concept_company_charters$')]"
 BUILD_URBAN_BUILDINGS: "Stadtgebäude errichten"
 ADD_CONSUMPTION_TAX: "Verbrauchssteuer einführen"
 ADD_CONSUMPTION_TAX_ENTRY: "[Goods.GetNameNoFormatting]"
 ADD_CONSUMPTION_TAX_ENTRY_COST: "@money!#v [Goods.CalcPotentialConsumptionTaxAmount(GetPlayer)|+=D]#! (@aut! [Multiply_CFixedPoint(Goods.CalcConsumptionTaxAuthorityCost(GetPlayer),'(CFixedPoint)-1')|0+])"
 BUDGET_CONSUMPTION_TAX_TOOLTIP: "#header [concept_consumption_tax] auf „[Goods.GetName]“#!\n@aut!\nDerzeitige Kosten: #v [Multiply_CFixedPoint(Goods.CalcConsumptionTaxAuthorityCost(GetPlayer),'(CFixedPoint)-1')|0+]\nDerzeitige Einnahmen: #v [Goods.CalcConsumptionTaxAmount(GetPlayer)|+K]#!"
 GOODS_ADD_REMOVE_CONSUMPTION_TAX_TOOLTIP: "#header [concept_consumption_tax] auf [Goods.GetName] [SelectLocalization(GreaterThan_CFixedPoint(Goods.CalcConsumptionTaxAmount(GetPlayer), '(CFixedPoint)0'), 'entfernen', 'hinzufügen')]#!\n$TOOLTIP_DELIMITER$\nDerzeitige Einnahmen: #v [Goods.CalcConsumptionTaxAmount(GetPlayer)|+K]#!"
 COUNTRY_RIGHT_CLICK_MENU_OBSERVE: "[SelectLocalization(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, Country.Self), 'COUNTRY_RIGHT_CLICK_MENU_STOP_OBSERVING', 'COUNTRY_RIGHT_CLICK_MENU_START_OBSERVING')]"
 COUNTRY_RIGHT_CLICK_MENU_START_OBSERVING: "[Country.GetAltName('AKK')|U] beobachten"
 COUNTRY_RIGHT_CLICK_MENU_STOP_OBSERVING: "[Country.GetAltName('AKK')|U] nicht mehr beobachten"
 COUNTRY_RIGHT_CLICK_MENU_OBSERVE_TOOLTIP: "[SelectLocalization(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, Country.Self), 'COUNTRY_RIGHT_CLICK_MENU_STOP_OBSERVE_TOOLTIP', 'COUNTRY_RIGHT_CLICK_MENU_START_OBSERVE_TOOLTIP')]"
 COUNTRY_RIGHT_CLICK_MENU_START_OBSERVE_TOOLTIP: "Beginnt, das Land zu beobachten"
 COUNTRY_RIGHT_CLICK_MENU_STOP_OBSERVE_TOOLTIP: "Hört auf, das Land zu beobachten"
 OBSERVER_NO_COUNTRY_SELECTED: "\n$TOOLTIP_DELIMITER$\n@red_cross! Kein Land ausgewählt"
 OBSERVER_NO_COUNTRY_SELECTED_TOOLTIP: "#header Wir sind im Beobachtermodus!#!\n$TOOLTIP_DELIMITER$\n@red_cross! Kein zu beobachtendes Land ausgewählt"
 OVERLORD_TYPE: "Suzeränart"
 OVERLORD_TYPE_VALUE: "[SelectLocalization(SubjectType.AcceptsAnyOverlordType, 'OVERLORD_TYPE_ANY', 'RECOGNIZED_OR_UNRECOGNIZED')]"
 OVERLORD_TYPE_ANY: "Beliebig"
 RECOGNIZED_OR_UNRECOGNIZED: "[SelectLocalization(SubjectType.AcceptsOnlyRecognizedOverlordType, 'RECOGNIZED_CONCEPT', 'UNRECOGNIZED_CONCEPT')]"
 RECOGNIZED_CONCEPT: "[Concept('concept_recognized_power', '$concept_recognized_power_short$')]"
 UNRECOGNIZED_CONCEPT: "[Concept('concept_unrecognized_power','$concept_unrecognized_power_short$')]"
 SUBJECT_TYPE_AUTONOMOUS_HEADER_TOOLTIP: "#header Autonom#!\nIst die [concept_subject_type] autonom, kann dieses [concept_subject] [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$n')] selbständig beitreten oder welche beginnen"
 SUBJECT_TYPE_DECREASED_AUTONOMY_HEADER_TOOLTIP: "#header Verringerte Autonomie#!\nWelche [concept_subject_type] das [concept_subject] werden würde, wenn die [concept_autonomy] dieser $concept_subject_type$ #b verringert#! wird. Falls die Autonomie bereits auf dem niedrigsten Stand ist, würde das $concept_subject$ annektiert werden."
 SUBJECT_TYPE_INCREASED_AUTONOMY_HEADER_TOOLTIP: "#header Erhöhte Autonomie#!\nWelche [concept_subject_type] das [concept_subject] werden würde, wenn die [concept_autonomy] dieser $concept_subject_type$ #b erhöht#! wird. Falls die Autonomie bereits auf dem höchsten Stand ist, würde das $concept_subject$ unabhängig werden."
 SUBJECT_TYPE_UNIFICATION_HEADER_TOOLTIP: "#header $concept_unification$#!\nOb die [concept_subject_type] ihren [concept_overlord] bei einer [concept_nation_formation] oder [concept_unification] unterstützen wird"
 SUBJECT_TYPE_INCOME_TRANSFER_HEADER_TOOLTIP: "#header Einkommensübertragung an [concept_overlord]#!\nDie meisten [Concept('concept_subject_type', '$concept_subject_types$')] zahlen einen Teil ihrer [concept_taxes], ihres [Concept('concept_budget_minting', 'gedruckten Geldes')] und anderer [Concept('concept_prosperity', 'Regierungs')]-Einkommen an ihren $concept_overlord$, aber #b nicht#! Einkommen aus [concept_tariffs], [concept_investment_pool]-Übertragungen oder einem [concept_diplomatic_pact]."
 SUBJECT_TYPE_CONVOY_CONTRIBUTION_HEADER_TOOLTIP: "#header @convoys! [Concept('concept_convoys', '$concept_convoy$')]-Beitrag zum [concept_overlord]#!\n[Concept('concept_subject', '$concept_subjects$')] geben einen Prozentsatz ihrer @convoys! $concept_convoys$ an ihren $concept_overlord$ ab, da dieser ihr [concept_market]-Führer ist."
 SUBJECT_TYPE_OVERLORD_TYPE_HEADER_TOOLTIP: "#header [concept_overlord]-Art#!\nManche [Concept('concept_subject_type', '$concept_subject_types$')] sind nur möglich bei [Concept('concept_recognized_power','$concept_recognized_power_short$')]-$concept_overlords$n, wohingegen andere nur bei [Concept('concept_unrecognized_power','$concept_unrecognized_power_short$')]-$concept_overlords$n möglich sind. Einige sind sowohl bei $concept_recognized_power_short$- als auch für $concept_unrecognized_power_short$-$concept_overlords$ möglich."
 SUBJECT_TYPE_AUTONOMOUS_TOOLTIP: "@green_checkmark! #header Autonom#!\n[SubjectType.GetName] kann selbständig [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')] beginnen und welchen beitreten"
 SUBJECT_TYPE_AUTONOMOUS_NOT_TOOLTIP: "@red_cross! #header Nicht Autonom#!\n[SubjectType.GetName] kann #b nicht#! selbständig [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')] beginnen und welchen beitreten"
 SUBJECT_TYPE_ANNEX_TOOLTIP: "#header Annektierung#!\nVerringerung der [concept_autonomy] bei „[SubjectType.GetName]“ würde zur #b Annektierung#! führen"
 SUBJECT_TYPE_INDEPENDENCE_TOOLTIP: "#header Unabhängigkeit#!\nErhöhung der [concept_autonomy] bei „[SubjectType.GetName]“ würde zur #b Unabhängigkeit#! führen"
 SUBJECT_TYPE_DECREASED_AUTONOMY_TOOLTIP: "#header [SubjectType.GetLowerAutonomySubjectType(GetPlayer.Self).GetName|U]#!\nVerringerung der [concept_autonomy] von „[SubjectType.GetName]“ würde [concept_country] stattdessen zu „[SubjectType.GetLowerAutonomySubjectType(GetPlayer.Self).GetName]“ machen"
 SUBJECT_TYPE_INCREASED_AUTONOMY_TOOLTIP: "#header [SubjectType.GetHigherAutonomySubjectType(GetPlayer.Self).GetName|U]#!\nErhöhung der [concept_autonomy] von „[SubjectType.GetName]“ würde [concept_country] stattdessen zu „[SubjectType.GetHigherAutonomySubjectType(GetPlayer.Self).GetName]“ machen"
 SUBJECT_TYPE_UNIFIES_TOOLTIP: "@green_checkmark! [SubjectType.GetName] wird [concept_overlord] während einer [concept_nation_formation] oder [concept_unification] unterstützen. Schlussendlich wird [concept_subject] annektiert werden."
 SUBJECT_TYPE_UNIFIES_NOT_TOOLTIP: "@red_cross! [SubjectType.GetName] wird [concept_overlord] während einer [concept_nation_formation] oder [concept_unification] #b nicht#! unterstützen. Schlussendlich wird [concept_subject] #b nicht#! annektiert werden."
 SUBJECT_TYPE_INCOME_TRANSFER_TOOLTIP: "#header Einkommensübertragung an [concept_overlord]#!\n@money![SubjectType.GetIncomeTransfer|v%0] vom Einkommen bei [SubjectType.GetName]\n$TOOLTIP_DELIMITER$\n[SubjectType.GetName] zahlt @money![SubjectType.GetIncomeTransfer|v%0] von [concept_taxes], [Concept('concept_budget_minting', 'gedrucktem Geld')] und anderen [Concept('concept_prosperity', 'Regierungs')]-Einkommen an den eigenen $concept_overlord$, aber #b nicht#! Einkommen aus [concept_tariffs], [concept_investment_pool]-Übertragungen oder einem [concept_diplomatic_pact]."
 SUBJECT_TYPE_CONVOY_CONTRIBUTION_TOOLTIP: "#header  [Concept('concept_convoys', '$concept_convoy$')]-Beitrag zum [concept_overlord]#!\n@convoys![Nbsp][SubjectType.GetDiplomaticActionType.GetSecondModifier.GetValueFor('country_convoy_contribution_to_market_owner_add')|v%0] der $concept_convoys$ von [SubjectType.GetName]\n$TOOLTIP_DELIMITER$\n[SubjectType.GetName] tritt @convoys![Nbsp][SubjectType.GetDiplomaticActionType.GetSecondModifier.GetValueFor('country_convoy_contribution_to_market_owner_add')|v%0] der eigenen $concept_convoys$ an den $concept_overlord$ ab, da dieser der [concept_market]-Führer ist."
 SUBJECT_OR_OVERLORD_ACTIONS_RIGHT_CLICK_MENU_TITLE: "[SelectLocalization(Country.IsSubjectOf(GetPlayer.Self), 'OVERLORD_ACTIONS_RIGHT_CLICK_MENU_TITLE', 'SUBJECT_ACTIONS_RIGHT_CLICK_MENU_TITLE')]"
 SUBJECT_ACTIONS_RIGHT_CLICK_MENU_TITLE: "[Concept('concept_subject_action', '$concept_subject_actions$')] mit [Country.GetAltName('DAT')]"
 OVERLORD_ACTIONS_RIGHT_CLICK_MENU_TITLE: "[Concept('concept_overlord_action', '$concept_overlord_actions$')] mit [Country.GetAltName('DAT')]"
 BLOC_ACTIONS_RIGHT_CLICK_MENU_TITLE: "[Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')] mit [Country.GetAltName('DAT')]"
 BLOC_LEADER_ACTIONS_RIGHT_CLICK_MENU_TITLE: "[Concept('concept_bloc_leader_action', '$concept_bloc_leader_actions$')] [Country.GetAltName('IN')]"
 NO_AVAILABLE_ACTIONS: "Keine Aktionen verfügbar"
 NO_AVAILABLE_STATES: "Keine [Concept('concept_state', '$concept_states$')] verfügbar"
 PLAYER_CAN_NOT_DECREASE_OWN_AUTONOMY_TOOLTIP: "#header [concept_autonomy] verringern zu „[SubjectType.GetLowerAutonomySubjectType(GetPlayer.Self).GetName]“#!\n@red_cross! Kann nur vom [concept_overlord] durchgeführt werden"
 SUBJECT_CAN_NOT_DECREASE_OWN_AUTONOMY_TOOLTIP: "#header [concept_autonomy] verringern zu „[SubjectType.GetLowerAutonomySubjectType(Country.Self).GetName]“#!\n@red_cross! Kann nur vom [concept_overlord] durchgeführt werden"
 SUBJECT_CAN_NOT_DECREASE_OWN_AUTONOMY_ANNEX_TOOLTIP: "#header [concept_autonomy] verringern zur Annektierung#!\n@red_cross! Kann nur vom [concept_overlord] durchgeführt werden"
 OTHER_COUNTRY_CAN_NOT_INCREASE_AUTONOMY_SUBJECT_TO_INDEPENDENCE_TOOLTIP: "#header [concept_autonomy] erhöhen auf Unabhängigkeit#!\n@red_cross! Kann vom [concept_overlord] oder dem [concept_subject] durchgeführt werden"
 OTHER_COUNTRY_CAN_NOT_INCREASE_SUBJECT_AUTONOMY_TOOLTIP: "#header [concept_autonomy] erhöhen auf „[SubjectType.GetHigherAutonomySubjectType(Country.Self).GetName]“#!\n@red_cross! Kann vom [concept_overlord] oder dem [concept_subject] durchgeführt werden"
 OVERLORD: "$concept_overlord$"
 ACTIVE_PACTS: "[Concept('concept_diplomatic_pact', '$concept_diplomatic_pacts_short$')]"
 GOODS_RIGHT_CLICK_MENU_TITLE: "[Goods.GetTextIcon][Nbsp][Goods.GetName]"
 GOODS_IN_MARKET_RIGHT_CLICK_MENU_TITLE: "[Goods.GetTextIcon][Nbsp][Goods.GetName] im Markt „[Goods.GetMarket.GetName]“"
 MAP_INTERACTION_SHOW_SUPPLY_AREAS_DESC: "Klickt auf einen Staat, um seine Versorgungsregion anzuzeigen"
 MAP_INTERACTION_SHOW_SUPPLY_AREAS_PERFORMED: "Die Versorgungsregion wird angezeigt"
 MAP_INTERACTION_SHOW_SUPPLY_AREAS_TOOLTIP_HEADER: "Diese Versorgungsregion besteht aus den folgenden Schauplätzen für [COUNTRY.GetAltName('AKK')]:"
 MAP_INTERACTION_SHOW_SUPPLY_AREAS_TOOLTIP_ITEM: "#variable [THEATER.GetName]#! (#variable [THEATER.GetOwner.GetAltName('NOM')]#!)"
 MAP_INTERACTION_SHOW_SUPPLY_AREAS_TOOLTIP_NONE: "[COUNTRY.GetAltName('NOM')|U] hat hier keine Versorgungsregion"
 MAP_LIST_PANEL_TITLE: "[GetSelectedMapModeName][SelectLocalization(MapListPanelManager.HasCurrentInteraction, '', '-Hauptbuch')]"
 MAP_LIST_PANEL_BUTTON_SHOW_MAP_LIST_PANEL: "#v [GetSelectedMapModeName]#! einblenden\n#v Informationspanel#! ausblenden"
 MAP_LIST_PANEL_BUTTON_SHOW_INFORMATION_PANEL: "#v Informationspanel#! einblenden\n#v [GetSelectedMapModeName]#! ausblenden"
 MAP_MODE_ATTITUDE: "[concept_attitude] auf der Karte zeigen"
 MAP_MODE_RELATIONS: "[concept_relations] auf der Karte zeigen"
 MAP_MODE_INFAMY: "[concept_infamy] auf der Karte zeigen"
 MAP_MODE_POTENTIALS: "[Concept('concept_resource_potential', '$concept_resource_potentials_short$')] auf der Karte zeigen"
 MAP_MODE_PRODUCTION: "[concept_good_production] auf der Karte zeigen"
 MAP_MODE_CONSUMPTION: "[concept_good_consumption] auf der Karte zeigen"
 MAP_MODE_LOCAL_PRICES: "[Concept('concept_local_price','$concept_local_prices$')] auf Karte anzeigen"
 PANEL_MAP_MODES_TITLE: "Relevante Kartenmodi ([MapModeList.GetContextName])"
 SORT_BY_RANK: "Nach [concept_rank] sortieren"
 SORT_BY_MARKET_GOODS: "Nach [Concept('concept_good', '$concept_goods$')] sortieren"
 SORT_BY_IMPORTS: "Nach Importen sortieren"
 SORT_BY_EXPORTS: "Nach Exporten sortieren"
 SORT_BY_SELL_ORDERS: "Nach [Concept('concept_sell_orders', 'Verkaufsaufträgen')] sortieren"
 SORT_BY_BUY_ORDERS: "Nach [Concept('concept_buy_orders', 'Kaufaufträgen')] sortieren"
 SORT_BY_PRODUCTION: "Nach [concept_good_production] sortieren"
 SORT_BY_CONSUMPTION: "Nach [concept_good_consumption] sortieren"
 SORT_BY_BALANCE_TOOLTIP: "Nach Saldo sortieren. Die Differenz, die man erhält, wenn man die [concept_buy_orders] von den [Concept('concept_sell_orders', 'Verkaufsaufträgen')] abzieht."
 SORT_BY_COUNTRY: "Nach [Concept('concept_country', 'Landes')]-Namen sortieren"
 SORT_BY_MAREKT_PRICE: "Nach [concept_market_price] sortieren"
 SORT_BY_AMOUNT_CONSUMED: "Nach der Menge an [Concept('concept_good_consumption', '$concept_good_consumed$en')|l] [Concept('concept_good', '$concept_goods$')] sortieren"
 SORT_BY_BUDGET_EXPENDITURE: "Nach dem Anteil am Etat sortieren, den [Concept('concept_pop', 'Pops')] für die [concept_good] ausgeben"
 SORT_BY_BUILDING: "Nach [concept_building] sortieren"
 SORT_BY_STATE: "Nach [concept_state] sortieren"
 SORT_BY_STATE_TRAITS: "Nach #b Staatseigenschaften#! sortieren"
 SORT_BY_OWNERSHIP: "Nach #b Besitz#! sortieren"
 SORT_BY_OWNED_LEVELS: "Nach Zahl der besessenen [Concept('concept_building_level', '$concept_building_levels_short$')] sortieren"
 SORT_BY_PRODUCTION_METHODS: "Nach [Concept('concept_production_method', '$concept_production_methods$')] sortieren"
 SORT_BY_NUMBER_OF_EMPLOYED: "Nach Zahl der [Concept('concept_employment' ,'Beschäftigten')] sortieren"
 SORT_BY_NUMBER_OF_EMPLOYED_PERCENT: "Nach Prozentsatz der [concept_employment] sortieren"
 SORT_BY_CASH_RESERVES: "Nach [concept_cash_reserves] sortieren"
 SORT_BY_CASH_RESERVES_PERCENT: "Nach Prozentsatz der [concept_cash_reserves] sortieren"
 SORT_BY_BUILDING_PRODUCTIVITY: "Nach [concept_productivity] sortieren"
 SORT_BY_BUILDING_INTERACTIONS: "Nach #b Verfügbaren Interaktionen#! sortieren"
 SORT_BY_POPULATION: "Nach [Concept('concept_pop','$concept_population$szahl')] sortieren"
 SORT_BY_POP_TYPE: "Nach [concept_profession] sortieren"
 SORT_BY_ACCEPTANCE: "Nach [concept_acceptance_status] sortieren"
 SORT_BY_CULTURE: "Nach [concept_culture] sortieren"
 SORT_BY_RELIGION: "Nach [concept_religion] sortieren"
 SORT_BY_RADICALS: "Nach [Concept('concept_radical','$concept_radicals$')] sortieren"
 SORT_BY_LOYALISTS: "Nach [Concept('concept_loyalist','$concept_loyalists$')] sortieren"
 SORT_BY_SOL: "Nach [concept_sol] sortieren"
 SORT_BY_POLITICAL_STRENGTH: "Nach [Concept('concept_political_strength', 'Politischer Stärke')] sortieren"
 SORT_BY_INTEREST_GROUP: "Nach [concept_interest_group] sortieren"
 SORT_BY_LITERACY: "Nach [concept_literacy] sortieren"
 SORT_BY_JOB_SATISFACTION: "Nach [concept_job_satisfaction] sortieren"
 SORT_BY_NEEDS: "Nach [concept_pop_needs] sortieren"
 SORT_BY_NAME: "Nach Name sortieren"
 SORT_BY_BUILDING_NAME: "Nach [concept_building]-Name sortieren"
 SORT_BY_BUILDING_SIZE: "Nach [concept_building]-Größe sortieren ([Concept('concept_building_level','$concept_building_levels$')])"
 SORT_BY_BUILDING_TYPE: "Nach Gebäude-#b Art#! sortieren"
 SORT_BY_INTENSITY: "Nach [concept_harvest_condition_intensity] sortieren"
 SORT_BY_DURATION: "Nach verbleibender Zeit sortieren"
 SORT_BY_AFFECTED_STATES: "Nach Zahl der betroffenen [Concept('concept_state','$concept_states$')] sortieren"
 SORT_BY_FAMINE: "Nach [Concept('concept_starvation','$concept_starving$er')|l] [Concept('concept_pop','Bevölkerung')] in [Concept('concept_state','$concept_states$')] mit einer laufenden [concept_famine] sortieren"
 SORT_BY_MILD_STARVATION: "Nach [Concept('concept_pop','$concept_population$')] mit [Concept('concept_starvation','leichtem Hunger')] sortieren"
 SORT_BY_SEVERE_STARVATION: "Nach [Concept('concept_pop','$concept_population$')] mit [Concept('concept_starvation','großem Hunger')] sortieren"
 MAP_MODE_ATTITUDE_COUNTRY: "[concept_attitude] zu [Country.GetAltName('DAT')] auf der Karte zeigen"
 MAP_MODE_RELATIONS_COUNTRY: "[concept_relations] zu [Country.GetAltName('DAT')] auf der Karte zeigen"
 DEFAULT_MAP_LIST_PANEL_STATUS_HEADER: "Status"
 DEFAULT_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept Die Verfügbarkeit dieser Interaktion für jeden Eintrag.\n\n@map_list_plus!: Wir können das auswählen.\n@map_list_plus_and_checkmark!: Wir können das auswählen und wir nutzen das bereits hier.\n@map_list_checkmark!: Wir nutzen das bereits hier und können es abwählen.\n@map_list_lock!: Wir nutzen das bereits hier, aber wir können es NICHT abwählen.\n@map_list_cross!: Wir können das NICHT auswählen.#!"
 DEFAULT_MAP_LIST_PANEL_TITLE_HEADER: "Titel"
 DEFAULT_MAP_LIST_PANEL_TITLE_HEADER_TOOLTIP: "#header Titel#!\n$TOOLTIP_DELIMITER$\n#concept Dies ist der Titel dieser Option.#!"
 BUILDING_MAP_LIST_PANEL_AVAILABLE_LABOR_HEADER: "[Concept('concept_jobseeker', '$concept_jobseekers$')]"
 BUILDING_MAP_LIST_PANEL_AVAILABLE_LABOR_HEADER_TOOLTIP: "#header [Concept('concept_jobseeker', '$concept_jobseekers$')]#!\n$TOOLTIP_DELIMITER$\n$concept_jobseeker_desc$"
 BUILDING_MAP_LIST_PANEL_INFRASTRUCTURE_HEADER: "Infra"
 BUILDING_MAP_LIST_PANEL_INFRASTRUCTURE_HEADER_TOOLTIP: "#header Infrastruktur-Saldo#!\n$TOOLTIP_DELIMITER$\nWie viel [concept_infrastructure] im Staat verfügbar ist"
 BUILDING_MAP_LIST_PANEL_STATUS_HEADER: "Status"
 BUILDING_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept Die Verfügbarkeit der Erweiterung dieses [Concept('concept_building', 'Gebäudes')] in jedem [concept_state].\n\n@map_list_plus!: Wir können das auswählen.\n@map_list_plus_and_checkmark!: Wir können das auswählen und wir nutzen das bereits hier.\n@map_list_checkmark!: Wir nutzen das bereits hier und können es abwählen.\n@map_list_lock!: Wir nutzen das bereits hier, aber wir können es NICHT abwählen.\n@map_list_cross!: Wir können das NICHT auswählen.#!"
 BUILDING_MAP_LIST_PANEL_STATE_HEADER: "Staat"
 BUILDING_MAP_LIST_PANEL_STATE_HEADER_TOOLTIP: "#header [concept_state]#!\n$TOOLTIP_DELIMITER$\n#concept Dies ist der $concept_state$, in dem das [concept_building] gebaut werden wird.#!"
 BUILDING_MAP_LIST_PANEL_EFFICIENCY_HEADER: "Eff."
 BUILDING_MAP_LIST_PANEL_EFFICIENCY_HEADER_TOOLTIP: "#header @construction![Nbsp][concept_construction]-Effizienz#!\n$TOOLTIP_DELIMITER$\n#concept Die @construction! $concept_construction$-Effizienz, mit der das [concept_building] gebaut werden wird. Ein positiver Wert reduziert die benötigte wöchentliche @construction![Nbsp][concept_construction]-Menge und umgekehrt.#!"
 BUILDING_MAP_LIST_PANEL_PEASANTS_HEADER: "Bauern"
 BUILDING_MAP_LIST_PANEL_PEASANTS_HEADER_TOOLTIP: "#header Bauern#!"
 BUILDING_MAP_LIST_PANEL_CONSTRUCTION_HEADER: "@construction!"
 BUILDING_MAP_LIST_PANEL_CONSTRUCTION_HEADER_TOOLTIP: "#header @construction![Nbsp][concept_construction]#!\n$TOOLTIP_DELIMITER$\n#concept Gesamtmenge an @construction! $concept_construction$, die für die Fertigstellung des [Concept('concept_building', 'Gebäudes')] benötigt wird.#!"
 BUILDING_MAP_LIST_PANEL_STATUS_BUILD: "Bauen"
 BUILDING_MAP_LIST_PANEL_STATUS_EXPAND: "Erweitern"
 BUILDING_MAP_LIST_PANEL_EFFICIENCY_TOOLTIP: "#header [concept_construction]-Effizienz in $NAME$: $VAL|v%1$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 CONSTRUCTION_EFFICIENCY_MINIMUM_DESC: "@information! [concept_construction]-Effizienz kann nicht niedriger als [GetDefine('NEconomy', 'MIN_CONSTRUCTION_EFFICIENCY')|v%0] sein"
 GOODS_CANNOT_BE_TRADED_DUE_TO_TREATY: "@red_cross! Der [Goods.GetMarket.GetName] kann aufgrund eines [Concept('concept_treaty', 'Vertrags')] „[Goods.GetName]“ nicht auf dem [concept_world_market] [Concept('concept_trade', 'handeln')]"
 COUNTRY_YOU: "Wir"
 COUNTRY_OTHER: "[Country.GetAltName('NOM')|U]"
 COUNTRY_LABEL_YOU: "Das sind wir"
 COUNTRY_LABEL_YOUR: "Unser"
 COUNTRY_LABEL_RIVAL: "[Concept('concept_rivalry','$concept_rival$')]"
 COUNTRY_LABEL_MUTUAL_RIVAL: "[Concept('concept_rivalry','$concept_rival$')] (gegenseitig)"
 COUNTRY_LABEL_RIVALING: "[Concept('concept_rivalry','$concept_rival$')] von [Country.GetYouOrCountryName]"
 COUNTRY_LABEL_OVERLORD: "[concept_overlord] ([SubjectType.GetName])"
 COUNTRY_LABEL_SUBJECT: "[concept_subject] ([COUNTRY.GetSubjectTypeName])"
 COUNTRY_LABEL_SUBJECT_OF_SUBJECT: "Indirektes [concept_subject] ([Country.GetSubjectTypeName] [Country.GetOverlord.GetAltName('VON')])"
 COUNTRY_LABEL_DIPLO_PLAY_ALLY: "Verbündeter im Diplomatiespiel „[DiplomaticPlay.GetName]“"
 COUNTRY_LABEL_DIPLO_PLAY_ENEMY: "Gegner im Diplomatiespiel „[DiplomaticPlay.GetName]“"
 COUNTRY_LABEL_WAR_ALLY: "Kriegsmitbeteiligter ([War.GetName])"
 COUNTRY_LABEL_WAR_ENEMY: "Feind in ([War.GetName])"
 COUNTRY_LABEL_TRUCE_WITH: "Hat einen Waffenstillstand mit [COUNTRY.GetAltName('DAT')] bis #v [COUNTRY.GetTruceDate(TARGET_COUNTRY.Self)]#!"
 COUNTRY_LABEL_OWES_OBLIGATION_TO: "Schuldet [COUNTRY.GetAltName('DAT')] eine [concept_obligation] (bis #v [COUNTRY.GetObligationToExpirationDate(TARGET_COUNTRY.Self)]#!)"
 COUNTRY_LABEL_IS_OWED_OBLIGATION: "Wird von [COUNTRY.GetAltName('DAT')] eine [concept_obligation] geschuldet (bis #v [COUNTRY.GetObligationToExpirationDate(TARGET_COUNTRY.Self)]#!)"
 COUNTRY_HAS_TRADE_AGREEMENT: "Hat ein [concept_trade_privilege] bei [COUNTRY.GetAltName('DAT')]"
 COUNTRY_HAS_DEFENSIVE_PACT: "Hat einen [concept_defensive_pact] mit [COUNTRY.GetAltName('DAT')]"
 COUNTRY_HAS_ALLIANCE: "Hat ein [concept_alliance] mit [COUNTRY.GetAltName('DAT')]"
 COUNTRY_LABEL_NEIGHBOUR_LAND: "Nachbar"
 COUNTRY_LABEL_NEIGHBOUR_SEA: "Nachbar (in Übersee)"
 COUNTRY_LABEL_POWER_BLOC_LEADER: "[concept_power_bloc_leader]"
 COUNTRY_LABEL_POWER_BLOC_JUNIOR: "[concept_power_bloc]-Juniormitglied"
 COUNTRY_LABEL_POWER_BLOC_MEMBER: "[concept_power_bloc_member]"
 GOVERNMENT_IG_DESC_ITEM: "[InterestGroup.GetTextIcon]"
 BUILDING_MAP_LIST_PANEL_PROFIT_IMPACT_HEADER: "[SelectLocalization(Or(ObjectsEqual(MapListBuildingPanel.GetBuildingType, GetBuildingType('building_government_administration').Self), ObjectsEqual(MapListBuildingPanel.GetBuildingType, GetBuildingType('building_construction_sector').Self)), 'BUILDING_UPKEEP_HEADER', 'BUILDING_EARNINGS_HEADER')]"
 BUILDING_UPKEEP_HEADER: "Unterhalt"
 BUILDING_EARNINGS_HEADER: "Einnahmen"
 BUILDING_MAP_LIST_PANEL_PROFIT_IMPACT_TOOLTIP: "#header Prognostizierte [SelectLocalization(Or(ObjectsEqual(MapListBuildingPanel.GetBuildingType, GetBuildingType('building_government_administration').Self), ObjectsEqual(MapListBuildingPanel.GetBuildingType, GetBuildingType('building_construction_sector').Self)), 'BUILDING_UPKEEP_HEADER', 'BUILDING_EARNINGS_HEADER')] nach Erweiterung#!\n(Mit Ausnahme von [Concept('concept_building_wage', '$concept_building_wages$')])\n$TOOLTIP_DELIMITER$\nEine Schätzung, wie stark sich die Erweiterung dieses Gebäudes auf die wöchentlichen [SelectLocalization(Or(ObjectsEqual(MapListBuildingPanel.GetBuildingType, GetBuildingType('building_government_administration').Self), ObjectsEqual(MapListBuildingPanel.GetBuildingType, GetBuildingType('building_construction_sector').Self)), 'BUILDING_UPKEEP_HEADER', 'BUILDING_EARNINGS_HEADER')] auswirkt."
 COLONY_MAP_LIST_PANEL_STATUS_HEADER: "Status"
 COLONY_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept Die Verfügbarkeit der Kolonisierung in [Concept('concept_state_region', 'Regionen')].\n\n@map_list_plus!: Wir können das auswählen.\n@map_list_plus_and_checkmark!: Wir können das auswählen und wir nutzen das bereits hier.\n@map_list_checkmark!: Wir nutzen das bereits hier und können es abwählen.\n@map_list_lock!: Wir nutzen das bereits hier, aber wir können es NICHT abwählen.\n@map_list_cross!: Wir können das NICHT auswählen.#!"
 COLONY_MAP_LIST_PANEL_REGION_HEADER: "Strategieregion"
 COLONY_MAP_LIST_PANEL_REGION_HEADER_TOOLTIP: "#header [concept_strategic_region]#!\n$TOOLTIP_DELIMITER$\n#concept Ziel-$concept_strategic_region$.#!"
 COLONY_MAP_LIST_PANEL_STATE_HEADER: "Staatsregion"
 COLONY_MAP_LIST_PANEL_STATE_HEADER_TOOLTIP: "#header [concept_state_region]#!\n$TOOLTIP_DELIMITER$\n#concept Ziel-$concept_state_region$.#!"
 COLONY_MAP_LIST_PANEL_STATE_TRAITS_HEADER: "Staatseigenschaften"
 COLONY_MAP_LIST_PANEL_STATE_TRAITS_HEADER_TOOLTIP: "#header Staatseigenschaften#!\n$TOOLTIP_DELIMITER$\n#concept Ziel-Staatseigenschaften#!"
 STATE_TRAITS_TITLE: "Staatseigenschaften:"
 DIPLO_ACTION_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept Die Verfügbarkeit dieses [Concept('concept_diplomatic_action', 'Diplomatenspiels')] in [Concept('concept_country', 'Ländern')].\n\n@map_list_plus!: Wir können das auswählen.\n@map_list_plus_and_checkmark!: Wir können das auswählen und wir nutzen das bereits hier.\n@map_list_checkmark!: Wir nutzen das bereits hier und können es abwählen.\n@map_list_lock!: Wir nutzen das bereits hier, aber wir können es NICHT abwählen.\n@map_list_cross!: Wir können das NICHT auswählen.#!"
 DIPLO_ACTION_LIST_PANEL_STATUS_HEADER: "Land"
 DIPLO_ACTION_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header [concept_country]#!"
 DIPLO_ACTION_LIST_PANEL_STATUS_RIVALRY_GAINS: "Zugewinn"
 DIPLO_ACTION_LIST_PANEL_STATUS_RIVALRY_GAINS_TOOLTIP: "Vorteil einer Rivalitätserklärung gegenüber einem anderen [concept_country]"
 DIPLO_ACTION_LIST_PANEL_STATUS_SEND: "Entsenden"
 DIPLO_ACTION_LIST_PANEL_STATUS_NOT_POSSIBLE: "Nicht verfügbar"
 DECREE_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept Die Verfügbarkeit dieses [Concept('concept_decree', 'Erlasses')] in [Concept('concept_state', 'Staaten')].\n\n@map_list_plus!: Wir können das auswählen.\n@map_list_plus_and_checkmark!: Wir können das auswählen und wir nutzen das bereits hier.\n@map_list_checkmark!: Wir nutzen das bereits hier und können es abwählen.\n@map_list_lock!: Wir nutzen das bereits hier, aber wir können es NICHT abwählen.\n@map_list_cross!: Wir können das NICHT auswählen.#!"
 DECREE_LIST_PANEL_STATE_HEADER: "Staat"
 DECREE_LIST_PANEL_STATE_HEADER_TOOLTIP: "#header [concept_state]#!"
 DECREE_LIST_PANEL_COST_HEADER: "Kosten"
 DECREE_LIST_PANEL_COST_HEADER_TOOLTIP: "#header Kosten, um diesen Erlass zu unterhalten#!"
 MILITARY_FORMATION_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept Die Möglichkeit, diese [concept_military_formation] an ein Ziel zu entsenden.\n\n@map_list_plus!: Sie können diese $concept_military_formation$ hierher entsenden.\n@map_list_checkmark!: Die $concept_military_formation$ ist bereits auf dem Weg hierher und man kann diesen Vorgang abbrechen.\n@map_list_lock!: Die $concept_military_formation$ ist bereits auf dem Weg hierher, aber das #b kann nicht#! mehr abgebrochen werden.\n@map_list_cross!: Diese $concept_military_formation$ #b kann nicht#! hierher entsandt werden.#!"
 MILITARY_FORMATION_LIST_PANEL_DESTINATION_HEADER: "Ziel"
 MILITARY_FORMATION_LIST_PANEL_DESTINATION_HEADER_TOOLTIP: "#header Ziel#!\n$TOOLTIP_DELIMITER$\nHierhin wird die [concept_military_formation] verlegt. Falls die $concept_military_formation$ noch nicht dort ist, bricht sie dorthin auf."
 MILITARY_FORMATION_LIST_PANEL_UNITS_HEADER: "Einheiten"
 MILITARY_FORMATION_LIST_PANEL_UNITS_HEADER_TOOLTIP: "Die Anzahl an Einheiten, die an der [concept_front] stationiert sind."
 MILITARY_FORMATION_LIST_PANEL_ADVANTAGE_HEADER: "Vorteil"
 MILITARY_FORMATION_LIST_PANEL_ADVANTAGE_HEADER_TOOLTIP: "Vor-/Nachteil an der [concept_front]"
 MILITARY_FORMATION_LIST_PANEL_TRAVEL_TIME_HEADER: "Reisezeit"
 MILITARY_FORMATION_LIST_PANEL_TRAVEL_TIME_HEADER_TOOLTIP: "#header Reisezeit#!\n$TOOLTIP_DELIMITER$\nWie lange (in Tagen) die [concept_military_formation] von ihrer derzeitigen Stellung bis zum angegebenen Ziel braucht."
 MAP_LIST_MILITARY_FORMATION_TRAVEL_TIME: "[SelectLocalization(MapListOption.GetMilitaryFormationData.CanTravelTo, 'MAP_LIST_MILITARY_FORMATION_TRAVEL_TIME_DAYS', 'MAP_LIST_MILITARY_FORMATION_TRAVEL_TIME_NO_PATH')]"
 MAP_LIST_MILITARY_FORMATION_TRAVEL_TIME_DAYS: "[MapListOption.GetMilitaryFormationData.GetTravelDays|v] Tage"
 MAP_LIST_MILITARY_FORMATION_TRAVEL_TIME_NO_PATH: "Kein Weg"
 MAP_LIST_MILITARY_FORMATION_UNITS: "@battalions! [Front.GetPlayerSideNumUnitsAtFront|0v] + [Front.GetPlayerSideNumUnitsTraveling|0v]"
 NOT_PLAYER_MARKET_CONSUMPTION_TAXES: "@red_cross! Kann [Concept('concept_consumption_tax', '$concept_consumption_taxes$')] für [Goods.GetName] auf dem Markt „[Goods.GetMarket.GetName]“ #b nicht#! festlegen, da wir nicht Teil dieses [Concept('concept_market', 'Markts')] sind."
 NOT_PLAYER_MARKET_PRIORITY: "@red_cross! Kann Priorität für [Goods.GetName] auf dem Markt „[Goods.GetMarket.GetName]“ #b nicht#! festlegen, da wir nicht Teil dieses [Concept('concept_market', 'Markts')] sind."
 CURRENT_GOODS_FILTERS: "[SelectLocalization(And(MarketPanel.IsSelected('staple'), MarketPanel.IsSelected('military')), 'ALL_GOODS', 'SELECTED_FILTER')]"
 SELECTED_FILTER: "[AddTextIf(MarketPanel.IsSelected('staple'), '$STAPLE_FILTER_NAME$')][AddTextIf(MarketPanel.IsSelected('industrial'), '$INDUSTRIAL_FILTER_NAME$')][AddTextIf(MarketPanel.IsSelected('military'), '$MILITARY_FILTER_NAME$')][AddTextIf(MarketPanel.IsSelected('luxury'), '$LUXURY_FILTER_NAME$')]"
 WORLD_MARKET_CURRENT_GOODS_FILTERS: "[SelectLocalization(And(WorldMarketPanel.IsSelected('staple'), WorldMarketPanel.IsSelected('military')), 'ALL_GOODS', 'WORLD_MARKET_SELECTED_FILTER')]"
 WORLD_MARKET_SELECTED_FILTER: "[AddTextIf(WorldMarketPanel.IsSelected('staple'), '$STAPLE_FILTER_NAME$')][AddTextIf(WorldMarketPanel.IsSelected('industrial'), '$INDUSTRIAL_FILTER_NAME$')][AddTextIf(WorldMarketPanel.IsSelected('military'), '$MILITARY_FILTER_NAME$')][AddTextIf(WorldMarketPanel.IsSelected('luxury'), '$LUXURY_FILTER_NAME$')]"
 MARKET_TRADE_VALUES: "[MakeLineIf(NotZero_CFixedPoint(Market.GetExportedAmountToMarket(Goods.GetMarket, Goods.Self)), 'MARKET_EXPORTS_TO_MARKET')][MakeLineIf(NotZero_CFixedPoint(Market.GetImportedAmountFromMarket(Goods.GetMarket, Goods.Self)), 'MARKET_IMPORTS_FROM_MARKET')][MakeLineIf(NotZero_CFixedPoint(Market.GetExportedAmount(Goods.Self)), 'MARKET_EXPORTS_TO_WORLD_MARKET')][MakeLineIf(NotZero_CFixedPoint(Market.GetImportedAmount(Goods.Self)), 'MARKET_IMPORTS_FROM_WORLD_MARKET')]"
 MARKET_EXPORTS_TO_MARKET: "@market_sell_orders! [Concept('concept_trade','$concept_exports$')] [Market.GetExportedAmountToMarket(Goods.GetMarket, Goods.Self)|v0] [Goods.GetTextIcon] „[Goods.GetName]“ nach [Goods.GetMarket.GetOwner.GetFlagTextIcon] „[Goods.GetMarket.GetName]“"
 MARKET_IMPORTS_FROM_MARKET: "@market_buy_orders! [Concept('concept_trade','$concept_imports$')] [Market.GetImportedAmountFromMarket(Goods.GetMarket, Goods.Self)|v0] [Goods.GetTextIcon] „[Goods.GetName]“ aus [Goods.GetMarket.GetOwner.GetFlagTextIcon] „[Goods.GetMarket.GetName]“"
 MARKET_EXPORTS_TO_WORLD_MARKET: "@market_exports! [Concept('concept_trade','$concept_exports$')] [Market.GetExportedAmount(Goods.Self)|v0] [Goods.GetTextIcon] „[Goods.GetName]“ auf den [concept_world_market]"
 MARKET_IMPORTS_FROM_WORLD_MARKET: "@market_imports! [Concept('concept_trade','$concept_imports$')] [Market.GetImportedAmount(Goods.Self)|v0] [Goods.GetTextIcon] „[Goods.GetName]“ aus dem [concept_world_market]"
 ACCEPTED_CULTURALLY: "Akzeptierte Kultur"
 DISCRIMINATED_CULTURALLY: "Diskriminierte Kultur"
 ACCEPTED_RELIGIOUSLY: "Akzeptierte Religion"
 DISCRIMINATED_RELIGIOUSLY: "Diskriminierte Religion"
 IS_EMPLOYED: "Nur beschäftigt"
 IS_UNEMPLOYED: "Nur unbeschäftigt"
 LIVES_IN_INCORPORATED_STATE: "Lebt in inkorporierten Staaten"
 DOES_NOT_LIVE_IN_INCORPORATED_STATE: "Lebt in nicht-inkorporierten Staaten"
 BUTTON_POP_BROWSER: "#header $POP_BROWSER$#!"
 POP_BROWSER: "[AddLocalizationIf(Not(Country.IsLocalPlayer), Concatenate(Country.GetAdjective, ' '))]Volkszählungsdaten"
 LOYALTY: "Loyalität"
 HAS_LOYALISTS: "Hat Loyalisten"
 HAS_RADICALS: "Hat Radikale"
 POP_GROWTH: "Pop-Wachstum"
 IS_GROWING: "Wächst"
 IS_SHRINKING: "Schrumpft"
 CHARTS: "Diagramme"
 LITERACY: "[concept_literacy]"
 NEEDS: "Bedarfe"
 RELIGION_PIECHART_HEADER: "[concept_religion]"
 CULTURE_PIECHART_HEADER: "[concept_culture]"
 POP_TYPE: "$concept_profession$"
 DISCRIMINATION_CULTURAL: "Diskriminierung (Kultur)"
 DISCRIMINATION_RELIGIOUS: "Diskriminierung (Religion)"
 EMPLOYMENT: "Beschäftigung"
 FILTERED_BUILDINGS: "Gefilterte $concept_buildings$"
 INCORPORATION: "Inkorporierung"
 STATE_PIECHART_HEADER: "[concept_state]"
 FILTERED_COUNTRY_OWNERSHIP_PIECHART: "#header #todo PRCAL-32931 ShareHolder.GetName AddTextIf(ShareHolder.GetCountry.IsLocalPlayer, '(Uns)')#!#!\n#todo BuildingBrowserPanel.GetFilteredOwnershipByShareholder(Shareholder.Self)|%v#! der [Concept('concept_ownership_share','$concept_ownership_shares$')] sind im Besitz von #todo ShareHolder.GetName AddTextIf(ShareHolder.GetCountry.IsLocalPlayer, '(uns)')#!.\n\nPasst zu den derzeitigen Filtern."
 FILTERED_OWNERSHIP_DISTRIBUTION_PIECHART: "#header #todo PRCAL-32931 Country.GetName AddTextIf(Country.IsLocalPlayer, '(Uns)')#!#!\n#todo BuildingBrowserPanel.GetFilteredDistributionPercentageInCountry(Country.Self)|%v#! von [GetPlayer.GetAdjective|l]en [Concept('concept_building','$concept_buildings$')]-[Concept('concept_ownership_share','$concept_ownership_shares$')] liegen #todo Country.GetAltName('IN')#!.\n\nPasst zu den derzeitigen Filtern."
 FILTERED_POP_TYPE_PIECHART: "#header [PopType.GetName]#!\n[PopBrowserPanel.GetFilteredTotalSizeForPopType(PopType.Self)|Dv] „[PopType.GetName]“-[Concept('concept_pop', '$concept_pops$')] entsprechen den derzeitigen Filtern"
 FILTERED_RELIGION_PIECHART: "#header [Religion.GetName]#!\n[PopBrowserPanel.GetFilteredTotalSizeForReligion(Religion.Self)|Dv] [Religion.GetName|l]e [Concept('concept_pop', '$concept_pops$')] entsprechen den derzeitigen Filtern"
 FILTERED_CULTURE_PIECHART: "#header [Culture.GetName|U]#!\n[PopBrowserPanel.GetFilteredTotalSizeForCulture(Culture.Self)|Dv] [Culture.GetName|l]e [Concept('concept_pop', '$concept_pops$')] entsprechen den derzeitigen Filtern"
 FILTERED_STATE_PIECHART: "#header [State.GetName|U]#!\n[PopBrowserPanel.GetFilteredTotalSizeForState(State.Self)|Dv] [Concept('concept_pop', '$concept_pops$')] in „[State.GetName]“ entsprechen den derzeitigen Filtern"
 POP_TYPE_POL_STR_PIECHART: "#header [PopType.GetName]#!\nDie zu den derzeitigen Filtern passenden „[PopType.GetName]“ haben insgesamt [PopBrowserPanel.GetFilteredPolStrForPopType(PopType.Self)|Dv] [concept_political_strength]"
 NO_STATES: "Keine Staaten"
 NO_POPS_MATCHES_THE_CURRENT_FILTER: "Keine [Concept('concept_pop', '$concept_pops$')] entsprechen den derzeitigen Filtern"
 POP_BROWSER_POP_SOL: "[Pop.GetFormattedStandardOfLivingLabel|v] ([Pop.GetFormattedStandardOfLiving|v]) $WEALTH_GROWING_OR_SHRINKING$"
 WEALTH_GROWING_OR_SHRINKING: "[AddTextIf(GreaterThan_CFixedPoint(Pop.GetWealthProgression, '(CFixedPoint)0'), '@arrow_up!')][AddTextIf(LessThan_CFixedPoint(Pop.GetWealthProgression, '(CFixedPoint)0'), '@arrow_down!')]"
 POP_BROWSER_LITERACY: "[Pop.GetLiteracyRate|%1v] $LITERACY_GROWING_OR_SHRINKING$"
 LITERACY_GROWING_OR_SHRINKING: "[AddTextIf(GreaterThan_CFixedPoint(Pop.GetEducationAccess, Pop.GetLiteracyRate), '@arrow_up!')][AddTextIf(LessThan_CFixedPoint(Pop.GetEducationAccess, Pop.GetLiteracyRate), '@arrow_down!')]"
 POP_BROWSER_JOB_SATISFACTION: "[Pop.GetCurrentJobSatisfaction|0+=] $JOB_SATISFACTION_GROWING_OR_SHRINKING$"
 JOB_SATISFACTION_GROWING_OR_SHRINKING: "[AddTextIf(LessThan_CFixedPoint(Pop.GetCurrentJobSatisfaction, Pop.GetNextJobSatisfaction), '@arrow_up!')][AddTextIf(GreaterThan_CFixedPoint(Pop.GetCurrentJobSatisfaction, Pop.GetNextJobSatisfaction), '@arrow_down!')]"
 WEALTH_PROGRESSION: "Wohlstand"
 SOL_IS_GROWING: "Steigt"
 SOL_IS_SHRINKING: "Sinkt"
 STANDARD_OF_LIVING: "Lebensstandard"
 IS_ABOVE_EXPECTED_SOL: "Über Lebensstandard-Erwartung"
 IS_BELOW_EXPECTED_SOL: "Unter Lebensstandard-Erwartung"
 IS_BELOW_EXPECTED_SOL_MIDDLE: "Unter Lebensstandard-Erwartung für [concept_middle_strata]"
 POP_SIZE: "Größe"
 IS_TEN_OR_LARGER: "Mindestens #b 10#! [Concept('concept_individual','$concept_individuals$')]"
 IS_A_HUNDRED_OR_LARGER: "Mindestens #b 100#! [Concept('concept_individual','$concept_individuals$')]"
 IS_A_THOUSAND_OR_LARGER: "Mindestens #b 1.000#! [Concept('concept_individual','$concept_individuals$')]"
 JOB_SATISFACTION: "Arbeitszufriedenheit"
 IS_JOBSEEKER: "Ist arbeitssuchend"
 IS_NOT_JOBSEEKER: "Ist zufrieden"
 ALL_GOODS: "Alle Waren"
 STAPLE_FILTER_NAME: "Grundbedarfswaren"
 INDUSTRIAL_FILTER_NAME: "Industriewaren"
 MILITARY_FILTER_NAME: "Militärwaren"
 LUXURY_FILTER_NAME: "Luxuswaren"
 ALL: "Alle"
 YOUR: "Ihr(e)"
 GROUPED_BY_GOODS: ", gruppiert nach Waren"
 GROUPED_BY_COUNTRY: ", gruppiert nach Ländern"
 FILTER_GOODS: "Waren filtern"
 GROUP: "Gruppieren"
 FILTER_BY_OWNER: "Filtern nach Besitzer"
 BY_GOODS: "Nach Waren"
 BY_COUNTRY: "Nach Land"
 ONLY_YOURS: "Nur Ihre"
 EMBARGO: "Embargo"
 TRADE_AGREEMENT: "Handelsvertrag"
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept Die Verfügbarkeit in Sachen [concept_conscription_center] in [Concept('concept_state', 'Staaten')].\n\n@map_list_plus!: Wir können das auswählen.\n@map_list_plus_and_checkmark!: Wir können das auswählen und wir nutzen das bereits hier.\n@map_list_checkmark!: Wir nutzen das bereits hier und können es abwählen.\n@map_list_lock!: Wir nutzen das bereits hier, aber wir können es NICHT abwählen.\n@map_list_cross!: Wir können das NICHT auswählen.#!"
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_STATE_HEADER: "Staat"
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_STATE_HEADER_TOOLTIP: "#header Staat#!\n$TOOLTIP_DELIMITER$\nDies ist der [concept_state], in dem das [concept_conscription_center] aktiviert werden wird."
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_SIZE_TOOLTIP: "#header Größe#!\n$TOOLTIP_DELIMITER$\nDies ist die Größe des [Concept('concept_conscription_center', 'Einberufungszentrums')]."
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_UNITS: "Einheiten"
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_UNITS_TOOLTIP: "#header Einheiten#!\n$TOOLTIP_DELIMITER$\nDies ist die Anzahl an Einheiten, die im [concept_conscription_center] einberufen werden wird."
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_STATE_LIMIT_HEADER: "$concept_state$s-Schwelle"
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_STATE_LIMIT_HEADER_TOOLTIP: "#header [concept_conscription_limit]#!\n$TOOLTIP_DELIMITER$\nMaximale Anzahl von [Concept('concept_conscript_battalion','$concept_conscript_battalions$n')], die dieser [concept_state] derzeit rekrutieren kann."
 COUNTRY_MOBILIZATION_SWAY_PANEL: "[Concept('concept_mobilize_army','$concept_mobilize_army_mobilization$')|U]: #v [Country.GetMobilizationRatio|0%]#!"
 RECRUIT_COMMANDERS_CHARACTERS_POPUP: "Wird Folgendes befehligen: $DESC$"
 COLONY_MAP_MARKER_DAYS_LEFT: "[SelectLocalization(GreaterThan_int32(GetPlayer.GetTensionWith(State.GetNextColonyProvince.GetState.GetOwner), '(int32)50'), '@warning! ', '')]#bold [State.GetColonyProgressAsDays]#! Tag(e)"
 BUILDING_MAP_MARKER_WEEKS_LEFT: "#bold [Building.GetConstructionRemainingWeeksDesc]#!"
 MARKET_ACCESS_WITH_WARNING: "[SelectLocalization(LessThan_CFixedPoint(State.GetMarketAccess, '(CFixedPoint)1'), '@warning!', '')] #v [State.GetMarketAccess|%0]#!"
 CLOUT_GRAPH_TITLE: "#title [concept_clout]#!"
 VOTES_GRAPH_TITLE: "#title [Concept('concept_votes', 'Derzeitige Stimmverteilung')]#!"
 INTEREST_GROUPS_IN_GOVERNMENT: "[concept_in_government|U]\n[AccessPlayer.GetGovernmentInterestGroupsDesc]"
 INTEREST_GROUPS_IN_OPPOSITION: "[concept_in_opposition|U]\n[AccessPlayer.GetOppositionInterestGroupsDesc]"
 MARGINALIZED_INTEREST_GROUPS: "[concept_marginalized|U]\n[AccessPlayer.GetMarginalInterestGroupsDesc]"
 INTEREST_GROUP_NAME_WITH_CLOUT: "[InterestGroup.GetNameNoIcon] (#v #tooltippable #tooltip:[InterestGroup.GetTooltipTag],IG_CLOUT_BREAKDOWN,IGCloutTooltip [InterestGroup.GetClout|%1]#!#!#!)"
 CHARACTER_NAME_WITH_POPULARITY: "[Character.GetFullName] #tooltippable #tooltip:[Character.GetTooltipTag],POPULARITY_BREAKDOWN [LabelingHelper.GetLabelForPopularityCFixedPoint(Character.GetPopularity)] (#v [Character.GetPopularity|0]#!#!#!)"
 IG_AGITATORS: "[Concept('concept_agitator', '$concept_agitators$')]"
 AGITATOR: "[concept_agitator]"
 NO_AGITATORS: "Keine $concept_agitators$"
 NO_AGITATOR_IN_MOVEMENT: "Keine unterstützenden [Concept('concept_agitator', '$concept_agitators$')]"
 IG_LOBBIES: "[Concept('concept_political_lobby','$concept_political_lobbies$')]"
 AVAILABLE_AGITATOR_SLOTS: "Platz für #tooltippable #tooltip:[GetRawTextTooltipTag(Country.GetModifier.GetTooltipFor('country_agitator_slots_add'))] [Country.GetEmptyAgitatorSlots|v]#!#! [SelectLocalization(EqualTo_int32(Country.GetEmptyAgitatorSlots, '(int32)1'), 'AGITATOR', 'IG_AGITATORS')]"
 NO_AVAILABLE_AGITATOR_SLOTS: "Alle [Concept('concept_agitator', '$concept_agitators$')]-Plätze besetzt"
 CANNOT_SUPPORT_AGITATORS: "Kann keine weiteren [Concept('concept_agitator', '$concept_agitators$')] unterhalten"
 CANNOT_SUPPORT_AGITATORS_TOOLTIP: "#r Kann keine weiteren [Concept('concept_agitator', '$concept_agitators$')] unterhalten#!\n@red_cross! [Concept('concept_revolution', '$concept_revolutionary$')]e Länder können keine $concept_agitators$ unterhalten"
 EXILED_AGITATORS: "Agitatoren im Exil"
 LOYALISTS_AND_RADICALS: "Loyalisten und Radikale"
 LOYALISTS_AND_RADICALS_IN_COUNTRY: "[Concept('concept_loyalist', '$concept_loyalists$')] und [Concept('concept_radical', '$concept_radicals$')] in [Country.GetName]"
 LOYALISTS_AND_RADICALS_IN_INTEREST_GROUP: "[Concept('concept_loyalist', '$concept_loyalists$')] und [Concept('concept_radical', '$concept_radicals$')] in IG „[InterestGroup.GetName]“"
 AGITATORS: "Agitatoren"
 INVITE: "Einladen"
 AGITATOR_START_POLITICAL_MOVEMENT: "Wird eine [PoliticalMovementType.GetName] beginnen"
 AGITATOR_JOIN_POLITICAL_MOVEMENT: "Wird sich [PoliticalMovement.GetNameNoIcon] anschließen"
 AGITATOR_NO_POLITICAL_MOVEMENT: "Wird keine [concept_political_movement] gründen oder sich einer anschließen"
 ELECTION_PANEL_ACTIVE_CAMPAIGN_TITLE: "Wahlkampagne von [Election.GetNextElectionYearRaw]"
 ELECTION_PANEL_ELECTION_RESULT_TITLE: "Ergebnisse der Wahl von [Election.GetLastElectionYearRaw]"
 ELECTION_PANEL_HEADER_LINE_ONE: "[Election.GetTitle]"
 ELECTION_PANEL_HEADER_LINE_TWO: "[concept_election] in [Election.GetCountryName]"
 IG_VOTERS_TITLE: "Wähler:"
 TOTAL_VOTERS: "Wähler insgesamt"
 DATE_OF_ELECTION: "Tag der [concept_election]"
 ELECTION_DATE: "$DATE$ (in $NUM_DAYS$ Tagen)"
 ELECTION_DATE_ONE_DAY: "$DATE$ (in einem Tag)"
 ELECTION_DATE_LESS_THAN_ONE_DAY: "$DATE$ (weniger als 1 Tag)"
 PARTIES: "[Concept('concept_party', '$concept_parties$')]"
 LAST_ELECTION_RESULTS: "Ergebnisse der letzten [concept_election]: [Election.GetLastElectionDateDesc]"
 PARTY_AFFILIATION: "Parteizugehörigkeit"
 WILL_JOIN_PARTY: "#v [InterestGroup.GetWillJoinPartyDesc]#!"
 PROJECTED_VOTES_TITLE: "Prognostizierte Stimmen:"
 PROJECTED_VOTES: "$SHARE|%0v$"
 PROJECTED_VOTES_TOOLTIP: "#header Prognostizierte Stimmen:#!\n$PROJECTED_PARTY_POL_STR_FROM_VOTES$\n$TOOLTIP_DELIMITER$\n$PARTY_POL_STR_FROM_VOTES$"
 PARTY_POL_STR_FROM_VOTES: "Bei der letzten Wahl erhielten sie [Party.GetCurrentVotingPowerShare|%0v] der [concept_votes]\nDies verschafft ihren Mitgliedern [SelectLocalization(Party.GetCountry.IsInElectionCampaignPeriod, 'CURRENTLY', '')] [Party.GetCurrentVotingPower|Kv] [concept_political_strength]"
 PROJECTED_PARTY_POL_STR_FROM_VOTES: "„[Party.GetName|U]“ erhält prognostiziert [Party.GetProjectedVotesDesc] der [concept_votes].\nDies würde ihr [Party.GetCurrentPollVotingPower|Kv] [concept_political_strength] der Stimmen verschaffen, was #v [Party.GetCurrentPollVotingPowerDifference|K+=]#! im Vergleich zum Ergebnis der letzten Wahl ist."
 CURRENTLY: "derzeit"
 PARTY_TOOLTIP_PROJECTED_PARTY_POL_STR_FROM_VOTES: "#title Laufende Wahl#!\n[concept_momentum]: #tooltippable #tooltip:[Party.GetTooltipTag],MOMENTUM_TOOLTIP [Party.GetMomentum|v%0]#!#!\n$PROJECTED_PARTY_POL_STR_FROM_VOTES$\n$TOOLTIP_DELIMITER$\n#title Letzte Wahl#!\n"
 MOMENTUM_TOOLTIP: "[Party.GetMomentumDesc]"
 PARTY_AFFILIATION_TOOLTIP: "#header Parteizugehörigkeit der IG „[InterestGroup.GetName]“ zur Partei „[Party.GetName]“ [Party.GetMembersSummary]: #v $SCORE|=+0$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 PRICE_DIFFERENCE: "Preisunterschied"
 STATE_TO_MARKET_PRICE_DIFF_TOOLTIP: "#header Preisunterschied#!\n[Goods.GetTextIcon] [Goods.GetName] kostet [Goods.GetStateToMarketPriceDiff|%0=-] in „[Goods.GetState.GetName]“ verglichen mit dem Markt „[Goods.GetMarket.GetName]“"
 CULTURE_IN_STATE_ITEM: "[STATE.GetPopulationForCulture(CULTURE.Self)|vD] [CULTURE.GetName] ([STATE.GetPolStrForCulture(CULTURE.Self)|vD] [concept_political_strength])"
 CULTURE_IN_STATE_FORMAT: "#header Kulturen in [STATE.GetName]#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 RELIGION_IN_STATE_ITEM: "[STATE.GetPopulationForReligion(RELIGION.Self)|vD] [RELIGION.GetName] ([STATE.GetPolStrForReligion(RELIGION.Self)|vD] [concept_political_strength])"
 RELIGION_IN_STATE_FORMAT: "#header Religionen in „[STATE.GetName]“#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 IG_IN_STATE_ITEM: "$VAL|vD$ – [INTEREST_GROUP.GetName]"
 IGS_IN_STATE_FORMAT: "#header [concept_political_strength] in [STATE.GetName]#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 TECHNOLOGY: "Technik"
 TOOLTIP_REQUIREMENTS_ANY: "#title Eine der folgenden Bedingungen muss erfüllt sein:#!"
 TOOLTIP_REQUIREMENTS_ALL: "#title Alle der folgenden Bedingungen müssen erfüllt sein:#!"
 TECHNOLOGY_RESEARCHED: "#i Bereits erforscht#!"
 TOOLTIP_UNLOCKS: "#title Schaltet Folgendes frei:#!"
 TOOLTIP_UNLOCK_PRODUCTION_METHOD: "Schaltet „$PRODUCTION_METHOD$“ für $BUILDING_TYPE$ frei ([concept_production_method])"
 TOOLTIP_DISALLOW_PRODUCTION_METHOD: "Verbietet „$PRODUCTION_METHOD$“ für $BUILDING_TYPE$ ([concept_production_method])"
 TOOLTIP_UNLOCK_BUILDING_TYPE: "Schaltet „$BUILDING_TYPE$“ frei ([concept_building])"
 TOOLTIP_UNLOCK_COMBAT_UNIT_TYPE: "Schaltet $COMBAT_UNIT_TYPE$ frei ([concept_unit])"
 TOOLTIP_UNLOCK_MOBILIZATION_OPTION: "Schaltet $MOBILIZATION_OPTION$ frei ([concept_mobilization_option])"
 TOOLTIP_UNLOCK_COMPANY_TYPE: "Schaltet „[CompanyType.GetName]“ frei ([concept_company])"
 TOOLTIP_UNLOCK_STATE_TRAIT_COLONIZATION: "Erlaubt die Gründung von [Concept('concept_colony','$concept_colonies$')] in [Concept('concept_state', '$concept_states$')] mit der Eigenschaft „[STATE_TRAIT.GetName]“"
 TOOLTIP_DISABLE_STATE_TRAIT: "Entfernt die Eigenschaft „[STATE_TRAIT.GetName]“ von all unseren [Concept('concept_colony','$concept_colonies$')] in [Concept('concept_state', '$concept_states$')]"
 TOOLTIP_UNLOCK_LAW_TYPE: "Schaltet „$LAW$“ frei"
 TOOLTIP_UNLOCK_PARTY: "Schaltet „$PARTY$“ frei"
 TOOLTIP_UNLOCK_DECREE: "Schaltet „[DECREE_TYPE.GetName]“ frei ([concept_decree])"
 TOOLTIP_UNLOCK_DIPLOMATIC_ACTION: "Schaltet „[DIPLOMATIC_ACTION_TYPE.GetName]“ frei ([concept_diplomatic_action])"
 TOOLTIP_UNLOCK_TECH_TYPE: "Führt zu „$TECH_TYPE$“ ([concept_technology])"
 TOOLTIP_DISALLOW_LAW_TYPE: "Verbietet „$LAW$“"
 TOOLTIP_UNLOCKED_BY_LAW_TYPE: "Freigeschaltet durch „$LAW$“"
 TOOLTIP_DISALLOWED_BY_LAW_TYPE: "Verboten durch $LAW$"
 TOOLTIP_UNLOCKED_BY_TECHNOLOGY: "$TECHNOLOGY$"
 TOOLTIP_UNLOCKED_BY_PRINCIPLE: "$PRINCIPLE$"
 TOOLTIP_UNLOCKED_BY_IDENTITY: "[POWER_BLOC_IDENTITY.GetName]"
 TOOLTIP_UNLOCKS_NO_BREAKDOWN: "$UNLOCKED_DESC$"
 TOOLTIP_UNLOCKS_WITH_BREAKDOWN: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Schaltet $UNLOCKED_CATEGORIES_LIST$ frei#!#!"
 TOOLTIP_UNLOCK_LAW_SINGLE: "ein neues [concept_law]"
 TOOLTIP_UNLOCK_LAW_MANY: "mehrere neue [Concept('concept_law', '$concept_laws$')]"
 TOOLTIP_UNLOCK_PM_SINGLE: "eine neue [concept_production_method]"
 TOOLTIP_UNLOCK_PM_MANY: "mehrere neue [Concept('concept_production_method', 'Produktionsmethoden')]"
 TOOLTIP_UNLOCK_DECREE_SINGLE: "einen neuen [concept_decree]"
 TOOLTIP_UNLOCK_DECREE_MANY: "mehrere neue [Concept('concept_decree', '$concept_decrees$')]"
 TOOLTIP_DISALLOWS_NO_BREAKDOWN: "$DISALLOWED_DESC$"
 TOOLTIP_DISALLOWS_WITH_BREAKDOWN: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Verbietet $DISALLOWED_CATEGORIES_LIST$#!#!"
 TOOLTIP_DISALLOW_PM_SINGLE: "eine [concept_production_method]"
 TOOLTIP_DISALLOW_PM_MANY: "mehrere [Concept('concept_production_method', 'Produktionsmethoden')]"
 STANDARD_PM_LIST_ITEM: "\n$PRODUCTION_METHOD$"
 STANDARD_PMS_DESC: "#header Auf Standard-[Concept('concept_production_method', '$concept_production_methods$')] zurücksetzen#!$LIST$"
 CURRENTLY_ACTIVE_LAW: "#b Aktives Gesetz#!"
 CURRENTLY_ACTIVE_LAW_IN_LAWGROUP: "Derzeit aktives „[Law.GetGroup.GetName]“-Gesetz"
 LAW_CURRENTLY_BEING_ENACTED: "#b Versucht dies zu beschließen#!"
 CURRENT_LAW_BEING_ENACTED: "#b Beschließt Gesetz#!"
 NO_LAW_IN_THIS_LAWGROUP_IS_BEING_ENACTED: "Es wird kein [concept_law] aus der Gruppe „[LawGroup.GetName]“ beschlossen"
 ACTIVE_LAW: "@green_checkmark! Teil unserer [Concept('concept_law', '$concept_laws$')]"
 ACTIVE_LAW_COUNTRY: "@green_checkmark! Teil der [COUNTRY.GetAdjective|l]en [Concept('concept_law', '$concept_laws$')]"
 BEING_ENACTED_LAW: "#v Wird beschlossen#!"
 INACTIVE_LAW: "@red_cross! #b Nicht#! Teil unserer [Concept('concept_law', '$concept_laws$')]"
 INACTIVE_LAW_COUNTRY: "@red_cross! #b Nicht#! Teil der [COUNTRY.GetAdjective|l]en [Concept('concept_law', '$concept_laws$')]"
 LAW_FULL_NAME: "„$LAW_TYPE$“ ($LAW_TYPE_TYPE$) in „$LAW_GROUP$“"
 LAW_TYPE_TYPE_DESC_LAW: "[concept_law]"
 LAW_TYPE_TYPE_DESC_INSTITUTION: "Institution"
 ARTICLE_LAW_LABEL: "[concept_law]: [Article.GetLaw.GetName]"
 ARTICLE_DRAFT_LAW_LABEL: "[concept_law]: [ArticleDraft.GetLawType.GetName]"
 LAW_BEING_ENACTED_DESC: "Derzeit werden Gesetze [Law.GetCountry.GetAltName('IN')] [Concept('concept_enactment_of_laws', '$concept_enactment_of_laws_enacted$')|l] (nächster Fixpunkt in #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_DESC [Law.GetCheckpointRemainingDays|v] Tag(en)#!#!)\n\n[Concept('concept_enactment_phase','$concept_enactment_phase_short$')]: [Law.GetCountry.GetCustom(Law.GetCurrentEnactmentPhaseKey)|v] (#v [Add_int32('(int32)1', Law.GetEnactmentPhase)]/[GetDefine('NPolitics','LAW_ENACTMENT_MAX_PHASES')]#!)\n$LAW_ENACTMENT_SETBACKS_LABEL$ [Law.GetEnactmentSetbackCount|-]/[Law.GetCountry.GetMaxLawEnactmentSetbacks|-]\n[SelectLocalization(EqualTo_CFixedPoint(Law.GetCountry.GetModifier.GetValueFor('country_cannot_enact_laws_bool'), '(CFixedPoint)0'), 'LAW_ENACTMENT_PROGRESS_NOT_STALLED', 'LAW_ENACTMENT_PROGRESS_STALLED')][ConcatIfNeitherEmpty('\n\n', Law.PredictLegitimacyChangeToEnactDesc)]"
 LAW_BEING_ENACTED_PANEL_DESC: "Derzeit werden Gesetze [Law.GetCountry.GetAltName('IN')] [Concept('concept_enactment_of_laws', '$concept_enactment_of_laws_enacted$')|l] (nächster Fixpunkt in #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_DESC [Law.GetCheckpointRemainingDays|v] Tagen#!#!)[ConcatIfNeitherEmpty('\n\n', Law.PredictLegitimacyChangeToEnactDesc)]"
 IG_NAME_AND_CLOUT: "[InterestGroup.GetName] (#v [InterestGroup.GetClout|%1]#!)"
 LAW_LIMITED_TO_FRONTIER_COLONIZATION: "Kolonisierung wird durch ein [concept_law] auf [Concept('concept_state', '$concept_states$')] begrenzt, die mit dem [concept_capital_state] über Land oder eine sehr überschaubare Seeroute verbunden sind"
 MESSAGE_SETTINGS: "Nachrichteneinstellungen"
 MESSAGE_SETTINGS_NOTIFICATION_TYPES: "Benachrichtigungsarten"
 MESSAGE_SETTINGS_DIPLOMATICALLY_INTERESTING: "Interessierte Länder"
 MESSAGE_SETTINGS_NOTIFICATIONS_LOG: "Benachrichtigungslogbuch"
 MESSAGE_SETTINGS_SORT_NOTIFICATION_TYPE: "Benachrichtigungsart"
 MESSAGE_SETTINGS_SORT_APPEARANCE: "Aussehen"
 MESSAGE_SETTINGS_SORT_PAUSE: "Pause?"
 MESSAGE_SETTINGS_ALERTS_BUTTON_LABEL: "Knopfzahl ‚Derzeitige Lage‘"
 MESSAGE_SETTINGS_ALERTS: "Wichtige Aktionen & Alarme"
 MESSAGE_SETTINGS_SORT_ALERT_NAME: "Alarmnamen"
 ALERT_SETTINGS_NAME_ALERT: "Alarm"
 ALERT_SETTINGS_NAME_IMPORTANT_ACTION: "Wichtige Aktion"
 ALERT_SETTINGS_NAME_ANGRY_IMPORTANT_ACTION: "Dringende wichtige Aktion"
 ALERT_SETTINGS_NAME_ALERT_WITH_CONCEPT: "[concept_alert_settings_alert]"
 ALERT_SETTINGS_NAME_IMPORTANT_ACTION_WITH_CONCEPT: "[concept_alert_settings_important_action]"
 ALERT_SETTINGS_NAME_ANGRY_IMPORTANT_ACTION_WITH_CONCEPT: "[concept_alert_settings_angry_important_action]"
 ALERT_SETTINGS_NAME_NONE_WITH_CONCEPT: "[concept_alert_settings_none]"
 MESSAGE_SETTINGS_INTERESTING_ALWAYS: "Immer anzeigen"
 MESSAGE_SETTINGS_INTERESTING_ALWAYS_TOOLTIP: "#header Immer anzeigen#!\nDies zeigt immer alle Benachrichtigungen [InterestingCountryItem.GetCountry.GetAltName('NOM')]"
 MESSAGE_SETTINGS_INTERESTING_AUTOMATIC: "Wenn diplomatisch relevant"
 MESSAGE_SETTINGS_INTERESTING_AUTOMATIC_TOOLTIP: "#header Wenn diplomatisch relevant#!\nEs werden nur Benachrichtigungen [InterestingCountryItem.GetCountry.GetAltName('NOM')] angezeigt, die für Sie als relevant erachtet werden"
 MESSAGE_SETTINGS_INTERESTING_NEVER: "Nie anzeigen"
 MESSAGE_SETTINGS_INTERESTING_NEVER_TOOLTIP: "#header Nie anzeigen#!\nHiermit werden keine Benachrichtigungen [InterestingCountryItem.GetCountry.GetAltName('NOM')] angezeigt"
 CURRENT_SITUATION_LABEL_TOTAL: "Gesamt"
 CURRENT_SITUATION_LABEL_UNREAD: "Ungelesen"
 CURRENT_SITUATION_TOTAL_TOOLTIP: "[SelectLocalization(Not(MessageSettingsWindow.IsCurrentSituationLabelTotal), 'CURRENT_SITUATION_SELECT_TOTAL_TOOLTIP', 'CURRENT_SITUATION_CURRENTLY_SELECTED_TOTAL_TOOLTIP')]\nDas ist der #b Standard#!\n$TOOLTIP_DELIMITER$\n$CURRENT_SITUATION_TOTAL_DESC$"
 CURRENT_SITUATION_SELECT_TOTAL_TOOLTIP: "#header Summe auswählen#!"
 CURRENT_SITUATION_CURRENTLY_SELECTED_TOTAL_TOOLTIP: "#header Summe auswählen#! #i (Derzeit ausgewählt)#!"
 CURRENT_SITUATION_TOTAL_DESC: "Zeigt immer die Gesamtzahl der [Concept('concept_alert_settings_important_action', '$concept_alert_settings_important_actions$')] im Menü „Derzeitige Lage“ an."
 CURRENT_SITUATION_UNREAD_TOOLTIP: "[SelectLocalization(MessageSettingsWindow.IsCurrentSituationLabelTotal, 'CURRENT_SITUATION_SELECT_UNREAD_TOOLTIP', 'CURRENT_SITUATION_CURRENTLY_SELECTED_UNREAD_TOOLTIP')]\n$TOOLTIP_DELIMITER$\n$CURRENT_SITUATION_UNREAD_DESC$"
 CURRENT_SITUATION_SELECT_UNREAD_TOOLTIP: "#header Ungelesene auswählen#!"
 CURRENT_SITUATION_CURRENTLY_SELECTED_UNREAD_TOOLTIP: "#header Ungelesene auswählen#! #i (Derzeit ausgewählt)#!"
 CURRENT_SITUATION_UNREAD_DESC: "Zeigt die ungelesenen [Concept('concept_alert_settings_important_action', '$concept_alert_settings_important_actions$')] im Menü „Derzeitige Lage“ an."
 THEME: "Thema"
 THEME_SELECTOR: "Themenauswahl"
 ASSETS: "Assets"
 DAY_AND_NIGHT_SETTINGS: "Tagnachtwechsel"
 GO_TO_STORE: "Auf die Store-Seite von #header [Dlc.GetName]#! gehen"
 RELEVANT_DLC_HEADER: "Relevanter DLC"
 RELEVANT_DLC_TOOLTIP: "#header [Dlc.GetName]#!\n[SelectLocalization(Dlc.IsVerified, SelectLocalization(Dlc.IsEnabled, 'DLC_ENABLED', 'DLC_NOT_ENABLED'), 'DLC_NOT_OWNED')]\n$TOOLTIP_DELIMITER$\n[Dlc.GetThemeBreakdown]"
 THEME_CATEGORY_TOOLTIP: "#header [ThemeCategory.GetName]#!\n[ThemeCategory.GetDesc]"
 ASSET_CATEGORY_TOOLTIP: "$THEME_CATEGORY_TOOLTIP$"
 ASSET_TOOLTIP: "#header [Theme.GetName]#! [SelectLocalization(Theme.IsSelected, 'ASSET_ENABLED', 'ASSET_DISABLED')]\n[Theme.GetDesc]\n\nTeil des DLC „[Theme.GetRequiredDlc.GetName]“\n[ConcatIfNeitherEmpty('\n', SelectLocalization(Theme.GetRequiredDlc.IsVerified, SelectLocalization(Theme.GetRequiredDlc.IsEnabled, 'DLC_ENABLED', 'DLC_NOT_ENABLED'), 'DLC_NOT_OWNED'))]"
 THEME_TOOLTIP: "#header [Theme.GetName]#! [AddLocalizationIf(Theme.IsSelected, SelectLocalization(Theme.CanBeSelected, 'CURRENT_THEME', 'CURRENT_THEME_DISABLED'))]\n[Theme.GetDesc]\n\n[SelectLocalization(Theme.HasDlcRequirement, 'THEME_IN_DLC_TOOLTIP', 'THEME_NOT_IN_DLC_TOOLTIP')][ConcatIfNeitherEmpty('\n\n', Theme.GetCanBeSelectedDesc)]"
 THEME_IN_DLC_TOOLTIP: "Teil des DLC #v [Theme.GetRequiredDlc.GetName]#![ConcatIfNeitherEmpty('\n', SelectLocalization(Theme.GetRequiredDlc.IsVerified, SelectLocalization(Theme.GetRequiredDlc.IsEnabled, 'DLC_ENABLED', 'DLC_NOT_ENABLED'), 'DLC_NOT_OWNED'))]."
 THEME_NOT_IN_DLC_TOOLTIP: "Teil des Grundspiels"
 NEW_THEMES_AVAILABLE: "#header Neue Themen verfügbar#!"
 THEME_ISSUES: "#header Einige Themen haben Probleme#!\nDiese werden auf das Standard-Thema zurückgesetzt"
 CURRENT_THEME: "#instruction Derzeit aktiv#!"
 CURRENT_THEME_DISABLED: "#instruction #strikethrough Derzeit aktiv#!#!"
 ASSET_ENABLED: "#g Aktiviert#!"
 ASSET_DISABLED: "#r Deaktiviert#!"
 peace_agreement_notification_group: "Friedensvertrag"
 acquired_technology_notification_group: "Erworbene Technik"
 diplomatic_proposal_declined_notification_group: "Diplomatischer Vorschlag abgelehnt"
 peace_agreement_signed_non_participant_notification_group: "Friedensvertrag unterzeichnet (Nicht-Teilnehmer)"
 capitulated_notification_group: "Kapituliert"
 diplo_play_war_start_notification_group: "Diplomatiespiele-Kriegsbeginn"
 law_changed_notification_group: "Gesetzesänderung"
 law_notification_group: "Gesetzesfortschritt"
 resource_discovery_notification_group: "Ressource entdeckt"
 diplomatic_demand_notification_group: "Diplomatieforderungen"
 claims_notification_group: "Ansprüche"
 institution_investment_notification_group: "Institutionsinvestition"
 country_rank_changed_notification_group: "Landesrang geändert"
 diplomatic_action_notification_group: "Diplomatenaktion"
 diplomatic_proposal_accepted_notification_group: "Diplomatischer Vorschlag angenommen"
 migration_target_created_notification_group: "Migrationsziel erzeugt"
 migration_target_created_other_notification_group: "Migrationsziel erzeugt (andere)"
 diplo_play_start_notification_group: "Diplomatiespiel-Beginn"
 diplo_play_back_down_notification_group: "Diplomatiespiel-Nachgeben"
 diplo_play_back_down_involved_notification_group: "Diplomatiespiel-Nachgeben (beteiligt)"
 diplo_play_join_side_notification_group: "Diplomatiespiel (schließt sich Seite an)"
 diplo_play_abandon_side_notification_group: "Diplomatiespiel (verlässt Seite)"
 colony_notification_group: "Kolonie"
 parties_activated_notification_group: "Parteien aktiviert"
 country_revolution_notification_group: "Landesrevolution"
 country_secession_notification_group: "Landessezession"
 election_results_notification_group: "Wahlergebnisse"
 enactment_failed_group: "Gesetzesbeschluss gescheitert"
 harvest_condition_important_notification_group: "Erntebedingungen (Wichtig)"
 harvest_condition_notification_group: "Erntebedingungen"
 journal_entry_completed_notification_group: "Journaleinträge abgeschlossen"
 native_uprising_notification_group: "Einheimischenaufstand"
 spreading_technology_notification_group: "Sich verbreitende Technik"
 heir_born_notification_group: "Erbe geboren"
 new_ruler_notification_group: "Neuer Herrscher"
 character_died_notification_group: "Charakter gestorben"
 character_new_formation_notification_group: "Neue $concept_military_formation$ für Befehlshaber"
 character_exiled_notification_group: "Charakter ins Exil geschickt"
 agitator_spawned_notification_group: "Agitator erschienen"
 diplomatic_action_break_notification_group: "Diplomatenaktion-Pause"
 diplomatic_proposal_break_notification_group: "Diplomatischer-Vorschlag (Pause)"
 diplomatic_proposal_third_party_notification_group: "Diplomatischer Vorschlag (Dritte Partei)"
 diplomatic_pact_notification_group: "Diplomatiepakt"
 diplomatic_pact_third_party_notification_group: "Diplomatiepakt (Dritte Partei)"
 diplo_play_start_third_party_notification_group: "Diplomatiespiel-Beginn (Dritte Partei)"
 diplo_play_declare_neutrality_notification_group: "Neutralität in Diplomatiespiele erklären"
 diplo_play_war_start_third_party_notification_group: "Diplomatiespiele-Kriegsbeginn (Dritte Partei)"
 diplo_play_subject_notification_group: "Diplomatiespiel-Klientelland"
 country_swayed_notification_group: "Land beeinflusst"
 sway_offer_notification_group: "Beeinflussungsangebot"
 interest_notification_group: "Interesse"
 interest_third_party_notification_group: "Interesse (Dritte Partei)"
 colony_third_party_notification_group: "Kolonie (Dritte Partei)"
 company_prestige_goods_notification_group: "Kompanie-Prestigewaren"
 company_prosperity_bonus_notification_group: "Kompanie-Wohlstandsbonus"
 ig_trait_notification_group: "Interessengruppen-Eigenschaft"
 ig_influence_level_notification_group: "Interessengruppen-Einflussstufe"
 ig_movement_left_notification_group: "Interessengruppe verlässt Bewegung"
 ig_resigned_government_notification_group: "Interessengruppe verlässt Regierung"
 new_culture_obsession_notification_group: "Neue Kultur-Versessenheit"
 commander_order_invalidated_notification_group: "Befehlshaber-Befehle ungültig"
 commander_moved_to_other_front_notification_group: "Kommandant an andere Front verlegt"
 country_mobilization_notification_group: "Landesmobilisierung"
 country_conscription_notification_group: "Landeseinberufung"
 wargoal_notification_group: "Kriegsziel"
 commander_move_notification_group: "Befehlshaberverlegung"
 invasion_notification_group: "$concept_invasion$"
 convoy_raiders_intercepted_notification_group: "Konvoi-Räuber abgefangen"
 journal_entry_activation_notification_group: "Journaleintragsaktivierung"
 political_movement_notification_group: "Protestbewegung"
 country_owes_obligation_notification_group: "Land schuldet Verpflichtung"
 country_owed_obligation_notification_group: "Land wird Verpflichtung geschuldet"
 obligation_expired_notification_group: "Verpflichtung ausgelaufen"
 unification_candidate_notification_group: "Vereinigungskandidat"
 unification_support_notification_group: "Vereinigungsunterstützung"
 shipping_lane_formation_destination_invalidated_notification_group: "Formationsziel ungültig"
 ig_leader_memento_mori_notification_group: "Interessengruppen-Oberhaupt gestorben"
 convoys_raided_notification_group: "Konvois überfallen"
 price_report_notification_group: "Preisbericht"
 building_built_notification_group: "Gebäude gebaut"
 building_expanded_notification_group: "Gebäude erweitert"
 political_lobby_created_notification_group: "Politlobby geschaffen"
 political_lobby_disbanded_notification_group: "Politlobby aufgelöst"
 foreign_political_lobby_created_notification_group: "Ausländische Politlobby geschaffen"
 foreign_political_lobby_disbanded_notification_group: "Ausländische Politlobby aufgelöst"
 interest_group_joins_lobby_group: "Interessengruppe schließt sich Lobby an"
 interest_group_leaves_lobby_group: "Interessengruppe verlässt Lobby"
 war_participant_in_default_notification_group: "Kriegsbeteiligter ist zahlungsunfähig"
 formation_travel_notification_group: "Formationsreise"
 formation_could_not_find_other_formation_to_automatically_merge_into_notification_group: "Keine Formation zum Zusammenführen"
 fleet_notification_group: "Flotte"
 country_nationalized_building_group: "Land verstaatlichte Gebäude"
 on_impose_law_notification_group: "Gesetz auferlegt"
 power_bloc_principles_notification_group: "$concept_power_bloc_principles$"
 treaty_entered_into_force_notification_group: "Vertrag wurde unter Zwang eingegangen"
 country_withdrawn_from_treaty_notification_group: "Land zieht sich aus Vertrag zurück"
 treaty_proposal_declined_notification_group: "Vertragsvorschlag abgelehnt"
 treaty_dissolved_notification_group: "Vertrag aufgelöst"
 POP_TYPE_SUPPORT_TITLE: "#b [Concept('concept_interest_group', 'Interessengruppen')]-Unterstützung von [PopType.GetName] [Country.GetAltName('IN')]:#!"
 POP_TYPE_SUPPORT_SINGLE: "[INTEREST_GROUP.GetName]: $SUPPORT_PERCENTAGE|%1v$"
 POP_TYPE_SUPPORT_SINGLE_FORMAT: "$TAB$$POP_TYPE_SUPPORT_SINGLE$"
 POP_TYPE_SUPPORT_FORMAT: "$POP_TYPE_SUPPORT_TITLE$\n$BODY$"
 POP_TYPE_SUPPORT_NONE: "[PopType.GetName] [Country.GetAltName('IN')] unterstützen keine [concept_interest_group]"
 POP_TYPE_SUPPORTED_BY_OTHER_HEADER: "#header Andere unterstützte [Concept('concept_interest_group', '$concept_interest_groups$')]#!\n$TOOLTIP_DELIMITER$"
 POP_TYPE_SUPPORTED_BY_OTHER: "$TAB$Andere $concept_interest_groups$: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $OTHER_PERCENTAGE|%1v$#!#!"
 POP_TYPE_IN_PLAYER_COUNTRY: "#b „[PopType.GetName]“ [GetPlayer.GetAltName('IN')]#!:\nBevölkerung: [PopType.GetPopulation(GetPlayer.Self)|kv]\n[concept_political_strength]: [PopType.GetPolStr(GetPlayer.Self)|kv]\n\n[PopType.GetStrataBreakdownInCountry(GetPlayer.Self)]\n\n[PopType.GetInterestGroupSupportDesc(GetPlayer.Self)]"
 POP_TYPE_IN_BUILDING: "#b „[PopType.GetName]“ [Building.GetState.GetCountry.GetAltName('IN')]#!:\n$TAB$$TAB$[concept_pop]: [PopType.GetPopulation(Building.GetState.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_workforce]: [PopType.GetWorkforce(Building.GetState.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_dependents]: [PopType.GetDependents(Building.GetState.GetCountry)|kv]\n$TAB$$TAB$[concept_political_strength]: [PopType.GetPolStr(Building.GetState.GetCountry)|kv]\n\n[PopType.GetStrataBreakdownInCountry(Building.GetState.GetCountry)][SelectLocalization(Building.GetState.GetCountry.IsPlayer, 'POP_TYPE_IN_BUILDING_SUPPORT', '')]"
 POP_TYPE_IN_BUILDING_SUPPORT: "\n\n[PopType.GetInterestGroupSupportDesc(Building.GetState.GetCountry)]"
 POP_TYPE_IN_BUILDING_HEADER: "[PopListItem.GetWorkingAdultsPopSize|vD] [PopType.GetNameNoIcon] in [Building.GetName]"
 POP_TYPE_IN_STATE: "#b „[PopType.GetName]“ [State.GetCountry.GetAltName('IN')]#!:\n$TAB$$TAB$Bevölkerung: [PopType.GetPopulation(State.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_workforce]: [PopType.GetWorkforce(State.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_dependents]: [PopType.GetDependents(State.GetCountry)|kv]\n$TAB$$TAB$[concept_political_strength]: [PopType.GetPolStr(State.GetCountry)|kv]\n\n[PopType.GetStrataBreakdownInCountry(State.GetCountry)][SelectLocalization(State.GetCountry.IsPlayer, 'POP_TYPE_IN_STATE_SUPPORT', '')]"
 POP_TYPE_IN_STATE_SUPPORT: "\n\n[PopType.GetInterestGroupSupportDesc(State.GetCountry)]"
 POP_TYPE_IN_STATE_HEADER: "[PopListItem.GetTotalPopSize|vD] [PopType.GetNameNoIcon] in [State.GetName]"
 POP_TYPE_IN_CULTURE: "[SelectLocalization(GreaterThan_int64(Culture.GetPopulation(GetPlayer.Self), '(int64)0'), 'POP_TYPE_IN_CULTURE_PLAYER_POPULATION', 'POP_TYPE_IN_CULTURE_NO_PLAYER_POPULATION')]"
 POP_TYPE_IN_CULTURE_NO_PLAYER_POPULATION: "Es gibt keine [Culture.GetName|l]en [Concept('concept_pop', '$concept_pops$')] [GetPlayer.GetAltName('IN')]"
 POP_TYPE_IN_CULTURE_PLAYER_POPULATION: "#b [Culture.GetName|U]e [Concept('concept_pop', '$concept_pops$')] [GetPlayer.GetAltName('IN')]:#!\n$TAB$$TAB$Bevölkerung: [Culture.GetPopulation(GetPlayer.Self)|kv]\n$TAB$$TAB$[concept_political_strength]: [Culture.GetPolStr(GetPlayer.Self)|kv]\n\n[PopType.GetStrataBreakdownInCountry(GetPlayer.Self)]"
 POP_TYPE_IN_CULTURE_HEADER: "[PopListItem.GetTotalPopSize|vD] [Culture.GetName]e [PopType.GetNameNoIcon]"
 POP_TYPE_IN_RELIGION: "[SelectLocalization(GreaterThan_int64(Religion.GetPopulation(GetPlayer.Self), '(int64)0'), 'POP_TYPE_IN_RELIGION_PLAYER_POPULATION', 'POP_TYPE_IN_RELIGION_NO_PLAYER_POPULATION')]"
 POP_TYPE_IN_RELIGION_NO_PLAYER_POPULATION: "Es gibt keine [Concept('concept_pop','$concept_pops$')] mit der Religion „[Religion.GetName]“ [GetPlayer.GetAltName('IN')]"
 POP_TYPE_IN_RELIGION_PLAYER_POPULATION: "#b [Concept('concept_pop','$concept_pops$')] mit der Religion „[Religion.GetName]“ [GetPlayer.GetAltName('IN')]:#!\n$TAB$$TAB$Bevölkerung: [Religion.GetPopulation(GetPlayer.Self)|kv]\n$TAB$$TAB$[concept_political_strength]: [Religion.GetPolStr(GetPlayer.Self)|kv]\n\n[PopType.GetStrataBreakdownInCountry(GetPlayer.Self)]"
 POP_TYPE_IN_RELIGION_HEADER: "[PopListItem.GetTotalPopSize|vD] [PopType.GetNameNoIcon] ([Religion.GetName])"
 POP_TYPE_IN_IG: "#b „[PopType.GetName]“ [InterestGroup.GetCountry.GetAltName('IN')]#!:\n$TAB$$TAB$Bevölkerung: [PopType.GetPopulation(InterestGroup.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_workforce]: [PopType.GetWorkforce(InterestGroup.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_dependents]: [PopType.GetDependents(InterestGroup.GetCountry)|kv]\n$TAB$$TAB$[concept_political_strength]: [PopType.GetPolStr(InterestGroup.GetCountry)|kv]\n\n[PopType.GetStrataBreakdownInCountry(InterestGroup.GetCountry)][SelectLocalization(InterestGroup.GetCountry.IsPlayer, 'POP_TYPE_IN_IG_SUPPORT', '')]"
 POP_TYPE_IN_IG_SUPPORT: "\n\n[PopType.GetInterestGroupSupportDesc(InterestGroup.GetCountry)]"
 POP_TYPE_IN_IG_HEADER: "[PopListItem.GetTotalPopSize|vD] [PopType.GetNameNoIcon] unterstützen [InterestGroup.GetNameNoIcon]"
 POP_TYPE_TOOLTIP_SLAVES_AS_LABOR: "\n\n#italic Bestimmte [Concept('concept_building', '$concept_buildings$')] beschäftigen [PopType.GetNameNoIcon], um einen anderen [concept_profession] zu ersetzen.#!"
 YOU_HAVE_RESEARCHED_THIS: "#italic Wir haben diese Technik erforscht#!"
 CURRENTLY_BEING_RESEARCHED: "Wird derzeit erforscht: $TECHNOLOGY_PROGRESS_WITH_GAIN$"
 LENS_ACTION_NUMBER: "[LensOption.GetText|v]\n[GetDescriptiveText(LensOption.GetMapInteraction)]\nDiese Aktion hat #v [LensOption.GetNumberOfSelections|+]#! gültige Ziele"
 BUILDING_ACTION_NUMBER: "#header [BuildingType.GetName|v] bauen#!\nDen [concept_state] auswählen, in dem das Gebäude „[BuildingType.GetName|v]“ errichtet werden soll\nKann in #v [BuildingType.GetNumAvailableStatesForBuilding|+]#! verschiedenen [Concept('concept_state', '$concept_states$')] gebaut werden"
 IS_ACTIVE: "$TEXT$ (#P Aktiv#!)"
 IS_INACTIVE: "$TEXT$ (Inaktiv)"
 PRODUCTION_METHOD_OPTIONS: "Wir haben #bold #P [ProductionMethodGroup.GetNumAvailableOptions(Building.AccessSelf)]#!#! mögliche Optionen für die Produktionsmethodengruppe „[ProductionMethodGroup.GetName]“"
 PRODUCTION_METHOD_OPTIONS_BULK: "Wir haben #bold #P [ProductionMethodGroup.GetNumAvailableOptionsForBuildingType(BuildingProductionMethodsEntry.GetBuildingType)]#!#! Optionen für „[ProductionMethodGroup.GetName]“"
 FRONT_DESC_LAND_FORMAT: "[FRONT.GetName]"
 PEACE_ACCEPTANCE_YES: "#bold #P +1.000#!#!"
 PEACE_ACCEPTANCE_SCORE: "$VAL|=+$"
 WAR_SUPPORT: "[concept_war_support]"
 ACCEPTANCE: "Akzeptanz"
 INSTITUTION_NAME_AND_LEVEL: "[Institution.GetName] (Stufe [Institution.GetInvestmentLevel])"
 EXPAND_BUILDING_TYPE: "#BOLD [BuildingType.GetNameNoFormatting]#! erweitern"
 YEARLY_AVERAGE_EARNINGS_PER_EMPLOYEE: "Durchschnittl. Jahreseinn. / Angestelltem"
 SOCIETY: "Gesellschaft"
 OTHER: "Sonstige"
 OTHER_TITLE_COLON: "#title Sonstige:#!"
 TAB_1: "#header Reiter 1#!"
 TAB_2: "#header Reiter 2#!"
 TAB_3: "#header Reiter 3#!"
 TAB_4: "#header Reiter 4#!"
 TAB_5: "#header Reiter 5#!"
 GO_TO_DETAILS: "#header Zu Details gehen#!"
 CONSTRUCTION_POINTS: "@construction! $POINTS|0v$ [concept_construction]"
 CONSTRUCTION_DURATION: "$WEEKS$ Woche(n)"
 CONSTRUCTION_DURATION_UNKNOWN: "Unbekannt"
 CONSTRUCTION_DURATION_PAUSED: "Pausiert"
 CONSTRUCTION_CAMP: "Bauzentrum"
 MOVE_UP: "#header In der [concept_construction_queue] nach oben bewegen#!\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(GetDesc(ConstructionQueueElement.MoveUp), '\n\n')]#I Klicken, um es in der Baureihe eins nach oben zu bewegen#!\n#I Alt+Klick, um es in der Baureihe nach ganz oben zu bewegen#!"
 MOVE_DOWN: "#header In der [concept_construction_queue] nach unten bewegen#!\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(GetDesc(ConstructionQueueElement.MoveDown), '\n\n')]#I Klicken, um es in der Baureihe eins nach unten zu bewegen#!\n#I Alt+Klick, um es in der Baureihe nach ganz unten zu bewegen#!"
 CANCEL_CONSTRUCTION: "Bau abbrechen"
 CONSTRUCTION_QUEUE_FOREIGN_GOVERNMENT_CONSTRUCTION_TT: "[ConstructionQueueElement.GetInvestorCountry.GetAdjective|U]er [concept_government_construction]"
 PLAYED_BY_PLAYER_DESC: "Von #v $PLAYER$#! gespielt"
 PLAYED_BY_AI_DESC: "Von der KI kontrolliert"
 OBSERVED_BY_PLAYER_DESC: "Von #v $PLAYER$#! beobachtet"
 PLAYERS: "Spieler"
 NO_COLONY_GROWTH: "Land generiert kein [concept_colonial_growth]"
 COLONY_GROWTH_DESC: "[COUNTRY.GetAltName('VON')|U] pro [concept_colony] erzeugtes [concept_colonial_growth]: #tooltippable #tooltip:[COUNTRY.GetTooltipTag],COLONY_GROWTH_DETAIL_TIT $VALUE|%v$#!#!\n"
 MAX_COLONY_GROWTH_CLAMPED: "Max. Wachstum pro Tag: #variable $MAX|%$#!"
 COLONY_GROWTH_DETAIL_TIT: "[Country.GetColonialGrowthDetails]"
 COLONY_GROWTH_DETAIL_DESC: "#header [concept_colonial_growth] [COUNTRY.GetAltName('IN')]#!\n$VALUE|%v$ pro Tag pro [concept_colony]\n$TOOLTIP_DELIMITER$\n#indent_newline:3 Aufgrund von:\n$TOTAL_INCORPORATED_POPULATION|Dv$ [Concept('concept_incorporated_state','inkorporierter')] [Concept('concept_pop','$concept_population$')]\n[COUNTRY.GetActiveLawFromGroup('lawgroup_colonization').GetName|U]\n„[COUNTRY.GetActiveLawFromGroup('lawgroup_colonization').GetInstitution.GetName]“-Stufe [COUNTRY.GetActiveLawFromGroup('lawgroup_colonization').GetInstitution.GetInvestmentLevel|v]#!\n\nWachstum wird aufgeteilt zwischen #variable $NUM_COLONIES$#! Kolonien."
 COLONY_GROWTH_COLONIZATION_RIGHTS: "[concept_colonial_growth] wird mit x$MULT|1v$ multipliziert aufgrund von [Concept('concept_colonization_rights', 'Kolonisierungsrechten')]"
 COLONY_GROWTH_COMPANY_COLONIZATION: "[concept_colonial_growth] wird mit x$MULT|1v$ multipliziert aufgrund der Kompanie-Charta, die diesen Staat kolonisiert"
 COLONY_GROWTH_REGION_SIZE: "[concept_colonial_growth] wird mit x$MULT|1v$ multipliziert aufgrund von $NUM_PROVINCES|v$ [Concept('concept_province','$concept_provinces$')] in der SR „[StateRegion.GetName]“"
 COLONY_GROWTH_POPULATION_SIZE: "[concept_colonial_growth] wird mit x$MULT|1v$ multipliziert aufgrund von $POPULATION|Dv$ [Concept('concept_pop','$concept_population$')] in relevanten [Concept('concept_state','$concept_states$')] in der SR „[StateRegion.GetName]“"
 MOBILIZED_BATTALIONS_WITH_GENERAL_FULL_COUNT: "Mit [Concept('concept_general', 'Generälen')]: @battalions!$TOTAL|v$"
 MOBILIZED_BATTALIONS_WITH_GENERAL_NOT_FULL_COUNT: "Mit [Concept('concept_general', 'Generälen')]: @battalions!$FULLY_MOBILIZED|v$/$TOTAL|v$"
 TOTAL_FLOTILLAS: "Flottillen insgesamt"
 MILITARY_FORMATIONS_ARMY_HEADER: "[Concept('concept_army', '$concept_armies$')] ([GetDataModelSize(Country.GetMilitaryFormationsArmy)|v0])"
 MILITARY_FORMATIONS_FLEET_HEADER: "[Concept('concept_fleet', '$concept_fleets$')] ([GetDataModelSize(Country.GetMilitaryFormationsFleet)|v0])"
 CANAL_WRONG_STATE_REGION: "#N Kann nur in der Staatsregion „[STATE_REGION.GetName]“ errichtet werden#!"
 BULK_RAISE_CONSCRIPTS: "@conscripts![Concept('concept_conscript_battalion','$concept_conscript_battalions_short$')] ausheben"
 MOBILIZE_ARMY: "Mobilisieren"
 MOBILIZE_ARMY_TOOLTIP: "#header $concept_mobilize_army$#!\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(GetDesc(MilitaryFormation.Mobilize), '\n\n')]$concept_mobilize_army_desc$[ConcatIfNeitherEmpty('\n\nGeschätzte Kosten/Woche:\n', MilitaryFormation.GetEstimatedMobilizationCostDesc)]"
 CANNOT_MOBILIZE_ARMY_DEMOBILIZING: "[MilitaryFormation.GetDemobilizationStatus]"
 ARMY_IS_DEMOBILIZING: "[SelectLocalization(MilitaryFormation.IsTraveling,'ARMY_IS_DEMOBILIZING_IN_TRANSIT','ARMY_IS_DEMOBILIZING_NOT_IN_TRANSIT')] demobilisiert noch $DAYS_LEFT|v0$ Tag(e)."
 ARMY_IS_DEMOBILIZING_IN_TRANSIT: "[MilitaryFormation.GetName] kehrt nach Hause zurück. Sobald sie angekommen ist, wird sie Folgendes tun:"
 ARMY_IS_DEMOBILIZING_NOT_IN_TRANSIT: "[MilitaryFormation.GetName] tut immer noch Folgendes:"
 DEMOBILIZE_ARMY: "Demobilisieren"
 DEMOBILIZE_ARMY_TOOLTIP: "#header $concept_mobilize_army_demobilize$#!\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(GetDesc(MilitaryFormation.Demobilize), '\n\n')]$concept_mobilize_army_desc$"
 MOBILIZE_ARMY_COST: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] @money!$COST|K-=$#!#!"
 MOBILIZE_ARMY_GOODS_COST_ENTRY: "$GOODS$: @money! #v $COST|-D$#!"
 MOBILIZE_SELECTED_ARMIES_TOOLTIP: "#header [GetNumSelectedArmies|v] ausgewählte [Concept('concept_army', '$concept_armies$')] [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilize$')|l]#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(GreaterThan_int32(GetNumSelectedArmiesWithMobilizationActive, '(int32)0'), 'X_ARMIES_ALREADY_MOBILIZED'))]\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(AddLocalizationIf(GreaterThan_int32(GetNumSelectedArmiesWithMobilizationBlocked, '(int32)0'), 'X_ARMIES_UNABLE_TO_MOBILIZE'), '\n\n')][ConcatIfNeitherEmpty(GetDesc(MobilizeSelectedArmies), '\n\n')]$concept_mobilize_army_desc$"
 X_ARMIES_ALREADY_MOBILIZED: "[GetNumSelectedArmiesWithMobilizationActive|v] [Concept('concept_army', '$concept_armies$')] sind bereits [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')|l] oder $concept_mobilize_battalion_mobilize$"
 X_ARMIES_UNABLE_TO_MOBILIZE: "[GetNumSelectedArmiesWithMobilizationBlocked|v] [Concept('concept_army', '$concept_armies$')] können nicht [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilize$')|l]"
 DEMOBILIZE_SELECTED_ARMIES_TOOLTIP: "#header [GetNumSelectedArmies|v] ausgewählte [Concept('concept_army', '$concept_armies$')] [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')|l]#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(GreaterThan_int32(GetNumSelectedArmiesWithDemobilizationActive, '(int32)0'), 'X_ARMIES_ALREADY_DEMOBILIZED'))]\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(AddLocalizationIf(GreaterThan_int32(GetNumSelectedArmiesWithDemobilizationBlocked, '(int32)0'), 'X_ARMIES_UNABLE_TO_DEMOBILIZE'), '\n\n')][ConcatIfNeitherEmpty(GetDesc(DemobilizeSelectedArmies), '\n\n')]$concept_mobilize_army_desc$"
 X_ARMIES_ALREADY_DEMOBILIZED: "[GetNumSelectedArmiesWithDemobilizationActive|v] [Concept('concept_army', '$concept_armies$')] sind bereits [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilized$')|l] oder demobilisieren"
 X_ARMIES_UNABLE_TO_DEMOBILIZE: "[GetNumSelectedArmiesWithDemobilizationBlocked|v] [Concept('concept_army', '$concept_armies$')] können nicht [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')|l]"
 GENERAL_BUSY_NAVAL_INVASION: "[Character.GetFirstName] ist mit der Teilnahme an einer #v Marine-Invasion#! beschäftigt"
 COMMANDER_BUSY_BATTLE: "[Character.GetFirstName] ist mit der Teilnahme an einer [concept_battle] beschäftigt"
 CANNOT_MOBILIZE_ARMIES_NO_DIPLO_PLAY: "[concept_country] muss Teil eines [Concept('concept_diplomatic_play', 'Diplomatiespiels')] sein"
 CANNOT_MOBILIZE_ARMY_NOT_AN_ARMY: "Nur [Concept('concept_army', '$concept_armies$')] können [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')|l] werden"
 CANNOT_MOBILIZE_ARMY_ALREADY_MOBILIZED: "[MilitaryFormation.GetName] ist bereits [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')|l]"
 CANNOT_MOBILIZE_ARMY_OCCUPIED: "[HQ.GetName] steht nicht unter unserer Kontrolle"
 CANNOT_MOBILIZE_ARMY_NO_BATTALIONS: "[MilitaryFormation.GetName] hat keine @battalions![Nbsp][Concept('concept_battalion','$concept_battalions$')] zum [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilize$')|U]"
 CANNOT_MOBILIZE_ARMY_NO_ARMY: "Keine [concept_army] im [concept_country] zum [Concept('concept_mobilize_army', 'Mobilisieren')]"
 CANNOT_MOBILIZE_ARMY_ALL_COMMANDERS_BUSY: "Alle Befehlshaber dieser Armee sind [concept_busy|l]"
 CANNOT_MOBILIZE_ARMIES_ALREADY_MOBILIZED: "Alle [Concept('concept_army', '$concept_armies$')] sind bereits [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')|l]"
 CANNOT_MOBILIZE_ALL_ARMIES_DEMOBILIZING: "Alle [Concept('concept_army', '$concept_armies$')] sind noch in der Demobilisierung"
 CANNOT_DEMOBILIZE_ARMIES_ALREADY_DEMOBILIZED: "Alle [Concept('concept_army', '$concept_armies$')] sind bereits [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilized$')|l]"
 CANNOT_DEMOBILIZE_ARMY_INVOLVED_IN_NAVAL_INVASION: "Kann „[MilitaryFormation.GetName]“ nicht [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')|l]: Man ist an einer [concept_invasion] beteiligt"
 CANNOT_DEMOBILIZE_ARMY_NO_ARMY: "Keine [concept_army] im [concept_country] zum [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')|U]"
 BUILDING_MOBILIZED_BATTALIONS_TOOLTIP: "#header #v [Building.GetNumberOfFullyMobilizedBattalions]#! / [Building.GetNumberOfCombatUnits] [concept_fully_mobilized_battalions] durch [Building.GetState.GetName]#!\n$TOOLTIP_DELIMITER$\n#v [Building.GetNumberOfFullyMobilizedBattalions]#! [Concept('concept_battalion', '$concept_battalions$')] sind [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$')] von insgesamt #v [Building.GetNumberOfCombatUnits]#! durch „[Building.GetName]“ in [Building.GetState.GetName]"
 GENERAL_TRAVELING: "Auf Reise"
 GENERAL_TRAVEL_DAY: "Tag"
 GENERAL_TRAVEL_DAYS: "Tagen"
 TRAVEL_TIME_LABEL: "#v $DAYS$ d#!"
 FORMATION_TRAVELING: "Unterwegs"
 FORMATION_TRAVELING_FRONT_PANEL: "$FORMATION_TRAVELING$ (#v [MilitaryFormation.GetTravelDaysLeft] Tage#!)"
 FORMATION_TRAVELING_TOOLTIP_LESS_THAN_ONE_DAY: "[MilitaryFormation.GetName|v] kommt in weniger als #v 1 Tag#! in [Front.GetName] an."
 ACTIVATE_CONSCRIPTION_CENTER: "Einberufungszentrum aktivieren"
 ACTIVATE_CONSCRIPTION_CENTER_TOOLTIP: "#header [concept_conscription_center] aktivieren#!\n$TOOLTIP_DELIMITER$\nGröße: [Building.GetExpansionLevel|v]\nEinheitenkapazität: [Building.GetCombatUnitCapacityDesc]"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTERS_NO_LAW: "[concept_country] muss ein Einberufungsgesetz verabschiedet haben"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTERS_NO_DIPLO_PLAY: "[concept_country] muss Teil eines [Concept('concept_diplomatic_play', 'Diplomatiespiels')] sein"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTER_NO_CONSCRIPTION_CENTER: "In [State.GetName] können keine [Concept('concept_conscript_battalion', 'Wehrpflichtigen-Bataillone')] ausgehoben werden, da es hier nicht genügend Zivilbevölkerung gibt"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTER_OCCUPIED: "[State.GetName] ist vom Feind besetzt"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTER_ALREADY_ACTIVE: "[State.GetName] hat bereits eine [Concept('concept_conscription_center', 'Einberufung')]"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTERS_NO_CONSCRIPTION_CENTER: "Wir haben keine verfügbaren [Concept('concept_conscription_center', 'Einberufungszentren')]"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTERS_ALREADY_ACTIVE: "Es sind bereits alle [Concept('concept_conscription_center', '$concept_conscription_centers$')] aktiv"
 CONSCRIPTION_COST_WITH_BREAKDOWN: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] @money!$COST|K+=$#!#!"
 CONSCRIPTION_COST_NO_BREAKDOWN: "@money!$COST|K+=$"
 CONSCRIPTION_COST_ITEM: "Gebäude der Art „[Building.GetName]“ in [Building.GetState.GetName]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] @money!$COST|K+=$#!#!"
 CANNOT_ACTIVATE_CONSCRIPTION_MAX_NUM: "„[State.GetName]“ hat ein [concept_conscription_limit] von @conscripts!$MAX_CONSCRIPTS|v$"
 RAISE_CONSCRIPTS_COMMAND_DESC: "$ERRORS$"
 RAISE_CONSCRIPTS_COMMAND_FORMATION_ERRORS: "„[MilitaryFormation.GetName|U]“ kann keine [Concept('concept_conscript_battalion','$concept_conscript_battalions_short$n')] ausheben[AddTextIf(Not(StringIsEmpty('$ERRORS$')), '\n #indent_newline:3 $ERRORS$#!')]"
 RAISE_CONSCRIPTS_ALREADY_RAISED: "Haben bereits [Concept('concept_conscript_battalion','$concept_conscript_battalions$')] ausgehoben"
 RAISE_CONSCRIPTS_NOT_MOBILIZED: "Nur [Concept('concept_mobilize_army','$concept_mobilize_army_mobilized$e')|l] [Concept('concept_military_formation','$concept_military_formations$')] können [Concept('concept_conscript_battalion','$concept_conscript_battalions$')] ausheben"
 RAISE_CONSCRIPTS_IN_SELECTED_ARMIES_TOOLTIP: "#header [Concept('concept_conscript_battalion','$concept_conscript_battalions$')] für [GetNumSelectedFormations|v] ausgewählte [Concept('concept_army', '$concept_armies$')] ausheben#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(GreaterThan_int32(GetNumSelectedArmiesWithRaiseConscriptsActive, '(int32)0'), 'CONSCRIPTS_ALREADY_RAISED_IN_X_ARMIES'))]\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(AddLocalizationIf(GreaterThan_int32(GetNumSelectedArmiesWithRaiseConscriptsBlocked, '(int32)0'), 'UNABLE_TO_RAISE_CONSCRIPTS_IN_X_ARMIES'), '\n\n')][ConcatIfNeitherEmpty(GetDesc(RaiseConscriptsInSelectedArmies), '\n\n')][Concept('concept_conscript_battalion','$concept_conscript_battalions_short$')] bleiben aktiv, bis ihre [concept_army] [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilized$')|l] wird"
 CONSCRIPTS_ALREADY_RAISED_IN_X_ARMIES: "[Concept('concept_conscript_battalion','$concept_conscript_battalions_short$')] wurden bereits für [GetNumSelectedArmiesWithRaiseConscriptsActive|v] [Concept('concept_army', '$concept_armies$')] ausgehoben"
 UNABLE_TO_RAISE_CONSCRIPTS_IN_X_ARMIES: "Konnte keine [Concept('concept_conscript_battalion','$concept_conscript_battalions_short$n')] für [GetNumSelectedArmiesWithRaiseConscriptsBlocked|v] [Concept('concept_army', '$concept_armies$')] ausheben"
 MILITARY_FORMATION_SET_STRATEGIC_OBJECTIVE: "Ein $concept_strategic_objective$ zuweisen"
 MILITARY_FORMATION_SET_STRATEGIC_OBJECTIVE_TOOLTIP: "#header Ein [concept_strategic_objective] zuweisen#!\n[SelectLocalization(MilitaryFormation.GetStrategicObjective.IsValid, 'ACTIVE_STRATEGIC_OBJECTIVE', 'NO_STRATEGIC_OBJECTIVE_ACTIVE')]"
 NO_STRATEGIC_OBJECTIVE_ACTIVE: "Derzeit keine aktiven\n$TOOLTIP_DELIMITER$\nEinen [concept_state] als $concept_strategic_objective$ für „[MilitaryFormation.GetName]“ auswählen\n[MilitaryFormation.GetNumStrategicObjectiveSelections|+] $concept_states$ verfügbar"
 ACTIVE_STRATEGIC_OBJECTIVE: "Hat [MilitaryFormation.GetStrategicObjective.GetCountry.GetFlagTextIcon] „[MilitaryFormation.GetStrategicObjective.GetName]“ als $concept_strategic_objective$\n$TOOLTIP_DELIMITER$\nKlicken, um $concept_strategic_objective_short$-[concept_state] auszuwählen oder zu entfernen\n[MilitaryFormation.GetNumStrategicObjectiveSelections|+] andere $concept_states$ verfügbar"
 STATE_SET_STRATEGIC_OBJECTIVE: "Das [concept_strategic_objective] zuweisen"
 STATE_SET_STRATEGIC_OBJECTIVE_TOOLTIP: "#header „[State.GetName]“ als das [concept_strategic_objective] unserer [Concept('concept_military_formation','$concept_military_formations$')] zuweisen#!\n$TOOLTIP_DELIMITER$\n[GetSelectedFormationsList]\n\n$concept_strategic_objective_desc$"
 STATE_CANCEL_STRATEGIC_OBJECTIVE: "Das [concept_strategic_objective] abbrechen"
 STATE_CANCEL_STRATEGIC_OBJECTIVE_TOOLTIP: "#header [concept_strategic_objective] in „[State.GetName]“ für unsere [Concept('concept_military_formation','$concept_military_formations$')] abbrechen#!\n$TOOLTIP_DELIMITER$\n[GetSelectedFormationsList]\n\n$concept_strategic_objective_desc$"
 SELECTED_STRATEGIC_OBJECTIVE: "Hat [MilitaryFormation.GetStrategicObjective.GetCountry.GetFlagTextIcon] „[MilitaryFormation.GetStrategicObjective.GetName]“ als [concept_strategic_objective]"
 PLAN_INVASION_RIGHT_CLICK_TOOLTIP: "#title #v [concept_invasion] in „[State.GetName]“ planen#!#!\n$TOOLTIP_DELIMITER$\n$plan_invasion_lens_option_tooltip$[ConcatIfNeitherEmpty('\n\n', '$ERRORS$')]"
 activate_conscription_centers_lens_option: "Wehrpflichtige rekrutieren"
 activate_conscription_centers_lens_option_tooltip: "#header Wehrpflichtige rekrutieren#!\n$TOOLTIP_DELIMITER$\nDie [Concept('concept_state', '$concept_states$')] auswählen, in denen [Concept('concept_conscription_center', '$concept_conscription_centers$')] aktiviert werden sollen"
 recruit_generals_lens_option: "Generäle rekrutieren"
 recruit_generals_lens_option_tooltip: "Rekrutiert Generäle für ein [concept_hq]."
 recruit_admirals_lens_option: "Admiräle rekrutieren"
 recruit_admirals_lens_option_tooltip: "Rekrutiert Admiräle für ein [concept_hq]."
 plan_invasion_lens_option: "$concept_invasion$ planen"
 plan_invasion_lens_option_tooltip: "Planung einer $concept_invasion$ beginnen"
 EVENT_HIGHLIGHTED_OPTION: "Die Option ist verfügbar, weil:"
 EVENT_HIGHLIGHTED_OPTION_NOT: "Die Option ist nicht verfügbar, weil:"
 notification_country_mobilization_name: "[SCOPE.sCountry('actor').GetAltName('NOM')|U] beginnt [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilization$')]:"
 notification_country_mobilization_desc: "Unser [SelectLocalization(SCOPE.sDiplomaticPlay('diplomatic_play').AreOnSameSide(GetPlayer, SCOPE.sCountry('actor')), 'Verbündeter', 'Feind')] – [SCOPE.sCountry('actor').GetAltName('NOM')] – beginnt mit der [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilizing$')] seiner [Concept('concept_general', '$concept_generals$')]."
 notification_country_mobilization_tooltip: "#header $notification_country_mobilization_name$#!\n$notification_country_mobilization_desc$"
 notification_country_conscription_name: "[SCOPE.sCountry('actor').GetAltName('NOM')|U] beginnt mit der [Concept('concept_conscription_center', '$concept_conscription_center_conscription$')]"
 notification_country_conscription_desc: "Unser [SelectLocalization(SCOPE.sDiplomaticPlay('diplomatic_play').AreOnSameSide(GetPlayer , SCOPE.sCountry('actor')), 'Verbündeter', 'Feind')] – [SCOPE.sCountry('actor').GetAltName('NOM')] – beginnt, seine [Concept('concept_conscription_center', '$concept_conscription_centers$')] zu aktivieren."
 notification_country_conscription_tooltip: "#header $notification_country_conscription_name$#!\n$notification_country_conscription_desc$"
 notification_country_revolution_name: "[concept_revolution]!"
 notification_country_revolution_desc: "Die [concept_revolution] ist nah!"
 notification_country_revolution_tooltip: "#header $notification_country_revolution_name$#!\n$notification_country_revolution_desc$"
 notification_country_secession_name: "[concept_secession]!"
 notification_country_secession_desc: "[SCOPE.GetRootScope.GetCivilWar.GetUprisingCountry.GetAltName('NOM')|U] hat sich abgespalten!"
 notification_country_secession_tooltip: "#header $notification_country_secession_name$#!\n$notification_country_secession_desc$"
 notification_wargoal_added_name: "Neues [concept_war_goal]!"
 notification_wargoal_added_desc: "[SCOPE.sCountry('actor').GetAltName('NOM')|U] hat ein neues [concept_war_goal] erhalten."
 notification_wargoal_added_tooltip: "#header $notification_wargoal_added_name$#!\n$notification_wargoal_added_desc$"
 notification_wargoal_removed_name: "[concept_war_goal] verloren!"
 notification_wargoal_removed_desc: "[SCOPE.sCountry('actor').GetAltName('NOM')|U] hat ein [concept_war_goal] verloren."
 notification_wargoal_removed_tooltip: "#header $notification_wargoal_removed_name$#!\n$notification_wargoal_removed_desc$"
 notification_election_results_name: "[concept_election]!"
 notification_election_results_desc: "Die [concept_election]-Ergebnisse aus [SCOPE.GetRootScope.GetCountry.GetAltName('DAT')] sind eingetroffen!\n[SCOPE.GetRootScope.GetCountry.GetLastElectionResultsTooltip]"
 notification_election_results_tooltip: "#header $notification_election_results_name$#!\n$notification_election_results_desc$"
 notification_invasion_failed_name: "Gescheiterte [concept_invasion]"
 notification_invasion_failed_desc: "Die $concept_invasion$ von „[SCOPE.GetRootScope.GetInvasion.GetTargetState.GetNameWithCountryFlag]“ ist #n gescheitert#!. Beteiligte [Concept('concept_military_formation','$concept_military_formations$')] verlegen ins nächste [Concept('concept_hq', '$concept_hqs$')]."
 notification_invasion_failed_tooltip: "#header $notification_invasion_failed_name$#!\n$notification_invasion_failed_desc$"
 notification_invasion_succeeded_name: "Erfolgreiche [concept_invasion]"
 notification_invasion_succeeded_desc: "Die $concept_invasion$ von „[SCOPE.GetRootScope.GetInvasion.GetTargetState.GetNameWithCountryFlag]“ war #g erfolgreich#! und wir haben einen Brückenkopf gesichert."
 notification_invasion_succeeded_tooltip: "#header $notification_invasion_succeeded_name$#!\n$notification_invasion_succeeded_desc$"
 notification_invasion_started_against_us_name: "[SCOPE.GetRootScope.GetInvasion.GetInvaderCountry.GetAdjective|U]e [concept_invasion] gegen uns"
 notification_invasion_started_against_us_desc: "[SCOPE.GetRootScope.GetInvasion.GetInvaderCountry.GetAltName('NOM')|U] hat in „[SCOPE.GetRootScope.GetInvasion.GetTargetState.GetName]“ eine $concept_invasion$ begonnen."
 notification_invasion_started_against_us_tooltip: "#header $notification_invasion_started_against_us_name$#!\n$notification_invasion_started_against_us_desc$"
 notification_invasion_started_name: "[SCOPE.GetRootScope.GetInvasion.GetInvaderCountry.GetAdjective|U]e [concept_invasion]"
 notification_invasion_started_desc: "[SCOPE.GetRootScope.GetInvasion.GetInvaderCountry.GetAltName('NOM')|U] hat in „[SCOPE.GetRootScope.GetInvasion.GetTargetState.GetNameWithCountryFlag]“ eine $concept_invasion$ begonnen."
 notification_invasion_started_tooltip: "#header $notification_invasion_started_name$#!\n$notification_invasion_started_desc$"
 notification_our_convoy_raiders_intercepted_name: "Unsere Konvoi-Räuber wurden abgefangen"
 notification_our_convoy_raiders_intercepted_desc: "[SCOPE.sCharacter('defender_commander').GetFullName] wurde vom feindlichen [concept_admiral] [SCOPE.sCharacter('attacker_commander').GetFullName] bei [Concept('concept_raid_convoys', 'Konvoi-Überfällen')] in der SR „[SCOPE.sStrategicRegion('region').GetName]“ abgefangen."
 notification_our_convoy_raiders_intercepted_tooltip: "#header $notification_our_convoy_raiders_intercepted_name$#!\n$notification_our_convoy_raiders_intercepted_desc$"
 notification_enemy_convoy_raiders_intercepted_name: "Feindliche Konvoi-Räuber wurden abgefangen"
 notification_enemy_convoy_raiders_intercepted_desc: "[SCOPE.sCharacter('attacker_commander').GetFullName] hat den feindlichen [concept_admiral] [SCOPE.sCharacter('defender_commander').GetFullName] bei [Concept('concept_raid_convoys', 'Konvoi-Überfällen')] in der SR „[SCOPE.sStrategicRegion('region').GetName]“ abgefangen."
 notification_enemy_convoy_raiders_intercepted_tooltip: "#header $notification_enemy_convoy_raiders_intercepted_name$#!\n$notification_enemy_convoy_raiders_intercepted_desc$"
 notification_journal_entry_activated_name: "Neuer [concept_journal_entry]: [SCOPE.GetRootScope.GetJournalEntry.GetName]"
 notification_journal_entry_activated_desc: "[SCOPE.GetRootScope.GetJournalEntry.GetName] wurde dem Journal hinzugefügt"
 notification_journal_entry_activated_tooltip: "#header $notification_journal_entry_activated_name$#!\n$notification_journal_entry_activated_desc$"
 notification_journal_entry_deactivated_name: "[SCOPE.GetRootScope.GetJournalEntry.GetName] beendet"
 notification_journal_entry_deactivated_desc: "[SCOPE.GetRootScope.GetJournalEntry.GetName] wurde aus dem Journal entfernt"
 notification_journal_entry_deactivated_tooltip: "#header $notification_journal_entry_deactivated_name$#!\n$notification_journal_entry_deactivated_desc$"
 notification_journal_entry_completed_name: "[SCOPE.GetRootScope.GetJournalEntry.GetName] abgeschlossen"
 notification_journal_entry_completed_desc: "[SCOPE.GetRootScope.GetJournalEntry.GetName] wurde erfolgreich abgeschlossen"
 notification_journal_entry_completed_tooltip: "#header $notification_journal_entry_completed_name$#!\n$notification_journal_entry_completed_desc$"
 notification_enactment_failed_name: "Gesetzesbeschluss gescheitert"
 notification_enactment_failed_desc: "Unsere Legilslative konnte „[SCOPE.GetRootScope.GetCountry.GetLawBeingEnacted.GetName]“ nicht beschließen."
 notification_enactment_failed_tooltip: "#header $notification_enactment_failed_name$#!\n$notification_enactment_failed_desc$"
 notification_harvest_condition_started_in_country_name: "[concept_harvest_condition] begann [SCOPE.GetRootScope.GetCountry.GetAltName('IN')]"
 notification_harvest_condition_started_in_country_desc: "[SCOPE.sHCA('area').GetRemainingDurationLabel] [SCOPE.sHCA('area').GetType.GetName] begann in [SCOPE.sS('state').GetCountry.GetFlagTextIcon] „[SCOPE.sS('state').GetName]“ und wirkt sich auf [SCOPE.GetValue('num_states')|0v] unserer [Concept('concept_state', '$concept_states$')] mit einer [Concept('concept_harvest_condition_intensity', '$concept_harvest_condition_intensity_short$')] von [SCOPE.GetValue('intensity')|1v] aus."
 notification_harvest_condition_started_in_country_tooltip: "#header $notification_harvest_condition_started_in_country_name$#!\n$notification_harvest_condition_started_in_country_desc$"
 notification_harvest_condition_started_in_country_important_name: "$notification_harvest_condition_started_in_country_name$"
 notification_harvest_condition_started_in_country_important_desc: "$notification_harvest_condition_started_in_country_desc$"
 notification_harvest_condition_started_in_country_important_tooltip: "$notification_harvest_condition_started_in_country_tooltip$"
 notification_harvest_condition_started_in_market_name: "[concept_harvest_condition] begann auf [SCOPE.GetRootScope.GetMarket.GetOwner.GetFlagTextIcon] [SCOPE.GetRootScope.GetMarket.GetName]"
 notification_harvest_condition_started_in_market_desc: "[SCOPE.sHCA('area').GetRemainingDurationLabel] [SCOPE.sHCA('area').GetType.GetName] begann in [SCOPE.sS('state').GetCountry.GetFlagTextIcon] „[SCOPE.sS('state').GetName]“ und wirkt sich auf [SCOPE.GetValue('num_states')|0v] [Concept('concept_state', '$concept_states$')] auf dem Markt mit einer [Concept('concept_harvest_condition_intensity', '$concept_harvest_condition_intensity_short$')] von [SCOPE.GetValue('intensity')|1v] aus."
 notification_harvest_condition_started_in_market_tooltip: "#header $notification_harvest_condition_started_in_market_name$#!\n$notification_harvest_condition_started_in_market_desc$"
 notification_new_ruler_name: "[SCOPE.GetRootScope.GetCharacter.GetFirstName|v] ist [Select_CString(SCOPE.GetRootScope.GetCharacter.IsFemale, 'unsere neue', 'unser neuer')] [SCOPE.GetRootScope.GetCharacter.GetPrimaryRoleTitle]"
 notification_new_ruler_desc: "Die Zeit von [SCOPE.sCharacter( 'previous' ).GetFullName] als [concept_ruler] ist abgelaufen. [SCOPE.GetRootScope.GetCharacter.GetFullName] ist [SCOPE.GetRootScope.GetCharacter.GetCustom('DE_ART_DEF_S_N')] neue [SCOPE.GetRootScope.GetCharacter.GetPrimaryRoleTitle] [SCOPE.GetRootScope.GetCharacter.GetCountry.GetAltName('VON')]"
 notification_new_ruler_tooltip: "#header $notification_ruler_changed_name$#!\n$notification_ruler_changed_desc$"
 notification_native_uprising_notification_name: "[SCOPE.sCountry('actor').GetAdjective]er Aufstand"
 notification_native_uprising_notification_desc: "[SCOPE.sCountry('actor').GetAltName('NOM')|U] hat einen [concept_native_uprising] gegen uns begonnen!"
 notification_native_uprising_notification_tooltip: "#header $notification_native_uprising_notification_name$#!\n$notification_native_uprising_notification_desc$"
 notification_political_movement_formed_name: "[SCOPE.GetRootScope.GetPoliticalMovement.GetName] ([concept_political_movement])"
 notification_political_movement_formed_desc: "Die [SCOPE.GetRootScope.GetPoliticalMovement.GetName] wurde neu gegründet. Ihre [Concept('concept_political_movement_support', '$concept_political_movement_support_short$')] liegt bei [SCOPE.GetRootScope.GetPoliticalMovement.GetSupport|v%0] und ihr [Concept('concept_activism', '$concept_activism_short$')] bei [SCOPE.GetRootScope.GetPoliticalMovement.GetRadicalism|v%0]."
 notification_political_movement_formed_tooltip: "#header $notification_political_movement_formed_name$#!\n$notification_political_movement_formed_desc$"
 notification_political_movement_disbanded_name: "[concept_political_movement] aufgelöst"
 notification_political_movement_disbanded_desc: "Die [SCOPE.GetRootScope.GetPoliticalMovement.GetName] wurde aufgelöst"
 notification_political_movement_disbanded_tooltip: "#header $notification_political_movement_disbanded_name$#!\n$notification_political_movement_disbanded_desc$"
 notification_obligation_owed_to_us_expired_name: "[SCOPE.sCountry('target_country').GetAdjectiveNoFormatting]e [concept_obligation] abgelaufen"
 notification_obligation_owed_to_us_expired_desc: "Die uns [SCOPE.sCountry('target_country').GetAltName('VON')] geschuldete [concept_obligation] ist abgelaufen"
 notification_obligation_owed_to_us_expired_tooltip: "#header $notification_obligation_owed_to_us_expired_name$#!\n$notification_obligation_owed_to_us_expired_desc$"
 notification_obligation_owed_by_us_expired_name: "Unsere [concept_obligation] ist abgelaufen"
 notification_obligation_owed_by_us_expired_desc: "Die [concept_obligation], die wir [SCOPE.sCountry('target_country').GetAltName('DAT')] schuldeten, ist abgelaufen"
 notification_obligation_owed_by_us_expired_tooltip: "#header $notification_obligation_owed_by_us_expired_name$#!\n$notification_obligation_owed_by_us_expired_desc$"
 notification_country_owes_obligation_tooltip: "#header $notification_country_owes_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$notification_country_owes_obligation_desc$"
 notification_country_owes_obligation_name: "[concept_obligation] gegenüber [SCOPE.sCountry('actor').GetAltName('DAT')]"
 notification_country_owes_obligation_desc: "Wir schulden [SCOPE.sCountry('actor').GetAltName('DAT')] jetzt eine [concept_obligation]"
 notification_country_owed_obligation_tooltip: "#header $notification_country_owed_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$notification_country_owed_obligation_desc$"
 notification_country_owed_obligation_name: "[concept_obligation] [SCOPE.sCountry('recipient').GetAltName('VON')]"
 notification_country_owed_obligation_desc: "[SCOPE.sCountry('recipient').GetAltName('NOM')|U] schuldet uns jetzt eine [concept_obligation]"
 notification_country_owes_obligation_removed_tooltip: "#header $notification_country_owes_obligation_removed_name$#!\n$TOOLTIP_DELIMITER$\n$notification_country_owes_obligation_removed_desc$"
 notification_country_owes_obligation_removed_name: "[concept_obligation] gegenüber [SCOPE.sCountry('actor').GetAltName('DAT')] entfernt"
 notification_country_owes_obligation_removed_desc: "Wir haben nicht länger eine [concept_obligation] gegenüber [SCOPE.sCountry('actor').GetAltName('DAT')]"
 notification_country_owed_obligation_removed_tooltip: "#header $notification_country_owed_obligation_removed_name$#!\n$TOOLTIP_DELIMITER$\n$notification_country_owed_obligation_removed_desc$"
 notification_country_owed_obligation_removed_name: "[concept_obligation] [SCOPE.sCountry('recipient').GetAltName('VON')] entfernt"
 notification_country_owed_obligation_removed_desc: "[SCOPE.sCountry('recipient').GetAltName('NOM')|U] hat uns gegenüber keine [concept_obligation] mehr"
 notification_unification_candidate_added_name: "[SCOPE.sCountry('actor').GetAltName('NOM')|U] wird zu einem [Concept('concept_unification_candidate', '$concept_unification_candidates$')]"
 notification_unification_candidate_added_desc: "[SCOPE.sCountry('actor').GetAltName('NOM')|U] ist jetzt ein [concept_unification_candidate] für das Land „[SCOPE.sCountryFormation('country_formation').GetName]“ und kann Unterstützung von weniger bedeutenden [SCOPE.sCountryFormation('country_formation').GetAdjectiveNoFormatting|l]en [Concept('concept_country', 'Ländern')] erhalten"
 notification_unification_candidate_added_tooltip: "#header $notification_unification_candidate_added_name$#!\n$notification_unification_candidate_added_desc$"
 notification_unification_candidate_removed_name: "[SCOPE.sCountry('actor').GetAltName('NOM')|U] ist nicht länger ein [concept_unification_candidate]"
 notification_unification_candidate_removed_desc: "[SCOPE.sCountry('actor').GetAltName('NOM')|U] ist nicht länger ein [concept_unification_candidate] für [SCOPE.sCountryFormation('country_formation').GetName]"
 notification_unification_candidate_removed_tooltip: "#header $notification_unification_candidate_removed_name$#!\n$notification_unification_candidate_removed_desc$"
 notification_start_supporting_unification_name: "[SCOPE.sCountry('actor').GetAltName('NOM')|U] unterstützt [SCOPE.sCountry('recipient').GetAltName('AKK')]"
 notification_start_supporting_unification_desc: "[SCOPE.sCountry('actor').GetAltName('NOM')|U] unterstützt jetzt [SCOPE.sCountry('recipient').GetAltName('AKK')] als [Concept('concept_unification_candidate', 'Vereinigungskandidaten')] für [SCOPE.sCountryFormation('country_formation').GetName]"
 notification_start_supporting_unification_tooltip: "#header $notification_start_supporting_unification_name$#!\n$notification_start_supporting_unification_desc$"
 notification_stop_supporting_unification_name: "[SCOPE.sCountry('actor').GetAltName('NOM')|U] beendet die Unterstützung für [SCOPE.sCountry('recipient').GetAltName('AKK')]"
 notification_stop_supporting_unification_desc: "[SCOPE.sCountry('actor').GetAltName('NOM')|U] unterstützt nicht länger [SCOPE.sCountry('recipient').GetAltName('AKK')] als [Concept('concept_unification_candidate', 'Vereinigungskandidaten')] für [SCOPE.sCountryFormation('country_formation').GetName]"
 notification_stop_supporting_unification_tooltip: "#header $notification_stop_supporting_unification_name$#!\n$notification_stop_supporting_unification_desc$"
 notification_shipping_lane_formation_destination_invalidated_name: "Neues Formationsziel"
 notification_shipping_lane_formation_destination_invalidated_desc: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] wird jetzt in „[AccessScopeReference(SCOPE.GetRootScope).AccessMilitaryFormation.GetHomeHQ.GetName]“ neu stationiert, da das vorherige Ziel nicht erreichbar ist"
 notification_shipping_lane_formation_destination_invalidated_tooltip: "#header $notification_shipping_lane_formation_destination_invalidated_name$#!\n$notification_shipping_lane_formation_destination_invalidated_desc$"
 notification_enemy_convoys_raided_name: "#v [SCOPE.sStrategicRegion('region').GetLastConvoyRaidingDamageBy(SCOPE.GetRootScope.GetCountry.Self)]#! feindliche [concept_convoys] versenkt"
 notification_enemy_convoys_raided_desc: "Unsere Konvoi-Räuber haben #v [SCOPE.sStrategicRegion('region').GetLastConvoyRaidingDamageBy(SCOPE.GetRootScope.GetCountry.Self)]#! #tooltippable #tooltip:[GetRawTextTooltipTag(SCOPE.sStrategicRegion('region').GetLastConvoyRaidingTargetCountriesByAttackerDesc(SCOPE.GetRootScope.GetCountry.Self))] feindliche#!#! [concept_convoys] in der SR „[SCOPE.sStrategicRegion('region').GetName]“ zerstört.\n\n[SCOPE.sStrategicRegion('region').GetLastConvoyRaidingDamageEnemyReductionDesc(SCOPE.GetRootScope.GetCountry.Self)]"
 notification_enemy_convoys_raided_tooltip: "#header $notification_enemy_convoys_raided_name$#!\n$notification_enemy_convoys_raided_desc$"
 notification_our_convoys_raided_name: "#v [SCOPE.sStrategicRegion('region').GetLastConvoyRaidingDamageTo(SCOPE.GetRootScope.GetCountry.Self)]#! unserer [concept_convoys] wurden versenkt"
 notification_our_convoys_raided_desc: "#tooltippable #tooltip:[GetRawTextTooltipTag(SCOPE.sStrategicRegion('region').GetLastConvoyRaidingCountriesToTargetDesc(SCOPE.GetRootScope.GetCountry.Self))] Feindliche #!#! Konvoi-Räuber haben #v [SCOPE.sStrategicRegion('region').GetLastConvoyRaidingDamageTo(SCOPE.GetRootScope.GetCountry.Self)]#! unserer [concept_convoys] in „[SCOPE.sStrategicRegion('region').GetName]“ zerstört.\n\n[SCOPE.sStrategicRegion('region').GetLastConvoyRaidingDamageReductionDesc(SCOPE.GetRootScope.GetCountry.Self)]"
 notification_our_convoys_raided_tooltip: "#header $notification_our_convoys_raided_name$#!\n$notification_our_convoys_raided_desc$"
 notification_formation_exiled_name: "„[SCOPE.GetRootScope.GetMilitaryFormation.GetName]“ im [Concept('concept_exiled_army','$concept_exiled_army_exile$')]"
 notification_formation_exiled_desc: "„[SCOPE.GetRootScope.GetMilitaryFormation.GetName]“ ist im $concept_exiled_army_exile$ und verlegt in Richtung „[SCOPE.GetRootScope.GetMilitaryFormation.GetTargetHQ.GetName]“."
 notification_formation_exiled_tooltip: "#header $notification_formation_exiled_name$#!\n$notification_formation_exiled_desc$"
 notification_formation_returned_name: "„[SCOPE.GetRootScope.GetMilitaryFormation.GetName]“ ist aus dem [Concept('concept_exiled_army','$concept_exiled_army_exile$')] zurückgekehrt"
 notification_formation_returned_desc: "„[SCOPE.GetRootScope.GetMilitaryFormation.GetName]“ ist in „[SCOPE.GetRootScope.GetMilitaryFormation.GetStateAtPosition.GetNameWithCountryFlag]“ eingetroffen."
 notification_formation_returned_tooltip: "#header $notification_formation_returned_name$#!\n$notification_formation_returned_desc$"
 notification_formation_travel_to_front_cancelled_name: "[concept_military_formation] kann [concept_front] nicht erreichen"
 notification_formation_travel_to_front_cancelled_desc: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] konnte Front „[SCOPE.sFront('front').GetName]“ nicht erreichen."
 notification_formation_travel_to_front_cancelled_tooltip: "#header $notification_formation_travel_to_front_cancelled_name$#!\n$notification_formation_travel_to_front_cancelled_desc$"
 notification_formation_travel_station_in_hq_cancelled_name: "[concept_military_formation] kann [concept_hq] nicht erreichen"
 notification_formation_travel_station_in_hq_cancelled_desc: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] konnte HQ „[SCOPE.sHQ('hq').GetName]“ nicht erreichen."
 notification_formation_travel_station_in_hq_cancelled_tooltip: "#header $notification_formation_travel_station_in_hq_cancelled_name$#!\n$notification_formation_travel_station_in_hq_cancelled_desc$"
 notification_formation_travel_deploy_to_sea_node_cancelled_name: "[concept_military_formation] kann [concept_sea_node] nicht erreichen"
 notification_formation_travel_deploy_to_sea_node_cancelled_desc: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] konnte „[SCOPE.sProvince('province').GetName]“ nicht erreichen."
 notification_formation_travel_deploy_to_sea_node_cancelled_tooltip: "#header $notification_formation_travel_deploy_to_sea_node_cancelled_name$#!\n$notification_formation_travel_deploy_to_sea_node_cancelled_desc$"
 notification_formation_travel_track_formation_cancelled_name: "[concept_military_formation] kann andere [concept_military_formation] nicht mehr verfolgen"
 notification_formation_travel_track_formation_cancelled_desc: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] konnte [SCOPE.sMilitaryFormation('formation').GetName] nicht länger folgen."
 notification_formation_travel_track_formation_cancelled_tooltip: "#header $notification_formation_travel_track_formation_cancelled_name$#!\n$notification_formation_travel_track_formation_cancelled_desc$"
 notification_political_lobby_created_from_catalyst_name: "[concept_political_lobby] gebildet"
 notification_political_lobby_created_from_catalyst_desc: "Die Lobby „[SCOPE.sPoliticalLobby('political_lobby').GetName|v]“ hat sich als Ergebnis von „[SCOPE.sDiplomaticCatalyst('diplomatic_catalyst').GetDesc]“ gebildet\n\nDie neue [Concept('concept_political_lobby','$concept_political_lobby_short$')] besteht aus [SCOPE.sPoliticalLobby('political_lobby').GetMembersDesc]"
 notification_political_lobby_created_from_catalyst_tooltip: "#header $notification_political_lobby_created_from_catalyst_name$#!\n$notification_political_lobby_created_from_catalyst_desc$"
 notification_political_lobby_created_name: "[concept_political_lobby] gebildet"
 notification_political_lobby_created_desc: "Die [concept_political_lobby] „[SCOPE.sPoliticalLobby('political_lobby').GetName|v]“ hat sich gebildet\n\nDie neue [Concept('concept_political_lobby','$concept_political_lobby_short$')] besteht aus: [SCOPE.sPoliticalLobby('political_lobby').GetMembersDesc]"
 notification_political_lobby_created_tooltip: "#header $notification_political_lobby_created_name$#!\n$notification_political_lobby_created_desc$"
 notification_political_lobby_disbanded_name: "$concept_political_lobby$ aufgelöst"
 notification_political_lobby_disbanded_desc: "Die Lobby „[SCOPE.sPoliticalLobby('political_lobby').GetName|v]“ hat sich aufgelöst"
 notification_political_lobby_disbanded_tooltip: "#header $notification_political_lobby_disbanded_name$#!\n$TOOLTIP_DELIMITER$\n$notification_political_lobby_disbanded_desc$"
 notification_political_lobby_disbanded_with_reason_name: "[concept_political_lobby] aufgelöst"
 notification_political_lobby_disbanded_with_reason_desc: "Die Lobby „[SCOPE.sPoliticalLobby('political_lobby').GetName|v]“ hat sich aufgelöst, weil folgender Umstand nicht mehr zutrifft:\n[SCOPE.sPoliticalLobby('political_lobby').GetDisbandReasonDesc]"
 notification_political_lobby_disbanded_with_reason_tooltip: "#header $notification_political_lobby_disbanded_name$#!\n$TOOLTIP_DELIMITER$\n$notification_political_lobby_disbanded_desc$"
 notification_foreign_political_lobby_created_from_catalyst_name: "Ausländische [concept_political_lobby] gebildet"
 notification_foreign_political_lobby_created_from_catalyst_desc: "Die Lobby „[SCOPE.sPoliticalLobby('political_lobby').GetName|v]“ hat sich [SCOPE.sPoliticalLobby('political_lobby').GetCountry.GetAltName('IN')] gebildet als Ergebnis von: [SCOPE.sDiplomaticCatalyst('diplomatic_catalyst').GetDesc|U]\n\nDie neue [Concept('concept_political_lobby','$concept_political_lobby_short$')] besteht aus: [SCOPE.sPoliticalLobby('political_lobby').GetMembersDesc]"
 notification_foreign_political_lobby_created_from_catalyst_tooltip: "#header $notification_foreign_political_lobby_created_from_catalyst_name$#!\n$notification_foreign_political_lobby_created_from_catalyst_desc$"
 notification_foreign_political_lobby_created_name: "Ausländische [concept_political_lobby] gebildet"
 notification_foreign_political_lobby_created_desc: "Die Lobby „[SCOPE.sPoliticalLobby('political_lobby').GetName|v]“ hat sich [SCOPE.sPoliticalLobby('political_lobby').GetCountry.GetAltName('IN')] gebildet\n\nDie neue [Concept('concept_political_lobby','$concept_political_lobby_short$')] besteht aus [SCOPE.sPoliticalLobby('political_lobby').GetMembersDesc]"
 notification_foreign_political_lobby_created_tooltip: "#header $notification_foreign_political_lobby_created_name$#!\n$notification_foreign_political_lobby_created_desc$"
 notification_foreign_political_lobby_disbanded_name: "Ausländische [concept_political_lobby] aufgelöst"
 notification_foreign_political_lobby_disbanded_desc: "Die Lobby „[SCOPE.sPoliticalLobby('political_lobby').GetName|v]“ [SCOPE.sPoliticalLobby('political_lobby').GetCountry.GetAltName('IN')] hat sich aufgelöst"
 notification_foreign_political_lobby_disbanded_tooltip: "#header $notification_foreign_political_lobby_disbanded_name$#!\n$TOOLTIP_DELIMITER$\n$notification_foreign_political_lobby_disbanded_desc$"
 notification_foreign_political_lobby_disbanded_with_reason_name: "Ausländische [concept_political_lobby] aufgelöst"
 notification_foreign_political_lobby_disbanded_with_reason_desc: "Die Lobby „[SCOPE.sPoliticalLobby('political_lobby').GetName|v]“ [SCOPE.sPoliticalLobby('political_lobby').GetCountry.GetAltName('IN')] hat sich aufgelöst, weil folgender Umstand nicht mehr zutrifft:\n[SCOPE.sPoliticalLobby('political_lobby').GetDisbandReasonDesc|U]"
 notification_foreign_political_lobby_disbanded_with_reason_tooltip: "#header $notification_foreign_political_lobby_disbanded_with_reason_name$#!\n$TOOLTIP_DELIMITER$\n$notification_foreign_political_lobby_disbanded_with_reason_desc$"
 notification_interest_group_joins_lobby_name: "[concept_interest_group] schließt sich [concept_political_lobby] an"
 notification_interest_group_joins_lobby_desc: "Die IG „[SCOPE.gsInterestGroup('interest_group').GetName|v]“ hat sich der Lobby „[SCOPE.sPoliticalLobby('political_lobby').GetName|v]“ angeschlossen"
 notification_interest_group_joins_lobby_tooltip: "#header $notification_interest_group_joins_lobby_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_group_joins_lobby_desc$"
 notification_interest_group_leaves_lobby_name: "[concept_interest_group] verlässt [concept_political_lobby]"
 notification_interest_group_leaves_lobby_desc: "Die IG „[SCOPE.gsInterestGroup('interest_group').GetName|v]“ hat die Lobby „[SCOPE.sPoliticalLobby('political_lobby').GetName|v]“ verlassen"
 notification_interest_group_leaves_lobby_tooltip: "#header $notification_interest_group_leaves_lobby_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_group_leaves_lobby_desc$"
 notification_country_attitude_improved_name: "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting|U]e $concept_attitude$ verbessert"
 notification_country_attitude_improved_desc: "Die [concept_attitude] [SCOPE.GetRootScope.GetCountry.GetAltName('VON')] gegenüber uns hat sich #p verbessert#! und ist derzeit: [SCOPE.GetRootScope.GetCountry.GetAttitudeTowards(GetPlayer).GetName] (zuvor: [SCOPE.GetRootScope.GetCountry.GetPreviousAttitudeTowards(GetPlayer).GetName])\n\nDies geschah infolge von: [SCOPE.sDiplomaticCatalyst('diplomatic_catalyst').GetDesc]"
 notification_country_attitude_improved_tooltip: "#header $notification_country_attitude_improved_name$#!\n$notification_country_attitude_improved_desc$"
 country_attitude_changed_group: "$concept_country$es-$concept_attitude$ geändert"
 notification_country_attitude_changed_name: "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting|U]e $concept_attitude$ verändert"
 notification_country_attitude_changed_desc: "Die [concept_attitude] [SCOPE.GetRootScope.GetCountry.GetAltName('VON')] gegenüber uns hat sich verändert und ist derzeit: [SCOPE.GetRootScope.GetCountry.GetAttitudeTowards(GetPlayer).GetName] (zuvor: [SCOPE.GetRootScope.GetCountry.GetPreviousAttitudeTowards(GetPlayer).GetName])\n\nDies geschah infolge von: [SCOPE.sDiplomaticCatalyst('diplomatic_catalyst').GetDesc]"
 notification_country_attitude_changed_tooltip: "#header $notification_country_attitude_changed_name$#!\n$notification_country_attitude_changed_desc$"
 notification_country_attitude_worsened_name: "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting|U]e $concept_attitude$ verschlechtert"
 notification_country_attitude_worsened_desc: "Die [concept_attitude] [SCOPE.GetRootScope.GetCountry.GetAltName('VON')] gegenüber uns hat sich #n verschlechtert#! und ist derzeit: [SCOPE.GetRootScope.GetCountry.GetAttitudeTowards(GetPlayer).GetName] (zuvor: [SCOPE.GetRootScope.GetCountry.GetPreviousAttitudeTowards(GetPlayer).GetName])\n\nDies geschah infolge von: [SCOPE.sDiplomaticCatalyst('diplomatic_catalyst').GetDesc]"
 notification_country_attitude_worsened_tooltip: "#header $notification_country_attitude_worsened_name$#!\n$notification_country_attitude_worsened_desc$"
 notification_treaty_entered_into_force_name: "[SCOPE.GetRootScope.GetTreaty.GetName] wurde unter Zwang eingegangen"
 notification_treaty_entered_into_force_desc: "[SCOPE.GetRootScope.GetTreaty.GetName] wurde unter Zwang mit einer $concept_binding_period$ von [SCOPE.GetRootScope.GetTreaty.GetBindingPeriodFormatted] eingegangen"
 notification_treaty_entered_into_force_tooltip: "#header $notification_treaty_entered_into_force_name$#!\n$notification_treaty_entered_into_force_desc$"
 notification_country_withdrawn_from_treaty_name: "[SCOPE.sCountry('withdrawing_country').GetAltName('NOM')|U] zieht sich aus [SCOPE.GetRootScope.GetTreaty.GetName] zurück"
 notification_country_withdrawn_from_treaty_desc: "[SCOPE.sCountry('withdrawing_country').GetAltName('NOM')|U] hat sich aus [SCOPE.GetRootScope.GetTreaty.GetName] zurückgezogen"
 notification_country_withdrawn_from_treaty_tooltip: "#header $notification_country_withdrawn_from_treaty_name$#!\n$notification_country_withdrawn_from_treaty_desc$"
 notification_country_broke_treaty_name: "[SCOPE.sCountry('withdrawing_country').GetAltName('NOM')|U] bricht „[SCOPE.GetRootScope.GetTreaty.GetName]“"
 notification_country_broke_treaty_desc: "[SCOPE.sCountry('withdrawing_country').GetAltName('NOM')|U] hat „[SCOPE.GetRootScope.GetTreaty.GetName]“ gebrochen und die Bindungszeit verletzt"
 notification_country_broke_treaty_tooltip: "#header $notification_country_broke_treaty_name$#!\n$notification_country_broke_treaty_desc$"
 notification_treaty_proposal_declined_name: "Vorschlag zu „[SCOPE.GetRootScope.GetTreaty.GetName]“ abgelehnt"
 notification_treaty_proposal_declined_desc: "Unser Vorschlag zu „[SCOPE.GetRootScope.GetTreaty.GetName]“ wurde abgelehnt"
 notification_treaty_proposal_declined_tooltip: "#header $notification_treaty_proposal_declined_name$#!\n$notification_treaty_proposal_declined_desc$"
 notification_treaty_dissolved_name: "[SCOPE.GetRootScope.GetTreaty.GetName] aufgelöst"
 notification_treaty_dissolved_desc: "[SCOPE.GetRootScope.GetTreaty.GetName] wurde aufgelöst"
 notification_treaty_dissolved_tooltip: "#header $notification_treaty_dissolved_name$#!\n$notification_treaty_dissolved_desc$"
 notification_treaty_broken_name: "[SCOPE.GetRootScope.GetTreaty.GetName] gebrochen"
 notification_treaty_broken_desc: "[SCOPE.GetRootScope.GetTreaty.GetName] wurde gebrochen, bevor die Bindungszeit abgelaufen war"
 notification_treaty_broken_tooltip: "#header $notification_treaty_broken_name$#!\n$notification_treaty_broken_desc$"
 CONVOY_DAMAGE_REDUCTION_NONE: "Es gab keine Marine-Eskorte, die den Verlust von [concept_convoys] hätte verringern können."
 CONVOY_DAMAGE_REDUCTION_DESC: "Eskortierte Flotten konnten den Verlust von $AMOUNT|v$ zusätzlichen [concept_convoys] vermeiden. Insgesamt hätten feindliche Konvoi-Räuber-Schiffe $MAX|v$ unserer Konvois in Seeknoten zerstören können."
 CONVOY_RAID_ATTACKER_COUNTRY_LIST: "Überfallende Länder:\n$BREAKDOWN$"
 CONVOY_RAID_TARGET_COUNTRY_LIST: "Überfallene Länder:\n$BREAKDOWN$"
 CONVOY_RAID_VALUE_FROM_UNITS: "$TAB$$TAB$$VALUE|v$ durch Kampfeinheiten"
 CONVOY_RAID_VALUE_FROM_CHARACTER_TRAIT: "$TAB$$TAB$$VALUE|%0=v$ durch die Charaktereigenschaft „[CharacterTrait.GetName]“"
 CONVOY_RAID_VALUE_FROM_ADMIRAL_ORDER: "$TAB$$TAB$$VALUE|%0=v$ durch den Befehlshaberbefehl „[CommanderOrderType.GetName]“$SEA_PRESENCE_DESC$"
 CONVOY_RAID_SEA_PRESENCE_DESC: "in Anbetracht der derzeitigen Präsenz der Flotte auf See von $VALUE|%0v$"
 CONVOY_RAID_ADMIRAL_VALUE: "$TAB$$VALUE|v$ durch [Character.GetFullName] aufgrund von:\n$BREAKDOWN$"
 CONVOY_RAID_COUNTRY_ENTRY: "$TAB$[COUNTRY.GetAltName('NOM')|U]"
 CONVOY_RAID_ATTACK_DESC: "#bold Konvoi-Angriffsstärke#!\n$BREAKDOWN$"
 CONVOY_RAID_COUNTRY_ATTACK_ENTRY: "[COUNTRY.GetAltName('NOM')|U] hat eine derzeitige Konvoi-Angriffsstärke von $VALUE|0v$ aufgrund von:\n$BREAKDOWN$"
 CONVOY_RAID_COUNTRY_SHARED_ATTACK_ENTRY: "[COUNTRY.GetAltName('NOM')|U] hat eine derzeitige Konvoi-Angriffsstärke von $VALUE|0v$ im derzeitigen Krieg, was $PERC|%0v$ ihrer Gesamt-$TOTAL|v$ ausmacht:\n$BREAKDOWN$"
 CONVOY_RAID_DEFENSE_DESC: "#bold Konvoi-Verteidigung#!\n$BREAKDOWN$"
 CONVOY_RAID_COUNTRY_DEFENSE_ENTRY: "[COUNTRY.GetAltName('NOM')|U] hat eine derzeitige Konvoi-Verteidigungsstärke von $VALUE|0v$ aufgrund von:\n$BREAKDOWN$"
 CONVOY_RAID_COUNTRY_SHARED_DEFENSE_ENTRY: "[COUNTRY.GetAltName('NOM')|U] hat eine derzeitige Konvoi-Verteidigungsstärke von $VALUE|0v$ im derzeitigen Krieg, was $PERC|%0v$ ihrer Gesamt-$TOTAL|v$ ausmacht:\n$BREAKDOWN$"
 CONVOY_RAID_TARGET_ENTRY: "[COUNTRY.GetAltName('NOM')|U]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v$#!#! Konvoi-Angriffsstärke, die auf $NUM|v$ Konvois abzielt"
 CONVOY_RAID_DEFENSE_ENTRY: "[COUNTRY.GetAltName('NOM')|U]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v$#!#! Konvoi-Verteidigung schützt $PERC|%0v$ ihrer Konvois"
 CONVOY_RAID_DAMAGE_ENTRY: "[COUNTRY.GetAltName('NOM')|U]: $MIN|v$ – $MAX|v$ Konvois zerstört"
 CONVOY_RAIDS_DESC: "#bold Konvoi-Überfälle#!\nÜberfallziele:\n$TARGETS_BREAKDOWN$[ConcatIfNeitherEmpty('\n\nÜberfallverteidigung:\n','$DEFENSE_BREAKDOWN$')]\n\nDer nächste Konvoi-Überfall würde folgende Verluste verursachen:\n$DAMAGE_BREAKDOWN$\n\nDer nächste Konvoi-Überfall in diesem Seeknoten wird in #v $DAYS$#! Tagen stattfinden"
 HOUR_NIGHT: "Nacht"
 HOUR_MORNING: "Morgen"
 HOUR_AFTERNOON: "Nachmittag"
 HOUR_EVENING: "Abend"
 DAY_MONDAY: "Montag"
 DAY_TUESDAY: "Dienstag"
 DAY_WEDNESDAY: "Mittwoch"
 DAY_THURSDAY: "Donnerstag"
 DAY_FRIDAY: "Freitag"
 DAY_SATURDAY: "Samstag"
 DAY_SUNDAY: "Sonntag"
 TOOLTIP_TYPE_CONSTITUTION_LAW: "[concept_law]"
 TOOLTIP_TYPE_LAW_GROUP: "Gesetzesgruppe"
 TOOLTIP_TYPE_LAW_TYPE: "Gesetzesart"
 TOOLTIP_TYPE_MARKET: "[concept_market]"
 TOOLTIP_TYPE_DECREE_TYPE: "[concept_decree]"
 TOOLTIP_TYPE_SUBJECT_TYPE: "[concept_subject_type]"
 TOOLTIP_TYPE_INSTITUTION: "[concept_institution]"
 TOOLTIP_TYPE_INSTITUTION_TYPE: "Institutionsart"
 TOOLTIP_TYPE_INTEREST_GROUP: "[concept_interest_group]"
 TOOLTIP_TYPE_PARTY: "[concept_party]"
 TOOLTIP_TYPE_IDEOLOGY: "[concept_ideology]"
 TOOLTIP_TYPE_GAME_CONCEPT_TYPE: "Spielkonzept"
 TOOLTIP_TYPE_GOODS: "[SelectLocalization(Goods.IsPrestigeGoods,'TOOLTIP_TYPE_PRESTIGE_GOODS','TOOLTIP_TYPE_REGULAR_GOODS')]"
 TOOLTIP_TYPE_PRESTIGE_GOODS: "[concept_prestige_good]"
 TOOLTIP_TYPE_REGULAR_GOODS: "[SelectLocalization(Goods.IsLocal,'LOCAL_GOOD',SelectLocalization(Goods.IsTradeable, 'GOODS', 'NON_TRADEABLE_GOODS'))]"
 TOOLTIP_TYPE_PROFESSION: "[concept_profession]"
 TOOLTIP_TYPE_POP: "[concept_pop]"
 TOOLTIP_TYPE_COUNTRY: "[concept_country]"
 TOOLTIP_TYPE_CULTURE: "[concept_culture]"
 TOOLTIP_TYPE_CULTURAL_COMMUNITY: "[concept_cultural_community]"
 TOOLTIP_TYPE_RELIGION: "[concept_religion]"
 TOOLTIP_TYPE_CULTURAL_TRAIT: "[concept_cultural_trait]"
 TOOLTIP_TYPE_STATE: "[SelectLocalization(State.IsSplitState, 'TOOLTIP_TYPE_STATE_SPLIT', 'TOOLTIP_TYPE_STATE_REGULAR')]"
 TOOLTIP_TYPE_STATE_REGULAR: "[concept_state]"
 TOOLTIP_TYPE_STATE_SPLIT: "[concept_split_state] in SR „[State.GetStateRegion.GetName]“"
 TOOLTIP_TYPE_STATE_REGION: "[concept_state_region]"
 TOOLTIP_TYPE_BUILDING: "[Building.GetBuildingType.GetBuildingKindDesc(Building.GetOwner.Self)]"
 TOOLTIP_TYPE_BUILDING_TYPE: "[BuildingType.GetBuildingKindDesc(GetPlayer.Self)]"
 TOOLTIP_TYPE_CHARACTER: "[concept_character]"
 TOOLTIP_TYPE_CHARACTER_TRAIT: "Eigenschaft"
 TOOLTIP_TYPE_COMMANDER_RANK: "Befehlshaber-Rang"
 TOOLTIP_TYPE_PRODUCTION_METHOD: "[concept_production_method]"
 TOOLTIP_TYPE_TECHNOLOGY: "Technik"
 TOOLTIP_TYPE_INTEREST_GROUP_TRAIT: "IG-Eigenschaft"
 TOOLTIP_TYPE_STRATEGIC_REGION: "[concept_strategic_region]"
 TOOLTIP_TYPE_WAR: "[concept_war]"
 TOOLTIP_TYPE_WAR_GOAL: "[concept_war_goal][ConcatIfNeitherEmpty('\n', AddLocalizationIf(WarGoal.HoldsArticle, 'TOOLTIP_TYPE_ARTICLE'))]"
 TOOLTIP_TYPE_ARTICLE: "[concept_article]"
 TOOLTIP_TYPE_CANAL_TYPE: "Kanalart"
 TOOLTIP_TYPE_POLITICAL_MOVEMENT_TYPE: "Protestbewegungsart"
 TOOLTIP_TYPE_OBJECTIVE_TYPE: "Zielart"
 TOOLTIP_TYPE_OBJECTIVE: "Ziel"
 TOOLTIP_TYPE_LEGITIMACY_LEVEL: "[Concept('concept_legitimacy', 'Legitimitätsstufe')]"
 TOOLTIP_TYPE_ACCEPTANCE_STATUS: "[concept_acceptance_status]"
 TOOLTIP_TYPE_FRONT: "[concept_front]"
 TOOLTIP_TYPE_POLITICAL_MOVEMENT: "[concept_political_movement]"
 TOOLTIP_TYPE_TREATY_ARTICLE_TYPE: "Vertragsartikelart"
 NON_TRADEABLE_GOODS: "[Concept('concept_good','$NON_TRADEABLE_GOODS_FULL$')]"
 GOODS: "[concept_good]"
 NON_TRADEABLE_GOODS_FULL: "Nicht handelbare Waren"
 GOOD_CAN_BE_PRODUCED_BY: "#title Kann produziert werden in#!"
 GOOD_CAN_BE_USED_BY: "#title Kann verbraucht werden von#!"
 DECISIONS: "Entscheidungen"
 JOURNAL: "Journal"
 TOOLTIP_SLAVE_STATE: "#header Sklavenstaat#!\nGebäude in „[State.GetName]“ nutzen entweder [GetPopType('slaves').GetName] oder haben das Potenzial, sie zu nutzen."
 SLAVE_STATE: "Sklavenstaat"
 SLAVE_IMPORT: "Importiert Sklaven"
 SLAVE_EXPORT: "Exportiert Sklaven"
 SLAVE_IMPORT_MARKER_DESC: "Dieser Staat importiert derzeit Sklaven aus [STATE.GetName]."
 SLAVE_EXPORT_MARKER_DESC: "Dieser Staat exportiert derzeit Sklaven in die folgenden Staaten: "
 SLAVE_EXPORT_MARKER_DESC_ITEM: "[STATE.GetName]"
 TOOLTIP_STATE_SLAVE_IMPORT_STATES: "[STATE.GetName] importierte letzte Woche insgesamt #variable $AMOUNT|K+$#! Sklaven aus $STATES_LIST$"
 TOOLTIP_STATE_SLAVE_EXPORT_STATES: "[STATE.GetName] exportierte letzte Woche insgesamt #variable $AMOUNT|K+$#! Sklaven nach $STATES_LIST$"
 NICOLAS_TEST: "TEST"
 NO_UNPRESSED_WAR_GOALS: "Keine unangefochtenen [Concept('concept_war_goal', '$concept_war_goals$')]"
 NO_PRESSED_WAR_GOALS: "Keine angefochtenen [Concept('concept_war_goal', '$concept_war_goals$')]"
 GAME_CHECKSUM_CHANGED_FROM_SAVE_FILE: "@warning_icon!#X Ungültige Prüfsumme für Erfolge#!\nIn diesem Speicherstand waren Erfolge mit einer anderen Prüfsumme möglich. Lädt man diesen Speicherstand, werden Erfolge in ihm deaktiviert."
 MODIFIER_CONSCRIPTION_RATE_ADD_ADDITIONAL_INFO: "@battalions!$NUM_BATTALIONS|v$ [Concept('concept_battalion', '$concept_battalions$')] können [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$')|l] werden"
 DEFAULT_HQ_NAME: "[HQ.GetCountry.GetFlagTextIcon] „[HQ.GetStrategicRegion.GetNameNoFormatting]“-[Concept('concept_hq', 'HQ')]"
 DEFAULT_HQ_NAME_NO_FLAG: "„[HQ.GetStrategicRegion.GetNameNoFormatting]“-[Concept('concept_hq', 'HQ')]"
 DEFAULT_HQ_NAME_NO_FLAG_NO_CONCEPT: "[HQ.GetStrategicRegion.GetNameNoFormatting]"
 NO_GENERALS: "Keine [Concept('concept_general', '$concept_generals$')]"
 NO_ADMIRALS: "Keine [Concept('concept_admiral', '$concept_admirals$')]"
 RESET_TECH_TREE_VIEW: "Zurücksetzen"
 BUILDING_KIND_GOVERNMENT: "[concept_government_building]"
 BUILDING_KIND_MILITARY: "[concept_military_building]"
 BUILDING_KIND_SUBSISTENCE: "[concept_subsistence_building]"
 BUILDING_KIND_URBAN_CENTER: "[GetBuildingType('building_urban_center').GetName]"
 BUILDING_KIND_USES_GOVERNMENT_SLAVES: "Nutzt [concept_budget_government_slaves][SelectLocalization(ObjectsEqual(Country.Self, GetPlayer.Self), '', 'IN_COUNTRY')]"
 BUILDING_KIND_USES_MILITARY_SLAVES: "Nutzt [concept_budget_military_slaves][SelectLocalization(ObjectsEqual(Country.Self, GetPlayer.Self), '', 'IN_COUNTRY')]"
 BUILDING_KIND_USES_SLAVES: "Nutzt [POP_TYPE.GetName] als [TARGET_POP_TYPE.GetName][SelectLocalization(ObjectsEqual(Country.Self, GetPlayer.Self), '', 'IN_COUNTRY')]"
 BUILDING_KIND_NON_GOVERNMENT: "[concept_building]"
 IN_COUNTRY: " [Country.GetAltName('IN')]"
 BUILDING_STATUS_ESTABLISHED: "Dieses Gebäude wurde am [BUILDING.GetEstablishmentDate] errichtet"
 BUILDING_STATUS_UNDER_CONSTRUCTION: "Dieses Gebäude befindet sich derzeit im Bau"
 BUILDING_STATUS_EXPANDING: "Dieses Gebäude wird erweitert"
 BUILDING_STATUS_QUEUED_UNDER_CONSTRUCTION: "Dieses Gebäude befindet sich in der Baureihe und wartet auf die Konstruktion"
 BUILDING_STATUS_QUEUED_EXPANDING: "Dieses Gebäude befindet sich in der Baureihe und wartet auf die Erweiterung"
 BUILDING_STATUS_NOT_ACTIVE: "Dieses Gebäude ist derzeit inaktiv"
 BUILDING_IS_DRAFTING_IMPL: "[Concept('concept_conscript_battalion', 'zieht ein')] ([Building.GetEmploymentPercentage|%0v])"
 CONSCRIPTION_CENTER_IS_DRAFTING: "Dieses [concept_conscription_center] $BUILDING_IS_DRAFTING_IMPL$."
 MORE_ITEMS: " … und $COUNT$ weitere"
 MORE_ITEMS_TOOLTIPPABLE: "#tooltippable #tooltip:$TAG$ … und $COUNT$ weitere#!#!"
 ### DIPLOMATIC PLAY / WAR POPUP
 DEMANDS: "Forderungen"
 WARGOALS: "[Concept('concept_war_goal','$concept_war_goals$')]"
 PRIMARY_WARGOALS: "[Concept('concept_primary_demand','$concept_primary_demands$')]"
 NO_PRIMARY_WARGOALS: "Keine $concept_primary_demands$"
 SECONDARY_WARGOALS: "[Concept('concept_secondary_demand','$concept_secondary_demands$')]"
 NO_SECONDARY_WARGOALS: "Keine $concept_secondary_demands$"
 OBLIGATIONS: "[Concept('concept_obligation','$concept_obligations$')]"
 NO_WARGOAL: "Kein [concept_war_goal]"
 CAN_REVERSE_SWAY_INITIATOR_TOOLTIP: "@approves! [GetPlayer.GetAltName('NOM')|U] hat mindestens einen [Concept('concept_sway', 'Beeinflussungsgrund')], den [DiplomaticPlay.GetInitiator.GetAltName('NOM')] akzeptieren würde"
 CANNOT_REVERSE_SWAY_INITIATOR_TOOLTIP: "@disapproves! [GetPlayer.GetAltName('NOM')|U] hat keinen [Concept('concept_sway', 'Beeinflussungsgrund')], den [DiplomaticPlay.GetInitiator.GetAltName('NOM')] akzeptieren würde"
 CAN_REVERSE_SWAY_TARGET_TOOLTIP: "@approves! [GetPlayer.GetAltName('NOM')|U] hat mindestens einen [Concept('concept_sway', 'Beeinflussungsgrund')], den [DiplomaticPlay.GetTarget.GetAltName('NOM')] akzeptieren würde"
 CANNOT_REVERSE_SWAY_TARGET_TOOLTIP: "@disapproves! [GetPlayer.GetAltName('NOM')|U] hat keinen [Concept('concept_sway', 'Beeinflussungsgrund')], den [DiplomaticPlay.GetTarget.GetAltName('NOM')] akzeptieren würde"
 SWAY_COUNTRY_TOOLTIP: "[DiplomaticPlay.GetCanSwayCountryDesc(GetPlayer.Self, Country.Self)]\n\n@battalions! #v #tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_ARMY_OVERVIEW_TOOLTIP [Country.GetBattalions|0]#!#!#! [Concept('concept_battalion', '$concept_battalions$')] (#v [Country.GetMobilizationRatio|0%]#! @mobilization! [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$')])\n@flotillas! #v #tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP [Country.GetWarships]#!#!#! [Concept('concept_flotilla', '$concept_flotillas$')]"
 CAN_SWAY_COUNTRY_TOOLTIP: "@approves! [GetPlayer.GetAltName('NOM')|U] hat mindestens einen [Concept('concept_sway', 'Beeinflussungsgrund')], den [Country.GetAltName('NOM')] akzeptieren würde"
 CANNOT_SWAY_COUNTRY_TOOLTIP: "@disapproves! [GetPlayer.GetAltName('NOM')|U] hat keinen [Concept('concept_sway', 'Beeinflussungsgrund')], den [Country.GetAltName('NOM')] akzeptieren würde"
 SWAY_PANEL_CAN_SWAY_TOOLTIP: "@approves! [GetPlayer.GetAltName('NOM')|U] hat mindestens einen [Concept('concept_sway', 'Beeinflussungsgrund')], den [SwayCountryPanel.GetCountry.GetAltName('NOM')] akzeptieren würde"
 SWAY_PANEL_CANNOT_SWAY_TOOLTIP: "@disapproves! [GetPlayer.GetAltName('NOM')|U] hat keinen [Concept('concept_sway', 'Beeinflussungsgrund')], den [SwayCountryPanel.GetCountry.GetAltName('NOM')] akzeptieren würde"
 SWAY_PANEL_CAN_REVERSE_SWAY_TOOLTIP: "@approves! [GetPlayer.GetAltName('NOM')|U] hat mindestens ein [Concept('concept_offer_support','$concept_offer_of_support$')] (#b [SwayOfferType.GetName]#!), das [SwayCountryPanel.GetCountry.GetAltName('NOM')] akzeptieren würde"
 SWAY_PANEL_CANNOT_REVERSE_SWAY_TOOLTIP: "@disapproves! [GetPlayer.GetAltName('NOM')|U] hat kein [Concept('concept_offer_support','$concept_offer_of_support$')] (#b [SwayOfferType.GetName]#!), das [SwayCountryPanel.GetCountry.GetAltName('NOM')] akzeptieren würde"
 SWAY_PANEL_CAN_SWAY_TOOLTIP_WARGOAL: "@approves! [GetPlayer.GetAltName('NOM')|U] hat mindestens einen [Concept('concept_sway', 'Beeinflussungsgrund')] (#b [WarGoalType.GetName]#!), den [SwayCountryPanel.GetCountry.GetAltName('NOM')] akzeptieren würde"
 SWAY_PANEL_CANNOT_SWAY_TOOLTIP_WARGOAL: "@disapproves! [GetPlayer.GetAltName('NOM')|U] hat keinen [Concept('concept_sway', 'Beeinflussungsgrund')] (#b [WarGoalType.GetName]#!), den [SwayCountryPanel.GetCountry.GetAltName('NOM')] akzeptieren würde"
 SWAY_PANEL_CAN_REVERSE_SWAY_TOOLTIP_WARGOAL: "@approves! [GetPlayer.GetAltName('NOM')|U] hat mindestens ein [Concept('concept_offer_support','$concept_offer_of_support$')] (#b [WarGoalType.GetName]#!), das [SwayCountryPanel.GetCountry.GetAltName('NOM')] akzeptieren würde"
 SWAY_PANEL_CANNOT_REVERSE_SWAY_TOOLTIP_WARGOAL: "@disapproves! [GetPlayer.GetAltName('NOM')|U] hat kein [Concept('concept_offer_support','$concept_offer_of_support$')] (#b [WarGoalType.GetName]#!), das [SwayCountryPanel.GetCountry.GetAltName('NOM')] akzeptieren würde"
 SWAY_PANEL_CAN_SWAY_TOOLTIP_SELECTOR: "[SelectLocalization(SwayCountryPanel.IsReverseSway, 'SWAY_PANEL_CAN_REVERSE_SWAY_TOOLTIP', 'SWAY_PANEL_CAN_SWAY_TOOLTIP')]"
 SWAY_PANEL_CANNOT_SWAY_TOOLTIP_SELECTOR: "[SelectLocalization(SwayCountryPanel.IsReverseSway, 'SWAY_PANEL_CANNOT_REVERSE_SWAY_TOOLTIP', 'SWAY_PANEL_CANNOT_SWAY_TOOLTIP')]"
 HAS_NO_COUNTRIES_YOU_CAN_SWAY_TOOLTIP: "Wir können keine anderen Länder beeinflussen"
 HAS_COUNTRIES_YOU_CAN_SWAY_TOOLTIP: "Wir können [DiplomaticPlay.GetNumberOfPossibleSwayCountriesFormatted(GetPlayer.Self)] Länder [Concept('concept_sway', 'beeinflussen')]."
 HAS_COUNTRIES_YOU_CAN_SWAY_TOOLTIP_NUMBER_BREAKDOWN: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v$#!#!"
 DIPLO_PLAY_NO_SUPPORTS: "Keine unterstützenden Länder"
 DIPLO_PLAY_OVERVIEW: "Übersicht"
 DIPLO_PLAY_INVOLVED_COUNTRIES: "[SelectLocalization(DiplomaticPlay.IsTargetOrInitiator(GetMetaPlayer.GetPlayedOrObservedCountry), 'DIPLO_PLAY_SWAY_COUNTRIES', 'DIPLO_PLAY_ALLEGIANCES')]"
 DIPLO_PLAY_SWAY_COUNTRIES: "$concept_sway$ von Ländern"
 DIPLO_PLAY_ALLEGIANCES: "Gefolgschaften"
 DIPLO_PLAY_POTENTIAL_FRONTS: "Potenzielle Fronten"
 POTENTIAL_FRONTS: "Potenzielle [Concept('concept_front', '$concept_fronts$')]"
 NO_POTENTIAL_FRONTS: "Derzeit keine potenziellen [Concept('concept_front', '$concept_fronts$')]"
 DIPLO_PLAY_ON_THE_FENCE: "Unentschlossen"
 DIPLO_PLAY_ON_THE_FENCE_TOOLTIP: "#header Unentschlossen#!"
 DIPLO_PLAY_SUPPORTS: "Unterstützen"
 DIPLO_PLAY_SUPPORTS_TARGET_TOOLTIP: "#header Unterstützt [DiplomaticPlay.GetTarget.GetAltName('AKK')]#!"
 DIPLO_PLAY_SUPPORTS_INITIATOR_TOOLTIP: "#header Unterstützt [DiplomaticPlay.GetInitiator.GetAltName('AKK')]#!"
 DIPLO_PLAY_LEANING_TARGET_TOOLTIP: "#header Neigt mehr in Richtung [DiplomaticPlay.GetTarget.GetAltName('GEN')]#!"
 DIPLO_PLAY_LEANING_INITIATOR_TOOLTIP: "#header Neigt mehr in Richtung [DiplomaticPlay.GetInitiator.GetAltName('GEN')]#!"
 DIPLO_PLAY_LEANING_TARGET_BUTTON_TOOLTIP: "#header Neigt mehr in Richtung [DiplomaticPlay.GetTarget.GetAltName('GEN')] in diesem [concept_diplomatic_play]#!\n[ConcatIfNeitherEmpty(AddLocalizationIf(DiplomaticPlay.IsTargetLeaning(GetPlayer.Self), 'IS_ALREADY_LEANING_TARGET'), '\n\n')]Dies zeigt [DiplomaticPlay.GetTarget.GetAltName('DAT')], dass Ihr offen dafür seid, durch [Concept('concept_sway','Beeinflussung')] auf ihre Seite geholt zu werden."
 DIPLO_PLAY_LEANING_INITIATOR_BUTTON_TOOLTIP: "#header Neigt mehr in Richtung [DiplomaticPlay.GetInitiator.GetAltName('GEN')] in diesem [concept_diplomatic_play]#!\n[ConcatIfNeitherEmpty(AddLocalizationIf(DiplomaticPlay.IsInitiatorLeaning(GetPlayer.Self), 'IS_ALREADY_LEANING_INITIATOR'), '\n\n')]Dies zeigt [DiplomaticPlay.GetInitiator.GetAltName('DAT')], dass Ihr offen dafür seid, durch [Concept('concept_sway','Beeinflussung')] auf ihre Seite geholt zu werden."
 IS_ALREADY_LEANING_TARGET: "@red_cross! Ihr neigt bereits mehr in Richtung [DiplomaticPlay.GetTarget.GetAltName('GEN')]"
 IS_ALREADY_LEANING_INITIATOR: "@red_cross! Ihr neigt bereits mehr in Richtung [DiplomaticPlay.GetInitiator.GetAltName('GEN')]"
 DIPLO_PLAY_LEANING_TARGET: "Neigt in Richtung [DiplomaticPlay.GetTarget.GetFlagTextIcon]"
 DIPLO_PLAY_LEANING_INITIATOR: "Neigt in Richtung [DiplomaticPlay.GetInitiator.GetFlagTextIcon]"
 DIPLO_PLAY_LEANING_TARGET_COUNTRY_TOOLTIP: "#header [COUNTRY.GetAltName('NOM')|U] neigt in Richtung [DiplomaticPlay.GetTarget.GetAltName('GEN')]#!\nDas heißt, dass sie offen dafür sind, [DiplomaticPlay.GetTarget.GetAltName('VON')] [Concept('concept_sway','$concept_swayed$')|l] zu werden, oder sie schließen sich sogar ihrer Seite an, falls dieses [concept_diplomatic_play] weiter eskaliert"
 DIPLO_PLAY_LEANING_INITIATOR_COUNTRY_TOOLTIP: "#header [COUNTRY.GetAltName('NOM')|U] neigt in Richtung [DiplomaticPlay.GetInitiator.GetAltName('GEN')]#!\nDas heißt, dass sie offen dafür sind, [DiplomaticPlay.GetInitiator.GetAltName('VON')] [Concept('concept_sway','$concept_swayed$')|l] zu werden, oder sie schließen sich sogar ihrer Seite an, falls dieses [concept_diplomatic_play] weiter eskaliert"
 DIPLO_PLAY_INITIATOR: "[concept_initiator]"
 DIPLO_PLAY_TARGET: "[concept_target]"
 DIPLO_PLAY_YOU: "(Wir)"
 DIPLO_PLAY_TOTAL_MOBILIZED: "Insgesamt mobilisiert"
 DIPLO_PLAY_CLICK_TO_SWAY: "#instruction Auf @approves!/@disapproves! klicken, um die Optionen für das [concept_sway] für jedes [concept_country] zu sehen#!"
 DIPLO_PLAY_CANNOT_SWAY: "Ein [concept_sway] ist nur während der Schachzug-Phase möglich"
 DIPLO_PLAY_CLICK_TO_SET_STANCE: "[SelectLocalization(DiplomaticPlay.IsInvolved(GetMetaPlayer.GetPlayedOrObservedCountry), 'DIPLO_PLAY_CLICK_STANCES', 'DIPLO_PLAY_STANCES')]"
 DIPLO_PLAY_CLICK_STANCES: "#instruction Zum Wechseln unserer Haltung klicken#!"
 DIPLO_PLAY_STANCES: "#bold Derzeitige Haltungen#!"
 BELLIGERENTS: "Kriegsparteien"
 TO_ARMS: "Zu den Waffen!"
 DIPLO_PLAY_MANEUVERS_TARGET: "[DiplomaticPlay.GetNumTargetManeuversRemaining|v]"
 DIPLO_PLAY_MANEUVERS_INITIATOR: "[DiplomaticPlay.GetNumInitiatorManeuversRemaining|v]"
 SUPPORT_WITHOUT_CONDITION: "Bedingungslos unterstützen"
 DIPLO_PLAY_TOTAL_FLOTILLAS_BREAKDOWN: "#header [Concept('concept_flotilla', '$concept_flotillas$')] der [Country.GetAdjective|l]en Seite#!\n@flotillas! [DiplomaticPlay.GetTotalNumWarshipsForSide(Country.Self)|v] insgesamt\n$TOOLTIP_DELIMITER$\n[DiplomaticPlay.GetTotalNumWarshipsForSideBreakdown(Country.Self)]"
 DIPLO_PLAY_TOTAL_MOBILIZED_BATTALIONS_BREAKDOWN: "#header [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$e')] [Concept('concept_battalion', '$concept_battalions$')] der [Country.GetAdjective|l]en Seite#!\n@battalions!#v  [DiplomaticPlay.GetTotalNumMobilizedBattalionsForSide(Country.Self)] insgesamt\n$TOOLTIP_DELIMITER$\n[DiplomaticPlay.GetTotalNumMobilizedBattalionsForSide(Country.Self)]"
 DIPLO_PLAY_COUNTRY_BATTALIONS_BREAKDOWN: "[COUNTRY.GetAltName('NOM')|U] hat @battalions!#v [Country.GetBattalions]#! [Concept('concept_battalion', '$concept_battalions$')] (#v [Country.GetMobilizationRatio|0%]#! @mobilization! [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$')|l])"
 DIPLO_PLAY_COUNTRY_FLOTILLAS_BREAKDOWN: "[Country.GetAltName('NOM')|U] hat @flotillas![Country.GetWarships|v] [Concept('concept_flotilla', '$concept_flotillas$')]"
 GOODS_INPUT_REQUIRED_FOR_NO_PENALTY: "Mindestens [GetDefine('NEconomy', 'GOODS_SHORTAGE_PENALTY_THRESHOLD')|v%0] [concept_buy_orders] für die Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ müssen erfüllt sein, um eine Ausstoßreduzierung zu vermeiden."
 GOODS_INPUT_SHORTAGE_OUTPUT_PENALTY: "Der derzeitige Malus liegt bei [Building.GetInputShortagePenalty|%v0] und wird sich mit der Zeit in Richtung des Zielmalus von [Building.CalcInputGoodsShortageTargetPenalty|%v0] ändern."
 GOODS_INPUT_SHORTAGE_MAX_TOOLTIP: "#header [Concept('concept_shortage','$concept_input_goods_shortage$')] in „[Building.GetName]“#!\nEs gibt keine [concept_sell_orders] für die Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ in der Staatsregion „[Building.GetState.GetStateRegion.GetName]“, weshalb alle [concept_building] von diesem Typ einen Malus auf den Ausstoß erhalten.\n\n$GOODS_INPUT_SHORTAGE_OUTPUT_PENALTY$\n\n$GOODS_INPUT_REQUIRED_FOR_NO_PENALTY$"
 GOODS_INPUT_SHORTAGE_TOOLTIP: "#header [Concept('concept_shortage','$concept_input_goods_shortage$')] in „[Building.GetName]“#!\nEs sind nur genügend [concept_sell_orders] für die Ware „[Goods.GetTextIcon][Nbsp][Goods.GetName]“ in „[Building.GetState.GetName]“ verfügbar, um [Building.GetState.CalcSupplyToDemandRatio(Goods.Self)|%v] der [concept_buy_orders] zu erfüllen, weshalb alle [concept_building] von diesem Typ einen Malus auf den Ausstoß erhalten.\n\n$GOODS_INPUT_SHORTAGE_OUTPUT_PENALTY$\n\n$GOODS_INPUT_REQUIRED_FOR_NO_PENALTY$\n\n$alert_market_goods_shortage_alert_hint_data_version$"
 GOODS_OUTPUT_PENALTY_TOOLTIP: "#header [Concept('concept_shortage','$concept_input_goods_shortage$')] in „[Building.GetName]“#!\nEine Knappheit der Ware(n) „[Building.GetGoodsShortageListDesc]“ führt zu einem Malus auf den Ausstoß dieses [Concept('concept_building', 'Gebäudes')].\n\n$GOODS_INPUT_SHORTAGE_OUTPUT_PENALTY$"
 GOODS_OUTPUT_PENALTY_LINGERING_TOOLTIP: "#header [Concept('concept_shortage','$concept_input_goods_shortage$')] in „[Building.GetName]“#!\nDer frühere Mangel an [Concept('concept_good', '$concept_goods$')] hat zu einem anhaltenden Malus auf den Ausstoß aus diesem [concept_building] geführt.\n\nDer derzeitige Malus beträgt [Building.GetInputShortagePenalty|%v0], wird aber mit der Zeit verschwinden."
 GOODS_SHORTAGE_STATE_DESC_INTERNAL: "@warning! „[Goods.GetState.GetName|U]“ hat eine [concept_shortage] von „[Goods.GetName]“"
 GOODS_SHORTAGE_STATE_DESC: "[SelectLocalization(Goods.GetState.IsValid, 'GOODS_SHORTAGE_STATE_DESC_INTERNAL', '')]"
 GOODS_SHORTAGE_MARKET_DESC: "@warning! „[Goods.GetMarket.GetName]“ hat eine [concept_shortage] von „[Goods.GetName]“"
 GOODS_SHORTAGE_TOOLTIP: "[Goods.GetGoodsShortageDesc]\n\n$alert_market_goods_shortage_alert_hint_data_version$"
 GOODS_SHORTAGE_SHORT_CONCEPT: "[concept_shortage]"
 SINGLE_GOODS_OR_EMPLOYMENT_MORE: "mehr"
 SINGLE_GOODS_OR_EMPLOYMENT_LESS: "weniger"
 UNSCALED_MODIFIERS_COLON: "#title Unskalierte Modifikatoren:#!"
 PER_LEVEL_MODIFIERS_COLON: "#title Modifikatoren pro Stufe:#!"
 TOTAL_MODIFIERS_COLON: "#title Modifikatoren insgesamt:#!"
 INCREASED_EMPLOYMENT_COLON: "#title Erhöhte Beschäftigung#!"
 DECREASED_EMPLOYMENT_COLON: "#title Abnehmende Beschäftigung#!"
 PM_TIMED_MODIFIERS: "#title Zeitliche Modifikatoren:#!\n$BREAKDOWN$"
 PM_TIMED_MODIFIER_FORMAT: "#tooltippable #tooltip:$DESCRIPTION_TAG$ $NAME$#!#!"
 SINGLE_GOODS_AMOUNT_PRODUCTION_TOTAL: "#v $TOTAL_AMOUNT|D=+$#! insgesamt"
 SINGLE_GOODS_AMOUNT_PRODUCTION_PER_LEVEL: "#v $PER_LEVEL_AMOUNT|=+D$#! pro Stufe"
 SINGLE_GOODS_AMOUNT_CONSUMPTION_TOTAL: "#v $TOTAL_AMOUNT|D=-$#! insgesamt"
 SINGLE_GOODS_AMOUNT_CONSUMPTION_PER_LEVEL: "#v $PER_LEVEL_AMOUNT|=-D$#! pro Stufe"
 SINGLE_GOODS_DELTA_PRODUCTION_TOTAL: "#v $TOTAL_DELTA|=+D$#! $MORE_OR_LESS$ insgesamt"
 SINGLE_GOODS_DELTA_PRODUCTION_PER_LEVEL: "#v $PER_LEVEL_DELTA|=+D$#! $MORE_OR_LESS$ pro Stufe"
 SINGLE_GOODS_DELTA_CONSUMPTION_TOTAL: "#v $TOTAL_DELTA|=-D$#! $MORE_OR_LESS$ insgesamt"
 SINGLE_GOODS_DELTA_CONSUMPTION_PER_LEVEL: "#v $PER_LEVEL_DELTA|=-D$#! $MORE_OR_LESS$ pro Stufe"
 SINGLE_GOODS_MARKET_PRICE: "@money!$PRICE|1v$ $PRICE_ICON$ auf dem Markt „[Market.GetName]“"
 SINGLE_GOODS_STATE_PRICE: "@money!$PRICE|1v$ $PRICE_ICON$ in [State.GetName]"
 SINGLE_GOODS_STATE_PRICE_TOOLTIPPABLE: "(#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ @money!$PRICE|1v$#!#! $PRICE_ICON$)"
 SINGLE_GOODS_MARKET_PRICE_RANGE: "@money!$MIN_PRICE|1v$ $MIN_PRICE_ICON$ – @money!$MAX_PRICE|1v$ $MAX_PRICE_ICON$ auf $NUM_MARKETS$ [Concept('concept_market', 'Märkten')]"
 SINGLE_GOODS_STATE_PRICE_RANGE: "@money!$MIN_PRICE|1v$ $MIN_PRICE_ICON$ – @money!$MAX_PRICE|1v$ $MAX_PRICE_ICON$ in $NUM_STATES$ [Concept('concept_state', '$concept_states$')]"
 SINGLE_GOODS_STATE_PRICE_RANGE_TOOLTIPPABLE: "#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ @money!$MIN_PRICE|1v$#!#! $MIN_PRICE_ICON$ – #tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ @money!$MAX_PRICE|1v$#!#! $MAX_PRICE_ICON$ in $NUM_STATES$ [Concept('concept_state', '$concept_states$')]"
 GOODS_PRICE_DELTA_SUBSTITUTION_DISCLAIMER: "@information! Einige der vorhergesagten Preisänderungen entfalten ihre vollständige Wirkung erst nach Eintreten des [Concept('concept_goods_substitution', 'Warenersatzes')]"
 SINGLE_GOODS_MARKET_PRICE_WITH_DELTA: "@money!$PRICE|1v$ $PRICE_ICON$ @arrow_right! @money!$AFTER_PRICE|1v$ $AFTER_PRICE_ICON$ auf „[Market.GetName]“"
 SINGLE_GOODS_STATE_PRICE_WITH_DELTA: "@money!$PRICE|1v$ $PRICE_ICON$ @arrow_right! @money!$AFTER_PRICE|1v$ $AFTER_PRICE_ICON$ in [State.GetName]"
 SINGLE_GOODS_STATE_PRICE_TOOLTIPPABLE_WITH_DELTA: "(#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ @money!$PRICE|1v$#!#! $PRICE_ICON$) @arrow_right! (#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ @money!$AFTER_PRICE|1v$#!#! $AFTER_PRICE_ICON$)"
 SINGLE_GOODS_MARKET_PRICE_RANGE_WITH_DELTA: "(@money!$MIN_PRICE|1v$ $MIN_PRICE_ICON$ - @money!$MAX_PRICE|1v$ $MAX_PRICE_ICON$) @arrow_right! (@money!$MIN_AFTER_PRICE|1v$ $MIN_AFTER_PRICE_ICON$ - @money!$MAX_AFTER_PRICE|1v$ $MAX_AFTER_PRICE_ICON$) auf $NUM_MARKETS$ [Concept('concept_market', '$concept_markets$n')]"
 SINGLE_GOODS_STATE_PRICE_RANGE_WITH_DELTA: "(@money!$MIN_PRICE|1v$ $MIN_PRICE_ICON$ – @money!$MAX_PRICE|1v$ $MAX_PRICE_ICON$) @arrow_right! (@money!$MIN_AFTER_PRICE|1v$ $MIN_AFTER_PRICE_ICON$ – @money!$MAX_AFTER_PRICE|1v$ $MAX_AFTER_PRICE_ICON$) in $NUM_STATES$ [Concept('concept_state', '$concept_states$')]"
 SINGLE_GOODS_STATE_PRICE_RANGE_TOOLTIPPABLE_WITH_DELTA: "(#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ @money!$MIN_PRICE|1v$#!#! $MIN_PRICE_ICON$ – #tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ @money!$MAX_PRICE|1v$#!#! $MAX_PRICE_ICON$) @arrow_right! (#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ @money!$MIN_AFTER_PRICE|1v$#!#! $MIN_AFTER_PRICE_ICON$ – #tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ @money!$MAX_AFTER_PRICE|1v$#!#! $MAX_AFTER_PRICE_ICON$) in $NUM_STATES$ [Concept('concept_state', '$concept_states$')]"
 SINGLE_POP_EMPLOYMENT_CHANGE_FORMAT: "[PopType.GetName]: [SelectLocalization(StringIsEmpty('$DELTA$'), '$AMOUNT$', '$DELTA$')]"
 SINGLE_POP_EMPLOYMENT_CHANGE_SLAVES_ROLE: "[POP_TYPE.GetName] oder [TARGET_POP_TYPE.GetName]: [SelectLocalization(StringIsEmpty('$DELTA$'), '$AMOUNT$', '$DELTA$')]"
 SINGLE_POP_EMPLOYMENT_CHANGE_FROM_BASE_TOTAL: "$TOTAL_CHANGE|=+D$ insgesamt"
 SINGLE_POP_EMPLOYMENT_CHANGE_FROM_BASE_PER_LEVEL: "$PER_LEVEL_CHANGE|=+D$ pro Stufe"
 SINGLE_POP_EMPLOYMENT_DELTA_TOTAL: "$TOTAL_DELTA|=+D$ $MORE_OR_LESS$ insgesamt"
 SINGLE_POP_EMPLOYMENT_DELTA_PER_LEVEL: "$PER_LEVEL_DELTA|=+D$ $MORE_OR_LESS$ pro Stufe"
 SINGLE_GOODS_FORMAT: "[Goods.GetTextIcon][Nbsp][Goods.GetName]: [SelectLocalization(StringIsEmpty('$DELTA$'), '$AMOUNT$', '$DELTA$')] $SINGLE_GOODS_PRICE_BREAKDOWN$"
 SINGLE_GOODS_FORMAT_WITH_SHORTAGE: "[Goods.GetTextIcon][Nbsp][Goods.GetName]: [SelectLocalization(StringIsEmpty('$DELTA$'), '$AMOUNT$', '$DELTA$')] $SINGLE_GOODS_PRICE_BREAKDOWN$ – @goods_shortage! [Concept('concept_shortage','$concept_input_goods_shortage$')]"
 SINGLE_GOODS_STATE_PRICE_TOOLTIP: "#header Preis der Ware „[Goods.GetName]“#!\n$GOODS_STATE_PRICE$[ConcatIfNeitherEmpty('\n', '$GOODS_MARKET_PRICE$')]"
 STATE_HAS_INPUT_SHORTAGES: "#header [Concept('concept_shortage','$concept_input_goods_shortage$')]#!\n„[State.GetName|U]“ hat [State.GetNumBuildingsAffectedByGoodsShortage|v] [Concept('concept_building', '$concept_buildings$')], die unter einer $concept_input_goods_shortage$ leiden"
 SELECT_OBJECTIVE_MAIN_TITLE: "Spielziel auswählen"
 SELECT_OBJECTIVE_TITLE: "Ziele"
 SELECT_OBJECTIVE_TAG_TITLE: "Empfohlene Länder"
 START_GAME_NO_OBJECTIVE_NO_TAG: "Ohne Ziel spielen und mit der Auswahl eines Landes fortfahren"
 START_GAME_CHOSEN_OBJECTIVE_NO_TAG: "Spiel starten\n#instruction Land auswählen#!"
 START_GAME_CHOSEN_OBJECTIVE_CHOSEN_TAG: "Spiel starten"
 NO_OBJECTIVE: "Es wurde kein Ziel ausgewählt"
 OBJECTIVE_UNAVAILABLE_LACK_OF_DLC: "Dieses Ziel ist nicht verfügbar, weil keiner der folgenden DLCs vorliegt:\n$DLCS_WITH_FEATURE$"
 SANDBOX: "Sandbox"
 SELECT_ANY_COUNTRY: "Beliebiges Land wählen"
 START_GAME: "Spiel starten"
 HAS_SELECTED_COUNTRY_TOOLTIP: "Ein [concept_country] wurde bereits ausgewählt"
 NO_SELECTED_COUNTRY_TOOLTIP: "Kein [concept_country] wurde ausgewählt"
 START_ANY_COUNTRY_TOOLTIP: "Ein neues Spiel beginnen und ein beliebiges [concept_country] auf der Karte auswählen[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(GameSetup.GetSelectedObjective.IsAvailableForAllCountries), 'CANNOT_START_AS_ANY_COUNTRY'))]"
 CANNOT_START_AS_ANY_COUNTRY: "@red_cross! „[GameSetup.GetSelectedObjective.GetName]“ kann nur mit den empfohlenen [Concept('concept_country', '$concept_countries$n')] gespielt werden"
 START_GAME_TOOLTIP: "Ein neues Spiel als #variable [CountryDefinition.GetName]#! beginnen"
 SELECTABLE_COUNTRY_TOOLTIP: "#header [Country.GetAltName('NOM')|U]#!\n$DATA_COUNTRY_NAME_TOOLTIP$\n\n#instruction Klicken, um als [Country.GetName] zu spielen#!"
 RIGHT_CLICK_TO_OPEN_CONTEXT_MENU: "@rightclick! #instruction #bold Rechtsklicken#!#!, um das #b Kontext-Menü zu öffnen#!"
 NULL_OBJ: "#todo NULL_OBJ#!"
 NULL_OBJ_ADJ: "#todo NULL_OBJ_ADJ#!"
 NULL_OBJ_DESC: "#todo NULL_OBJ_DESC#!"
 NULL_OBJ_TOOLTIP: "#todo NULL_OBJ_TOOLTIP#!"
 color_blind_mode_deuteranopia: "Deuteranopie"
 color_blind_mode_protanopia: "Protanopie"
 color_blind_mode_tritanopia: "Tritanopie"
 CANNOT_START_MULTIPLE_TUTORIALS: "Die derzeit laufende Lektion muss beendet sein, ehe eine neue begonnen werden kann"
 EMPTY_STATE: "Hier gibt es nichts zu tun!"
 AUTO_EXPAND: "Auto. Erweitern"
 CANCEL_AUTO_EXPAND: "Auto. Erweitern beenden"
 AUTOEXPANDING_YES_HEADER: "#header Automatische Erweiterung abbrechen#!\n$TOOLTIP_DELIMITER$\n#title Dieses [concept_building] wird derzeit automatisch erweitert, sobald folgende Bedingungen erfüllt sind:#!"
 AUTOEXPANDING_YES_INSTRUCTION: "#instruction Klicken, um Auto. Erweitern zu beenden#!"
 AUTOEXPANDING_NO_HEADER: "#header Automatisches Erweitern#!\n$TOOLTIP_DELIMITER$\n#title Dieses [concept_building] wird automatisch erweitert, wenn folgende Bedingungen erfüllt sind:#!"
 AUTOEXPANDING_NO_INSTRUCTION: "#instruction Klicken, um automatische Erweiterung zu planen#!"
 AUTOEXPAND_BUILDING_TOOLTIP: "[SelectLocalization(Building.IsAutoExpanding,'AUTOEXPANDING_YES_HEADER','AUTOEXPANDING_NO_HEADER')]\n$TRIGGER$\n\n[SelectLocalization(Building.IsAutoExpanding,'AUTOEXPANDING_YES_INSTRUCTION','AUTOEXPANDING_NO_INSTRUCTION')]"
 TOGGLE_AUTOEXPAND_INVALID_BUILDING_TYPE: "„[BuildingType.GetName]“ werden nicht automatisch erweitert"
 AUTOEXPAND_BUILDING_ICON_TOOLTIP: "[SelectLocalization(Building.IsAutoExpanding,'IS_AUTOEXPANDING','IS_NOT_AUTOEXPANDING')]\n$TOOLTIP_DELIMITER$\n[Building.GetAutoExpandTriggers]"
 AUTOEXPAND_BUILDING_TRIGGERS: "#title „[Building.GetName]“ in „[Building.GetState.GetName]“ erweitert sich automatisch, wenn diese Bedingungen erfüllt sind:#! #indent_newline:3 \n$TRIGGER$"
 IS_AUTOEXPANDING: "#header Auto. Erweitern#!"
 IS_NOT_AUTOEXPANDING: "#header Kein Auto. Erweitern#!"
 NO_URBAN_BUILDINGS: "Es gibt keine Stadtgebäude"
 NO_RURAL_BUILDINGS: "Es gibt keine Landgebäude"
 NO_DEVELOPMENT_BUILDINGS: "Es gibt keine Entwicklungsgebäude"
 NO_URBAN_BUILDINGS_HINT: "@information! Stadtgebäude können mit Hilfe der Baulinse oder in der Staatsübersicht errichtet werden"
 NO_RURAL_BUILDINGS_HINT: "@information! Landgebäude können mit Hilfe der Baulinse oder in der Staatsübersicht errichtet werden"
 NO_DEVELOPMENT_BUILDINGS_HINT: "@information! Entwicklungsgebäude können mit Hilfe der Baulinse oder in der Staatsübersicht errichtet werden"
 STATE_BUILDING_TAB_LOCAL_GOODS_INFO: "[SelectLocalization(Goods.HasGoodsShortage, '@goods_shortage!', '')][Goods.GetTextIcon]@money![Goods.GetStatePrice|v0] [Goods.GetCompareIconAgainstBasePriceNoFormatting(Goods.GetStatePrice)] (#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetStatePrice)|%0=-]#!)"
 AVAILABLE_BUILDINGS: "Verfügbare Gebäude, die errichtet werden können"
 EXPANDABLE_BUILDINGS: "Verfügbare Gebäude, die erweitert werden können"
 AVAILABLE_URBAN_BUILDINGS: "Potenzielle Stadtgebäude"
 AVAILABLE_RURAL_BUILDINGS: "Potenzielle Landgebäude"
 AVAILABLE_DEVELOPMENT_BUILDINGS: "Potenzielle Entwicklungsgebäude"
 PREFERENCE_PREDICTION: "Prognose"
 PREFERENCE_LABEL: "[SelectLocalization(DiplomaticPlayConfirmation.PredictHasPreferenceForInitiator(Country.Self), 'PREFERENCE_INITIATOR', '')][SelectLocalization(DiplomaticPlayConfirmation.PredictHasPreferenceForTarget(Country.Self), 'PREFERENCE_TARGET', '')]"
 PREFERENCE_INITIATOR: "[DiplomaticPlayConfirmation.GetInitiatorCountry.GetFlagTextIcon]"
 PREFERENCE_TARGET: "[DiplomaticPlayConfirmation.GetTargetCountry.GetFlagTextIcon]"
 DIPLO_PLAY_SUPPORT_INITIATOR: "[DiplomaticPlayConfirmation.GetInitiatorCountry.GetFlagTextIcon]"
 DIPLO_PLAY_SUPPORT_INITIATOR_LABEL: "[SelectLocalization(DiplomaticPlayConfirmation.CanJoinInitiator(Country.Self), 'CAN_SUPPORT_INITIATOR', 'CANNOT_SUPPORT')]"
 CAN_SUPPORT_INITIATOR: "[DiplomaticPlayConfirmation.PredictInitiatorPreferenceScoreFormatted(Country.Self)]"
 DIPLO_PLAY_SUPPORT_TARGET_LABEL: "[SelectLocalization(DiplomaticPlayConfirmation.CanJoinTarget(Country.Self), 'CAN_SUPPORT_TARGET', 'CANNOT_SUPPORT')]"
 CAN_SUPPORT_TARGET: "[DiplomaticPlayConfirmation.PredictTargetPreferenceScoreFormatted(Country.Self)]"
 PREDICT_PREFERENCE_SCORE_POSITIVE: "#positive_value $VALUE|+=$#!"
 PREDICT_PREFERENCE_SCORE_NEGATIVE: "#negative_value $VALUE|+=$#!"
 PREDICT_PREFERENCE_SCORE_NEUTRAL: "#v $VALUE|=$#!"
 CANNOT_SUPPORT: "#title n. a.#!"
 OUR_SIDE: "Unsere Seite"
 ENEMY_SIDE: "Feindliche Seite"
 DIPLO_PLAY_SUPPORT_TARGET: "[DiplomaticPlayConfirmation.GetTargetCountry.GetFlagTextIcon]"
 URBAN_BUILDINGS_IN_COUNTRY: "Stadtgebäude [GetPlayer.GetAltName('IN')]"
 RURAL_BUILDINGS_IN_COUNTRY: "Landgebäude [GetPlayer.GetAltName('IN')]"
 DEVELOPMENT_BUILDINGS_IN_COUNTRY: "Entwicklungsgebäude [GetPlayer.GetAltName('IN')]"
 GRAPH_NOT_INITIALIZED: "Keine historischen Daten"
 #GetPlayer can be used to access the dead player country as long as the game over screen is still available
 GAME_OVER_TITLE: "Spielende"
 GAME_OVER_TITLE_COUNTRY: "Am [GameOverScreen.GetGameOverDateString] fanden die Tage [GetPlayer.GetAltName('GEN')] ein Ende."
 GAME_OVER_TITLE_COUNTRY_END_OF_CAMPAIGN: "Glückwunsch! [GetPlayer.GetAltName('NOM')|U] hat am [GameOverScreen.GetGameOverDateString] erfolgreich das Ende der Kampagne erreicht."
 GAME_OVER_ANNEXED: "Wir wurden annektiert!"
 GAME_OVER_SUMMARY: "Sie haben als [GetPlayer.GetAltName('NOM')] gespielt."
 GAME_OVER_CONTINUE_AS_OBSERVER: "Als [Concept('concept_observer_mode', '$concept_observer$')] fortsetzen"
 GAME_OVER_GO_TO_LOBBY: "[SelectLocalization(GameHasMultiplePlayers, 'FRONTEND_GOTO_LOBBY', 'CONTINUE_PLAYING')]"
 CONTINUE_PLAYING: "Weiter spielen"
 MODIFIER_DESC_BOOL: "$NAME$ ($DESC$)"
 VALUE_CALCULATOR_BASE_ENTRY: "$VALUE|v$ von Grundwert"
 VALUE_CALCULATOR_BASE_ENTRY_WITH_DESCRIPTION: "#tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE|v$#!#! von Grundwert"
 VALUE_CALCULATOR_ADD_ENTRY: "$VALUE|v=$ durch $TITLE$"
 VALUE_CALCULATOR_ADD_ENTRY_WITH_DESCRIPTION: "#tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE|v=$#!#! durch $TITLE$"
 VALUE_CALCULATOR_MULT_ENTRY: "$VALUE|v%=$ durch $TITLE$"
 VALUE_CALCULATOR_MULT_ENTRY_WITH_DESCRIPTION: "#tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE|v%=$#!#! durch $TITLE$"
 VALUE_CALCULATOR_FACTOR_ENTRY: "Multipliziert mit $VALUE|v$ durch $TITLE$"
 VALUE_CALCULATOR_FACTOR_ENTRY_WITH_DESCRIPTION: "Multipliziert mit #tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE|v$#!#! durch $TITLE$"
 VALUE_CALCULATOR_LOWER_BOUND_ENTRY: "Begrenzt auf ein #b Minimum#! von $VALUE|v$ durch $TITLE$"
 VALUE_CALCULATOR_LOWER_BOUND_ENTRY_WITH_DESCRIPTION: "Begrenzt auf ein #b Minimum#! von #tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE|v$#!#! durch $TITLE$"
 VALUE_CALCULATOR_UPPER_BOUND_ENTRY: "Begrenzt auf ein #b Maximum#! von $VALUE|v$ durch $TITLE$"
 VALUE_CALCULATOR_UPPER_BOUND_ENTRY_WITH_DESCRIPTION: "Begrenzt auf ein #b Maximum#! von #tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE|v$#!#! durch $TITLE$"
 VALUE_CALCULATOR_VALUE_WITH_BREAKDOWN: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v$#!#!"
 VALUE_CALCULATOR_VALUE_FROM_STATIC_MODIFIER: "$VALUE$ durch „$TITLE$“"
 VALUE_CALCULATOR_UPPER_BOUND_ENTRY_NO_TITLE: "Begrenzt auf ein #b Maximum#! von $VALUE|v0$"
 VALUE_CALCULATOR_UPPER_BOUND_ENTRY_PERCENT_NO_TITLE: "Begrenzt auf ein #b Maximum#! von $VALUE|%v0$"
 RECRUIT_GENERAL_BUTTON: "General rekrutieren"
 RECRUIT_ADMIRAL_BUTTON: "Admiral rekrutieren"
 LOAD_GAME_VERSION: "Version: [SaveGameItem.GetVersionName]"
 LOAD_GAME_DIFFERENT_VERSION: "@warning! #X Unterschiedliche Versionen#!"
 LOAD_GAME_DIFFERENT_VERSION_TT: "Dieser Spielstand wurde mit einer anderen Version von #y Victoria 3#! ($LOAD_GAME_VERSION$) erstellt."
 LOAD_MISSING_ITEMS_TT: "[SaveGameItem.GetIncompatibilityTooltip]"
 LOAD_GAME_DIFFERENT_VERSION_CONFIRM: "$LOAD_GAME_DIFFERENT_VERSION_TT$\n\nSicher, dass dieser Spielstand geladen werden soll?"
 LOAD_GAME_MISSING_MODS_CONFIRM: "$LOAD_MISSING_ITEMS_TT$\n\nDas Laden dieses Spielstands könnte zu Bugs oder Abstürzen führen.\n\nSind Sie sicher, dass Sie fortfahren wollen?"
 LOAD_GAME_CONFIRM: "Sind Sie sicher, dass Sie fortfahren wollen?"
 LOAD_INGAME_BUTTON_DISABLED_NOSAVES: "Es gibt keine gespeicherten Spiele"
 LOAD_INGAME_BUTTON_DISABLED: "Laden von gespeicherten Spielen deaktiviert"
 OUTDATED_MOD_ENTRY: "• $MOD_NAME$ (unterstützt $MOD_VERSION$)"
 OUTDATED_MODS_ALERT_EXIT_GAME: "$QUIT$"
 OUTDATED_MODS_ALERT_IGNORE: "@warning! Ignorieren"
 BUILDING_GENERAL_INFO_HEADER: "#title Allgemeine Infos#!:"
 BUILDING_TYPE_PORT_GENERAL_INFO: "Einen [GetBuildingType('building_port').GetName] zu bauen, ermöglicht es, den [concept_state] mit einem [concept_market] zu verbinden"
 BUILDING_PORT_GENERAL_INFO_BUILT_AND_CONNECTS: "Dieser oder ein anderer [GetBuildingType('building_port').GetName] in [STATE.GetName] ist mit dem Markt „[MARKET.GetName]“ verbunden"
 BUILDING_PORT_GENERAL_INFO_NOT_BUILT_WILL_CONNECT: "Einen [GetBuildingType('building_port').GetName] in [STATE.GetName] zu errichten, wird eine Verbindung zum Markt „[MARKET.GetName]“ aufbauen"
 MONTHLY_PRICE_REPORT: "Monatlicher Preisbericht"
 STATE_GDP_STATUS_CONDENSED: "#variable @money![State.GetGDPContribution|K]#! (#variable [State.GetGDPContributionPercentage|%0]#!)"
 STATE_POPULATION_STATUS_CONDENSED: "[State.GetPopulationSize|Kv] [GetArrowIcon_int64(State.GetPopTotalChange)]"
 SOL_CONDENSED: "[LabelingHelper.GetLabelForStandardOfLivingNoIconCFixedPointFormatFromExpected(State.GetAverageStandardOfLivingAll,State.GetExpectedStandardOfLivingAll)|v] ([State.GetFormattedStandardOfLivingAll|v])"
 STATE_TURMOIL_CONDENSED: "#b [State.CalcTurmoil|%1-]#!"
 STATE_DEVASTATION_CONDENSED: "#b [State.GetStateRegion.GetDevastationLevel|%R1]#!"
 STATE_INFRASTRUCTURE_CONDENSED: "[SelectLocalization(GreaterThan_CFixedPoint(State.GetInfrastructureUsage,State.GetInfrastructure), 'WARNING', '')]Es werden #tooltippable #tooltip:[State.GetTooltipTag],STATE_INFRASTRUCTURE_USAGE_TOOLTIP [State.GetInfrastructureUsage|0v]#!#! von #tooltippable #tooltip:[State.GetTooltipTag],STATE_INFRASTRUCTURE_TOOLTIP [State.GetInfrastructure|0v]#!#! genutzt"
 STATE_TAX_CAPACITY_CONDENSED: "[AddLocalizationIf(GreaterThan_CFixedPoint(State.CalcTaxCapacityUsage,State.CalcTaxCapacity), 'WARNING')]Es werden #tooltippable #tooltip:[State.GetTooltipTag],STATE_TAX_CAPACITY_USAGE_TOOLTIP [State.CalcTaxCapacityUsage|0v]#!#! von #tooltippable #tooltip:[State.GetTooltipTag],STATE_TAX_CAPACITY_TOOLTIP [State.CalcTaxCapacity|0v]#!#! genutzt [AddLocalizationIf(GreaterThan_CFixedPoint(State.CalcTaxCapacityUsage, State.CalcTaxCapacity), 'STATE_TAX_CAPACITY_INSUFFICIENT')]"
 STATE_MARKET_CAPITAL_STATUS_CONDENSED: "[State.GetMarket.GetName]\n[State.GetMarketAccess|%v0]"
 CASUALTY_DEBUG_CASUALTIES_HEADER: "Erlittene Verluste:"
 CASUALTY_DEBUG_CASUALTIES_NONE: "Es gab keine Verluste"
 CASUALTY_DEBUG_ATTRITION_CASUALTY_UNIT: "#variable $DATE$#!: Tote: $DEAD|v$, Verwundete: $WOUNDED|v$, Gesamt: $TOTAL|v$ (Zermürbung)"
 CASUALTY_DEBUG_BATTLE_CASUALTY_UNIT: "#variable $DATE$#!: Tote: $DEAD|v$, Verwundete: $WOUNDED|v$, Gesamt: $TOTAL|v$ (Schlacht $BATTLE_NAME$)"
 CASUALTY_DEBUG_ATTRITION_CASUALTY_BUILDING: "#variable $DATE$#!: $UNIT_NAME$ Tote: $DEAD|v$, Verwundete: $WOUNDED|v$, Gesamt: $TOTAL|v$ (Zermürbung)"
 CASUALTY_DEBUG_BATTLE_CASUALTY_BUILDING: "#variable $DATE$#!: $UNIT_NAME$ Tote: $DEAD|v$, Verwundete: $WOUNDED|v$, Gesamt: $TOTAL|v$ (Schlacht $BATTLE_NAME$)"
 COMBAT_UNIT_DEFENSE_BREAKDOWN: "#header [concept_defense]#!\n$concept_defense$ von @unit_defense!#v [CombatUnit.GetDefenseRaw]#! aufgrund von:\n[CombatUnit.GetDefenseBreakdown]"
 COMBAT_UNIT_OFFENSE_BREAKDOWN: "#header [concept_offense]#!\n$concept_offense$ von @unit_offense!#v [CombatUnit.GetOffenseRaw]#! aufgrund von:\n[CombatUnit.GetOffenseBreakdown]"
 COMBAT_UNIT_MANPOWER_BREAKDOWN: "#header [concept_manpower]#!\n[CombatUnit.GetManpowerTooltip]"
 COMBAT_UNIT_MANPOWER: "@manpower! #v [CombatUnit.GetManpowerRaw]#!"
 COMBAT_UNIT_VETERANCY_EFFECT: "#bold Auswirkungen:#!"
 COMBAT_UNIT_VETERANCY_TOOLTIP: "#header [concept_veterancy_level]#!\nDerzeit: #v [CombatUnit.GetCurrentVeterancyLevelName]#!\n#v [CombatUnit.GetCurrentExperienceTowardsNextLevel]#! / [CombatUnit.GetNeededExperienceForNextLevel] [concept_unit_experience]\n[CombatUnit.GetCurrentVeterancyLevelEffect]\n$TOOLTIP_DELIMITER$\nJede Woche erhält diese Einheit Erfahrung, und zwar:\n[CombatUnit.GetExperienceGainDescription]"
 #COMBAT_UNIT_VETERANCY_TOOLTIP: "#header [concept_veterancy_level]#!\nCurrent: #v [CombatUnit.GetCurrentVeterancyLevelName]#!\n$TOOLTIP_DELIMITER$\n#v [CombatUnit.GetCurrentExperienceTowardsNextLevel]#!/[CombatUnit.GetNeededExperienceForNextLevel] [concept_unit_experience]\n[CombatUnit.GetExperienceGainDescription]"
 COMBAT_UNIT_AT_MAX_LEVEL: "Einheit hat ihre höchste [concept_veterancy_level] erreicht"
 COMBAT_UNIT_TOOLTIP: "#header [CombatUnit.GetName]#!\nDurch „[CombatUnit.GetBuilding.GetName]“ in „[CombatUnit.GetBuilding.GetState.GetName][ConcatIfNeitherEmpty('\n', AddLocalizationIf(CombatUnit.IsArmyUnit, 'COMBAT_UNIT_TOOLTIP_MOBILIZED_STATUS'))]“\n$TOOLTIP_DELIMITER$\n[CombatUnit.GetManpowerFormatted] [concept_manpower]\n[CombatUnit.GetMorale] [concept_morale]\n\n[CombatUnit.GetOffenseFormatted] [concept_offense]\n[CombatUnit.GetDefenseFormatted] [concept_defense]"
 COMBAT_UNIT_TOOLTIP_MOBILIZED_STATUS: "[SelectLocalization(Or(CombatUnit.IsMobilizing, CombatUnit.IsFullyMobilized), SelectLocalization(CombatUnit.IsFullyMobilized, 'COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZED', 'COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZING'), 'COMBAT_UNIT_MOBILIZATION_STATUS_DEMOBILIZED')]"
 POP_SIZE_TITLE: "[Concept('concept_pop', '$concept_population$')]"
 PIN_CHARACTER: "[Character.GetFullName] an Pinnwand anheften"
 UNPIN_CHARACTER: "[Character.GetFullName] von Pinnwand lösen"
 PIN_DIPLOMATIC_PLAY: "„[DiplomaticPlay.GetName]“ an Pinnwand anheften"
 UNPIN_DIPLOMATIC_PLAY: "„[DiplomaticPlay.GetName]“ von Pinnwand lösen"
 PIN_POLITICAL_MOVEMENT: "„[PoliticalMovement.GetName]“ an Pinnwand anheften"
 UNPIN_POLITICAL_MOVEMENT: "„[PoliticalMovement.GetName]“ von Pinnwand lösen"
 PIN_POLITICAL_LOBBY: "„[PoliticalLobby.GetName]“ an Pinnwand anheften"
 UNPIN_POLITICAL_LOBBY: "„[PoliticalLobby.GetName]“ von Pinnwand lösen"
 PIN_COUNTRY: "[COUNTRY.GetAltName('NOM')|U] an Pinnwand anheften"
 UNPIN_COUNTRY: "[COUNTRY.GetAltName('NOM')|U] von Pinnwand lösen"
 PIN_IG: "[InterestGroup.GetName] an Pinnwand anheften"
 UNPIN_IG: "[InterestGroup.GetName] von Pinnwand lösen"
 PIN_JOURNAL_ENTRY: "[JournalEntry.GetName] an Pinnwand anheften"
 UNPIN_JOURNAL_ENTRY: "[JournalEntry.GetName] von Pinnwand lösen"
 PIN_MARKET: "[Market.GetName] an Pinnwand anheften"
 UNPIN_MARKET: "[Market.GetName] von Pinnwand lösen"
 PIN_STATE: "[State.GetName] an Pinnwand anheften"
 UNPIN_STATE: "[State.GetName] von Pinnwand lösen"
 PIN_BUILDING: "Dieses Gebäude „[BuildingDetailsPanel.AccessBuilding.GetName]“ an Pinnwand anheften"
 UNPIN_BUILDING: "Dieses Gebäude „[BuildingDetailsPanel.AccessBuilding.GetName]“ von Pinnwand lösen"
 PIN_COMPANY: "[Company.GetCompanyType.GetName] an Pinnwand anheften"
 UNPIN_COMPANY: "[Company.GetCompanyType.GetName] von Pinnwand lösen"
 PIN_TREATY: "„[Treaty.GetName]“ an Pinnwand anheften"
 UNPIN_TREATY: "„[Treaty.GetName]“ von Pinnwand lösen"
 RADICALISM_PASSIVE: "#b Passiv#!"
 RADICALISM_AGITATING: "#b Aufgewiegelt#!"
 RADICALISM_PROTESTING: "#N Protestierend#!"
 RADICALISM_MILITANT: "#N Militant#!"
 SUPPORT_MARGINAL: "#b Randständig#!"
 SUPPORT_RELEVANT: "#b Relevant#!"
 SUPPORT_SIGNIFICANT: "#b Bedeutend#!"
 SUPPORT_DOMINANT: "#N Dominant#!"
 SUPPORT_UNIVERSAL: "#N Allgegenwärtig#!"
 LABEL_VALUE_RANGE: "$LABEL$ ([Multiply_CFixedPoint('(CFixedPoint)$MIN$','(CFixedPoint)100')|0]-$MAX|0%$)"
 FEED: "Feed"
 TOAST: "Toast"
 POPUP: "Pop-up"
 MESSAGE_SETTINGS_FEED: "[concept_message_settings_feed]"
 MESSAGE_SETTINGS_TOAST: "[concept_message_settings_toast]"
 MESSAGE_SETTINGS_POPUP: "[concept_message_settings_popup]"
 MESSAGE_SETTINGS_NONE: "[concept_message_settings_none]"
 MESSAGE_SETTINGS_DEFAULT: "Standard"
 JOURNAL_ENTRY_POSSIBLE_ACTIONS: "[JournalEntry.GetNumPossibleScriptedButtons|v] mögliche Aktion[SelectLocalization(GreaterThan_int32(JournalEntry.GetNumPossibleScriptedButtons, '(int32)1'), 'en', '')]"
 BEHAVIOR: "Verhalten"
 RANKING_FORMAT: "#tooltippable #tooltip:$LEADERBOARD$ #v ##$RANKING$#!#!#!"
 GDP_LEADERBOARD_HEADER: "#header BIP#!"
 GDP_PER_CAPITA_LEADERBOARD_HEADER: "#header BIP pro Kopf#!"
 SOL_LEADERBOARD_HEADER: "#header Lebensstandard#!"
 POPULATION_LEADERBOARD_HEADER: "#header Bevölkerung#!"
 INCORPORATED_LITERACY_LEADERBOARD_HEADER: "#header Alphabetisierung in Inkorporierten Staaten#!"
 TOTAL_LITERACY_LEADERBOARD_HEADER: "#header Alphabetisierung in allen Staaten#!"
 BATTALIONS_LEADERBOARD_HEADER: "#header Bataillone#!"
 FLOTTILAS_LEADERBOARD_HEADER: "#header Flottillen#!"
 GDP_LEADERBOARD_ITEM: "\n$RANK$. @money!$VAL|vD$ - $COUNTRY$"
 SOL_LEADERBOARD_ITEM: "\n$RANK$. $VAL|vD$ - $COUNTRY$"
 POPULATION_LEADERBOARD_ITEM: "\n$RANK$. $VAL|vD$ - $COUNTRY$"
 INCORPORATED_LITERACY_LEADERBOARD_ITEM: "\n$RANK$. $VAL|v1%$ - $COUNTRY$"
 TOTAL_LITERACY_LEADERBOARD_ITEM: "\n$RANK$. $VAL|v1%$ - $COUNTRY$"
 BATTALIONS_LEADERBOARD_ITEM: "\n$RANK$. @battalions! $VAL|vD$ - $COUNTRY$"
 FLOTILLAS_LEADERBOARD_ITEM: "\n$RANK$. @flotillas! $VAL|vD$ - $COUNTRY$"
 COMMANDER_RANK_LOC_KEY: "[Concept('concept_commander_rank','$concept_commander_rank_short$')] "
 EDIT: "Bearbeiten"
 CUSTOMIZE_NAME_AND_EMBLEM: "Name und Abzeichen anpassen"
 CUSTOMIZE: "Anpassen"
 CUSTOMIZE_WITH_ICON: "@edit! Anpassen"
 CHANGE_NAME: "Namen ändern"
 CUSTOMISE_MILITARY_FORMATION: "Formation anpassen"
 UNIT_NAMES: "Einheitennamen"
 BASE_ON: "Beruhend auf"
 FORMATION_NAME: "Formationsname"
 CHOOSE_FORMATION_FLAG: "Flaggenmuster"
 CHOOSE_FORMATION_FLAG_COLOUR: "Flaggenfarbe"
 MILITARY_FORMATION_INVALID_NAME: "Ungültiger Name: \n$DESC$"
 MILITARY_FORMATION_INVALID: "Ungültige Formation"
 MILITARY_FORMATION_NOT_YOURS: "Spieler besitzt diese Formationen nicht."
 CHARACTER_INVALID: "Ungültiger Charakter"
 COMPANY_INVALID_NAME: "Ungültiger Name: \n$DESC$"
 COMPANY_INVALID: "Ungültige Kompanie"
 COMPANY_NOT_YOURS: "Spieler besitzt diese Kompanie nicht."
 CUSTOMIZE_STATE_NAMES: "Die Namen des Staats und seiner Knoten anpassen"
 CUSTOMIZE_STATE: "Namen anpassen"
 STATE_NAME: "Staat"
 CITY_NAME: "Staats-Hauptsitz"
 PORT_NAME: "Hafenstadt"
 FARM_NAME: "Agrarstadt"
 MINE_NAME: "Bergbaustadt"
 WOOD_NAME: "Holzindustriestadt"
 SUPPORT_INITIATOR: "[DiplomaticPlay.GetInitiator.GetAltName('AKK')] unterstützen"
 REVERSE_SWAY_INITIATOR: "[DiplomaticPlay.GetInitiator.GetAltName('DAT')] Unterstützung anbieten ([SelectLocalization(DiplomaticPlay.WouldAcceptAnySway(GetPlayer.Self, DiplomaticPlay.GetInitiator), 'CAN_SWAY_ICON', 'CAN_NOT_SWAY_ICON')])"
 SUPPORT_TARGET: "[DiplomaticPlay.GetTarget.GetAltName('AKK')] unterstützen"
 REVERSE_SWAY_TARGET: "[DiplomaticPlay.GetTarget.GetAltName('DAT')] Unterstützung anbieten ([SelectLocalization(DiplomaticPlay.WouldAcceptAnySway(GetPlayer.Self, DiplomaticPlay.GetInitiator), 'CAN_SWAY_ICON', 'CAN_NOT_SWAY_ICON')])"
 CAN_SWAY_ICON: "@approves!"
 CAN_NOT_SWAY_ICON: "@disapproves!"
 SCRIPTED_BUTTON_IS_ON_COOLDOWN_DESC: "@red_cross! Abklingzeit bis [Date.GetString|v]"
 SCRIPTED_BUTTON_IS_ON_COOLDOWN_ERROR: "Abklingzeit bis [Date.GetString|v]"
 SCRIPTED_ACTION_TOOLTIP: "#header [ScriptedButton.GetName]#! [AddLocalizationIf(ScriptedButton.IsSelected, 'SCRIPTED_ACTION_TOOLTIP_IS_SELECTED')][ConcatIfNeitherEmpty('\n', ScriptedButton.GetDesc)]\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(ScriptedButton.GetPossibleDesc, '\n\n')]#title Effekte:#!\n[ScriptedButton.GetEffectDesc]"
 SCRIPTED_ACTION_TOOLTIP_IS_SELECTED: "#i (Ausgewählt)#!"
 PROGRESS_BAR_BREAKDOWN: "#header Fortschritt ($Name$)#!\n[AddTextIf(NotEqualTo_CFixedPoint('(CFixedPoint)$TOTAL_VALUE$','(CFixedPoint)0'), '$TOTAL_VALUE|+=1$ durchschnittlicher monatlicher Fortschritt derzeit\n$TOOLTIP_DELIMITER$\nAufgrund von:' )][AddTextIf(Not(StringIsEmpty('$WEEKLY_DESC$')), '\n#title $WEEKLY_VALUE|+=1$ wöchentliche Veränderung durch:#! #indent_newline:3 \n $WEEKLY_DESC$#!\n')][AddTextIf(Not(StringIsEmpty('$MONTHLY_DESC$')), '\n#title $MONTHLY_VALUE|+=1$ monatliche Veränderung durch:#! #indent_newline:3 \n $MONTHLY_DESC$#!\n')][AddTextIf(Not(StringIsEmpty('$YEARLY_DESC$')), '\n#title $YEARLY_VALUE|+=1$ jährliche Veränderung durch:#! #indent_newline:3 \n $YEARLY_DESC$#!\n')]"
 PROGRESS_BAR_BREAKDOWN_NEGATIVE: "#header Fortschritt ($Name$)#!\n[AddTextIf(NotEqualTo_CFixedPoint('(CFixedPoint)$TOTAL_VALUE$','(CFixedPoint)0'), '$TOTAL_VALUE|-=1$ durchschnittlicher monatlicher Fortschritt derzeit\n$TOOLTIP_DELIMITER$\nAufgrund von:' )][AddTextIf(Not(StringIsEmpty('$WEEKLY_DESC$')), '\n#title $WEEKLY_VALUE|-=1$ wöchentliche Veränderung durch:#! #indent_newline:3 \n $WEEKLY_DESC$#!\n')][AddTextIf(Not(StringIsEmpty('$MONTHLY_DESC$')), '\n#title $MONTHLY_VALUE|-=1$ monatliche Veränderung durch:#! #indent_newline:3 \n $MONTHLY_DESC$#!\n')][AddTextIf(Not(StringIsEmpty('$YEARLY_DESC$')), '\n#title $YEARLY_VALUE|-=1$ jährliche Veränderung durch:#! #indent_newline:3 \n $YEARLY_DESC$#!\n')]"
 PROGRESS_BAR_VALUE_FORMAT_WEEKLY: "$VALUE|+=1$ durch $KEY$"
 PROGRESS_BAR_VALUE_FORMAT_MONTHLY: "$VALUE|+=1$ durch $KEY$"
 PROGRESS_BAR_VALUE_FORMAT_YEARLY: "$VALUE|+=1$ durch $KEY$"
 PROGRESS_BAR_VALUE_FORMAT_WEEKLY_NEGATIVE: "$VALUE|-=1$ durch „$KEY$“"
 PROGRESS_BAR_VALUE_FORMAT_MONTHLY_NEGATIVE: "$VALUE|-=1$ durch „$KEY$“"
 PROGRESS_BAR_VALUE_FORMAT_YEARLY_NEGATIVE: "$VALUE|-=1$ durch „$KEY$“"
 DIPLO_PLAY_COUNTRY_WARSHIPS_BREAKDOWN: "[Country.GetAltName('NOM')|U] hat @flotillas![Country.GetWarships|v] [Concept('concept_flotilla', '$concept_flotillas$')]"
 DEPLOY_MILITARY_FORMATION_TO_FRONT_TEXT: "An [concept_front] einsetzen"
 DEPLOY_MILITARY_FORMATION_TO_FRONT_TOOLTIP: "#header An [concept_front] entsenden#!\n[SelectLocalization(MilitaryFormation.IsMobilized, 'MILITARY_FORMATION_TOOLTIP_IS_MOBILIZED', 'MILITARY_FORMATION_TOOLTIP_IS_NOT_MOBILIZED')]$MILITARY_FORMATION_GENERIC_ERRORS$[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.CanDeployToFront), 'NO_VALID_OPTIONS_FOR_DEPLOY_TO_FRONT'))]\n\n@information! Dies bestimmt den Aufenthaltsort von [MilitaryFormation.GetName], während konkrete [Concept('concept_order', '$concept_orders$')] über die zugewiesenen [Concept('concept_general', '$concept_generals$')] geändert werden"
 MILITARY_FORMATION_TOOLTIP_IS_MOBILIZED: "@green_checkmark_box! [MilitaryFormation.GetName] ist [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')|l]"
 MILITARY_FORMATION_TOOLTIP_IS_NOT_MOBILIZED: "@simple_box! [MilitaryFormation.GetName] ist [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')|l]"
 DEPLOY_MILITARY_FORMATION_TO_SEA_NODE_TOOLTIP: "#header Zu [concept_sea_node] entsenden#![ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(MilitaryFormation.IsFullyDefeated, 'FORMATION_FULLY_DEFEATED'))]$MILITARY_FORMATION_GENERIC_ERRORS$[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.CanStation), 'NO_VALID_OPTIONS_FOR_DEPLOY_TO_SEA_NODE'))]\n\n@information! Dies bestimmt den Aufenthaltsort von [MilitaryFormation.GetName], während konkrete [Concept('concept_order', '$concept_orders$')] über die zugewiesenen [Concept('concept_admiral', '$concept_admirals$')] geändert werden"
 DEPLOY_MILITARY_FORMATION_TO_SEA_NODE_LABEL: "An [concept_sea_node] einsetzen"
 STATION_MILITARY_FORMATION_TOOLTIP: "#header In einem [concept_hq] stationieren#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(MilitaryFormation.IsFullyDefeated, 'FORMATION_FULLY_DEFEATED'))]$MILITARY_FORMATION_GENERIC_ERRORS$[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.CanStation), 'NO_VALID_OPTIONS_FOR_STATION'))]"
 MILITARY_FORMATION_GENERIC_ERRORS: "[ConcatIfNeitherEmpty('\n', AddLocalizationIf(MilitaryFormation.IsExiled, 'MILITARY_FORMATION_EXILED_ERROR'))][ConcatIfNeitherEmpty('\n', AddLocalizationIf(MilitaryFormation.HasInvasion, 'HAS_NAVAL_INVASION_ERROR'))][ConcatIfNeitherEmpty('\n', AddLocalizationIf(EqualTo_int32(MilitaryFormation.GetNumCombatUnits, '(int32)0'), 'HAS_NO_UNITS_ERROR'))]"
 STATION_MILITARY_FORMATION_LABEL: "In einem [concept_hq] stationieren"
 MILITARY_FORMATION_EXILED_ERROR: "@simple_box! $REPOSITION_MILITARY_FORMATION_EXILED$"
 MILITARY_FORMATION_INVADE_LABEL: "Eine [concept_invasion] planen"
 HAS_NAVAL_INVASION_ERROR: "@red_cross! [MilitaryFormation.GetName] ist an „[MilitaryFormation.GetInvasion.GetName]“ beteiligt"
 HAS_NO_UNITS_ERROR: "@red_cross! [MilitaryFormation.GetName] hat keine [Concept('concept_unit','$concept_units_short$')]"
 SINGULAR_BATTLE: "[concept_battle]"
 MULTIPLE_BATTLES: "[Concept('concept_battle','$concept_battles$')]"
 NO_VALID_OPTIONS_FOR_STATION: "@red_cross! [MilitaryFormation.GetName] hat keine gültigen Alternativen für die Aktion „#b In HQ stationieren#!“"
 NO_VALID_OPTIONS_FOR_DEPLOY_TO_FRONT: "@red_cross! [MilitaryFormation.GetName] hat keine gültigen Alternativen für die Aktion „#b An Front einsetzen#!“"
 NO_VALID_OPTIONS_FOR_DEPLOY_TO_SEA_NODE: "@red_cross! [MilitaryFormation.GetName] hat keine gültigen Alternativen für die Aktion „#b An Seeknoten einsetzen#!“"
 MILITARY_FORMATION_INVASION_TOOLTIP: "#header Eine $concept_invasion$ auf einen gegnerischen [concept_state] planen#![ConcatIfNeitherEmpty('\n', MilitaryFormation.GetNavalInvasionTooltip )]"
 REHOME_MILITARY_FORMATION_TOOLTIP: "Das Heimat-[concept_hq] von [MilitaryFormation.GetName] zu einem anderen $concept_hq$ verlegen"
 REHOME_MILITARY_FORMATION_LABEL: "In einem [concept_hq] neu beheimaten"
 MAP_INTERACTION_DEPLOY_MILITARY_FORMATION_TO_FRONT_DESC: "$FORMATION_NAME$ an [concept_front] einsetzen"
 MAP_INTERACTION_DEPLOY_MILITARY_FORMATION_TO_FRONT_PERFORMED: "$FORMATION_NAME$ an [concept_front] eingesetzt"
 MAP_INTERACTION_DEPLOY_MILITARY_FORMATION_TO_SEA_NODE_DESC: "$FORMATION_NAME$ an [concept_sea_node] einsetzen"
 MAP_INTERACTION_DEPLOY_MILITARY_FORMATION_TO_SEA_NODE_PERFORMED: "$FORMATION_NAME$ an [concept_sea_node] eingesetzt"
 MAP_INTERACTION_STATION_MILITARY_FORMATION_DESC: "$FORMATION_NAME$ in [concept_hq] stationieren"
 MAP_INTERACTION_STATION_MILITARY_FORMATION_PERFORMED: "$FORMATION_NAME$ stationiert"
 MAP_INTERACTION_REHOME_MILITARY_FORMATION_DESC: "$FORMATION_NAME$ in einem [concept_hq] beheimaten"
 MAP_INTERACTION_REHOME_MILITARY_FORMATION_PERFORMED: "$FORMATION_NAME$ neu beheimatet"
 PRODUCTION_METHOD_CONFIRMATION_TITLE: "Zu „[ProductionMethod.GetName]“ wechseln"
 PRODUCTION_METHOD_CONFIRMATION_DESC: "Wechsel zu „[ProductionMethod.GetName]“ würde in folgenden „[BuildingType.GetName]“-[Concept('concept_building', '$concept_buildings$n')] eine sehr geringe [concept_productivity] verursachen:\n\n[ProductionMethodConfirmationPopup.GetLowProductivityBreakdown]"
 PRODUCTION_METHOD_CONFIRMATION_LOW_PRODUCTIVITY_ENTRY: "[BUILDING.GetState.GetName]: #N $VALUE$#!"
 PRODUCTION_METHOD_CONFIRMATION_CONTINUE: "$CONTINUE$"
 PRODUCTION_METHOD_CONFIRMATION_CONTINUE_TOOLTIP: "Alle [ProductionMethodConfirmationPopup.GetTotalBuildingCount|v] „[BuildingType.GetName]“-[Concept('concept_building', '$concept_buildings$')] auf „[ProductionMethod.GetName]“ umstellen"
 PRODUCTION_METHOD_CONFIRMATION_EXEMPT: "Ausnehmen"
 PRODUCTION_METHOD_CONFIRMATION_EXEMPT_TOOLTIP: "Nur [Subtract_int32(ProductionMethodConfirmationPopup.GetTotalBuildingCount, ProductionMethodConfirmationPopup.GetExemptedBuildingCount)|v] „[BuildingType.GetName]“-[Concept('concept_building', '$concept_buildings$')] auf „[ProductionMethod.GetName]“ umstellen\n([ProductionMethodConfirmationPopup.GetExemptedBuildingCount|v] oben aufgeführte $concept_buildings$ bleiben unverändert)"
 PRODUCTION_METHOD_CONFIRMATION_CANCEL: "$CANCEL$"
 TREATY_FALLBACK_NAME: "$ENTRY_INTO_FORCE_DATE$[FIRST_COUNTRY.GetAdjectiveNoFormatting|U]-[SECOND_COUNTRY.GetAdjectiveNoFormatting|l]es Bündnis von $SIGNING_LOCATION$"
 TREATY_DRAFT_FALLBACK_NAME: "[FIRST_COUNTRY.GetAdjectiveNoFormatting|U]-[SECOND_COUNTRY.GetAdjectiveNoFormatting|l]e Beratung"
 RANDOMIZE_TREATY_NAME: "[Concept('concept_treaty', 'Vertrags')]-Namen zufällig wählen"
