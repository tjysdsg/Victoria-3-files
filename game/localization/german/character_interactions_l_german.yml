l_german:
 CHARACTER_INTERACTION_HEADER: "#header [CharacterInteraction.GetName]#!\n$TOOLTIP_DELIMITER$\n"
 CHARACTER_INTERACTION_ERRORS: "[AddTextIf(And(Not(CharacterInteraction.ShouldShowRequirements), Not(StringIsEmpty(CharacterInteraction.GetCommandDesc(Character.Self)))), Concatenate(Localize('CHARACTER_INTERACTION_ERRORS_IMPL'), '\n\n'))]"
 CHARACTER_INTERACTION_ERRORS_IMPL: "#title Anforderungen:#!\n[CharacterInteraction.GetCommandDesc(Character.Self)]"
 CHARACTER_INTERACTION_REQUIREMENTS: "[AddTextIf(And(CharacterInteraction.ShouldShowRequirements, Not(StringIsEmpty(CharacterInteraction.GetRequirements(Character.Self)))), Concatenate(Localize('CHARACTER_INTERACTION_REQUIREMENTS_IMPL'), '\n\n'))]"
 CHARACTER_INTERACTION_REQUIREMENTS_IMPL: "#title Anforderungen:#!\n[CharacterInteraction.GetRequirements(Character.Self)][AddTextIf(CharacterInteraction.IsOnCooldown(Character.Self), Concatenate('\n\n@red_cross! ', CharacterInteraction.GetCooldownDesc(Character.Self)))]"
 CHARACTER_INTERACTION_COOLDOWN_DURATION_INFO: "[AddLocalizationIf(Not(StringIsEmpty(CharacterInteraction.GetCooldownDuration(Character.Self))), 'CHARACTER_INTERACTION_COOLDOWN_DURATION_INFO_IMPL')]"
 CHARACTER_INTERACTION_COOLDOWN_DURATION_INFO_IMPL: "@information! Diese Aktion kann nur einmal pro [CharacterInteraction.GetCooldownDuration(Character.Self)] ausgeführt werden\n\n"
 CHARACTER_INTERACTION_INFO: "[ConcatIfNeitherEmpty(CharacterInteraction.GetInfo, '\n\n')]"
 CHARACTER_INTERACTION_EFFECTS: "#title Effekte:#!\n[Select_CString(Not(StringIsEmpty(CharacterInteraction.GetEffects(Character.Self))), CharacterInteraction.GetEffects(Character.Self), Localize('CHARACTER_INTERACTION_NO_EFFECT'))]"
 CHARACTER_INTERACTION_NO_EFFECT: "#italic Kein Effekt#!"
 CHARACTER_INTERACTION_DESC: "[AddTextIf(Not(StringIsEmpty(CharacterInteraction.GetDesc)), Concatenate('\n\n', CharacterInteraction.GetDesc))]"
 CHARACTER_INTERACTION_TOOLTIP: "$CHARACTER_INTERACTION_HEADER$$CHARACTER_INTERACTION_ERRORS$$CHARACTER_INTERACTION_REQUIREMENTS$$CHARACTER_INTERACTION_COOLDOWN_DURATION_INFO$$CHARACTER_INTERACTION_INFO$$CHARACTER_INTERACTION_EFFECTS$$CHARACTER_INTERACTION_DESC$"
 CHARACTER_INTERACTION_CONFIRMATION: "$CHARACTER_INTERACTION_TOOLTIP$\n\nSind Sie sicher?"
 CHARACTER_INTERACTION_ON_COOLDOWN: "[CharacterInteraction.GetName|v] klingt ab bis [Date.GetString|v]"
 CHARACTER_INTERACTION_NAME: "[CharacterInteraction.GetName][AddLocalizationIf(CharacterInteraction.IsOnCooldown(Character.Self), 'INTERACTION_COOLDOWN')]"
 INTERACTION_COOLDOWN: " ([CharacterInteraction.GetCooldownRemaining(Character.Self)])"
 grant_command_to_ruler: "Befehlsgewalt übertragen"
 remove_command_from_ruler: "Von Befehlsgewalt zurückziehen"
 retire_commander: "Befehlshaber in Ruhestand schicken"
 retire_commander_info: "Wird [Character.GetFullName] des Kommandos entbunden, wird er seine Rolle als [concept_general] verlieren und sein [concept_commander_rank] wirkt sich nicht mehr auf den [Concept('concept_clout', 'Politischen Druck')] der IG „[Character.GetInterestGroup.GetName]“ aus"
 #Exile Interactions
 exile_character: "Dissident verbannen"
 exile_character_info: "Wird [Character.GetFullName] [Concept('concept_exile', 'verbannt')|l], verlässt er [Character.GetCountry.GetAltName('AKK')|U] und kann von anderen [Concept('concept_country', '$concept_countries$n')] als [concept_agitator] angeworben werden"
 exile_dissident_tt: "[Character.GetFullName] wird ins Exil geschickt"
 invite_exile: "Exilant einladen"
 invite_exile_start_join_movement_effect: "[SelectLocalization(Character.PredictMovementToJoin(GetPlayer.Self).IsValid, 'invite_exile_join_movement', 'invite_exile_do_not_join_movement')]"
 invite_exile_do_not_join_movement: "[SelectLocalization(Character.PredictMovementTypeToStart(GetPlayer.Self).IsValid, 'invite_exile_start_movement', 'invite_exile_no_movement')]"
 invite_exile_start_movement: "Wird eine [Character.PredictMovementTypeToStart(GetPlayer.Self).GetName] ins Leben rufen"
 invite_exile_join_movement: "Wird sich [Character.PredictMovementToJoin(GetPlayer.Self).GetName] anschließen"
 invite_exile_no_movement: "Wird #b keine#! [concept_political_movement] gründen oder sich einer anschließen"
 invite_exile_info: "[Concept('concept_character_role', '$concept_character_roles$')]: #v [Character.GetAllRoleNames]#!\n[concept_interest_group]: [Character.GetInterestGroup.GetName]\n[concept_ideology]: [Character.GetIdeology.GetName]\n[concept_popularity]: #v #tooltip:[Character.GetTooltipTag],POPULARITY_BREAKDOWN [LabelingHelper.GetLabelForPopularityCFixedPoint(Character.GetPopularity)]#!#! (#v #tooltippable #tooltip:[Character.GetTooltipTag],POPULARITY_BREAKDOWN [Character.GetPopularity|0]#!#!#!)\n\nDie $concept_popularity$ des [Concept('concept_agitator', '$concept_agitator$s')] wirkt sich darauf aus, wie viel Unterstützung die $concept_political_movement$ erhält, die der $concept_agitator$ gründet oder der er beitritt"
 invite_exile_devout_tt: "Fromme [Concept('concept_character', '$concept_characters$')] müssen unsere [concept_state_religion] haben"
 invite_exile_state_religion_tt: "Während wir das [concept_law] „Staatsreligion“ haben, müssen Charaktere unsere [concept_state_religion] haben"
 adopt_random_antigovernment_ideology_tt: "Dieser [concept_character] wird eine [concept_ideology] annehmen, die gegen unsere Regierung gerichtet ist."
 notification_exile_notification_name: "[SCOPE.sCharacter('exile_scope').GetFullName] wird aus [SCOPE.sCountry('exiling_country_scope').GetAltName('DAT')] verbannt."
 notification_exile_notification_desc: "[SCOPE.sCharacter('exile_scope').GetFullName] wurde [SCOPE.sCountry('exiling_country_scope').GetAltName('VON')] ins [Concept('concept_exile', 'Exil')] geschickt."
 notification_exile_notification_tooltip: "#header $notification_exile_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_exile_notification_desc$"
 #Agitator Interactions
 grant_leadership_to_agitator: "Führung übertragen"
 grant_leadership_to_agitator_info: "[concept_ideology]: [Character.GetIdeology.GetName]\n[concept_popularity]: #v #tooltip:[Character.GetTooltipTag],POPULARITY_BREAKDOWN [LabelingHelper.GetLabelForPopularityCFixedPoint(Character.GetPopularity)]#!#! (#v #tooltippable #tooltip:[Character.GetTooltipTag],POPULARITY_BREAKDOWN [Character.GetPopularity|0]#!#!#!)\n\nWenn die Führung gewährt wird, wird die $concept_ideology$ von [Character.GetFullName] zur IG „[Character.GetInterestGroup.GetName]“ hinzugefügt und dessen $concept_popularity$ wirkt sich auf die [concept_interest_group_attraction] aus."
 make_agitator_ig_leader_tt: "Wird der [concept_leader] der IG „[Character.GetInterestGroup.GetName]“"
 grant_command_to_agitator: "Befehlsgewalt übertragen"
 grant_command_to_agitator_info: "Wenn ihm Befehlsgewalt erteilt wird, bleibt [Character.GetFullName] ein [concept_agitator], kann aber auch Armeen als [concept_general] anführen, wobei [Character.GetCustom('DE_PRO_POS_S_3P')] [concept_commander_rank] den [Concept('concept_clout','Politischen Druck')] der IG „[Character.GetInterestGroup.GetName]“ beeinflusst"
 #Monarch interactions
 marry_ruler_or_heir: "Königliche Heirat anstreben"
 marry_ruler_or_heir_info: "Eine königliche Heirat verbessert die [concept_relations] zwischen [Character.GetCountry.GetAltName('DAT')] und dem Heimat-[concept_country] des neuen Ehepartners von [Character.GetPrimaryRoleTitle] [Character.GetFullName] sowie möglicherweise auch [Character.GetCustom('DE_PRO_POS_S_3P')]e [concept_popularity]."
 marry_ruler_or_heir_desc: "#lore [Character.GetFullName] wird einen Ehepartner aus den Adelshäusern einer befreundeten Nation suchen.#!"
 abdicate_monarch: "Vom Thron abdanken"
 abdicate_monarch_info: "Der [concept_ruler] wird auf den Thron [Character.GetCountry.GetAltName('VON')] verzichten und diese Rolle als [Character.GetPrimaryRoleTitle] an [Character.GetCustom('DE_PRO_POS_S_3P')]en [concept_heir] weitergeben."
