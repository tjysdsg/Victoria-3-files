l_german:
 PRESTIGE_FROM_COUNTRY_GDP: "#variable $VALUE|+=$#! durch [concept_gdp]"
 PRESTIGE_FROM_ARMY_POWER_PROJECTION: "#variable $VALUE|+=$#! durch Armee-[concept_power_projection]"
 PRESTIGE_FROM_NAVY_POWER_PROJECTION: "#variable $VALUE|+=$#! durch Marine-[concept_power_projection]"
 PRESTIGE_FROM_COUNTRY_TIER: "#variable $VALUE|+=$#! durch den [concept_country_tier] „$TIER|v$“"
 PRESTIGE_FROM_SUBJECT_GDP: "#variable $VALUE|+=$#! durch das [concept_gdp] von [Concept('concept_subject', '$concept_subjects$')]"
 PRESTIGE_FROM_SUBJECT_ARMY_POWER_PROJECTION: "#variable $VALUE|+=$#! durch Armee [concept_power_projection] von [Concept('concept_subject', '$concept_subjects$')]"
 PRESTIGE_FROM_SUBJECT_NAVY_POWER_PROJECTION: "#variable $VALUE|+=$#! durch Marine-[concept_power_projection] von [Concept('concept_subject', '$concept_subjects$')]"
 PRESTIGE_FROM_GOODS_LEADERBOARDS: "#tooltippable #tooltip:[Country.GetTooltipTag],PRESTIGE_FROM_GOODS_LEADERBOARDS_BREAKDOWN #v $VAL|+=$#!#!#! durch Vorreiterschaft als Warenproduzent"
 PRESTIGE_FROM_GOODS_LEADERBOARDS_BREAKDOWN: "[Country.GetGoodsLeaderboardDesc]"
 PRESTIGE_FROM_PRESTIGE_GOODS_LEADERBOARDS: "#tooltippable #tooltip:[Country.GetTooltipTag],PRESTIGE_FROM_PRESTIGE_GOODS_LEADERBOARDS_BREAKDOWN #v $VAL|+=$#!#!#! durch Vorreiterschaft als Hersteller von [Concept('concept_prestige_good', '$concept_prestige_goods$')]"
 PRESTIGE_FROM_PRESTIGE_GOODS_LEADERBOARDS_BREAKDOWN: "[Country.GetPrestigeGoodsLeaderboardDesc]"
 NO_PRESTIGE_RANKING: "Dieses [concept_country] hat keinen [concept_prestige]-Rang durch den Status als #variable $COUNTRY_TYPE$#!."
 ARMY_POWER_PROJECTION_DESC: "#header $ADJECTIVE$ Armee-[concept_power_projection]: $VALUE|v0$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 NAVY_POWER_PROJECTION_DESC: "#header $ADJECTIVE$ Marine-[concept_power_projection]: $VALUE|v0$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 great_power: "[concept_great_power]"
 great_power_desc: "[concept_great_power_desc]"
 major_power: "[concept_major_power]"
 major_power_desc: "[concept_major_power_desc]"
 minor_power: "[concept_minor_power]"
 minor_power_desc: "[concept_minor_power_desc]"
 insignificant_power: "[concept_insignificant_power]"
 insignificant_power_desc: "[concept_insignificant_power_desc]"
 decentralized_nation: "[concept_decentralized_nation]"
 decentralized_nation_desc: "[concept_decentralized_nation_desc]"
 unrecognized_power: "[concept_unrecognized_power]"
 unrecognized_power_desc: "[concept_unrecognized_power_desc]"
 unrecognized_regional_power: "[Concept('concept_unrecognized_power', '$concept_unrecognized_regional_power$')]"
 unrecognized_regional_power_desc: "[concept_unrecognized_power_desc]"
 unrecognized_major_power: "[Concept('concept_unrecognized_power', '$concept_unrecognized_major_power$')]"
 unrecognized_major_power_desc: "[concept_unrecognized_power_desc]"
 country_humiliated: "Gedemütigt durch Rivalen"
 country_cut_down_to_size: "Kleinhalten"
 forced_market_opening: "[concept_open_market] erzwungen"
 forced_slavery_ban: "[concept_slavery]-Verbot erzwungen"
 forced_regime_change: "Erzwungener Regimewechsel"
 centralized: "Zentralland"
 colonial: "Kolonialland"
 decentralized: "Dezentral-Nation"
 unrecognized: "Nebenland"
 recognized: "Anerkannt"
 company: "Kompanie"
 country_tier_city_state: "Stadtstaat"
 country_tier_principality: "Fürstentum"
 country_tier_grand_principality: "Großfürstentum"
 country_tier_kingdom: "Königreich"
 country_tier_empire: "Großreich"
 country_tier_hegemony: "Hegemonie"
 DIPLO_PLAY_GREAT_POWER_TRIGGER: "Wir müssen eine [concept_great_power] sein, um dieses [concept_diplomatic_play] beginnen zu können"
 DIPLO_PLAY_OUTRAGED_TRIGGER: "Ihre [Concept('concept_infamy', 'Verrufenheitsstufe')] muss mindestens „$infamy_pariah$“ sein"
 DIPLOMATIC_PACT_REDUCED_LIBERTY_DESIRE: "Wird zu einer Verringerung des [SCOPE.sCountry('target_country').GetAdjective|l]en [Concept('concept_liberty_desire', 'Freiheitsdrangs')] beitragen"
 DIPLOMATIC_PACT_REQUIREMENT_MORE_TECHS_RESEARCHED: "[SCOPE.sCountry('actor').GetAltName('NOM')|U] muss mehr [Concept('concept_technology', '$concept_technologies$')] freigeschaltet haben als [SCOPE.sCountry('target_country').GetAltName('NOM')]"
 DIPLOMATIC_PACT_REQUIREMENT_HIGH_LIBERTY_DESIRE: "[SCOPE.sCountry('actor').GetAdjective|U]er [concept_liberty_desire] muss mindestens [GetDefine('NDiplomacy','WAR_GOAL_INCREASE_AUTONOMY_MIN_LIBERTY_DESIRE')] sein"
 DIPLOMATIC_PACT_REQUIREMENT_TARGET_HIGH_LIBERTY_DESIRE: "[SCOPE.sCountry('target_country').GetAdjective|U]er [concept_liberty_desire] muss mindestens [GetDefine('NDiplomacy','WAR_GOAL_INCREASE_AUTONOMY_MIN_LIBERTY_DESIRE')] sein"
 DIPLOMATIC_PACT_REQUIREMENT_DURATION_NOT_EXPIRED: "Dauer des erzwungenen [Concept('concept_diplomatic_pact', 'Diplomatiepakts')] ist nicht abgelaufen"
 DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED: "Keines der beiden [Concept('concept_country', '$concept_countries$')] ist eine [concept_decentralized_nation]"
 DIPLOMATIC_PACT_REQUIREMENT_NO_SUBJECT_RELATION: "Keines der beiden [Concept('concept_country', '$concept_countries$')] ist ein [concept_subject] des anderen"
 DIPLOMATIC_PACT_REQUIREMENT_DIPLOMATIC_AUTONOMY: "Keines der beiden [Concept('concept_country', '$concept_countries$')] ist ein [concept_subject] ohne diplomatische Autonomie"
 DIPLOMATIC_PACT_REQUIREMENT_VALID_RIVALS: "[concept_rank]-Unterschied der beiden [Concept('concept_country', '$concept_countries$')] erlaubt eine [concept_rivalry]"
 DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE: "Die beiden [Concept('concept_country', '$concept_countries$')] dürfen nicht auf entgegengesetzten Seiten in einem [concept_war] stehen"
 DIPLOMATIC_PACT_REQUIREMENT_SUBJECT_WITH_INCOME_TRANSFER: "Das [concept_subject] hat eine Art, die dem eigenen [concept_overlord] Tribut zollt"
 DIPLOMATIC_PACT_REQUIREMENT_NO_SUPPORT_FOR_INDEPENDENCE: "Die Unabhängigkeit eines [Concept('concept_subject', 'Klientellands')] wird unterstützt"
 EQUAL_OR_BETTER_RANK_THAN_TARGET: "[SCOPE.sCountry('actor').GetAltName('NOM')|U] hat denselben oder einen höheren [concept_rank] als [SCOPE.sCountry('target_country').GetAltName('NOM')] ([SCOPE.sCountry('target_country').GetRank])"
 DIPLO_ACTION_RELATIONS: "[concept_relations] zwischen [SCOPE.GetRootScope.GetCountry.GetAltName('DAT')] und [SCOPE.sC('target_country').GetAltName('DAT')]"
 DIPLO_ACTION_RELATIONS_CORDIAL: "$DIPLO_ACTION_RELATIONS$ sind $relations_cordial$"
 DIPLO_ACTION_RELATIONS_CORDIAL_NOT: "$DIPLO_ACTION_RELATIONS$ sind NICHT $relations_cordial$"
 DIPLO_ACTION_RELATIONS_AMICABLE: "$DIPLO_ACTION_RELATIONS$ sind $relations_amicable$"
 DIPLO_ACTION_RELATIONS_AMICABLE_NOT: "$DIPLO_ACTION_RELATIONS$ sind NICHT $relations_amicable$"
 DIPLO_ACTION_RELATIONS_FRIENDLY: "$DIPLO_ACTION_RELATIONS$ sind $relations_friendly$"
 DIPLO_ACTION_RELATIONS_FRIENDLY_NOT: "$DIPLO_ACTION_RELATIONS$ sind NICHT $relations_friendly$"
 DIPLO_ACTION_RELATIONS_POOR: "$DIPLO_ACTION_RELATIONS$ sind $relations_poor$"
 DIPLO_ACTION_RELATIONS_POOR_NOT: "$DIPLO_ACTION_RELATIONS$ sind NICHT $relations_poor$"
 DIPLO_ACTION_RELATIONS_COLD: "$DIPLO_ACTION_RELATIONS$ sind $relations_cold$"
 DIPLO_ACTION_RELATIONS_COLD_NOT: "$DIPLO_ACTION_RELATIONS$ sind NICHT $relations_cold$"
 DIPLO_ACTION_RELATIONS_HOSTILE: "$DIPLO_ACTION_RELATIONS$ sind $relations_hostile$"
 DIPLO_ACTION_RELATIONS_HOSTILE_NOT: "$DIPLO_ACTION_RELATIONS$ sind NICHT $relations_hostile$"
 DIPLO_ACTION_RELATIONS_CORDIAL_OR_GREATER: "$DIPLO_ACTION_RELATIONS$ sind mindestens $relations_cordial$"
 DIPLO_ACTION_RELATIONS_CORDIAL_OR_GREATER_NOT: "$DIPLO_ACTION_RELATIONS$ sind weniger als $relations_cordial$"
 DIPLO_ACTION_RELATIONS_AMICABLE_OR_GREATER: "$DIPLO_ACTION_RELATIONS$ sind mindestens $relations_amicable$"
 DIPLO_ACTION_RELATIONS_AMICABLE_OR_GREATER_NOT: "$DIPLO_ACTION_RELATIONS$ sind weniger als $relations_amicable$"
 DIPLO_ACTION_RELATIONS_POOR_OR_LESS: "$DIPLO_ACTION_RELATIONS$ bei $relations_poor$ oder weniger"
 DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT: "$DIPLO_ACTION_RELATIONS$ sind über $relations_poor$"
 DIPLO_ACTION_RELATIONS_COLD_OR_LESS: "$DIPLO_ACTION_RELATIONS$ bei $relations_cold$ oder weniger"
 DIPLO_ACTION_RELATIONS_COLD_OR_LESS_NOT: "$DIPLO_ACTION_RELATIONS$ sind über $relations_cold$"
 DIPLO_ACTION_MARKET_CONNECTION_REQUIRED: "Wir müssen entweder eine Landverbindung zwischen unseren [Concept('concept_market_capitals', 'Marktsitzen')] haben oder in der Lage sein, eine [concept_port_connection] mit dem Markt ([SCOPE.sC('target_country').GetCapital.GetMarket.GetName]) aufzubauen"
 DIPLO_ACTION_MARKET_CONNECTION_REQUIRED_CHANGE: "Wir müssen entweder eine Landverbindung zwischen unseren [Concept('concept_market_capitals', 'Marktsitzen')] haben oder in der Lage sein, eine [concept_port_connection] zu [SCOPE.sC('target_country').GetCapital.GetName] aufzubauen"
 DIPLO_ACTION_OVERLORD_RELATIONS: "[concept_relations] zwischen [SCOPE.GetRootScope.GetCountry.GetAltName('DAT')] und [SCOPE.sC('target_country').GetOverlord.GetAltName('DAT')]"
 DIPLO_ACTION_OVERLORD_RELATIONS_CORDIAL: "$DIPLO_ACTION_OVERLORD_RELATIONS$ sind $relations_cordial$"
 DIPLO_ACTION_OVERLORD_RELATIONS_CORDIAL_NOT: "$DIPLO_ACTION_OVERLORD_RELATIONS$ sind NICHT $relations_cordial$"
 DIPLO_ACTION_OVERLORD_RELATIONS_AMICABLE: "$DIPLO_ACTION_OVERLORD_RELATIONS$ sind $relations_amicable$"
 DIPLO_ACTION_OVERLORD_RELATIONS_AMICABLE_NOT: "$DIPLO_ACTION_OVERLORD_RELATIONS$ sind NICHT $relations_amicable$"
 DIPLO_ACTION_OVERLORD_RELATIONS_FRIENDLY: "$DIPLO_ACTION_OVERLORD_RELATIONS$ sind $relations_friendly$"
 DIPLO_ACTION_OVERLORD_RELATIONS_FRIENDLY_NOT: "$DIPLO_ACTION_OVERLORD_RELATIONS$ sind NICHT $relations_friendly$"
 DIPLO_ACTION_OVERLORD_RELATIONS_POOR: "$DIPLO_ACTION_OVERLORD_RELATIONS$ sind $relations_poor$"
 DIPLO_ACTION_OVERLORD_RELATIONS_POOR_NOT: "$DIPLO_ACTION_OVERLORD_RELATIONS$ sind NICHT $relations_poor$"
 DIPLO_ACTION_OVERLORD_RELATIONS_COLD: "$DIPLO_ACTION_OVERLORD_RELATIONS$ sind $relations_cold$"
 DIPLO_ACTION_OVERLORD_RELATIONS_COLD_NOT: "$DIPLO_ACTION_OVERLORD_RELATIONS$ sind NICHT $relations_cold$"
 DIPLO_ACTION_OVERLORD_RELATIONS_HOSTILE: "$DIPLO_ACTION_OVERLORD_RELATIONS$ sind $relations_hostile$"
 DIPLO_ACTION_OVERLORD_RELATIONS_HOSTILE_NOT: "$DIPLO_ACTION_OVERLORD_RELATIONS$ sind NICHT $relations_hostile$"
 DIPLO_ACTION_OVERLORD_RELATIONS_CORDIAL_OR_GREATER: "$DIPLO_ACTION_OVERLORD_RELATIONS$ sind mindestens $relations_cordial$"
 DIPLO_ACTION_OVERLORD_RELATIONS_CORDIAL_OR_GREATER_NOT: "$DIPLO_ACTION_OVERLORD_RELATIONS$ sind weniger als $relations_cordial$"
 DIPLO_ACTION_OVERLORD_RELATIONS_AMICABLE_OR_GREATER: "$DIPLO_ACTION_OVERLORD_RELATIONS$ sind mindestens $relations_amicable$"
 DIPLO_ACTION_OVERLORD_RELATIONS_AMICABLE_OR_GREATER_NOT: "$DIPLO_ACTION_OVERLORD_RELATIONS$ sind weniger als $relations_amicable$"
 DIPLO_ACTION_OVERLORD_RELATIONS_POOR_OR_LESS: "$DIPLO_ACTION_OVERLORD_RELATIONS$ sind $relations_poor$ oder schlechter"
 DIPLO_ACTION_OVERLORD_RELATIONS_POOR_OR_LESS_NOT: "$DIPLO_ACTION_OVERLORD_RELATIONS$ sind besser als $relations_poor$"
 DIPLO_ACTION_OVERLORD_RELATIONS_COLD_OR_LESS: "$DIPLO_ACTION_OVERLORD_RELATIONS$ sind $relations_cold$ oder schlechter"
 DIPLO_ACTION_OVERLORD_RELATIONS_COLD_OR_LESS_NOT: "$DIPLO_ACTION_OVERLORD_RELATIONS$ sind besser als $relations_cold$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS: "[concept_relations] zwischen [SCOPE.GetRootScope.GetCountry.GetAltName('DAT')] und [SCOPE.sC('target_country').GetTopOverlord.GetAltName('DAT')]"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_CORDIAL: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ sind $relations_cordial$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_CORDIAL_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ sind NICHT $relations_cordial$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_AMICABLE: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ sind $relations_amicable$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_AMICABLE_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ sind NICHT $relations_amicable$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_FRIENDLY: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ sind $relations_friendly$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_FRIENDLY_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ sind NICHT $relations_friendly$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_POOR: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ sind $relations_poor$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_POOR_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ sind NICHT $relations_poor$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_COLD: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ sind $relations_cold$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_COLD_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ sind NICHT $relations_cold$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_HOSTILE: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ sind $relations_hostile$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_HOSTILE_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ sind NICHT $relations_hostile$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_CORDIAL_OR_GREATER: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ sind mindestens $relations_cordial$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_CORDIAL_OR_GREATER_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ sind weniger als $relations_cordial$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_AMICABLE_OR_GREATER: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ sind mindestens $relations_amicable$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_AMICABLE_OR_GREATER_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ sind weniger als $relations_amicable$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_POOR_OR_LESS: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ sind $relations_poor$ oder schlechter"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_POOR_OR_LESS_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ sind besser als $relations_poor$"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_COLD_OR_LESS: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ sind $relations_cold$ oder schlechter"
 DIPLO_ACTION_TOP_OVERLORD_RELATIONS_COLD_OR_LESS_NOT: "$DIPLO_ACTION_TOP_OVERLORD_RELATIONS$ sind besser als $relations_cold$"
 DIPLO_ACTION_TRADE_STATES_NOT_SAME_REGION: "Getauschte [Concept('concept_state','$concept_states$')] müssen in verschiedenen [Concept('concept_state_region', '$concept_state_regions$')] liegen"
 DIPLO_ACTION_TRADE_STATES_WOULD_BREAK_CONNECTION: "Beide [Concept('concept_country', '$concept_countries$')] müssen nach dem Handel eine Land- oder Seeverbindung zu den ausgewählten [Concept('concept_state','$concept_states$')] haben"
 APPOINT_COLONIAL_GOVERNOR_ON_COOLDOWN: "Sie erholen sich immer noch vom letzten Mal, als wir einen Gouverneur eingesetzt haben"
 relations_friendly: "#P Freundlich#!"
 relations_amicable: "#P Einvernehmlich#!"
 relations_cordial: "#P Herzlich#!"
 relations_neutral: "#V Neutral#!"
 relations_poor: "#N Schlecht#!"
 relations_cold: "#N Kalt#!"
 relations_hostile: "#N Feindselig#!"
 tension_calm: "#G Ruhig#!"
 tension_uneasy: "#V Belastet#!"
 tension_tense: "#N Angespannt#!"
 tension_volatile: "#N Instabil#!"
 infamy_reputable: "#V Achtbar#!"
 infamy_infamous: "#N Berüchtigt#!"
 infamy_notorious: "#N Verschrien#!"
 infamy_pariah: "#N Ausgestoßen#!"
 subject_type_protectorate: "@protectorate! $subject_type_protectorate_no_icon$"
 subject_type_protectorate_no_icon: "$concept_protectorate$"
 subject_type_puppet: "@puppet! $subject_type_puppet_no_icon$"
 subject_type_puppet_no_icon: "$concept_puppet$"
 subject_type_tributary: "@tributary! $subject_type_tributary_no_icon$"
 subject_type_tributary_no_icon: "$concept_tributary$"
 subject_type_vassal: "@vassal! $subject_type_vassal_no_icon$"
 subject_type_vassal_no_icon: "$concept_vassal$"
 subject_type_dominion: "@dominion! $subject_type_dominion_no_icon$"
 subject_type_dominion_no_icon: "$concept_dominion$"
 subject_type_personal_union: "@personal_union! $subject_type_personal_union_no_icon$"
 subject_type_personal_union_no_icon: "$concept_personal_union$"
 subject_type_chartered_company: "@chartered_company! $subject_type_chartered_company_no_icon$"
 subject_type_chartered_company_no_icon: "$concept_chartered_company$"
 subject_type_colony: "@colony! $subject_type_colony_no_icon$"
 subject_type_colony_no_icon: "$concept_colony_subject$"
 SUBJECT_CANNOT_HAVE_SUBJECTS: " [COUNTRY.GetAltName('NOM')|U] kann keine eigenen Klientelländer haben, weil es ein [concept_subject] der Art „$SUBJECT_TYPE|v$“ ist!"
 SUBJECT_MUST_BE_HIGHER_COUNTRY_RANK: " $COUNTRY_NAME$ muss einen höheren [concept_rank] als $COUNTRY_OTHER_NAME$ haben, um es zu einem [concept_subject] der Art „$SUBJECT_TYPE|v$“ zu machen"
 SUBJECT_INVALID_OVERLORD_RANK: " $COUNTRY_NAME$ kann kein [concept_subject] der Art „$SUBJECT_TYPE|v$“ haben, da sein [concept_rank] bei „$RANK|v$“ liegt"
 SUBJECT_INVALID_SUBJECT_RANK: " $COUNTRY_NAME$ kann kein [concept_subject] der Art „$SUBJECT_TYPE|v$“ werden, da sein [concept_rank] bei „$RANK|v$“ liegt"
 SUBJECT_MUST_BE_SAME_COUNTRY_TYPE: " $COUNTRY_NAME$ kann $COUNTRY_OTHER_NAME$ nicht als [concept_subject] der Art „$SUBJECT_TYPE|v$“ haben, weil es ein Land der Art „$COUNTRY_TYPE|v$“ ist"
 SUBJECT_INVALID_OVERLORD_COUNTRY_TYPE: " $COUNTRY_NAME$ kann kein [concept_subject] der Art „$SUBJECT_TYPE|v$“ haben, weil es ein Land der Art „$COUNTRY_TYPE|v$“ ist"
 SUBJECT_INVALID_SUBJECT_COUNTRY_TYPE: " $COUNTRY_NAME$ kann kein [concept_subject] der Art „$SUBJECT_TYPE|v$“ werden, weil es ein Land der Art „$COUNTRY_TYPE|v$“ ist"
 SUBJECT_IS_ALREADY_SUBJECT: " [TARGET_COUNTRY.GetAltName('NOM')|U] ist bereits [concept_subject] eines anderen Landes"
 SUBJECT_NOT_VALID_CHANGE: " Es ist nicht möglich, ein [concept_subject] der Art „$SUBJECT_TYPE_FROM|v$“ zu einem [concept_subject] der Art „$SUBJECT_TYPE|v$“ zu ändern"
 SUBJECT_OVERLORD_IS_SUBJECT: " [COUNTRY.GetAltName('NOM')|U] kann seinen Suzerän – [TARGET_COUNTRY.GetAltName('AKK')] – nicht zu einem [concept_subject] machen"
 protector: "Beschützer"
 suzerain: "Suzerän"
 obligation: "[concept_obligation]"
 RELEASE: "Entlassen"
 CONFIRM: "Bestätigen"
 CANCEL: "Abbrechen"
 USE_OBLIGATION: "[concept_obligation] einsetzen"
 OWE_OBLIGATION: "[concept_obligation] schulden"
 CALLING_IN_OBLIGATION: "[concept_obligation] einfordern"
 OFFERING_OBLIGATION: "[concept_obligation] anbieten"
 THEY_DO_NOT_OWE_OBLIGATION: "Sie schulden uns keine [concept_obligation]."
 THEY_OWE_OBLIGATION: "Sie schulden uns bereits eine [concept_obligation]."
 WE_OWE_OBLIGATION: "Wir schulden ihnen bereits eine [concept_obligation]."
 EXISTING_PACT: "Wert des bestehenden Diplomatiepakts „[DIPLOMATIC_PACT.GetName]“"
 NO_PACT_TO_TRANSFER: "Es gibt keinen [concept_diplomatic_pact] dieser Art zum Übertragen"
 AI_ACCEPTANCE_LIBERTY_DESIRE_LEVEL: "$LIBERTY_DESIRE_LEVEL$"
 NO_STATE_SELECTED_FOR_COUNTRY: "Muss einen [concept_state] für [COUNTRY.GetAltName('AKK')] auswählen"
 NO_STATE_SELECTED_FOR_ANY_COUNTRY: "Muss einen [concept_state] für mindestens [COUNTRY.GetAltName('AKK')] oder [TARGET_COUNTRY.GetAltName('AKK')] auswählen"
 STATE_NOT_SELECTABLE_FOR_COUNTRY: "Ausgewählter [concept_state] für [COUNTRY.GetAltName('AKK')] ist nicht gültig bis:\n$DESC$"
 CONFIRM_DIPLOMATIC_ACTION: "#header Bestätigen#!\n$TOOLTIP_DELIMITER$[ConcatIfNeitherEmpty('\n','$DESC$')]"
 DIPLOMATIC_ACTION_STATE_DESC: "[Country.GetAltNameNoFormatting('NOM')] [STATE.GetName]"
 TREATY_COUNTRY_HAS_CALLED_IN_OBLIGATION: "[Country.GetAltName('NOM')|U] hat eine @obligation! [concept_obligation] bei [Treaty.GetOtherCountry(Country.Self).GetAltName('DAT')] eingefordert"
 TREATY_COUNTRY_HAS_OWED_OBLIGATION: "[Country.GetAltName('NOM')|U] schuldete [Treaty.GetOtherCountry(Country.Self).GetAltName('DAT')] eine @obligation! [concept_obligation]"
 TREATY_COUNTRY_WILL_CALL_IN_OBLIGATION: "[Country.GetAltName('NOM')|U] wird eine @obligation! [concept_obligation] bei [Treaty.GetOtherCountry(Country.Self).GetAltName('DAT')] einfordern"
 TREATY_COUNTRY_WILL_OWE_OBLIGATION: "[Country.GetAltName('NOM')|U] wird [Treaty.GetOtherCountry(Country.Self).GetAltName('DAT')] eine @obligation! [concept_obligation] schulden"
 OBLIGATION_DELAY_EXPLANATION: "Die [concept_obligation] tritt nach dem Ende der [concept_binding_period] des [Concept('concept_treaty', 'Vertrags')] in Kraft oder spätestens #v [Divide_int32(GetDefine('NDiplomacy', 'MAX_TREATY_OBLIGATIONS_DELAY_DAYS'), '(int32)365')|0]#! Jahre nach Datum der Unterzeichnung ([Treaty.GetStartDate])"
 TREATY_COUNTRY_HAS_OWED_OBLIGATION_WITH_EXPLANATION: "#header $TREATY_COUNTRY_HAS_OWED_OBLIGATION$#!\n$TOOLTIP_DELIMITER$\n$OBLIGATION_DELAY_EXPLANATION$"
 TREATY_COUNTRY_WILL_OWE_OBLIGATION_WITH_EXPLANATION: "#header $TREATY_COUNTRY_WILL_OWE_OBLIGATION$#!\n$TOOLTIP_DELIMITER$\n$OBLIGATION_DELAY_EXPLANATION$"
 TREATY_HAS_OR_WILL_CALL_IN_OBLIGATION: "[SelectLocalization(Treaty.AreObligationsEffectuated, 'TREATY_COUNTRY_HAS_CALLED_IN_OBLIGATION', 'TREATY_COUNTRY_WILL_CALL_IN_OBLIGATION')]"
 TREATY_HAS_OR_WILL_OWE_OBLIGATION: "[SelectLocalization(Treaty.AreObligationsEffectuated, 'TREATY_COUNTRY_HAS_OWED_OBLIGATION', 'TREATY_COUNTRY_WILL_OWE_OBLIGATION')]"
 AI_WILL_ACCEPT_GENERIC: "@approves! [COUNTRY.GetAltName('NOM')|U] würde annehmen"
 AI_WILL_NOT_ACCEPT_GENERIC: "@disapproves! [COUNTRY.GetAltName('NOM')|U] würde #bold #n NICHT#!#! annehmen"
 AI_WILL_ACCEPT: "@approves! [COUNTRY.GetAltName('NOM')|U] würde akzeptieren"
 AI_WILL_ACCEPT_WITH_OWE_OBLIGATION: "@obligation! [COUNTRY.GetAltName('NOM')|U] würde akzeptieren, wenn wir dafür eine [concept_obligation] schulden"
 AI_WILL_ACCEPT_WITH_CALL_IN_OBLIGATION: "@obligation! [COUNTRY.GetAltName('NOM')|U] würde akzeptieren, wenn wir die [concept_obligation] #b einfordern#!, die man uns schuldet"
 AI_MIGHT_ACCEPT: "@indifferent! [COUNTRY.GetAltName('NOM')|U] könnte akzeptieren (Wahrscheinlichkeit von [DiplomaticAction.GetRandomAcceptanceChanceNoObligation|%0v])"
 AI_MIGHT_ACCEPT_WITH_OWE_OBLIGATION: "@obligation! [COUNTRY.GetAltName('NOM')|U] könnte akzeptieren, wenn wir dafür eine [concept_obligation] schulden (Wahrscheinlichkeit von [DiplomaticAction.GetRandomAcceptanceChanceWithOweObligation|%0v])"
 AI_MIGHT_ACCEPT_WITH_CALL_IN_OBLIGATION: "@obligation! [COUNTRY.GetAltName('NOM')|U] könnte akzeptieren, wenn wir die [concept_obligation] #b einfordern#!, die man uns schuldet (Wahrscheinlichkeit von [DiplomaticAction.GetRandomAcceptanceChanceWithCallInObligation|%0v])"
 AI_MIGHT_ACCEPT_WITH_ACTION: "@indifferent! [COUNTRY.GetAltName('NOM')|U] könnte annehmen (Wahrscheinlichkeit von [DiplomaticAction.GetRandomAcceptanceChanceNoObligation|%0v])"
 AI_WILL_NOT_ACCEPT: "@disapproves! [COUNTRY.GetAltName('NOM')|U] würde #bold #n NICHT#!#! annehmen"
 AI_WILL_ACCEPT_TOOLTIP: "[DiplomaticAction.GetWillAcceptDesc]\n$TOOLTIP_DELIMITER$\n[DiplomaticAction.GetWillAcceptBreakdown]"
 AI_WILL_ACCEPT_BREAKDOWN: "Grund für ihren Annahmewert von $SCORE|=+$:\n$DETAILS$"
 PLAYER_MIGHT_ACCEPT: "Sie könnten annehmen"
 PLAYER_MIGHT_ACCEPT_DESC: "[DiplomaticAction.GetSecondCountry.GetName('NOM')|U] ist ein Spieler ([DiplomaticAction.GetSecondCountry.GetPlayedByDesc]) und kann selbst entscheiden, ob es annimmt oder nicht"
 AI_WILL_ACCEPT_ENTRY_FORMAT: "$SCRIPT_VALUE_KEY_AFTER_FORMAT$"
 AI_DIPLOMATIC_PLAY_SUPPORT_FORMAT: "$VALUE|+=0$ durch $KEY$"
 DIPLOMATIC_ACCEPTANCE_RELATIONS: "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting]-[SCOPE.sCountry('actor').GetAdjectiveNoFormatting|l]e [concept_relations] sind [SCOPE.GetRootScope.GetCountry.GetRelationsWithDesc(SCOPE.sCountry('actor'))]"
 DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH: "[SCOPE.sCountry('target').GetAdjectiveNoFormatting|U]e Armee-[concept_power_projection] verglichen mit unserer"
 DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH_AGAINST_OVERLORD: "[SCOPE.sCountry('target').GetOverlord.GetAdjectiveNoFormatting|U]e Armee-[concept_power_projection] verglichen mit unserer"
 DIPLOMATIC_ACCEPTANCE_NAVY_STRENGTH: "[SCOPE.sCountry('target').GetAdjectiveNoFormatting|U]e Marine-[concept_power_projection] verglichen mit unserer"
 DIPLOMATIC_ACCEPTANCE_ANTI_IMPERIALISM: "Sie verfolgen die [concept_ai_strategy] „#v $ai_strategy_anti_imperialism$#!“"
 DIPLOMATIC_ACCEPTANCE_TERRITORIAL_EXPANSION: "Sie verfolgen die [concept_ai_strategy] „#v $ai_strategy_territorial_expansion$#!“"
 DIPLOMATIC_ACCEPTANCE_WORLD_REVOLUTION: "Sie verfolgen die [concept_ai_strategy] „#v $ai_strategy_world_revolution$#!“"
 DIPLOMATIC_ACCEPTANCE_COLONIAL_EXPANSION: "Sie verfolgen die [concept_ai_strategy] „#v $ai_strategy_colonial_expansion$#!“"
 DIPLOMATIC_ACCEPTANCE_INDUSTRIAL_EXPANSION: "Sie verfolgen die [concept_ai_strategy] #v $ai_strategy_industrial_expansion$#!"
 DIPLOMATIC_ACCEPTANCE_AGRICULTURAL_EXPANSION: "Sie verfolgen die [concept_ai_strategy] #v $ai_strategy_agricultural_expansion$#!"
 DIPLOMATIC_ACCEPTANCE_RESOURCE_EXPANSION: "Sie verfolgen die [concept_ai_strategy] #v $ai_strategy_resource_expansion$#!"
 DIPLOMATIC_ACCEPTANCE_PLANTATION_ECONOMY: "Sie verfolgen die [concept_ai_strategy] #v $ai_strategy_plantation_economy$#!"
 DIPLOMATIC_ACCEPTANCE_ECONOMIC_IMPERIALISM: "Sie verfolgen die [concept_ai_strategy] #v $ai_strategy_economic_imperialism$#!"
 DIPLOMATIC_ACCEPTANCE_MAINTAIN_POWER_BALANCE: "Sie verfolgen die [concept_ai_strategy] „#v $ai_strategy_maintain_power_balance$#!“"
 DIPLOMATIC_ACCEPTANCE_UNRECOGNIZED: "[SCOPE.sCountry('actor').GetAltName('NOM')|U] ist eine [concept_unrecognized_power]"
 DIPLOMATIC_ACCEPTANCE_LEGITIMACY: "[concept_legitimacy] [SCOPE.GetRootScope.GetCountry.GetAltName('VON')] ([SCOPE.GetRootScope.GetCountry.GetGovernmentLegitimacy|v])"
 DIPLOMATIC_ACCEPTANCE_NATIONAL_MILITIA: "Sie haben „[GetLawType('law_national_militia').GetName]“ beschlossen"
 DIPLOMATIC_ACCEPTANCE_DISALLOWED_TRADE: "Sie haben [concept_trade] verboten"
 DIPLOMATIC_ACCEPTANCE_DISALLOWED_TRADE_FIRST: "Wir haben [concept_trade] verboten"
 DIPLOMATIC_ACCEPTANCE_HIGH_ECONOMIC_DEPENDENCE: "Sie sind wirtschaftlich von uns abhängig"
 DIPLOMATIC_ACCEPTANCE_HIGH_ECONOMIC_DEPENDENCE_FIRST: "Wir sind wirtschaftlich von ihnen abhängig"
 DIPLOMATIC_ACCEPTANCE_LOW_ECONOMIC_DEPENDENCE: "Sie sind wirtschaftlich von uns unabhängig"
 DIPLOMATIC_ACCEPTANCE_LOW_ECONOMIC_DEPENDENCE_FIRST: "Wir sind wirtschaftlich von ihnen unabhängig"
 DIPLOMATIC_ACCEPTANCE_MILITARY_SPENDING: "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting|U]e Militärausgaben"
 DIPLOMATIC_ACCEPTANCE_MILITARY_SPENDING_FIRST: "Unsere Militärausgaben"
 DIPLOMATIC_ACCEPTANCE_SAME_RELIGION: "Wir haben dieselbe [concept_state_religion] ([SCOPE.GetRootScope.GetCountry.GetStateReligion.GetName])"
 DIPLOMATIC_ACCEPTANCE_DIFFERENT_RELIGION_BUT_SAME_TRAIT: "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting|U]e [concept_state_religion] unterscheidet sich von unserer, hat aber eine ähnliche [concept_religious_trait]"
 DIPLOMATIC_ACCEPTANCE_DIFFERENT_RELIGION: "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting|U]e [concept_state_religion] unterscheidet sich von unserer"
 DIPLOMATIC_ACCEPTANCE_TECH_SPREAD_VALUE: "Rate der [concept_technology_spread]"
 DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE: "Ideologische Unterschiede unserer [Concept('concept_government', '$concept_governments$')]"
 DIPLOMATIC_ACCEPTANCE_IS_IN_WAR_TOGETHER: "Wir stehen auf derselben Seite eines [Concept('concept_war', 'Krieges')]"
 DIPLOMATIC_ACCEPTANCE_NO_CUSTOMS_UNION: "Wir haben #b keine#! [concept_customs_union]"
 DIPLOMATIC_ACCEPTANCE_POWERFUL_PROTECTORS_US: "Wir haben mächtige Beschützer"
 DIPLOMATIC_ACCEPTANCE_TRUCE: "Wir haben einen [concept_truce]"
 DIPLOMATIC_ACCEPTANCE_INFLUENCE_PAYMENTS: "[SCOPE.sCountry('actor').GetAdjectiveNoFormatting]er Finanzeinfluss in diesem Land"
 DIPLOMATIC_ACCEPTANCE_GIVING_AWAY_LAND: "Wird mit einem [concept_state] beschenkt"
 DIPLOMATIC_ACCEPTANCE_STATES_NOT_SET: "[Concept('concept_state', '$concept_states$')] nicht festgelegt"
 DIPLOMATIC_ACCEPTANCE_TRADE_STATE_FIRST_STATE: "„[SCOPE.sState('first_state').GetName]“ angeboten"
 DIPLOMATIC_ACCEPTANCE_TRADE_STATE_SECOND_STATE: "„[SCOPE.sState('second_state').GetName]“ abzutreten"
 DIPLOMATIC_ACCEPTANCE_DOES_NOT_WANT_FIRST_STATE: "Will „[SCOPE.sState('first_state').GetName]“ nicht"
 DIPLOMATIC_ACCEPTANCE_TRADE_STATE_SPLIT_STATE_EXCHANGE: "Vereinigung von [Concept('concept_split_state','$concept_split_states$')] in „[SCOPE.sState('first_state').GetStateRegion.GetName]“ und „[SCOPE.sState('second_state').GetStateRegion.GetName]“"
 DIPLOMATIC_ACCEPTANCE_CHANCE_TO_WIN_DIPLOMATIC_PLAY: "Angenommene Fähigkeit, [SCOPE.sCountry('actor').GetAltNameNoFormatting('AKK')] in einem [concept_diplomatic_play] zu besiegen"
 DIPLOMATIC_ACCEPTANCE_ACTOR_ECONOMIC_DEPENDENCE: "[concept_economic_dependence|U] [SCOPE.sCountry('actor').GetAltNameNoFormatting('GEN')] vom [concept_overlord]"
 DIPLOMATIC_ACCEPTANCE_TARGET_ECONOMIC_DEPENDENCE: "[concept_economic_dependence|U] [SCOPE.GetRootScope.GetCountry.GetAltNameNoFormatting('GEN')] vom [concept_overlord]"
 DIPLOMATIC_ACCEPTANCE_ACTOR_LIBERTY_DESIRE: "[concept_liberty_desire] [SCOPE.sCountry('actor').GetAltNameNoFormatting('GEN')]"
 DIPLOMATIC_ACCEPTANCE_TARGET_LIBERTY_DESIRE: "[concept_liberty_desire] [SCOPE.GetRootScope.GetCountry.GetAltNameNoFormatting('GEN')]"
 DIPLOMATIC_ACCEPTANCE_ACTOR_CAPITAL_MARKET_ACCESS: "[concept_market_access] von [SCOPE.sCountry('other_country').GetCapital.GetNameNoFormatting]"
 #Shared with treaties
 DIPLOMATIC_ACCEPTANCE_BASE: "Grundzurückhaltung"
 DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION: "Ideologische Ähnlichkeiten unserer [Concept('concept_government', '$concept_governments$')]"
 DIPLOMATIC_ACCEPTANCE_ISOLATIONIST: "Sie verfolgen die [concept_ai_strategy] #v $ai_strategy_armed_isolationism$#!"
 DIPLOMATIC_ACCEPTANCE_POWERFUL_PROTECTORS_THEM: "Sie haben mächtige Beschützer"
 DIPLOMATIC_ACCEPTANCE_INFAMY: "Unsere [concept_infamy]-Stufe ist [SCOPE.sCountry('actor').GetInfamyLabel]"
 DIPLOMATIC_ACCEPTANCE_DECREASED_COHESION: "[Concept('concept_power_bloc_cohesion', 'Zusammenhaltsverringerung')], wenn [SCOPE.sCountry('target').GetAltName('NOM')] beitritt"
 DIPLOMATIC_ACCEPTANCE_ATTITUDE: "[SCOPE.sCountry('target').GetAdjectiveNoFormatting|U]e [concept_attitude] gegenüber [SCOPE.sCountry('actor').GetAltName('DAT')] ist: [SCOPE.sCountry('target').GetAttitudeTowards(SCOPE.sCountry('actor')).GetName]"
 DIPLOMATIC_ACCEPTANCE_FROM_IDENTITY: "[SCOPE.sCountry('actor').GetPowerBloc.GetIdentity.GetName]"
 DIPLOMATIC_ACCEPTANCE_RANK: "[SCOPE.sCountry('target').GetAdjectiveNoFormatting|U]er [concept_rank] als [SCOPE.sCountry('target').GetRank] verglichen mit dem [SCOPE.sCountry('actor').GetAdjectiveNoFormatting|U]en [concept_rank] als [SCOPE.sCountry('actor').GetRank]"
 DIPLOMATIC_ACCEPTANCE_HIGH_GDP: "Betrag, um den das [SCOPE.sCountry('target').GetAdjective|l]e $GDP_SHORT$ #v @money!2,0 Mio.#! übersteigt"
 DIPLOMATIC_ACCEPTANCE_LEVERAGE: "[concept_power_bloc_leverage] von „[SCOPE.sCountry('actor').GetPowerBloc.GetName]“ gegenüber [SCOPE.sCountry('target').GetAltName('DAT')]"
 DIPLOMATIC_ACCEPTANCE_LEVERAGE_OF_TARGET: "[concept_power_bloc_leverage] von „[SCOPE.sCountry('target').GetPowerBloc.GetName]“ gegenüber [SCOPE.sCountry('actor').GetAltName('DAT')]"
 DIPLOMATIC_ACCEPTANCE_COHESION: "[concept_power_bloc_cohesion] von „[SCOPE.sCountry('actor').GetPowerBloc.GetName]“"
 DIPLOMATIC_ACCEPTANCE_COHESION_OF_TARGET: "[concept_power_bloc_cohesion] von „[SCOPE.sCountry('target').GetPowerBloc.GetName]“"
 DIPLOMATIC_ACCEPTANCE_IDENTITY_AFFINITY_TO_RANK: "„[SCOPE.sCountry('actor').GetPowerBloc.GetName]“-Affinität zu [SCOPE.sCountry('target').GetAdjectiveNoFormatting|l]em [concept_rank] als [SCOPE.sCountry('target').GetRank]"
 DIPLOMATIC_ACCEPTANCE_FELLOW_SUBJECT: "[concept_subject] desselben [Concept('concept_overlord', 'Suzeräns')]"
 DIPLOMATIC_ACCEPTANCE_ATTITUDE_TOWARDS_OWN_OVERLORD: "[SCOPE.sCountry('target').GetAdjectiveNoFormatting|U]e [concept_attitude] gegenüber [SCOPE.sCountry('target').GetOverlord.GetAltName('DAT')] ist: [SCOPE.sCountry('target').GetAttitudeTowards(SCOPE.sCountry('target').GetOverlord).GetName]"
 DIPLOMATIC_ACCEPTANCE_ATTITUDE_TOWARDS_ACTOR_OVERLORD: "[SCOPE.sCountry('target').GetAdjectiveNoFormatting|U]e [concept_attitude] gegenüber [SCOPE.sCountry('actor').GetOverlord.GetAltName('DAT')] ist: [SCOPE.sCountry('target').GetAttitudeTowards(SCOPE.sCountry('actor').GetOverlord).GetName]"
 DIPLOMATIC_ACCEPTANCE_GDP: "[SCOPE.sCountry('target').GetAdjectiveNoFormatting|U]es $GDP_SHORT$ (@money![SCOPE.sCountry('target').GetGDP|Dv]) verglichen mit unserem $GDP_SHORT$ (@money![SCOPE.sCountry('actor').GetGDP|Dv])"
 DIPLOMATIC_ACCEPTANCE_NEIGHBORS: "Wir sind [concept_neighbors] [SCOPE.sCountry('target').GetAltName('VON')]"
 DIPLOMATIC_ACCEPTANCE_LOW_CONSTRUCTION: "[SCOPE.sCountry('target').GetAltNameNoFormatting('NOM')|U] hat beschränkte Baumöglichkeiten"
 DIPLOMATIC_ACCEPTANCE_ALLIED_TO_RIVALS: "Wir haben [Concept('concept_alliance', '$concept_alliances$')] oder [Concept('concept_defensive_pact', '$concept_defensive_pacts$')] mit [SCOPE.sCountry('target').GetAdjectiveNoFormatting|l]en [Concept('concept_rivalry','$concept_rivals$')]"
 DIPLOMATIC_ACCEPTANCE_ALLIED_TO_ALLIES: "Wir haben [Concept('concept_alliance', '$concept_alliances$')] oder [Concept('concept_defensive_pact', '$concept_defensive_pacts$')] mit [SCOPE.sCountry('target').GetAdjectiveNoFormatting|l]en Verbündeten"
 DIPLOMATIC_ACCEPTANCE_SHARED_RIVALS: "Wir haben gemeinsame [Concept('concept_rivalry','$concept_rivals$')]"
 DIPLOMATIC_ACCEPTANCE_NUM_ALLIES: "Zahl der [SCOPE.sCountry('target').GetAdjectiveNoFormatting|l]en [Concept('concept_alliance','$concept_alliances$')]"
 DIPLOMATIC_ACCEPTANCE_NUM_MILITARY_ASSISTANCE_PACTS: "Zahl der [SCOPE.sCountry('actor').GetAdjectiveNoFormatting|l]en [concept_military_assistance]-Pakte"
 DIPLOMATIC_ACCEPTANCE_NUM_MILITARY_ASSISTANCE_PACTS_TARGET: "Zahl der [SCOPE.sCountry('target').GetAdjectiveNoFormatting|l]en [concept_military_assistance]-Pakte"
 DIPLOMATIC_ACCEPTANCE_NUM_DEFENSIVE_PACTS: "Zahl der [SCOPE.sCountry('target').GetAdjectiveNoFormatting|l]en [Concept('concept_defensive_pact','$concept_defensive_pacts$')]"
 DIPLOMATIC_ACCEPTANCE_DEFENSIVE_PACT: "Wir haben einen [concept_defensive_pact]"
 DIPLOMATIC_ACCEPTANCE_ALLIANCE: "Wir haben ein [concept_alliance]."
 DIPLOMATIC_ACCEPTANCE_TRADE_PRIVILEGES: "Wir erhalten [Concept('concept_trade_privilege','$concept_trade_privileges$')]"
 DIPLOMATIC_ACCEPTANCE_MUTUAL_TRADE_VALUE: "Gesamtgeldwert unseres gegenseitigen [Concept('concept_trade', 'Handels')]"
 DIPLOMATIC_ACCEPTANCE_FOREIGN_INVESTMENT_RIGHTS: "Sie haben [concept_foreign_investment_rights|l]"
 DIPLOMATIC_ACCEPTANCE_SAME_POWER_BLOC: "Im selben [concept_power_bloc]"
 DIPLOMATIC_ACCEPTANCE_DIFFERENT_POWER_BLOC: "In unterschiedlichen [Concept('concept_power_bloc', 'Machtblöcken')]"
 DIPLOMATIC_ACCEPTANCE_DEBT: "Größe der [SCOPE.GetRootScope.GetCountry.GetAdjective|l]en [concept_loans]"
 DIPLOMATIC_ACCEPTANCE_GOLD_RESERVES: "Größe der [SCOPE.GetRootScope.GetCountry.GetAdjective|l]en [concept_gold_reserves]: "
 DIPLOMATIC_ACCEPTANCE_INCOMPATIBLE_ECONOMIC_SYSTEMS: "Wir haben inkompatible Wirtschaftssysteme"
 DIPLOMATIC_ACCEPTANCE_IS_CHINA: "Durch chinesische Innenpolitik"
 DIPLOMATIC_ACCEPTANCE_POWERFUL_ENEMY_IN_WAR: "Ein [concept_war] mit einem stärkeren Feind"
 DIPLOMATIC_ACCEPTANCE_POWERFUL_ENEMY_IN_WAR_FIRST: "Wir befinden uns im [concept_war] mit einem stärkeren Feind"
 DIPLOMATIC_ACCEPTANCE_LIBERTY_DESIRE: "Der [concept_liberty_desire] dieses [Concept('concept_country', 'Landes')]"
 DIPLOMATIC_ACCEPTANCE_TRADE_STATE_SOURCE: "Angebotener $concept_state$"
 DIPLOMATIC_ACCEPTANCE_TRADE_STATE_TARGET: "Gibt $concept_state$ ab"
 DIPLOMATIC_ACCEPTANCE_TRADE_STATE_REJECT: "Will diesen $concept_state$ nicht"
 DIPLOMATIC_ACCEPTANCE_TARGET_PRO_LOBBY_CLOUT: "[concept_clout|U] von pro-[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting|l]en [Concept('concept_political_lobby', '$concept_political_lobbies_short$')] [SCOPE.sCountry('other_country').GetAltNameNoFormatting('IN')]"
 DIPLOMATIC_ACCEPTANCE_TARGET_ANTI_LOBBY_CLOUT: "[concept_clout|U] von anti-[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting|l]en [Concept('concept_political_lobby', '$concept_political_lobbies_short$')] [SCOPE.sCountry('other_country').GetAltNameNoFormatting('IN')]"
 DIPLOMATIC_ACCEPTANCE_SOURCE_PRO_LOBBY_CLOUT: "[concept_clout|U] von pro-[SCOPE.sCountry('other_country').GetAdjectiveNoFormatting|l]en [Concept('concept_political_lobby', '$concept_political_lobbies_short$')] [SCOPE.GetRootScope.GetCountry.GetAltNameNoFormatting('IN')]"
 DIPLOMATIC_ACCEPTANCE_SOURCE_ANTI_LOBBY_CLOUT: "[concept_clout|U] von anti-[SCOPE.sCountry('other_country').GetAdjectiveNoFormatting|l]en [Concept('concept_political_lobby', '$concept_political_lobbies_short$')] [SCOPE.GetRootScope.GetCountry.GetAltNameNoFormatting('IN')]"
 ### Diplomatic Acceptance Strings for Treaties
 DIPLOMATIC_ACCEPTANCE_UNTRUSTWORTHY_COUNTRY: "$modifier_untrustworthy_country$"
 DIPLOMATIC_ACCEPTANCE_GIFT: "Erfreut, diesen [concept_article] zu erhalten"
 DIPLOMATIC_ACCEPTANCE_BINDING_PERIOD: "Durch Bindungszeit"
 DIPLOMATIC_ACCEPTANCE_BASE_ADDITIONAL: "Grundzurückhaltung (Artikel)"
 DIPLOMATIC_ACCEPTANCE_INPUT_QUANTITY: "Durch Zufuhrmenge"
 DIPLOMATIC_ACCEPTANCE_DOES_NOT_WANT_ARTICLE: "Nicht an Artikel interessiert"
 DIPLOMATIC_ACCEPTANCE_NO_LONGER_WANTS_ARTICLE: "Nicht mehr an Artikel interessiert"
 DIPLOMATIC_ACCEPTANCE_VALUE_OF_STATES_IN_REGION: "Wert von [SCOPE.GetRootScope.GetCountry.GetAdjective|l]en [Concept('concept_state', '$concept_states$')] in der [concept_strategic_region]"
 DIPLOMATIC_ACCEPTANCE_BUDGET_SURPLUS: "Durch [SCOPE.GetRootScope.GetCountry.GetAdjective|l]en Etatüberschuss"
 DIPLOMATIC_ACCEPTANCE_BUDGET_DEFICIT: "Durch [SCOPE.GetRootScope.GetCountry.GetAdjective|l]es Etatdefizit"
 DIPLOMATIC_ACCEPTANCE_MONEY_TRANSFER_CAP: "Bestehende [SCOPE.GetRootScope.GetCountry.GetAdjective|l]e $money_transfer$s-Ausgaben"
 DIPLOMATIC_ACCEPTANCE_TRANSIT_RIGHTS_VALUE: "Wert der $transit_rights$"
 DIPLOMATIC_ACCEPTANCE_EQUAL_EXCHANGE: "Gerechter Austausch"
 DIPLOMATIC_ACCEPTANCE_VALUE_OF_BUILDING_TYPE: "Wert der Gebäudeart"
 DIPLOMATIC_ACCEPTANCE_WANTS_TO_EXPORT: "Erwünschter Export"
 DIPLOMATIC_ACCEPTANCE_WANTS_TO_IMPORT: "Erwünschter Import"
 DIPLOMATIC_ACCEPTANCE_WANTS_TO_TRADE: "Will ungehinderten Handel dieser Ware"
 DIPLOMATIC_ACCEPTANCE_DOMESTIC_PRODUCTION: "Durch betroffene Inlandsproduktion"
 DIPLOMATIC_ACCEPTANCE_LIKES_LAW: "Ihrer Regierung gefällt dieses Gesetz"
 DIPLOMATIC_ACCEPTANCE_ANTI_SLAVERY: "Will Sklaverei abgeschafft sehen"
 DIPLOMATIC_ACCEPTANCE_RECENTLY_TRADED_STATES: "Hat vor Kurzem $concept_states$ gehandelt"
 LOBBY_OPPORTUNITY_BONUS: "Gelegenheitsbonus von pro-[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting|l]en [Concept('concept_political_lobby', '$concept_political_lobbies_short$')]"
 AT_WAR_WITH_UNFRIENDLY_COUNTRY: "Wir befinden uns im [concept_war] mit einer ebenfalls feindlichen Nation"
 AT_WAR_WITH_FRIENDLY_COUNTRY: "Wir befinden uns im [concept_war] mit einer Nation, die ihnen freundlich gesonnen ist"
 GREAT_GAME_BONUS: "Durch Interessen im Großen Spiel"
 DIPLOMATIC_INCIDENT_WARGOAL_DESC: "Dies zu verlangen, wird zu einem [concept_diplomatic_incident] in der Region „$STRATEGIC_REGION$“ führen, was [COUNTRY.GetAltName('DAT')] #N #B #tooltippable #tooltip:$INFAMY_BREAKDOWN_TAG$ $INFAMY_AMOUNT|1$#!#!#!#! [concept_infamy] einbringt und seine $RELATIONS$ zu #tooltippable #tooltip:$RELATIONS_BREAKDOWN_TAG$ $NUM_COUNTRIES_IMPACTED|v$ Ländern verschlechtert#!#!"
 DIPLOMATIC_INCIDENT_NON_WARGOAL_DESC: "Wird zu einem [concept_diplomatic_incident] in der Region „$STRATEGIC_REGION$“ führen, was [COUNTRY.GetAltName('DAT')] #N #B #tooltippable #tooltip:$INFAMY_BREAKDOWN_TAG$ $INFAMY_AMOUNT|1$#!#!#!#! [concept_infamy] einbringt und seine $RELATIONS$ zu #tooltippable #tooltip:$RELATIONS_BREAKDOWN_TAG$ $NUM_COUNTRIES_IMPACTED|v$ Ländern verschlechtert#!#!"
 DIPLOMATIC_INCIDENT_RELATIONS_IMPACT: "[COUNTRY.GetAdjectiveNoFormatting]e [concept_relations] mit [COUNTRY_THIRD_PARTY.GetAltName('DAT')]: $AMOUNT|=+$"
 WARGOAL_BASE_TYPE_VALUE: "Grundwert für $TYPE$: #BOLD $VAL|Dv$#!"
 WARGOAL_MULT_FROM_POPULATION: "Multipliziert mit #v x$MULT$#! aufgrund der Gesamtbevölkerung des Ziels"
 WARGOAL_PRIMARY_IS_FREE: "Das erste [concept_war_goal] hat niemals [concept_maneuver]-Kosten"
 INFAMY_EFFECT_FROM_RANK: "[COUNTRY.GetAltName('NOM')|U] hat den Rang „$RANK_NAME|v$“: $EFFECT|%=-$"
 WARGOAL_MULT_FROM_HOMELANDS: "Ziel ist ein [concept_homeland] für [COUNTRY.GetAltName('AKK')]: $EFFECT|%=-$"
 WARGOAL_MULT_FROM_UNINCORPORATED_STATE: "Ziel ist ein [concept_unincorporated_state]: $EFFECT|%=-$"
 WARGOAL_MULT_FROM_UNINCORPORATED_STATES: "Ziel enthält [Concept('concept_unincorporated_state', '$concept_unincorporated_states$')]: $EFFECT|%=-$"
 WARGOAL_MULT_FROM_OWN_SUBJECT: "Multipliziert mit #v x$EFFECT$#!, weil [TARGET_COUNTRY.GetAltName('NOM')] ein [concept_subject] [COUNTRY.GetAltName('VON')] ist"
 #Power Bloc Sacred Civics Principle
 DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS: "$principle_group_sacred_civics$-[concept_power_bloc_principle]"
 RELATIONS: "[concept_relations]"
 ATTITUDE: "[concept_attitude]"
 AI_STRATEGIES: "[Concept('concept_ai_strategy', '$concept_ai_strategies$')]"
 DIPLO_ACTION_IS_ACTIVE: "#i Derzeit aktiv#!"
 DIPLO_ACTION: "[DIPLOMATIC_ACTION.GetName]"
 DIPLO_ACTION_PROPOSE: "[DIPLOMATIC_ACTION.GetProposeName]"
 DIPLO_ACTION_BREAK: "[DIPLOMATIC_ACTION.GetBreakName]"
 DIPLO_ACTION_ASK_TO_BREAK: "[DIPLOMATIC_ACTION.GetAskToBreakName]"
 DIPLOMATIC_ACTION_TOO_SOON: "Wir müssen bis #variable $DATE$#! warten, um wieder Diplomatie mit #variable $COUNTRY$#! betreiben zu können."
 TREATY_PROPOSAL_DECLINED_TOO_SOON: "Wir müssen bis #variable $DATE$#! warten, um #variable [COUNTRY.GetAltName('DAT')]#! einen anderen Vorschlag zu schicken."
 CANNOT_AFFORD_DIPLO_PACT: "Es müssen mindestens @inf!#BOLD #V $COST|1=+$#!#! vorhanden sein, um diese [concept_diplomatic_action] aufrechtzuerhalten"
 NO_POSSIBLE_STATES_TO_SELECT: "Es sind keine [Concept('concept_state', '$concept_states$')] verfügbar"
 COUNTRY_IS_A_SUBJECT_OF: "[COUNTRY.GetAltName('NOM')|U] ist ein [concept_subject] [TARGET_COUNTRY.GetAltName('GEN')]"
 DIPLOMATIC_ACTION_MAINTENANCE_COST: "Unterhaltskosten: @inf!$COST|v0$ [concept_influence]"
 DIPLOMATIC_ACTION_MAINTENANCE_COST_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ @inf!$COST|0v$#!#!"
 DIPLOMATIC_ACTION_MAINTENANCE_COST_DESC: "#header $NAME$ Unterhaltskosten: @inf!$COST|v0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 DIPLO_ACTION_REVERSE_PACT_ALREADY_ACTIVE: "Der Pakt besteht bereits"
 DIPLO_ACTION_PENDING: "Unserem Vorschlag muss noch zugestimmt werden"
 DIPLO_ACTION_PENDING_OTHER: "Sie erwägen bereits einen Vorschlag von uns"
 DIPLO_ACTION_REVERSE_PENDING: "Ihrem Vorschlag muss noch zugestimmt werden"
 DIPLO_PACT_RELATIONS_CHANGE_POS: "Verbessert derzeit [concept_relations] um #g +1#! alle $DAYS|v$ Tage durch einen täglichen Gesamtfortschritt von #v $PROGRESS_DAILY|%+=2$#!"
 DIPLO_PACT_RELATIONS_CHANGE_NEG: "Verschlechtert derzeit [concept_relations] um #r -1#! alle $DAYS|v$ Tage durch einen täglichen Gesamtfortschritt von #v $PROGRESS_DAILY|%+=2$#!"
 DIPLO_ACTION_FORCED_DURATION: "Wir können diesen [Concept('concept_diplomatic_pact','$concept_diplomatic_pact_short$')] für weitere $TIME_LEFT$ ($DATE$) nicht brechen"
 DIPLOMATIC_PACT_HEADER: "#header [DiplomaticPact.GetName]#!"
 DIPLOMATIC_PACT_DESC: "[DiplomaticPact.GetDesc]"
 DIPLOMATIC_PACT_TOOLTIP: "$DIPLOMATIC_PACT_HEADER$\n$TOOLTIP_DELIMITER$\n$DIPLOMATIC_PACT_DESC$"
 RELATIONS_CHANGE_MAX_CAP: " (Max: $MAX_VALUE|=+$)"
 RELATIONS_CHANGE_MIN_CAP: " (Min: $MIN_VALUE|=+$)"
 RELATIONS_CHANGE_EFFECT: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $PROGRESS_DAILY|%+=2$#!#!#! Fortschritt durch $NAME$$CAPDESC$"
 DIPLO_PACT_RELATIONS_EFFECT_BASE_VALUE: "#v $VAL|%2=+$#! Grundwert"
 DIPLO_PACT_RELATIONS_BREAKDOWN_FORMAT: "#header Fortschritt der [concept_relations]#!\n#v $DAYS$#! Tage bis [SelectLocalization(LessThan_CFixedPoint('(CFixedPoint)$PROGRESS_DAILY|5$', '(CFixedPoint)0'), '#r -', '#g ')]100 %#!\n$TOOLTIP_DELIMITER$\n#v $PROGRESS_DAILY|%2=+$#! wöchentlicher Fortschritt aufgrund von:\n$BREAKDOWN$"
 DIPLO_PACT_RELATIONS_CHANGE_TOTAL: "\n$DESC$, aufgrund von:#indent_newline:3 \n$DESC_DETAILS$#!"
 FORCE_REGIME_CHANGE_GOV_PRINCIPLES_DIST_POWER_PROGRESSIVENESS_DIFFERENCE: "#indent_newline:3 [SCOPE.GetRootScope.GetCountry.GetAltName('NOM')|U] und [SCOPE.sC('target_country').GetAltName('NOM')] haben sehr unterschiedliche [Concept('concept_law','$concept_laws$')] in den Kategorien „[GetLawGroup('lawgroup_governance_principles').GetName]“ und „[GetLawGroup('lawgroup_distribution_of_power').GetName]“\n[SCOPE.GetRootScope.GetCountry.GetAltName('NOM')|U]: „[SCOPE.GetRootScope.GetCountry.GetActiveLawFromGroup('lawgroup_governance_principles').GetName]“ und „[SCOPE.GetRootScope.GetCountry.GetActiveLawFromGroup('lawgroup_distribution_of_power').GetName]“\n[SCOPE.sC('target_country').GetAltName('NOM')|U]: „[SCOPE.sC('target_country').GetActiveLawFromGroup('lawgroup_governance_principles').GetName]“ und „[SCOPE.sC('target_country').GetActiveLawFromGroup('lawgroup_distribution_of_power').GetName]“#!"
 #Unilateral actions
 increase_relations: "Beziehungen verbessern"
 increase_relations_action_name: "[concept_relations] verbessern"
 increase_relations_action_propose_name: "Beginnen, [concept_relations] zu verbessern"
 increase_relations_action_break_name: "Aufhören, [concept_relations] zu verbessern"
 increase_relations_desc: "Verbessert die [concept_relations] zwischen zwei [Concept('concept_country', 'Ländern')] im Lauf der Zeit."
 increase_relations_country_info: "Derzeit [TARGET_COUNTRY.GetRelationsWithDesc(GetPlayer.Self)|l]e (#tooltippable #tooltip:[GetRawTextTooltipTag(TARGET_COUNTRY.GetRelationsTooltip(GetPlayer.Self))] [TARGET_COUNTRY.GetRelationsWith(GetPlayer.Self)|+]#!#!) [concept_relations] zu [TARGET_COUNTRY.GetAltName('DAT')]"
 increase_relations_action_notification_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verbessert [concept_relations]"
 increase_relations_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] verbessert aktiv die eigenen [concept_relations] zu [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('DAT')]."
 increase_relations_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat begonnen, die gegenseitigen [concept_relations] zu verbessern; derzeit liegen sie bei #tooltippable #tooltip:[GetRawTextTooltipTag(INITIATOR_COUNTRY.GetRelationsTooltip(GetPlayer))] [INITIATOR_COUNTRY.GetRelationsWithDesc(GetPlayer)|+]#!#! (#BOLD #tooltippable #tooltip:[GetRawTextTooltipTag(INITIATOR_COUNTRY.GetRelationsTooltip(GetPlayer))] [INITIATOR_COUNTRY.GetRelationsWith(GetPlayer)|+]#!#!#!). Seine [concept_attitude] gegenüber [GetPlayer.GetAltName('DAT')] ist #tooltippable #tooltip:[INITIATOR_COUNTRY.GetTooltipTag],COUNTRY_ATTITUDE_TOOLTIP [INITIATOR_COUNTRY.GetAttitudeTowards(GetPlayer).GetName]#!#!."
 increase_relations_action_notification_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat aufgehört, die [concept_relations] zu verbessern"
 increase_relations_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat aufgehört, unsere gegenseitigen [concept_relations] zu verbessern."
 increase_relations_effect_desc_global: "Beginnt damit, die [concept_relations] zu verbessern"
 increase_relations_effect_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] beginnt damit, die [concept_relations] zu [TARGET_COUNTRY.GetAltName('DAT')] zu verbessern"
 increase_relations_effect_desc_third: "[COUNTRY.GetAltName('NOM')|U] beginnt damit, die [concept_relations] zu [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))] zu verbessern"
 increase_relations_trigger_desc_global: "Verbessert die [concept_relations]"
 increase_relations_trigger_false_desc_global: "Verbessert die [concept_relations]"
 increase_relations_trigger_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] verbessert #b nicht#! die [concept_relations] zu [TARGET_COUNTRY.GetAltName('DAT')]"
 increase_relations_trigger_false_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] verbessert die [concept_relations] zu [TARGET_COUNTRY.GetAltName('DAT')]"
 increase_relations_trigger_desc_third: "[COUNTRY.GetAltName('NOM')|U] verbessert #b nicht#! die [concept_relations] zu [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))]"
 increase_relations_trigger_false_desc_third: "[COUNTRY.GetAltName('NOM')|U] verbessert #b nicht#! die [concept_relations] zu [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))]"
 damage_relations: "Beziehungen beschädigen"
 damage_relations_action_name: "[concept_relations] beschädigen"
 damage_relations_action_propose_name: "Beginnen, [concept_relations] zu beschädigen"
 damage_relations_action_break_name: "Aufhören, [concept_relations] zu beschädigen"
 damage_relations_desc: "Verschlechtert die [concept_relations] zwischen zwei [Concept('concept_country', 'Ländern')] im Lauf der Zeit."
 damage_relations_country_info: "Derzeit [TARGET_COUNTRY.GetRelationsWithDesc(GetPlayer.Self)|l]e (#tooltippable #tooltip:[GetRawTextTooltipTag(TARGET_COUNTRY.GetRelationsTooltip(GetPlayer.Self))] [TARGET_COUNTRY.GetRelationsWith(GetPlayer.Self)|+]#!#!) [concept_relations] zu [TARGET_COUNTRY.GetAltName('DAT')]"
 damage_relations_action_notification_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] beschädigt [concept_relations]"
 damage_relations_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] schädigt aktiv die eigenen [concept_relations] zu [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('DAT')]."
 damage_relations_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat begonnen, die gegenseitigen [concept_relations] zu beschädigen; derzeit liegen sie bei #tooltippable #tooltip:[GetRawTextTooltipTag(INITIATOR_COUNTRY.GetRelationsTooltip(GetPlayer))] [INITIATOR_COUNTRY.GetRelationsWithDesc(GetPlayer)|+]#!#! (#BOLD #tooltippable #tooltip:[GetRawTextTooltipTag(INITIATOR_COUNTRY.GetRelationsTooltip(GetPlayer))] [INITIATOR_COUNTRY.GetRelationsWith(GetPlayer)|+]#!#!#!). Seine [concept_attitude] gegenüber [GetPlayer.GetAltName('DAT')] ist #tooltippable #tooltip:[INITIATOR_COUNTRY.GetTooltipTag],COUNTRY_ATTITUDE_TOOLTIP [INITIATOR_COUNTRY.GetAttitudeTowards(GetPlayer).GetName]#!#!."
 damage_relations_action_notification_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat aufgehört, die [concept_relations] zu beschädigen"
 damage_relations_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat aufgehört, unsere gegenseitigen [concept_relations] zu beschädigen."
 damage_relations_effect_desc_global: "Beginnt damit, die [concept_relations] zu beschädigen"
 damage_relations_effect_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] beginnt damit, die [concept_relations] zu [TARGET_COUNTRY.GetAltName('DAT')] zu beschädigen"
 damage_relations_effect_desc_third: "[COUNTRY.GetAltName('NOM')|U] beginnt damit, die [concept_relations] zu [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))] zu beschädigen"
 damage_relations_trigger_desc_global: "Beschädigt die [concept_relations]"
 damage_relations_trigger_false_desc_global: "Beschädigt #b nicht#! die [concept_relations]"
 damage_relations_trigger_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] beschädigt die [concept_relations] zu [TARGET_COUNTRY.GetAltName('DAT')]"
 damage_relations_trigger_false_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] beschädigt #b nicht#! die [concept_relations] zu [TARGET_COUNTRY.GetAltName('DAT')]"
 damage_relations_trigger_desc_third: "[COUNTRY.GetAltName('NOM')|U] beschädigt die [concept_relations] zu [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))]"
 damage_relations_trigger_false_desc_third: "[COUNTRY.GetAltName('NOM')|U] beschädigt #b nicht#! die [concept_relations] zu [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))]"
 redeem_obligation: "Von Verpflichtung entbinden"
 redeem_obligation_action_name: "Von [concept_obligation] entbinden"
 redeem_obligation_action_propose_name: "Von [concept_obligation] entbinden"
 redeem_obligation_desc: "Entfernt die geschuldete [concept_obligation] eines [Concept('concept_country', 'Landes')] gegenüber einem anderen für eine sofortige Verbesserung der [concept_relations]."
 redeem_obligation_action_notification_name: "Von [concept_obligation] entbunden"
 redeem_obligation_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat uns von der [concept_obligation] entbunden, die wir ihm schuldeten. Dadurch haben sich unsere $concept_relations$ verbessert."
 expel_diplomats: "Diplomaten ausweisen"
 expel_diplomats_action_name: "Diplomaten ausweisen"
 expel_diplomats_action_propose_name: "Diplomaten ausweisen"
 expel_diplomats_desc: "Schädigt direkt die [concept_relations] zum Zielland und verhindert alle Verbesserungen der $concept_relations$ für die nächsten #v 5 Jahre#!, was allerdings [concept_infamy] kostet."
 expel_diplomats_action_notification_name: "Diplomaten ausgewiesen"
 expel_diplomats_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unsere Diplomaten ausgewiesen, was unsere gegenseitigen [concept_relations] beschädigt, sodass unsere Beziehungen bei #BOLD [INITIATOR_COUNTRY.GetRelationsWithDesc(GetPlayer)]#! ([INITIATOR_COUNTRY.GetRelationsWith(GetPlayer)|+]) liegen. Seine [concept_attitude] gegenüber [GetPlayer.GetAltName('DAT')] ist #tooltippable #tooltip:[INITIATOR_COUNTRY.GetTooltipTag],COUNTRY_ATTITUDE_TOOLTIP [INITIATOR_COUNTRY.GetAttitudeTowards(GetPlayer).GetName]#!#!."
 rivalry: "Rivalität"
 rivalry_action_name: "[concept_rivalry]"
 rivalry_action_propose_name: "[concept_rivalry] erklären"
 rivalry_action_break_name: "[concept_rivalry] beenden"
 rivalry_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] betrachtet [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('AKK')] als [Concept('concept_rivalry', 'Rivalen')]."
 rivalry_desc: "Etabliert eine [concept_rivalry] mit einem anderen [concept_country]."
 rivalry_action_notification_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat [concept_rivalry] erklärt"
 rivalry_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat [GetPlayer.GetAltName('DAT')] gegenüber eine [concept_rivalry] erklärt. Die [concept_attitude] [INITIATOR_COUNTRY.GetAltName('VON')|U] uns gegenüber ist #tooltippable #tooltip:[INITIATOR_COUNTRY.GetTooltipTag],COUNTRY_ATTITUDE_TOOLTIP [INITIATOR_COUNTRY.GetAttitudeTowards(GetPlayer).GetName]#!#!."
 rivalry_action_notification_third_party_name: "[INITIATOR_COUNTRY.GetAdjectiveNoFormatting]-[TARGET_COUNTRY.GetAdjectiveNoFormatting]e [concept_rivalry] erklärt"
 rivalry_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat [TARGET_COUNTRY.GetAltName('AKK')|U] zum [Concept('concept_rivalry', '$concept_rivals$')] erklärt."
 rivalry_action_notification_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat [concept_rivalry] beendet"
 rivalry_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] betrachtet [GetPlayer.GetAltName('AKK')] nicht länger als einen [Concept('concept_rivalry', '$concept_rivals$')]."
 rivalry_action_notification_third_party_break_name: "[INITIATOR_COUNTRY.GetAdjectiveNoFormatting]-[TARGET_COUNTRY.GetAdjectiveNoFormatting]e [concept_rivalry] beendet"
 rivalry_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat die eigene [concept_rivalry] mit [TARGET_COUNTRY.GetAltName('DAT')] beendet."
 rivalry_effect_desc_global: "Erklärt eine [concept_rivalry]"
 rivalry_effect_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] erklärt eine [concept_rivalry] mit [TARGET_COUNTRY.GetAltName('DAT')]"
 rivalry_effect_desc_third: "[COUNTRY.GetAltName('NOM')|U] hat [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('AKK'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('AKK'))] zum [Concept('concept_rivalry', 'Rivalen')] erklärt"
 rivalry_trigger_desc_global: "Hat eine [concept_rivalry]"
 rivalry_trigger_false_desc_global: "Hat #b keine#! [concept_rivalry]"
 rivalry_trigger_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat eine [concept_rivalry] mit [TARGET_COUNTRY.GetAltName('DAT')]"
 rivalry_trigger_false_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat #b keine#! [concept_rivalry] mit [TARGET_COUNTRY.GetAltName('DAT')]"
 rivalry_trigger_desc_third: "[COUNTRY.GetAltName('NOM')|U] hat eine [concept_rivalry] mit [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))]"
 rivalry_trigger_false_desc_third: "[COUNTRY.GetAltName('NOM')|U] hat #b keine#! [concept_rivalry] mit [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))]"
 fund_lobbies_trigger_desc_global: "Betreibt [Concept('concept_fund_lobbies', '$concept_funding_lobbies$')]"
 fund_lobbies_trigger_false_desc_global: "Betreibt #b keine#! [Concept('concept_fund_lobbies', '$concept_funding_lobbies$')]"
 fund_lobbies_trigger_desc_first: "[COUNTRY.GetAltName('NOM')|U] betreibt [Concept('concept_fund_lobbies', '$concept_funding_lobbies$')] [TARGET_COUNTRY.GetAltName('IN')]"
 fund_lobbies_trigger_false_desc_first: "[COUNTRY.GetAltName('NOM')|U] betreibt #b keine#! [Concept('concept_fund_lobbies', '$concept_funding_lobbies$')] [TARGET_COUNTRY.GetAltName('IN')]"
 fund_lobbies_trigger_desc_third: "[COUNTRY.GetAltName('NOM')|U] betreibt [Concept('concept_fund_lobbies', '$concept_funding_lobbies$')] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('IN'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('IN'))]"
 fund_lobbies_trigger_false_desc_third: "[COUNTRY.GetAltName('NOM')|U] betreibt #b keine#! [Concept('concept_fund_lobbies', '$concept_funding_lobbies$')] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('IN'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('IN'))]"
 embargo: "Embargo"
 embargo_action_name: "[concept_embargo]"
 embargo_action_propose_name: "[concept_embargo]"
 embargo_action_break_name: "[concept_embargo] beenden"
 embargo_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] hat ein [concept_embargo] gegen [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('AKK')]."
 embargo_desc: "Belegt ein anderes [concept_country] mit einem [concept_embargo]."
 embargo_action_notification_name: "[concept_embargo]"
 embargo_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat [GetPlayer.GetAltName('AKK')] mit einem [concept_embargo] belegt."
 embargo_action_notification_third_party_name: "[concept_embargo]"
 embargo_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat [TARGET_COUNTRY.GetAltName('AKK')] mit einem [concept_embargo] belegt."
 embargo_action_notification_break_name: "[concept_embargo] beendet"
 embargo_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] belegt [GetPlayer.GetAltName('AKK')] nicht mehr mit einem [concept_embargo]."
 embargo_action_notification_third_party_break_name: "[concept_embargo] beendet"
 embargo_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat das eigene [concept_embargo] mit [TARGET_COUNTRY.GetAltName('DAT')] beendet."
 embargo_effect_desc_global: "Verhängt ein [concept_embargo]"
 embargo_effect_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] beginnt damit, ein [concept_embargo] gegen [TARGET_COUNTRY.GetAltName('AKK')] zu verhängen"
 embargo_effect_desc_third: "[COUNTRY.GetAltName('NOM')|U] beginnt damit, ein [concept_embargo] gegen [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('AKK'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('AKK'))] zu verhängen"
 embargo_trigger_desc_global: "Hat ein [concept_embargo] verhängt"
 embargo_trigger_false_desc_global: "Hat #b kein#! [concept_embargo] verhängt"
 embargo_trigger_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat ein [concept_embargo] gegen [TARGET_COUNTRY.GetAltName('AKK')] verhängt"
 embargo_trigger_false_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat #b kein#! [concept_embargo] gegen [TARGET_COUNTRY.GetAltName('AKK')] verhängt"
 embargo_trigger_desc_third: "[COUNTRY.GetAltName('NOM')|U] hat ein [concept_embargo] gegen [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('AKK'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('AKK'))] verhängt"
 embargo_trigger_false_desc_third: "[COUNTRY.GetAltName('NOM')|U] hat #b kein#! [concept_embargo] gegen [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('AKK'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('AKK'))] verhängt"
 war_reparations: "Kriegsreparationen"
 war_reparations_action_name: "[concept_war_reparations]"
 war_reparations_action_propose_name: "[concept_war_reparations] fordern"
 war_reparations_action_break_name: "[concept_war_reparations] beenden"
 war_reparations_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')|U] zahlt wöchentlich [concept_war_reparations] an [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('AKK')]."
 war_reparations_desc: "Lässt ein [concept_country] für die Dauer des Pakts einen Teil seines Einkommens an ein anderes zahlen."
 war_reparations_type_break_desc: "Beendet die laufende Zahlung von [concept_war_reparations] eines anderen Landes an uns."
 war_reparations_action_notification_name: "[concept_war_reparations] [TARGET_COUNTRY.GetAltName('GEN')]"
 war_reparations_action_notification_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat begonnen, uns [concept_war_reparations] zu bezahlen."
 war_reparations_action_notification_break_name: "[concept_war_reparations] beendet"
 war_reparations_action_notification_break_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unsere laufende Zahlung von [concept_war_reparations] beendet."
 colonization_rights: "Kolonisierungsrechte"
 colonization_rights_action_name: "[concept_colonization_rights]"
 colonization_rights_action_propose_name: "[concept_colonization_rights] verlangen"
 colonization_rights_action_break_name: "[concept_colonization_rights] beenden"
 colonization_rights_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')] haben [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('DAT')] [concept_colonization_rights] gewährt."
 colonization_rights_desc: "Ein [concept_country] gewährt einem anderen [concept_colonization_rights]."
 colonization_rights_type_break_desc: "Beendet die laufenden [concept_colonization_rights] eines anderen Landes bei uns."
 colonization_rights_action_notification_name: "[concept_colonization_rights] bei [TARGET_COUNTRY.GetAltName('DAT')] "
 colonization_rights_action_notification_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat begonnen, uns [concept_colonization_rights] zu bezahlen."
 colonization_rights_action_notification_break_name: "[concept_colonization_rights] beendet"
 colonization_rights_action_notification_break_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unsere laufende Zahlung von [concept_colonization_rights] beendet."
 #military_assistance: "Military Assistance"
 #military_assistance_desc: "Grants [concept_military_assistance] to another [concept_country]."
 military_assistance_action_notification_name: "[concept_military_assistance] für [TARGET_COUNTRY.GetAltName('AKK')]"
 military_assistance_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] gewährt [TARGET_COUNTRY.GetAltName('DAT')] [concept_military_assistance]"
 military_assistance_action_notification_third_party_name: "[concept_military_assistance] für [TARGET_COUNTRY.GetAltName('AKK')]"
 military_assistance_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] gewährt [TARGET_COUNTRY.GetAltName('DAT')] [concept_military_assistance]"
 military_assistance_action_propose_name: "$military_assistance$ anbieten"
 military_assistance_action_break_name: "$military_assistance$ einstellen"
 military_assistance_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] gewährt [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('DAT')] [concept_military_assistance]"
 military_assistance_action_notification_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] stellt $military_assistance$ ein"
 military_assistance_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat aufgehört, unserem Land [concept_military_assistance] zu gewähren"
 military_assistance_action_notification_third_party_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U]-[TARGET_COUNTRY.GetAltName('NOM')|U]-$military_assistance$ beendet"
 military_assistance_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat aufgehört, [TARGET_COUNTRY.GetAltName('DAT')] [concept_military_assistance] zu gewähren"
 military_assistance_action_name: "$military_assistance$"
 military_assistance_proposal_accepted_name: "[concept_military_assistance] akzeptiert"
 military_assistance_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] akzeptierte unsere Anfrage, [concept_military_assistance] zu gewähren."
 military_assistance_proposal_declined_name: "[concept_military_assistance] zurückgewiesen"
 military_assistance_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] wies unsere Anfrage, [concept_military_assistance] zu gewähren, zurück."
 military_assistance_proposal_notification_name: "Angebot der [concept_military_assistance]"
 military_assistance_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] bietet an, unserem [concept_country] [concept_military_assistance] zu gewähren."
 military_assistance_proposal_third_party_accepted_name: "[TARGET_COUNTRY.GetAltNameNoFormatting('NOM')|U] wurde [concept_military_assistance] gewährt"
 military_assistance_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltNameNoFormatting('NOM')|U] wurde [concept_military_assistance] [INITIATOR_COUNTRY.GetAltName('VON')] gewährt."
 military_assistance_proposal_third_party_declined_name: "[TARGET_COUNTRY.GetAltNameNoFormatting('NOM')|U] wurde [concept_military_assistance] verweigert"
 military_assistance_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltNameNoFormatting('NOM')|U] wurde [concept_military_assistance] [INITIATOR_COUNTRY.GetAltName('VON')] verweigert."
 military_assistance_trigger_desc_global: "Bietet [concept_military_assistance]"
 military_assistance_trigger_false_desc_global: "Bietet #bold keine#! [concept_military_assistance]"
 military_assistance_trigger_desc_first: "Die [COUNTRY.GetAdjectiveNoFlag|l]e Verwaltung gewährt [TARGET_COUNTRY.GetAltName('DAT')] [concept_military_assistance]"
 military_assistance_trigger_false_desc_first: "Die [COUNTRY.GetAdjectiveNoFlag|l]e Verwaltung gewährt [TARGET_COUNTRY.GetAltName('DAT')] #b keine#! [concept_military_assistance]"
 military_assistance_trigger_desc_third: "[COUNTRY.GetAltName('NOM')|U] gewährt [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('AKK'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))] [concept_military_assistance]"
 military_assistance_trigger_false_desc_third: "[COUNTRY.GetAltName('NOM')|U] gewährt [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('AKK'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))] #bold keine#! [concept_military_assistance]"
 military_assistance_request: "Militärhilfe erbitten"
 military_assistance_request_desc: "$military_assistance_desc$"
 military_assistance_request_action_name: "$request_military_assistance$"
 military_assistance_request_proposal_accepted_name: "[concept_military_assistance] gewährt"
 military_assistance_request_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] akzeptierte unsere Bitte um [concept_military_assistance]."
 military_assistance_request_proposal_declined_name: "[concept_military_assistance] verweigert"
 military_assistance_request_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] verweigerte unsere Bitte um [concept_military_assistance]."
 military_assistance_request_proposal_notification_name: "Bitte um [concept_military_assistance]"
 military_assistance_request_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] bittet darum, dass wir [concept_military_assistance] gewähren."
 military_assistance_request_proposal_third_party_accepted_name: "[INITIATOR_COUNTRY.GetAltNameNoFormatting('NOM')|U] wurde [concept_military_assistance] gewährt"
 military_assistance_request_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetAltNameNoFormatting('NOM')|U] wurde [concept_military_assistance] [TARGET_COUNTRY.GetAltName('VON')] gewährt."
 military_assistance_request_proposal_third_party_declined_name: "[INITIATOR_COUNTRY.GetAltNameNoFormatting('NOM')|U] wurde [concept_military_assistance] verweigert"
 military_assistance_request_proposal_third_party_declined_desc: "[INITIATOR_COUNTRY.GetAltNameNoFormatting('NOM')|U] wurde [concept_military_assistance] [TARGET_COUNTRY.GetAltName('VON')] verweigert."
 military_assistance_effect_desc_global: "Beginnt [concept_military_assistance]"
 military_assistance_effect_desc_first: "[COUNTRY.GetAltName('NOM')|U] beginnt, [TARGET_COUNTRY.GetAltNameNoFlag('DAT')] [concept_military_assistance] zu gewähren"
 military_assistance_effect_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, COUNTRY.Self),COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, COUNTRY.Self))),COUNTRY.GetAltName('NOM')|U] beginnt, [TARGET_COUNTRY.GetAltNameNoFlag('DAT')] [concept_military_assistance] zu gewähren"
 #foreign_investment_rights: "Investment Rights"
 foreign_investment_rights_action_name: "$foreign_investment_rights$"
 foreign_investment_rights_action_propose_name: "$foreign_investment_rights$ erbitten"
 foreign_investment_rights_action_break_name: "$concept_foreign_investment_rights$ abbrechen"
 foreign_investment_rights_action_notification_name: "[concept_foreign_investment_rights] [TARGET_COUNTRY.GetAltName('IN')]"
 foreign_investment_rights_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat jetzt [concept_foreign_investment_rights] [TARGET_COUNTRY.GetAltName('IN')]."
 #foreign_investment_rights_desc: "Establishes unilateral [concept_foreign_investment_rights] in a [concept_country]."
 foreign_investment_rights_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] hat [concept_foreign_investment_rights] [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('IN')] erhalten."
 foreign_investment_rights_proposal_notification_name: "Bitte um [concept_foreign_investment_rights]"
 foreign_investment_rights_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] erbittet [concept_foreign_investment_rights] in unserem [concept_country]."
 foreign_investment_rights_proposal_notification_effects_desc: "Wenn wir annehmen, können sie [Concept('concept_building', '$concept_buildings$')] in unserem [concept_country] bauen und erwerben."
 foreign_investment_rights_proposal_accepted_name: "[concept_foreign_investment_rights] angenommen"
 foreign_investment_rights_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unsere Bitte um [concept_foreign_investment_rights] in ihrem [concept_country] angenommen."
 foreign_investment_rights_proposal_declined_name: "[concept_foreign_investment_rights] abgelehnt"
 foreign_investment_rights_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unsere Bitte um [concept_foreign_investment_rights] in ihrem [concept_country] abgelehnt."
 foreign_investment_rights_action_notification_break_name: "[INITIATOR_COUNTRY.GetAdjective|U]e [concept_foreign_investment_rights] widerrufen"
 foreign_investment_rights_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unsere [concept_foreign_investment_rights] widerrufen."
 foreign_investment_rights_proposal_third_party_accepted_name: "[concept_foreign_investment_rights] gewährt"
 foreign_investment_rights_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] gewährte [TARGET_COUNTRY.GetAltName('DAT')] [concept_foreign_investment_rights]."
 foreign_investment_rights_proposal_third_party_declined_name: "[concept_foreign_investment_rights] abgelehnt"
 foreign_investment_rights_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] verweigerte [TARGET_COUNTRY.GetAltName('DAT')] [concept_foreign_investment_rights]."
 foreign_investment_rights_action_notification_third_party_break_name: "[concept_foreign_investment_rights] widerrufen"
 foreign_investment_rights_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] widerrief die [concept_foreign_investment_rights], die [TARGET_COUNTRY.GetAltName('DAT')] gewährt wurden."
 foreign_investment_rights_trigger_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat [concept_foreign_investment_rights|l] [TARGET_COUNTRY.GetAltName('IN')]"
 foreign_investment_rights_trigger_false_desc_first: "[COUNTRY.GetAltName('NOM')|U] hat #b keine#! [concept_foreign_investment_rights|l] [TARGET_COUNTRY.GetAltName('IN')]."
 foreign_investment_rights_trigger_desc_global: "Hat [concept_foreign_investment_rights|l] in diesem Land"
 foreign_investment_rights_trigger_false_desc_global: "Hat #b keine#! [Concept('concept_foreign_investment_rights', 'ausländischen Investitionsrechte')] in diesem Land"
 foreign_investment_rights_trigger_desc_third: "[COUNTRY.GetAltName('NOM')|U] hat [concept_foreign_investment_rights|l] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('IN'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('IN'))]"
 foreign_investment_rights_trigger_false_desc_third: "[COUNTRY.GetAltName('NOM')|U] hat #b keine#! [Concept('concept_foreign_investment_rights', 'ausländischen Investitionsrechte')] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('IN'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('IN'))]"
 grant_foreign_investment_rights: "$foreign_investment_rights$ gewähren"
 grant_foreign_investment_rights_action_name: "$grant_foreign_investment_rights$"
 grant_foreign_investment_rights_action_propose_name: "$grant_foreign_investment_rights$"
 grant_foreign_investment_rights_desc: "Einem anderen [concept_country] [concept_foreign_investment_rights|l] gewähren"
 grant_foreign_investment_rights_proposal_notification_name: "Anbieten, [concept_foreign_investment_rights] zu gewähren"
 grant_foreign_investment_rights_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] möchte uns [concept_foreign_investment_rights] im eigenen [concept_country] gewähren."
 grant_foreign_investment_rights_proposal_accepted_name: "[concept_foreign_investment_rights] angenommen"
 grant_foreign_investment_rights_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] akzeptierte unser Angebot, ihnen [concept_foreign_investment_rights] zu gewähren."
 grant_foreign_investment_rights_proposal_declined_name: "[concept_foreign_investment_rights] abgelehnt"
 grant_foreign_investment_rights_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] lehnte unser Angebot ab, ihnen [concept_foreign_investment_rights] zu gewähren."
 grant_foreign_investment_rights_proposal_notification_effects_desc: "Wenn wir annehmen, können wir [Concept('concept_building', '$concept_buildings$')] in ihrem [concept_country] bauen und erwerben."
 grant_foreign_investment_rights_proposal_third_party_accepted_name: "[concept_foreign_investment_rights] gewährt"
 grant_foreign_investment_rights_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] gewährte [TARGET_COUNTRY.GetAltName('DAT')] [concept_foreign_investment_rights]."
 grant_foreign_investment_rights_proposal_third_party_declined_name: "[concept_foreign_investment_rights] abgelehnt"
 grant_foreign_investment_rights_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] weigerte sich, die [concept_foreign_investment_rights] [INITIATOR_COUNTRY.GetAltName('IN')] anzuerkennen."
 foreign_investment_agreement: "Gegenseitige Investitionsrechte"
 foreign_investment_agreement_action_name: "Gegenseitiger [Concept('concept_foreign_investment_rights','Auslandsinvestitionsrechte')]-Vertrag"
 foreign_investment_agreement_desc: "Ein [concept_diplomatic_pact] zwischen zwei [Concept('concept_country','$concept_countries$n')], um einen gegenseitigen [Concept('concept_foreign_investment_rights','Auslandsinvestitionsrechte')]-Vertrag zu schließen."
 foreign_investment_agreement_proposal_accepted_name: "$foreign_investment_agreement$ angenommen"
 foreign_investment_agreement_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] nahm unseren Vorschlag für gegenseitige [concept_foreign_investment_rights] an."
 foreign_investment_agreement_proposal_declined_name: "$foreign_investment_agreement$ abgelehnt"
 foreign_investment_agreement_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] lehnte unseren Vorschlag für gegenseitige [concept_foreign_investment_rights] ab."
 foreign_investment_agreement_proposal_notification_name: "Gegenseitiger [Concept('concept_foreign_investment_rights','Auslandsinvestitionsrechte')]-Vertrag mit [INITIATOR_COUNTRY.GetAltName('DAT')]"
 foreign_investment_agreement_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat einen gegenseitigen [Concept('concept_foreign_investment_rights','Auslandsinvestitionsrechte')]-Vertrag mit uns vorgeschlagen."
 foreign_investment_agreement_proposal_notification_effects_desc: "$foreign_investment_agreement_desc$"
 foreign_investment_agreement_action_propose_name: "Investitionsrechtevertrag vorschlagen"
 foreign_investment_agreement_action_break_name: "Investitionsrechte brechen"
 foreign_investment_agreement_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] und [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')] sind einen gegenseitigen [Concept('concept_foreign_investment_rights','Auslandsinvestitionsrechte')]-Vertrag eingegangen."
 foreign_investment_agreement_action_notification_break_name: "[Concept('concept_foreign_investment_rights','Auslandsinvestitionsrechte')]-Vertrag beendet"
 foreign_investment_agreement_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unseren gegenseitigen [Concept('concept_foreign_investment_rights','Auslandsinvestitionsrechte')]-Vertrag aufgekündigt"
 foreign_investment_agreement_proposal_third_party_accepted_name: "$foreign_investment_agreement$ angenommen"
 foreign_investment_agreement_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat den Vorschlag [INITIATOR_COUNTRY.GetAltName('VON')] in Bezug auf gegenseitige [concept_foreign_investment_rights] angenommen."
 foreign_investment_agreement_proposal_third_party_declined_name: "$foreign_investment_agreement$ abgelehnt"
 foreign_investment_agreement_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat den Vorschlag [INITIATOR_COUNTRY.GetAltName('VON')] in Bezug auf gegenseitige [concept_foreign_investment_rights] abgelehnt."
 foreign_investment_agreement_action_notification_third_party_break_name: "[concept_foreign_investment_rights|U] beenden"
 foreign_investment_agreement_action_notification_third_party_break_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] und [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')] haben ihren gegenseitigen [Concept('concept_foreign_investment_rights','Auslandsinvestitionsrechte')]-Vertrag beendet."
 humiliation: "Demütigung"
 humiliation_action_name: "[concept_humiliation]"
 humiliation_action_propose_name: "[concept_humiliation] fordern"
 humiliation_action_break_name: "[concept_humiliation] beenden"
 humiliation_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')|U] wurde von [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('DAT')] [Concept('concept_humiliation', '$concept_humiliated$')|l]."
 humiliation_desc: "Hindert ein [concept_country] daran, sich für die Dauer des Pakts einem anderen Land in [Concept('concept_diplomatic_play','$concept_diplomatic_plays$n')] entgegenzustellen."
 humiliation_type_break_desc: "Beendet die [concept_humiliation] eines anderen Landes."
 humiliation_action_notification_name: "Demütigung"
 humiliation_action_notification_desc: "Wir haben [TARGET_COUNTRY.GetAltName('AKK')] [Concept('concept_humiliation', '$concept_humiliated$')|l]."
 humiliation_action_notification_break_name: "[concept_humiliation] beendet"
 humiliation_action_notification_break_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unsere laufende [Concept('concept_humiliation', '$concept_humiliation$')] beendet."
 #guarantee_independence: "Guarantee Independence"
 guarantee_independence_action_name: "$guarantee_independence$"
 guarantee_independence_action_propose_name: "$guarantee_independence$"
 guarantee_independence_action_break_name: "Unabhängigkeitsgarantie beenden"
 guarantee_independence_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] garantiert die Unabhängigkeit [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('VON')]."
 #guarantee_independence_desc: "[concept_guarantee_independence_desc]"
 guarantee_independence_action_notification_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] garantiert unsere Unabhängigkeit"
 guarantee_independence_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat begonnen, die Unabhängigkeit unseres [Concept('concept_country', 'Landes')] zu garantieren. Wir können [INITIATOR_COUNTRY.GetAltName('NOM')] zu Hilfe zu rufen, wenn wir Ziel eines [Concept('concept_diplomatic_play', 'Diplomatiespiels')] sind."
 guarantee_independence_action_notification_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] garantiert nicht länger unsere Unabhängigkeit"
 guarantee_independence_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] garantiert nicht länger unsere Unabhängigkeit."
 guarantee_independence_effect_desc_global: "Beginnt, [Concept('concept_guarantee_independence', 'Unabhängigkeit')] zu garantieren"
 guarantee_independence_effect_desc_first: "[COUNTRY.GetAltName('NOM')|U] beginnt, [Concept('concept_guarantee_independence', 'Unabhängigkeit')] [TARGET_COUNTRY.GetAltName('VON')] zu garantieren"
 guarantee_independence_effect_desc_third: "[COUNTRY.GetAltName('NOM')|U] beginnt, [Concept('concept_guarantee_independence', 'Unabhängigkeit')] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltName('VON‘))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('VON‘))] zu garantieren"
 bankroll: "Finanzieren"
 bankroll_action_name: "$bankroll$"
 bankroll_action_propose_name: "Finanzieren beginnen"
 bankroll_action_break_name: "Finanzieren beenden"
 bankroll_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] finanziert [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('AKK')]."
 bankroll_desc: "[concept_bankroll_desc]"
 bankroll_action_notification_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] finanziert uns"
 bankroll_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat damit begonnen, unser Land jede Woche zu #v 10 %#! unseres Steuereinkommens zu finanzieren. Mit der Zeit kann dies dazu führen, dass wir [INITIATOR_COUNTRY.GetAltName('DAT')] eine [concept_obligation] schulden."
 bankroll_action_notification_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] finanziert uns nicht länger"
 bankroll_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat die Finanzierung unseres Landes beendet."
 bankroll_weekly_obligation_effect: "Chance von #v 0,2 %#!, jede Woche eine [concept_obligation] für das finanzierende Land zu erzeugen oder zu erlassen"
 bankroll_effect_desc_global: "Beginnt mit dem [concept_bankroll]"
 bankroll_effect_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] beginnt mit dem [concept_bankroll] [TARGET_COUNTRY.GetAltName('VON')]"
 bankroll_effect_desc_third: "[COUNTRY.GetAltName('NOM')|U] beginnt mit dem [concept_bankroll] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('VON'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('VON'))]"
 bankroll_trigger_desc_global: "Hat eine [Concept('concept_bankroll', 'Finanzierung')]"
 bankroll_trigger_false_desc_global: "Hat #b keine#! [Concept('concept_bankroll', 'Finanzierung')]"
 bankroll_trigger_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] [Concept('concept_bankroll', 'finanziert')] [TARGET_COUNTRY.GetAltName('AKK')]"
 bankroll_trigger_false_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] [Concept('concept_bankroll', 'finanziert')] #b nicht#! [TARGET_COUNTRY.GetAltName('AKK')]"
 bankroll_trigger_desc_third: "[COUNTRY.GetAltName('NOM')|U] [Concept('concept_bankroll','finanziert')] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('AKK'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('AKK'))]"
 bankroll_trigger_false_desc_third: "[COUNTRY.GetAltName('NOM')|U] [Concept('concept_bankroll','finanziert')] #b nicht#! [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('AKK'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('AKK'))]"
 fund_lobbies: "Lobbys finanzieren"
 fund_lobbies_action_name: "$fund_lobbies$"
 fund_lobbies_action_propose_name: "$concept_funding_lobbies$ beginnen"
 fund_lobbies_action_break_name: "$concept_funding_lobbies$ beenden"
 fund_lobbies_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] betreibt $concept_funding_lobbies$ [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('IN')]."
 fund_lobbies_desc: "[concept_fund_lobbies_desc]"
 fund_lobbies_action_notification_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] betreibt $concept_funding_lobbies$"
 fund_lobbies_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat begonnen, Lobbys zu finanzieren. Im Lauf der Zeit werden dadurch in unserem [concept_country] [INITIATOR_COUNTRY.GetAltName('DAT')] wohlgesonnene [Concept('concept_political_lobby', '$concept_political_lobbies_short$')] entstehen und gestärkt."
 fund_lobbies_action_notification_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] beendet $concept_funding_lobbies$"
 fund_lobbies_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat aufgehört, Lobbys in unserem [concept_country] zu finanzieren."
 fund_lobbies_weekly_create_lobby_effect: "Wahrscheinlichkeit zwischen #v 0,25 %#! und #v 1 %#! (abhängig von [concept_rank] und geografischer Nähe), eine befreundete [concept_political_lobby] im Ziel-[concept_country] zu gründen, wenn es [Concept('concept_interest_group','$concept_interest_groups$')] gibt, die uns unterstützen wollen"
 fund_lobbies_increase_friendly_join_weight_effect: "Erhöht den Wunsch der [concept_interest_group], sich $concept_political_lobbies$ anzuschließen, die uns freundlich gesinnt sind"
 fund_lobbies_decrease_hostile_join_weight_effect: "Verringert den Wunsch der [concept_interest_group], sich $concept_political_lobbies$ anzuschließen, die uns feindlich gesinnt sind"
 fund_lobbies_decrease_rival_friendly_join_weight_effect: "Verringert den Wunsch der [concept_interest_group], sich $concept_political_lobbies$ anzuschließen, die unseren [Concept('concept_rivalry','$concept_rivals$')] freundlich gesinnt sind"
 fund_lobbies_increase_rival_hostile_join_weight_effect: "Erhöht den Wunsch der [concept_interest_group], sich $concept_political_lobbies$ anzuschließen, die unseren [Concept('concept_rivalry','$concept_rivals$')] gegenüber feindselig gesinnt sind"
 #take_on_debt: "Take on Debt"
 take_on_debt_action_name: "[Concept('concept_credit', '$concept_credit_debt$')]-Übernahme"
 take_on_debt_action_propose_name: "[Concept('concept_credit', '$concept_credit_debt$')]-Übernahme"
 #take_on_debt_desc: "Take over another [Concept('concept_country','$concept_country_possessive$')] [concept_loans] in exchange for an [concept_obligation]."
 take_on_debt_proposal_notification_name: "$take_on_debt_action_name$ vorgeschlagen"
 take_on_debt_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat vorgeschlagen, unsere Landes-[Concept('concept_credit', '$concept_credit_debt$')] zu übernehmen. Hoffentlich hegt man keine bösen Absichten."
 take_on_debt_proposal_notification_effects_desc: "$take_on_debt_desc$"
 take_on_debt_proposal_accepted_name: "$take_on_debt_action_name$ angenommen"
 take_on_debt_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Vorschlag akzeptiert, seine Landes-[Concept('concept_credit', '$concept_credit_debt$')] zu übernehmen."
 take_on_debt_proposal_declined_name: "$take_on_debt_action_name$ abgelehnt"
 take_on_debt_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Vorschlag abgelehnt, seine Landes-[Concept('concept_credit', '$concept_credit_debt$')] zu übernehmen."
 take_on_debt_proposal_third_party_accepted_name: "$take_on_debt_action_name$ angenommen"
 take_on_debt_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat Landes-[Concept('concept_credit', '$concept_credit_debt$')] [TARGET_COUNTRY.GetAltName('GEN')] abbezahlt. Deshalb schuldet es ihm nun eine [concept_obligation]."
 take_on_debt_proposal_third_party_declined_name: "$take_on_debt_action_name$ abgelehnt"
 take_on_debt_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat den Vorschlag [INITIATOR_COUNTRY.GetAltName('GEN')] abgelehnt, seine Landes-[Concept('concept_credit', '$concept_credit_debt$')] zu übernehmen."
 trade_states: "Staaten tauschen"
 trade_states_action_name: "[Concept('concept_state', '$concept_states$')] tauschen"
 trade_states_action_propose_name: "[Concept('concept_state', '$concept_states$')] tauschen"
 trade_states_desc: "Vorschlagen, [Concept('concept_state','$concept_states$')] mit einem anderen [concept_country] zu tauschen oder sie zu verschenken."
 trade_states_proposal_notification_name: "$trade_states_action_name$ vorgeschlagen"
 trade_states_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat eine Übertragung von [Concept('concept_state','$concept_states$')] vorgeschlagen:\n$STATES_DESC$"
 trade_states_proposal_notification_effects_desc: "$trade_states_desc$"
 trade_states_proposal_accepted_name: "$trade_states_action_name$ angenommen"
 trade_states_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Vorschlag angenommen, [Concept('concept_state','$concept_states$')] zu übertragen:\n$STATES_DESC$"
 trade_states_proposal_declined_name: "$trade_states_action_name$ abgelehnt"
 trade_states_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Vorschlag abgelehnt, [Concept('concept_state','$concept_states$')] zu übertragen:\n$STATES_DESC$"
 trade_states_proposal_third_party_accepted_name: "$trade_states_action_name$ angenommen"
 trade_states_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat eine Übertragung von [Concept('concept_state','$concept_states$')] mit [INITIATOR_COUNTRY.GetAltName('DAT')] angenommen:\n$STATES_DESC$"
 trade_states_proposal_third_party_declined_name: "$trade_states_action_name$ abgelehnt"
 trade_states_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat eine Übertragung von [Concept('concept_state','$concept_states$')] mit [INITIATOR_COUNTRY.GetAltName('DAT')] abgelehnt:\n$STATES_DESC$"
 force_regime_change: "Regimewechsel erzwingen"
 force_regime_change_action_name: "[concept_regime_change] erzwingen"
 force_regime_change_desc: "Erzwingt einen sofortigen [concept_regime_change] bei einem [concept_power_bloc_member], dessen Politik nicht mit dem Rest des [Concept('concept_power_bloc', 'Machtblocks')] übereinstimmt."
 force_regime_change_action_notification_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] erzwang [concept_regime_change]"
 force_regime_change_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat uns einen [concept_regime_change] aufgezwungen"
 force_regime_change_action_notification_third_party_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] erzwang [concept_regime_change]"
 force_regime_change_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat [TARGET_COUNTRY.GetAltName('DAT')] einen [concept_regime_change] aufgezwungen"
 force_state_religion: "$concept_state_religion$ auferlegen"
 force_state_religion_action_name: "[concept_state_religion] auferlegen"
 force_state_religion_desc: "Erzwingt eine sofortige Änderung der [concept_state_religion] bei einem [concept_power_bloc_member], damit sie unserer eigenen entspricht."
 force_state_religion_action_notification_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] erlegt [concept_state_religion] auf"
 force_state_religion_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat uns die eigene [concept_state_religion] auferlegt"
 force_state_religion_action_notification_third_party_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] erlegt [concept_state_religion] auf"
 force_state_religion_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat [TARGET_COUNTRY.GetAltName('DAT')] die eigene [concept_state_religion] auferlegt"
 force_become_subject: "Unterwerfen"
 force_become_subject_action_name: "Unterwerfen"
 force_become_subject_desc: "Sie direkt zu unserem [concept_subject] machen."
 force_become_subject_action_notification_name: "Unterwerfung durch [INITIATOR_COUNTRY.GetAltName('AKK')|U]"
 force_become_subject_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat uns zu seinem [concept_subject] gemacht"
 force_become_subject_action_notification_third_party_name: "Unterwerfung durch [INITIATOR_COUNTRY.GetAltName('AKK')|U]"
 force_become_subject_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] haben [TARGET_COUNTRY.GetAltName('AKK')] zu „[TARGET_COUNTRY.GetSubjectType.GetName]“ gemacht"
 grant_state: "Staat übertragen"
 grant_state_action_name: "[concept_state] übertragen"
 grant_state_desc: "Einen unserer eigenen [Concept('concept_state','$concept_states$')] an ein [concept_subject] abgeben oder einen $concept_state$ von einem $concept_subject$ an ein anderes übertragen. Dies wird sich auf den [concept_liberty_desire] auswirken. [concept_homeland]-$concept_states$ sorgen für mehr $concept_liberty_desire$."
 grant_state_action_notification_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] überträgt $concept_state$"
 grant_state_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat uns „[INITIATOR_STATE.GetName]“ gewährt"
 grant_state_action_notification_third_party_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] übertrug $concept_state$"
 grant_state_action_notification_third_party_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] wurde „[INITIATOR_STATE.GetName]“ [INITIATOR_COUNTRY.GetAltName('VON')] übertragen"
 take_state: "Staat nehmen"
 take_state_action_name: "[concept_state] nehmen"
 take_state_desc: "Einem [concept_subject] einen [concept_state] nehmen. Dies wird sich auf den [concept_liberty_desire] auswirken. [concept_homeland]-$concept_states$ sorgen für mehr $concept_liberty_desire$."
 take_state_action_notification_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] nahm $concept_state$"
 take_state_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] nahm uns „[TARGET_STATE.GetName]“"
 take_state_action_notification_third_party_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] nahm $concept_state$"
 take_state_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] nahm [TARGET_COUNTRY.GetAltName('DAT')] „[TARGET_STATE.GetName]“"
 demand_state: "Staat verlangen"
 demand_state_action_name: "[concept_state] verlangen"
 demand_state_desc: "Von unserem [concept_overlord] fordern, dass er uns einen seiner eigenen [Concept('concept_state','$concept_states$')] gewährt oder einen $concept_state$ von einem seiner $concept_subjects$ an uns überträgt. Dies wird unser [concept_liberty_desire] verringern, falls es gewährt wird."
 demand_state_proposal_notification_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] forderte $concept_state$"
 demand_state_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat „$STATES_DESC$“ von uns verlangt"
 demand_state_proposal_accepted_name: "„$demand_state_action_name$“ akzeptiert"
 demand_state_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] akzeptierte unsere Forderung nach „$STATES_DESC$“"
 demand_state_proposal_declined_name: "„$demand_state_action_name$“ verweigert"
 demand_state_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] lehnte unsere Forderung nach „$STATES_DESC$“ ab!"
 demand_state_proposal_third_party_accepted_name: "„$demand_state_action_name$“ akzeptiert"
 demand_state_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] akzeptierte eine Forderung [INITIATOR_COUNTRY.GetAltName('VON')|U], dieser Nation „$STATES_DESC$“ zu gewähren"
 demand_state_proposal_third_party_declined_name: "„$demand_state_action_name$“ verweigert"
 demand_state_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] verweigerte eine Forderung [INITIATOR_COUNTRY.GetAltName('VON')|U], dieser Nation „$STATES_DESC$“ zu gewähren"
 customs_union: "Zollunion"
 customs_union_action_name: "[concept_customs_union]"
 customs_union_action_propose_name: "In [concept_customs_union] einladen"
 customs_union_action_break_name: "[concept_customs_union] beenden"
 customs_union_action_notification_name: "[concept_customs_union] mit [INITIATOR_COUNTRY.GetAltName('DAT')]"
 customs_union_action_notification_desc: "Wir sind eine [concept_customs_union] mit [INITIATOR_COUNTRY.GetAltName('DAT')] eingegangen."
 customs_union_desc: "Schafft eine [concept_customs_union] zwischen zwei [Concept('concept_country', 'Ländern')]."
 customs_union_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] ist der [concept_senior_partner] in einer [concept_customs_union] mit [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('DAT')]."
 customs_union_proposal_notification_name: "[concept_customs_union] vorgeschlagen"
 customs_union_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] möchte, dass wir seiner #variable [concept_customs_union]#! beitreten."
 customs_union_proposal_notification_effects_desc: "$customs_union_desc$"
 customs_union_proposal_accepted_name: "[concept_customs_union] angenommen"
 customs_union_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Vorschlag für eine #variable [concept_customs_union]#! angenommen."
 customs_union_proposal_declined_name: "[concept_customs_union] abgelehnt"
 customs_union_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Vorschlag für eine #variable [concept_customs_union]#! abgelehnt."
 customs_union_action_notification_break_name: "[concept_customs_union] mit [INITIATOR_COUNTRY.GetAltName('DAT')] gebrochen"
 customs_union_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat die #variable [concept_customs_union]#! mit uns gebrochen."
 customs_union_proposal_third_party_accepted_name: "[concept_customs_union] beigetreten"
 customs_union_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist einer [concept_customs_union] mit [INITIATOR_COUNTRY.GetAltName('DAT')] beigetreten."
 customs_union_proposal_third_party_declined_name: "[concept_customs_union] verweigert"
 customs_union_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat eine #variable [concept_customs_union]#! mit [INITIATOR_COUNTRY.GetAltName('DAT')] verweigert."
 customs_union_action_notification_third_party_break_name: "[concept_customs_union] gebrochen"
 customs_union_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat die #variable [concept_customs_union]#! mit [TARGET_COUNTRY.GetAltName('DAT')] gebrochen."
 customs_union_effect_desc_global: "Tritt einer [concept_customs_union] bei"
 customs_union_effect_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] tritt einer [concept_customs_union] unter [COUNTRY.GetAltName('DAT')] bei"
 customs_union_effect_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] tritt einer [concept_customs_union] unter [COUNTRY.GetAltName('DAT')] bei"
 customs_union_trigger_desc_global: "Ist in einer [concept_customs_union]"
 customs_union_trigger_false_desc_global: "Ist in #b keiner#! [concept_customs_union]"
 customs_union_trigger_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist in einer [concept_customs_union] unter [COUNTRY.GetAltNameNoFlag('DAT')]"
 customs_union_trigger_false_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist #b nicht#! in einer [concept_customs_union] unter [COUNTRY.GetAltNameNoFlag('DAT')]"
 customs_union_trigger_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] ist in einer [concept_customs_union] unter [COUNTRY.GetAltName('DAT')]"
 customs_union_trigger_false_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] ist #b nicht#! in einer [concept_customs_union] unter [COUNTRY.GetAltName('DAT')]"
 join_customs_union: "Zollunion beitreten"
 join_customs_union_action_name: "[concept_customs_union] beitreten"
 join_customs_union_action_propose_name: "[concept_customs_union] beitreten"
 join_customs_union_desc: "Schafft eine [concept_customs_union] zwischen zwei [Concept('concept_country', 'Ländern')], wobei das vorschlagende Land der Juniorpartner ist."
 join_customs_union_proposal_notification_name: "Anfrage zum Beitritt zu einer [concept_customs_union]"
 join_customs_union_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] möchte unserer #variable [concept_customs_union]#! beitreten."
 join_customs_union_proposal_notification_effects_desc: "Wenn wir annehmen, können seine Staaten unserem Markt beitreten."
 join_customs_union_proposal_accepted_name: "Anfrage für eine [concept_customs_union] angenommen"
 join_customs_union_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] akzeptiert unser Angebot, seiner #variable [concept_customs_union]#! beizutreten."
 join_customs_union_proposal_declined_name: "Anfrage für eine [concept_customs_union] abgelehnt"
 join_customs_union_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unser Angebot, seiner #variable [concept_customs_union]#! beizutreten, abgelehnt."
 join_customs_union_proposal_third_party_accepted_name: "[concept_customs_union] beigetreten"
 join_customs_union_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] ist einer [concept_customs_union] mit [TARGET_COUNTRY.GetAltName('DAT')] beigetreten."
 join_customs_union_proposal_third_party_declined_name: "[concept_customs_union] verweigert"
 join_customs_union_proposal_third_party_declined_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat eine #variable [concept_customs_union]#! mit [TARGET_COUNTRY.GetAltName('DAT')] verweigert."
 change_customs_union: "Zu unserer Zollunion wechseln"
 change_customs_union_action_name: "Zu unserer [concept_customs_union] wechseln"
 change_customs_union_action_propose_name: "Zu unserer [concept_customs_union] wechseln"
 change_customs_union_desc: "Schafft eine [concept_customs_union] zwischen zwei [Concept('concept_country', 'Ländern')], wobei der Empfänger seine derzeitige [concept_customs_union] infolgedessen verlässt."
 change_customs_union_proposal_notification_name: "Wechsel der [concept_customs_union] anbieten"
 change_customs_union_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] möchte, dass wir zu seiner #variable [concept_customs_union]#! wechseln."
 change_customs_union_proposal_notification_effects_desc: "Wenn wir zustimmen, verlassen wir unsere derzeitige [concept_customs_union] und treten dem Markt „[INITIATOR_COUNTRY.GetCapital.GetMarket.GetName]“ bei"
 change_customs_union_proposal_accepted_name: "Anfrage für einen Wechsel zu unserer Zollunion akzeptiert"
 change_customs_union_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unser Angebot angenommen, zu unserer #variable [concept_customs_union]#! zu wechseln."
 change_customs_union_proposal_declined_name: "Anfrage für einen Wechsel zu unserer Zollunion abgelehnt"
 change_customs_union_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unser Angebot abgelehnt, zu unserer #variable [concept_customs_union]#! zu wechseln."
 change_customs_union_proposal_third_party_accepted_name: "Wechsel zu unserer Zollunion akzeptiert"
 change_customs_union_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist zur [concept_customs_union] [INITIATOR_COUNTRY.GetAltName('VON')] gewechselt."
 change_customs_union_proposal_third_party_declined_name: "Wechsel zu unserer Zollunion abgelehnt"
 change_customs_union_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] weigerte sich, zur [concept_customs_union] [INITIATOR_COUNTRY.GetAltName('VON')] zu wechseln."
 #alliance: "Alliance"
 alliance_action_name: "[concept_alliance]"
 alliance_action_propose_name: "[concept_alliance] bilden"
 alliance_action_break_name: "[concept_alliance] beenden"
 alliance_action_notification_name: "[concept_alliance] mit [INITIATOR_COUNTRY.GetAltName('DAT')]"
 alliance_action_notification_desc: "Wir sind ein [concept_alliance] mit [INITIATOR_COUNTRY.GetAltName('DAT')] eingegangen."
 #alliance_desc: "Establishes an [concept_alliance] between two [Concept('concept_country', '$concept_countries$')]."
 alliance_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] und [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')] haben ein [concept_alliance]."
 alliance_proposal_notification_name: "[concept_alliance] vorgeschlagen"
 alliance_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] möchte ein [concept_alliance] mit uns eingehen."
 alliance_proposal_notification_effects_desc: "$alliance_desc$"
 alliance_proposal_accepted_name: "[concept_alliance] angenommen"
 alliance_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Vorschlag für ein [concept_alliance] angenommen."
 alliance_proposal_declined_name: "[concept_alliance] abgelehnt"
 alliance_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Vorschlag für ein [concept_alliance] abgelehnt."
 alliance_action_notification_break_name: "[concept_alliance] mit [INITIATOR_COUNTRY.GetAltName('DAT')] gebrochen"
 alliance_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat sein [concept_alliance] mit uns gebrochen."
 alliance_proposal_third_party_accepted_name: "[concept_alliance] besiegelt"
 alliance_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] ist ein [concept_alliance] mit [TARGET_COUNTRY.GetAltName('DAT')] eingegangen."
 alliance_proposal_third_party_declined_name: "[concept_alliance] abgelehnt"
 alliance_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat ein [concept_alliance] mit [INITIATOR_COUNTRY.GetAltName('DAT')] verweigert."
 alliance_action_notification_third_party_break_name: "[concept_alliance] gebrochen"
 alliance_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat das [concept_alliance] mit [TARGET_COUNTRY.GetAltName('DAT')] gebrochen."
 alliance_effect_desc_global: "Beitritt zu einem [concept_alliance]"
 alliance_effect_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] geht ein [concept_alliance] mit [COUNTRY.GetAltNameNoFlag('DAT')] ein"
 alliance_effect_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] geht ein [concept_alliance] mit [COUNTRY.GetAltName('DAT')] ein"
 alliance_trigger_desc_global: "Ist in einem [concept_alliance]"
 alliance_trigger_false_desc_global: "Ist #b nicht#! in einem [concept_alliance]"
 alliance_trigger_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')] ist in einem [concept_alliance] mit [COUNTRY.GetAltNameNoFlag('DAT')]"
 alliance_trigger_false_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')] ist #b nicht#! in einem [concept_alliance] mit [COUNTRY.GetAltNameNoFlag('DAT')]"
 alliance_trigger_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] ist in einem [concept_alliance] mit [COUNTRY.GetAltName('DAT')]"
 alliance_trigger_false_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] ist #b nicht#! in einem [concept_alliance] mit [COUNTRY.GetAltName('DAT')]"
 alliance_support_independence_subject: "Keines der beiden Länder #v unterstützt die Unabhängigkeit#! eines [Concept('concept_subject', 'Klientellands')] eines der beiden Länder"
 support_independence_trigger_desc_global: "Unterstützt die #v Unabhängigkeit#! dieses Landes"
 support_independence_trigger_false_desc_global: "Unterstützt #b nicht#! die #v Unabhängigkeit#! dieses Landes"
 support_independence_trigger_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] unterstützt die #v Unabhängigkeit#! [COUNTRY.GetAltNameNoFlag('VON)]"
 support_independence_trigger_false_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] unterstützt die #b Unabhängigkeit#! [COUNTRY.GetAltNameNoFlag('VON)] #v nicht#!"
 support_independence_trigger_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] unterstützt die #v Unabhängigkeit#! [COUNTRY.GetAltName('VON')]"
 support_independence_trigger_false_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] unterstützt die #b Unabhängigkeit#! [COUNTRY.GetAltName('VON')] #v nicht#!"
 #defensive_pact: "Defensive Pact"
 defensive_pact_action_name: "[concept_defensive_pact]"
 defensive_pact_action_propose_name: "[concept_defensive_pact] bilden"
 defensive_pact_action_break_name: "[concept_defensive_pact] beenden"
 defensive_pact_action_notification_name: "[concept_defensive_pact] mit [INITIATOR_COUNTRY.GetAltName('DAT')]"
 defensive_pact_action_notification_desc: "Wir sind einen [concept_defensive_pact] mit [INITIATOR_COUNTRY.GetAltName('DAT')] eingegangen."
 #defensive_pact_desc: "Establishes a [concept_defensive_pact] between two [Concept('concept_country', '$concept_countries$')]."
 defensive_pact_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] und [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')] haben einen [concept_defensive_pact]."
 defensive_pact_proposal_notification_name: "[concept_defensive_pact] vorgeschlagen"
 defensive_pact_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] möchte einen [concept_defensive_pact] mit uns eingehen."
 defensive_pact_proposal_notification_effects_desc: "$defensive_pact_desc$"
 defensive_pact_proposal_accepted_name: "[concept_defensive_pact] angenommen"
 defensive_pact_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Vorschlag für einen [concept_defensive_pact] angenommen."
 defensive_pact_proposal_declined_name: "[concept_defensive_pact] abgelehnt"
 defensive_pact_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Vorschlag für einen [concept_defensive_pact] abgelehnt."
 defensive_pact_action_notification_break_name: "[concept_defensive_pact] mit [INITIATOR_COUNTRY.GetAltName('DAT')] gebrochen"
 defensive_pact_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat seinen [concept_defensive_pact] mit uns gebrochen."
 defensive_pact_proposal_third_party_accepted_name: "[concept_defensive_pact] unterschrieben"
 defensive_pact_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] ist einen [concept_defensive_pact] mit [TARGET_COUNTRY.GetAltName('DAT')] eingegangen."
 defensive_pact_proposal_third_party_declined_name: "[concept_defensive_pact] zurückgewiesen"
 defensive_pact_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat einen [concept_defensive_pact] mit [INITIATOR_COUNTRY.GetAltName('DAT')] verweigert."
 defensive_pact_action_notification_third_party_break_name: "[concept_defensive_pact] gebrochen"
 defensive_pact_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat den [concept_defensive_pact] mit [TARGET_COUNTRY.GetAltName('DAT')] gebrochen."
 defensive_pact_effect_desc_global: "Tritt einem [concept_defensive_pact] bei"
 defensive_pact_effect_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] geht einen [concept_defensive_pact] mit [COUNTRY.GetAltNameNoFlag('DAT')] ein"
 defensive_pact_effect_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] geht einen [concept_defensive_pact] mit [COUNTRY.GetAltName('DAT')] ein"
 defensive_pact_trigger_desc_global: "Ist in einem [concept_defensive_pact]"
 defensive_pact_trigger_false_desc_global: "Ist #b nicht#! in einem [concept_defensive_pact]"
 defensive_pact_trigger_desc_first: "[TARGET_COUNTRY.GetCustom('NOM')|U] hat einen [concept_defensive_pact] mit [COUNTRY.GetAltNameNoFlag('DAT')]"
 defensive_pact_trigger_false_desc_first: "[TARGET_COUNTRY.GetCustom('NOM')|U] hat #b keinen#! [concept_defensive_pact] mit [COUNTRY.GetAltNameNoFlag('DAT')]"
 defensive_pact_trigger_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] hat einen [concept_defensive_pact] mit [COUNTRY.GetAltName('DAT')]"
 defensive_pact_trigger_false_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] hat #b keinen#! [concept_defensive_pact] mit [COUNTRY.GetAltName('DAT')]"
 foreign_investment_agreement_trigger_desc_global: "Hat einen [Concept('concept_foreign_investment_rights','Auslandsinvestitionsrechte')]-Vertrag"
 foreign_investment_agreement_trigger_false_desc_global: "Hat #b keinen#! [Concept('concept_foreign_investment_rights','Auslandsinvestitionsrechte')]-Vertrag"
 foreign_investment_agreement_trigger_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat einen [Concept('concept_foreign_investment_rights','Auslandsinvestitionsrechte')]-Vertrag mit [TARGET_COUNTRY.GetAltName('DAT')]"
 foreign_investment_agreement_trigger_false_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat #b keinen#! [Concept('concept_foreign_investment_rights','Auslandsinvestitionsrechte')]-Vertrag mit [TARGET_COUNTRY.GetAltName('DAT')]"
 foreign_investment_agreement_trigger_desc_third: "[COUNTRY.GetAltName('NOM')|U] hat einen [Concept('concept_foreign_investment_rights','Auslandsinvestitionsrechte')]-Vertrag mit [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))]"
 foreign_investment_agreement_trigger_false_desc_third: "[COUNTRY.GetAltName('NOM')|U] hat #b keinen#! [Concept('concept_foreign_investment_rights','Auslandsinvestitionsrechte')]-Vertrag mit [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))]"
 raise_payments: "Klientelzahlungen erhöhen"
 raise_payments_desc: "Erhöht die Zahlungslast eines [Concept('concept_subject', 'Klientellands')] gegenüber seinem [concept_overlord]."
 raise_payments_action_notification_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] erhöht unsere Zahlungen"
 raise_payments_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat eine Erhöhung unserer regelmäßigen Zahlungen um #negative_value 100 %#! gefordert. Unser [concept_liberty_desire] ist infolgedessen gestiegen."
 raise_payments_action_propose_name: "$raise_payments$"
 raise_payments_action_break_name: "Klientelzahlungen wiederherstellen"
 raise_payments_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] fordert [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('VON')] erhöhte regelmäßige Zahlungen."
 #raise_payments_propose_name: "$raise_payments$"
 #raise_payments_break_name: "[INITIATOR_COUNTRY.GetName] restores regular payments"
 raise_payments_action_notification_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] stellte Zahlungen wieder her"
 raise_payments_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unsere Zahlungen ([concept_subject] @arrow_right! [concept_overlord]) wieder auf den üblichen Stand gebracht."
 raise_payments_trigger_desc_global: "Hat Klientelzahlungen erhöht"
 raise_payments_trigger_false_desc_global: "Hat Klientelzahlungen #b nicht#! erhöht"
 raise_payments_trigger_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat von seinem Klientelland „[TARGET_COUNTRY.GetAltName('NOM')|U]“ eine Erhöhung der Zahlungen gefordert"
 raise_payments_trigger_false_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat von seinem Klientelland „[TARGET_COUNTRY.GetAltName('NOM')|U]“ #b keine#! Erhöhung der Zahlungen gefordert"
 raise_payments_trigger_desc_third: "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat von seinem Klientelland „[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U]“ eine Erhöhung der Zahlungen gefordert"
 raise_payments_trigger_false_desc_third: "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat von seinem Klientelland „[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U]“ #b keine#! Erhöhung der Zahlungen gefordert"
 RAISE_PAYMENTS_BREAK_ON_COOLDOWN: "Wir können diesen [concept_diplomatic_pact] noch nicht brechen, da er erst vor Kurzem geschlossen wurde."
 CHANGE_AUTONOMY_ON_COOLDOWN_OVERLORD: "[concept_autonomy] wurde in den letzten #v 5 Jahren#! nicht geändert (kann in [SCOPE.sCountry('target_country').GetLastCatalystExpiryDate(GetPlayer,'catalyst_autonomy_change_imposed')|v] wieder verwendet werden)"
 CHANGE_AUTONOMY_ON_COOLDOWN_SUBJECT: "[concept_autonomy] wurde in den letzten #v 5 Jahren#! nicht geändert (kann in [GetPlayer.GetLastCatalystExpiryDate(SCOPE.sCountry('target_country'),'catalyst_autonomy_change_imposed')|v] wieder verwendet werden)"
 REQUEST_AUTONOMY_ON_COOLDOWN: "Wir haben in den letzten #v 5 Jahren#! keine größere [concept_autonomy] erbeten (kann in [SCOPE.sCountry('target_country').GetLastCatalystExpiryDate(GetPlayer,'catalyst_autonomy_increase_requested')|v] wieder verwendet werden)"
 REQUEST_MARKET_ON_COOLDOWN: "Wir haben in den letzten #v 5 Jahren#! keine Marktkontrolle erbeten (kann in [SCOPE.sCountry('target_country').GetLastCatalystExpiryDate(GetPlayer,'catalyst_market_control_requested')|v] wieder verwendet werden)"
 SUPPORT_REGIME_ON_COOLDOWN: "Wir haben in den letzten #v 5 Jahren#! keine Regimeunterstützung erbeten (kann am [SCOPE.sCountry('target_country').GetLastCatalystExpiryDate(GetPlayer,'catalyst_support_regime_requested')|v] wieder verwendet werden)"
 REQUEST_RECOGNITION_ON_COOLDOWN: "Wir haben in den letzten #v 10 Jahren#! keine Botschaft von ihnen erbeten (kann in [SCOPE.sCountry('target_country').GetLastCatalystExpiryDate(GetPlayer,'catalyst_recognition_requested')|v] wieder verwendet werden)"
 REQUEST_AUTONOMY_RECENTLY_DENIED: "Uns wurde in den letzten #v 5 Jahren#! eine größere [concept_autonomy] verweigert"
 KNOWLEDGE_SHARING_ON_COOLDOWN: "Wir haben in den letzten #v 5 Jahren#! keinen Wissensaustausch erbeten (kann am [SCOPE.sCountry('target_country').GetLastCatalystExpiryDate(GetPlayer,'catalyst_knowledge_sharing_requested')|v] wieder verwendet werden)"
 decrease_payments: "Klientelzahlungen verringern"
 decrease_payments_desc: "Verringert die Zahlungslast eines [Concept('concept_subject', 'Klientellands')] gegenüber seinem [concept_overlord]."
 decrease_payments_action_notification_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verringert unsere Zahlungen"
 decrease_payments_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] erlaubt eine Verringerung unserer regelmäßigen Zahlungen um #positive_value 90 %#!. Unser [concept_liberty_desire] hat sich daraufhin verringert."
 decrease_payments_action_propose_name: "$decrease_payments$"
 decrease_payments_action_break_name: "Klientelzahlungen wiederherstellen"
 decrease_payments_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] hat eine Verringerung der regelmäßigen Zahlungen [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('VON')] erlaubt."
 decrease_payments_action_notification_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] stellte Zahlungen wieder her"
 decrease_payments_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unsere Zahlungen wieder auf den üblichen Stand hergestellt."
 decrease_payments_trigger_desc_global: "Hat Klientelzahlungen gesenkt"
 decrease_payments_trigger_false_desc_global: "Hat Klientelzahlungen #b nicht#! gesenkt"
 decrease_payments_trigger_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat seinem Klientelland „[TARGET_COUNTRY.GetAltName('NOM')|U]“ eine Verringerung der Zahlungen erlaubt"
 decrease_payments_trigger_false_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat seinem Klientelland „[TARGET_COUNTRY.GetAltName('NOM')|U]“ #b keine#! Verringerung der Zahlungen erlaubt"
 decrease_payments_trigger_desc_third: "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat seinem Klientelland „[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U]“ eine Verringerung der Zahlungen erlaubt"
 decrease_payments_trigger_false_desc_third: "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat seinem Klientelland „[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U]“ #b keine#! Verringerung der Zahlungen erlaubt"
 grant_own_market: "Eigenen Markt gewähren"
 grant_own_market_desc: "Gewährt einem [concept_subject] die Kontrolle über seinen eigenen [concept_market]."
 grant_own_market_action_notification_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] gewährt Marktkontrolle"
 grant_own_market_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat es uns erlaubt, unseren eigenen [concept_market] zu unterhalten, und wir sind nicht mehr mit ihrem verbunden. Unser [concept_liberty_desire] hat sich infolgedessen verringert."
 grant_own_market_action_propose_name: "$grant_own_market$"
 grant_own_market_action_break_name: "Marktkontrolle aufheben"
 grant_own_market_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] hat es [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('DAT')] erlaubt, einen eigenen [concept_market] zu kontrollieren."
 grant_own_market_action_notification_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] widerrief Marktkontrolle"
 grant_own_market_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat uns die Erlaubnis entzogen, unseren eigenen [concept_market] zu kontrollieren, und wir sind nun mit ihrem Markt verbunden."
 grant_own_market_increase_liberty_desire_effect: "Erhöhter [concept_liberty_desire] aufgrund der hohen [Concept('concept_economic_dependence', 'wirtschaftlichen Abhängigkeit')] vom [concept_overlord]"
 grant_own_market_decrease_liberty_desire_effect: "Verringerter [concept_liberty_desire] aufgrund der hohen [Concept('concept_economic_dependence', 'wirtschaftlichen Abhängigkeit')] vom [concept_overlord]"
 grant_own_market_trigger_desc_global: "Hat dem Klientelland einen eigenen Markt eingeräumt"
 grant_own_market_trigger_false_desc_global: "Hat dem Klientelland #b keinen#! eigenen Markt eingeräumt"
 grant_own_market_trigger_desc_first: "[COUNTRY.GetAltName('NOM')|U] hat dem eigenen Klientelland „[TARGET_COUNTRY.GetAltName('NOM')|U]“ einen eigenen Markt eingeräumt"
 grant_own_market_trigger_false_desc_first: "[COUNTRY.GetAltName('NOM')|U] hat dem eigenen Klientelland „[TARGET_COUNTRY.GetAltName('NOM')|U]“ #b keinen#! eigenen Markt eingeräumt"
 grant_own_market_trigger_desc_third: "[COUNTRY.GetAltName('NOM')|U] hat seinem Klientelland „[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U]“ einen eigenen Markt eingeräumt"
 grant_own_market_trigger_false_desc_third: "[COUNTRY.GetAltName('NOM')|U] hat seinem Klientelland „[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U]“ #b keinen#! eigenen Markt eingeräumt"
 exempt_from_service: "Dienstbefreiung"
 exempt_from_service_desc: "Erlaubt einem [concept_subject], selbst zu entscheiden, ob es seinen [concept_overlord] in [Concept('concept_diplomatic_play','$concept_diplomatic_plays$n')] unterstützen will."
 exempt_from_service_action_notification_name: "Militärbefreiung durch [INITIATOR_COUNTRY.GetAltName('NOM')]"
 exempt_from_service_action_notification_desc: "Wir sind nicht mehr gezwungen, uns Kriegen anzuschließen, die [INITIATOR_COUNTRY.GetAltName('VON')] initiiert werden. Unser [concept_liberty_desire] hat sich infolgedessen verringert."
 exempt_from_service_action_propose_name: "$exempt_from_service$"
 exempt_from_service_action_break_name: "Dienstbefreiung aufheben"
 exempt_from_service_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] erlaubt eine Befreiung vom Militärdienst, sodass [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')] nicht mehr verpflichtet ist, an ihren Kriegen teilzunehmen."
 exempt_from_service_action_notification_break_name: "[INITIATOR_COUNTRY.GetName|U] hob Militärbefreiungen auf"
 exempt_from_service_action_notification_break_desc: "Wir sind wieder gezwungen, uns Kriegen anzuschließen, die [INITIATOR_COUNTRY.GetAltName('VON')] initiiert werden. Unser [concept_liberty_desire] ist infolgedessen gestiegen."
 exempt_from_service_trigger_desc_global: "Hat Klientelland vom Militärdienst befreit"
 exempt_from_service_trigger_false_desc_global: "Hat Klientelland #b nicht#! vom Militärdienst befreit"
 exempt_from_service_trigger_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat das eigene Klientelland „[TARGET_COUNTRY.GetAltName('NOM')|U]“ vom Militärdienst befreit"
 exempt_from_service_trigger_false_desc_first: "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat das eigene Klientelland „[TARGET_COUNTRY.GetAltName('NOM')|U]“ #b nicht#! vom Militärdienst befreit"
 exempt_from_service_trigger_desc_third: "[COUNTRY.GetAltName('NOM')|U] hat das eigene Klientelland „[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U]“ vom Militärdienst befreit"
 exempt_from_service_trigger_false_desc_third: "[COUNTRY.GetAltName('NOM')|U] hat das eigene Klientelland „[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U]“ #b nicht#! vom Militärdienst befreit"
 enforce_military_access: "Militärischen Zugang durchsetzen"
 enforce_military_access_desc: "Lässt ein [concept_subject] allen [Concept('concept_war','$concept_wars$n')] beitreten, an denen sein [concept_overlord] beteiligt ist."
 enforce_military_access_action_notification_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] setzt militärischen Zugang durch"
 enforce_military_access_action_notification_desc: "Wir sind gezwungen, allen derzeitigen [Concept('concept_war','$concept_wars$n')] beizutreten, die [INITIATOR_COUNTRY.GetAltName('VON')] initiiert wurden."
 enforce_military_access_action_notification_third_party_name: "Militärischen Zugang [TARGET_COUNTRY.GetAltName('IN')] durchgesetzt"
 enforce_military_access_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat eigenen militärischen Zugang [TARGET_COUNTRY.GetAltName('IN')] durchgesetzt."
 da_evangelize: "Missionieren"
 da_evangelize_desc: "Verbreitet die eigene [concept_religion] in einem [concept_subject]."
 da_evangelize_action_notification_name: "Missioniert [TARGET_COUNTRY.GetAltName('IN')]"
 da_evangelize_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verbreitet den eigenen Glauben [TARGET_COUNTRY.GetAltName('IN')]."
 da_evangelize_action_notification_third_party_name: "Missioniert [TARGET_COUNTRY.GetAltName('IN')]"
 da_evangelize_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verbreitet den eigenen Glauben [TARGET_COUNTRY.GetAltName('IN')]."
 da_evangelize_action_propose_name: "Missionieren"
 da_evangelize_action_break_name: "Missionieren beenden"
 da_evangelize_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] nutzt seine Macht als Suzerän, um die eigene [concept_religion] [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('IN')] zu verbreiten."
 da_evangelize_action_notification_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] beendet Missionieren."
 da_evangelize_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] missioniert nicht mehr."
 da_evangelize_action_notification_third_party_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] beendet Missionieren [TARGET_COUNTRY.GetAltName('IN')]."
 da_evangelize_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] missioniert nicht mehr [TARGET_COUNTRY.GetAltName('IN')]."
 da_evangelize_action_trigger_desc_global: "Missioniert das eigene Klientelland"
 da_evangelize_action_trigger_false_desc_global: "Missioniert #b nicht#! das eigene Klientelland"
 da_evangelize_action_trigger_desc_first: "[COUNTRY.GetAltName('NOM')|U] missioniert das eigene Klientelland „[TARGET_COUNTRY.GetAltName('NOM')|U]“"
 da_evangelize_action_trigger_false_desc_first: "[COUNTRY.GetAltName('NOM')|U] missioniert #b nicht#! das eigene Klientelland „[TARGET_COUNTRY.GetAltName('NOM')|U]“"
 da_evangelize_action_trigger_desc_third: "[COUNTRY.GetAltName('NOM')|U] missioniert das eigene Klientelland „[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U]“"
 da_evangelize_action_trigger_false_desc_third: "[COUNTRY.GetAltName('NOM')|U] missioniert #b nicht#! das eigene Klientelland „[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U]"
 da_evangelize_liberty_desire_decrease_custom_tooltip: "[SCOPE.sCountry('target_country').GetAdjectiveNoFormatting|U]en Beamten wäre es recht, wenn [SCOPE.GetRootScope.GetCountry.GetAltName('NOM')] die Überzeugungen und die Werte des eigenen Glaubens ([ROOT.GetCountry.GetStateReligion.GetName]) [SCOPE.sCountry('target_country').GetAltName('IN')] verbreitet. Der [concept_liberty_desire] dieses [Concept('concept_subject', 'Klientellands')] wird abnehmen."
 da_evangelize_liberty_desire_increase_custom_tooltip: "[SCOPE.sCountry('target_country').GetAdjectiveNoFormatting|U]en Beamten wäre es nicht recht, wenn [SCOPE.GetRootScope.GetCountry.GetAltName('NOM')] die Überzeugungen und die Werte des eigenen Glaubens ([ROOT.GetCountry.GetStateReligion.GetName]) [SCOPE.sCountry('target_country').GetAltName('IN')] verbreiten. Der [concept_liberty_desire] dieses [Concept('concept_subject', 'Klientellands')] wird wachsen."
 da_appoint_colonial_governor: "Gouverneur ernennen"
 da_appoint_colonial_governor_desc: "Ändert den [concept_ruler] eines [Concept('concept_subject', 'Klientellands')]. Der [concept_liberty_desire] kann sich je nach gewähltem Kandidaten ändern."
 da_appoint_colonial_governor_action_name: "Gouverneur ernennen"
 da_appoint_colonial_governor_action_notification_name: "[TARGET_COUNTRY.GetAltName('NOM')|U] tauscht Gouverneur aus"
 da_appoint_colonial_governor_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat [TARGET_COUNTRY.GetRuler.GetCustom('DE_ART_DEF_S_A')] [TARGET_COUNTRY.GetRuler.GetPrimaryRoleTitle] [TARGET_COUNTRY.GetAltName('VON')] durch jemand Neues ersetzt."
 da_appoint_colonial_governor_action_notification_third_party_name: "[TARGET_COUNTRY.GetAltName('NOM')|U] tauscht Gouverneur aus"
 da_appoint_colonial_governor_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat [TARGET_COUNTRY.GetRuler.GetCustom('DE_ART_DEF_S_A')] [TARGET_COUNTRY.GetRuler.GetPrimaryRoleTitle] [TARGET_COUNTRY.GetAltName('VON')] durch jemand Neues ersetzt."
 da_knowledge_sharing: "Wissensaustausch"
 da_knowledge_sharing_desc: "Trägt zur Verbreitung technischer Entdeckungen zwischen [Concept('concept_country','$concept_countries$n')] bei."
 da_knowledge_sharing_action_notification_name: "Techniken verbreiten sich [TARGET_COUNTRY.GetAltName('IN')]"
 da_knowledge_sharing_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hilft beim Verbreiten von Techniken [TARGET_COUNTRY.GetAltName('IN')]"
 da_knowledge_sharing_action_notification_third_party_name: "Techniken verbreiten sich [TARGET_COUNTRY.GetAltName('IN')]"
 da_knowledge_sharing_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hilft beim Verbreiten von Techniken [TARGET_COUNTRY.GetAltName('IN')]"
 da_knowledge_sharing_action_propose_name: "Wissensaustausch anbieten"
 da_knowledge_sharing_action_break_name: "Wissensaustausch beenden"
 da_knowledge_sharing_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] fördert tatkräftig die Verbreitung von Techniken [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('IN')]."
 da_knowledge_sharing_action_notification_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] stellte den Wissensaustausch ein"
 da_knowledge_sharing_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat die Verbreitung von Techniken in unserem Land beendet."
 da_knowledge_sharing_action_notification_third_party_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U]-[TARGET_COUNTRY.GetAltName('NOM')|U]-Wissensaustausch beendet"
 da_knowledge_sharing_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat die Verbreitung von Techniken [TARGET_COUNTRY.GetAltName('IN')] beendet."
 da_knowledge_sharing_trigger_desc_global: "Hat einen Wissensaustauschpakt mit dem eigenen Klientelland"
 da_knowledge_sharing_trigger_false_desc_global: "Hat #b keinen#! Wissensaustauschpakt mit dem eigenen Klientelland"
 da_knowledge_sharing_trigger_desc_first: "[COUNTRY.GetAltName('NOM')|U] hat einen Wissensaustauschpakt mit dem eigenen Klientelland „[TARGET_COUNTRY.GetAltName('NOM')|U]“"
 da_knowledge_sharing_trigger_false_desc_first: "[COUNTRY.GetAltName('NOM')|U] hat #b keinen#! Wissensaustauschpakt mit dem eigenen Klientelland „[TARGET_COUNTRY.GetAltName('NOM')|U]“"
 da_knowledge_sharing_trigger_desc_third: "[COUNTRY.GetAltName('NOM')|U] hat einen Wissensaustauschpakt mit dem eigenen Klientelland „[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U]“"
 da_knowledge_sharing_trigger_false_desc_third: "[COUNTRY.GetAltName('NOM')|U] hat #b keinen#! Wissensaustauschpakt mit dem eigenen Klientelland „[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U]“"
 da_request_knowledge_sharing: "Wissensaustausch erbitten"
 da_request_knowledge_sharing_desc: "$da_knowledge_sharing_desc$"
 da_request_knowledge_sharing_action_name: "$da_request_knowledge_sharing$"
 da_request_knowledge_sharing_proposal_accepted_name: "Wissensaustausch akzeptiert"
 da_request_knowledge_sharing_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unsere Bitte nach einem Wissensaustausch akzeptiert. Unsere [concept_technology_spread] wurde erhöht."
 da_request_knowledge_sharing_proposal_declined_name: "Wissensaustausch verweigert"
 da_request_knowledge_sharing_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unsere Bitte nach einem Wissensaustausch verweigert."
 da_request_knowledge_sharing_proposal_notification_name: "Bitte nach Wissensaustausch"
 da_request_knowledge_sharing_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] bittet darum, dass wir unsere [concept_technology] teilen."
 da_request_knowledge_sharing_proposal_third_party_accepted_name: "[INITIATOR_COUNTRY.GetAltNameNoFormatting('NOM')|U] wurde Wissensaustausch gewährt"
 da_request_knowledge_sharing_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] erhielt Wissen über die [concept_technology], die [TARGET_COUNTRY.GetAltName('DAT')] bekannt ist."
 da_request_knowledge_sharing_proposal_third_party_declined_name: "[INITIATOR_COUNTRY.GetAltNameNoFormatting('NOM')|U] wurde Wissensaustausch verweigert"
 da_request_knowledge_sharing_proposal_third_party_declined_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] wurde Wissen über die [concept_technology] verweigert, die [TARGET_COUNTRY.GetAltName('DAT')] bekannt ist."
 request_market_control: "Marktkontrolle erbitten"
 request_market_control_desc: "Bittet einen [concept_overlord], seinem [concept_subject] die Kontrolle über einen eigenen [concept_market] zu gewähren."
 request_market_control_action_name: "$request_market_control$"
 request_market_control_action_propose_name: "$request_market_control$"
 request_market_control_action_notification_break_name: "Marktkontrolle aufgegeben"
 request_market_control_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat die Kontrolle über den eigenen [concept_market] an uns zurückgegeben."
 request_market_control_action_break_name: "Marktkontrolle aufgeben"
 request_market_control_pact_desc: "[SCOPE.sCountry('country').GetAltName('NOM')|U] gründet einen eigenen Markt, getrennt und unabhängig vom Markt [SCOPE.sCountry('target_country').GetAltName('VON')]."
 request_market_control_proposal_notification_name: "Bitte um Marktkontrolle"
 request_market_control_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] erbittet die Kontrolle über den eigenen [concept_market]."
 request_market_control_proposal_accepted_name: "Marktkontrolle angenommen"
 request_market_control_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unsere Bitte um Marktkontrolle angenommen. Wir können unseren eigenen nationalen [concept_market] verwalten."
 request_market_control_proposal_declined_name: "Marktkontrolle verweigert"
 request_market_control_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Antrag auf Marktkontrolle abgelehnt. Unser [concept_liberty_desire] ist daraufhin gestiegen."
 request_market_control_proposal_third_party_accepted_name: "[INITIATOR_COUNTRY.GetAdjectiveNoFormatting|U]e Marktkontrolle gewährt"
 request_market_control_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] wurde vom eigenen [concept_overlord] ([TARGET_COUNTRY.GetAltName('DAT')]) die Kontrolle über den eigenen [concept_market] gewährt."
 request_market_control_proposal_third_party_declined_name: "[INITIATOR_COUNTRY.GetAdjectiveNoFormatting|U]e Marktkontrolle verweigert"
 request_market_control_proposal_third_party_declined_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] wurde vom eigenen [concept_overlord] ([TARGET_COUNTRY.GetAltName('DAT')]) die Kontrolle über den eigenen [concept_market] verweigert."
 request_market_control_trigger_desc_global: "Hat einen eigenen Markt vom Suzerän erbeten"
 request_market_control_trigger_false_desc_global: "Hat #b keinen#! eigenen Markt vom Suzerän erbeten"
 request_market_control_trigger_desc_first: "[COUNTRY.GetAltName('NOM')|U] hat einen eigenen Markt vom eigenen Suzerän ([TARGET_COUNTRY.GetName]) erbeten"
 request_market_control_trigger_false_desc_first: "[COUNTRY.GetAltName('NOM')|U] hat #b keinen#! eigenen Markt vom eigenen Suzerän ([TARGET_COUNTRY.GetName]) erbeten"
 request_market_control_trigger_desc_third: "[COUNTRY.GetAltName('NOM')|U] hat einen eigenen Markt vom eigenen Suzerän [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] erbeten"
 request_market_control_trigger_false_desc_third: "[COUNTRY.GetAltName('NOM')|U] hat #b keinen#! eigenen Markt vom eigenen Suzerän [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] erbeten"
 da_support_regime: "Regime unterstützen"
 da_support_regime_desc: "Erhöht die [concept_legitimacy] eines [Concept('concept_subject', 'Klientellands')] bei gleichzeitiger Verringerung des [Concept('concept_liberty_desire', 'Freiheitsdrangs')]."
 da_support_regime_action_notification_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] unterstützt das Regime [TARGET_COUNTRY.GetAltName('VON')]"
 da_support_regime_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] erhöht die Legitimität des eigenen Klientellands „[TARGET_COUNTRY.GetAltName('NOM')|U]“"
 da_support_regime_action_notification_third_party_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] unterstützt die Regierung des eigenen [Concept('concept_subject','Klientellands')]"
 da_support_regime_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] stärkt die [concept_legitimacy] der Regierung des eigenen [Concept('concept_subject', 'Klientellands')] „[TARGET_COUNTRY.GetAltName('NOM')]“."
 da_support_regime_action_propose_name: "Regime unterstützen"
 da_support_regime_action_break_name: "Regimeunterstützung beenden"
 da_support_regime_pact_desc: "[SCOPE.sCountry('country').GetAltName('NOM')|U] unterstützt die Regierung [SCOPE.sCountry('target_country').GetAltName('VON')|U]."
 da_support_regime_action_notification_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] stärkt nicht mehr die [concept_legitimacy] unserer Regierung."
 da_support_regime_action_notification_break_desc: "Die Regierung [TARGET_COUNTRY.GetAltName('VON')] wird von uns nicht mehr unterstützt."
 da_support_regime_action_notification_third_party_break_name: "Regimeunterstützung endet"
 da_support_regime_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] beendete seine Unterstützung für die Regierung [TARGET_COUNTRY.GetAltName('VON')]."
 da_request_support_regime: "Regimeunterstützung erbeten"
 da_request_support_regime_action_name: "$da_request_support_regime$"
 da_request_support_regime_desc: "Erhöht die [concept_legitimacy] eines [Concept('concept_subject', 'Klientellands')] bei gleichzeitiger Verringerung des [Concept('concept_liberty_desire', 'Freiheitsdrangs')]."
 da_request_support_regime_action_notification_name: "[TARGET_COUNTRY.GetAltName('NOM')|U] unterstützt das Regime [INITIATOR_COUNTRY.GetAltName('VON')]"
 da_request_support_regime_action_notification_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] erhöht die Legitimität des eigenen Klientellands „[INITIATOR_COUNTRY.GetAltName('NOM')|U]“"
 da_request_support_regime_action_notification_third_party_name: "[TARGET_COUNTRY.GetAltName('NOM')|U] unterstützt die Regierung des eigenen [Concept('concept_subject','Klientellands')]"
 da_request_support_regime_action_notification_third_party_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] stärkt die [concept_legitimacy] der Regierung des eigenen [Concept('concept_subject', 'Klientellands')] „[INITIATOR_COUNTRY.GetAltName('NOM')]“."
 da_request_support_regime_action_propose_name: "Regime unterstützen"
 da_request_support_regime_action_break_name: "Regimeunterstützung beenden"
 da_request_support_regime_proposal_notification_name: "Bitte um Regimeunterstützung"
 da_request_support_regime_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] bittet darum, dass wir das Regime unterstützen."
 da_request_support_regime_proposal_accepted_name: "Regimeunterstützung akzeptiert"
 da_request_support_regime_proposal_accepted_desc: "[TARGET_COUNTRY.GetName] hat unsere Bitte nach Regimeunterstützung akzeptiert. Unsere [concept_legitimacy] hat sich verbessert."
 da_request_support_regime_proposal_declined_name: "Regimeunterstützung verweigert"
 da_request_support_regime_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] lehnte unsere Bitte um Unterstützung unseres Regimes ab. Unser [concept_liberty_desire] ist daraufhin gestiegen."
 da_request_support_regime_proposal_third_party_accepted_name: "[INITIATOR_COUNTRY.GetAdjectiveNoFormatting|U]em Regime Unterstützung gewährt"
 da_request_support_regime_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] wurde vom eigenen [concept_overlord] ([TARGET_COUNTRY.GetAltName('DAT')]) Unterstützung für das Regime gewährt."
 da_request_support_regime_proposal_third_party_declined_name: "[INITIATOR_COUNTRY.GetAdjectiveNoFormatting|U]e Regimeunterstützung verweigert"
 da_request_support_regime_proposal_third_party_declined_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] wurde vom eigenen [concept_overlord] ([TARGET_COUNTRY.GetAltName('DAT')]) Unterstützung für das Regime verweigert."
 protectorate: "Protektorat"
 protectorate_action_name: "[concept_protectorate]"
 protectorate_action_propose_name: "Zum [concept_protectorate] machen"
 protectorate_action_break_name: "Unabhängigkeit gewähren"
 protectorate_action_ask_to_break_name: "Unabhängigkeit fordern"
 protectorate_desc: "Schafft eine [concept_subject]-Beziehung der Art „[concept_protectorate]“ zwischen zwei [Concept('concept_country', 'Ländern')]."
 protectorate_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')|U] ist ein [concept_protectorate] [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('GEN')]."
 protectorate_action_notification_name: "$protectorate_proposal_notification_name$"
 protectorate_action_notification_desc: "$protectorate_proposal_notification_desc$"
 protectorate_proposal_notification_name: "Unterwerfung verlangt"
 protectorate_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] fordert, dass wir uns ihm unterwerfen und sein [concept_protectorate] werden."
 protectorate_proposal_notification_effects_desc: "Wenn wir annehmen, werden wir sein Klientelland."
 protectorate_proposal_accepted_name: "Unterwerfung verlangt"
 protectorate_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung angenommen, unser [concept_protectorate] zu werden."
 protectorate_proposal_declined_name: "Unterwerfung verweigert"
 protectorate_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung abgelehnt, unser [concept_protectorate] zu werden."
 protectorate_action_notification_break_name: "Unabhängigkeit gewährt"
 protectorate_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unseren Status als [concept_protectorate] beendet. Wir sind wieder unabhängig."
 protectorate_proposal_notification_break_name: "Unabhängigkeit gefordert"
 protectorate_proposal_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verlangt, dass wir seinen Status als [concept_protectorate] beenden."
 protectorate_proposal_notification_break_effects_desc: "Wenn wir annehmen, wird es wieder voll unabhängig."
 protectorate_proposal_break_accepted_name: "Unabhängigkeit gewährt"
 protectorate_proposal_break_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung angenommen, unseren Status als [concept_protectorate] zu beenden. Wir sind wieder unabhängig."
 protectorate_proposal_break_declined_name: "Unabhängigkeit verweigert"
 protectorate_proposal_break_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung verweigert, unseren Status als [concept_protectorate] zu beenden."
 protectorate_proposal_third_party_accepted_name: "Land unterworfen"
 protectorate_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat eingewilligt, ein [concept_protectorate] [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."
 protectorate_proposal_third_party_declined_name: "Unterwerfung verweigert"
 protectorate_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat verweigert, ein [concept_protectorate] [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."
 protectorate_action_third_party_notification_break_name: "Unabhängigkeit gewährt"
 protectorate_action_third_party_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat den Status [TARGET_COUNTRY.GetAltName('GEN')] als [concept_protectorate] beendet, sodass es seine volle Unabhängigkeit zurückhat."
 protectorate_proposal_third_party_break_accepted_name: "Unabhängigkeit gewährt"
 protectorate_proposal_third_party_break_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_protectorate] beendet, sodass es seine volle Unabhängigkeit zurückhat."
 protectorate_proposal_third_party_break_declined_name: "Unabhängigkeit verweigert"
 protectorate_proposal_third_party_break_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat verweigert, den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_protectorate] zu beenden."
 protectorate_effect_desc_global: "Wird ein [concept_protectorate]"
 protectorate_effect_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] wird ein [COUNTRY.GetAdjectiveNoFlag|l]es [concept_protectorate]"
 protectorate_effect_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] wird ein [concept_protectorate] [COUNTRY.GetAltName('VON')]"
 protectorate_trigger_desc_global: "Ist ein [concept_protectorate]"
 protectorate_trigger_false_desc_global: "Ist #b kein#! [concept_protectorate]"
 protectorate_trigger_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist ein [COUNTRY.GetAdjectiveNoFlag|l]es [concept_protectorate]"
 protectorate_trigger_false_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist #b kein#! [COUNTRY.GetAdjectiveNoFlag|l]es [concept_protectorate]"
 protectorate_trigger_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] ist ein [concept_protectorate] [COUNTRY.GetAltName('VON')]"
 protectorate_trigger_false_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] ist #b kein#! [concept_protectorate] [COUNTRY.GetAltName('VON')]"
 become_protectorate: "Bitten, ein Protektorat zu werden"
 become_protectorate_action_name: "Bitten, ein [concept_protectorate] zu werden"
 become_protectorate_action_propose_name: "Bitten, ein [concept_protectorate] zu werden"
 become_protectorate_desc: "Schafft eine [concept_subject_type]-Beziehung der Art „[concept_protectorate]“ zwischen zwei [Concept('concept_country', 'Ländern')], wobei das vorschlagende Land das [concept_subject] wird."
 become_protectorate_proposal_notification_name: "Bitte um Status als [concept_protectorate]"
 become_protectorate_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] will sich uns unterwerfen und unser [concept_protectorate] werden."
 become_protectorate_proposal_notification_effects_desc: "Wenn wir annehmen, wird es unser Klientelland."
 become_protectorate_proposal_accepted_name: "Bitte um Status als [concept_protectorate] angenommen"
 become_protectorate_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] akzeptiert unser Angebot, sein [concept_protectorate] zu werden."
 become_protectorate_proposal_declined_name: "Bitte um Status als [concept_protectorate] abgelehnt"
 become_protectorate_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unser Angebot abgelehnt, sein [concept_protectorate] zu werden."
 become_protectorate_proposal_third_party_accepted_name: "Land unterworfen"
 become_protectorate_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat eingewilligt, der Suzerän [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden, das nun sein [concept_protectorate] ist."
 become_protectorate_proposal_third_party_declined_name: "Unterwerfung verweigert"
 become_protectorate_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat abgelehnt, der $suzerain$ [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."
 puppet: "Marionette"
 puppet_action_name: "[concept_puppet]"
 puppet_action_propose_name: "Zur [concept_puppet] machen"
 puppet_action_break_name: "Unabhängigkeit gewähren"
 puppet_action_ask_to_break_name: "Unabhängigkeit fordern"
 puppet_desc: "Schafft eine [concept_subject_type]-Beziehung der Art „[concept_puppet]“ zwischen zwei [Concept('concept_country', 'Ländern')]."
 puppet_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')|U] ist eine [concept_puppet] [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('GEN')]."
 puppet_action_notification_name: "Forderung, zur [concept_puppet] zu werden"
 puppet_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] fordert, dass wir uns ihm unterwerfen und seine [concept_puppet] werden."
 puppet_action_notification_break_name: "Unabhängigkeit gewährt"
 puppet_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unseren Status als [concept_puppet] beendet. Wir sind wieder unabhängig."
 puppet_proposal_notification_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] fordert Unabhängigkeit"
 puppet_proposal_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verlangt, dass wir unsere gemeinsame [Concept('concept_puppet', 'Marionettenbeziehung')] aufgeben."
 puppet_proposal_notification_break_effects_desc: "Wenn wir annehmen, wird es wieder voll unabhängig."
 puppet_proposal_break_accepted_name: "Unabhängigkeit gewährt"
 puppet_proposal_break_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung angenommen, unseren Status als [concept_puppet] zu beenden. Wir sind wieder unabhängig."
 puppet_proposal_break_declined_name: "Unabhängigkeit verweigert"
 puppet_proposal_break_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung verweigert, unseren Status als [concept_puppet] zu beenden."
 puppet_proposal_third_party_break_accepted_name: "Unabhängigkeit gewährt"
 puppet_proposal_third_party_break_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_puppet] beendet, sodass es seine volle Unabhängigkeit zurückhat."
 puppet_proposal_third_party_break_declined_name: "Unabhängigkeit verweigert"
 puppet_proposal_third_party_break_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat verweigert, den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_puppet] zu beenden."
 puppet_effect_desc_global: "Wird eine [concept_puppet]"
 puppet_effect_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] wird eine [COUNTRY.GetAdjectiveNoFlag|l]e [concept_puppet]"
 puppet_effect_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] wird eine [concept_puppet] [COUNTRY.GetAltName('VON')]"
 personal_union_effect_desc_global: "Wird eine [concept_personal_union]"
 personal_union_effect_desc_first: "[TARGET_COUNTRY.GetName('NOM')|U] wird der Juniorpartner in einer [COUNTRY.GetAdjectiveNoFlag|l]en [concept_personal_union]"
 personal_union_effect_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetNameNoFlag)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetName)] wird der Juniorpartner [COUNTRY.GetAltName('VON')] in einer [concept_personal_union]"
 puppet_trigger_desc_global: "Ist eine [concept_puppet]"
 puppet_trigger_false_desc_global: "Ist #b keine#! [concept_puppet]"
 puppet_trigger_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist eine [COUNTRY.GetAdjectiveNoFlag|l]e [concept_puppet]"
 puppet_trigger_false_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist #b keine#! [COUNTRY.GetAdjectiveNoFlag|l]e [concept_puppet]"
 puppet_trigger_desc_third: "[COUNTRY.GetAltNameNoFlag('NOM')|U] ist eine [concept_puppet] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('VON'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('VON'))|U]"
 puppet_trigger_false_desc_third: "[COUNTRY.GetAltNameNoFlag('NOM')|U] ist #b keine#! [concept_puppet] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('VON'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('VON'))|U]"
 tributary: "Tributland"
 tributary_action_name: "[concept_tributary]"
 tributary_action_propose_name: "Zum [concept_tributary] machen"
 tributary_action_break_name: "Unabhängigkeit gewähren"
 tributary_action_ask_to_break_name: "Unabhängigkeit fordern"
 tributary_desc: "Schafft eine [concept_subject_type]-Beziehung der Art „[concept_tributary] “ zwischen zwei [Concept('concept_country', 'Ländern')]."
 tributary_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')|U] ist ein [concept_tributary] [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('GEN')]."
 tributary_action_notification_name: "$tributary_proposal_notification_name$"
 tributary_action_notification_desc: "$tributary_proposal_notification_desc$"
 tributary_proposal_notification_name: "Unterwerfung verlangt"
 tributary_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] fordert, dass wir uns ihm unterwerfen und sein [concept_tributary] werden."
 tributary_proposal_notification_effects_desc: "Wenn wir annehmen, werden wir sein Klientelland."
 tributary_proposal_accepted_name: "Unterwerfung angenommen"
 tributary_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung angenommen, unser [concept_tributary] zu werden."
 tributary_proposal_declined_name: "Unterwerfung verweigert"
 tributary_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung abgelehnt, unser [concept_tributary] zu werden."
 tributary_action_notification_break_name: "Unabhängigkeit gewährt"
 tributary_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unseren Status als [concept_tributary] beendet. Wir sind wieder unabhängig."
 tributary_proposal_notification_break_name: "Unabhängigkeit gefordert"
 tributary_proposal_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verlangt, dass wir seinen Status als [concept_tributary] beenden."
 tributary_proposal_notification_break_effects_desc: "Wenn wir annehmen, wird es wieder voll unabhängig."
 tributary_proposal_break_accepted_name: "Unabhängigkeit gewährt"
 tributary_proposal_break_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung angenommen, unseren Status als [concept_tributary] zu beenden. Wir sind wieder unabhängig."
 tributary_proposal_break_declined_name: "Unabhängigkeit verweigert"
 tributary_proposal_break_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung verweigert, unseren Status als [concept_tributary] zu beenden."
 tributary_proposal_third_party_accepted_name: "Land unterworfen"
 tributary_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat eingewilligt, ein [concept_tributary] [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."
 tributary_proposal_third_party_declined_name: "Unterwerfung verweigert"
 tributary_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat verweigert, ein [concept_tributary] [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."
 tributary_action_third_party_notification_break_name: "Unabhängigkeit gewährt"
 tributary_action_third_party_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat den Status [TARGET_COUNTRY.GetAltName('GEN')] als [concept_tributary] beendet, sodass es seine volle Unabhängigkeit zurückhat."
 tributary_proposal_third_party_break_accepted_name: "Unabhängigkeit gewährt"
 tributary_proposal_third_party_break_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_tributary] beendet, sodass es seine volle Unabhängigkeit zurückhat."
 tributary_proposal_third_party_break_declined_name: "Unabhängigkeit verweigert"
 tributary_proposal_third_party_break_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat verweigert, den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_tributary] zu beenden."
 tributary_effect_desc_global: "Wird ein [concept_tributary]"
 tributary_effect_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] wird ein [COUNTRY.GetAdjectiveNoFlag|l]es [concept_tributary]"
 tributary_effect_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] wird ein [concept_tributary] [COUNTRY.GetAltName('VON')]"
 tributary_trigger_desc_global: "Ist ein [concept_tributary]"
 tributary_trigger_false_desc_global: "Ist #b kein#! [concept_tributary]"
 tributary_trigger_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist ein [COUNTRY.GetAdjectiveNoFlag|l]es [concept_tributary]"
 tributary_trigger_false_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist #b kein#! [COUNTRY.GetAdjectiveNoFlag|l]es [concept_tributary]"
 tributary_trigger_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] ist ein [concept_tributary] [COUNTRY.GetAltName('VON')]"
 tributary_trigger_false_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] ist #b kein#! [concept_tributary] [COUNTRY.GetAltName('VON')]"
 become_tributary: "Bitten, ein Tributland zu werden"
 become_tributary_action_name: "Bitten, ein [concept_tributary] zu werden"
 become_tributary_action_propose_name: "Bitten, ein [concept_tributary] zu werden"
 become_tributary_desc: "Schafft eine [concept_subject_type]-Beziehung der Art „[concept_tributary]“ zwischen zwei [Concept('concept_country', 'Ländern')], wobei das vorschlagende Land das [concept_subject] wird."
 become_tributary_proposal_notification_name: "[concept_tributary]-Anfrage"
 become_tributary_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] will sich uns unterwerfen und unser [concept_tributary] werden."
 become_tributary_proposal_notification_effects_desc: "Wenn wir annehmen, wird es unser Klientelland."
 become_tributary_proposal_accepted_name: "[concept_tributary]-Anfrage angenommen"
 become_tributary_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] akzeptiert unser Angebot, sein [concept_tributary] zu werden."
 become_tributary_proposal_declined_name: "[concept_tributary]-Anfrage abgelehnt"
 become_tributary_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unser Angebot abgelehnt, sein [concept_tributary] zu werden."
 become_tributary_proposal_third_party_accepted_name: "Land unterworfen"
 become_tributary_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat eingewilligt, der Suzerän [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden, das nun sein [concept_tributary] ist."
 become_tributary_proposal_third_party_declined_name: "Unterwerfung verweigert"
 become_tributary_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat abgelehnt, der $suzerain$ [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."
 vassal: "Vasall"
 vassal_action_name: "[concept_vassal]"
 vassal_action_propose_name: "Zum [concept_vassal] machen"
 vassal_action_break_name: "Unabhängigkeit gewähren"
 vassal_action_ask_to_break_name: "Unabhängigkeit fordern"
 vassal_desc: "Schafft eine [concept_subject_type]-Beziehung der Art „[concept_vassal]“ zwischen zwei [Concept('concept_country', 'Ländern')]."
 vassal_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')|U] ist ein [concept_vassal] [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('GEN')]."
 vassal_action_notification_name: "Forderung, zum [concept_vassal] zu werden"
 vassal_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] fordert, dass wir uns ihm unterwerfen und sein [concept_vassal] werden."
 vassal_action_notification_break_name: "Unabhängigkeit gewährt"
 vassal_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unseren Status als [concept_vassal] beendet. Wir sind wieder unabhängig."
 vassal_proposal_notification_break_name: "Unabhängigkeit gefordert"
 vassal_proposal_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verlangt, dass wir unser [Concept('concept_vassal', 'Vasallenverhältnis')] beenden."
 vassal_proposal_notification_break_effects_desc: "Wenn wir annehmen, wird es wieder voll unabhängig."
 vassal_proposal_break_accepted_name: "Unabhängigkeit gewährt"
 vassal_proposal_break_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung angenommen, unseren Status als [concept_vassal] zu beenden. Wir sind wieder unabhängig."
 vassal_proposal_break_declined_name: "Unabhängigkeit verweigert"
 vassal_proposal_break_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung verweigert, unseren Status als [concept_vassal] zu beenden."
 vassal_proposal_third_party_break_accepted_name: "Unabhängigkeit gewährt"
 vassal_proposal_third_party_break_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_vassal] beendet, sodass es seine volle Unabhängigkeit zurückhat."
 vassal_proposal_third_party_break_declined_name: "Unabhängigkeit verweigert"
 vassal_proposal_third_party_break_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat verweigert, den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_vassal] zu beenden."
 vassal_effect_desc_global: "Wird zu einem [Concept('concept_vassal', 'Vasallen')]"
 vassal_effect_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] wird ein [COUNTRY.GetAdjectiveNoFlag|l]er [concept_vassal]"
 vassal_effect_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] wird ein [concept_vassal] [COUNTRY.GetAltName('VON')]"
 personal_union: "Personalunion"
 personal_union_action_name: "[concept_personal_union]"
 personal_union_action_propose_name: "Zur [concept_personal_union] machen"
 personal_union_action_break_name: "Unabhängigkeit gewähren"
 personal_union_action_ask_to_break_name: "Unabhängigkeit fordern"
 personal_union_desc: "Schafft eine [concept_subject_type]-Beziehung der Art „[concept_personal_union]“ zwischen zwei [Concept('concept_country', 'Ländern')]."
 personal_union_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')|U] ist in einer [concept_personal_union] unter [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('DAT')]."
 personal_union_action_notification_name: "Union verlangen"
 personal_union_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] fordert, dass wir uns ihm unterwerfen und eine [concept_personal_union] bilden."
 personal_union_action_notification_break_name: "Unabhängigkeit gewährt"
 personal_union_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unsere [concept_personal_union] beendet. Wir sind wieder unabhängig."
 personal_union_proposal_notification_break_name: "Unabhängigkeit gefordert"
 personal_union_proposal_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verlangt, dass wir unsere [concept_personal_union] mit ihm beenden."
 personal_union_proposal_notification_break_effects_desc: "Wenn wir annehmen, wird es wieder voll unabhängig."
 personal_union_proposal_break_accepted_name: "Unabhängigkeit gewährt"
 personal_union_proposal_break_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung angenommen, unsere [concept_personal_union] zu beenden. Wir sind wieder unabhängig."
 personal_union_proposal_break_declined_name: "Unabhängigkeit verweigert"
 personal_union_proposal_break_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung verweigert, unsere [concept_personal_union] zu beenden."
 personal_union_proposal_third_party_break_accepted_name: "Unabhängigkeit gewährt"
 personal_union_proposal_third_party_break_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die [concept_personal_union] mit [INITIATOR_COUNTRY.GetAltName('DAT')] beendet, sodass es seine volle Unabhängigkeit zurückhat."
 personal_union_proposal_third_party_break_declined_name: "Unabhängigkeit verweigert"
 personal_union_proposal_third_party_break_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat verweigert, die [concept_personal_union] mit [INITIATOR_COUNTRY.GetAltName('DAT')] zu beenden."
 dominion: "Dominion"
 dominion_action_name: "[concept_dominion]"
 dominion_action_propose_name: "Zum [concept_dominion] machen"
 dominion_action_break_name: "Unabhängigkeit gewähren"
 dominion_action_ask_to_break_name: "Unabhängigkeit fordern"
 dominion_desc: "Schafft eine [concept_subject_type]-Beziehung der Art „[concept_dominion]“ zwischen zwei [Concept('concept_country', 'Ländern')]."
 dominion_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')|U] ist ein [concept_dominion] [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('GEN')]."
 dominion_action_notification_name: "[concept_dominion] fordern"
 dominion_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] fordert, dass wir uns ihm unterwerfen und sein [concept_dominion] werden."
 dominion_action_notification_break_name: "Unabhängigkeit gewährt"
 dominion_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unseren Status als [concept_dominion] beendet. Wir sind wieder unabhängig."
 dominion_proposal_notification_break_name: "Unabhängigkeit gefordert"
 dominion_proposal_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verlangt, dass wir seinen Status als [concept_dominion] beenden."
 dominion_proposal_notification_break_effects_desc: "Wenn wir annehmen, wird es wieder voll unabhängig."
 dominion_proposal_break_accepted_name: "Unabhängigkeit gewährt"
 dominion_proposal_break_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung angenommen, unseren Status als [concept_dominion] zu beenden. Wir sind wieder unabhängig."
 dominion_proposal_break_declined_name: "Unabhängigkeit verweigert"
 dominion_proposal_break_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung verweigert, unseren Status als [concept_dominion] zu beenden."
 dominion_action_third_party_notification_break_name: "Unabhängigkeit gewährt"
 dominion_action_third_party_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat den Status [TARGET_COUNTRY.GetAltName('GEN')] als [concept_dominion] beendet, sodass es seine volle Unabhängigkeit zurückhat."
 dominion_proposal_third_party_break_accepted_name: "Unabhängigkeit gewährt"
 dominion_proposal_third_party_break_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_dominion] beendet, sodass es seine volle Unabhängigkeit zurückhat."
 dominion_proposal_third_party_break_declined_name: "Unabhängigkeit verweigert"
 dominion_proposal_third_party_break_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat verweigert, den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_dominion] zu beenden."
 dominion_proposal_notification_name: "Unterwerfung verlangt"
 dominion_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] fordert, dass wir uns ihm unterwerfen und sein [concept_dominion] werden."
 dominion_proposal_notification_effects_desc: "Wenn wir annehmen, werden wir sein Klientelland."
 dominion_proposal_accepted_name: "Unterwerfung angenommen"
 dominion_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung angenommen, unser [concept_dominion] zu werden."
 dominion_proposal_declined_name: "Unterwerfung verweigert"
 dominion_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung abgelehnt, unser [concept_dominion] zu werden."
 dominion_proposal_third_party_accepted_name: "Land unterworfen"
 dominion_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat eingewilligt, ein [concept_dominion] [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."
 dominion_proposal_third_party_declined_name: "Unterwerfung verweigert"
 dominion_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat verweigert, ein [concept_dominion] [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."
 dominion_effect_desc_global: "Wird ein [concept_dominion]"
 dominion_effect_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] wird ein [COUNTRY.GetAdjectiveNoFlag|l]es [concept_dominion]"
 dominion_effect_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] wird ein [concept_dominion] [COUNTRY.GetAltName('VON')]"
 dominion_trigger_desc_global: "Ist ein [concept_dominion]"
 dominion_trigger_false_desc_global: "Ist #b kein#! [concept_dominion]"
 dominion_trigger_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist ein [COUNTRY.GetAdjectiveNoFlag|l]es [concept_dominion]"
 dominion_trigger_false_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist #b kein#! [COUNTRY.GetAdjectiveNoFlag|l]es [concept_dominion]"
 dominion_trigger_desc_third: "[COUNTRY.GetAltNameNoFlag('NOM')|U] ist ein [concept_dominion] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('VON'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('VON'))|U]"
 dominion_trigger_false_desc_third: "[COUNTRY.GetAltNameNoFlag('NOM')|U] ist #b kein#! [concept_dominion] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('VON'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('VON'))|U]"
 vassal_trigger_desc_global: "Ist ein [concept_vassal]"
 vassal_trigger_false_desc_global: "Ist #b kein#! [concept_vassal]"
 vassal_trigger_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist ein [COUNTRY.GetAdjectiveNoFlag|l]er [concept_vassal]"
 vassal_trigger_false_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist #b kein#! [COUNTRY.GetAdjectiveNoFlag|l]er [concept_vassal]"
 vassal_trigger_desc_third: "[COUNTRY.GetAltNameNoFlag('NOM')|U] ist ein [concept_vassal] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('VON'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('VON'))|U]"
 vassal_trigger_false_desc_third: "[COUNTRY.GetAltNameNoFlag('NOM')|U] ist #b kein#! [concept_vassal] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('VON'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('VON'))|U]"
 become_dominion: "Bitten, ein Dominion zu werden"
 become_dominion_action_name: "Bitten, ein [concept_dominion] zu werden"
 become_dominion_desc: "Schafft eine [concept_subject_type]-Beziehung der Art „[concept_dominion]“ zwischen zwei [Concept('concept_country', 'Ländern')], wobei das vorschlagende Land das [concept_subject] wird."
 become_dominion_proposal_notification_name: "[concept_dominion]-Anfrage"
 become_dominion_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] will sich uns unterwerfen und unser [concept_dominion] werden."
 become_dominion_proposal_notification_effects_desc: "Wenn wir annehmen, wird es unser Klientelland."
 become_dominion_proposal_accepted_name: "[concept_dominion]-Anfrage angenommen"
 become_dominion_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] akzeptiert unser Angebot, sein [concept_dominion] zu werden."
 become_dominion_proposal_declined_name: "[concept_dominion]-Anfrage abgelehnt"
 become_dominion_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unser Angebot abgelehnt, sein [concept_dominion] zu werden."
 become_dominion_proposal_third_party_accepted_name: "Land unterworfen"
 become_dominion_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat eingewilligt, der Suzerän [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden, das nun sein [concept_dominion] ist."
 become_dominion_proposal_third_party_declined_name: "Unterwerfung verweigert"
 become_dominion_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat abgelehnt, der $suzerain$ [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."
 colony: "Kolonie"
 colony_action_name: "[concept_colony_subject]"
 colony_action_propose_name: "Zu einer [concept_colony_subject] machen"
 colony_action_break_name: "Unabhängigkeit gewähren"
 colony_action_ask_to_break_name: "Unabhängigkeit fordern"
 colony_desc: "Schafft eine [concept_subject_type]-Beziehung der Art „[concept_colony_subject]“ zwischen zwei [Concept('concept_country', 'Ländern')]."
 colony_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')|U] ist eine [concept_colony_subject] [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('GEN')]."
 colony_action_notification_name: "[concept_colony_subject] gefordert"
 colony_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] fordert, dass wir uns unterwerfen und eine [concept_colony_subject] werden."
 colony_action_notification_break_name: "Unabhängigkeit gewährt"
 colony_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unseren Status als [concept_colony_subject] beendet. Wir sind wieder unabhängig."
 colony_proposal_notification_break_name: "Unabhängigkeit gefordert"
 colony_proposal_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verlangt, dass wir den Status als [concept_colony_subject] aufheben."
 colony_proposal_notification_break_effects_desc: "Wenn wir annehmen, wird diese Nation wieder voll unabhängig."
 colony_proposal_break_accepted_name: "Unabhängigkeit gewährt"
 colony_proposal_break_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] nahm die Forderung an, unseren Status als [concept_colony_subject] zu beenden. Wir sind wieder unabhängig."
 colony_proposal_break_declined_name: "Unabhängigkeit verweigert"
 colony_proposal_break_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung verweigert, unsere Status als [concept_colony_subject] zu beenden."
 colony_action_third_party_notification_break_name: "Unabhängigkeit gewährt"
 colony_action_third_party_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] beendete den Status [TARGET_COUNTRY.GetAltName('GEN')] als [concept_colony_subject], sodass diese Nation ihre volle Unabhängigkeit zurückhat."
 colony_proposal_third_party_break_accepted_name: "Unabhängigkeit gewährt"
 colony_proposal_third_party_break_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] beendete den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_colony_subject], sodass diese Nation ihre volle Unabhängigkeit zurückhat."
 colony_proposal_third_party_break_declined_name: "Unabhängigkeit verweigert"
 colony_proposal_third_party_break_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] weigerte sich, den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_colony_subject] zu beenden."
 colony_proposal_notification_name: "Unterwerfung verlangt"
 colony_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] fordert, dass wir uns unterwerfen und eine [concept_colony_subject] werden."
 colony_proposal_notification_effects_desc: "Wenn wir annehmen, werden wir ein Klientelland."
 colony_proposal_accepted_name: "Unterwerfung akzeptiert"
 colony_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] nahm die Forderung an, unsere [concept_colony_subject] zu werden."
 colony_proposal_declined_name: "Unterwerfung verweigert"
 colony_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] lehnte die Forderung ab, unsere [concept_colony_subject] zu werden."
 colony_proposal_third_party_accepted_name: "Land unterworfen"
 colony_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] willigte ein, eine [concept_colony_subject] [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."
 colony_proposal_third_party_declined_name: "Unterwerfung verweigert"
 colony_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] weigerte sich, eine [concept_colony_subject] [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."
 colony_effect_desc_global: "Wird eine [concept_colony_subject]"
 colony_effect_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] wird eine [COUNTRY.GetAdjectiveNoFlag|l]e [concept_colony_subject]"
 colony_effect_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] wird eine [concept_colony_subject] [COUNTRY.GetAltName('VON')]"
 colony_trigger_desc_global: "Ist eine [concept_colony_subject]"
 colony_trigger_false_desc_global: "Ist #b keine#! [concept_colony_subject]"
 colony_trigger_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist eine [COUNTRY.GetAdjectiveNoFlag|l]e [concept_colony_subject]"
 colony_trigger_false_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist #b keine#! [COUNTRY.GetAdjectiveNoFlag|l]e [concept_colony_subject]"
 colony_trigger_desc_third: "[COUNTRY.GetAltNameNoFlag('NOM')|U] ist eine [concept_colony_subject] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('VON'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('VON'))|U]"
 colony_trigger_false_desc_third: "[COUNTRY.GetAltNameNoFlag('NOM')|U] ist #b keine#! [concept_colony_subject] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('VON'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('VON'))|U]"
 become_colony: "Bitten, eine Kolonie zu werden"
 become_colony_action_name: "Bitten, eine [concept_colony_subject] zu werden"
 become_colony_desc: "Schafft eine [concept_subject_type]-Beziehung der Art „[concept_colony_subject]“ zwischen zwei [Concept('concept_country', 'Ländern')], wobei das vorschlagende Land das [concept_subject] wird."
 become_colony_proposal_notification_name: "Anfragen, eine [concept_colony_subject] zu werden"
 become_colony_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] will sich uns unterwerfen und unsere [concept_colony_subject] werden"
 become_colony_proposal_notification_effects_desc: "Wenn wir annehmen, wird diese Nation unser Klientelland."
 become_colony_proposal_accepted_name: "Anfrage für eine [concept_colony_subject] angenommen"
 become_colony_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] nahm unser Angebot an, seine [concept_colony_subject] zu werden."
 become_colony_proposal_declined_name: "Anfrage für eine [concept_colony_subject] abgelehnt"
 become_colony_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] lehnte unser Angebot ab, seine [concept_colony_subject] zu werden."
 become_colony_proposal_third_party_accepted_name: "Land unterworfen"
 become_colony_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] willigte ein, der Suzerän [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden, das nun seine [concept_colony_subject] ist."
 become_colony_proposal_third_party_declined_name: "Unterwerfung verweigert"
 become_colony_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] lehnte ab, der $suzerain$ [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."
 chartered_company: "Handelskompanie"
 chartered_company_action_name: "[concept_chartered_company]"
 chartered_company_action_propose_name: "Zu [concept_chartered_company] machen"
 chartered_company_action_break_name: "Unabhängigkeit gewähren"
 chartered_company_action_ask_to_break_name: "Unabhängigkeit fordern"
 chartered_company_desc: "Schafft eine [concept_subject_type]-Beziehung der Art „[concept_chartered_company]“ zwischen zwei [Concept('concept_country', 'Ländern')]."
 chartered_company_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')|U] ist eine [concept_chartered_company] [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('GEN')]."
 chartered_company_action_notification_name: "[concept_chartered_company] gefordert"
 chartered_company_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] fordert, dass wir uns ihm unterwerfen und eine [concept_chartered_company] werden."
 chartered_company_action_notification_break_name: "Unabhängigkeit gewährt"
 chartered_company_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unseren Status als [concept_chartered_company] beendet. Wir sind wieder unabhängig."
 chartered_company_proposal_notification_break_name: "Unabhängigkeit gefordert"
 chartered_company_proposal_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verlangt, dass wir den Status als [concept_chartered_company] beenden."
 chartered_company_proposal_notification_break_effects_desc: "Wenn wir annehmen, wird diese Nation wieder voll unabhängig."
 chartered_company_proposal_break_accepted_name: "Unabhängigkeit gewährt"
 chartered_company_proposal_break_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] nahm die Forderung an, unseren Status als [concept_chartered_company] zu beenden. Wir sind wieder unabhängig."
 chartered_company_proposal_break_declined_name: "Unabhängigkeit verweigert"
 chartered_company_proposal_break_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] lehnte die Forderung ab, unseren Status als [concept_chartered_company] zu beenden."
 chartered_company_action_third_party_notification_break_name: "Unabhängigkeit gewährt"
 chartered_company_action_third_party_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] beendete den Status [TARGET_COUNTRY.GetAltName('GEN')] als [concept_chartered_company], sodass diese Nation ihre volle Unabhängigkeit zurückhat."
 chartered_company_proposal_third_party_break_accepted_name: "Unabhängigkeit gewährt"
 chartered_company_proposal_third_party_break_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] beendete den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_chartered_company], sodass diese Nation ihre volle Unabhängigkeit zurückhat."
 chartered_company_proposal_third_party_break_declined_name: "Unabhängigkeit verweigert"
 chartered_company_proposal_third_party_break_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] weigerte sich, den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_chartered_company] zu beenden."
 chartered_company_proposal_notification_name: "Unterwerfung verlangt"
 chartered_company_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] fordert, dass wir uns unterwerfen und eine [concept_chartered_company] werden."
 chartered_company_proposal_notification_effects_desc: "Wenn wir annehmen, werden wir sein Klientelland."
 chartered_company_proposal_accepted_name: "Unterwerfung akzeptiert"
 chartered_company_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] nahm die Forderung an, unsere [concept_chartered_company] zu werden."
 chartered_company_proposal_declined_name: "Unterwerfung verweigert"
 chartered_company_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] lehnte die Forderung ab, unsere [concept_chartered_company] zu werden."
 chartered_company_proposal_third_party_accepted_name: "Land unterworfen"
 chartered_company_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] willigte ein, eine [concept_chartered_company] [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."
 chartered_company_proposal_third_party_declined_name: "Unterwerfung verweigert"
 chartered_company_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] lehnte ab, eine [concept_chartered_company] [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."
 chartered_company_effect_desc_global: "Wird eine [concept_chartered_company]"
 chartered_company_effect_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] wird eine [COUNTRY.GetAdjectiveNoFlag|l]e [concept_chartered_company]"
 chartered_company_effect_desc_third: "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM'))|U] wird eine [concept_chartered_company] [COUNTRY.GetAltName('VON')]"
 chartered_company_trigger_desc_global: "Ist eine [concept_chartered_company]"
 chartered_company_trigger_false_desc_global: "Ist #b keine#! [concept_chartered_company]"
 chartered_company_trigger_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist eine [COUNTRY.GetAdjectiveNoFlag|l]e [concept_chartered_company]"
 chartered_company_trigger_false_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist #b keine#! [COUNTRY.GetAdjectiveNoFlag|l]e [concept_chartered_company]"
 chartered_company_trigger_desc_third: "[COUNTRY.GetAltNameNoFlag('NOM')|U] ist eine [concept_chartered_company] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('VON'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('VON'))|U]"
 chartered_company_trigger_false_desc_third: "[COUNTRY.GetAltNameNoFlag('NOM')|U] ist #b keine#! [concept_chartered_company] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('VON'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('VON'))|U]"
 become_chartered_company: "Bitten, eine Handelskompanie zu werden"
 become_chartered_company_action_name: "Bitten, eine [concept_chartered_company] zu werden"
 become_chartered_company_desc: "Schafft eine [concept_subject_type]-Beziehung der Art „[concept_chartered_company]“ zwischen zwei [Concept('concept_country', 'Ländern')], wobei das vorschlagende Land das [concept_subject] wird."
 become_chartered_company_proposal_notification_name: "Anfragen, eine [concept_chartered_company] zu werden"
 become_chartered_company_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] will sich uns unterwerfen und unsere [concept_chartered_company] werden."
 become_chartered_company_proposal_notification_effects_desc: "Wenn wir annehmen, wird diese Nation unser Klientelland."
 become_chartered_company_proposal_accepted_name: "Bitte um Status als [concept_chartered_company] angenommen"
 become_chartered_company_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] akzeptierte unser Angebot, eine [concept_chartered_company] zu werden."
 become_chartered_company_proposal_declined_name: "Bitte um Status als [concept_chartered_company] abgelehnt"
 become_chartered_company_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] lehnte unser Angebot ab, eine [concept_chartered_company] zu werden."
 become_chartered_company_proposal_third_party_accepted_name: "Land unterworfen"
 become_chartered_company_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] willigte ein, der Suzerän [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden, das nun seine [concept_chartered_company] ist."
 become_chartered_company_proposal_third_party_declined_name: "Unterwerfung verweigert"
 become_chartered_company_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] lehnte ab, der $suzerain$ [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."
 violate_sovereignty: "Souveränität verletzen"
 violate_sovereignty_action_name: "Souveränität verletzen"
 violate_sovereignty_action_propose_name: "Souveränität verletzen"
 violate_sovereignty_wars: "Das wirkt sich auf folgende Kriege aus:"
 violate_sovereignty_countries: "Die folgenden Ländern könnten sich beteiligen, falls [Country.GetAltName('NOM')] sich weigert:"
 violate_sovereignty_desc: "Zwingt ein neutrales [concept_country], in einem [concept_war] Partei zu ergreifen, um seine Grenzen passieren zu dürfen. Weigert sich das Ziel, schließt es sich stattdessen der gegnerischen Seite an."
 violate_sovereignty_proposal_accepted_name: "[TARGET_COUNTRY.GetAltName('NOM')|U] nimmt unsere Forderungen an"
 violate_sovereignty_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat sich unserer Seite angeschlossen"
 violate_sovereignty_proposal_declined_name: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unser Ultimatum verweigert"
 violate_sovereignty_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat sich unseren Feinden angeschlossen!"
 violate_sovereignty_proposal_notification_name: "Souveränität verletzen"
 violate_sovereignty_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verlangt, dass wir uns seinen Kriegen anschließen."
 violate_sovereignty_proposal_notification_effects_desc: "Wenn wir annehmen, werden wir uns ihm in seinen Kriegen anschließen. Wenn wir uns weigern, schließen wir uns seinen Feinden an."
 violate_sovereignty_proposal_third_party_accepted_name: "[TARGET_COUNTRY.GetAltName('NOM')|U] akzeptiert die Forderungen [INITIATOR_COUNTRY.GetAltName('VON')]"
 violate_sovereignty_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist dem [concept_war] auf der Seite [INITIATOR_COUNTRY.GetAltName('VON')] beigetreten!"
 violate_sovereignty_proposal_third_party_declined_name: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat das [INITIATOR_COUNTRY.GetAdjective|l]e Ultimatum verweigert"
 violate_sovereignty_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist dem [concept_war] gegen [INITIATOR_COUNTRY.GetAltName('AKK')] beigetreten!"
 personal_union_trigger_desc_global: "Ist in einer [concept_personal_union]"
 personal_union_trigger_false_desc_global: "Ist #b nicht#! in einer [concept_personal_union]"
 personal_union_trigger_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist in einer [concept_personal_union] mit [COUNTRY.GetAltNameNoFlag('DAT')]"
 personal_union_trigger_false_desc_first: "[TARGET_COUNTRY.GetAltName('NOM')|U] ist #b nicht#! in einer [concept_personal_union] mit [COUNTRY.GetAltNameNoFlag('DAT')]"
 personal_union_trigger_desc_third: "[COUNTRY.GetAltNameNoFlag('NOM')|U] ist in einer [concept_personal_union] unter [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))|U]"
 personal_union_trigger_false_desc_third: "[COUNTRY.GetAltNameNoFlag('NOM')|U] ist in #b keiner#! [concept_personal_union] unter [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))|U][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))|U]"
 invite_to_power_bloc: "In unseren Machtblock einladen"
 invite_to_power_bloc_name: "In [concept_power_bloc] einladen"
 invite_to_power_bloc_action_name: "Eine Beitrittseinladung zu einem [concept_power_bloc]"
 invite_to_power_bloc_action_propose_name: "Eine Beitrittseinladung zu unserem [concept_power_bloc] schicken"
 invite_to_power_bloc_desc: "Eine Einladung an ein [concept_country], sich dem [concept_power_bloc] eines anderen [Concept('concept_country','Landes')] anzuschließen."
 invite_to_power_bloc_proposal_notification_name: "Beitrittseinladung zum [concept_power_bloc]"
 invite_to_power_bloc_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] möchte, dass wir dem Machtblock „[INITIATOR_COUNTRY.GetPowerBloc.GetName|U]“ beitreten."
 invite_to_power_bloc_proposal_notification_effects_desc: "$invite_to_power_bloc_desc$"
 invite_to_power_bloc_proposal_accepted_name: "[concept_power_bloc]-Einladung akzeptiert"
 invite_to_power_bloc_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] akzeptiert unsere Einladung, „[INITIATOR_COUNTRY.GetPowerBloc.GetName]“ beizutreten."
 invite_to_power_bloc_proposal_declined_name: "[concept_power_bloc]-Einladung abgelehnt"
 invite_to_power_bloc_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] lehnte unsere Einladung, „[INITIATOR_COUNTRY.GetPowerBloc.GetName]“ beizutreten, ab."
 invite_to_power_bloc_proposal_third_party_accepted_name: "$invite_to_power_bloc_proposal_accepted_name$"
 invite_to_power_bloc_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] akzeptiert die Einladung [INITIATOR_COUNTRY.GetAltName('VON')], „[INITIATOR_COUNTRY.GetPowerBloc.GetName]“ beizutreten."
 invite_to_power_bloc_proposal_third_party_declined_name: "$invite_to_power_bloc_proposal_declined_name$"
 invite_to_power_bloc_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] lehnte die Einladung [INITIATOR_COUNTRY.GetAltName('VON')] ab, „[INITIATOR_COUNTRY.GetPowerBloc.GetName]“ beizutreten."
 invite_to_power_bloc_recently_declined: "[SCOPE.sCountry('target_country').GetAltName('NOM')] hat vor zu kurzer Zeit eine Einladung abgelehnt, unserem [concept_power_bloc] beizutreten. Eine weitere Einladung kann am [GetPlayer.GetLastCatalystExpiryDate(SCOPE.sCountry('target_country'),'catalyst_declined_bloc_invite')] geschickt werden."
 military_assistance_recently_declined: "[SCOPE.sCountry('target_country').GetAltName('NOM')|U] hat unsere Bitte um [concept_military_assistance] vor zu kurzer Zeit abgelehnt. Eine weitere Bitte kann erst am [GetPlayer.GetLastCatalystExpiryDate(SCOPE.sCountry('target_country'),'catalyst_declined_military_assistance')] geschickt werden."
 #join_power_bloc: "Join Power Bloc"
 join_power_bloc_name: "[concept_power_bloc] beitreten"
 join_power_bloc_action_name: "Eine Bitte, einem [concept_power_bloc] beitreten zu dürfen"
 join_power_bloc_action_propose_name: "Eine Bitte schicken, einem [concept_power_bloc] beitreten zu dürfen"
 #join_power_bloc_desc: "A request for one [concept_country] to join another [Concept('concept_country','$concept_country_possessive$')] [concept_power_bloc]."
 join_power_bloc_proposal_notification_name: "Bitte, einem [concept_power_bloc] beitreten zu dürfen"
 join_power_bloc_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] möchte „[TARGET_COUNTRY.GetPowerBloc.GetName|U]“ beitreten."
 join_power_bloc_proposal_notification_effects_desc: "$join_power_bloc_desc$"
 join_power_bloc_proposal_accepted_name: "[concept_power_bloc]-Beitrittsanfrage akzeptiert"
 join_power_bloc_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] akzeptierte unsere Einladung, „[TARGET_COUNTRY.GetPowerBloc.GetName]“ beizutreten."
 join_power_bloc_proposal_declined_name: "[concept_power_bloc]-Beitrittsanfrage abgelehnt"
 join_power_bloc_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] lehnte unsere Einladung ab, „[TARGET_COUNTRY.GetPowerBloc.GetName]“ beizutreten."
 join_power_bloc_proposal_third_party_accepted_name: "$join_power_bloc_proposal_declined_name$"
 join_power_bloc_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] nahm die Einladung [INITIATOR_COUNTRY.GetAltName('VON')] an, „[TARGET_COUNTRY.GetPowerBloc.GetName]“ beizutreten."
 join_power_bloc_proposal_third_party_declined_name: "$join_power_bloc_proposal_accepted_name$"
 join_power_bloc_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] lehnte eine Einladung [INITIATOR_COUNTRY.GetAltName('VON')] ab, „[TARGET_COUNTRY.GetPowerBloc.GetName]“ beizutreten."
 #host_power_bloc_embassy: "Power Bloc Embassy"
 host_power_bloc_embassy_name: "[concept_power_bloc]-Botschaft beherbergen"
 host_power_bloc_embassy_action_name: "Ein Angebot, die Botschaft eines [Concept('concept_power_bloc','Machtblocks')] zu beherbergen"
 host_power_bloc_embassy_action_propose_name: "Botschaft eines [Concept('concept_power_bloc','Machtblocks')] beherbergen"
 #host_power_bloc_embassy_desc: "An offer for one [concept_country] to host an embassy for a [concept_power_bloc]."
 host_power_bloc_embassy_proposal_notification_name: "Anbieten, die Botschaft eines [Concept('concept_power_bloc','Machtblocks')] zu beherbergen"
 host_power_bloc_embassy_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] wünscht die Botschaft von „[TARGET_COUNTRY.GetPowerBloc.GetName]“ zu beherbergen."
 host_power_bloc_embassy_proposal_notification_effects_desc: "$host_power_bloc_embassy_desc$"
 host_power_bloc_embassy_proposal_accepted_name: "[concept_power_bloc]-Botschaftsangebot akzeptiert"
 host_power_bloc_embassy_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unser Angebot akzeptiert, die Botschaft von „[TARGET_COUNTRY.GetPowerBloc.GetName]“ zu beherbergen."
 host_power_bloc_embassy_proposal_declined_name: "[concept_power_bloc]-Botschaftsangebot abgelehnt"
 host_power_bloc_embassy_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unser Angebot abgelehnt, die Botschaft von „[TARGET_COUNTRY.GetPowerBloc.GetName]“ zu beherbergen."
 host_power_bloc_embassy_proposal_third_party_accepted_name: "$host_power_bloc_embassy_proposal_accepted_name$"
 host_power_bloc_embassy_proposal_third_party_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat das Angebot [INITIATOR_COUNTRY.GetAltName('VON')] akzeptiert, die Botschaft von „[TARGET_COUNTRY.GetPowerBloc.GetName]“ zu beherbergen."
 host_power_bloc_embassy_proposal_third_party_declined_name: "$host_power_bloc_embassy_proposal_declined_name$"
 host_power_bloc_embassy_proposal_third_party_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')] hat das Angebot [INITIATOR_COUNTRY.GetAltName('VON')] abgelehnt, die Botschaft von „[TARGET_COUNTRY.GetPowerBloc.GetName]“ zu beherbergen."
 host_power_bloc_embassy_action_break_name: "[concept_power_bloc]-Botschaft widerrufen"
 host_power_bloc_embassy_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] hat sich verpflichtet, die „[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetPowerBloc.GetName]“-Botschaft zu beherbergen."
 host_power_bloc_embassy_action_notification_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] widerruft Botschaft"
 host_power_bloc_embassy_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] beherbergt nicht mehr unsere Botschaft."
 host_power_bloc_embassy_action_notification_third_party_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] widerruft Botschaft"
 host_power_bloc_embassy_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] beherbergt nicht mehr die „[TARGET_COUNTRY.GetPowerBloc.GetName]“-Botschaft."
 request_power_bloc_embassy: "Machtblockbotschaftsanfrage"
 request_power_bloc_embassy_desc: "Eine [concept_power_bloc]-Botschaft anfragen"
 request_power_bloc_embassy_action_name: "Machtblockbotschaft anfragen"
 request_power_bloc_embassy_proposal_accepted_name: "[concept_power_bloc]-Botschaftsanfrage akzeptiert"
 request_power_bloc_embassy_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')] willigte ein, eine unserer Botschaften zu beherbergen."
 request_power_bloc_embassy_proposal_declined_name: "[concept_power_bloc]-Botschaftsanfrage abgelehnt"
 request_power_bloc_embassy_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')] lehnte ab, eine unserer Botschaften zu beherbergen."
 request_power_bloc_embassy_proposal_notification_name: "Machtblockbotschaft angefragt"
 request_power_bloc_embassy_proposal_notification_desc: "„[INITIATOR_COUNTRY.GetPowerBloc.GetName|U]“ fragte an, ob wir eine Botschaft beherbergen können"
 da_decrease_autonomy_action_name: "Autonomie verringern"
 da_decrease_autonomy: "Autonomie verringern"
 da_decrease_autonomy_desc: "Verringert die [concept_autonomy] eines [Concept('concept_subject', 'Klientellands')]."
 da_decrease_autonomy_action_notification_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verringert die Autonomie [TARGET_COUNTRY.GetAltName('VON')]"
 da_decrease_autonomy_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verringert die [concept_autonomy] des eigenen Klientellands „[TARGET_COUNTRY.GetAltName('NOM')|U]“"
 da_decrease_autonomy_action_notification_third_party_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verringerte [concept_autonomy] in einem [concept_subject]"
 da_decrease_autonomy_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unsere [concept_autonomy] verringert."
 da_increase_autonomy_action_name: "Autonomie erhöhen"
 da_increase_autonomy: "Autonomie erhöhen"
 da_increase_autonomy_desc: "Erhöht die [concept_autonomy] eines [Concept('concept_subject', 'Klientellands')]."
 da_increase_autonomy_of_self_action_name: "$da_increase_autonomy_action_name$"
 da_increase_autonomy_of_self: "$da_increase_autonomy$"
 da_increase_autonomy_of_self_desc: "$da_increase_autonomy_desc$"
 da_increase_autonomy_of_self_proposal_notification_name: "Bitte um erhöhte Autonomie"
 da_increase_autonomy_of_self_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] bittet um ein größeres Maß an [concept_autonomy]."
 da_increase_autonomy_of_self_proposal_accepted_name: "Größere Autonomie angenommen"
 da_increase_autonomy_of_self_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unsere Bitte um größere [concept_autonomy] angenommen. Wir gelten jetzt als [INITIATOR_COUNTRY.GetSubjectType.GetHigherAutonomySubjectType(INITIATOR_COUNTRY.Self).GetName]."
 da_increase_autonomy_of_self_proposal_declined_name: "Größere Autonomie verweigert"
 da_increase_autonomy_of_self_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] lehnte unseren Antrag auf größere [concept_autonomy] ab. Unser [concept_liberty_desire] ist daraufhin gestiegen."
 da_increase_autonomy_of_self_proposal_third_party_accepted_name: "[INITIATOR_COUNTRY.GetAdjectiveNoFormatting|U]e Autonomie gewährt"
 da_increase_autonomy_of_self_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] wurde vom eigenen [concept_overlord] ([TARGET_COUNTRY.GetAltName('NOM')]) größere [concept_autonomy] gewährt und gilt nun als [INITIATOR_COUNTRY.GetSubjectType.GetHigherAutonomySubjectType(INITIATOR_COUNTRY.Self).GetName]."
 da_increase_autonomy_of_self_proposal_third_party_declined_name: "[INITIATOR_COUNTRY.GetAdjectiveNoFormatting|U]e Autonomie verweigert"
 da_increase_autonomy_of_self_proposal_third_party_declined_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] wurde vom eigenen [concept_overlord] ([TARGET_COUNTRY.GetAltName('NOM')]) größere [concept_autonomy] verweigert."
 da_increase_autonomy_of_subject_action_name: "$da_increase_autonomy_action_name$"
 da_increase_autonomy_of_subject: "$da_increase_autonomy$"
 da_increase_autonomy_of_subject_desc: "$da_increase_autonomy_desc$"
 da_increase_autonomy_of_subject_action_notification_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] erhöht die Autonomie [TARGET_COUNTRY.GetAltName('VON')]"
 da_increase_autonomy_of_subject_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] erhöht die [concept_autonomy] des eigenen Klientellands „[TARGET_COUNTRY.GetAltName('NOM')|U]“"
 da_increase_autonomy_of_subject_action_notification_third_party_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] erhöht die Autonomie in einem [concept_subject]"
 da_increase_autonomy_of_subject_action_notification_third_party_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unsere [concept_autonomy] erhöht."
 #support_independence: "Support Independence"
 support_independence_name: "Unabhängigkeit unterstützen"
 support_independence_action_break_name: "Unabhängigkeitsunterstützung beenden"
 support_independence_action_name: "Unabhängigkeitsunterstützung beenden"
 support_independence_action_propose_name: "Unabhängigkeitsunterstützung anbieten"
 support_independence_action_notification_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] unterstützt [TARGET_COUNTRY.GetAdjective|l]e Unabhängigkeit"
 support_independence_notification_name: "[TARGET_COUNTRY.GetAdjective|U]e Streben nach Unabhängigkeit unterstützt"
 support_independence_action_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] unterstützt die [TARGET_COUNTRY.GetAdjective|l]e Unabhängigkeit, was es wahrscheinlicher macht, dass [TARGET_COUNTRY.GetAltName('NOM')] die eigene Unabhängigkeit erklärt."
 #support_independence_desc: "Commits to supporting a [concept_subject] in a [concept_diplomatic_demand] for independence from its [concept_overlord]."
 support_independence_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] hat sich verpflichtet, [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('AKK')] in Sachen Unabhängigkeit zu unterstützen."
 support_independence_proposal_notification_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] will unsere Unabhängigkeit unterstützen"
 support_independence_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] möchte sich für unsere Sache einsetzen: Man wird unsere Forderung nach Unabhängigkeit unterstützen, was es wahrscheinlicher macht, dass unser Suzerän friedlich unseren Forderungen zustimmt."
 support_independence_proposal_notification_effects_desc: "Wenn wir annehmen, wird [INITIATOR_COUNTRY.GetAltName('NOM')|U] unser Streben nach Unabhängigkeit unterstützen."
 support_independence_proposal_accepted_name: "[TARGET_COUNTRY.GetAltName('NOM')|U] nimmt unser Angebot an"
 support_independence_proposal_accepted_desc: "Wir unterstützen jetzt das [TARGET_COUNTRY.GetAdjective|l]e Streben nach Unabhängigkeit"
 support_independence_proposal_declined_name: "[TARGET_COUNTRY.GetAltName('NOM')|U] lehnt unser Angebot ab"
 support_independence_proposal_declined_desc: "Die [TARGET_COUNTRY.GetAdjective|l]e Seite hat unser Angebot abgelehnt, ihre Unabhängigkeit zu unterstützen."
 support_independence_action_notification_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] zieht Unterstützung zurück."
 support_independence_action_notification_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] wird nicht mehr unser Streben nach Unabhängigkeit unterstützen."
 support_independence_proposal_third_party_accepted_name: "[TARGET_COUNTRY.GetAdjective|U]e Unabhängigkeit unterstützt"
 support_independence_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] unterstützt die Unabhängigkeit [TARGET_COUNTRY.GetAltName('VON')]."
 support_independence_proposal_third_party_declined_name: "[TARGET_COUNTRY.GetAltName('NOM')|U] lehnt unser Unterstützungsangebot ab"
 support_independence_proposal_third_party_declined_desc: "Das [INITIATOR_COUNTRY.GetAdjective|l]e Angebot, die Unabhängigkeit [TARGET_COUNTRY.GetAltName('VON')] zu unterstützen, wurde abgelehnt."
 support_independence_action_notification_third_party_break_name: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] zieht Unterstützung zurück."
 support_independence_action_notification_third_party_break_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] unterstützt nicht mehr die Unabhängigkeitsbewegung [TARGET_COUNTRY.GetAltName('VON')]."
 request_support_independence: "„$support_independence$“ anfragen"
 request_support_independence_action_name: "$request_support_independence$"
 request_support_independence_action_propose_name: "$request_support_independence$"
 request_support_independence_desc: "Erbitten, dass ein [concept_country] einem [concept_subject] zu Hilfe kommt, wenn dieses rebelliert oder vom eigenen [concept_overlord] annektiert wird."
 request_support_independence_proposal_notification_name: "$request_support_independence$"
 request_support_independence_proposal_notification_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] bittet darum, dass wir ihre Unabhängigkeit unterstützen."
 request_support_independence_proposal_accepted_name: "Angenommen: $request_support_independence$"
 request_support_independence_proposal_accepted_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] unterstützt jetzt unsere Unabhängigkeit und wird uns beistehen, wenn wir rebellieren oder von unserem [concept_overlord] annektiert werden."
 request_support_independence_proposal_declined_name: "Abgelehnt: $request_support_independence$"
 request_support_independence_proposal_declined_desc: "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unsere Anfrage zur Unterstützung unserer Unabhängigkeit abgelehnt."
 request_support_independence_proposal_notification_effects_desc: "Wenn wir annehmen, könnten sie uns zu Hilfe rufen, wenn sie rebellieren oder von ihrem [concept_overlord] annektiert werden."
 request_support_independence_proposal_third_party_accepted_name: "Gewährt: $request_support_independence$"
 request_support_independence_proposal_third_party_accepted_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] unterstützt jetzt die Unabhängigkeit [TARGET_COUNTRY.GetAltName('VON')]."
 request_support_independence_proposal_third_party_declined_name: "Abgelehnt: $request_support_independence$"
 request_support_independence_proposal_third_party_declined_desc: "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat abgelehnt, die Unabhängigkeit [TARGET_COUNTRY.GetAltName('VON')] zu unterstützen."
 ADD_LIBERTY_DESIRE_TO_ALL_SUBJECTS: "Erhöht [concept_liberty_desire] aller anderen direkten [Concept('concept_subject', 'Klientelländer')] um [SCOPE.ScriptValue('decrease_autonomy_liberty_desire_to_add')|bo0]"
 SELECT_BINDING_PERIOD: "[concept_binding_period] auswählen"
 BINDING_PERIOD_BUTTON_TEXT_5_YEARS: "#b 5 Jahre#!"
 BINDING_PERIOD_BUTTON_TEXT_10_YEARS: "#b 10 Jahre#!"
 BINDING_PERIOD_BUTTON_TEXT_15_YEARS: "#b 15 Jahre#!"
 BINDING_PERIOD_BUTTON_TEXT_20_YEARS: "#b 20 Jahre#!"
 BINDING_PERIOD_BUTTON_TEXT_25_YEARS: "#b 25 Jahre#!"
 BINDING_PERIOD_BUTTON_TEXT_50_YEARS: "#b 50 Jahre#!"
 BINDING_PERIOD_BUTTON_TEXT_99_YEARS: "#b 99 Jahre#!"
 money_transfer: "Geldübereignung"
 money_transfer_desc: ""
 money_transfer_effects_desc: "• Sorgt für einen Handel zwischen zwei [Concept('concept_country', '$concept_countries$n')], bei dem ein $concept_country$ einwilligt, wöchentlich eine feste Summe [concept_money] an das andere $concept_country$ zu zahlen."
 money_transfer_article_short_desc: "[SOURCE_COUNTRY.GetAltNameNoFormatting('NOM')] übereignet wöchentlich $concept_money$ an [TARGET_COUNTRY.GetAltNameNoFormatting('AKK')]"
 TREATY_DRAFT_ARTICLE_FLAG_IS_MONEY_TRANSFER_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] übereignet @money!#v [ArticleDraft.GetQuantity|D]#! wöchentlich an [TARGET_COUNTRY.GetAltNameNoFormatting('AKK')]"
 TREATY_ARTICLE_FLAG_IS_MONEY_TRANSFER_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] übereignet @money!#v [Article.GetQuantity|D]#! wöchentlich an [TARGET_COUNTRY.GetAltNameNoFormatting('AKK')]"
 state_transfer: "Staatsübereignung"
 state_transfer_desc: ""
 state_transfer_effects_desc: "• Sorgt für eine Vereinbarung zwischen zwei [Concept('concept_country', '$concept_countries$n')], im Zuge derer das eine $concept_country$ offiziell einen [concept_state] an das andere $concept_country$ überträgt."
 state_transfer_article_short_desc: "[SOURCE_COUNTRY.GetAltNameNoFormatting('NOM')|U] übereignet einen $concept_state$ an [TARGET_COUNTRY.GetAltNameNoFormatting('AKK')]"
 TREATY_DRAFT_ARTICLE_FLAG_CAUSES_STATE_TRANSFER_EFFECT: "• „[SelectLocalization(ArticleDraft.HasInputValue('state'), ArticleDraft.GetState.GetName, 'NONE')|U]“ wird an [TARGET_COUNTRY.GetAltName('AKK')] übereignet"
 TREATY_ARTICLE_FLAG_CAUSES_STATE_TRANSFER_EFFECT: "• „[Article.GetState.GetName|U]“ wurde an [TARGET_COUNTRY.GetAltName('AKK')] übereignet"
 goods_transfer: "Warenübereignung"
 goods_transfer_desc: ""
 goods_transfer_effects_desc: "• Sorgt für einen Handel zwischen zwei [Concept('concept_country', '$concept_countries$n')], bei dem das eine $concept_country$ einwilligt, wöchentlich eine feste Summe an [Concept('concept_good', '$concept_goods$')] an das andere $concept_country$ zu zahlen."
 goods_transfer_article_short_desc: "[SOURCE_COUNTRY.GetAltNameNoFormatting('NOM')|U] übereignet wöchentlich $concept_goods$ an [TARGET_COUNTRY.GetAltNameNoFormatting('AKK')]"
 TREATY_DRAFT_ARTICLE_FLAG_IS_GOODS_TRANSFER_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] übereignet [AddTextIf(ArticleDraft.GetGoods.IsValid, ArticleDraft.GetGoods.GetTextIcon)]#v [ArticleDraft.GetQuantity|D]#! [AddTextIf(ArticleDraft.GetGoods.IsValid, ArticleDraft.GetGoods.GetName)][AddLocalizationIf(Not(ArticleDraft.GetGoods.IsValid), 'concept_goods')] wöchentlich an [TARGET_COUNTRY.GetAltName('AKK')]"
 TREATY_ARTICLE_FLAG_IS_GOODS_TRANSFER_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] übereignet [AddTextIf(Article.GetGoods.IsValid, Article.GetGoods.GetTextIcon)]#v [Article.GetQuantity|D]#! [AddTextIf(Article.GetGoods.IsValid, Article.GetGoods.GetName)][AddLocalizationIf(Not(Article.GetGoods.IsValid), 'concept_goods')] wöchentlich an [TARGET_COUNTRY.GetAltName('AKK')]"
 military_access: "Militärischer Zugang"
 military_access_desc: ""
 military_access_effects_desc: "• Sorgt für eine militärische Vereinbarung zwischen zwei [Concept('concept_country', '$concept_countries$n')], im Zuge derer das eine $concept_country$ die eigenen [Concept('concept_army', '$concept_armies$')] durch das Territorium des anderen $concept_country$s marschieren lassen kann."
 military_access_article_short_desc: "[TARGET_COUNTRY.GetAltNameNoFormatting('NOM')] kann mit $concept_armies$ durch [SOURCE_COUNTRY.GetAltNameNoFormatting('AKK')] marschieren"
 TREATY_DRAFT_ARTICLE_FLAG_IS_MILITARY_ACCESS_EFFECT: "• [TARGET_COUNTRY.GetAltName('NOM')] kann mit [Concept('concept_army', '$concept_armies$')] durch [SOURCE_COUNTRY.GetAltName('AKK')] marschieren"
 TREATY_ARTICLE_FLAG_IS_MILITARY_ACCESS_EFFECT: "• [TARGET_COUNTRY.GetAltName('NOM')] kann mit [Concept('concept_army', '$concept_armies$')] durch [SOURCE_COUNTRY.GetAltName('AKK')] marschieren"
 offer_embassy: "Botschaftsangebot"
 offer_embassy_desc: ""
 offer_embassy_effects_desc: "• Sorgt für eine Vereinbarung zwischen zwei [Concept('concept_country', '$concept_countries$n')], im Zuge derer ein $concept_country$ formell eine Botschaft in einer [concept_unrecognized_power] einrichtet."
 offer_embassy_article_short_desc: "• [TARGET_COUNTRY.GetAltNameNoFormatting('NOM')|U] richtet eine Botschaft [SOURCE_COUNTRY.GetAltNameNoFormatting('IN')] ein"
 TREATY_DRAFT_ARTICLE_FLAG_IS_OFFER_EMBASSY_EFFECT: "• [TARGET_COUNTRY.GetAltName('NOM')|U] richtet eine Botschaft [SOURCE_COUNTRY.GetAltName('IN')] ein"
 TREATY_ARTICLE_FLAG_IS_OFFER_EMBASSY_EFFECT: "• [TARGET_COUNTRY.GetAltName('NOM')|U] richtete eine Botschaft [SOURCE_COUNTRY.GetAltName('IN')] ein"
 treaty_port: "Vertragshafen"
 treaty_port_desc: ""
 treaty_port_effects_desc: "• Sorgt für eine Vereinbarung zwischen zwei [Concept('concept_country', '$concept_countries$n')], im Zuge derer das eine $concept_country$ offiziell einen [concept_treaty_port] an das andere $concept_country$ überträgt."
 treaty_port_article_short_desc: "[SOURCE_COUNTRY.GetAltNameNoFormatting('NOM')|U] gibt einen $concept_treaty_port$ an [TARGET_COUNTRY.GetAltNameNoFormatting('AKK')]"
 TREATY_DRAFT_ARTICLE_FLAG_IS_TREATY_PORT_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] gibt „[SelectLocalization(ArticleDraft.HasInputValue('state'), ArticleDraft.GetState.GetName, 'NONE')]“ als [concept_treaty_port] an [TARGET_COUNTRY.GetAltName('AKK')] ab"
 TREATY_ARTICLE_FLAG_IS_TREATY_PORT_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] gab „[Article.GetState.GetName]“ als [concept_treaty_port] an [TARGET_COUNTRY.GetAltName('AKK')] ab"
 non_colonization_agreement: "Kolonisierungsausschlussvereinbarung"
 non_colonization_agreement_desc: ""
 non_colonization_agreement_effects_desc: "• Sorgt für eine Vereinbarung zwischen zwei [Concept('concept_country', '$concept_countries$n')], im Zuge derer ein $concept_country$ nicht in der abgesprochenen [concept_strategic_region] [Concept('concept_colony', '$concept_colonize$')|l] darf."
 non_colonization_agreement_article_short_desc: "[SOURCE_COUNTRY.GetAltNameNoFormatting('NOM')|U] willigt ein, eine $concept_strategic_region$ #bold_black nicht#! zu $concept_colonize$"
 TREATY_DRAFT_ARTICLE_FLAG_IS_NON_COLONIZATION_AGREEMENT_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] willigt ein, „[SelectLocalization(ArticleDraft.GetStrategicRegion.IsValid , 'TREATY_DRAFT_ARTICLE_STRATEGIC_REGION_NAME', 'TREATY_ARTICLE_GENERAL_STRATEGIC_REGION_NAME')]“ #b nicht#! zu [Concept('concept_colony', '$concept_colonize$')|l] "
 TREATY_ARTICLE_FLAG_IS_NON_COLONIZATION_AGREEMENT_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] willigt ein, „[SelectLocalization(Article.GetStrategicRegion.IsValid , 'TREATY_DRAFT_ARTICLE_STRATEGIC_REGION_NAME', 'TREATY_ARTICLE_GENERAL_STRATEGIC_REGION_NAME')]“ #b nicht#! zu [Concept('concept_colony', '$concept_colonize$')|l]"
 TREATY_DRAFT_ARTICLE_STRATEGIC_REGION_NAME: "[ArticleDraft.GetStrategicRegion.GetName]"
 TREATY_ARTICLE_STRATEGIC_REGION_NAME: "[Article.GetStrategicRegion.GetName]"
 TREATY_ARTICLE_GENERAL_STRATEGIC_REGION_NAME: "eine bestimmte [concept_strategic_region]"
 prohibit_trade_with_global_market: "Weltmarkthandelsverbot"
 prohibit_trade_with_global_market_desc: ""
 prohibit_trade_with_global_market_effects_desc: "• Das [concept_country] darf eine bestimmte [concept_good] nicht mit dem [concept_world_market] handeln"
 prohibit_trade_with_global_market_article_short_desc: "[SOURCE_COUNTRY.GetAltNameNoFormatting('NOM')|U] wird eine $concept_good$ #bold_black nicht#! auf dem $concept_world_market$ handeln"
 TREATY_DRAFT_ARTICLE_FLAG_IS_PROHIBIT_GOODS_TRADE_WITH_WORLD_MARKET_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] wird #b keine#! [AddTextIf(ArticleDraft.GetGoods.IsValid, ArticleDraft.GetGoods.GetTextIcon)] [AddTextIf(ArticleDraft.GetGoods.IsValid, ArticleDraft.GetGoods.GetName)][AddLocalizationIf(Not(ArticleDraft.GetGoods.IsValid), 'concept_goods')] mit dem [concept_world_market] handeln"
 TREATY_ARTICLE_FLAG_IS_PROHIBIT_GOODS_TRADE_WITH_WORLD_MARKET_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] wird #b keine#! [AddTextIf(Article.GetGoods.IsValid, Article.GetGoods.GetTextIcon)] [AddTextIf(Article.GetGoods.IsValid, Article.GetGoods.GetName)][AddLocalizationIf(Not(Article.GetGoods.IsValid), 'concept_goods')] mit dem [concept_world_market] handeln"
 acquire_monopoly_for_company: "Kompaniemonopol"
 acquire_monopoly_for_company_desc: ""
 acquire_monopoly_for_company_effects_desc: "• Sorgt für eine Vereinbarung zwischen zwei [Concept('concept_country', '$concept_countries$n')], die ein [concept_company_monopoly] auf ein [concept_building] im anderen $concept_country$ einrichtet."
 acquire_monopoly_for_company_article_short_desc: "[SOURCE_COUNTRY.GetAltNameNoFormatting('NOM')|U] gewährt [TARGET_COUNTRY.GetAltNameNoFormatting('DAT')] ein $concept_company_monopoly$"
 TREATY_DRAFT_ARTICLE_FLAG_IS_MONOPOLY_FOR_COMPANY_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] gewährt der [TARGET_COUNTRY.GetAdjective|l]en [concept_company] [SelectLocalization(ArticleDraft.GetCompany.IsValid, ArticleDraft.GetCompany.GetName, 'NONE')] ein [concept_company_monopoly] auf „[SelectLocalization(ArticleDraft.HasInputValue('building_type'), ArticleDraft.GetBuildingType.GetName, 'concept_building_industry')]“ [SOURCE_COUNTRY.GetAltName('IN')]"
 TREATY_ARTICLE_FLAG_IS_MONOPOLY_FOR_COMPANY_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] gewährte der [TARGET_COUNTRY.GetAdjective|l]en [concept_company] [Article.GetCompany.GetName] ein [concept_company_monopoly] auf „[Article.GetBuildingType.GetName]“ [SOURCE_COUNTRY.GetAltName('IN')]"
 enforce_embargo: "Embargodurchsetzung"
 enforce_embargo_desc: ""
 enforce_embargo_effects_desc: "• Sorgt für eine Vereinbarung zwischen zwei [Concept('concept_country', '$concept_countries$n')], die das eine $concept_country$ zwingt, eine bestimmte [concept_good] nicht mit einem anderen $concept_country$ zu handeln."
 enforce_embargo_article_short_desc: "[SOURCE_COUNTRY.GetAltNameNoFormatting('NOM')|U] wird eine $concept_good$ #bold_black nicht#! mit einem dritten $concept_country$ handeln"
 TREATY_DRAFT_ARTICLE_FLAG_IS_ENFORCE_EMBARGO_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] wird #b keine#! [AddTextIf(ArticleDraft.GetGoods.IsValid, ArticleDraft.GetGoods.GetTextIcon)] [AddTextIf(ArticleDraft.GetGoods.IsValid, ArticleDraft.GetGoods.GetName)][AddLocalizationIf(Not(ArticleDraft.GetGoods.IsValid), 'concept_goods')] mit [ArticleDraft.GetCountry.GetAltName('DAT')] handeln"
 TREATY_ARTICLE_FLAG_IS_ENFORCE_EMBARGO_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] wird #b keine#! [AddTextIf(Article.GetGoods.IsValid, Article.GetGoods.GetTextIcon)] [AddTextIf(Article.GetGoods.IsValid, Article.GetGoods.GetName)][AddLocalizationIf(Not(Article.GetGoods.IsValid), 'concept_goods')] mit [ArticleDraft.GetCountry.GetAltName('DAT')] handeln"
 law_commitment: "Gesetzesverpflichtung"
 law_commitment_desc: ""
 law_commitment_effects_desc: "• Sorgt für eine Vereinbarung zwischen zwei [Concept('concept_country', '$concept_countries$n')], im Zuge derer ein $concept_country$ sich verpflichtet, ein bestimmtes [concept_law] zu beschließen oder zu behalten."
 law_commitment_article_short_desc: "[SOURCE_COUNTRY.GetAltNameNoFormatting('NOM')|U] verpflichtet sich, ein $concept_law$ zu erlassen"
 TREATY_DRAFT_ARTICLE_FLAG_IS_LAW_COMMITMENT_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] verpflichtet sich, „[SelectLocalization(ArticleDraft.HasInputValue('law_type'), ArticleDraft.GetLawType.GetName, 'NONE')]“ zu erlassen"
 TREATY_ARTICLE_FLAG_IS_LAW_COMMITMENT_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] verpflichtete sich, „[Article.GetLawType.GetName]“ zu erlassen"
 no_tariffs: "Zollfreiheit"
 no_tariffs_desc: ""
 no_tariffs_effects_desc: "• Sorgt für eine Vereinbarung zwischen zwei [Concept('concept_country', '$concept_countries$n')], im Zuge derer ein $concept_country$ sich verpflichtet, keine weiteren [concept_tariffs] auf eine bestimmte [concept_good] zu erheben."
 no_tariffs_article_short_desc: "[SOURCE_COUNTRY.GetAltNameNoFormatting('NOM')|U] wird #bold_black keine#! $concept_tariffs$ auf eine $concept_good$ erheben"
 TREATY_DRAFT_ARTICLE_FLAG_IS_NO_TARIFFS_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] wird #b keine#! [concept_tariffs] auf [AddTextIf(ArticleDraft.GetGoods.IsValid, ArticleDraft.GetGoods.GetTextIcon)] „[AddTextIf(ArticleDraft.GetGoods.IsValid, ArticleDraft.GetGoods.GetName)][AddLocalizationIf(Not(ArticleDraft.GetGoods.IsValid), 'concept_goods')]“ erheben"
 TREATY_ARTICLE_FLAG_IS_NO_TARIFFS_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] wird #b keine#! [concept_tariffs] auf [AddTextIf(Article.GetGoods.IsValid, Article.GetGoods.GetTextIcon)] „[AddTextIf(Article.GetGoods.IsValid, Article.GetGoods.GetName)][AddLocalizationIf(Not(Article.GetGoods.IsValid), 'concept_goods')]“ erheben"
 transit_rights: "Durchreiserechte"
 transit_rights_desc: ""
 transit_rights_effects_desc: "• Sorgt für eine Vereinbarung zwischen zwei [Concept('concept_country', '$concept_countries$n')], im Zuge derer das eine $concept_country$ das Recht erhält, über den [Concept('concept_world_market_hub', '$concept_world_market_hubs$')] des anderen $concept_country$s zu [Concept('concept_trade', 'handeln')]."
 transit_rights_article_short_desc: "[TARGET_COUNTRY.GetAltNameNoFormatting('NOM')] kann durch [SOURCE_COUNTRY.GetAltNameNoFormatting('AKK')] handeln"
 TREATY_DRAFT_ARTICLE_FLAG_IS_TRANSIT_RIGHTS_EFFECT: "• [TARGET_COUNTRY.GetAltName('NOM')] kann durch [SOURCE_COUNTRY.GetAltName('AKK')] handeln"
 TREATY_ARTICLE_FLAG_IS_TRANSIT_RIGHTS_EFFECT: "• [TARGET_COUNTRY.GetAltName('NOM')] kann durch [SOURCE_COUNTRY.GetAltName('AKK')] handeln"
 no_subventions: "Keine Subventionen"
 no_subventions_desc: ""
 no_subventions_effects_desc: "• Sorgt für eine Vereinbarung, im Zuge derer ein [concept_country] einwilligt, keine [concept_subventions] für eine bestimmte [concept_good] zu gewähren."
 no_subventions_article_short_desc: "[SOURCE_COUNTRY.GetAltNameNoFormatting('NOM')|U] wird #bold_black keine#! $concept_subventions$ auf eine $concept_good$ gewähren"
 TREATY_DRAFT_ARTICLE_FLAG_IS_NO_SUBVENTIONS_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] wird #b keine#! [concept_subventions] für [AddTextIf(ArticleDraft.GetGoods.IsValid, ArticleDraft.GetGoods.GetTextIcon)] „[AddTextIf(ArticleDraft.GetGoods.IsValid, ArticleDraft.GetGoods.GetName)][AddLocalizationIf(Not(ArticleDraft.GetGoods.IsValid), 'concept_goods')]“ gewähren"
 TREATY_ARTICLE_FLAG_IS_NO_SUBVENTIONS_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] wird #b keine#! [concept_subventions] für [AddTextIf(Article.GetGoods.IsValid, Article.GetGoods.GetTextIcon)] „[AddTextIf(Article.GetGoods.IsValid, Article.GetGoods.GetName)][AddLocalizationIf(Not(Article.GetGoods.IsValid), 'concept_goods')]“ gewähren"
 trade_privilege: "Handelsprivilegien"
 trade_privilege_desc: ""
 trade_privilege_effects_desc: "• Sorgt für [Concept('concept_trade_privilege','$concept_trade_privileges$')] zwischen zwei [Concept('concept_country', '$concept_countries$n')], im Zuge derer ein $concept_country$ den Händlern des anderen $concept_country$s günstigere Bedingungen einräumt."
 trade_privilege_article_short_desc: "[TARGET_COUNTRY.GetAltNameNoFormatting('NOM')|U] erhält $concept_trade_privileges$ [SOURCE_COUNTRY.GetAltNameNoFormatting('VON')]"
 TREATY_DRAFT_ARTICLE_FLAG_IS_TRADE_PRIVILEGE_EFFECT: "• [TARGET_COUNTRY.GetAltName('NOM')|U] baut [Concept('concept_trade_privilege','$concept_trade_privileges$')] mit [SOURCE_COUNTRY.GetAltName('DAT')] auf"
 TREATY_ARTICLE_FLAG_IS_TRADE_PRIVILEGE_EFFECT: "• [TARGET_COUNTRY.GetAltName('NOM')|U] baute [Concept('concept_trade_privilege','$concept_trade_privileges$')] mit [SOURCE_COUNTRY.GetAltName('DAT')] auf"
 foreign_investment_rights: "Investitionsrechte"
 foreign_investment_rights_desc: ""
 foreign_investment_rights_effects_desc: "• Etabliert einseitige [concept_foreign_investment_rights|l] in einem [concept_country], die es ihm erlauben, [Concept('concept_building', '$concept_buildings$')] im anderen $concept_country$ zu bauen."
 foreign_investment_rights_article_short_desc: "Erlaubt [TARGET_COUNTRY.GetAltNameNoFormatting('DAT')] [SOURCE_COUNTRY.GetAltNameNoFormatting('IN')] zu bauen"
 TREATY_DRAFT_ARTICLE_FLAG_IS_INVESTMENT_RIGHTS_EFFECT: "• Erlaubt [TARGET_COUNTRY.GetAltName('DAT')], [SOURCE_COUNTRY.GetAltName('IN')] zu bauen"
 TREATY_ARTICLE_FLAG_IS_INVESTMENT_RIGHTS_EFFECT: "• Erlaubt [TARGET_COUNTRY.GetAltName('DAT')], [SOURCE_COUNTRY.GetAltName('IN')] zu bauen"
 alliance: "Bündnis"
 alliance_desc: ""
 alliance_effects_desc: "• Schafft ein [concept_alliance] zwischen zwei [Concept('concept_country', 'Ländern')].\n• Beide [Concept('concept_country', '$concept_countries$')] können ihre [Concept('concept_army', '$concept_armies$')] durch das Territorium des [Concept('concept_ally', 'Verbündeten')] marschieren lassen"
 alliance_article_short_desc: "[FIRST_COUNTRY.GetAltNameNoFormatting('NOM')|U] schließt ein $concept_alliance$ mit [SECOND_COUNTRY.GetAltNameNoFormatting('DAT')]"
 TREATY_DRAFT_ARTICLE_FLAG_IS_ALLIANCE_EFFECT: "• [FIRST_COUNTRY.GetAltName('NOM')|U] schließt ein [concept_alliance] mit [SECOND_COUNTRY.GetAltName('DAT')]"
 TREATY_ARTICLE_FLAG_IS_ALLIANCE_EFFECT: "• [FIRST_COUNTRY.GetAltName('NOM')|U] schloss ein [concept_alliance] mit [SECOND_COUNTRY.GetAltName('DAT')]"
 defensive_pact: "Verteidigungspakt"
 defensive_pact_desc: ""
 defensive_pact_effects_desc: "• Schafft einen [concept_defensive_pact] zwischen zwei [Concept('concept_country', 'Ländern')]."
 defensive_pact_article_short_desc: "[FIRST_COUNTRY.GetAltNameNoFormatting('NOM')|U] besiegelt einen $concept_defensive_pact$ mit [SECOND_COUNTRY.GetAltNameNoFormatting('DAT')]"
 TREATY_DRAFT_ARTICLE_FLAG_IS_DEFENSIVE_PACT_EFFECT: "• [FIRST_COUNTRY.GetAltName('NOM')|U] besiegelt einen [concept_defensive_pact] mit [SECOND_COUNTRY.GetAltNameNoFlag('DAT')]"
 TREATY_ARTICLE_FLAG_IS_DEFENSIVE_PACT_EFFECT: "• [FIRST_COUNTRY.GetAltName('NOM')|U] besiegelt einen [concept_defensive_pact] mit [SECOND_COUNTRY.GetAltNameNoFlag('DAT')]"
 guarantee_independence: "Unabhängigkeit garantieren"
 guarantee_independence_desc: ""
 guarantee_independence_effects_desc: "• Eine von einem [concept_country] eingeleitete Vereinbarung, die auf ein anderes abzielt, wodurch das zweite $concept_country$ das erste um Unterstützung bei einem [concept_diplomatic_play] ersuchen kann, in dem es der Verteidiger ist."
 guarantee_independence_article_short_desc: "[TARGET_COUNTRY.GetAltNameNoFormatting('NOM')|U] wird garantiert [SOURCE_COUNTRY.GetAltNameNoFormatting('VON')]"
 TREATY_DRAFT_ARTICLE_FLAG_IS_GUARANTEE_INDEPENDENCE_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] wird die Unabhängigkeit [TARGET_COUNTRY.GetAltName('VON')] garantieren"
 TREATY_ARTICLE_FLAG_IS_GUARANTEE_INDEPENDENCE_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] garantiert die Unabhängigkeit [TARGET_COUNTRY.GetAltName('VON')]"
 support_independence: "Unabhängigkeit unterstützen"
 support_independence_desc: ""
 support_independence_effects_desc: "• Eine von einem [concept_country] eingeleitete Vereinbarung, die auf ein anderes abzielt, wobei sich das erste $concept_country$ verpflichtet, ein [concept_subject] bei einer [concept_diplomatic_demand] nach Unabhängigkeit vom [concept_overlord] zu unterstützen."
 support_independence_article_short_desc: "[TARGET_COUNTRY.GetAltNameNoFormatting('NOM')|U] wird unterstützt [SOURCE_COUNTRY.GetAltNameNoFormatting('VON')]"
 TREATY_DRAFT_ARTICLE_FLAG_IS_SUPPORT_INDEPENDENCE_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] wird die Unabhängigkeit [TARGET_COUNTRY.GetAltName('VON')] unterstützen"
 TREATY_ARTICLE_FLAG_IS_SUPPORT_INDEPENDENCE_EFFECT: "• [TARGET_COUNTRY.GetAltName('NOM')|U] unterstützt die Unabhängigkeit [SOURCE_COUNTRY.GetAltNameNoFlag('VON)]"
 join_power_bloc: "Machtblock beitreten"
 join_power_bloc_desc: ""
 join_power_bloc_effects_desc: "• Eine Vereinbarung, laut der sich das eine [concept_country] offiziell dem [concept_power_bloc] des anderen [Concept('concept_country','Landes')] anschließt."
 join_power_bloc_article_short_desc: "[SOURCE_COUNTRY.GetAltNameNoFormatting('NOM')|U] schließt sich dem $concept_power_bloc$ [TARGET_COUNTRY.GetAltNameNoFormatting('VON')] an"
 TREATY_DRAFT_ARTICLE_FLAG_IS_JOIN_POWER_BLOC_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] schließt sich dem [TARGET_COUNTRY.GetAdjective|l]en [concept_power_bloc] „[TARGET_COUNTRY.GetPowerBloc.GetName]“ an"
 TREATY_ARTICLE_FLAG_IS_JOIN_POWER_BLOC_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] schloss sich dem [TARGET_COUNTRY.GetAdjective|l]en [concept_power_bloc] „[TARGET_COUNTRY.GetPowerBloc.GetName]“ an"
 host_power_bloc_embassy: "Machtblockbotschaft"
 host_power_bloc_embassy_desc: ""
 host_power_bloc_embassy_effects_desc: "• Richtet formell eine $host_power_bloc_embassy$ in einem anderen [concept_country] ein."
 host_power_bloc_embassy_article_short_desc: "[SOURCE_COUNTRY.GetAltNameNoFormatting('NOM')|U] beherbergt eine [TARGET_COUNTRY.GetAdjectiveNoFormatting|l]e $host_power_bloc_embassy$"
 TREATY_DRAFT_ARTICLE_FLAG_IS_HOST_POWER_BLOC_EMBASSY_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] wird eine [TARGET_COUNTRY.GetAdjectiveNoFormatting|l]e $host_power_bloc_embassy$ von „[TARGET_COUNTRY.GetPowerBloc.GetName]“ beherbergen"
 TREATY_ARTICLE_FLAG_IS_HOST_POWER_BLOC_EMBASSY_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] beherbergt eine [TARGET_COUNTRY.GetAdjectiveNoFormatting|l]e $host_power_bloc_embassy$ von „[TARGET_COUNTRY.GetPowerBloc.GetName]“"
 take_on_debt: "Schuldenübernahme"
 take_on_debt_desc: ""
 take_on_debt_effects_desc: "• Sorgt für eine Vereinbarung, im Zuge derer das eine [concept_country] die [concept_loans] des anderen [Concept('concept_country', 'Landes')] übernimmt."
 take_on_debt_article_short_desc: "[SOURCE_COUNTRY.GetAltNameNoFormatting('NOM')|U] übernimmt die [TARGET_COUNTRY.GetAdjectiveNoFormatting|l]en $concept_loans$"
 TREATY_DRAFT_ARTICLE_FLAG_IS_TAKE_ON_DEBT_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] übernimmt die [TARGET_COUNTRY.GetAdjective|l]en [concept_loans]"
 TREATY_ARTICLE_FLAG_IS_TAKE_ON_DEBT_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] hat die [TARGET_COUNTRY.GetAdjective|l]en [concept_loans] übernommen"
 military_assistance: "Militärhilfe"
 military_assistance_desc: ""
 military_assistance_effects_desc: "• Eine militärische Vereinbarung zwischen zwei [Concept('concept_country', '$concept_countries$n')], im Zuge derer das eine $concept_country$ dem anderen [concept_country] [concept_military_assistance] gewährt (es also bei der militärischen Ausbildung und mit seiner Expertise unterstützt)."
 military_assistance_article_short_desc: "[TARGET_COUNTRY.GetAltNameNoFormatting('NOM')|U] gewährt [SOURCE_COUNTRY.GetAltNameNoFormatting('DAT')] $military_assistance$"
 TREATY_DRAFT_ARTICLE_FLAG_IS_MILITARY_ASSISTANCE_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] wird [TARGET_COUNTRY.GetAltName('DAT')] $military_assistance$ gewähren"
 TREATY_ARTICLE_FLAG_IS_MILITARY_ASSISTANCE_EFFECT: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] gewährt [TARGET_COUNTRY.GetAltName('DAT')] $military_assistance$"
 TREATY_PROPOSAL_ALREADY_ENTERED_INTO_FORCE: "Kann „[TREATY.GetName]“ nicht vorschlagen: Ist bereits in Kraft"
 TREATY_PROPOSAL_COUNTRY_NOT_BOUND_BY_TREATY: "Kann „[TREATY.GetName]“ nicht vorschlagen: [COUNTRY.GetAltName('NOM')|U] wäre nicht an den vorgeschlagenen [concept_treaty] [Concept('concept_binding_period', 'gebunden')]"
 TREATY_PROPOSAL_ALREADY_PENDING: "[COUNTRY.GetAltName('NOM')|U] bedenkt diesen Vorschlag bereits"
 TREATY_ARTICLE_CANNOT_RATIFY_DIRECTED: "[SOURCE_COUNTRY.GetAltName('NOM')|U] kann „[TREATY_ARTICLE_TYPE.GetName]“ [TARGET_COUNTRY.GetAltName('DAT')] nicht gewähren"
 TREATY_ARTICLE_CANNOT_RATIFY_MUTUAL: "„[TREATY_ARTICLE_TYPE.GetName]“ kann nicht zwischen [FIRST_COUNTRY.GetAltName('DAT')] und [SECOND_COUNTRY.GetAltName('DAT')] gewährt werden"
 TREATY_RELATIONS_CHANGE_EFFECT_POS: "• Verbessert [concept_relations] um #g +1#! alle #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $DAYS|v$#!#!#! Tage$CAPDESC$"
 TREATY_RELATIONS_CHANGE_EFFECT_NEG: "• Verschlechtert [concept_relations] um #n -1#! alle #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $DAYS|v$#!#!#! Tage$CAPDESC$"
 ARTICLE_TYPE_RELATIONS_EFFECT_POS: "• Verbessert [concept_relations] um #g +1#! alle $DAYS|v$ Tage$CAPDESC$"
 ARTICLE_TYPE_RELATIONS_EFFECT_NEG: "• Verschlechtert [concept_relations] um #n -1#! alle $DAYS|v$ Tage$CAPDESC$"
 TREATY_RELATIONS_EFFECT_BASE_VALUE: "#v $VAL|%2=+$#! Grundwert"
 TREATY_RELATIONS_BREAKDOWN_FORMAT: "#header Fortschritt der [concept_relations]#!\n#v $DAYS$#! Tage bis [SelectLocalization(LessThan_CFixedPoint('(CFixedPoint)$PROGRESS_DAILY|5$', '(CFixedPoint)0'), '#r -', '#g ')]100 %#!\n$TOOLTIP_DELIMITER$\n#v $PROGRESS_DAILY|%2=+$#! wöchentlicher Fortschritt aufgrund von:\n$BREAKDOWN$"
 TREATY_AGGREGATE_RELATIONS_CHANGE_NO_PROGRESS: "• Beziehungen zwischen [FIRST_COUNTRY.GetAltName('DAT')] und [SECOND_COUNTRY.GetAltName('DAT')] #tooltippable #tooltip:$BREAKDOWN_TAG$ werden sich nicht ändern#!#!"
 TREATY_AGGREGATE_RELATIONS_CHANGE: "• Beziehungen zwischen [FIRST_COUNTRY.GetAltName('DAT')] und [SECOND_COUNTRY.GetAltName('DAT')] werden sich alle #tooltippable #tooltip:$BREAKDOWN_TAG$ $DAYS|v$#!#! Tage um $CHANGE|+$ ändern"
 TREATY_AGGREGATE_RELATIONS_CHANGE_BREAKDOWN_ITEM: "• $CHANGE|+$ alle $DAYS|v$ Tage durch „[TREATY_ARTICLE.GetName]“"
 TREATY_AGGREGATE_MUTUAL_MODIFIERS: "• Sowohl [FIRST_COUNTRY.GetAltName('NOM')] als auch [SECOND_COUNTRY.GetAltName('NOM')] erhalten #tooltippable #tooltip:$BREAKDOWN_TAG$ Modifikatoren#!#! durch gegenseitige [Concept('concept_article', '$concept_articles$')]"
 TREATY_AGGREGATE_SOURCE_MODIFIERS: "• [SOURCE_COUNTRY.GetAltName('NOM')|U] erhält #tooltippable #tooltip:$BREAKDOWN_TAG$ Modifikatoren#!#!, weil diese Nation Quelle einiger gezielter [Concept('concept_article', '$concept_articles$')] ist"
 TREATY_AGGREGATE_TARGET_MODIFIERS: "• [TARGET_COUNTRY.GetAltName('NOM')|U] erhält #tooltippable #tooltip:$BREAKDOWN_TAG$ Modifikatoren#!#!, weil diese Nation Ziel einiger gezielter [Concept('concept_article', '$concept_articles$')] ist"
 TREATY_DRAFT_OWE_OBLIGATION_TOOLTIP: "#header Schuldet [COUNTRY.GetAltName('DAT')] eine [concept_obligation]#!\n$TAB$$VAL|+=$ auf [Concept('concept_treaty', 'Vertrags')]-Akzeptanz"
 TREATY_DRAFT_CALL_IN_OBLIGATION_TOOLTIP: "#header Die [concept_obligation] einsetzen, die [Country.GetAltName('NOM')] uns schuldet#!\n$TAB$$VAL|+=$ auf [Concept('concept_treaty', 'Vertrags')]-Akzeptanz"
 TREATY_OPTIONS_VALIDATE_NO_ARTICLES_TO_CREATE: "Mindestens einen [concept_article] hinzufügen"
 TREATY_ARTICLE_NON_FULFILLMENT_DESC_WEEKLY_TRIGGER: "Wöchentlich überprüft:\n$TRIGGER_DESC$"
 TREATY_ARTICLE_NON_FULFILLMENT_DESC_MONTHLY_TRIGGER: "Monatlich überprüft:\n$TRIGGER_DESC$"
 TREATY_ARTICLE_NON_FULFILLMENT_DESC_YEARLY_TRIGGER: "Jährlich überprüft:\n$TRIGGER_DESC$"
 TREATY_ARTICLE_NOT_FULFILLED_BY: "[COUNTRY.GetAltName('NOM')|U][ConcatIfNeitherEmpty(' ', AddLocalizationIf(ObjectsEqual(Country.Self, GetPlayer.Self), 'YOU'))] [Concept('concept_contravention', 'verstößt')] gegen den „[Article.GetName]“-[concept_article] in „[Article.GetTreaty.GetName]“\n\n#tooltippable #tooltip:$BREAKDOWN_TAG$ $CURRENT_CONTRAVENTIONS|v$#!#! $concept_contraventions$ derzeit\n$MAX_CONTRAVENTIONS|v$ $concept_contraventions$ führen dazu, dass der $concept_article$ als [Concept('concept_non_fulfillment', '$concept_non_fulfilled$')|l] gilt"
 TREATY_DRAFT_ARTICLE_MUTUALLY_EXCLUSIVE: "@simple_box! #b Kein#! „[TREATY_ARTICLE_TYPE.GetName]“ bereits ausgewählt"
 TREATY_DRAFT_ARTICLE_ONCE_PER_TREATY: "@green_checkmark_box! Dies wird bereits einmal in diesem [concept_treaty] hinzugefügt"
 TREATY_DRAFT_ARTICLE_ONCE_PER_SIDE: "@green_checkmark_box! Dies wird bereits einmal auf [Country.GetAdjective|l]er Seite in diesem [concept_treaty] hinzugefügt"
 can_create_treaty_MILITARY_ASSISTANCE: "Kann einen #bold $military_assistance$#!-[concept_treaty] mit ihnen unterzeichnen"
