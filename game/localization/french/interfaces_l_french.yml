l_french:
 TAB: "   "
 COLON: ":"
 DASH_WITH_SPACING: " - "
 POP_WORKPLACE_DAY_LABOURER: "Journalier"
 POP_WORKPLACE_UNEMPLOYED: "[concept_unemployed]"
 POP_WORKPLACE_EMPLOYED: "$NAME$"
 POP_WORKPLACE_DAY_LABOURER_LIST_ENTRY: "$WORKPLACE$ : $WORKERS|v$"
 POP_WORKPLACE_DAY_LABOURER_LIST: "Travaille à\n$LIST$"
 POP_WORKPLACE_EMPLOYED_TOOLTIP: "A des $WORKERS|v$ dans l’industrie."
 POP_WORKPLACE_UNEMPLOYED_TOOLTIP: "Est [concept_unemployed|l]."
 LOBBYVIEW_SELECT_PLAYABLE: "@red_cross! Aucun pays sélectionné\n\nSélectionnez un pays sur la carte"
 LOBBYVIEW_NO_CROSSPLAY: "Désactiver le jeu multiplateforme"
 LOBBYVIEW_NO_CROSSPLAY_TOOLTIP: "N’autorise que les joueurs de votre plateforme actuelle"
 JOIN_MULTIPLAYER_PASTE_SERVER_ID: "Coller l’ID du serveur"
 LIST_BULLET_ENTRY: "$EFFECT_LIST_BULLET$ $ENTRY$"
 VALUE_PERCENT_GOOD: "#p $VALUE|%0$#!"
 VALUE_PERCENT_BAD: "#n $VALUE|%0$#!"
 PRIVATELY_OWNED_FILTER_RIGHT_CLICK_MENU_TITLE: "Filtrer les [Concept('concept_building_level','$concept_building_levels$')|l] privés [NationalizeBuildingGroup.GetInvestor.GetAltAdjective('MP')|l]"
 PRIVATELY_OWNED_FILTER_TOOLTIP_HEADER: "#header Filtrer les [Concept('concept_building_level','$concept_building_levels$')|l] privés [NationalizeBuildingGroup.GetInvestor.GetAltAdjective('MP')|l]#!"
 PRIVATELY_OWNED_FILTER_BUTTON_TOOLTIP_ALL: "$PRIVATELY_OWNED_FILTER_TOOLTIP_HEADER$\n$PRIVATELY_OWNED_FILTER_TOOLTIP_ALL_SELECTED$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_ALL: "#header Afficher tous les [Concept('concept_building_level','$concept_building_levels$')|l] privés#!\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('all')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('all')] [Concept('concept_building_level_short','$concept_building_levels_short$')|l] sélectionnés"
 PRIVATELY_OWNED_FILTER_TOOLTIP_ALL_SELECTED: "Affiche actuellement tous les [Concept('concept_building_level','$concept_building_levels$')|l] privés\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('all')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('all')] [Concept('concept_building_level_short','$concept_building_levels_short$')|l] sélectionnés"
 PRIVATELY_OWNED_FILTER_BUTTON_TOOLTIP_COMPANIES: "$PRIVATELY_OWNED_FILTER_TOOLTIP_HEADER$\n$PRIVATELY_OWNED_FILTER_TOOLTIP_COMPANIES_SELECTED$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_COMPANIES: "#header Afficher uniquement les [Concept('concept_building_level','$concept_building_levels$')|l] détenus par des [Concept('concept_company', '$concept_companies$')|l]#!\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('companies')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('companies')] [Concept('concept_building_level_short','$concept_building_levels_short$')|l] sélectionnés"
 PRIVATELY_OWNED_FILTER_TOOLTIP_COMPANIES_SELECTED: "Affiche actuellement uniquement les [Concept('concept_building_level','$concept_building_levels$')|l] détenus par des [Concept('concept_company', '$concept_companies$')|l]\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('companies')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('companies')] [Concept('concept_building_level_short','$concept_building_levels_short$')|l] sélectionnés"
 PRIVATELY_OWNED_FILTER_BUTTON_TOOLTIP_MANOR_HOUSE: "$PRIVATELY_OWNED_FILTER_TOOLTIP_HEADER$\n$PRIVATELY_OWNED_FILTER_TOOLTIP_MANOR_HOUSE_SELECTED$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_MANOR_HOUSE: "#header Afficher uniquement les [Concept('concept_building_level','$concept_building_levels$')|l] détenus par un [GetBuildingType('building_manor_house').GetName|l]#!\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('manor_house')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('manor_house')] [Concept('concept_building_level_short','$concept_building_levels_short$')|l] sélectionnés"
 PRIVATELY_OWNED_FILTER_TOOLTIP_MANOR_HOUSE_SELECTED: "Affiche actuellement uniquement les [Concept('concept_building_level','$concept_building_levels$')|l] détenus par un [GetBuildingType('building_manor_house').GetName|l]\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('manor_house')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('manor_house')] [Concept('concept_building_level_short','$concept_building_levels_short$')|l] sélectionnés"
 PRIVATELY_OWNED_FILTER_BUTTON_TOOLTIP_FINANCIAL_DISTRICT: "$PRIVATELY_OWNED_FILTER_TOOLTIP_HEADER$\n$PRIVATELY_OWNED_FILTER_TOOLTIP_FINANCIAL_DISTRICT_SELECTED$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_FINANCIAL_DISTRICT: "#header Afficher uniquement les [Concept('concept_building_level','$concept_building_levels$')|l] détenus par un [GetBuildingType('building_financial_district').GetName|l]#!\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('financial_district')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('financial_district')] [Concept('concept_building_level_short','$concept_building_levels_short$')|l] sélectionnés"
 PRIVATELY_OWNED_FILTER_TOOLTIP_FINANCIAL_DISTRICT_SELECTED: "Affiche actuellement uniquement les [Concept('concept_building_level','$concept_building_levels$')|l] détenus par un [GetBuildingType('building_financial_district').GetName|l]\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('financial_district')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('financial_district')] [Concept('concept_building_level_short','$concept_building_levels_short$')|l] sélectionnés"
 WORKER_OWNED: "Détenus par les travailleurs"
 PRIVATELY_OWNED_FILTER_BUTTON_TOOLTIP_WORKER_OWNED: "$PRIVATELY_OWNED_FILTER_TOOLTIP_HEADER$\n$PRIVATELY_OWNED_FILTER_TOOLTIP_WORKER_OWNED_SELECTED$"
 PRIVATELY_OWNED_FILTER_TOOLTIP_WORKER_OWNED: "#header Afficher uniquement les [Concept('concept_building_level','$concept_building_levels$')|l] détenus par les travailleurs#!\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('self')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('self')] [Concept('concept_building_level_short','$concept_building_levels_short$')|l] sélectionnés"
 PRIVATELY_OWNED_FILTER_TOOLTIP_WORKER_OWNED_SELECTED: "Affiche actuellement uniquement les [Concept('concept_building_level','$concept_building_levels$')|l] détenus par les travailleurs\n#v [NationalizeBuildingGroup.GetFilterNumSelectedLevels('self')]#!/[NationalizeBuildingGroup.GetFilterMaxLevels('self')] [Concept('concept_building_level_short','$concept_building_levels_short$')|l] sélectionnés"
 NATIONALIZE_BUILDING_HEADER: "$NATIONALIZE$"
 NATIONALIZE: "$concept_nationalize$"
 CONSTRUCTION_CURRENT_PAGE: "Page [ConstructionPanel.AccessCurrentGovernmentConstructionQueuePage(GetMetaPlayer.GetPlayedOrObservedCountry)]/[ConstructionPanel.GetNumGovernmentConstructionQueuePages(GetMetaPlayer.GetPlayedOrObservedCountry)]"
 CONSTRUCTION_CURRENT_PAGE_PRIVATE: "Page [ConstructionPanel.AccessCurrentPrivateConstructionQueuePage(GetMetaPlayer.GetPlayedOrObservedCountry)]/[ConstructionPanel.GetNumPrivateConstructionQueuePages(GetMetaPlayer.GetPlayedOrObservedCountry)]"
 CONSTRUCTION_NEXT_PAGE: "Page suivante"
 CONSTRUCTION_PREVIOUS_PAGE: "Page précédente"
 PRIVATELY_FUNDED_CONSTRUCTION: "#header [concept_private_construction]#!\n$TOOLTIP_DELIMITER$\nCet élément en [concept_construction_queue|l] est une [concept_private_construction|l] et ne peut pas être annulée ou priorisée différemment."
 GOVERNMENT_FUNDED_CONSTRUCTION: "#header [concept_government_construction]#!\n$TOOLTIP_DELIMITER$\nCet élément en [concept_construction_queue|l] est une [concept_government_construction|l] et peut être librement annulée ou priorisée différemment."
 CANNOT_ALTER_PRIVATE_CONSTRUCTION: "Les [Concept('concept_private_construction', '$concept_private_constructions$')|l] ne peuvent pas être annulées ou priorisées différemment."
 NATIONALIZE_BUILDINGS_DESCRIPTION: "Nationalisation des [Concept('concept_building', '$concept_buildings$')|l], saisie des [Concept('concept_building_level', 'niveaux des bâtiments')] et conversion de ceux-ci en [Concept('concept_nationally_owned','propriétés nationales')]"
 NATIONALIZE_BUILDING_TYPE_GROUP_TOOLTIP: "#header [BuildingType.GetName]#!\n#v [NationalizeBuildingTypeGroup.GetMaxLevels]#! [Concept('concept_building_level', '$concept_building_levels_parenthetical_plural_short$')|l] disponible(s) pour la [Concept('concept_nationalize','$concept_nationalization$')|l]\n$TOOLTIP_DELIMITER$\n[SelectLocalization(GreaterThan_int32(NationalizeBuildingTypeGroup.GetCurrentLevels, '(int32)0'), 'SELECTED_LEVELS_BREAKDOWN', 'NO_LEVELS_SELECTED_FOR_NATIONALIZATION')]"
 SELECTED_LEVELS_BREAKDOWN: "#title #v [NationalizeBuildingTypeGroup.GetCurrentLevels]#!/[NationalizeBuildingTypeGroup.GetMaxLevels] [Concept('concept_building_level', '$concept_building_levels_parenthetical_plural_short$')|l] sélectionné(s) pour la nationalisation :#! #indent_newline:3 \n[NationalizeBuildingTypeGroup.GetSelectedBuildingsBreakdown]#!"
 NO_LEVELS_SELECTED_FOR_NATIONALIZATION: "Aucun niveau sélectionné pour la nationalisation"
 NATIONALIZE_BUILDING_TYPE_GROUP_BUILDING_ENTRY_MONEY: "@money!#v $VAL|D=-$#!"
 NATIONALIZE_BUILDING_TYPE_GROUP_BUILDING_ENTRY: "$EFFECT_LIST_BULLET$[Building.GetState.GetName], $NUM_LEVELS|v$ [Concept('concept_building_level', '$concept_building_levels_parenthetical_plural_short$')|l] :"
 NATIONALIZE_BUILDING_ITEM_TOOLTIP: "$EFFECT_LIST_BULLET$[Building.GetName] de [Building.GetState.GetName], $NUM_LEVELS|v$ [Concept('concept_building_level', '$concept_building_levels_parenthetical_plural_short$')|l] :"
 #It might be better to use something like construction_panel.gui:205-225, where we change the text here without any new code, just check the different "HasPact" and "IsSubject" and construct the text accordingly.
 #at least "country" here is [NationalizeBuildingGroup.GetCountry] :)
 NATIONALIZE_BUILDING_GROUP_NAME_COMPANY: "Détenus par des [Concept('concept_company', '$concept_companies$')|l] [COUNTRY.GetAltAdjectiveNoFormatting('FP')|l]"
 NATIONALIZE_BUILDING_GROUP_NAME_PRIVATE: "[concept_privately_owned] [Country.GetAltAdjectiveNoFormatting('FS')|l]"
 NATIONALIZE_BUILDING_GROUP_NAME_GOVERNMENT: "[concept_nationally_owned] [Country.GetAltAdjectiveNoFormatting('FS')|l]"
 NATIONALIZE_BUILD_GROUP_TOOLTIP: "[SelectLocalization(StringIsEmpty(NationalizeBuildingGroup.GetSelectedLevelsDesc), 'NATIONALIZE_BUILDING_GROUP_NONE_SELECTED', 'NATIONALIZE_BUILDING_GROUP_SELECTED')]"
 NATIONALIZE_BUILDING_GROUP_SELECTED: "#header [NationalizeBuildingGroup.GetName]#!\n#v [NationalizeBuildingGroup.GetNumSelectedLevels]#! [Concept('concept_building_level', '$concept_building_levels_parenthetical_plural_short$')|l] sélectionné(s) pour la [Concept('concept_nationalize','$concept_nationalization$')|l][ConcatIfNeitherEmpty('\n', NationalizeBuildingGroup.GetErrors)]\n$TOOLTIP_DELIMITER$\n[AddLocalizationIf(Not(StringIsEmpty(NationalizeBuildingGroup.GetSelectedLevelsDesc)), 'NATIONALIZE_BUILDING_GROUP_COST_PER_LEVEL_TITLE')] #indent_newline:3 \n[NationalizeBuildingGroup.GetSelectedLevelsDesc]#!"
 NATIONALIZE_BUILDING_GROUP_NONE_SELECTED: "#v [NationalizeBuildingGroup.GetNumSelectedLevels]#![Concept('concept_building_level','$concept_building_levels$')] de [NationalizeBuildingGroup.GetName] sélectionnés pour la [Concept('concept_nationalize','$concept_nationalization$')|l][ConcatIfNeitherEmpty('\n', NationalizeBuildingGroup.GetErrors)]"
 NATIONALIZE_BUILDING_GROUP_COST_PER_LEVEL_TITLE: "#title Coût de la nationalisation par [concept_building|l] :#!"
 NATIONALIZE_FILTERED_BUILDINGS_LABEL: "Nationaliser les bâtiments filtrés"
 NATIONALIZE_FILTERED_BUILDINGS_TOOLTIP: "#header $BUILDING_NATIONALIZE$#!\n$TOOLTIP_DELIMITER$\n[concept_nationalize] un ou plusieurs niveaux des [Concept('concept_building','$concept_buildings$')|l] actuellement filtrés."
 NATIONALIZE_FILTERED_BUILDINGS_FAILED: "#header $BUILDING_NATIONALIZE$#!\n$TOOLTIP_DELIMITER$\nIl n’est pas possible de [concept_nationalize|l] les [Concept('concept_building','$concept_buildings$')|l] actuellement filtrés."
 NATIONALIZE_BUILDING_REQUIRED_LEVELS: "Au moins #v 1#! [concept_building_level|l] doit être nationalisé"
 NATIONALIZE_BUILDING_NO_LEVELS: "Impossible de trouver des [Concept('concept_building_level', '$concept_building_levels_short$')|l] pouvant être [Concept('concept_nationalize','$concept_nationalized$s')|l]"
 NATIONALIZE_EFFECTS_HEADER: "Effets"
 NATIONALIZE_EFFECTS_MAINTENANCE: "#r -[GetPlayer.GetStateOwnedBuildingsBureaucracyCostForLevels(NationalizeBuildingWindow.GetNumLevelsToNationalize)|D0]#! en coût de maintenance ([concept_bureaucracy|l]) pour #v [NationalizeBuildingWindow.GetNumLevelsToNationalize]#! nouveaux [Concept('concept_building_level',SelectLocalization(EqualTo_int32(NationalizeBuildingWindow.GetNumLevelsToNationalize, '(int32)1'),'concept_building_level_short','concept_building_levels_short'))|l]#!"
 NATIONALIZE_EFFECT_RADICALS: "#title Ces [concept_building_owners|l] deviendraient plus [Concept('concept_radical', '$concept_radicals$')|l] :#!#indent_newline:3 \n[NationalizeBuildingWindow.GetPopRadicalizationListDesc]#!"
 NATIONALIZE_EFFECT_RELATIONS: "$BUILDING_NATIONALIZE_RELATIONS_IMPACT_HEADER$\n[NationalizeBuildingWindow.GetDamagedRelationsListDesc]"
 NATIONALIZE_COMPENSATION_PLAYER_IP: "(@money!#v [NationalizeBuildingWindow.GetCompensationShareToPlayerInvestmentPool|D]#! vers votre [concept_investment_pool|l])"
 NATIONALIZE_COMPENSATION_AMOUNT: "@money!#r -[NationalizeBuildingWindow.GetCompensationTotal|D]#! de coût [AddLocalizationIf(GreaterThan_CFixedPoint(NationalizeBuildingWindow.GetCompensationShareToPlayerInvestmentPool, '(CFixedPoint)0'), 'NATIONALIZE_COMPENSATION_PLAYER_IP')]"
 BUILDING_NATIONALIZE_COMPENSATION_TOOLTIP: "#header Coût de la [Concept('concept_nationalize','$concept_nationalizing$')|l] de [NationalizeBuildingWindow.GetNumLevelsToNationalize] [Concept('concept_building_level', '$concept_building_levels_short$')|l]#!\n#r -[NationalizeBuildingWindow.GetCompensationTotal|D]#!@money! de coût total\n$TOOLTIP_DELIMITER$\nCet [concept_money|l] sera versé à :#indent_newline:3 \n[NationalizeBuildingWindow.GetCompensationBreakdown]#!"
 BUILDING_NATIONALIZE_COMPENSATION_ENTRY_TO_PLAYER: "@money!#r -$COST|D$#! aux [Concept('concept_pop', '$concept_pops$')|l] [COUNTRY.GetAltAdjective('MP')|l] (#v $POOL|D$#! à votre [concept_investment_pool|l])"
 BUILDING_NATIONALIZE_COMPENSATION_ENTRY_WITH_INVESTMENT_POOL: "@money!#r -$COST|D$#! [COUNTRY.GetAltNameNoFormatting('Au')][COUNTRY.GetName] (#v $POOL|D$#! à son [concept_investment_pool|l])"
 BUILDING_NATIONALIZE_COMPENSATION_ENTRY: "@money!#r -$COST|D$#! [COUNTRY.GetAltNameNoFormatting('Au')][COUNTRY.GetName]"
 CANNOT_NATIONALIZE_FOREIGN_INVESTMENT_RIGHTS: "Les investisseurs [COUNTRY.GetAltAdjectiveNoFormatting('MP')|l] [COUNTRY.GetFlagTextIcon] bénéficient de [concept_foreign_investment_rights|l]."
 CANNOT_NATIONALIZE_NATIONALLY_OWNED_BUILDING: "Les [Concept('concept_building_level','$concept_building_levels$')|l] qui appartiennent [COUNTRY.GetAltNameNoFormatting('Au')][COUNTRY.GetName] [COUNTRY.GetFlagTextIcon] ne peuvent pas être [Concept('concept_nationalize','$concept_nationalized$s')|l]."
 CANNOT_NATIONALIZE_NO_AVAILABLE_LEVELS: "Il n’y a aucun [Concept('concept_building_level', 'niveau')] qui #tooltippable #tooltip:[BUILDING.GetTooltipTag],CANNOT_NATIONALIZE_NO_AVAILABLE_LEVELS_BREAKDOWN puisse être nationalisé#!#!"
 CANNOT_NATIONALIZE_NO_AVAILABLE_LEVELS_BREAKDOWN: "[Building.GetNoLevelsCanBeNationalizedDesc]"
 CANNOT_NATIONALIZE_UNDER_COLLECTIVIZATION: "Ce bâtiment ne peut pas être nationalisé car il n’a pas atteint le [Concept('concept_building_level', 'niveau')] minimal détenu par les travailleurs"
 CANNOT_NATIONALIZE_BUILDING_IS_MONOPOLIZED: "$BUILDING_IS_MONOPOLIZED_BY$"
 CANNOT_NATIONALIZE_NO_FUNDS: "Nous ne pouvons pas nous permettre la [Concept('concept_nationalize','$concept_nationalization$')|l], car il nous faut #variable $COST|D$@money!#! et nous n’avons actuellement que #v [GetPlayer.GetGoldReserves|D]#!@money! dans nos [concept_gold_reserves|l]"
 CANNOT_NATIONALIZE_BUILDING_TYPE: "Seuls les bâtiments pouvant être construits et détenus par d’autres peuvent être [Concept('concept_nationalize','$concept_nationalized$s')|l]"
 CANNOT_NATIONALIZE_DISALLOWED: "La [Concept('concept_nationalize','$concept_nationalization$')|l] n'est pas autorisée"
 BUILDING_NATIONALIZE: "$concept_nationalize$"
 CANNOT_NATIONALIZE_LAST_COMPANY_LEVELS: "Ces [Concept('concept_building_level', '$concept_building_levels_short$')|l] ne peuvent pas être nationalisés car la compagnie [Company.GetName] ne peut pas posséder moins de #variable $NUM_LEVELS$#! niveaux"
 BUILDING_NATIONALIZE_TOOLTIP: "#header $BUILDING_NATIONALIZE$#!\n$TOOLTIP_DELIMITER$\n[concept_nationalize] un ou plusieurs [Concept('concept_building_level', '$concept_building_levels_short$')|l] de ce [concept_building|l][ConcatIfNeitherEmpty('\n\n',GetDesc( Building.NationalizeBuildingLevels( '(int32)1' ) ))]"
 BUILDING_NATIONALIZE_DESC: "[concept_nationalize] [NationalizeBuildingWindow.GetNumLevelsToNationalize|v] [SelectLocalization(EqualTo_int32(NationalizeBuildingWindow.GetNumLevelsToNationalize, '(int32)1'),'BUILDING_NATIONALIZE_LEVEL_SINGULAR','BUILDING_NATIONALIZE_LEVEL_PLURAL')] :\n$OWNERS$\n\n$COMPENSATION$[ConcatIfNeitherEmpty('\n\n','$PENALTIES$')]"
 BUILDING_NATIONALIZE_LEVEL_SINGULAR: "[concept_building_level]"
 BUILDING_NATIONALIZE_LEVEL_PLURAL: "[Concept('concept_building_level', '$concept_building_levels$')]"
 BUILDING_NATIONALIZE_WITH_COMPENSATION_DESC: "$COST|vD$@money! en coût de compensation ($INVESTMENT|Dv$@money! seront versés au [concept_investment_pool|l])"
 BUILDING_NATIONALIZE_NO_COMPENSATION_DESC: "Cela se fera #n sans compensation monétaire#!, augmentant ainsi l'impact sur les radicaux et les relations de #n [GetDefine('NEconomy','NATIONALIZE_BUILDING_NO_COMPENSATION_IMPACT_MULT')|%0]#!"
 BUILDING_NATIONALIZE_COUNTRY_OWNERSHIP_TOOLTIP_DESC: "#variable $LEVEL$#! en possession [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName]"
 BUILDING_NATIONALIZE_BUILDING_OWNERSHIP_TOOLTIP_DESC: "#variable $LEVEL$#! en possession de [BUILDING.GetName] en [Building.GetState.GetName]"
 BUILDING_NATIONALIZE_SELF_OWNERSHIP_TOOLTIP_DESC: "#variable $LEVEL$#! en possession de la [concept_workforce|l]"
 BUILDING_NATIONALIZE_RADICALS_DESC: "@warning! Ces [concept_building_owners|l] deviendraient plus [Concept('concept_radical', '$concept_radicals$')|l] :\n$POP_LIST$"
 BUILDING_NATIONALIZE_RADICALIZED_POP_ENTRY: "$NAME$ #v $AMOUNT|-D$#!"
 BUILDING_NATIONALIZATION_CAN_TOGGLE_COMPENSATION: "#header Compensation pour la nationalisation#!\n$TOOLTIP_DELIMITER$\n#instruction Cliquez pour activer/désactiver la compensation monétaire versée aux [Concept('concept_pop', '$concept_pops$')|l] [concept_building_owners|l] pour la nationalisation#!"
 BUILDING_NATIONALIZATION_CANNOT_TOGGLE_COMPENSATION: "#header Compensation pour la nationalisation#!\n$TOOLTIP_DELIMITER$\nImpossible de désactiver la compensation monétaire pour la nationalisation en raison de :\n$DETAILS$"
 BUILDING_NATIONALIZATION_WITH_COMPENSATION: "Donner une compensation aux [concept_building_owners|l]"
 BUILDING_NATIONALIZATION_INCREASE_LEVELS_TOOLTIP: "#header Augmenter les [Concept('concept_building_level', '$concept_building_levels_short$')|l] à nationaliser#!\n$TOOLTIP_DELIMITER$\n#i Cliquez#! pour augmenter le nombre de niveaux de #v 1#!\n#i $SHORTCUT_KEY_MOD_shift$Cliquez#! pour augmenter le nombre de niveaux de #v 10#!\n#i $SHORTCUT_KEY_MOD_ctrl$Cliquez#! pour augmenter le nombre de niveaux au #v maximum#!"
 BUILDING_NATIONALIZATION_DECREASE_LEVELS_TOOLTIP: "#header Diminuer les [Concept('concept_building_level', '$concept_building_levels_short$')|l] à nationaliser#!\n$TOOLTIP_DELIMITER$\n#i Cliquez#! pour diminuer le nombre de niveaux de #v 1#!\n#i $SHORTCUT_KEY_MOD_shift$Cliquez#! pour diminuer le nombre de niveaux de #v 10#!\n#i $SHORTCUT_KEY_MOD_ctrl$Cliquez#! pour diminuer le nombre de niveaux au #v minimum#!"
 CTRL_CLICK_TO_SET_TO_MAXIMUM_MINIMUM: "#i $SHORTCUT_KEY_MOD_ctrl$Cliquez#! pour définir le nombre de [Concept('concept_building_level', '$concept_building_levels_short$')|l] au #v minimum#!/#v maximum#!"
 BUILDING_NATIONALIZE_RELATIONS_IMPACT_HEADER: "@warning! Cela réduirait les [concept_relations|l] avec les [Concept('concept_country', '$concept_countries$')|l] suivants :"
 BUILDING_NATIONALIZE_RELATIONS_IMPACT_ENTRY: "[COUNTRY.GetName] : $AMOUNT|=+$ (actuellement : [COUNTRY.GetRelationsWith(GetPlayer)|+])"
 CANNOT_TOGGLE_PRIVATIZATION_NO_AVAILABLE_LEVELS: "A au moins #v 1#! [concept_building_level|l] qui peut être privatisé"
 CANNOT_PRIVATIZE_BUILDING_TYPE: "Ne peut pas être [Concept('concept_construction','$concept_constructed$')|l] et être une [concept_privately_owned|l] détenue par des [Concept('concept_pop', '$concept_pops$')|l]"
 CANNOT_PRIVATIZE_MONOPOLIZED_BUILDING_TYPE: "N’est pas [Concept('concept_country_monopoly', '$concept_country_monopolized$')|l]"
 CANNOT_TOGGLE_PRIVATIZATION_DISALLOWED: "Toute [Concept('concept_privatize', '$concept_privatization$')|l] est interdite [Building.GetState.GetCountry.GetAltNameNoFormatting('En')][Building.GetState.GetCountry.GetName]"
 BUILDING_TOGGLE_PRIVATIZATION: "[Concept('concept_privatize','$concept_privatization$')]"
 CANNOT_TOGGLE_PRIVATIZATION_FORCED: "La [Concept('concept_privatize','$concept_privatization$')|l] est obligatoire en raison du [GetLawType('law_laissez_faire').GetGroup.GetName|l] [Building.GetState.GetCountry.GetAltNameNoFormatting('En')][Building.GetState.GetCountry.GetName] : [GetLawType('law_laissez_faire').GetName]"
 BUILDING_ENABLE_PRIVATIZATION: "Activer la [Concept('concept_privatize','$concept_privatization$')|l]"
 BUILDING_DISABLE_PRIVATIZATION: "Désactiver la [Concept('concept_privatize','$concept_privatization$')|l]"
 BUILDING_TOGGLE_ON_PRIVATIZATION_TOOLTIP_HEADER: "#header [Concept('concept_privatize','$concept_privatize$')] [Building.GetName]#!"
 BUILDING_TOGGLE_OFF_PRIVATIZATION_TOOLTIP_HEADER: "#header Retirer $BUILDING_TOGGLE_PRIVATIZATION$ de [Building.GetName]#!"
 BUILDING_TOGGLE_PRIVATIZATION_TOOLTIP_DESC: "Permet aux investisseurs d’acheter des [Concept('concept_building_level', '$concept_building_levels_short$')|l] de [Building.GetName] en [Building.GetState.GetName] auprès [GetPlayer.GetAltNameNoFormatting('Du')][GetPlayer.GetName] pour #variable $COST|D$@money!#! par niveau"
 BUILDING_PRIVITZATION_TOOLTIP: "#header [Concept('concept_privatize','$concept_privatized$')]#!\nCela permet aux investisseurs d’acheter des [Concept('concept_building_level', '$concept_building_levels_short$')|l] de [Building.GetName] en [Building.GetState.GetName] auprès [GetPlayer.GetAltNameNoFormatting('Du')][GetPlayer.GetName] pour #v $COST|D$@money!#! par niveau"
 BUILDING_PIN_IN_OUTLINER: "[SelectLocalization(Building.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 TRANSFER_OWNERSHIP_FOR_BUILDING_HEADER: "$TAB$[Building.GetName] #variable $LEVEL$#! [Concept('concept_building_level', '$concept_building_levels_parenthetical_plural_short$')|l] détenus par :"
 TRANSFER_OWNERSHIP_FROM_COUNTRY: "$TAB$$TAB$#variable $LEVEL$#! [Concept('concept_building_level', '$concept_building_levels_parenthetical_plural_short$')|l] : [Country.GetName]"
 TRANSFER_OWNERSHIP_FROM_BUILDING: "$TAB$$TAB$#variable $LEVEL$#! [Concept('concept_building_level', '$concept_building_levels_parenthetical_plural_short$')|l] : [Building.GetName] de [Building.GetState.GetName]"
 TRANSFER_OWNERSHIP_FROM_WORKFORCE: "$TAB$$TAB$#variable $LEVEL$#! [Concept('concept_building_level', '$concept_building_levels_parenthetical_plural_short$')|l] : [concept_workforce|l]"
 CREATE_COMPANY_COMMAND_DESC: "#header Fonder la [concept_company|l] [CompanyType.GetNameNoFormatting|v] en [State.GetName]#!\n\n[SelectLocalization(EqualTo_int32('(int32)$LEVEL$', '(int32)1'),'BUILDING_NATIONALIZE_LEVEL_SINGULAR','BUILDING_NATIONALIZE_LEVEL_PLURAL')] seront transférés vers la nouvelle compagnie :\n$OWNERS$\n\n$PRODUCTIVITY|v1$@money! de [concept_productivity|l] prévisionnelle"
 PURCHASE_COMPANY_COMMAND_DESC: "#header Fonder la [concept_company|l] [CompanyType.GetNameNoFormatting|v] en [State.GetName]#!\n\n[SelectLocalization(EqualTo_int32('(int32)$LEVEL$', '(int32)1'),'BUILDING_NATIONALIZE_LEVEL_SINGULAR','BUILDING_NATIONALIZE_LEVEL_PLURAL')] seront transférés vers la nouvelle compagnie :\n$OWNERS$\n\n@money!$PRODUCTIVITY|v1$ de [concept_productivity|l] prévisionnelle\n\n@money!$COST|vD+$ de coût total"
 CANNOT_PURCHASE_COMPANY_NO_FUNDS: "Nous ne pouvons pas nous permettre de fonder une nouvelle [concept_company|l], car il nous faut #variable $COST|D$@money!#! et nous n’avons actuellement que #v [GetPlayer.GetGoldReserves|D]#!@money! dans nos [concept_gold_reserves|l]"
 BUILDING_LEVEL_SHORT_SINGULAR_OR_PLURAL: "[SelectLocalization(EqualTo_int32('(int32)$LEVEL$', '(int32)1'),'concept_building_level_short','concept_building_levels_short')]"
 TRANSFER_OWNERSHIP_BUILDING_TYPE_ENTRY: "[BuildingType.GetName] : #tooltippable #tooltip:$BREAKDOWN_TAG$ $LEVEL|v$#!#!"
 TRANSFER_OWNERSHIP_TO_COUNTRY: "[State.GetNameWithCountryFlag] : #variable $LEVEL$#! $BUILDING_LEVEL_SHORT_SINGULAR_OR_PLURAL$ @arrow_right! [Country.GetName]"
 TRANSFER_OWNERSHIP_TO_WORKFORCE: "[State.GetNameWithCountryFlag] : #variable $LEVEL$#! $BUILDING_LEVEL_SHORT_SINGULAR_OR_PLURAL$ @arrow_right! [concept_workforce]"
 REMOVE_COMPANY_COMMAND_DESC: "#header Dissoudre la [concept_company|l] [Company.GetName|v] en [Company.GetState.GetName]#!\n\n$LEVEL|v$ [SelectLocalization(EqualTo_int32('(int32)$LEVEL$', '(int32)1'),'BUILDING_NATIONALIZE_LEVEL_SINGULAR','BUILDING_NATIONALIZE_LEVEL_PLURAL')] seront transférés à partir de la compagnie :\n$ASSETS$\n\nTotal de la compensation pour la [Concept('concept_nationalize','$concept_nationalization$')|l] : $COST|K0v$@money!"
 COMPANY_ASSETS_WILL_BE_TRANSFERRED: "$LEVEL|v$ [SelectLocalization(EqualTo_int32('(int32)$LEVEL$', '(int32)1'),'BUILDING_NATIONALIZE_LEVEL_SINGULAR','BUILDING_NATIONALIZE_LEVEL_PLURAL')] de [BuildingType.GetName] seront transférés à partir de la compagnie :\n$ASSETS$\n\nTotal de la compensation pour la [Concept('concept_nationalize','$concept_nationalization$')|l] : $COST|K0v$ @money!"
 #BUILDING OWNERSHIP / FOREIGN INVESTMENTS
 DOMESTIC: "National"
 ABROAD: "À l’étranger"
 LOCATION: "Lieu"
 OWNER_TYPE: "Type de propriétaire"
 BUILDING_TYPE: "Bâtiment"
 RECENT_SEARCHES: "Dernières recherches"
 PRIVATE: "Privé"
 ALL_BUILDINGS: "Tous les bâtiments"
 WORKERS: "Employés"
 CONSTRUCTION_EFFICIENCY_SHORT: "Eff.Con"
 EMPLOYMENT_SHORT: "Emp."
 CASH_RESERVES_SHORT: "Liq."
 TRAITS: "Traits"
 CLEAR_SEARCH: "#header Effacer la recherche#!"
 POTENTIAL_BUILDINGS: "Bâtiments potentiels"
 CONTROLLER: "Contrôleur"
 IN_PLAYER_COUNTRY: "[GetPlayer.GetAltNameNoFormatting('En')|U][GetPlayer.GetName]"
 EVERYWHERE: "Partout"
 TRADE_POTENTIAL: "Potentiel commercial"
 TRADE_POTENTIAL_EXPLAINER: "[concept_trade_potential]\n$TOOLTIP_DELIMITER$\nLe potentiel des échanges au sein de l’[concept_state]"
 TRADE_POTENTIAL_VALUE: "[State.GetTradePotential|vD]"
 TRADE_POTENTIAL_TOOLTIP: "[State.GetTradePotentialDesc]"
 STATE_TRADE_POTENTIAL_DESC: "#header [concept_trade_potential]#!\n$VALUE|vD$ en $STATE_NAME$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 STATE_TRADE_POTENTIAL_ENTRY: "$VALUE|vD$ pour $DIRECTION$ [GOODS.GetCustom('FR_Goods_De')][GOODS.GetName|l] [GOODS.GetTextIcon]"
 BUILDING_DATABASE_ORDER: "Type de bâtiment"
 CURRENT_COMPACT_BUILDING_BROWSER_FILTER: "[SelectLocalization(Not(And(And(And(Not(BuildingBrowserPanel.IsFiltered('owned_national')), Not(BuildingBrowserPanel.IsFiltered('owned_private'))), Not(BuildingBrowserPanel.IsFiltered('owned_foreign'))), Not(BuildingBrowserPanel.IsFiltered('owned_company')))), 'COMPACT_BUILDING_BROWSER_OWNER_SELECTED_FILTER', 'SELECTED_FILTER_ALL_BUILDINGS')], [SelectLocalization(BuildingBrowserPanel.IsFiltered('is_domestic'), 'COMPACT_BUILDING_BROWSER_LOCATION_SELECTED_FILTER', 'EVERYWHERE')]"
 COMPACT_BUILDING_BROWSER_OWNER_SELECTED_FILTER: "[AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('owned_national'), 'NATIONALLY_OWNED_BUILDINGS')][AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('owned_private'), 'PRIVATELY_OWNED_BUILDINGS')][AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('owned_foreign'), 'FOREIGN_OWNED_BUILDINGS')][AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('owned_company'), 'COMPANY_OWNED_BUILDINGS')]"
 COMPACT_BUILDING_BROWSER_LOCATION_SELECTED_FILTER: "[AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('is_domestic'), 'IN_PLAYER_COUNTRY')][AddLocalizationIf(BuildingBrowserPanel.IsFilterNo('is_domestic'), 'ABROAD')]"
 SELECTED_FILTER_ALL_BUILDINGS: "[SelectLocalization(Not(And(And(Not(BuildingBrowserPanel.IsFiltered('is_urban')), Not(BuildingBrowserPanel.IsFiltered('is_rural'))), Not(BuildingBrowserPanel.IsFiltered('is_development')))), 'ALL_CATEGORY_BUILDINGS', 'ALL_BUILDINGS')]"
 NATIONALLY_OWNED_BUILDINGS: "$concept_buildings$ $BUILDING_CATEGORY$ nationalisés"
 PRIVATELY_OWNED_BUILDINGS: "$concept_buildings$ $BUILDING_CATEGORY$ privés"
 FOREIGN_OWNED_BUILDINGS: "$concept_buildings$ $BUILDING_CATEGORY$ détenus par des étrangers"
 COMPANY_OWNED_BUILDINGS: "$concept_buildings$ $BUILDING_CATEGORY$ détenus par des compagnies"
 ALL_CATEGORY_BUILDINGS: "Tous les bâtiments $BUILDING_CATEGORY$"
 BUILDING_CATEGORY: "[ConcatIfNeitherEmpty(' ', AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('is_urban'), 'IS_URBAN'))][ConcatIfNeitherEmpty(' ', AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('is_rural'), 'IS_RURAL'))][ConcatIfNeitherEmpty(' ', AddLocalizationIf(BuildingBrowserPanel.IsFilterYes('is_development'), 'IS_DEVELOPMENT'))]"
 AVAILABILITY: "Disponibilité"
 AVAILABLITY_ALL: "[Concept('concept_building', '$concept_buildings$')] existants ou nouveaux bâtiments potentiels"
 ONLY_AVAILABLE_BUILDING_TYPES: "Uniquement les [Concept('concept_building', '$concept_buildings$')|l] existants"
 ONLY_POTENTIAL_BUILDING_TYPES: "Uniquement les nouveaux [Concept('concept_building', '$concept_buildings$')|l] potentiels"
 BUILDING_BROWSER: "Registre des bâtiments"
 NO_BUILDINGS_MATCHES_THE_CURRENT_FILTER: "Aucun bâtiment ne correspond aux filtres actuels"
 BY_BUILDING_TYPE: "Par type"
 GROUPING: "Groupe"
 INTERACTIONS: "Interactions"
 SITUATED_IN_INCORPORATED_STATE: "Situé dans un État incorporé"
 NOT_SITUATED_IN_INCORPORATED_STATE: "Situé dans un État non incorporé"
 FULLY_EMPLOYED: "Postes pourvus"
 HAS_UNEMPLOYMENT: "Postes vacants"
 CASH_RESERVES: "Réserves de liquidités"
 FULL_CASH_RESERVES: "Réserves de liquidités maximales"
 NOT_FULL_CASH_RESERVES: "Pas de réserves de liquidités maximales"
 IS_SUBSIDIZED: "Subventionné"
 IS_NOT_SUBSIDIZED: "Non subventionné"
 SUBSIDIES: "Subventions"
 IS_DOMESTIC: "Situé dans le pays suivant : [BuildingBrowserPanel.GetCountry.GetName]"
 IS_ABROAD: "Situé à l’étranger"
 SUBSISTENCE: "Subsistance"
 IS_SUBSISTENCE_BUILDING: "Bâtiment de subsistance"
 NOT_SUBSISTENCE_BUILDING: "N’est pas un bâtiment de subsistance"
 HAS_CONSTRUCTION_QUEUED: "File d’attente de construction"
 NOT_CONSTRUCTION_QUEUED: "Pas de file d’attente de construction"
 CAPPED_BUILDING: "Limite de taille"
 IS_CAPPED_BUILDING: "Bâtiment plafonné"
 NOT_CAPPED_BUILDING: "Bâtiment non plafonné"
 INPUT_SHORTAGE: "Pénurie de biens entrants"
 HAS_INPUT_SHORTAGE: "A une pénurie de biens entrants"
 NOT_INPUT_SHORTAGE: "N’a pas de pénurie de biens entrants"
 HIRING_STATUS: "Statut lié à l’embauche"
 IS_HIRING: "Embauche"
 IS_UNWILLING_TO_HIRE: "Refuse d’embaucher"
 IS_UNABLE_TO_HIRE: "Incapable d’embaucher"
 HAS_FAILED_HIRES: "A échoué à embaucher"
 FILTERED_BUILDING_TYPE_SIZE_DESC_HAS_QUEUED: "$NUM_LEVELS$+$NUM_QUEUED$"
 FILTERED_BUILDING_TYPE_SIZE_DESC_NO_QUEUED: "$NUM_LEVELS$"
 BUILDING_GROUP: "Groupe"
 IS_URBAN: "Urbain"
 IS_RURAL: "Rural"
 IS_DEVELOPMENT: "Développement"
 STATE_NAME_WITH_FOREIGN_FLAG_NO_FORMAT: "[AddLocalizationIf( Not(ObjectsEqual(State.GetOwner.Self, GetPlayer.Self)) , 'STATE_OWNER_FLAG_WITH_SPACE' )][State.GetNameNoFormatting]"
 STATE_NAME_WITH_FOREIGN_FLAG: "[AddLocalizationIf( Not(ObjectsEqual(State.GetOwner.Self, GetPlayer.Self)) , 'STATE_OWNER_FLAG_WITH_SPACE' )][State.GetName]"
 STATE_OWNER_FLAG_WITH_SPACE: "[State.GetOwner.GetFlagTextIcon] "
 OWNERSHIP: "Propriété"
 BUILDING_BROWSER_CONSTRUCTING: "Construction..."
 BUILDING_FILTER_OWNERSHIP: "Propriétaires"
 BUILDING_FILTER_OWNERSHIP_GOVERNMENT_TT: "A des [Concept('concept_building_level', '$concept_building_levels$')|l] nationalisés détenus par [GetPlayer.GetAltNameNoFormatting('Le')][GetPlayer.GetName]"
 BUILDING_FILTER_OWNERSHIP_PRIVATE_TT: "A des [Concept('concept_building_level', '$concept_building_levels$')|l] privés détenus par des [Concept('concept_pop', '$concept_pops$')|l] [GetPlayer.GetAltAdjective('MP')|l]"
 BUILDING_FILTER_OWNERSHIP_FOREIGN_TT: "A des [Concept('concept_building_level', '$concept_building_levels$')|l] avec des propriétaires non-[GetPlayer.GetAltAdjectiveNoFormatting('MP')|l]"
 BUILDING_FILTER_OWNERSHIP_COMPANY_TT: "A des [Concept('concept_building_level', '$concept_building_levels$')|l] détenus par des [Concept('concept_company', '$concept_companies$')|l] [GetPlayer.GetAltAdjective('FP')|l]"
 BUILDING_CONTROLLER: "#header Contrôleur du bâtiment#!\n[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] contrôle les [Concept('concept_production_method', '$concept_production_methods$')|l] de ce bâtiment"
 CONSTRUCTION_IN_COUNTRY: "#v [Country.GetNumActiveConstructionQueueElements]#! [Concept('concept_building', '$concept_buildings$')|l] [concept_under_construction|l]"
 BUILDING_OWNERSHIP_LABEL: "[SelectLocalization(ObjectsEqual(BuildingOwnership.GetOwnedBuilding.Self, BuildingOwnership.GetOwnerBuilding.Self),'BUILDING_OWNERSHIP_LABEL_BLD_WORKFORCE','BUILDING_OWNERSHIP_LABEL_BLD_IN_STATE')]"
 BUILDING_OWNERSHIP_LABEL_BLD_IN_STATE: "[BuildingOwnership.GetOwnerBuilding.GetName] en [AddTextIf( Not( ObjectsEqual( BuildingOwnership.GetOwnerBuilding.GetState.GetOwner, BuildingOwnership.GetOwnedBuilding.GetState.GetOwner )), BuildingOwnership.GetOwnerBuilding.GetState.GetOwner.GetFlagTextIcon )][BuildingOwnership.GetOwnerBuilding.GetState.GetName]"
 BUILDING_OWNERSHIP_LABEL_BLD_WORKFORCE: "[concept_workforce] locale"
 OWNERSHIP_SHARE_CHART_TOOLTIP: "[SelectLocalization( BuildingOwnership.IsCountryOwned, 'OWNERSHIP_SHARE_CHART_TOOLTIP_NATIONAL', 'OWNERSHIP_SHARE_CHART_TOOLTIP_PRIVATE')]"
 OWNERSHIP_SHARE_CHART_TOOLTIP_PRIVATE: "#header $BUILDING_OWNERSHIP_LABEL$#!\nPossède [BuildingOwnership.GetLevel|v] [Concept('concept_building_level', '$concept_building_levels_short$')|l] privés ([BuildingOwnership.GetOwnershipRatio|0%] du total)$OWNERSHIP_SHARE_CHART_TOOLTIP_FOREIGN$"
 OWNERSHIP_SHARE_CHART_TOOLTIP_NATIONAL: "#header [BuildingOwnership.GetOwnerCountry.GetName]#!\nPossède [BuildingOwnership.GetLevel|v] [Concept('concept_building_level', '$concept_building_levels_short$')|l] nationaux ([BuildingOwnership.GetOwnershipRatio|0%] du total)$OWNERSHIP_SHARE_CHART_TOOLTIP_FOREIGN$"
 OWNERSHIP_SHARE_CHART_REMAINDER_TOOLTIP_SHORT: "Le bâtiment [Building.GetName] en [Building.GetState.GetName] est une [Concept('concept_privately_owned', '$concept_privately_owned$')|l] de [GetDataModelSize(Building.GetCappedOwnersShortRest)|v] autres [Concept('concept_building', '$concept_buildings$')|l]"
 OWNERSHIP_SHARE_CHART_REMAINDER_TOOLTIP_LONG: "Le bâtiment [Building.GetName] en [Building.GetState.GetName] est une [Concept('concept_privately_owned', '$concept_privately_owned$')|l] de [GetDataModelSize(Building.GetCappedOwnersLongRest)|v] autres [Concept('concept_building', '$concept_buildings$')|l]"
 OWNERSHIP_SHARE_CHART_TOOLTIP_FOREIGN: "[AddLocalizationIf(Not(ObjectsEqual(BuildingOwnership.GetOwnerCountry.Self, BuildingOwnership.GetOwnedBuilding.GetState.GetOwner.Self)),'OWNERSHIP_SHARE_CHART_TOOLTIP_FOREIGN_TEXT')]"
 OWNERSHIP_SHARE_CHART_TOOLTIP_FOREIGN_TEXT: "\n[concept_foreign_investment]@foreign_investment!"
 OWNERSHIP_SHARE_CHART_TOOLTIP_LOCAL_WORKFORCE_HEADER: "$BUILDING_OWNERSHIP_LABEL_BLD_WORKFORCE$ :"
 OWNERSHIP_SHARE_CHART_TOOLTIP_OWNER_BUILDING_WORKFORCE_HEADER: "[concept_workforce] de [BuildingOwnership.GetOwnerBuilding.GetName] :"
 OWNERSHIP_SHARE_CHART_TOOLTIP_WORKFORCE_POP_LINE: "[PopListItem.GetWorkingAdultsPopSize|Dv] [PopListItem.GetPopType.GetName]"
 PROPERTY_SHARE_BUILDING_DESC: "[BuildingOwnership.GetOwnedBuilding.GetName] en [BuildingOwnership.GetOwnedBuilding.GetState.GetName]"
 PROPERTY_SHARE_CHART_TOOLTIP: "#header $PROPERTY_SHARE_BUILDING_DESC$#!\n#v [BuildingOwnership.GetOwnershipRatio|0%]#! ([BuildingOwnership.GetLevel|v] niveaux) en possession de [BuildingOwnership.GetOwnerBuilding.GetName] en [BuildingOwnership.GetOwnerBuilding.GetState.GetName].\nCela représente #v [BuildingOwnership.GetPropertyRatio|0%]#! du portefeuille immobilier total de [BuildingOwnership.GetOwnerBuilding.GetName] en [BuildingOwnership.GetOwnerBuilding.GetState.GetName]."
 PROPERTY_SHARE_ENTRY_LABEL: "[BuildingOwnership.GetOwnedBuilding.GetName] en [AddTextIf( Not( ObjectsEqual( BuildingOwnership.GetOwnerBuilding.GetState.GetOwner, BuildingOwnership.GetOwnedBuilding.GetState.GetOwner )), BuildingOwnership.GetOwnedBuilding.GetState.GetOwner.GetFlagTextIcon )][BuildingOwnership.GetOwnedBuilding.GetState.GetName]"
 PROPERTY_SHARE_REMAINDER_TOOLTIP_SHORT: "Le bâtiment [Building.GetName] en [Building.GetState.GetName] détient des [Concept('concept_building_level', '$concept_building_levels_short$')|l] dans [GetDataModelSize(Building.GetCappedAssetsShortRest)|v] autres [Concept('concept_building', '$concept_buildings$')|l]"
 PROPERTY_SHARE_REMAINDER_TOOLTIP_LONG: "Le bâtiment [Building.GetName] en [Building.GetState.GetName] détient des [Concept('concept_building_level', '$concept_building_levels_short$')|l] dans [GetDataModelSize(Building.GetCappedAssetsLongRest)|v] autres [Concept('concept_building', '$concept_buildings$')|l]"
 BUILDING_OWNERSHIP_DIVIDENDS_TOOLTIP: "#header [concept_dividends]#!\n[BuildingOwnership.GetOwnedBuilding.GetName] en [BuildingOwnership.GetOwnedBuilding.GetState.GetName] paie #v @money![BuildingOwnership.GetDividendToOwner|D]#! à [SelectLocalization(BuildingOwnership.IsCountryOwned, BuildingOwnership.GetOwnerCountry.GetName, 'BUILDING_OWNERSHIP_LABEL')] en [concept_dividends|l]"
 BUILDING_OWNERSHIP_INVALID_ENTRY: "Actualisation..."
 #TODO PRCAL-27395 - Describe the actual filter selected
 CURRENT_CONSTRUCTION_FILTER_DESC: "[SelectLocalization(MapListBuildingPanel.HasFilter('all'), 'CURRENT_CONSTRUCTION_FILTER_ALL', 'CURRENT_CONSTRUCTION_FILTER_SPECIFIC')]"
 CURRENT_CONSTRUCTION_FILTER_ALL: "National et à l’étranger"
 CURRENT_CONSTRUCTION_FILTER_SPECIFIC: "[SelectLocalization(MapListBuildingPanel.HasFilter('domestic'), 'CURRENT_CONSTRUCTION_FILTER_DOMESTIC', 'CURRENT_CONSTRUCTION_FILTER_ABROAD')]"
 CURRENT_CONSTRUCTION_FILTER_DOMESTIC: "National - [Concept('concept_state','$concept_states$')] [GetPlayer.GetAltAdjective('MP')|l] uniquement"
 CURRENT_CONSTRUCTION_FILTER_ABROAD: "À l’étranger - [Concept('concept_state','$concept_states$')] étrangers uniquement"
 SHOW_VALUES_FOR_FULL_EMPLOYEMENT: "#tooltippable Valeurs au plein emploi#!"
 LOCATION_FILTER_ALL: "#header Tout#!\nAfficher tous les États"
 LOCATION_FILTER_DOMESTIC: "#header National#!\nAfficher uniquement les États [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName]"
 LOCATION_FILTER_ABROAD: "#header À l’étranger#!\nAfficher uniquement les États hors [GetPlayer.GetAltNameNoFormatting('Du')][GetPlayer.GetName]"
 SORT_TRAITS_TOOLTIP: "#header Traits d’État#!\n$TOOLTIP_DELIMITER$\nLe nombre de traits d’État dans cet État"
 SORT_CONTROLLER_TOOLTIP: "#header Contrôleur#!\n$TOOLTIP_DELIMITER$\nPays ayant le pouvoir de changer les méthodes de production dans ce bâtiment"
 SORT_CONSTRUCTION_EFFICIENCY_TOOLTIP: "#header Efficacité de la construction#!\n$TOOLTIP_DELIMITER$\n$state_construction_mult_desc$"
 SORT_EMPLOYMENT_TOOLTIP: "#header Emploi#!\n$TOOLTIP_DELIMITER$\nLe nombre de groupes sociaux travaillant dans ce bâtiment"
 SORT_CASH_RESERVES_TOOLTIP: "#header [concept_cash_reserves]#!\n$TOOLTIP_DELIMITER$\nLa quantité de réserves de liquidités de ce bâtiment"
 OWNER_TYPE_FILTER_GOVERNMENT: "#header Gouvernement#!\n$TOOLTIP_DELIMITER$\nAfficher uniquement les bâtiments détenus par le gouvernement"
 OWNER_TYPE_FILTER_PRIVATE: "#header Privé#!\n$TOOLTIP_DELIMITER$\nAfficher uniquement les bâtiments détenus par des propriétaires privés"
 OWNER_TYPE_FILTER_WORKERS: "#header Employés#!\n$TOOLTIP_DELIMITER$\nAfficher uniquement les bâtiments détenus par des employés"
 FULL: "Complète"
 CONDENSED: "Condensée"
 LIST_ITEM: "Élément de la liste"
 CONSTRUCTION_CONDENSED_OR_FULL: "[SelectLocalization(GetVariableSystem.Exists('construction_list_toggle_full_or_condensed'), 'FULL', 'CONDENSED')]"
 DATAMODEL_INDEX: "[PdxGuiWidget.GetIndexInDataModel]"
 CONTROLLER_FILTER_PLAYER: "#header Sous contrôle [GetPlayer.GetAltNameNoFormatting('Du')][GetPlayer.GetName]#!\n$TOOLTIP_DELIMITER$\nAfficher uniquement les bâtiments contrôlés par [GetPlayer.GetAltNameNoFormatting('Le')][GetPlayer.GetName]"
 CONTROLLER_FILTER_OTHER: "#header Sous contrôle d’autrui#!\n$TOOLTIP_DELIMITER$\nAfficher uniquement les bâtiments qui ne sont pas contrôlés par [GetPlayer.GetAltNameNoFormatting('Le')][GetPlayer.GetName]"
 COMMAND_CONFIRMATION_PROMOTE_CHARACTER: "Voulez-vous $PROMOTE_CHARACTER_HEADER$ ?\n$TOOLTIP_DELIMITER$\n$PROMOTION_EFFECTS_TOOLTIP$\n\nCeci ne peut être annulé."
 COMMAND_CONFIRMATION_CAPITULATE: "Voulez-vous capituler dans la guerre [WAR.GetName] ? Tous les [Concept('concept_war_goal', '$concept_war_goals$')|l] contre votre pays et vos sujets seront automatiquement appliqués."
 COMMAND_CONFIRMATION_YIELD: "Voulez-vous renoncer dans le [concept_diplomatic_play|l] contre [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName] ? Leurs [Concept('concept_primary_demand','$concept_primary_demands$')|l] contre nous seront appliquées."
 COMMAND_CONFIRMATION_DECLARE_NEUTRALITY: "Voulez-vous vous déclarer neutre dans ce [concept_diplomatic_play|l] ? Il ne sera pas possible d’y prendre part plus tard."
 COMMAND_CONFIRMATION_START_DIPLOMATIC_PLAY: "Voulez-vous jouer un [concept_diplomatic_play|l] [DiplomaticPlayType.GetName] ? Cela peut entraîner une guerre."
 COMMAND_CONFIRMATION_START_DIPLOMATIC_PLAY_COUNTRY_WITH_DEFINITION: "[DiplomaticPlayType.GetStartDescCountryWithDefinition(GetPlayer,Country.Self,CountryDefinition.Self)]"
 COMMAND_CONFIRMATION_START_DIPLOMATIC_PLAY_COUNTRY: "[DiplomaticPlayType.GetStartDescCountry(GetPlayer,Country.Self)]"
 COMMAND_CONFIRMATION_START_DIPLOMATIC_PLAY_STATE: "[DiplomaticPlayType.GetStartDescState(GetPlayer,State.Self)]"
 COMMAND_CONFIRMATION_DISBAND_FORMATION: "Voulez-vous #r dissoudre#! [MILITARY_FORMATION.GetName] ?"
 DISBAND_COMMAND_HEADER: "#r Dissoudre#! [MILITARY_FORMATION.GetName] aura les effets suivants :"
 DISBAND_COMMAND_FORMATION_ENTRY_BEGINNING: "Seront transférées vers [MILITARY_FORMATION.GetName] :"
 DISBAND_COMMAND_FORMATION_ENTRY_COMMANDER: "* [CHARACTER.GetFullNameWithTitle]"
 DISBAND_COMMAND_FORMATION_ENTRY_UNIT: "* [COMBAT_UNIT_TYPE.GetIconString] $NUM_UNITS|v$ [COMBAT_UNIT_TYPE.GetName]"
 DISBAND_COMMAND_ENTRY_BEGINNING: "Transfère "
 DISBAND_COMMAND_UNIT_ENTRY: "$NUM_UNITS|v$ [COMBAT_UNIT_TYPE.GetName] [COMBAT_UNIT_TYPE.GetIconString]"
 DISBAND_COMMAND_UNIT_ENTRY_END: " à [MILITARY_FORMATION.GetName]"
 DISBAND_COMMAND_DISBANDED_UNITS_END: " seront dissous"
 DISBAND_COMMAND_COMMANDER_ENTRY: "Transfère [CHARACTER.GetFullName] à [MILITARY_FORMATION.GetName]"
 DISBAND_COMMAND_TOO_MANY_COMMANDERS: "Vous ne pouvez pas dissoudre cette [SelectLocalization(MilitaryFormation.IsArmy,'concept_army','concept_fleet')|l] car vos [SelectLocalization(MilitaryFormation.IsArmy,'concept_generals','concept_admirals')|l] sont trop nombreux et l’espace insuffisant dans les autres [SelectLocalization(MilitaryFormation.IsArmy,'concept_armies','concept_fleets')|l].\n\n#indent_newline:3 Pensez à mettre ces [SelectLocalization(MilitaryFormation.IsArmy,'concept_generals','concept_admirals')|l] à la retraite d’abord :\n$BREAKDOWN$#!"
 DISBAND_COMMAND_DISBAND_COMMANDER_ENTRY: "[Character.GetFullName] ([Character.GetRankName])"
 DISBAND_COMMAND_MENTION_THAT_TRACKING_FORMATIONS_WILL_GO_SOMEWHERE_ELSE: "Les formations qui se déplacent pour fusionner dans [MILITARY_FORMATION.GetName] essaieront de trouver une autre formation avec laquelle fusionner. Si elles n’en trouvent pas, elles stationneront dans le QG disponible le plus proche."
 DISBAND_COMMAND_CONFIRM: "Voulez-vous continuer ?"
 COMMAND_CONFIRMATION_MOBILIZE_ARMY: "Voulez-vous [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilize$')|l] la formation [MILITARY_FORMATION.GetName] ?"
 COMMAND_CONFIRMATION_MOBILIZE_ARMIES: "Voulez-vous [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilize$')|l] toutes vos [Concept('concept_army', '$concept_armies$')|l] ?"
 COMMAND_CONFIRMATION_DEMOBILIZE_ARMY: "Voulez-vous [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')|l] [MILITARY_FORMATION.GetName] ?\n\n$EARLY_DEMOBILIZATION_WARNING$"
 COMMAND_CONFIRMATION_DEMOBILIZE_ARMIES: "Voulez-vous [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')|l] toutes vos [Concept('concept_army', '$concept_armies$')|l] ?\n\n$EARLY_DEMOBILIZATION_WARNING$"
 COMMAND_CONFIRMATION_DEMOBILIZE_SELECTED_ARMIES: "Voulez-vous [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')|l] toutes les [Concept('concept_army', '$concept_armies$')|l] sélectionnées ?\n\n$EARLY_DEMOBILIZATION_WARNING$"
 EARLY_DEMOBILIZATION_WARNING: "@warning! Une démobilisation anticipée entraînera le retour des [Concept('concept_army','$concept_armies$')|l] dans leur [Concept('concept_hq','$concept_hqs$')] d’origine, où elles resteront indisponibles pendant [GetDefine('NMilitary','DEMOBILIZATION_TIME_DAYS')|v0] jours. La [concept_good_consumption|l] des [Concept('concept_good','$concept_goods$')|l] de mobilisation diminuera progressivement pendant cette période."
 COMMAND_CONFIRMATION_REMOVE_INCORPORATE_STATE: "Souhaitez-vous vraiment arrêter d’incorporer [STATE.GetName] ?"
 COMMAND_CONFIRMATION_REMOVE_INCORPORATE_STATE_UNSPECIFIED: "Souhaitez-vous vraiment arrêter d’incorporer cet État ?"
 COMMAND_CONFIRMATION_DOWNSIZE_LAST_EXIT_PORT: "Cela détruirait le [GetBuildingType('building_port').GetName|l]. Voulez-vous continuer ?\n\n@information! Le démolir pourrait isoler des [Concept('concept_state','$concept_states$')] de leur [concept_market|l] s’ils ne peuvent pas accéder à la [concept_market_capital|l] via un autre [GetBuildingType('building_port').GetNameNoFormatting|l]."
 AGE: "Âge"
 CHARACTER_AGE: "#v [Character.GetAge]#!"
 CHARACTER_AGE_TOOLTIP: "#header [Character.GetFullName]#! a #v [Character.GetAge]#! ans\n$TOOLTIP_DELIMITER$\n[Character.GetFirstName] est né[Character.GetCustom('FR_E')] le #v [Character.GetBirthday]#!"
 CHARACTER_INTERACTIONS_BUTTON_TOOLTIP: "[SelectLocalization(Not(IsDataModelEmpty(Character.GetInteractions)), 'CHARACTER_INTERACT_WITH', 'CHARACTER_CAN_NOT_INTERACT_WITH')]"
 CHARACTER_INTERACT_WITH: "Interagir avec [Character.GetFullName]"
 CHARACTER_CAN_NOT_INTERACT_WITH: "Aucune interaction disponible avec [Character.GetFullName]"
 CHARACTER_INTERACTIONS_HEADER: "Actions"
 CHARACTER_HISTORICAL_HEADER: "Personnage historique"
 CHARACTER_HISTORICAL_OPEN_URL: "En savoir plus"
 CHARACTER_HISTORICAL_OPEN_URL_TOOLTIP: "Cela ouvrira le lien suivant dans votre navigateur\n\n[Character.GetHistoricalUrl|v]"
 DIPLOMATIC_PLAY_NOT_FORCED_WARNING: "S’ils refusent, cela déclenchera immédiatement un [concept_diplomatic_play|l] qui peut dégénérer en [concept_war|l]"
 DIPLOMATIC_PLAY_FORCED_WARNING: "Cela déclenchera immédiatement un [concept_diplomatic_play|l] qui peut dégénérer en [concept_war|l]"
 DIPLOMATIC_DEMAND: "[concept_diplomatic_demand]"
 DIPLOMATIC_DEMAND_AI_ACCEPTANCE_BREAKDOWN: "#header $CHANCE|%0$ de chances que [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] accepte “$DEMAND_NAME|v$”#!\n$TOOLTIP_DELIMITER$\nSon score d’acceptation de $SCORE|=+$ est dû aux facteurs suivants :\n$DETAILS$"
 DIPLOMATIC_DEMAND_AI_WILL_ACCEPT: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #p Ils accepteront#!#!#!"
 DIPLOMATIC_DEMAND_AI_WILL_NOT_ACCEPT: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #n Ils n’accepteront PAS#!#!#!"
 DIPLOMATIC_DEMAND_AI_MIGHT_ACCEPT: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #v Ils pourraient accepter ($CHANCE|%0$ de chances)#!#!#!"
 DIPLOMATIC_DEMAND_ACCEPTANCE_BASE_VALUE: "$VALUE|=+$ en raison de la valeur de base"
 DIPLOMATIC_DEMAND_ACCEPTANCE_WARGOAL_IMPACT: "$VALUE|=+$ en raison de l’effet de l’[concept_war_goal|l] désiré"
 DIPLOMATIC_DEMAND_ACCEPTANCE_WILL_BE_ANNEXED: "$VALUE|=+$ en raison de la volonté d'être annexé"
 DIPLOMATIC_DEMAND_ACCEPTANCE_WILL_BE_ANNEXED_LIBERTY_DESIRE: "$VALUE|=+$ en raison de la volonté d'être annexé par le [concept_overlord|l] quand le [concept_liberty_desire|l] est de $LIBERTY_DESIRE|0v$"
 DIPLOMATIC_DEMAND_ACCEPTANCE_WILL_BE_SUBJUGATED: "$VALUE|=+$ en raison de la volonté de devenir un [concept_subject|l] de type #v $SUBJECT_TYPE$#!"
 DIPLOMATIC_DEMAND_ACCEPTANCE_WILL_LOSE_INCORPORATED_STATE: "$VALUE|=+$ en raison de la volonté de céder un [concept_incorporated_state]"
 DIPLOMATIC_DEMAND_ACCEPTANCE_MILITARY_POWER_FACTOR: "$VALUE|=+$ en raison de la différence de puissance militaire attendue"
 DIPLOMATIC_DEMAND_ACCEPTANCE_LOYAL_SUBJECT: "$VALUE|=+$ en raison de la loyauté du [concept_subject|l]"
 DIPLOMATIC_DEMAND_ACCEPTANCE_UPPER_BOUND: "Limité à un #b maximum#! de $VALUE|v0$ ([concept_diplomatic_play] $PLAY_NAME$)"
 RELEASE_COUNTRY_HEADER: "Libérer [CountryCreation.GetName]"
 RELEASE_COUNTRY_SUBJECT_DESC: "Voulez-vous vraiment libérer [COUNTRY_CREATION.GetName] pour en faire un [concept_country|l] [concept_subject|l] [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName] ?\n\n$COUNTRY_REWARDS$"
 RELEASE_COUNTRY_INDEPENDENT_DESC: "Voulez-vous vraiment libérer [COUNTRY_CREATION.GetName] pour en faire un [concept_country|l] indépendant ?\n\n$COUNTRY_REWARDS$"
 RELEASE_COUNTRY_WILL_RECEIVE_STATES: "Ils recevront les États suivants :\n[COUNTRY_CREATION.ListReleasableStates(GetPlayer)]"
 RELEASE_COUNTRY_WILL_RECEIVE_PROVINCES: "Ils recevront [COUNTRY_CREATION.GetNumProvincesToRelease|v] province(s) dans la [concept_state_region|l] [COUNTRY_CREATION.GetCapital.GetName]"
 RELEASE_COUNTRY_AS_INDEPENDENT: "Libérer en tant que pays indépendant"
 RELEASE_COUNTRY_AS_OWN_SUBJECT: "Libérer en tant que [concept_country|l] [concept_subject|l]"
 RELEASE_COUNTRY_PLAY_AS: "Jouer en tant que [CountryCreation.GetName]"
 FORCE_DIPLOMATIC_PLAY: "Forcer un [concept_diplomatic_play|l]"
 FORCE_DIPLOMATIC_PLAY_TOOLTIP: "#header $FORCE_DIPLOMATIC_PLAY$#!\n$TOOLTIP_DELIMITER$\nActiver cette option permet de contourner la [concept_diplomatic_demand|l] et de lancer instantanément un [concept_diplomatic_play|l] permettant de formuler des exigences supplémentaires à l’encontre de l’ennemi."
 COMMANDER_RECRUIT_BUTTON_TOOLTIP_EFFECTS: "#header Recruter [Character.GetFullName]\n#![ConcatIfNeitherEmpty(GetDesc(Character.GetRecruitCommand( PopupManager.GetRecruitFormation )),'\n')]$TOOLTIP_DELIMITER$[ConcatIfNeitherEmpty('\n', Character.GetCommanderRank.GetModifiers( Character.Self ))]"
 COMMANDER_RECRUIT_BUTTON_TOOLTIP: "$COMMANDER_RECRUIT_BUTTON_TOOLTIP_EFFECTS$"
 YES_CHECK: "@green_checkmark_box!"
 NO_CHECK: "@simple_box!"
 CONFIRM_YES: "Oui"
 CONFIRM_NO: "Non"
 UNLOCK_TOPBAR: "Cliquez pour #bold déverrouiller#!"
 LOCK_TOPBAR: "Cliquez pour #bold verrouiller#!"
 OUTLINER_PINNED: "Épi"
 OUTLINER_ECONOMY: "Éco"
 OUTLINER_POLITICS: "Pol"
 OUTLINER_DIPLOMACY: "Dip"
 OUTLINER_MILITARY: "Mil"
 OUTLINER_ALL: "Tout"
 OUTLINER_TOGGLE_PINNED_TOOLTIP: "#header Afficher Épinglés au tableau de bord#!"
 OUTLINER_TOGGLE_ECONOMY_TOOLTIP: "#header Afficher Économie au tableau de bord#!"
 OUTLINER_TOGGLE_POLITICS_TOOLTIP: "#header Afficher Politique au tableau de bord#!"
 OUTLINER_TOGGLE_DIPLOMACY_TOOLTIP: "#header Afficher Diplomatie au tableau de bord#!"
 OUTLINER_TOGGLE_MILITARY_TOOLTIP: "#header Afficher Militaire au tableau de bord#!"
 OUTLINER_TOGGLE_ALL_TOOLTIP: "#header Afficher Tout au tableau de bord#!"
 BASE_SCRIPT_VALUE_FORMAT: "$KEY$ : $VALUE|+=0$"
 DECIMAL_SCRIPT_VALUE_FORMAT: "$KEY$ : $VALUE|+=$"
 NEUTRAL_SCRIPT_VALUE_FORMAT: "$KEY$ : $VALUE|=0v$"
 NEUTRAL_DECIMAL_SCRIPT_VALUE_FORMAT: "$VALUE|=D+$ $KEY$"
 SCRIPT_VALUE_KEY_AFTER_FORMAT: "$VALUE|+=0$ : $KEY$"
 incorporated_state: "[concept_incorporated_state]"
 unincorporated_state: "[concept_unincorporated_state]"
 treaty_port_state: "[concept_treaty_port]"
 colonial_state: "[concept_colony]"
 recently_conquered_state: "Récemment conquis"
 recently_liberated_state: "Récemment libéré"
 state_type_colony: "[concept_colony]"
 state_type_unincorporated: "[concept_unincorporated_state]"
 state_type_incorporated: "[concept_incorporated_state]"
 state_type_treaty_port: "[concept_treaty_port]"
 STATE_GOODS_POTENTIAL_SUMMARY: "Peut accueillir $POTENTIAL|v$ [BUILDING_TYPE.GetName] (actuellement $CUR|v$) : chaque bâtiment de ce type peut produire au maximum $AMOUNT|0v$ [GOODS.GetName][GOODS.GetTextIcon] au débit de base avec nos technologies et lois actuelles."
 STATE_GOODS_POTENTIALS_TOOLTIP: "#header [GOODS.GetName] [GOODS.GetTextIcon] de [STATE.GetName]#!\nProduction de base potentielle : [STATE.GetPotentialProductionForCountry(GOODS.Self, GetPlayer)|Dv]\n$TOOLTIP_DELIMITER$\nProduction : [STATE.GetNumProduced(GOODS.Self)|1v]\nConsommation : [STATE.GetNumConsumed(GOODS.Self)|1v]\n\n[STATE.GetPotentialProductionForCountryDesc(GOODS.Self, GetPlayer)]"
 STATE_GOODS_PRODUCTION_TOOLTIP: "#header [GOODS.GetName] [GOODS.GetTextIcon] de [STATE.GetName]#!\nProduction : [STATE.GetNumProduced(GOODS.Self)|0v]\n$TOOLTIP_DELIMITER$\nConsommation : [STATE.GetNumConsumed(GOODS.Self)|1v]\nProduction de base potentielle : [STATE.GetPotentialProductionForCountry(GOODS.Self, GetPlayer)|0v]\n\n[STATE.GetPotentialProductionForCountryDesc(GOODS.Self, GetPlayer)]"
 STATE_GOODS_CONSUMPTION_TOOLTIP: "#header [GOODS.GetName] [GOODS.GetTextIcon] de [STATE.GetName]#!\nConsommation : [STATE.GetNumConsumed(GOODS.Self)|0v]\n$TOOLTIP_DELIMITER$\nProduction : [STATE.GetNumProduced(GOODS.Self)|1v]\nProduction de base potentielle : [STATE.GetPotentialProductionForCountry(GOODS.Self, GetPlayer)|0v]\n\n[STATE.GetPotentialProductionForCountryDesc(GOODS.Self, GetPlayer)]"
 STATE_GOODS_LOCAL_PRICES_TOOLTIP: "[GOODS.GetStatePriceDesc]"
 DIPLOMACY_HOVER_ATTITUDE_COUNTRY: "#header Voir l’[concept_attitude|l] du point de vue [Country.GetAltNameNoFormatting('Du')][Country.GetName]#!"
 DIPLOMACY_HOVER_RELATIONS_COUNTRY: "#header Voir les [concept_relations|l] du point de vue [Country.GetAltNameNoFormatting('Du')][Country.GetName]#!"
 TREATY_CAN_WITHDRAW_ALL_ARTICLES: "Cela supprimera l’intégralité du [concept_treaty|l]"
 TREATY_CAN_WITHDRAW_SOME_ARTICLES: "Cela ne supprimera que les [Concept('concept_article','$concept_articles$')|l] suivants :#indent_newline:3 \n$CAN_WITHDRAW_LIST$#!\n\n[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] ne peut pas supprimer :#indent_newline:3 \n$CANNOT_WITHDRAW_LIST$#!\n\nCar :#indent_newline:3 \n$DETAILS$#!"
 TREATY_CANNOT_WITHDRAW_ANY_ARTICLES: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] ne peut pas supprimer les [Concept('concept_article','$concept_articles$')|l] suivants#indent_newline:3 \n$LIST$#!\n\nCar :#indent_newline:3 \n$DETAILS$#!"
 TREATY_WITHDRAW_TOOLTIP: "#header Se retirer du traité [Treaty.GetName]#!\n$TOOLTIP_DELIMITER$\n[Treaty.GetCanWithdrawDesc(GetPlayer.Self)]$WITHDRAW_FROM_TREATY_ALL_EFFECTS$"
 WITHDRAW_FROM_TREATY: "Se retirer"
 WITHDRAW_FROM_TREATY_COMMAND_DESC: "Voulez-vous vraiment vous retirer du traité [Treaty.GetName] ?$WITHDRAW_FROM_TREATY_ALL_EFFECTS$"
 WITHDRAW_FROM_TREATY_ALL_EFFECTS: "$BREAK_TREATY_EFFECTS_IF_EXIST$$WITHDRAW_FROM_TREATY_EFFECTS_IF_EXIST$"
 WITHDRAW_FROM_TREATY_EFFECTS_IF_EXIST: "[ConcatIfNeitherEmpty( '\n\n', AddLocalizationIf( Not( StringIsEmpty( Treaty.GetWithdrawPenaltiesDesc( Treaty.GetFirstCountry.Self ) ) ), 'WITHDRAW_FROM_TREATY_EFFECTS' ) )]"
 WITHDRAW_FROM_TREATY_EFFECTS: "#title Effets génériques :#! #indent_newline:3 \n[Treaty.GetWithdrawPenaltiesDesc( Treaty.GetFirstCountry.Self )]#!"
 BREAK_TREATY_EFFECTS_IF_EXIST: "[ConcatIfNeitherEmpty( '\n\n', AddLocalizationIf( Not( StringIsEmpty( Treaty.GetBreakPenaltiesDesc( Treaty.GetFirstCountry.Self ) ) ), 'BREAK_TREATY_EFFECTS' ) )]"
 BREAK_TREATY_EFFECTS: "#title Pénalités résultant de la [concept_binding_period|l] restante de #v [Treaty.GetBindingPeriodRemainingFormatted]#! :#! #indent_newline:3 \n[Treaty.GetBreakPenaltiesDesc( Treaty.GetFirstCountry.Self )]#!"
 TREATY_RENEGOTIATE_TOOLTIP: "Renégocier ce [concept_treaty|l][ConcatIfNeitherEmpty('\n', AddLocalizationIf(Treaty.IsEnforced, 'CANNOT_NEGOTIATE_TREATY_IS_ENFORCED'))]"
 RENEGOTIATE_TREATY: "Renégocier le traité"
 CANNOT_NEGOTIATE_TREATY_IS_ENFORCED: "@red_cross! Ce [concept_treaty|l] est [Concept('concept_enforced_treaty', '$concept_enforced_treaty_short$')|l]"
 NEGOTIATE: "Négocier"
 TREATY_PROPOSAL_NEGOTIATE_TOOLTIP: "Négocier ce [concept_treaty|l][ConcatIfNeitherEmpty('\n', AddLocalizationIf(Treaty.IsEnforced, 'CANNOT_NEGOTIATE_TREATY_IS_ENFORCED'))]"
 TREATY_DRAFT_PANEL_LEFT_SECTION_HEADER: "Vos [Concept('concept_article', '$concept_articles$')|l]"
 TREATY_DRAFT_PANEL_RIGHT_SECTION_HEADER: "[Concept('concept_article', '$concept_articles$')] [TreatyDraft.GetRightCountry.GetAltAdjective('MP')|l]"
 TREATY_MUTUAL_AGREEMENTS: "Accords mutuels"
 TREATY_UNAVAILABLE_MUTUAL_AGREEMENTS: "Accords mutuels indisponibles"
 TREATY_OFFER: "Offre"
 TREATY_UNAVAILABLE_OFFERS: "$concept_articles$ indisponibles"
 TREATY_DIRECTIONAL: "Directionnel"
 TREATY_DEMAND: "Exigence"
 TREATY_UNAVAILABLE_DEMANDS: "$concept_articles$ indisponibles"
 UNAVAILABLE: "Indisponible"
 TREATY_ARTICLE_TYPE_TITLE: "Ajouter l’[concept_article|l] [ArticleDraft.GetArticleType.GetNameNoIcon]"
 TREATY_SEND_PROPOSAL: "Envoyer la proposition"
 ARTICLE_NUMBER: "[Article.GetArticleNumber]"
 ARTICLE_DRAFT_NUMBER: "[ArticleDraft.GetArticleNumber]"
 NO_LEFT_SIDE_ARTICLES: "Aucun"
 NO_RIGHT_SIDE_ARTICLES: "Aucun"
 NO_LEFT_SIDE_ARTICLES_DRAFT: "Aucun"
 NO_RIGHT_SIDE_ARTICLES_DRAFT: "Aucun"
 TREATY_DRAFT_COUNTRY_IS_SUBJECT_OF_OTHER_COUNTRY: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] est [Country.GetSubjectType.GetName] [TreatyDraft.GetOtherCountry(Country.Self).GetAltNameNoFormatting('Du')][TreatyDraft.GetOtherCountry(Country.Self).GetName] et ne possède donc pas son propre [concept_ruler|l]."
 ARTICLE_INPUT_RIGHT_CLICK_MENU_TITLE: "[ArticleDraft.GetArticleType.GetNameNoFormatting]"
 TREATY_SELECT_AMOUNT: "Sélectionner un montant..."
 TREATY_SELECT_NAME: "Entrez un nom de traité personnalisé..."
 TREATY_BINDING_PERIOD: "$concept_binding_period_bound$ pour #bold_black [Treaty.GetBindingPeriodFormatted]#!"
 TREATY_BINDING_PERIOD_REMAINING: "[Concept('concept_binding_period', '$concept_binding_period_bound$')] pour #bold_black [Treaty.GetBindingPeriodRemainingFormatted]#!"
 TREATY_BINDING_PERIOD_REMAINING_NO_CONCEPT: "Engagé pour #bold_black [Treaty.GetBindingPeriodRemainingFormatted]#!"
 TREATY_BINDING_PERIOD_HAS_ENDED: "Le [concept_treaty|l] n’est plus sous [Concept('concept_binding_period', '$concept_binding_period_binding$')|l]"
 TREATY_BINDING_PERIOD_HAS_ENDED_SHORT: "Plus sous [Concept('concept_binding_period', '$concept_binding_period_binding$')|l]"
 TREATY_BINDING_PERIOD_HAS_ENDED_SHORT_NO_CONCEPT: "Plus sous engagement"
 TREATY_NO_BINDING_PERIOD: "Aucune [concept_binding_period|l]"
 TREATY_NO_BINDING_PERIOD_NO_CONCEPT: "Aucune période d’engagement"
 TREATY_DRAFT_BINDING_PERIOD: "$concept_binding_period_bound$ pour [TreatyDraft.GetBindingPeriodFormatted]"
 TREATY_DRAFT_NO_BINDING_PERIOD: "Ajouter une période d’engagement"
 TREATY_IS_ENFORCED_ON: "Est [Concept('concept_enforced_treaty', '$concept_enforced_treaty_forced_short$')|l] [Treaty.GetEnforcedOnCountry.GetAltNameNoFormatting('Au')][Treaty.GetEnforcedOnCountry.GetName]"
 TREATIES_WITH_COUNTRY_TOOLTIP: "#header [Concept('concept_treaty', '$concept_treaties$')] avec [Country.GetAltNameNoFormatting('Le')][Country.GetName]#!\n#v [GetDataModelSize(CountryPanel.GetCountry.GetEnforcedTreatiesWith(Country.Self))]#! [SelectLocalization(EqualTo_int32(GetDataModelSize(CountryPanel.GetCountry.GetEnforcedTreatiesWith(Country.Self)), '(int32)1'), 'concept_treaty', 'concept_treaties')|l] [Concept('concept_enforced_treaty', '$concept_enforced_treaty_short$')|l]s\n#v [GetDataModelSize(CountryPanel.GetCountry.GetUnenforcedTreatiesWith(Country.Self))]#! [SelectLocalization(EqualTo_int32(GetDataModelSize(CountryPanel.GetCountry.GetUnenforcedTreatiesWith(Country.Self)), '(int32)1'), 'concept_treaty', 'concept_treaties')|l] normaux"
 TREATY_TYPE: "[SelectLocalization(Treaty.IsEnforced, 'ENFORCED_TREATY_CONCEPT', 'TREATY_CONCEPT')]"
 ENFORCED_TREATY_CONCEPT: "[concept_enforced_treaty]"
 TREATY_CONCEPT: "[concept_treaty]"
 TREATY_DRAFT_COMMIT_TO_LAW_TOOLTIP: "#header Sélectionner [Law.GetName|l] pour laquelle s’engager [Law.GetCountry.GetAltNameNoFormatting('En')][Law.GetCountry.GetName]#!\n$TOOLTIP_DELIMITER$\nCela obligera [Law.GetCountry.GetAltNameNoFormatting('Le')][Law.GetCountry.GetName] à passer à [Law.GetName|l] ([Law.GetActiveGroupLaw.GetName|l]) en tant que [concept_law|l] [Law.GetGroup.GetName]"
 TREATY_SELECTED_ARTICLE_AMOUNT: "[SelectLocalization(GreaterThan_CFixedPoint(Article.GetQuantity, '(CFixedPoint)99'), 'TREATY_SELECTED_ARTICLE_AMOUNT_D_FORMATTED', 'TREATY_SELECTED_ARTICLE_AMOUNT_NO_D_FORMATTING')]"
 TREATY_SELECTED_ARTICLE_AMOUNT_WITHOUT_LABEL: "[SelectLocalization(GreaterThan_CFixedPoint(Article.GetQuantity, '(CFixedPoint)99'), 'TREATY_SELECTED_ARTICLE_AMOUNT_D_FORMATTED_NO_LABEL', 'TREATY_SELECTED_ARTICLE_AMOUNT_NO_D_FORMATTING_NO_LABEL')]"
 TREATY_SELECTED_MONEY_ARTICLE_AMOUNT: "[SelectLocalization(GreaterThan_CFixedPoint(Article.GetQuantity, '(CFixedPoint)99'), 'TREATY_SELECTED_MONEY_ARTICLE_AMOUNT_D_FORMATTED', 'TREATY_SELECTED_MONEY_ARTICLE_AMOUNT_NO_D_FORMATTING')]"
 TREATY_SELECTED_ARTICLE_AMOUNT_D_FORMATTED: "#v [Article.GetQuantity|D]#!/semaine"
 TREATY_SELECTED_ARTICLE_AMOUNT_NO_D_FORMATTING: "#v [Article.GetQuantity]#!/semaine"
 TREATY_SELECTED_ARTICLE_AMOUNT_D_FORMATTED_NO_LABEL: "#v [Article.GetQuantity|D]#!"
 TREATY_SELECTED_ARTICLE_AMOUNT_NO_D_FORMATTING_NO_LABEL: "#v [Article.GetQuantity]#!"
 TREATY_SELECTED_MONEY_ARTICLE_AMOUNT_D_FORMATTED: "@money!#v [Article.GetQuantity|D]#!/semaine"
 TREATY_SELECTED_MONEY_ARTICLE_AMOUNT_NO_D_FORMATTING: "@money!#v [Article.GetQuantity]#!/semaine"
 TREATY_DRAFT_SELECTED_ARTICLE_AMOUNT: "[SelectLocalization(GreaterThan_CFixedPoint(ArticleDraft.GetQuantity, '(CFixedPoint)99'), 'TREATY_DRAFT_SELECTED_ARTICLE_AMOUNT_D_FORMATTED', 'TREATY_DRAFT_SELECTED_ARTICLE_AMOUNT_NO_D_FORMATTING')]"
 TREATY_DRAFT_SELECTED_MONEY_ARTICLE_AMOUNT: "[SelectLocalization(GreaterThan_CFixedPoint(ArticleDraft.GetQuantity, '(CFixedPoint)99'), 'TREATY_DRAFT_SELECTED_MONEY_ARTICLE_AMOUNT_D_FORMATTED', 'TREATY_DRAFT_SELECTED_MONEY_ARTICLE_AMOUNT_NO_D_FORMATTING')]"
 TREATY_DRAFT_SELECTED_ARTICLE_AMOUNT_D_FORMATTED: "#v [ArticleDraft.GetQuantity|D]#!/semaine"
 TREATY_DRAFT_SELECTED_ARTICLE_AMOUNT_NO_D_FORMATTING: "#v [ArticleDraft.GetQuantity]#!/semaine"
 TREATY_DRAFT_SELECTED_MONEY_ARTICLE_AMOUNT_D_FORMATTED: "@money!#v [ArticleDraft.GetQuantity|D]#!/semaine"
 TREATY_DRAFT_SELECTED_MONEY_ARTICLE_AMOUNT_NO_D_FORMATTING: "@money!#v [ArticleDraft.GetQuantity]#!/semaine"
 TREATY_TOTAL_INFLUENCE_COST: "Coût d’[concept_influence|l] total pour faire respecter ce [concept_treaty|l] pour [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 ARTICLE_ADD_WARGOAL_BUTTON_TOOLTIP: "#header Appliquer cet [concept_article|l] [ArticleType.GetName]#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(TreatyDraft.CanIncludeArticleDraft( ArticleDraft.Self )), 'ARTICLE_WAR_GOAL_ERRORS'))]\n$TOOLTIP_DELIMITER$\n#title $ARTICLE_TYPE_EFFECTS_TITLE$#!#indent_newline:3 \n[WarGoal.GetDesc]#!"
 ARTICLE_WAR_GOAL_ERRORS: "[ArticleDraft.GetRequiredInputsDesc]"
 ADD: "Ajouter"
 ARTICLE_ADD_BUTTON_TOOLTIP: "#header Ajouter cet [concept_article|l] [ArticleType.GetName] au [concept_treaty|l]#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(TreatyDraft.CanIncludeArticleDraft( ArticleDraft.Self )), 'ARTICLE_DRAFT_ERRORS'))]"
 OFFER: "offre"
 DEMAND: "exigence"
 SLASH_PER_WEEK: " / semaine"
 ARTICLE_INPUT_SELECT_COMPANY_HEADER: "Sélectionner une [concept_company|l]"
 ARTICLE_INPUT_SELECT_BUILDING_TYPE_HEADER: "Sélectionner un type de [concept_building|l]"
 NO_BUILDING_TYPES_TO_MONOPOLIZE: "Aucun type de [concept_building|l] à [Concept('concept_company_monopoly', '$concept_company_monopolize_short$')|l]"
 NO_LEVELS: "Aucun niveau"
 SELECT_A_COMPANY_FIRST: "Sélectionner une [concept_company|l] d’abord"
 SELECT_A_STATE: "Sélectionner un [concept_state]"
 SELECT_A_STRATEGIC_REGION: "Sélectionner une [concept_strategic_region|l]"
 SELECT_A_GOOD: "Sélectionner un [concept_good|l]"
 SELECT_A_MARKET: "Sélectionner un [concept_market|l]"
 SELECT_A_LAW: "Sélectionner une [concept_law|l]"
 SELECT_A_COUNTRY: "Sélectionner un [concept_country|l]"
 SELECT_AN_AMOUNT: "Sélectionner une quantité"
 SELECT_A_BUILDING_TYPE: "Sélectionner un type de [concept_building|l]"
 WILL_COMPANY_MONOPOLIZE: "va [Concept('concept_company_monopoly', '$concept_company_monopolize_short$')|l]"
 TREATY_TRANSFER: "Transfert"
 TREATY_NO_TRADE: "Pas de commerce avec"
 ARTICLE_DRAFT_QUANTITY_ABOVE_ZERO: "[AddLocalisationIf(GreaterThan_CFixedPoint(ArticleDraft.GetQuantity, '(CFixedPoint)0'), ArticleDraft.GetQuantity)]"
 GOODS_NAME_ARTICLE_SELECTED: "[Goods.GetNameNoFormatting] (#i sélectionné#!)"
 ARTICLE_SELECTED: "#i Sélectionné#!"
 ARTICLE_COUNTRY_WILL_NOT_COLONIZE: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName][ConcatIfNeitherEmpty(' ', AddLocalizationIf(Country.IsLocalPlayer, 'YOU'))] ne [Concept('concept_colony', 'colonisera')|l] #b pas#! [StrategicRegion.GetName]"
 ARTICLE_DRAFT_COUNTRY_NOT_SIGNED: "Pas encore signé"
 ARTICLE_SELECTED_LAW_COMMITMENT: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] s’engager[Country.GetAltNameNoFormatting('AOnt')] à adopter [LawType.GetName|l]"
 DUPLICATE_ARTICLE_SAME_INPUTS: "Il n’est possible d’inclure qu’un seul [concept_article|l] d’un type donné comportant les mêmes entrants"
 REMOVE_ARTICLE_DRAFT: "Supprimer l’[concept_article|l]"
 ARTICLE_SELECTED_STATUS: "#i Actuellement sélectionné#!"
 NO_ACTIVE_TREATIES: "Aucun [concept_treaty|l] actif"
 TREATY_START_DATE_HEADER: "Signé le [Treaty.GetStartDate]"
 ARTICLE_TYPE_INFLUENCE_COST_TOOLTIP: "Coût de maintenance : #v [ArticleType.GetCost|0]#!@inf!"
 ARTICLE_TYPE_EFFECTS_TITLE: "#title Effets :#!"
 ARTICLE_TYPE_EFFECTS: "[ArticleType.GetEffectsDesc][ConcatIfNeitherEmpty('\n', ArticleType.GetRelationsEffectDesc)]"
 ARTICLE_DRAFT_CLICK_TO_CHANGE: "#i Cliquez pour modifier#!"
 ARTICLE_DRAFT_ADDED_STATUS: "Ajouté en tant qu’[concept_article|l] #v $ARTICLE_DRAFT_NUMBER$#! dans ce [concept_treaty|l]"
 ARTICLE_DRAFT_INFLUENCE_COST_TOOLTIP_MUTUAL: "Coût de maintenance pour les deux [Concept('concept_country', '$concept_countries$')|l] : #v [ArticleDraft.GetArticleType.GetCost|0]#!@inf!"
 ARTICLE_DRAFT_INFLUENCE_COST_TOOLTIP_DIRECTED: "Coût de maintenance pour [Country.GetAltNameNoFormatting('Le')][Country.GetName] [AddLocalizationIf(Country.IsLocalPlayer, 'YOU')] : #v [ArticleDraft.GetArticleType.GetCost|0]#!@inf!"
 ARTICLE_DRAFT_EFFECTS_TITLE: "#title Effets :#!"
 ARTICLE_DRAFT_EFFECTS: "[ArticleDraft.GetEffectsDesc]"
 ARTICLE_DRAFT_EFFECTS_RELATION: "[ArticleDraft.GetRelationsEffectDesc]"
 ARTICLE_DRAFT_EFFECTS_IMMEDIATE: "[ArticleDraft.GetImmediateEffectsDesc]"
 ARTICLE_DRAFT_MUTUAL_MODIFIERS_TITLE: "#title Modificateurs mutuels :#!"
 ARTICLE_DRAFT_MUTUAL_MODIFIERS: "[ArticleDraft.GetMutualModifierDesc]"
 ARTICLE_DRAFT_SOURCE_MODIFIERS_TITLE: "#title Modificateurs [Country.GetAltAdjectiveNoFlag('MP')|l] :#!"
 ARTICLE_DRAFT_WAR_GOAL_SOURCE_MODIFIERS_TITLE: "#title Modificateurs [WarGoal.GetHolder.GetAltAdjectiveNoFlag('MP')|l] :#!"
 ARTICLE_DRAFT_SOURCE_MODIFIERS: "[ArticleDraft.GetSourceModifierDesc]"
 ARTICLE_DRAFT_TARGET_MODIFIERS_TITLE: "#title Modificateurs [TreatyDraft.GetOtherCountry(Country.Self).GetAltAdjectiveNoFlag('MP')|l] :#!"
 ARTICLE_DRAFT_WAR_GOAL_TARGET_MODIFIERS_TITLE: "#title Modificateurs [WarGoal.GetTarget.GetAltAdjectiveNoFlag('MP')|l] :#!"
 ARTICLE_DRAFT_TARGET_MODIFIERS: "[ArticleDraft.GetTargetModifierDesc]"
 ARTICLE_DRAFT_ERRORS: "[TreatyDraft.GetCanIncludeArticleDraftDesc( ArticleDraft.Self )]"
 ARTICLE_INFLUENCE_COST_TOOLTIP_MUTUAL: "Coût de maintenance pour les deux [Concept('concept_country', '$concept_countries$')|l] : #v [Article.GetArticleType.GetCost|0]#!@inf!"
 ARTICLE_INFLUENCE_COST_TOOLTIP_DIRECTED: "Coût de maintenance pour [Country.GetAltNameNoFormatting('Le')][Country.GetName] [AddLocalizationIf(Country.IsLocalPlayer, 'YOU')] : #v [Article.GetArticleType.GetCost|0]#!@inf!"
 ARTICLE_EFFECTS_TITLE: "#title Effets :#!"
 ARTICLE_EFFECTS: "[Article.GetEffectsDesc]"
 ARTICLE_EFFECTS_RELATION: "[Article.GetRelationsEffectDesc]"
 ARTICLE_EFFECTS_IMMEDIATE: "[Article.GetImmediateEffectsDesc]"
 ARTICLE_MUTUAL_MODIFIERS_TITLE: "#title Modificateurs mutuels :#!"
 ARTICLE_MUTUAL_MODIFIERS: "[Article.GetMutualModifierDesc]"
 ARTICLE_SOURCE_MODIFIERS_TITLE: "#title Modificateurs [Country.GetAltAdjectiveNoFlag('MP')|l] :#!"
 ARTICLE_SOURCE_MODIFIERS: "[Article.GetSourceModifierDesc]"
 ARTICLE_TARGET_MODIFIERS_TITLE: "#title Modificateurs [Treaty.GetOtherCountry(Country.Self).GetAltAdjectiveNoFlag('MP')|l] :#!"
 ARTICLE_TARGET_MODIFIERS: "[Article.GetTargetModifierDesc]"
 ARTICLE_TOOLTIP_NOT_FULFILLED: "@warning! [Concept('concept_non_fulfillment', '$concept_non_fulfilled$')]"
 ARTICLE_TOOLTIP_NOT_FULFILLED_REASON: "[Article.GetNonFulfillmentDesc]"
 ARTICLE_IS_FROZEN_STATUS: "@warning! Cet [concept_article|l] est gelé. [Treaty.GetOtherCountry(Country.Self).GetAltNameNoFormatting('Le')|U][Treaty.GetOtherCountry(Country.Self).GetName] ne profite pas des avantages de cet article car [Treaty.GetOtherCountry(Country.Self).GetAltNameNoFormatting('Le')][Treaty.GetOtherCountry(Country.Self).GetName] ne respecte pas #v [GetDataModelSize(Treaty.GetNonFulfilledArticlesFromSource(Treaty.GetOtherCountry(Country.Self)))]#! des articles. Le coût de maintenance pour [Country.GetAltNameNoFormatting('Le')][Country.GetName] de #v [Article.GetArticleType.GetCost|-0]#!@inf! est également en pause."
 NON_FULFILLED_ARTICLE_STATUS: "$concept_non_fulfilled$"
 TREATY_ARTICLES_FROZEN: "[Concept('concept_article', '$concept_articles$')] gelés"
 TREATY_NOT_FULFILLED_FROZEN_STATUS_NO_FORMATTING: "Tous les articles [Country.GetAltAdjectiveNoFormatting('MP')|l] sont gelés"
 TREATY_NOT_FULFILLED_FROZEN_STATUS_TOOLTIP: "[Treaty.GetOtherCountry(Country.Self).GetAltNameNoFormatting('Le')|U][Treaty.GetOtherCountry(Country.Self).GetName] ne profite pas des avantages des [Concept('concept_article', '$concept_articles$')|l] [Country.GetAltAdjectiveNoFlag('MP')|l] car [Treaty.GetOtherCountry(Country.Self).GetAltNameNoFormatting('Le')][Treaty.GetOtherCountry(Country.Self).GetName] ne respecte pas #v [GetDataModelSize(Treaty.GetNonFulfilledArticlesFromSource(Treaty.GetOtherCountry(Country.Self)))]#! des articles. Le coût de maintenance en influence pour [Country.GetAltNameNoFormatting('Le')][Country.GetName] est également en pause."
 TREATY_RESET_ALL: "Tout réinitialiser"
 TREATY_RESET_LEFT_SIDE: "Réinitialiser la partie [TreatyDraft.GetLeftCountry.GetAltAdjective('FS')|l]"
 TREATY_RESET_RIGHT_SIDE: "Réinitialiser la partie [TreatyDraft.GetRightCountry.GetAltAdjective('FS')|l]"
 RESET_ARTICLES_MENU_BUTTON_TOOLTIP: "Réinitialiser le [concept_treaty|l]"
 PROHIBIT_TRADE: "Interdire les exportations et les importations mondiales de"
 ARTICLE_INPUT_NO_TARIFFS: "Pas de [concept_tariffs|l] [Country.GetAltAdjective('MP')|l] sur"
 ARTICLE_INPUT_NO_SUBVENTIONS: "Pas de [concept_subventions|l] [Country.GetAltAdjective('FP')|l] sur"
 TREATIES_HEADER: "$concept_treaties$"
 YOUR_TREATIES_WITH_COUNTRY: "avec [GetPlayer.GetAltNameNoFormatting('Le')][GetPlayer.GetName] (#b vous#!)"
 TREATIES_WITH_OTHER_COUNTRY_NAME_HEADER: "avec [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 DRAFT_A_TREATY: "Rédiger un [concept_treaty|l]"
 TREATY_CAN_SIGN_WITH: "[GetPlayer.GetCanSignTreatyWithDesc(Country.Self)]"
 TREATY_PROPOSAL_TOOLTIP_HEADER: "#header Envoyer cette proposition de [concept_treaty|l] [TreatyDraft.GetRightCountry.GetAltNameNoFormatting('Au')][TreatyDraft.GetRightCountry.GetName]#!"
 TREATY_PROPOSAL_TOOLTIP_IF_ACCEPTED_TITLE: "#title En cas d’accord :#!"
 TREATY_PROPOSAL_TOOLTIP_COST: "#v [TreatyDraft.GetCost(TreatyDraft.GetLeftCountry.Self)|0-]#!@inf! en coût de maintenance pour vous\n#v [TreatyDraft.GetCost(TreatyDraft.GetRightCountry.Self)|0-]#!@inf! en coût de maintenance pour [TreatyDraft.GetRightCountry.GetAltNameNoFormatting('Le')][TreatyDraft.GetRightCountry.GetName]"
 TREATY_PROPOSAL_TOOLTIP_RELATION_EFFECT: "[TreatyDraft.GetRelationsEffectDesc]"
 TREATY_PROPOSAL_TOOLTIP_BINDING_PERIOD: "[TreatyDraft.GetBindingPeriodDesc]"
 TREATY_PROPOSAL_TOOLTIP_BINDING_PERIOD_FORMAT: "Aura une période d’engagement de $BINDING_PERIOD$, des #tooltippable #tooltip:$BREAKDOWN$ pénalités#!#! s’appliquent en cas d’annulation anticipée"
 TREATY_ACCEPTANCE_STATUS_ACCEPT: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] accepter[COUNTRY.GetAltNameNoFormatting('AOnt')] ce [concept_treaty|l]"
 TREATY_ACCEPTANCE_STATUS_MAYBE: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] pourrait accepter ce [concept_treaty|l] ($CHANCE|0%v$ de chances)"
 TREATY_ACCEPTANCE_STATUS_REJECT: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] refuser[COUNTRY.GetAltNameNoFormatting('AOnt')] ce [concept_treaty|l]"
 TREATY_ARTICLE_ACCEPTANCE: "#P #variable #tooltippable #tooltip:$BREAKDOWN$ $VALUE|D=+$#!#!#!#! en raison de l’article [ARTICLE.GetNameNoIcon] ajouté"
 TREATY_ARTICLE_ACCEPTANCE_NO_BREAKDOWN: "#P #variable $VALUE|D=+$#!#! en raison de l’article [ARTICLE.GetNameNoIcon] ajouté"
 TREATY_ARTICLE_TYPE_ACCEPTANCE: "#P #variable #tooltippable #tooltip:$BREAKDOWN$ $VALUE|D=+$#!#!#!#! en raison de l’article [TREATY_ARTICLE_TYPE.GetNameNoIcon] ajouté"
 TREATY_ARTICLE_TYPE_ACCEPTANCE_NO_BREAKDOWN: "#P #variable $VALUE|D=+$#!#! en raison de l’article [TREATY_ARTICLE_TYPE.GetNameNoIcon] ajouté"
 TREATY_ARTICLE_DRAFT_ACCEPTANCE_TOOLTIP: "#header $NAME$Acceptation#!\n$VALUE|0+=$ pour [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName]\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 TREATY_ACCEPTANCE_TOOLTIP: "#header $NAME$Acceptation#!\n$VALUE|0+=$ pour [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName]\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 TREATY_DRAFT_POSITIVE_ACCEPTANCE_BREAKDOWN: "[TreatyDraft.GetPositiveAcceptanceBreakdown(TreatyDraft.GetRightCountry.Self)]"
 TREATY_DRAFT_NO_POSITIVE_ACCEPTANCE: "Aucun facteur positif"
 TREATY_DRAFT_NEGATIVE_ACCEPTANCE_BREAKDOWN: "[TreatyDraft.GetNegativeAcceptanceBreakdown(TreatyDraft.GetRightCountry.Self)]"
 TREATY_DRAFT_NO_NEGATIVE_ACCEPTANCE: "Aucun facteur négatif"
 STATIC_TREATY_ACCEPTANCE_VALUE_FORMAT: "$VALUE|+=0$ $KEY$"
 TREATY_STATIC_ACCEPTANCE: "#P #variable #tooltippable #tooltip:$BREAKDOWN$ $VALUE|D+$#!#!#!#! en raison de la position diplomatique avec [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName]"
 TREATY_PREVIOUS_REJECTION_ACCEPTANCE: "$VALUE|=+$ en raison d’une amélioration insuffisante d’un traité précédemment refusé (minimum de $MIN_VALUE|v=+$)"
 TREATY_ARTICLE_ACCEPTANCE_CAP_MAX: "$DELTA|+=0$ en raison du dépassement de l’acceptation maximale de $CAP|+=0$ articles [TREATY_ARTICLE_TYPE.GetName]"
 TREATY_ARTICLE_ACCEPTANCE_CAP_MIN: "$DELTA|+=0$ en raison de la non-atteinte de l’acceptation minimale de $CAP|+=0$ articles [TREATY_ARTICLE_TYPE.GetName]"
 TREATY_ACCEPTANCE_OWES_OBLIGATION: "$VALUE|D+$ car [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] a une [concept_obligation|l] envers [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 TREATY_ACCEPTANCE_CALLS_IN_OBLIGATION: "$VALUE|D+$ car [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] fait appel à une [concept_obligation|l] de la part [TARGET_COUNTRY.GetAltNameNoFormatting('Du')][TARGET_COUNTRY.GetName]"
 TREATY_ACCEPTANCE_OBLIGATIONS: "#tooltippable #tooltip:$BREAKDOWN$ $VALUE|D+$#!#! en raison de l’échange d’[Concept('concept_obligation', '$concept_obligations$')|l]"
 MULT_ICON: "#bold ×#!"
 PROFITABILITY_SHORT: "Rentab."
 SIZE: "Taille"
 POTENTIAL: "Potentiel"
 TOOLTIP_AI_STRATEGY: "#header [AIStrategy.GetName]#!\n$TOOLTIP_DELIMITER$\n[AIStrategy.GetDesc(Country.Self)]"
 TOOLTIP_DELIMITER: "@divider_start!@divider_mid!@divider_mid!@divider_mid!@divider_end!"
 MARKETABLE_GOODS_TOOLTIP: "#header Biens commercialisables#!\n$TOOLTIP_DELIMITER$\nEn raison de son volume d’échanges relativement faible, le prix de #variable [Goods.GetName|l]#! est plus affecté par les prix du marché que d’autres biens et est donc moins affecté par un État ayant un faible [concept_market_access|l]."
 NON_MARKETABLE_GOODS_TOOLTIP: "#header Biens non commercialisables#!\n$TOOLTIP_DELIMITER$\nEn raison de son volume d’échanges relativement élevé, le prix de #variable [Goods.GetName|l]#! est moins affecté par les prix du marché que les autres biens et est donc plus affecté par un État ayant un faible [concept_market_access|l]."
 NON_NEGOTIATORS: "Participants non négociateurs"
 RESOURCES: "Ressources"
 BUILDINGS: "Bâtiments"
 POWER_STRUCTURE: "Structure du pouvoir"
 ECONOMY: "Économie"
 HUMAN_RIGHTS: "Droits de l’homme"
 UPGRADE: "@arrow_up! Promouvoir"
 DOWNGRADE: "@arrow_down! Rétrograder"
 EXCESS: "excès"
 LACK: "manque de"
 INTEREST_IN: "[concept_interest] pour"
 PRESTIGE: "Prestige"
 RANK: "Rang"
 PROGRESS: "Progrès"
 INSTITUTION_EMPTY_STATE: "Vous n’avez pas de [Concept('concept_law', '$concept_laws$')|l] permettant des [Concept('concept_institution', '$concept_institutions$')|l]"
 SHRINK: "< Réduire"
 GROW: "Agrandir >"
 TECH_TREE: "Arbre technologique"
 GRAPHLAYOUT_NODE_DEBUG: "#D Key : $KEY$\nLayout node id : $LAYOUT_NODE_ID$\nBase node id : $BASE_NODE_ID$\nIncoming nodes : $INCOMING$\nOutgoing nodes : $OUTGOING$\nLayer : $LAYER$\nWidth : $WIDTH$\nCenterX : $CENTER_X$\nPriority : $PRIORITY$\nPosition : $POSITION$ #!"
 urban_capacity: "[concept_urbanization] de l’État"
 BUILDING_GROUP_TITLE: "#title $BUILDING_GROUP$#!"
 BUILDING_GROUP_ENTRY_UNCAPPED: "$BUILDING$"
 BUILDING_GROUP_ENTRY_CAPPED: "$BUILDING$ (Max : #variable $NUM$#!)"
 MILITARY_PANEL_MUNITION_CONTENTS: "#title Contenu de [Country.GetAcquiredMunitionCrates|1] caisses de munitions#!"
 YEARS_COUNT_RANGE: "#V $MIN$-$MAX$ ans#!"
 YEARS_COUNT_RANGE_SHORT: "#V $MIN$-$MAX$ ans#!"
 YEARS_COUNT_RANGE_NO_FORMAT: "$MIN$-$MAX$ ans"
 MONTHS_COUNT_RANGE: "#V $MIN$-$MAX$ mois#!"
 MONTHS_COUNT_RANGE_SHORT: "#V $MIN$-$MAX$ mois#!"
 MONTHS_COUNT_RANGE_NO_FORMAT: "$MIN$-$MAX$ mois"
 WEEKS_COUNT_RANGE: "#V $MIN$-$MAX$ semaines#!"
 WEEKS_COUNT_RANGE_SHORT: "#V $MIN$-$MAX$ sem#!"
 WEEKS_COUNT_RANGE_NO_FORMAT: "$MIN$-$MAX$ semaines"
 DAYS_COUNT_RANGE: "#V $MIN$-$MAX$ jours#!"
 DAYS_COUNT_RANGE_SHORT: "#V $MIN$-$MAX$ j#!"
 DAYS_COUNT_RANGE_NO_FORMAT: "$MIN$-$MAX$ jours"
 YEARS_COUNT_SINGULAR: "#V 1 an#!"
 YEARS_COUNT_SINGULAR_SHORT: "#V 1 an#!"
 YEARS_COUNT_PLURAL: "#V $VALUE$ ans#!"
 YEARS_COUNT_PLURAL_SHORT: "#V $VALUE$ ans#!"
 YEARS_COUNT_SINGULAR_NO_FORMAT: "1 an"
 YEARS_COUNT_PLURAL_NO_FORMAT: "$VALUE$ ans"
 MONTHS_COUNT_SINGULAR: "#V 1 mois#!"
 MONTHS_COUNT_SINGULAR_SHORT: "#V 1 mois#!"
 MONTHS_COUNT_PLURAL: "#V $VALUE$ mois#!"
 MONTHS_COUNT_PLURAL_SHORT: "#V $VALUE$ mois#!"
 MONTHS_COUNT_SINGULAR_NO_FORMAT: "1 mois"
 MONTHS_COUNT_PLURAL_NO_FORMAT: "$VALUE$ mois"
 WEEKS_COUNT_SINGULAR: "#V 1 semaine#!"
 WEEKS_COUNT_SINGULAR_SHORT: "#V 1 sem#!"
 WEEKS_COUNT_PLURAL: "#V $VALUE$ semaines#!"
 WEEKS_COUNT_PLURAL_SHORT: "#V $VALUE$ sem#!"
 WEEKS_COUNT_SINGULAR_NO_FORMAT: "1 semaine"
 WEEKS_COUNT_PLURAL_NO_FORMAT: "$VALUE$ semaines"
 DAYS_COUNT_SINGULAR: "#V 1 jour#!"
 DAYS_COUNT_SINGULAR_SHORT: "#V 1 j#!"
 DAYS_COUNT_PLURAL: "#V $VALUE$ jours#!"
 DAYS_COUNT_PLURAL_SHORT: "#V $VALUE$ j#!"
 DAYS_COUNT_SINGULAR_NO_FORMAT: "1 jour"
 DAYS_COUNT_PLURAL_NO_FORMAT: "$VALUE$ jours"
 LESS_THAN_ONE_DAY: "moins d’un jour"
 DAYS_COUNT_SINGULAR_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ #v 1#!#!#! jour"
 DAYS_COUNT_PLURAL_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE|v$#!#! jours"
 WEEKS_COUNT_SINGULAR_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ #v 1#!#!#! semaine"
 WEEKS_COUNT_PLURAL_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE|v$#!#! semaines"
 MONTHS_COUNT_SINGULAR_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ #v 1#!#!#! mois"
 MONTHS_COUNT_PLURAL_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE|v$#!#! mois"
 YEARS_COUNT_SINGULAR_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ #v 1#!#!#! an"
 YEARS_COUNT_PLURAL_TOOLTIPPABLE: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE|v$#!#! ans"
 WORLD_MARKET_HEADER: "Marché mondial"
 GOTO_WORLD_MARKET: "Aller au [concept_world_market|l]"
 MARKET_STATES_PANEL_MARKET_ACCESS_TOOLTIP: "#header [Concept('concept_market_access', 'Accès')] au [State.GetMarket.GetName|l]#!\n[State.GetMarketAccessDesc]"
 STATES_PANEL_MARKET_ACCESS_ISOLATED: "[concept_market_access] : [concept_isolated_state|l]"
 ISOLATED_STATE: "[concept_isolated_state]"
 DEBUG_MODIFIERS: "#title Débogage - Modificateurs#!"
 STATE_REGION_MARKET_CONNECTION_PATH_ENTRY: "Liaison à $PATH_STRENGTH|v0$ en [StateRegion.GetName] ([concept_infrastructure|l] : $ENTRY_INFRA|v0$)"
 STATE_REGION_MARKET_CONNECTION_PATH_WEAK_POINT: "La liaison devient $PREV_PATH_STRENGTH|v0$ @arrow_right! $PATH_STRENGTH|v0$ en [StateRegion.GetName] ([concept_infrastructure|l] : $ENTRY_INFRA|v0$)"
 STATE_REGION_STATE_ITEM: "$TAB$[STATE.GetName] ([STATE.GetOwner.GetName])\n"
 COUNTRY_PANEL_MODIFIERS_TAB: "$MODIFIERS$"
 MODIFIERS: "Modificateurs"
 COUNTRY_PANEL_MODIFIERS_TAB_SELECTED: "#bold Modificateurs#!"
 COUNTRY_PANEL_INFORMATION_TAB: "Informations"
 COUNTRY_PANEL_INFORMATION_TAB_SELECTED: "#bold Informations#!"
 COUNTRY_PANEL_DIPLOMACY_TAB: "Diplomatie"
 COUNTRY_PANEL_DIPLOMACY_TAB_SELECTED: "#bold Diplomatie#!"
 COUNTRY_PANEL_POLITICS_TAB: "National"
 COUNTRY_PANEL_POLITICS_TAB_SELECTED: "#bold National#!"
 COUNTRY_PANEL_INTERACTIONS_TAB: "Interactions"
 COUNTRY_PANEL_INTERACTIONS_TAB_SELECTED: "#bold Interactions#!"
 COUNTRY_DIPLOMACY_PANEL_OPEN_SELF: "Vous ne pouvez pas faire de la diplomatie avec vous-même"
 MODIFIERS_PANEL_NO_TIMED_MODIFIERS: "#bold Pas de modificateurs temporaires#!"
 MODIFIERS_PANEL_TIMED_MODIFIERS: "#bold Modificateurs temporaires#!"
 DECAYING_DESC: "([Concept('concept_decay','$concept_decaying$')|l])"
 DECAYING_DESC_WITH_SPACE_BEFORE: " $DECAYING_DESC$"
 DECAYING_DESC_WITH_SPACE_AFTER: "$DECAYING_DESC$ "
 DATA_TIMED_MODIFIER_TITLE: "#header $NAME$#!"
 DATA_TIMED_MODIFIER_DURATION: "Durée : $DURATION$$MAYBE_DECAYING_WITH_SPACE_BEFORE$"
 DATA_TIMED_MODIFIER_REMAINING: "Temps restant : $DURATION$$MAYBE_DECAYING_WITH_SPACE_BEFORE$"
 DATA_TIMED_MODIFIER_ONELINE: "$MODIFIERDESC$ de #title $NAME$#! ($DURATION$)$MAYBE_DECAYING_WITH_SPACE_BEFORE$"
 MODIFIERS_PANEL_MODIFIER_ENTRIES: "#bold Entrées de modificateurs#!"
 RELIGION_INFO_PANEL_SHOW_GLOBAL: "Mondialement"
 RELIGION_INFO_PANEL_SHOW_NATIONAL_ONLY: "[GetPlayer.GetAltNameNoFormatting('En')|U][GetPlayer.GetNameNoFormatting]"
 RELIGION_INFO_PANEL_TABOOS: "[Concept('concept_taboo', '$concept_taboos$')]"
 RELIGION_INFO_PANEL_TRAITS: "[Concept('concept_religious_trait', '$concept_religious_traits$')]"
 RELIGION_INFO_PANEL_POPLIST_HEADING: "$concept_pops$ de religion [Religion.GetNameNoFormatting]"
 CULTURE_INFO_PANEL_POPLIST_HEADING: "$concept_pops$ de culture [Culture.GetNameNoFormatting]"
 BUILDING_DETAILS_PANEL_INFORMATION_TAB: "Informations"
 BUILDING_DETAILS_PANEL_INFORMATION_TAB_SELECTED: "#bold Informations#!"
 BUILDING_DETAILS_PANEL_MODIFIERS_TAB: "Modificateurs"
 BUILDING_DETAILS_PANEL_MODIFIERS_TAB_SELECTED: "#bold Modificateurs#!"
 CLICK_TO_CHANGE_RESPONSE: "#instruction Cliquez pour modifier notre réponse#!"
 COUNTRY_IN_MARKET_SUBTITLE: "[concept_country] du [CountryPanel.GetCountry.AccessFirstMarket.GetName|l]"
 STATE_IN_COUNTRY_SUBTITLE: "[concept_state] [State.GetCountry.GetAltNameNoFormatting('Du')][State.GetCountry.GetName]"
 BATTLE_SUBTITLE: "[SelectLocalization(Battle.IsNavalBattle, 'NAVAL_BATTLE_IN_STATE_REGION_SUBTITLE', 'BATTLE_ON_FRONT_OR_STATE_SUBTITLE')]"
 NAVAL_BATTLE_IN_STATE_REGION_SUBTITLE: "[concept_battle] navale en [Battle.GetProvince.GetStateRegion.GetName]"
 BATTLE_ON_FRONT_OR_STATE_SUBTITLE: "[SelectLocalization(Battle.GetFront.IsValid, 'BATTLE_ON_FRONT_SUBTITLE', 'BATTLE_OR_INVASION_IN_STATE_SUBTITLE')]"
 BATTLE_ON_FRONT_SUBTITLE: "[concept_battle] sur le [Battle.GetFront.GetName|l]"
 BATTLE_OR_INVASION_IN_STATE_SUBTITLE: "[SelectLocalization(Battle.HasInvasion, 'INVASION_IN_STATE_SUBTITLE', 'BATTLE_IN_STATE_SUBTITLE')]"
 INVASION_IN_STATE_SUBTITLE: "[concept_invasion] en [Battle.GetState.GetName]"
 BATTLE_IN_STATE_SUBTITLE: "[concept_battle] en [Battle.GetState.GetName]"
 FRONT_IN_WAR_SUBTITLE: "[concept_front] dans la [Front.AccessDiplomaticPlay.AccessWar.GetName]"
 FRONT_IN_DP_SUBTITLE: "[concept_front] dans [Front.AccessDiplomaticPlay.GetName]"
 FRONT_IN_WAR_OR_DP_SUBTITLE: "[SelectLocalization(Front.AccessDiplomaticPlay.HasEscalatedIntoWar,'FRONT_IN_WAR_SUBTITLE','FRONT_IN_DP_SUBTITLE')]"
 FRONT_CASUALTIES_TOOLTIP: "#header [concept_casualties] [Country.GetAltAdjectiveNoFlag('FP')|l] sur le [Front.GetName|l]#!\n@manpower! [FrontSide.GetNumCasualties(Country.Self)|vD] [concept_casualties|l]#indent_newline:2   \n@manpower! [FrontSide.GetNumDead(Country.Self)|vD] [concept_dead|l]\n@manpower! [FrontSide.GetNumWounded(Country.Self)|vD] [concept_wounded|l]#!"
 BATTLE_SIDE_NAME: "$BATTLE_NAME$ - $SIDE$"
 BATTLE_SIDE_ATTACKING_SIDE: "En attaque"
 BATTLE_SIDE_DEFENDING_SIDE: "En défense"
 INTEREST_GROUP_PANEL_MODIFIERS_TAB: "Modificateurs"
 INTEREST_GROUP_PANEL_MODIFIERS_TAB_SELECTED: "#bold Modificateurs#!"
 INTEREST_GROUP_LINE_TWO: "[concept_interest_group] en [InterestGroup.AccessCountry.GetName]"
 BUILDING_DETAILS_LINE_TWO: "[SelectLocalization(Building.IsGovernmentFunded, 'BUILDING_DETAILS_LINE_TWO_GOVERNMENT', 'BUILDING_DETAILS_LINE_TWO_REGULAR')]"
 BUILDING_DETAILS_LINE_TWO_REGULAR: "[concept_building] en [Building.GetState.GetName]"
 BUILDING_DETAILS_LINE_TWO_GOVERNMENT: "[concept_government_building] en [Building.GetState.GetName]"
 BUILDING_SUBSISTENCE_OUTPUT_YEARLY: "#header [concept_subsistence_output] par employé et par an#!\nTotal : @money!$VAL|Dv$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 GOODS_PANEL_LINE_TWO: "dans le [GoodsPanel.GetGoods.GetMarket.GetName|l]"
 GOODS_STATE_PANEL_LINE_TWO: "dans [GoodsStatePanel.GetGoods.GetState.GetName] ([GoodsStatePanel.GetGoods.GetMarket.GetName])"
 LOCAL_PRICES_PANEL_LINE_TWO: "Prix locaux dans le [GoodsPanel.GetGoods.GetMarket.GetName|l]"
 GOODS_USAGE_PANEL_LINE_TWO: "[concept_good] [GetPlayer.GetAltNameNoFormatting('Du')][GetPlayer.GetName]"
 GOODS_WORLD_MARKET_PANEL_LINE_TWO: "Sur le [concept_world_market|l]"
 POP_DETAILS_LINE_TWO: "[SelectLocalization(Pop.GetBuilding.IsValid,'POP_DETAILS_LINE_TWO_EMPLOYED','POP_DETAILS_LINE_TWO_UNEMPLOYED')]"
 POP_DETAILS_LINE_TWO_EMPLOYED: "[concept_pop] dans [Pop.GetWorksAt] en [Pop.GetState.GetName]"
 POP_DETAILS_LINE_TWO_UNEMPLOYED: "[concept_pop] [concept_unemployed|l] en [Pop.GetState.GetName]"
 POP_OVERVIEW_HEADER: "Vue d’ensemble"
 POP_ECONOMY_HEADER: "Économie"
 POP_CONSUMPTION_HEADER: "Consommation"
 PERCENTAGE_OF_BUDGET: "% du budget"
 POP_AMOUNT: "Quantité"
 POP_TOP_GOODS_EXPENDITURES_HEADER: "#title [GetDefine('NGUI','NUM_TOP_CONSUMPTION_GOODS_SHOWN')|0] principales dépenses en [Concept('concept_good','$concept_goods$')|l]#!"
 POP_CONSUMPTION_FACTOR_DESC: "Facteur de consommation #v x$VAL$#! en raison de :\n$BREAKDOWN$"
 POP_CONSUMPTION_FACTOR_FROM_TYPE: "#v +$VAL$#! pour les [PopType.GetName]"
 POP_CONSUMPTION_FACTOR_FROM_SIZE: "Multiplié par #v x$VAL|D$#! de la quantité de [concept_workforce|l] et de [concept_dependents|l]"
 POP_SUBSISTENCE_INCOME: "[concept_subsistence_output] : @money!#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|+=D$#!#!"
 POP_SUBSISTENCE_INCOME_DESC: "#header [concept_subsistence_output] hebdomadaire#!\nTotal : @money!$VAL|Dv$ (par adulte actif @money!$PER_ADULT_WEEKLY|v$ x $NUM|Dv$)\n$TOOLTIP_DELIMITER$\nPar adulte actif @money!$PER_ADULT_WEEKLY|v$ en raison de :\n$TAB$Par adulte actif par an @money!$PER_ADULT_YEARLY|Dv$\n$TAB$Divisé par #v 52#! semaines par an\n\nPar adulte actif par an @money!$PER_ADULT_YEARLY|Dv$ en raison de :\n$BREAKDOWN$"
 STATE_POPULATION_PANEL_LINE_TWO: "en [StatePopulationPanel.GetState.GetName]"
 BASE_FROM_POPS: "Base en raison de la population : #v $VAL|D=+$#!"
 LEGITIMACY_BASE_VALUE: "Valeur de base : #bold #P $VAL|=+$#!#!"
 LEGITIMACY_GOVT_SIZE: "Taille du [concept_government|l] : #tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $VAL|=+$#!#!#!"
 LEGITIMACY_GOVT_SIZE_BREAKDOWN: "#header [concept_legitimacy] en raison de la taille du [concept_government|l] : #v $VAL|=+$#!#!\nTaille permise : #p $MODIFIER_VALUE|0$#!\n$MODIFIER_DESC$\nTaille réelle : #n $SIZE|0$#!\n$TOOLTIP_DELIMITER$\n[Concept('concept_party','$concept_parties$')] et [Concept('concept_interest_group','$concept_interest_groups$')|l] en trop\n$BREAKDOWN$#!"
 LEGITIMACY_GOVT_SIZE_PARTY_ENTRY: "[Party.GetName] [Party.GetMembersSummary] : #variable $VAL|-$#!"
 LEGITIMACY_GOVT_SIZE_IG_ENTRY: "[InterestGroup.GetName] : #variable $VAL|-$#!"
 IDEOLOGICAL_INCOHERENCE: "#header [concept_ideological_incoherence] : #variable $VALUE|-$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 LEGITIMACY_IDEOLOGICAL_INCOHERENCE: "[concept_ideological_incoherence] : #tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $VAL|=+$#!#!#!"
 INTEREST_GROUP_INCOHERENCE_ENTRY: "[InterestGroup.GetName] : #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|+=$#!#!$PARTY_LABEL$"
 INTEREST_GROUP_INCOHERENCE_ENTRY_PARTY: " ($WHIP$ du $PARTY$)"
 PARTY_WHIP: " - [Concept('concept_party_whip','$concept_party_whip_short$')]"
 INCOHERENCE_GROUP_BREAKDOWN: "#tooltip_header [LawGroup.GetName] : #n $VALUE$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 IDEOLOGICAL_INCOHERENCE_ENTRY: "[LawType.GetName] : #tooltippable #tooltip:$BREAKDOWN_TAG$ #n $VALUE$#!#!#!"
 IDEOLOGICAL_INCOHERENCE_GROUP_ENTRY: "[LawGroup.GetName] : #tooltippable #tooltip:$BREAKDOWN_TAG$ #n $VALUE$#!#!#!"
 INCOHERENCE_ENTRY_BREAKDOWN: "#header [LawType.GetName] : #negative_value $VALUE$#!#!\n$TOOLTIP_DELIMITER$\n@approves! $concept_interest_groups$ : #v $SUM_POSITIVE|+=$#!\n$BREAKDOWN_POSITIVE$\n\n@disapproves! $concept_interest_groups$ : #v $SUM_NEGATIVE|+=$#!\n$BREAKDOWN_NEGATIVE$"
 INCOHERENCE_LAW_ENTRY_FIRST_FORMAT: "#active $BREAKDOWN$#!"
 INCOHERENCE_LAW_ENTRY_OTHERS_FORMAT: "#inactive $BREAKDOWN$#!"
 IDEOLOGICAL_INCOHERENCE_VALUE_BREAKDOWN: "$TAB$Valeur de base : $BASE|v$\n$TAB$$MODIFIER$"
 INCOHERENCE_BASE_PENALTY_DESC: "$BASE|0+$ de la #bold pénalité de base#! en raison de :\n$TAB$$STANCE|+$ de la position sur [LawType.GetName]\n$TAB$#v x$FACTOR$#! du facteur de base"
 INCOHERENCE_PENALTY_DESC: "#header $VAL|+$ de pénalité d’incohérence#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 INCOHERENCE_WHIP_BASE_ENTRY: "$VAL|+=$ du [concept_party_whip|l]"
 INCOHERENCE_WHIP_IMPACT_ADD_ENTRY: "$VAL|+=$ de $MODIFIER$ en raison de :\n$TAB$$BREAKDOWN$"
 LEGITIMACY_HEAD_OF_STATE_VALUE: "[concept_interest_group] (#variable [InterestGroup.GetName]#!) du chef d’État [concept_in_government|l] : #tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $VAL|+=0$#!#!#!"
 LEGITIMACY_HEAD_OF_STATE_MODIFIER_BREAKDOWN: "Incluant le [concept_interest_group|l] de [COUNTRY.GetRuler.GetFullName], [COUNTRY.GetRuler.GetInterestGroup.GetName], [concept_in_government|l] :\n$BREAKDOWN$"
 LEGITIMACY_GOVT_LEADER_CLOUT_VALUE: "[concept_clout] du chef du gouvernement : #variable $VAL|+=0$#!\n$TAB$#variable [INTEREST_GROUP.GetName]#! avec le poids politique #variable [INTEREST_GROUP.GetClout|%+2]#! × #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $FACTOR|0+$#!#!#!"
 LEGITIMACY_GOVERNMENT_CLOUT_MODIFIER_BREAKDOWN: "$BREAKDOWN$"
 LEGITIMACY_GOVT_TOTAL_CLOUT_VALUE: "[concept_clout] total du [concept_government|l] : #variable $VAL|+=0$#!\n$TAB$[concept_clout|l] du [concept_government|l] #variable $CLOUT|%+1$#! × #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $FACTOR|2+$#!#!#!"
 LEGITIMACY_GOVT_TOTAL_CLOUT_VALUE_BREAKDOWN: "$BREAKDOWN$"
 LEGITIMACY_GOVT_TOTAL_VOTES_VALUE: "Pourcentage total de [concept_votes|l] du [concept_government|l] : #variable $VAL|+=0$#!\n$TAB$[concept_votes] du [concept_government|l] #variable $VOTES|%+1$#! × #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $FACTOR|2+$#!#!#!"
 LEGITIMACY_GOVT_TOTAL_VOTES_VALUE_BREAKDOWN: "$BREAKDOWN$"
 LEGITIMACY_GOVT_STRENGTH_ENTRY: "#variable $FACTION$#! : #variable $VAL|=$%#!"
 LEGITIMACY_GOVT_STRENGTH_IG_ENTRY: "#variable [INTEREST_GROUP.GetName]#! #variable [INTEREST_GROUP.GetClout|=%]#!"
 LEGITIMACY_MIN_CAP: "La légitimité ne peut pas être inférieure à $VALUE|v$ :\n   $DESC$"
 GOVERNMENT_OPTION_TOOLTIP: "#header Option gouvernementale#!\n[concept_legitimacy] : #tooltippable #tooltip:$LEGITIMACY_BREAKDOWN_TAG$ $LEGITIMACY|v0$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 GOVERNMENT_OPTION_ENTRY: "[InterestGroup.GetName][AddTextIf(Not(StringIsEmpty('$PARTY$')),' ($PARTY$)')]"
 GOVERNMENT_OPTION_TEXT: "$LEGITIMACY|v0$ : $BREAKDOWN$"
 GOVERNMENT_OPTION_LIST_ENTRY: "[InterestGroup.GetTextIcon]"
 GOVERNMENT_OPTION_LIST_ENTRY_DELIMITER: ""
 NUM_STATES_TOOLTIP_incorporated: "#header [SelectLocalization($MULTIPLE$, concept_incorporated_state, Concept('concept_incorporated_state','$concept_incorporated_states$'))] [Country.GetAltNameNoFormatting('En')][Country.GetNameNoFlag] : $VAL|0v$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 NUM_STATES_TOOLTIP_unincorporated: "#header [SelectLocalization($MULTIPLE$, concept_unincorporated_state, Concept('concept_unincorporated_state','$concept_unincorporated_states$'))] [Country.GetAltNameNoFormatting('En')][Country.GetNameNoFlag] : $VAL|0v$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 NUM_STATES_TOOLTIP_treaty_port: "#header [SelectLocalization($MULTIPLE$, concept_treaty_port, Concept('concept_treaty_port','$concept_treaty_ports$'))|l] [Country.GetAltNameNoFormatting('En')][Country.GetNameNoFlag] : $VAL|0v$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 NUM_STATES_TOOLTIP_count: "#header [SelectLocalization($MULTIPLE$, concept_state, Concept('concept_state','$concept_states$'))] [Country.GetAltNameNoFormatting('En')][Country.GetNameNoFlag] : $VAL|0v$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 PROCESS_EXPENSES: "Dépenses :"
 PROCESS_REVENUE: "Recettes :"
 PROCESS_BALANCE: "[concept_building_balance] hebdomadaire :"
 VACANCIES: "Postes vacants"
 NO_VACANCIES: "Tous les postes du bâtiments sont pourvus"
 RESET_GOVERNMENT: "#v [GetPlayer.GetGovernmentLegitimacy]#! : réinitialisation"
 RESET_GOVERNMENT_TOOLTIP: "#header Réinitialiser toutes les modifications apportées au [concept_government|l]#!\n[concept_legitimacy] actuelle : #v #tooltippable #tooltip:[GetPlayer.GetGovernmentLegitimacyLevel.GetTooltipTag],LEGITIMACY_LEVEL_ACTIVE_TOOLTIP [GetPlayer.GetGovernmentLegitimacy]#!#!#!"
 NOTIFICATION_BUILDING_FULLY_EMPLOYED: "Tous les postes du bâtiment [SCOPE.GetRootScope.GetBuilding.GetName] sont pourvus en [SCOPE.GetRootScope.GetBuilding.GetState.GetName]"
 NOTIFICATION_HARVEST_CONDITION_FINISHED: "La condition de récolte [SCOPE.sHCT('type').GetName] a pris fin en [SCOPE.GetRootScope.GetStateRegion.GetName]"
 NOTIFICATION_HARVEST_CONDITION_STARTED: "La condition de récolte [SCOPE.sHCT('type').GetName] a débuté en [SCOPE.GetRootScope.GetStateRegion.GetName]"
 NOTIFICATION_STATE_AVERAGE_SOL_INCREASED: "[concept_sol] augmenté à [SCOPE.GetRootScope.GetState.GetAverageStandardOfLivingAll|+0] en [SCOPE.GetRootScope.GetState.GetName]"
 NOTIFICATION_STATE_AVERAGE_SOL_DECREASED: "[concept_sol] diminué à [SCOPE.GetRootScope.GetState.GetAverageStandardOfLivingAll|-0] en [SCOPE.GetRootScope.GetState.GetName]"
 NOTIFICATION_STATE_LITERACY_INCREASED: "[concept_literacy] augmenté à [SCOPE.GetRootScope.GetState.GetLiteracy|%+0] en [SCOPE.GetRootScope.GetState.GetName]"
 NOTIFICATION_STATE_POPULATION_INCREASED: "[Concept('concept_pop','$concept_population$')] augmentée à [SCOPE.GetRootScope.GetState.GetPopulationSize|K+] en [SCOPE.GetRootScope.GetState.GetName]"
 NOTIFICATION_STATE_POPULATION_DECREASED: "[Concept('concept_pop','$concept_population$')] diminuée à [SCOPE.GetRootScope.GetState.GetPopulationSize|K-] en [SCOPE.GetRootScope.GetState.GetName]"
 NOTIFICATION_STATE_IN_TURMOIL: "De l’[Concept('concept_turmoil', 'agitation')|l] a débuté en [SCOPE.GetRootScope.GetState.GetName]"
 NOTIFICATION_BUILDING_EXPANDED: "Le bâtiment [SCOPE.GetRootScope.GetBuilding.GetName] a été [SelectLocalization(GreaterThan_int32(SCOPE.GetRootScope.GetBuilding.GetExpansionLevel,'(int32)1'),'NOTIFICATION_BUILDING_EXPANDED_SUBSEQUENT_LEVEL','NOTIFICATION_BUILDING_EXPANDED_FIRST_LEVEL')] en [SCOPE.GetRootScope.GetBuilding.GetState.GetName]"
 NOTIFICATION_BUILDING_EXPANDED_FIRST_LEVEL: "construit"
 NOTIFICATION_BUILDING_EXPANDED_SUBSEQUENT_LEVEL: "agrandi"
 NOTIFICATION_BUILDING_FOREIGN_INVESTMENT: "Le pays [SCOPE.sC('country').GetNameNoFormatting|v] a investi dans l’agrandissement du bâtiment [SCOPE.GetRootScope.GetBuilding.GetName]"
 NOTIFICATION_BUILDING_FOREIGN_INVESTMENT_PRIVATIZATION: "Des investisseurs du pays [SCOPE.sC('country').GetNameNoFormatting|v] ont réalisé des acquisitions dans le bâtiment [SCOPE.GetRootScope.GetBuilding.GetName]"
 NOTIFICATION_BUILDING_FIRST_POPS_OF_CULTURE_IN_STATE: "Le premier groupe social [SCOPE.sCulture('culture').GetName|l] s’est installé en [SCOPE.GetRootScope.GetState.GetName]"
 INFRASTRUCTURE: "[concept_infrastructure]"
 ARABLE_LAND_AVAILABLE: "[concept_arable_land] (doit être présentée comme d’autres ressources)"
 FREE_ARABLE_LAND: "Terre arable disponible : $NUM|v$"
 LENS_OPTION_TEXT: "[LensOption.GetText]"
 LENS_OPTION_TOOLTIP: "[LensOption.GetTooltip]\n\n$LENS_OPTION_AVAILABLE_AND_ACTIVE_OPTIONS$"
 LENS_OPTION_AVAILABLE_AND_ACTIVE_OPTIONS: "#v [LensOption.GetNumberOfInactiveSelectableOptions|+]#! cibles disponibles[ConcatIfNeitherEmpty('\n', AddLocalizationIf(NotZero(LensOption.GetNumberOfActiveOptions), 'LENS_OPTION_ACTIVE_OPTIONS'))]"
 LENS_OPTION_ACTIVE_OPTIONS: "#v [LensOption.GetNumberOfActiveOptions|u]#! actives"
 BUILDING_MODIFIERS_PER_LEVEL_COLON: "#title Modificateurs de bâtiment (par niveau) :#!"
 COUNTRY_MODIFIERS_PER_LEVEL_COLON: "#title Modificateurs de pays (par niveau) :#!"
 STATE_MODIFIERS_PER_LEVEL_COLON: "#title Modificateurs d’État (par niveau) :#!"
 APPLIES_TO_BUILDING_TYPE: "S’applique à $BUILDING_TYPE|l$ ([concept_production_method|l] : [ProductionMethodGroup.GetName|l])"
 GOODS_PRODUCTION_COLON: "#title Production de biens :#!"
 GOODS_CONSUMPTION_COLON: "#title Consommation de biens :#!"
 BUILDING_WAGE_PER_LEVEL: "Environ #variable $PER_LEVEL_WAGE|k$@money!#! par niveau de salaires gouvernementaux"
 BUILDING_WAGE_TOTAL: "Environ #variable $TOTAL_WAGE|k$@money!#! au total de salaires gouvernementaux"
 BUILDING_WAGE_RANGE_PER_LEVEL: "Environ #variable $MIN_PER_LEVEL_WAGE$@money!#! - #variable $MAX_PER_LEVEL_WAGE$@money!#! par niveau de salaires gouvernementaux"
 BUILDING_WAGE_RANGE_TOTAL: "Environ #variable $MIN_TOTAL_WAGE$@money!#! - #variable $MAX_TOTAL_WAGE$@money!#! au total de salaires gouvernementaux"
 BUILDING_TYPE_NAME_FORMAT: "#BOLD #V $NAME$#!#!"
 CONSTRUCTION_MATERIALS_COLON: "#title Coût de construction :#!"
 BUILDING_PROVIDES_URBANIZATION_PER_LEVEL: "#variable #P +$URBANIZATION$#!#! [concept_urbanization|l] par niveau"
 BUILDING_PROVIDES_URBANIZATION_TOTAL: "#variable #P +$URBANIZATION$#!#! [concept_urbanization|l] au total"
 BUILDING_USES_INFRASTRUCTURE_PER_LEVEL: "#variable #N +$USAGE|0$#!#! [concept_infrastructure_usage|l] par niveau"
 BUILDING_USES_INFRASTRUCTURE_TOTAL: "#variable #N +$USAGE|0$#!#! [concept_infrastructure_usage|l] au total"
 BUILDING_ARABLE_CAPACITY_PER_LEVEL: "#variable #N -$ARABLE_CAPACITY$#!#! [concept_arable_land|l] par niveau"
 BUILDING_ARABLE_CAPACITY_TOTAL: "#variable #N -$ARABLE_CAPACITY$#!#! [concept_arable_land|l] au total"
 GDP_TOOLTIP: "#header [concept_gdp]#!\n$GDP_SHORT$ [Country.GetAltAdjective('MS')|l] : #N [Country.GetGDP|Dv]@money!#! ([Country.GetGDPRanking])\n$TOOLTIP_DELIMITER$\nPIB par habitant : #variable [Country.GetGDPPerCapita|2*]#!@money! ([Country.GetGDPPerCapitaRanking])\n\n"
 MARKET_GDP_PERCENTAGE: "#title Contribution [GetPlayer.GetAltAdjectiveNoFormatting('FS')|l] au $GDP_SHORT$#!\n[Market.GetMarketSharePercentageFor( GetPlayer )|%1v]"
 MARKET_GDP_PERCENTAGE_TOOLTIP: "#header Contribution au PIB#!\nLe [Market.GetName|l] contribue à hauteur de [Market.GetGDPContributionPercentage( GetPlayer )|%1v] au PIB [GetPlayer.GetAltNameNoFormatting('Du')][GetPlayer.GetName]"
 ACTIVE_PRODUCTION_METHOD_HEAD: "#header $NAME$#!"
 SWITCH_PRODUCTION_METHOD_HEAD: "#header Changer en $NAME$#!"
 PRICE_ICON_ITEM_STATE: "([Goods.GetCompareIconAgainstBasePrice( Goods.GetStatePrice )] en [Goods.GetState.GetName])"
 PRICE_ICON_ITEM_RANGE: "(#tooltippable #tooltip:COIN_STACK_TOOLTIP $ICON_MIN$#!#!-#tooltippable #tooltip:COIN_STACK_TOOLTIP $ICON_MAX$#!#! dans $NUM$ régions étatiques)"
 PRICE_ICON_ITEM_RANGE_SAME: "(#tooltippable #tooltip:COIN_STACK_TOOLTIP $ICON$#!#! dans $NUM$ régions étatiques)"
 PRICE_ICON_ITEM_MARKET: "([Goods.GetCompareIconAgainstBasePrice( Goods.GetMarketPrice )] sur le [Goods.GetMarket.GetName|l])"
 STATE_YEARLY_GDP: "[State.GetYearlyGDP|Dv] $GDP_SHORT$ @money!"
 STATE_POPULATION: "[State.GetPopulationSize|Dv] en [Concept('concept_pop','$concept_population$')|l]"
 STATE_POPULATION_WITH_ICON: "$STATE_POPULATION$ @population!"
 STATE_INCORPORATED_SHORT: "[Concept('concept_incorporated_state','$concept_incorporated$')]"
 STATE_UNINCORPORATED_SHORT: "[Concept('concept_unincorporated_state','$concept_unincorporated_state_short$')]"
 STATE_INCORPORATED_SHORT_WITH_ICON: "@incorporated! $STATE_INCORPORATED_SHORT$"
 STATE_UNINCORPORATED_SHORT_WITH_ICON: "@unincorporated! $STATE_UNINCORPORATED_SHORT$"
 DEFAULT_EVENT_OPTION: "Cette option sera choisie automatiquement après $EVENT_REMAINING_DAYS$."
 NO_PROGRESS: "Pas de progrès"
 INVALID_OPTIONS: "Options non valides : [GetDataModelSize(MapListPanel.AccessInvalidOptions)|v]"
 FAILED_OPTIONS: "Options non disponibles : [GetDataModelSize(MapListPanel.AccessFailedOptions)|v]"
 BUILDING_TYPE_COUNTRY_BREAKDOWN: "[SelectLocalization( GreaterThan_int32( BuildingType.GetNumLevelsInCountryRaw(GetPlayer.Self), '(int32)0' ), 'BUILDING_TYPE_COUNTRY_BREAKDOWN_NONEMPTY', 'BUILDING_TYPE_COUNTRY_BREAKDOWN_EMPTY' )]"
 BUILDING_TYPE_COUNTRY_BREAKDOWN_NONEMPTY: "Il y a [BuildingType.GetNumLevelsInCountryFormatted(GetPlayer.Self)] niveaux de [BuildingType.GetNameNoFormatting] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName][SelectLocalization(And(Not(BuildingType.IsGovernmentFunded), Not(BuildingType.IsSubsistenceBuilding)), 'BUILDING_TYPE_PRODUCTIVITY', '')]"
 BUILDING_TYPE_IN_COUNTRY_DESC: "#header [BuildingType.GetName] [COUNTRY.GetAltNameNoFormatting('En')][COUNTRY.GetName]#!\n$BREAKDOWN$"
 BUILDING_TYPE_OWNED_BY_COMPANY_DESC: "#header [BuildingType.GetName] appartenant à la compagnie [Company.GetName]#!\n$BREAKDOWN$"
 BUILDING_TYPE_OWNED_BY_COMPANY_EMPTY_DESC: "Il n’y a pas de #v [BuildingType.GetNameNoFormatting]#! appartenant à la compagnie [Company.GetName]"
 BUILDING_TYPE_COUNTRY_BREAKDOWN_EMPTY: "Il n’y a pas de [BuildingType.GetNameNoFormatting] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName]"
 BUILDING_TYPE_PRODUCTIVITY: "\n[concept_productivity] : [BuildingType.GetProductivitySpanDesc(GetPlayer.Self)]"
 BUILDING_TYPE_NUM_LEVELS_BREAKDOWN_ENTRY: "[Building.GetName] de taille $LEVELS|v$ en [Building.GetState.GetOwner.GetFlagTextIcon] [Building.GetState.GetName]"
 BUILDING_TYPE_NUM_LEVELS_IN_QUEUE_BREAKDOWN_ENTRY: "$LEVELS|v$ niveaux de [Building.GetName] en construction en [Building.GetState.GetName]"
 BUILDING_TYPE_NUM_LEVELS: "#tooltippable #tooltip:[BuildingType.GetTooltipTag]|$BREAKDOWN_TAG$ $LEVELS$#!#!"
 BUILDING_TYPE_NUM_LEVELS_WITH_CONSTRUCTION: "#tooltippable #tooltip:[BuildingType.GetTooltipTag]|$BREAKDOWN_TAG$ $LEVELS$+$LEVELS_IN_QUEUE$#!#!"
 PRODUCTION_METHODS_HEADER: "Bâtiments"
 COUNTRY_TOOLTIP: "#HEADER [Country.GetName]#!"
 COMMANDER_RANK: "Rang : [Character.GetRankName]"
 commander_specific_rank_desc: "$NAME$ - $RANK$"
 CULTURE: "Culture"
 COUNTRY_CULTURES: "#title [Concept('concept_culture', '$concept_cultures$')]#! :\n#variable [Country.GetPrimaryCulturesDesc]#!"
 COUNTRY_CULTURES_ONE_LINE: "#title [concept_primary_cultures]#!"
 CULTURE_NAME_AND_PRIMARY: "[Culture.GetNameNoFormatting][AddLocalizationIf(Culture.IsPrimaryCultureIn(GetPlayer), 'CULTURE_NAME_AND_PRIMARY_PRIMARY')]"
 CULTURE_NAME_AND_PRIMARY_PRIMARY: " (Principale)"
 RELIGION_NAME_AND_STATE_RELIGION: "[Religion.GetNameNoFormatting][AddLocalizationIf(ObjectsEqual(GetPlayer.GetStateReligion.Self, Religion.Self), 'RELIGION_NAME_AND_STATE_RELIGION_STATE')]"
 RELIGION_NAME_AND_STATE_RELIGION_STATE: " (Religion d’État)"
 POP_COUNTRY_CULTURES: "[concept_primary_cultures] [Pop.GetCountry.GetAltNameNoFormatting('En')][Pop.GetCountry.GetName] :#indent_newline:3 \n#variable [Pop.GetCountry.GetPrimaryCulturesDesc]#!#!"
 COUNTRY_RELIGIONS: "#title [concept_state_religion]#! :\n#variable [Country.GetStateReligion.GetName]#!"
 COUNTRY_RELIGIONS_ONE_LINE: "#title [concept_state_religion]#!"
 COUNTRY_ARABLE_LAND: "#title [concept_arable_land]#! :\n#variable [Country.GetArableLand|D]#!"
 COUNTRY_ARABLE_LAND_ONE_LINE: "#title [concept_arable_land]#!"
 COUNTRY_ARABLE_LAND_BREAKDOWN: "#header [concept_arable_land] [Country.GetAltNameNoFormatting('En')][Country.GetName]#!\nTotal : [Country.GetArableLand|v]\n$TOOLTIP_DELIMITER$\n#title Par [concept_state] :#!\n[Country.GetArableLandDesc]"
 COUNTRY_ARABLE_LAND_BREAKDOWN_ENTRY: "$TAB$[State.GetArableLandCapacity|v] en [State.GetName]"
 POP_COUNTRY_RELIGIONS: "[concept_state_religion] : #variable [Pop.GetCountry.GetStateReligion.GetName]#!"
 COUNTRY_GOVERNMENT: "#title [concept_government]#! :\n#tooltippable #tooltip:[Country.GetGovernment.GetTooltipTag],GOVERNMENT_TYPE_TOOLTIP_DESC [Country.GetGovernment.GetName]#!#!"
 COUNTRY_GOVERNMENT_NO_LINE_BREAK: "#title [concept_government]#! : #tooltippable #tooltip:[Country.GetGovernment.GetTooltipTag],GOVERNMENT_TYPE_TOOLTIP_DESC [Country.GetGovernment.GetName]#!#!"
 COUNTRY_RULER: "#title [concept_ruler]#! :\n#variable [Country.GetRuler.GetFullName]#!"
 COUNTRY_RANK: "#title [concept_rank]#! :\n#variable [Country.GetRank]#! #variable ([Country.GetCountryScorePositionDesc]e)#!"
 COUNTRY_RANK_ONE_LINE: "#title [concept_rank]#! : [Country.GetRank|v] #variable ([Country.GetCountryScorePositionDesc]e)#!"
 COUNTRY_POPULATION: "#title [Concept('concept_pop','$concept_population$')]#! :\n#variable [Country.GetTotalPopulation|D]#!"
 COUNTRY_POPULATION_ONE_LINE: "#title [Concept('concept_pop','$concept_population$')]#!"
 COUNTRY_SOL_ONE_LINE: "#title [concept_sol]#!"
 COUNTRY_GDP: "#title $GDP_SHORT$#! :\n#variable [Country.GetGDP|D]@money!#!"
 COUNTRY_GDP_ONE_LINE: "#title $GDP_SHORT$#!"
 NO_POP_TYPES_POL_STR: "Pas de [concept_pop|l] avec de la [concept_political_strength|l]"
 NO_RELIGIONS: "Pas de [Concept('concept_religion', '$concept_religions$')|l]"
 NO_CULTURES_POL_STR: "Pas de [Concept('concept_culture', '$concept_cultures$')|l] avec de la [concept_political_strength|l]"
 NO_RELIGIONS_POL_STR: "Pas de [Concept('concept_religion', '$concept_religions$')|l] avec de la [concept_political_strength|l]"
 NO_INTEREST_GROUPS: "Pas de [Concept('concept_interest_group', '$concept_interest_groups$')|l]"
 NO_POP_TYPES: "Pas de [Concept('concept_pop', '$concept_pops$')|l]"
 NO_HARVEST_CONDITIONS: "Pas de [Concept('concept_harvest_condition', '$concept_harvest_conditions$')|l]"
 NO_STARVATION: "Pas de [concept_starvation|l]"
 MILD_STARVATION: "[Concept('concept_starvation', '$concept_mild_starvation$')]"
 SEVERE_STARVATION: "[Concept('concept_starvation', '$concept_severe_starvation$')]"
 GOVERNMENT_TYPE_TOOLTIP_DESC: "[GovernmentType.GetDesc]"
 POP_CULTURE_CHANGE_ENTRY_POSITIVE: "#v $CHANGE|=+$#! [Pop.GetName|l] assimilés en [Pop.GetState.GetName]"
 POP_CULTURE_CHANGE_ENTRY_NEGATIVE: "#v $CHANGE|=+$#! [Pop.GetName|l] en [Pop.GetState.GetName] deviennent [Pop.GetAssimilatingCulture.GetName]"
 CULTURE_POPULATION_CHANGE: "Changement mensuel de [Culture.GetName] [Country.GetAltNameNoFormatting('Au')][Country.GetName] : #v $CHANGE|=+$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 POP_RELIGION_CHANGE_ENTRY_POSITIVE: "#v $CHANGE|=+$#! [Pop.GetName|l] convertis en [Pop.GetState.GetName]"
 POP_RELIGION_CHANGE_ENTRY_NEGATIVE: "#v $CHANGE|=+$#! Les [Pop.GetName|l] en [Pop.GetState.GetName] adoptent la religion [Pop.GetConvertingReligion.GetName|l]"
 RELIGION_NAME_AND_PERCENTAGE: "[Religion.GetName] (#v $VAL|2%$#!)"
 RELIGION_POPULATION_CHANGE: "Changement mensuel de religion [Religion.GetName|l] [Country.GetAltNameNoFormatting('En')][Country.GetName] : #v $CHANGE|=+$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 DISCRIMINATION_TRAIT_CULTURES: "[Concept('concept_culture', '$concept_cultures$')] : [DiscriminationTrait.GetCulturesDesc]"
 DISCRIMINATION_TRAIT_RELIGIONS: "[Concept('concept_religion', '$concept_religions$')] : [DiscriminationTrait.GetReligionsDesc]"
 METRICS_OF_PROGRESS_HEADER: "#title Mesures du progrès#! (test)"
 COUNTRY_URBANISATION: "#title [concept_urbanization] :#!"
 COUNTRY_INDUSTRIALISATION: "#title Industrialisation :#!"
 MILITARY: "Militaire"
 NAVY: "Marine"
 PRICE_REPORT_SHORT: "$DETAILS$"
 PRICE_REPORT_LONG: "$DETAILS$\n#tooltippable #tooltip:$BREAKDOWN_TAG$ Survolez avec le curseur pour voir $NUM_ADDITIONAL|v$ changements supplémentaires importants du [concept_market_price|l]#!#!"
 PRICE_REPORT_NO_CHANGES: "Il n’y a pas eu de changements importants de [Concept('concept_market_price','prix')] sur le [GetPlayer.GetCapital.GetMarket.GetName|l] au cours du dernier mois."
 PRICE_REPORT_GOODS_ENTRY: "$DIRECTION$ [Goods.GetName] [Goods.GetTextIcon] : $PREV_PRICE|v1$@money! ($PREV_ICON$) @arrow_right! $CUR_PRICE|v1$@money! ($CUR_ICON$)"
 PRICE_REPORT_DIRECTION_INCREASE: "@arrow_up!"
 PRICE_REPORT_DIRECTION_DECREASE: "@arrow_down!"
 MAP_MODE: "Mode carte"
 CURRENT_MAP_MODE: "Mode carte actuel"
 MAP_MODE_SHOW_TOOLTIP: "Afficher #b [MapMode.GetName]#! sur la carte"
 MAP_MODE_SHOW_TOOLTIP_SELECTED: "Afficher #b [MapMode.GetName]#! sur la carte\n#i Actuellement affiché#!"
 LOCAL_PRICE_IN: "Prix locaux sur le [GoodsPanel.GetGoods.GetMarket.GetName|l]"
 LOCAL_PRICE_IN_STATE: "Prix locaux sur le [State.GetMarket.GetName|l]"
 USAGE: "Usages"
 LOCAL_PRICE_STATE: "Prix locaux dans le [GoodsStatePanel.GetGoods.GetMarket.GetName|l]"
 GOODS_LOCAL_PRICE_INFO: "#variable @money![Goods.GetStatePrice|1]#! [Goods.GetCompareIconAgainstBasePriceNoTooltip( Goods.GetStatePrice )]"
 GOODS_LOCAL_PRODUCTION_AND_CONSUMPTION_INFO: "[SelectLocalization(GreaterThan_CFixedPoint(Goods.GetStateProduction,'(CFixedPoint)0'),'GOODS_LOCAL_PRODUCTION','')][SelectLocalization(And(GreaterThan_CFixedPoint(Goods.GetStateProduction,'(CFixedPoint)0'),GreaterThan_CFixedPoint(Goods.GetStateConsumption,'(CFixedPoint)0')),', ','')][SelectLocalization(GreaterThan_CFixedPoint(Goods.GetStateConsumption,'(CFixedPoint)0'),'GOODS_LOCAL_CONSUMPTION','')][SelectLocalization(And(EqualTo_CFixedPoint(Goods.GetStateProduction,'(CFixedPoint)0'),EqualTo_CFixedPoint(Goods.GetStateConsumption,'(CFixedPoint)0')),'GOODS_NO_LOCAL_PRODUCTION_OR_CONSUMPTION','')]"
 GOODS_LOCAL_PRODUCTION: "[Concept('concept_good_production', '$concept_good_produces$')] #v [Goods.GetStateProductionWithTooltip]#!"
 GOODS_LOCAL_CONSUMPTION: "[Concept('concept_good_consumption', '$concept_good_consumes$')] #v [Goods.GetStateConsumptionWithTooltip]#!"
 GOODS_NO_LOCAL_PRODUCTION_OR_CONSUMPTION: "Pas de $PRODUCTION$ ni de $CONSUMPTION$"
 OUTLINER_PANEL_DESCRIPTION: "Épinglez l’une des listes ou l’un des éléments de liste ci-dessous au tableau de bord à droite de l’écran en survolant l’un d’eux et en cliquant sur l’étoile (@unpinned_star!) dans le coin droit.\n\nCliquez à nouveau sur l’étoile (@pinned_star!) pour désépingler."
 COUNTRY_LITERACY: "#title [concept_literacy] :#!\n#variable [Country.GetIncorporatedLiteracyRate|%1]#!"
 COUNTRY_LITERACY_ONE_LINE: "#title [concept_literacy]#!"
 LITERACY_TOOLTIP: "#header [concept_literacy]#!\n#variable [Country.GetNumIncorporatedLiteratePops|*]#! sur #variable [Country.GetIncorporatedPopulation|*]#! individus vivant dans les [Concept('concept_incorporated_state','$concept_incorporated_states$')] [Country.GetAltNameNoFormatting('Du')]#variable [Country.GetName]#! sont alphabétisés, ce qui donne un taux d’alphabétisation de [Country.GetIncorporatedLiteracyRate|%v] ([Country.GetIncorporatedLiteracyRanking])\n$TOOLTIP_DELIMITER$\nIl en résulte un plafond d’[concept_innovation|l] de #tooltippable #tooltip:[Country.GetTooltipTag],INNOVATION_POINTS_MAX_BREAKDOWN [Country.GetWeeklyMaxInnovation|1]@innovation!#!#!\nActuellement #tooltippable #tooltip:[Country.GetTooltipTag],INNOVATION_POINTS_CURRENT_BREAKDOWN #v [Country.GetWeeklyInnovation|+=1]@innovation!#!#!#! générée chaque semaine ([Country.GetWeeklyRawInnovation|+=1]@innovation! non plafonnés)\n\nEn outre, le taux d’alphabétisation de [Country.GetIncorporatedLiteracyRate|%v] offre un taux de [concept_technology_spread|l] de #P #tooltippable #tooltip:[Country.GetTooltipTag],TECHNOLOGY_SPREAD_RATE_BREAKDOWN [Country.GetMinWeeklyTechnologySpread|1] à [Country.GetMaxWeeklyTechnologySpread|1]#!#!#! d’[concept_innovation|l]@innovation! chaque semaine[SelectLocalization(GreaterThan_int32(Country.GetNumUnincorporatedStates,'(int32)0'),'LITERACY_UNINCORPORATED_TOOLTIP','')]"
 LITERACY_UNINCORPORATED_TOOLTIP: "\n$TOOLTIP_DELIMITER$\nSi l’on prend également en compte les [Concept('concept_unincorporated_state', '$concept_incorporated_states$')], #variable [Country.GetNumTotalLiteratePops|*]#! sur #variable [Country.GetTotalPopulation|*]#! des [Concept('concept_pop', 'individus')|l] [Country.GetAltNameNoFormatting('En')]#variable [Country.GetName]#! sont alphabétisés, soit un taux de [Country.GetTotalLiteracyRate|%v] ([Country.GetTotalLiteracyRanking])"
 INNOVATION_POINTS_CURRENT_BREAKDOWN: "#header Production d’[concept_innovation|l]@innovation!#!\n[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] produit #v [Country.GetWeeklyInnovation|+2]@innovation!#! en raison de :\n[Country.GetWeeklyInnovationDesc]"
 INNOVATION_POINTS_MAX_BREAKDOWN: "#header Plafond d’[concept_innovation|l]@innovation!#!\nLe plafond [Country.GetAltAdjective('MS')|l] de [Country.GetWeeklyMaxInnovation|v2]@innovation! s’explique par :\n[Country.GetWeeklyMaxInnovationDesc]"
 INNOVATION_CAP_BREAKDOWN_ENTRY_TITLE: "Plafond d’[concept_innovation|l]"
 WEEKLY_TECHNOLOGY_RESEARCH_SPEED: "#header Vitesse de recherche hebdomadaire en #v $CATEGORY$#! : $SPEED|v$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 WEEKLY_TECHNOLOGY_RESEARCH_SPEED_DETAILS: "Génération hebdomadaire d’[concept_innovation|l] @innovation! : #tooltippable #tooltip:$BREAKDOWN$ $INNOVATION|v$#!#![ConcatIfNeitherEmpty('\n','$MODIFIER_DESC$')]"
 TECHNOLOGY_GROUP_RESEARCH_SPEED: "$VALUE|%0+=$ de $MODIFIER$ ($BASE|%0+=$ multiplié par $NUM|v$)"
 GOVERNMENT_TRANSFER_OF_POWER_TOOLTIP: "#header [GovernmentType.GetTransferOfPowerName]#!\n[GovernmentType.GetTransferOfPowerDesc]"
 LOYALISTS_TOOLTIP_POP: "#header $LOYALISTS$#!\nIl y a #v [Pop.GetNumLoyalists|K]#! [Concept('concept_loyalist', '$concept_loyalists$')|l] dans ce [concept_pop|l]"
 RADICALS_TOOLTIP_POP: "#header $RADICALS$#!\nIl y a #v [Pop.GetNumRadicals|K]#! [Concept('concept_radical', '$concept_radicals$')|l] dans ce [concept_pop|l]"
 SUPPORTING_RADICALS_TOOLTIP_POP: "#header $RADICALS$#!\nIl y a #v [Pop.GetPoliticalMovementSupportersRadicals(PoliticalMovement.Self)|K]#! $RADICALS$ dans ce [concept_pop|l]"
 LOYALISTS_TOOLTIP_POP_LIST: "#header $LOYALISTS$#!\nIl y a #v [PopListItem.GetNumLoyalists|d]#! $LOYALISTS$ parmi ces [PopListItem.GetTotalPopSize|dv] [PopListItem.GetPopType.GetName|l]"
 RADICALS_TOOLTIP_POP_LIST: "#header $RADICALS$#!\nIl y a #v [PopListItem.GetNumRadicals|d]#! $RADICALS$ parmi ces [PopListItem.GetTotalPopSize|dv] [PopListItem.GetPopType.GetName|l]"
 SUPPORTING_RADICALS_TOOLTIP_POP_LIST: "#header $RADICALS$#!\nIl y a #v [PopListItem.GetNumRadicals|d]#! $RADICALS$ parmi ces #v [PopListItem.GetTotalPopSize|d]#! [PopListItem.GetPopType.GetName|l]"
 CULTURAL_POSSIBLE_SECESSION_ICON_TOOLTIP: "A [Culture.GetChanceForSecessionMovement( GetPlayer.Self )|%1v] de chance chaque semaine de démarrer un #variable mouvement de [concept_secession|l]#!, étant une [Concept('concept_primary_cultures', 'culture non principale')|l] avec un [concept_turmoil|l] élevé !\n$TOOLTIP_DELIMITER$\n[concept_secession_desc]"
 CULTURAL_GROWING_SECESSION_ICON_TOOLTIP: "La culture [Culture.GetName] a entamé un #variable mouvement de [concept_secession|l]#! contre nous !\n$TOOLTIP_DELIMITER$\n[concept_secession_desc]"
 CULTURAL_TURMOIL_TOOLTIP: "#header [concept_cultural_turmoil]#!\n$TOOLTIP_DELIMITER$\n[concept_turmoil|l] [Culture.GetName|l] mondial : [Culture.GetTurmoil|-0%]\n[concept_turmoil] [Culture.GetName|l] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName] : [GetPlayer.CalcCulturalTurmoil( Culture.Self )|-0%]"
 POP_LIST_TITLE_LABEL: "#bold [PopListItem.GetPopType.GetNameNoIcon]#! [AddLocalizationIf(PopList.HasBuildingContext, 'POP_LIST_POP_TYPE_REPLACED_BY_SLAVES')]"
 POP_LIST_POP_TYPE_REPLACED_BY_SLAVES: "[AddLocalizationIf(Not(StringIsEmpty(PopList.GetBuildingContext.GetPopTypeReplacementDesc(PopListItem.GetPopType))), 'POP_LIST_POP_TYPE_CAN_BE_REPLACED')]"
 POP_LIST_POP_TYPE_CAN_BE_REPLACED: "([PopList.GetBuildingContext.GetPopTypeReplacementDesc(PopListItem.GetPopType)])"
 STATE_POP_PANEL_HEADER: "#bold [Concept('concept_pop','$concept_population$')]#!"
 STATE_POP_PANEL_HEADER_LINE_TWO: "en [StatePopulationPanel.GetState.GetName]"
 POP_CULTURE_TEXT: "Culture du groupe social : #variable [Pop.GetCulture.GetName]#!"
 POP_RELIGION_TEXT: "Religion du groupe social : #variable [Pop.GetReligion.GetName]#!"
 POP_POL_STR_TEXT: "[concept_political_strength] : #variable [Pop.GetPoliticalStrength|1*]#!"
 POP_POL_RADICALS: "[Concept('concept_radical','$concept_radicals$')] : #variable [Pop.GetNumRadicals]#!"
 POP_SUPPORTERS_POL_STR_TEXT: "[concept_political_strength] : #v [Pop.GetPoliticalMovementSupportersPoliticalStrength(PoliticalMovement.Self)|D]#!"
 POP_SUPPORTERS_RADICALS_TEXT: "[Concept('concept_radical','$concept_radicals$')] : #v [Pop.GetPoliticalMovementSupportersRadicals(PoliticalMovement.Self)|D-]#!"
 POP_LIST_ITEM_POL_STR_TEXT: "[concept_political_strength] : #variable [PopListItem.GetTotalPolStr|D*]#!"
 POP_LIST_ITEM_RADICALS_TEXT: "[Concept('concept_radical','$concept_radicals$')] : #variable [PopListItem.GetNumRadicals|D-]#!"
 POP_SUPPORTERS_LIST_ITEM_POL_STR_TEXT: "[concept_political_strength] : #v [PopListItem.GetTotalPolStr|D*]#!"
 POP_SUPPORTERS_LIST_ITEM_RADICALS_TEXT: "[Concept('concept_radical','$concept_radicals$')] : #v [PopListItem.GetNumRadicals|D-]#!"
 POP_SUPPORTERS_LITERACY_TEXT: "[concept_literacy] : [Pop.GetLiteracyRate|%1v]"
 CURRENT_GDP_STATE: "#header [concept_gdp] [State.GetOwner.GetAdjectiveNoFormatting|l] de [State.GetName]#!\n$TOOLTIP_DELIMITER$\nContribution annuelle actuelle au PIB : #variable [State.GetGDPContribution|K] @money!#!\n\n[State.GetName] contribue pour #variable [State.GetGDPContributionPercentage|%1]#! du $GDP_SHORT$ [State.GetOwner.GetAltAdjectiveNoFormatting('MS')|l]\n\n[State.GetGDPGoodsContributionBreakdown]"
 GDP_OWNERSHIP_RATIO_STATE: "[State.GetGdpRatioOwnedByDesc(GetPlayer.Self)]"
 STATE_GDP_GOODS: "Principaux [Concept('concept_good', '$concept_goods$')|l] contribuant au $GDP_SHORT$ en [State.GetName] par semaine\n$BREAKDOWN$"
 STATE_GDP_GOODS_ENTRY: "[Goods.GetName] [Goods.GetTextIcon] : $VAL|vD$@money! ($RATIO|v%0$)"
 POL_STR_MODIFIER_DESC: "$DESC$ / groupe social"
 TOP_PRODUCED: "#title Le plus produit#!"
 TOP_DEMANDED: "#title Le plus demandé#!"
 SEE_ALL_GOODS: "Voir tous les biens"
 EXPAND_BUILDING_COST: "[BUILDING_TYPE.GetRequiredConstruction|v0] @construction!"
 EXPAND_BUILDING_TOOLTIP: "#header [BUILDING_TYPE.GetNameNoFormatting]#!\n[BUILDING_TYPE.GetTooltip]"
 TRADE_LENS_RETARGET_LINK_TOOLTIP: "#BOLD #V Re-cibler la liaison#!#!\n$TOOLTIP_DELIMITER$\n[concept_retarget_market_desc]"
 TRADE_LENS_MERGE_MARKET_TOOLTIP: "#BOLD #V Fusionner les marchés#!#!\n$TOOLTIP_DELIMITER$\n[concept_merge_market_desc]"
 GOODS_POOL_ENTRY: "#variable $AMOUNT|D$#! [Goods.GetName|l]"
 BROWSE_GOODS: "Parcourir les [Concept('concept_good', '$concept_goods$')|l]"
 OPEN_SPECIFIC_MARKET: "Afficher les détails du [TradeOverviewPanel.AccessFirstMarket.GetName|l]"
 FILTER_STAPLE: "Biens essentiels"
 FILTER_INDUSTRIAL_GOODS: "Biens industriels"
 FILTER_MILITARY_GOODS: "Biens militaires"
 FILTER_LUXURY_GOODS: "Biens de luxe"
 GOOD_CATEGORY_MILITARY: "Militaires"
 GOOD_CATEGORY_STAPLE: "Essentiels"
 GOOD_CATEGORY_INDUSTRIAL: "Industriels"
 GOOD_CATEGORY_LUXURY: "De luxe"
 TRADE: "Commerce"
 DIPLOMATIC_OVERVIEW_TITLE: "#BOLD Diplomatie#!"
 OPEN_DIPLOMATIC_BROWSER: "Ouvrir l’explorateur de pays"
 COUNTRIES_TITLE: "#BOLD Pays#!"
 POTENTIAL_MAP_MARKER_TOOLTIP: "#header [State.GetName] a un potentiel pour [Building.GetName]#!\nTaille actuelle : [State.GetBuilding( BuildingPotentialMarker.GetBuildingType.GetKey).GetExpansionLevelBreakdownDesc]"
 BASE_PRICE: "[concept_base_price]"
 MARKET_GOODS: "Biens"
 MARKET_TRADED_AMOUNT: "Montant échangé"
 MARKET_LEVEL: "Niveau"
 MARKET_CONNECTION: "Liaison"
 MARKET_DIFFERENCE: "Différence"
 MARKET_PRICE: "Prix"
 CONSOLE_ADD_DISAPPROVAL: "Depuis la commande de la console"
 PRODUCTION_BUILDING_TOOLTIP: "#BOLD #V [Building.GetName]#!#!"
 BUILDINGS_DETAILS_HEADER: "#BOLD Bâtiments en [State.GetName]#!"
 PLAYER_MONEY: "#BOLD [GetPlayer.GetGoldReserves|K]#! [GetPlayer.GetPowerDeltaIcon('money')]"
 PLAYER_MONEY_BALANCE: "#BOLD [AccessPlayer.PredictWeeklyBalance|1=D]#!"
 WEEKLY_BALANCE_GOOD: "#P $PLAYER_MONEY_BALANCE$#!"
 WEEKLY_BALANCE_BAD: "#N $PLAYER_MONEY_BALANCE$#!"
 WEEKLY_BALANCE_OKAY: "#V $PLAYER_MONEY_BALANCE$#!"
 INTEREST_GROUP_ITEM_TOOLTIP: "ID : [InterestGroup.GetID]"
 CULTURES: "#bold Cultures du pays#!"
 NO_CULTURES: "#bold Pas de [Concept('concept_culture', '$concept_cultures$')|l] du [concept_country|l]#!"
 NO_DIPLO_INFO: "#bold Pas de diplomatie active#!"
 FORMABLE_COUNTRIES: "#bold Pays formables#!"
 NO_FORMABLE_COUNTRIES: "#bold Aucune formation de pays possible#!"
 NO_JOURNAL_ENTRIES: "Pas d’[Concept('concept_journal_entry', '$concept_journal_entries$')|l] actives"
 NO_JOURNAL_ENTRIES_OUTLINER: "Aucun actif"
 NO_DECISIONS: "#bold Aucune décision ne peut être prise#!"
 ACTIVE_JOURNAL_ENTRIES: "[Concept('concept_journal_entry', '$concept_journal_entries$')]"
 OTHER_ACTIVE_JOURNAL_ENTRIES: "Autres [Concept('concept_journal_entry', '$concept_journal_entries$')|l]"
 JOURNAL_ENTRIES_CONCEPT: "$concept_journal_entries$"
 INACTIVE_JOURNAL_ENTRIES: "$concept_journal_entries$ potentielles"
 NO_INACTIVE_JOURNAL_ENTRIES: "Aucune entrée de journal potentielle"
 RELEASE_COUNTRY_NAME: "#HEADER [CountryCreation.GetDefinition.GetName]#!"
 RELEASE_COUNTRY_TIER: "[CountryCreation.GetDefinition.GetTier]"
 RELEASE_COUNTRY_NUM_STATES: "#bold [CountryCreation.GetNumReleasableStates(GetPlayer)]#!"
 RELEASE_COUNTRY_REQ_STATES: "#bold [CountryCreation.GetNumReleasableStates(GetPlayer)]/[CountryCreation.GetNumRequiredStates]#!"
 RELEASE_COUNTRY_TOOLTIP: "#title Libérer le [concept_subject|l]#!\nCultures : #variable [CountryCreation.ListCultures]#!\n$TOOLTIP_DELIMITER$\n[CountryCreation.GetReleaseDesc(GetPlayer)]"
 RELEASE_COUNTRY_DESC: "Libérer #variable [COUNTRY_CREATION.GetName]#! soit en tant que [concept_subject|l] ou en tant que [concept_country|l] indépendant.\n\nIls recevront [COUNTRY_CREATION.GetNumReleasableStates(GetPlayer)|v] États sur [COUNTRY_CREATION.GetTotalNumStates|v] possibles :\n[COUNTRY_CREATION.ListPotentialReleasableStates(GetPlayer)]"
 RELEASE_COUNTRY_PROVINCES_DESC: "Libérer #variable [COUNTRY_CREATION.GetName]#! soit en tant que [concept_subject|l] ou en tant que [concept_country|l] indépendant.\n\nIls recevront [COUNTRY_CREATION.GetNumProvincesToRelease|v] province(s) dans la [concept_state_region|l] [COUNTRY_CREATION.GetCapital.GetName]."
 RELEASABLE_COUNTRIES: "#bold Pays libérables#!"
 NO_RELEASABLE_COUNTRIES: "#bold Aucun pays libérable#!"
 NO_SUBJECTS: "Aucun [concept_subject|l]"
 NO_SUBJECTS_OF_THIS_TYPE: "Aucun [concept_subject|l] de type [SubjectType.GetName]"
 CANNOT_RELEASE_COUNTRY_AS_INDEPENDENT: "Nous ne pouvons pas rendre [COUNTRY_CREATION.GetName] indépendant en raison de nos relations diplomatiques avec [GetPlayer.TryGetOverlordTooltipEntry]"
 CANNOT_RELEASE_COUNTRY_AS_OWN_SUBJECT: "Nous ne pouvons pas faire de [COUNTRY_CREATION.GetName] notre [concept_country|l] [concept_subject|l] en raison de nos relations diplomatiques avec [GetPlayer.TryGetOverlordTooltipEntry]"
 CANNOT_RELEASE_COUNTRY_AS_OWN_SUBJECT_NO_SUBJECT_TYPE: "Nous ne pouvons pas faire de [COUNTRY_CREATION.GetName] notre [concept_country|l] [concept_subject|l] car il n’y a pas de relation de sujet valide qui le permette."
 CANNOT_RELEASE_COUNTRY_SAME_CAPITAL: "Nous ne pouvons pas libérer [COUNTRY_CREATION.GetName] car leur capitale de [COUNTRY_CREATION.GetCapital.GetName] est aussi la nôtre"
 CANNOT_RELEASE_COUNTRY_NO_CAPITAL: "Nous devons contrôler le [concept_capital_state] [COUNTRY_CREATION.GetAdjective] de [COUNTRY_CREATION.GetCapital.GetName] afin de libérer [COUNTRY_CREATION.GetName]"
 CANNOT_RELEASE_COUNTRY_NOT_ENOUGH_STATES: "Nous devons contrôler entièrement #variable [COUNTRY_CREATION.GetNumRequiredStates]#! États de base [COUNTRY_CREATION.GetAdjective] afin de libérer #variable [COUNTRY_CREATION.GetName]#!. Il y a au total #variable [COUNTRY_CREATION.GetTotalNumStates]#! États de base [COUNTRY_CREATION.GetAdjective] dans le monde :\n[COUNTRY_CREATION.ListPotentialStates(GetPlayer)]"
 CANNOT_RELEASE_COUNTRY_DIPLOMATIC_PLAY: "Nous ne pouvons pas libérer [COUNTRY_CREATION.GetAltNameNoFormatting('Le')][COUNTRY_CREATION.GetName] car nous sommes impliqués dans un [concept_diplomatic_play|l]"
 CANNOT_RELEASE_COUNTRY_WAR: "Nous ne pouvons pas libérer [COUNTRY_CREATION.GetAltNameNoFormatting('Le')][COUNTRY_CREATION.GetName] car nous sommes impliqués dans une [concept_war|l]"
 RELEASABLE_STATE: "[STATE_REGION.GetName]"
 SUBJECT_TYPES_VISUALIZATION: "Tableau des types de sujets"
 COUNTRY_FORMATION_HEADER: "Formation de nation"
 COUNTRY_FORMATION_TYPE: "[SelectLocalization(CountryFormation.IsMajorFormation, Concept('concept_unification', '$concept_major_unification$'), Concept('concept_unification', '$concept_minor_unification$'))]"
 GO_TO_COUNTRY_FORMATION: "Aller à la [concept_nation_formation|l] #header [CountryFormation.GetAdjective]#!"
 FORM_COUNTRY: "Former [CountryFormation.GetName]"
 FORM_COUNTRY_REQUIRED: "Contrôler au moins #v [CountryFormation.GetNumRequiredStates]#! [Concept('concept_state_region', '$concept_state_regions$')] est nécessaire pour former [CountryFormation.GetName]"
 FORM_COUNTRY_CULTURES: "[Concept('concept_culture', '$concept_cultures$')] : [CountryFormation.ListCultures]"
 FORM_COUNTRY_NAME: "#HEADER [CountryFormation.GetName]#!"
 FORM_COUNTRY_TIER: "[CountryFormation.GetDefinition.GetTier]"
 CANNOT_FORM_COUNTRY_NOT_ENOUGH_STATES: "Nous contrôlons seulement #v [COUNTRY_FORMATION.GetNumControlledStates(GetPlayer)]#! des #v [COUNTRY_FORMATION.GetNumRequiredStates]#! [Concept('concept_state_region', '$concept_state_regions$')|l] pour former #v [COUNTRY_FORMATION.GetName]#! :\n[COUNTRY_FORMATION.ListRequiredStates(GetPlayer)]"
 CANNOT_FORM_COUNTRY_INDEPENDENCE_WAR_ONGOING_TITLE: "Guerre d’indépendance en cours contre $NUM_COUNTRIES$ [Concept('concept_country', '$concept_countries$')|l] :"
 CANNOT_FORM_COUNTRY_INDEPENDENCE_WAR_ONGOING_ELEMENT: "$TAB$[COUNTRY.GetName]"
 FORM_COUNTRY_REQ_STATES: "#bold [CountryFormation.GetNumControlledStates(GetPlayer)]/[CountryFormation.GetNumRequiredStates]#!"
 CAN_FORM_COUNTRY_DESC: "Nous contrôlons entièrement #v [COUNTRY_FORMATION.GetNumControlledStates(GetPlayer)]#! des #v [COUNTRY_FORMATION.GetNumRequiredStates]#! [Concept('concept_state_region', '$concept_state_regions$')] pour former #v [COUNTRY_FORMATION.GetName]#! :\n[COUNTRY_FORMATION.ListRequiredStates(GetPlayer)]"
 FORM_COUNTRY_TOOLTIP: "#header $FORM_COUNTRY$#!\n$FORM_COUNTRY_REQUIRED$\n$TOOLTIP_DELIMITER$\n[CountryFormation.GetFormDesc(GetPlayer)]"
 REQUIRED_STATE_CONTROLLED: "@green_checkmark_box! [STATE_REGION.GetName]"
 REQUIRED_STATE_NON_CONTROLLED: "@simple_box! [STATE_REGION.GetName]"
 REQUIRED_STATE_NON_CONTROLLED_OPTIONAL: "@simple_box! [STATE_REGION.GetName] (optionnel)"
 FORM_COUNTRY_SPLIT_STATE: "[Concept('concept_split_state', '$concept_split_state_short$')]"
 FORM_COUNTRY_CANDIDATES_HEADER: "[Concept('concept_unification_candidate', '$concept_unification_candidates$')]"
 FORM_COUNTRY_CANDIDATES_EMPTY: "Aucun candidat"
 FORM_COUNTRY_STATE_REGIONS_HEADER: "Nous contrôlons #v [CountryFormation.GetNumControlledStates(GetPlayer)]#!/#v [CountryFormation.GetTotalNumStates]#! [Concept('concept_state_region', '$concept_state_regions$')] [CountryFormation.GetAdjective]"
 FORM_COUNTRY_STATE_REGIONS_REQUIRED: "[CountryFormation.GetNumRequiredStates|v] [Concept('concept_state_region', '$concept_state_regions$')] contrôlées requises pour former [CountryFormation.GetName]"
 FORM_COUNTRY_CULTURE_COUNTRIES_HEADER: "[CountryFormation.ListCultures] [Concept('concept_country', '$concept_countries$')|l]"
 FORM_COUNTRY_SUPPORT_CANDIDATE: "Soutenir"
 FORM_COUNTRY_SUPPORT_CANDIDATE_TOOLTIP: "#header [Concept('concept_unification_supporter', 'Soutenir')] [Country.GetAltNameNoFormatting('Le')][Country.GetName]#!\n$TOOLTIP_DELIMITER$\nDéclarons notre soutien [Country.GetAltNameNoFormatting('Au')][Country.GetName] en tant qu’unificateur de [CountryFormation.GetName][ConcatIfNeitherEmpty('\n',CountryFormation.GetSupportCandidateDesc(GetPlayer, Country.Self))]"
 FORM_COUNTRY_STOP_SUPPORTING_CANDIDATE: "Cesser de soutenir"
 FORM_COUNTRY_STOP_SUPPORTING_CANDIDATE_TOOLTIP: "#header Cesser de [Concept('concept_unification_supporter', 'soutenir')] [Country.GetAltNameNoFormatting('Le')][Country.GetName]#!\n$TOOLTIP_DELIMITER$\nMettre fin à notre soutien pour [Country.GetAltNameNoFormatting('Le')][Country.GetName] en tant qu’unificateur de [CountryFormation.GetName][ConcatIfNeitherEmpty('\n',CountryFormation.GetSupportCandidateDesc(GetPlayer, Country.Self))]"
 FORM_COUNTRY_SUPPORT_IS_SUBJECT: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] [Country.GetAltNameNoFormatting('EstSont')] un [concept_subject|l] et peut uniquement soutenir son [concept_overlord|l] pour former la nation de [CountryFormation.GetName]"
 FORM_COUNTRY_SUPPORT_DOES_NOT_HAVE_VALID_CULTURE: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] ne partage aucune [Concept('concept_primary_cultures','culture principale')] avec [CountryFormation.GetName]"
 FORM_COUNTRY_SUPPORT_IS_CANDIDATE: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] [Country.GetAltNameNoFormatting('EstSont')] candidat pour unifier [CountryFormation.GetName]"
 FORM_COUNTRY_SUPPORT_IS_ALREADY_SUPPORTING_CANDIDATE: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] soutient déjà [CountryFormation.GetSupportedCandidateCountry(Country.Self).GetAltNameNoFormatting('Le')][CountryFormation.GetSupportedCandidateCountry(Country.Self).GetName]"
 FORM_COUNTRY_SUPPORT_DIPLOMATIC_PLAY_STARTED: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] est déjà impliqué dans le [concept_diplomatic_play|l] [DIPLOMATIC_PLAY_TYPE.GetName|v]"
 FORM_COUNTRY_SUPPORTING_COUNTRY: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] soutient [CountryFormation.GetSupportedCandidateCountry(Country.Self).GetAltNameNoFormatting('Le')][CountryFormation.GetSupportedCandidateCountry(Country.Self).GetName] en tant qu’unificateur de [CountryFormation.GetName]"
 FORM_COUNTRY_SUPPORTING_COUNTRIES: "Soutiens : #v [CountryFormation.GetNumSupportingCountries(Country.Self)]#!"
 FORM_COUNTRY_SUPPORTING_COUNTRIES_TOOLTIP: "#header [Concept('concept_unification_supporter', '$concept_unification_support$')] à l’unification pour [Country.GetAltNameNoFormatting('Le')][Country.GetName]#!\n$TOOLTIP_DELIMITER$\nSoutenu par #v [CountryFormation.GetNumSupportingCountries(Country.Self)]#! [Concept('concept_country', '$concept_countries$')|l] en tant qu’unificateur de [CountryFormation.GetName] :\n[CountryFormation.GetSupportingCountriesDesc(Country.Self)]"
 FORM_COUNTRY_NO_SUPPORTING_COUNTRIES: "Aucun soutien"
 FORM_COUNTRY_NO_SUPPORTING_COUNTRIES_TOOLTIP: "#header [Concept('concept_unification_supporter', '$concept_unification_support$')] à l’unification pour [Country.GetAltNameNoFormatting('Le')][Country.GetName]#!\n$TOOLTIP_DELIMITER$\nNon soutenu par un autre [concept_country|l] en tant qu’unificateur de [CountryFormation.GetName]"
 FORM_COUNTRY_SUPPORT_BREAKDOWN: "[CountryFormation.GetSupportForAllCandidatesDesc(Country.Self)]"
 UNIFICATION_SUPPORT_IS_CANDIDATE: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] [Country.GetAltNameNoFormatting('EstSont')] un [concept_unification_candidate|l] pour [CountryFormation.GetName]"
 UNIFICATION_SUPPORT_NO_CANDIDATES: "Il n’y a actuellement aucun [concept_unification_candidate|l] pour [CountryFormation.GetName] que [Country.GetAltNameNoFormatting('Le')][Country.GetName] puiss[Country.GetAltNameNoFormatting('EEnt')] soutenir"
 UNIFICATION_SUPPORT_IS_PLAYER: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] [Country.GetAltNameNoFormatting('EstSont')] un joueur humain, et c’est à lui de décider qui il soutient pour unifier [CountryFormation.GetName]."
 FORM_COUNTRY_LAUNCH_UNIFICATION_PLAY: "Lancer le [Concept('concept_diplomatic_play', '$concept_diplomatic_play_short$')|l] d’unification"
 FORM_COUNTRY_LAUNCH_UNIFICATION_PLAY_TOOLTIP: "[CountryFormation.GetTriggerUnificationPlayDesc(GetPlayer)]"
 FORM_COUNTRY_LAUNCH_LEADERSHIP_PLAY: "Lancer le [Concept('concept_diplomatic_play', '$concept_diplomatic_play_short$')|l] de leadership"
 FORM_COUNTRY_LAUNCH_LEADERSHIP_PLAY_TOOLTIP: "[CountryFormation.GetTriggerLeadershipPlayDesc(GetPlayer,Country.Self)]"
 COUNTRY_DOES_NOT_EXIST_TOOLTIP: "Ce [concept_country] n’existe pas"
 PRODUCTION_AMOUNT: "#BOLD [GoodsProductionInfo.GetAmount|D]#! "
 PRODUCTION_AMOUNT_MARKER: "#BOLD [GoodsProductionInfo.GetAmount|D]#!"
 PRODUCTION_PRICE: "[GoodsProductionInfo.GetPrice|1]@money!"
 PRODUCTION_SOLD_FOR: "[GoodsProductionInfo.GetSoldFor|D]@money!"
 PRODUCTION_PANEL_HEADER: "#BOLD [concept_good_production] en [State.GetName]#!"
 PRODUCTION_AMOUNT_TITLE: "#title Quantité#!"
 PRODUCTION_SOLD_FOR_TITLE: "#title Vendu pour#!"
 PRODUCTION_GOOD_TITLE: "#title Bien#!"
 MARKET: "Marché"
 MARKETS: "Marchés"
 TRADE_OVERVIEW_TITLE: "#bold Marchés#!"
 POPS_OVERVIEW_TITLE: "#bold Population#!"
 TRADE_OVERVIEW_MOST_IMPORTED: "#title Les plus importés#!"
 TRADE_OVERVIEW_MOST_CONSUMPTION_INEFFICIENT: "#title Inefficacités de [concept_good_consumption|l]#!"
 TRADE_OVERVIEW_MOST_EXPORTED: "#title Les plus exportés#!"
 TRADE_OVERVIEW_MOST_PRODUCTION_INEFFICIENT: "#title Inefficacités de [concept_good_production|l]#!"
 POPS_OVERVIEW_STATISTICS_TAB: "Vue d’ensemble"
 POPS_OVERVIEW_POP_LIST_TAB: "Liste détaillée"
 POPS_OVERVIEW_CHARTS: "Graphiques"
 BUILDING_GOVERNMENT_EXPENSES: "[concept_government_expenses] :"
 BUILDING_INFRA_USAGE: "#variable [Building.CalcInfrastructureUsage|=0]#! en [concept_infrastructure_usage|l]"
 BUILDING_URBANIZATION: "[concept_urbanization] :"
 BUILDING_INFRA_USAGE_TOOLTIP: "[Building.GetInfrastructureUsageBreakdown]"
 BUILDING_URBANIZATION_TOOLTIP: "[Building.GetUrbanizationProvidedBreakdown]"
 BUILDING_BATTALIONS_MOBILIZED: "[Concept('concept_mobilize_battalion', '$concept_mobilize_battalions_mobilized$s')] :"
 PANEL_MILITARY_ARMY_POWER_PROJECTION_TOOLTIP: "[Country.GetArmyPowerProjectionDesc]"
 PANEL_MILITARY_ARMY_POWER_PROJECTION: "Le nombre total de [Concept('concept_battalion', '$concept_battalions$')|l] [Country.GetAltAdjective('MP')|l] et leur sophistication technologique aboutissent à une [concept_power_projection|l] de l’armée de #tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_ARMY_POWER_PROJECTION_TOOLTIP [Country.GetArmyPowerProjection|v0]#!#!"
 PANEL_MILITARY_NAVY_POWER_PROJECTION_TOOLTIP: "[Country.GetNavyPowerProjectionDesc]"
 PANEL_MILITARY_NAVY_POWER_PROJECTION: "Le nombre total de [Concept('concept_flotilla', '$concept_flotillas$')|l] [Country.GetAltAdjective('FP')|l] et leur sophistication technologique aboutissent à une [concept_power_projection|l] de la marine de #tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_NAVY_POWER_PROJECTION_TOOLTIP [Country.GetNavyPowerProjection|v0]#!#!"
 PANEL_MILITARY_ARMY_CURRENT_BATTALIONS: "[Country.GetBattalions|0v]@battalions!"
 BORROW_LENDING_SETTING_HEADER: "#title Emprunt et prêt de [Concept('concept_battalion','$concept_battalions$')|l]#!"
 BORROW_LENDING_SETTING_OPTION_TOOLTIP: "[MilitaryFormationBorrowSetting.GetName]\n[SelectLocalization(StringIsEmpty(GetDesc(MilitaryFormationBorrowSetting.GetBorrowingCommand)), 'BORROW_LENDING_SETTING_OPTION_TOOLTIP_PROMPT', GetDesc(MilitaryFormationBorrowSetting.GetBorrowingCommand))]\n$TOOLTIP_DELIMITER$\n[MilitaryFormationBorrowSetting.GetDesc]"
 BORROW_LENDING_SETTING_OPTION_TOOLTIP_PROMPT: "#i Cliquez pour sélectionner#!"
 BORROW_LENDING_SETTING_OPTION_TOOLTIP_SELECTED: "[MilitaryFormationBorrowSetting.GetName] #i (en cours)#!\n$TOOLTIP_DELIMITER$\n[MilitaryFormationBorrowSetting.GetDesc]"
 BORROW_LENDING_SETTING_ANY_NAME: "Une [concept_army|l] alliée"
 BORROW_LENDING_SETTING_PLAYER_COUNTRY_ONLY_NAME: "Uniquement les [Concept('concept_army','$concept_armies$')|l] [GetPlayer.GetAltAdjective('FP')|l]"
 BORROW_LENDING_SETTING_NONE_NAME: "Aucun"
 BORROW_LENDING_SETTING_ANY_DESC: "Autorise l’emprunt de [Concept('concept_battalion','$concept_battalions$')|l] de [MilitaryFormation.GetName] par d’autres [Concept('concept_army','$concept_armies$')|l] alliées #b à l’attaque#! sur le même [concept_front|l] que [MilitaryFormation.GetName]\n\n(Les [Concept('concept_army','$concept_armies$')|l] en défense pourront toujours emprunter des [Concept('concept_battalion','$concept_battalions$')|l])"
 BORROW_LENDING_SETTING_PLAYER_COUNTRY_ONLY_DESC: "Autorise l’emprunt de [Concept('concept_battalion','$concept_battalions$')|l] de [MilitaryFormation.GetName] #b uniquement#! par d’autres [Concept('concept_army','$concept_armies$')|l] [GetPlayer.GetAltAdjective('FP')|l] #b à l’attaque#!\n\n(Les [Concept('concept_army','$concept_armies$')|l] en défense pourront toujours emprunter des [Concept('concept_battalion','$concept_battalions$')|l])"
 BORROW_LENDING_SETTING_NONE_DESC: "Interdit l’emprunt de [Concept('concept_battalion','$concept_battalions$')|l] de [MilitaryFormation.GetName] pour d’autres [Concept('concept_army','$concept_armies$')|l] #b à l’attaque#!\n\n(Les [Concept('concept_army','$concept_armies$')|l] en défense pourront toujours emprunter des [Concept('concept_battalion','$concept_battalions$')|l])"
 POWER_PROJECTION_FROM_MILITARY_FORMATION: "#tooltippable #tooltip:[MILITARY_FORMATION.GetTooltipTag],MILITARY_FORMATION_POWER_PROJECTION_TOOLTIP $VALUE|=+0$#!#! de la formation [MILITARY_FORMATION.GetName]"
 MILITARY_FORMATION_POWER_PROJECTION_TOOLTIP: "[MilitaryFormation.GetPowerProjectionDesc]"
 MILITARY_FORMATION_POWER_PROJECTION_DESC: "#header [concept_power_projection] : $TOTAL_POWER_PROJECTION|v0$#!\n$TOOLTIP_DELIMITER$\nUne [concept_offense|l] et une [concept_defense|l] moyennes de $AVERAGE_CE|1v$ réparties sur $TOTAL_MANPOWER|D1$ [concept_manpower|l] fournissent $TOTAL_POWER_PROJECTION|v0$ de projection de puissance pour la formation."
 REGULARS_AND_CONSCRIPTS: "Soldats réguliers et conscrits"
 MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS_WITH_ICON: "$MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS$[MilitaryFormation.GetUnitIcon]"
 MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS: "#v [MilitaryFormation.GetNumCombatUnits]#!/[SelectLocalization(LessThan_int32(MilitaryFormation.GetCommandLimitRaw, MilitaryFormation.GetNumCombatUnits), 'INSUFFICIENT_COMMAND_LIMIT', 'SUFFICIENT_COMMAND_LIMIT')]"
 MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS_NO_LIMIT: "#v [MilitaryFormation.GetNumCombatUnits]#!"
 INSUFFICIENT_COMMAND_LIMIT: "#r [MilitaryFormation.GetCommandLimitRaw]#!"
 SUFFICIENT_COMMAND_LIMIT: "[MilitaryFormation.GetCommandLimitRaw]"
 MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS_TOOLTIP: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_BATTALIONS_TOOLTIP', 'MILITARY_FORMATION_FLOTILLAS_TOOLTIP')]\n$TOOLTIP_DELIMITER$\nCes [Concept('concept_unit', '$concept_units_short$')|l] viennent de :\n[MilitaryFormation.GetBuildingsDesc]"
 POTENTIAL_CONSCRIPTS: "#v [Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumConscriptUnits, MilitaryFormationUnitEntry.GetCurrentNumConscriptUnits)]#! [Concept('concept_conscript_battalion','$concept_conscript_battalions$')|l]@conscripts! non levés"
 NOT_RAISED_CONSCRIPT: "[Concept('concept_conscript_battalion','$concept_conscript_battalion_short$')]@conscripts! non levé"
 PANEL_MILITARY_NATIVE_POTENTIAL_BATTALIONS_TOOLTIP: "En cas d’escalade des [Concept('concept_tension', '$concept_tensions$')|l] jusqu’à un [concept_native_uprising|l], [Country.GetAltNameNoFormatting('Le')][Country.GetName] pourra envoyer sur le terrain jusqu’à [Country.CalcConscriptableBattalions|0]@battalions! [Concept('concept_battalion', '$concept_battalions$')|l] de guerriers."
 PANEL_MILITARY_ARMY_OVERVIEW_TOOLTIP: "#header [Concept('concept_conscript_battalion','$concept_conscript_battalions$')] et [Concept('concept_battalion', '$concept_battalions$')|l] [Country.GetAltAdjective('MP')|l]#!\n[Country.GetRegularBattalions|v]@battalions! [Concept('concept_battalion', '$concept_battalions$')|l] (#v [Country.GetMobilizationRatio|0%]#!@mobilization! [Concept('concept_mobilize_battalion', '$concept_mobilize_battalions_mobilized$')|l])\n[Country.GetConscriptedBattalions|v]@conscripts! sur [Country.CalcConscriptableBattalions|v] [Concept('concept_conscript_battalion','$concept_conscript_battalions$')|l] levés\n$TOOLTIP_DELIMITER$\n$PANEL_MILITARY_ARMY_POWER_PROJECTION$\n\n[Concept('concept_army','$concept_armies$')] :\n[SelectLocalization(IsDataModelEmpty(Country.GetMilitaryFormationsArmy), 'NO_ARMIES_IN_COUNTRY', 'ARMIES_IN_COUNTRY_TOOLTIP_BREAKDOWN')]"
 NO_ARMIES_IN_COUNTRY: "Aucune [Concept('concept_army','armée')|l] [Country.GetAltNameNoFormatting('En')][Country.GetName]"
 ARMIES_IN_COUNTRY_TOOLTIP_BREAKDOWN: "[Country.GetArmiesBreakdown]"
 ARMY_ENTRY_FORMAT: "$TAB$@battalions!#tooltippable #tooltip:[MILITARY_FORMATION.GetTooltipTag],MILITARY_FORMATION_BATTALIONS_TOOLTIP $NUM_BATTALIONS|v$ #!#! $FORMATION_NAME$"
 MILITARY_FORMATION_BATTALIONS_TOOLTIP: "#header [Concept('concept_battalion', '$concept_battalions$')] dans la formation [MilitaryFormation.GetName]#!\n[MilitaryFormation.GetNumCombatUnits|v] @battalions! en tout $INCOMING_NUMBER_OF_REGULARS_LABEL$\n@battalions!#tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_COMMAND_LIMIT_DESC [MilitaryFormation.GetCommandLimit|v]#!#![AddLocalizationIf(LessThan_int32(MilitaryFormation.GetCommandLimitRaw, MilitaryFormation.GetNumCombatUnits), ' @warning!')] de [concept_command_limit|l]\n$TOOLTIP_DELIMITER$\n@battalions!#tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_REGULAR_BATTALIONS_TOOLTIP [MilitaryFormation.GetNumRegulars|v]#!#! [Concept('concept_battalion', '$concept_battalions$')|l] réguliers\n@conscripts!#tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_CONSCRIPT_BATTALIONS_TOOLTIP [MilitaryFormation.GetNumConscripts|v]#!#! levés sur #tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_CONSCRIPT_BATTALIONS_TOOLTIP [MilitaryFormation.GetMaxConscripts|v]#!#! [Concept('concept_conscript_battalion','$concept_conscript_battalions$')|l] potentiels"
 MILITARY_FORMATION_REGULAR_BATTALIONS_TOOLTIP: "#header [Concept('concept_battalion', '$concept_battalions$')] réguliers dans la formation [MilitaryFormation.GetName]#!\n[MilitaryFormation.GetNumRegulars|v]@battalions! en tout\n@battalions![MilitaryFormation.GetNumFullyMobilizedRegulars|v] [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')|l]s ([MilitaryFormation.GetRegularsMobilizationPercentage|%v])\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_group', '$concept_combat_unit_groups$')] :\n[MilitaryFormation.GetRegularsGroupsBreakdown]"
 INCOMING_NUMBER_OF_REGULARS_LABEL: "[SelectLocalization(NotZero(MilitaryFormation.GetIncomingNumRegulars), 'INCOMING_NUMBER_OF_REGULARS', 'NO_INCOMING_NUMBER_OF_REGULARS')]"
 INCOMING_NUMBER_OF_REGULARS: "(+[MilitaryFormation.GetUnitIcon][MilitaryFormation.GetIncomingNumRegulars|v] [Concept('concept_incoming_units', '$concept_incoming_units$')|l])"
 NO_INCOMING_NUMBER_OF_REGULARS: ""
 INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE_LABEL: "[SelectLocalization(NotZero(MilitaryFormation.GetIncomingNumRegularsOfUnitType(CombatUnitType.Self)), 'INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE', 'NO_INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE')]"
 INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE: "(+[MilitaryFormation.GetUnitIcon][MilitaryFormation.GetIncomingNumRegularsOfUnitType(CombatUnitType.Self)|v] [Concept('concept_incoming_units', '$concept_incoming_units$')|l])"
 NO_INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE: ""
 UNIT_GROUP_ENTRY_FORMAT_REGULAR_BATTALIONS: "$TAB$#tooltippable #tooltip:$GROUP_BREAKDOWN_TAG$ $NUM_UNITS|v$#!#! $GROUP_NAME$@battalions!"
 UNIT_GROUP_REGULAR_BATTALIONS_TOOLTIP: "#header [COMBAT_UNIT_GROUP.GetName] dans [MilitaryFormation.GetName]#!\n[MilitaryFormation.GetNumRegularsUnitsInGroup(COMBAT_UNIT_GROUP.Self)|v] de [MilitaryFormation.GetUnitLabel] @battalions! réguliers au total\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')] :\n[MilitaryFormation.GetUnitTypesByRegularsGroupBreakdown( COMBAT_UNIT_GROUP.Self )]"
 UNIT_GROUP_REGULAR_BATTALIONS_NO_ELIGIBLE_GROUPS: "$TAB$Il n’y a aucun [concept_combat_unit_group|l] éligible pour les [MilitaryFormation.GetUnitLabel] réguliers de la formation [MilitaryFormation.GetName]"
 UNIT_GROUP_REGULAR_BATTALIONS_TOOLTIP_FOR_GUI: "#header [CombatUnitGroup.GetName] dans [MilitaryFormation.GetName]#!\n[MilitaryFormation.GetNumRegularsUnitsInGroup(CombatUnitGroup.Self)|v] [MilitaryFormation.GetUnitLabel] @battalions! réguliers au total\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')] :\n[MilitaryFormation.GetUnitTypesByRegularsGroupBreakdown( CombatUnitGroup.Self )][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetUnitTypesByRegularsGroupBreakdown( CombatUnitGroup.Self )), 'NO_REGULAR_UNIT_TYPES_IN_UNIT_GROUP_FORMATION_CONTEXT')]"
 NO_REGULAR_UNIT_TYPES_IN_UNIT_GROUP_FORMATION_CONTEXT: "$TAB$Pas de [CombatUnitGroup.GetName|l] de réguliers dans [MilitaryFormation.GetName]"
 UNIT_GROUP_CONSCRIPT_BATTALIONS_TOOLTIP_FOR_GUI: "#header [CombatUnitGroup.GetName] de [Concept('concept_conscript_battalion', '$concept_conscript_battalions_short$')|l] dans [MilitaryFormation.GetName]#!\n[MilitaryFormation.GetNumConscriptsUnitsInGroup(CombatUnitGroup.Self)|v] [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')|l]@conscripts! au total[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.HasRaisedConscripts), 'NOT_RAISED_CONSCRIPTS'))]\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')] :\n[MilitaryFormation.GetUnitTypesByConscriptsGroupBreakdown( CombatUnitGroup.Self )][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetUnitTypesByConscriptsGroupBreakdown( CombatUnitGroup.Self )), 'NO_CONSCRIPT_UNIT_TYPES_IN_UNIT_GROUP_FORMATION_CONTEXT')]"
 NO_CONSCRIPT_UNIT_TYPES_IN_UNIT_GROUP_FORMATION_CONTEXT: "$TAB$Pas de [CombatUnitGroup.GetName|l] de [Concept('concept_conscript_battalion', '$concept_conscript_battalions_short$')|l] dans [MilitaryFormation.GetName]"
 UNIT_LABEL_ARMY: "[Concept('concept_battalion', '$concept_battalions$')]"
 UNIT_LABEL_NAVY: "[Concept('concept_flotilla', '$concept_flotillas$')]"
 UNIT_LABEL_CONSCRIPTS: "[Concept('concept_conscript_battalion','$concept_conscript_battalions_short$')]"
 UNIT_GROUP_FLOTILLAS_TOOLTIP_FOR_GUI: "#header [CombatUnitGroup.GetName] dans [MilitaryFormation.GetName]#!\n[MilitaryFormation.GetNumTotalCombatUnitsInGroup(CombatUnitGroup.Self)|v] [MilitaryFormation.GetUnitLabel] @flotillas! au total\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')] :\n[MilitaryFormation.GetUnitTypesByFlotillaGroupBreakdown( CombatUnitGroup.Self )]"
 UNIT_TYPE_REGULAR_BATTALIONS_TOOLTIP: "#header [COMBAT_UNIT_TYPE.GetName] dans [MilitaryFormation.GetName] [MilitaryFormation.GetUnitLabel]#!\n@battalions!$NUM_UNITS_OF_TYPE|v$ au total\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')] :\n[MilitaryFormation.GetRegularUnitsByTypeBreakdown( COMBAT_UNIT_TYPE.Self )]"
 UNIT_TYPE_REGULAR_BATTALIONS_TOOLTIP_FOR_GUI: "#header [MilitaryFormationUnitEntry.GetUnitType.GetName] de [MilitaryFormation.GetName]#!\n[MilitaryFormation.GetUnitIcon]#v [MilitaryFormationUnitEntry.GetCurrentNumRegularUnits]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumRegularUnits, MilitaryFormationUnitEntry.GetCurrentNumRegularUnits), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS')] [MilitaryFormation.GetUnitLabel] réguliers au total\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')] :\n[MilitaryFormation.GetRegularUnitsByTypeBreakdown( MilitaryFormationUnitEntry.GetUnitType.Self )][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetRegularUnitsByTypeBreakdown( MilitaryFormationUnitEntry.GetUnitType.Self)), 'NO_UNITS_OF_UNIT_TYPE')]"
 NO_UNITS_OF_UNIT_TYPE: "$TAB$Pas de [MilitaryFormationUnitEntry.GetUnitType.GetName] dans la formation [MilitaryFormation.GetName]"
 UNIT_TYPE_BATTALIONS_TOOLTIP_FOR_GUI: "#header [CombatUnitType.GetName] de [MilitaryFormation.GetName]#!\n@battalions!#v [MilitaryFormation.GetNumRegularCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self )]#! [MilitaryFormation.GetUnitLabel] réguliers au total $INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE_LABEL$\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')] :\n[MilitaryFormation.GetRegularUnitsByTypeBreakdown( CombatUnitType.Self )][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetRegularUnitsByTypeBreakdown( CombatUnitType.Self )), 'NO_UNITS_OF_UNIT_TYPE_FORMATION_CONTEXT')]"
 NO_UNITS_OF_UNIT_TYPE_FORMATION_CONTEXT: "$TAB$Pas de [CombatUnitType.GetName|l] dans la formation [MilitaryFormation.GetName]"
 UNIT_TYPE_FLOTILLAS_TOOLTIP_FOR_GUI: "#header [CombatUnitType.GetName] de [MilitaryFormation.GetName]#!\n@flotillas!#v [MilitaryFormation.GetNumRegularCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self )]#! [MilitaryFormation.GetUnitLabel] au total $INCOMING_NUMBER_OF_REGULARS_OF_UNIT_TYPE_LABEL$\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')] :\n[MilitaryFormation.GetRegularUnitsByTypeBreakdown( CombatUnitType.Self )][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetRegularUnitsByTypeBreakdown( CombatUnitType.Self )), 'NO_UNITS_OF_UNIT_TYPE_FORMATION_CONTEXT')]"
 UNIT_TYPE_FLOTILLAS_TOOLTIP_FOR_GUI_ON_MILITARY_PANEL: "#header [MilitaryFormationUnitEntry.GetUnitType.GetName] de [MilitaryFormation.GetName]#!\n@flotillas!#v [MilitaryFormationUnitEntry.GetCurrentNumRegularUnits]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumRegularUnits, MilitaryFormationUnitEntry.GetCurrentNumRegularUnits), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS')] [MilitaryFormation.GetUnitLabel] au total\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')] :\n[MilitaryFormation.GetRegularUnitsByTypeBreakdown( MilitaryFormationUnitEntry.GetUnitType.Self )][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetRegularUnitsByTypeBreakdown( MilitaryFormationUnitEntry.GetUnitType.Self)), 'NO_UNITS_OF_UNIT_TYPE')]"
 UNIT_TYPE_CONSCRIPT_BATTALIONS_TOOLTIP_FOR_GUI: "#header [MilitaryFormationUnitEntry.GetUnitType.GetName] [Concept('concept_conscript_battalion', '$concept_conscript_battalion_short$')|l] de [MilitaryFormation.GetName]#!\n#v [MilitaryFormationUnitEntry.GetCurrentNumConscriptUnits]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumConscriptUnits, MilitaryFormationUnitEntry.GetCurrentNumConscriptUnits), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_CONSCRIPTS')] [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')|l] @conscripts! au total\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')] :\n[MilitaryFormation.GetConscriptUnitsByTypeBreakdown( MilitaryFormationUnitEntry.GetUnitType.Self )][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetConscriptUnitsByTypeBreakdown( MilitaryFormationUnitEntry.GetUnitType.Self)), 'NO_CONSCRIPT_UNITS_OF_UNIT_TYPE')]"
 UNIT_TYPE_CONSCRIPT_BATTALIONS_TOOLTIP_FOR_GUI_NOT_RAISED: "#header [CombatUnitType.GetName] de [Concept('concept_conscript_battalion', '$concept_conscript_battalion_short$')|l] dans [MilitaryFormation.GetName]#!\n#v [MilitaryFormationUnitEntry.GetExpectedNumConscriptUnits]#! [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')|l] @conscripts! au total[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.HasRaisedConscripts), 'NOT_RAISED_CONSCRIPTS'))]"
 UNIT_TYPE_CONSCRIPT_TOOLTIP_FOR_GUI_RAISED: "#header [CombatUnitType.GetName] de [Concept('concept_conscript_battalion', '$concept_conscript_battalions_short$')|l] dans [MilitaryFormation.GetName]#!\n#v [MilitaryFormation.GetNumConscriptsCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self )]#! [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')|l] @conscripts! au total[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.HasRaisedConscripts), 'NOT_RAISED_CONSCRIPTS'))]\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')] :\n[MilitaryFormation.GetConscriptUnitsByTypeBreakdown( CombatUnitType.Self )][AddLocalizationIf(StringIsEmpty(MilitaryFormation.GetConscriptUnitsByTypeBreakdown( CombatUnitType.Self )), 'NO_CONSCRIPT_UNITS_OF_UNIT_TYPE_FORMATION_CONTEXT')]"
 UNIT_TYPE_CONSCRIPT_TOOLTIP_FOR_GUI_NOT_RAISED: "#header [Concept('concept_conscript_battalion', '$concept_conscript_battalion_short$')] [CombatUnitType.GetName] de la formation [MilitaryFormation.GetName]#!\n@conscripts!#v [MilitaryFormation.GetNumExpectedConscriptsCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self )]#! [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')|l] au total[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.HasRaisedConscripts), 'NOT_RAISED_CONSCRIPTS'))]"
 UNIT_GROUP_CONSCRIPT_TOOLTIP_FOR_GUI_NOT_RAISED: "#header [CombatUnitGroup.GetName] de [Concept('concept_conscript_battalion', '$concept_conscript_battalion_short$')|l] dans [MilitaryFormation.GetName]#!\n#v [MilitaryFormation.GetNumExpectedConscriptsUnitsInGroup( CombatUnitGroup.Self )]#! [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')|l]@conscripts! au total[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.HasRaisedConscripts), 'NOT_RAISED_CONSCRIPTS'))]"
 NOT_RAISED_CONSCRIPTS: "#r Pas encore levés#!"
 NO_CONSCRIPT_UNITS_OF_UNIT_TYPE: "$TAB$Pas de [MilitaryFormationUnitEntry.GetUnitType.GetName] dans la formation [MilitaryFormation.GetName]"
 NO_CONSCRIPT_UNITS_OF_UNIT_TYPE_FORMATION_CONTEXT: "$TAB$Pas de [Concept('concept_conscript_battalion', '$concept_conscript_battalions_short$')|l] de [CombatUnitType.GetName|l] dans la formation [MilitaryFormation.GetName]"
 MILITARY_FORMATION_CONSCRIPT_BATTALIONS_TOOLTIP: "#header [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')] dans la formation [MilitaryFormation.GetName]#!\n[MilitaryFormation.GetNumConscripts|v]@battalions! levés sur [MilitaryFormation.GetMaxConscripts|v] en tout\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_group', '$concept_combat_unit_groups$')] :\n[MilitaryFormation.GetConscriptsGroupsBreakdown]"
 UNIT_GROUP_ENTRY_FORMAT_CONSCRIPT_BATTALIONS: "$TAB$#tooltippable #tooltip:$GROUP_BREAKDOWN_TAG$ $NUM_UNITS|v$#!#! $GROUP_NAME$@battalions!"
 UNIT_GROUP_CONSCRIPT_BATTALIONS_TOOLTIP: "#header [COMBAT_UNIT_GROUP.GetName] dans les [Concept('concept_conscript_battalion', '$concept_conscript_battalions_short$')|l] de la formation [MilitaryFormation.GetName]#!\n[MilitaryFormation.GetNumConscripts|v]@battalions! en tout\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')] :\n[MilitaryFormation.GetUnitTypesByConscriptsGroupBreakdown( COMBAT_UNIT_GROUP.Self )]"
 UNIT_GROUP_CONSCRIPT_BATTALIONS_NO_ELIGIBLE_GROUPS: "$TAB$Il n’y a aucun [concept_combat_unit_group|l] éligible pour les [Concept('concept_conscript_battalion', '$concept_conscript_battalions_short$')|l] de la formation [MilitaryFormation.GetName]"
 UNIT_TYPE_CONSCRIPT_BATTALIONS_TOOLTIP: "#header [COMBAT_UNIT_TYPE.GetName] de [MilitaryFormation.GetName] [Concept('concept_conscript_battalion', '$concept_conscript_battalion_short$')|l]#!\n@battalions!$NUM_UNITS_OF_TYPE|v$ au total\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')] :\n[MilitaryFormation.GetConscriptUnitsByTypeBreakdown( COMBAT_UNIT_TYPE.Self )]"
 UNIT_TYPE_ENTRY_FORMAT_BATTALIONS: "$TAB$@battalions!#tooltippable #tooltip:$UNIT_TYPE_BREAKDOWN_TAG$ $NUM_UNITS_OF_TYPE|v$ #!#! $UNIT_TYPE_NAME$"
 UNIT_ENTRY_FORMAT: "$TAB$@manpower! #tooltippable #tooltip:$UNIT_MANPOWER_BREAKDOWN_TAG$ $UNIT_MANPOWER|v$#!#! $UNIT_NAME$"
 BATTLE_UNIT_TYPE_REGULARS_TOOLTIP: "Il y a [BattleUnitType.GetNumberOfRegularUnits|v] [Concept('concept_battalion', '$concept_battalions$')|l] @battalions! de type [CombatUnitType.GetName] dans cette bataille"
 BATTLE_UNIT_TYPE_CONSCRIPT_TOOLTIP: "Il y a [BattleUnitType.GetNumberOfConscriptUnits|v] [Concept('concept_conscript_battalion','$concept_conscript_battalions$')|l] @conscripts! de type [CombatUnitType.GetName] dans cette bataille"
 BATTLE_UNIT_TYPE_WARSHIPS_TOOLTIP: "Il y a [BattleUnitType.GetNumberOfRegularUnits|v] [Concept('concept_flotilla', '$concept_flotillas$')|l] @flotillas! de type [CombatUnitType.GetName] dans cette bataille"
 BATTLE_UNIT_TYPE_AVERAGE_MORALE: "Le moral moyen des unités est de #[GetMoraleColorString( BattleUnitType.GetAverageMorale )] [BattleUnitType.GetAverageMorale|0%]#!"
 BATTLE_MILITARY_FORMATION_TOOLTIP: "#header [concept_manpower]#!\n@manpower![BattleMilitaryFormation.GetCurrentManpowerFromFormation|vK] / #maximum [BattleMilitaryFormation.GetMaxManpowerFromFormation|vK]#! en [concept_manpower|l]"
 BATTLE_MILITARY_FORMATION_OFFENSE_TOOLTIP: "#header [concept_offense]#!\n@unit_offense! [BattleMilitaryFormation.GetAverageOffense|1v] [concept_offense|l] en moyenne"
 BATTLE_MILITARY_FORMATION_DEFENSE_TOOLTIP: "#header [concept_defense]#!\n@unit_defense! [BattleMilitaryFormation.GetAverageDefense|1v] [concept_defense|l] en moyenne"
 BATTLE_MILITARY_FORMATION_MORALE_TOOLTIP: "#header [concept_morale]#!\nLe moral moyen des [Concept('concept_unit','$concept_units$')|l] dans la formation [MilitaryFormation.GetName] est de #BOLD #[GetMoraleColorString( BattleMilitaryFormation.GetCurrentMorale )] [BattleMilitaryFormation.GetCurrentMorale|0%]#!#!"
 PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS: "[Country.GetWarships|0v]@flotillas!"
 PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP: "#header [Concept('concept_flotilla','$concept_flotillas$')] [Country.GetAltAdjective('FP')|l]#!\nActuellement : [Country.GetWarships|v] @flotillas! ([Country.GetFlotillasRanking])\n$TOOLTIP_DELIMITER$\n$PANEL_MILITARY_NAVY_POWER_PROJECTION$\n\n[Concept('concept_fleet','$concept_fleets$')] :\n[SelectLocalization(IsDataModelEmpty(Country.GetMilitaryFormationsFleet), 'NO_FLEETS_IN_COUNTRY', 'FLEETS_IN_COUNTRY_TOOLTIP_BREAKDOWN')]"
 PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP_LEFT: "#header Nombre total de [Concept('concept_flotilla','$concept_flotillas$')|l]#!\n[WarPanel.GetLeftLeader.GetName] a actuellement [WarPanel.GetLeftLeader.GetWarships|v] flottilles @flotillas!\n\n[WarPanel.GetLeftLeader.GetWarshipsBreakdown]"
 PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP_RIGHT: "#header Nombre total de [Concept('concept_flotilla','$concept_flotillas$')|l]#!\n[WarPanel.GetRightLeader.GetName] a actuellement [WarPanel.GetRightLeader.GetWarships|v] flottilles @flotillas!\n\n[WarPanel.GetRightLeader.GetWarshipsBreakdown]"
 NO_FLEETS_IN_COUNTRY: "Pas de [Concept('concept_fleet','$concept_fleets$')|l] [Country.GetAltNameNoFormatting('En')][Country.GetName]"
 FLEETS_IN_COUNTRY_TOOLTIP_BREAKDOWN: "[Country.GetFleetsBreakdown]"
 FLEET_ENTRY_FORMAT: "$TAB$@flotillas!#tooltippable #tooltip:[MILITARY_FORMATION.GetTooltipTag],MILITARY_FORMATION_FLOTILLAS_TOOLTIP $NUM_FLOTILLAS|v$ #!#! $FORMATION_NAME$"
 MILITARY_FORMATION_FLOTILLAS_TOOLTIP: "#header [Concept('concept_flotilla','$concept_flotillas$')] dans la formation [MilitaryFormation.GetName]#!\n[MilitaryFormation.GetNumCombatUnits|v]@flotillas! au total $INCOMING_NUMBER_OF_REGULARS_LABEL$\n@flotillas! #tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_COMMAND_LIMIT_DESC [MilitaryFormation.GetCommandLimit|v]#!#![AddLocalizationIf(LessThan_int32(MilitaryFormation.GetCommandLimitRaw, MilitaryFormation.GetNumCombatUnits), ' @warning!')] de [concept_command_limit|l]\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_group', '$concept_combat_unit_groups$')] :\n[MilitaryFormation.GetFlotillaGroupsBreakdown]"
 UNIT_GROUP_ENTRY_FORMAT_FLOTILLAS: "$TAB$#tooltippable #tooltip:$GROUP_BREAKDOWN_TAG$ $NUM_UNITS|v$#!#! $GROUP_NAME$@flotillas!"
 UNIT_GROUP_FLOTILLAS_TOOLTIP: "#header [COMBAT_UNIT_GROUP.GetName] dans les [Concept('concept_flotilla', '$concept_flotillas$')|l] de la formation [MilitaryFormation.GetName]#!\n[MilitaryFormation.GetNumCombatUnits|v]@flotillas! en tout\n$TOOLTIP_DELIMITER$\n[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')] :\n[MilitaryFormation.GetUnitTypesByFlotillaGroupBreakdown( COMBAT_UNIT_GROUP.Self )]"
 UNIT_TYPE_ENTRY_FORMAT_FLOTILLAS: "$TAB$@flotillas! #tooltippable #tooltip:$UNIT_TYPE_BREAKDOWN_TAG$ $NUM_UNITS_OF_TYPE|v$ #!#! $UNIT_TYPE_NAME$"
 UNIT_GROUP_FLOTILLAS_NO_ELIGIBLE_GROUPS: "$TAB$Il n’y a aucun [concept_combat_unit_group|l] éligible pour les [Concept('concept_flotilla', '$concept_flotillas$')|l] de la formation [MilitaryFormation.GetName]"
 UNIT_TYPE_FLOTILLAS_TOOLTIP: "#header [COMBAT_UNIT_TYPE.GetName] des [Concept('concept_flotilla', '$concept_flotillas$')|l] [MilitaryFormation.GetName]#!\n$NUM_UNITS_OF_TYPE|v$@flotillas! au total\n$TOOLTIP_DELIMITER$\n[Concept('concept_unit', '$concept_units$')] :\n[MilitaryFormation.GetRegularUnitsByTypeBreakdown( COMBAT_UNIT_TYPE.Self )]"
 UNIT_MANPOWER_TOOLTIP: "#header $UNIT_NAME$ [concept_manpower]#!\nActuellement : @manpower! $UNIT_MANPOWER|v$\n$TOOLTIP_DELIMITER$\n$UNIT_MORALE|v%$ de [concept_morale|l]\n@manpower! $UNIT_DEMORALIZED|v$ [concept_morale_demoralized|l]s\n@unit_offense! $UNIT_OFFENSE|v$ en [concept_offense|l]\n@unit_defense! $UNIT_DEFENSE|v$ en [concept_defense|l]"
 PANEL_MILITARY_ARMY_CURRENT_BATTALIONS_TOOLTIP: "#header [Concept('concept_battalion', '$concept_battalions$')] [Country.GetAltAdjective('MP')|l]#!\nActuellement : #v [Country.GetBattalions]#!@battalions!\n$TOOLTIP_DELIMITER$\n[Country.GetBattalionsDesc]\n\n[Concept('concept_army','$concept_armies$')] :\n[SelectLocalization(IsDataModelEmpty(Country.GetMilitaryFormationsArmy), 'NO_ARMIES_IN_COUNTRY', 'ARMIES_IN_COUNTRY_TOOLTIP_BREAKDOWN')]"
 PANEL_MILITARY_ARMY_CURRENT_TOTAL_BATTALIONS_DESC: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] a actuellement $BATTALIONS|v$@battalions!([Country.GetBattalionsRanking])\n$PANEL_MILITARY_ARMY_POWER_PROJECTION$"
 PANEL_MILITARY_ARMY_CURRENT_REGULARS_DESC: "$COUNTRY$ a actuellement $REGULAR_BATTALIONS|v$ @battalions! sur un maximum de $POTENTIAL|v$ [Concept('concept_potential_battalions','$concept_potential_regulars$')|l]."
 PANEL_MILITARY_ARMY_CURRENT_BATTALIONS_MOBILIZED_DESC: "$COUNTRY$ a actuellement $REGULAR_BATTALIONS|v$ bataillons de réguliers @battalions! et $CONSCRIPT_BATTALIONS|v$ bataillons de conscrits @battalions!."
 PANEL_MILITARY_ARMY_SIZE_CAPACITY_TOOLTIP: "Le nombre de #variable bataillons#! que nous pourrions éventuellement entraîner"
 BATTALION_TRAVEL_DESC: "#variable +$VALUE|v$ [CHARACTER.GetCombatUnitsTypeIcon]#! dans #variable $DAYS$#! jours"
 BATTALION_TRAVEL_BREAKDOWN: "#variable $VALUE$#! [CHARACTER.GetCombatUnitsTypeIcon] de [BUILDING.GetState.GetName]"
 BATTALION_SOURCES_BREAKDOWN_SUPPLY: "#BOLD #$COLOR$ $VALUE|%0$#!#! d’[concept_supply|l]"
 BATTALION_SOURCES_UNIT_NAME_ARMY: "[Concept('concept_battalion', '$concept_battalions$')]"
 BATTALION_SOURCES_UNIT_NAME_NAVY: "[Concept('concept_flotilla', '$concept_flotillas$')]"
 BATTALION_SOURCES_BREAKDOWN_UNITS: "[GetUnitStrengthHeader( $CURRENT$, $MAX$, $ICON$ )]"
 BATTALION_SOURCES_BREAKDOWN: "[GetUnitStrengthHeader( '(int64)$CURRENT$', '(int64)$MAX$', '$ICON$' )] $UNIT_NAME$ de [BUILDING.GetState.GetName] (#BOLD #$MORALE_COLOR$ $MORALE|%0$#!#! [concept_morale|l] et $SUPPLY$)"
 BATTALION_SOURCES_BREAKDOWN_CLEAN: "[GetUnitStrengthHeader( '(int64)$CURRENT$', '(int64)$MAX$', '$ICON$' )] $UNIT_NAME$ de [BUILDING.GetState.GetName]"
 BATTALION_CAPACITY_DESC: "$COUNT|v$ [Concept('concept_battalion', '$concept_battalions$')|l]@battalions!"
 FLOTILLAS_CAPACITY_DESC: "$COUNT|v$ [Concept('concept_flotilla', '$concept_flotillas$')|l]@flotillas!"
 BATTALION_CAPACITY_SOURCES_BREAKDOWN: "$COUNT|v$ @battalions! en [STATE.GetName]"
 FLOTILLAS_CAPACITY_SOURCES_BREAKDOWN: "$COUNT|v$ @flotillas! en [STATE.GetName]"
 BATTALION_CAPACITY_SOURCES_BREAKDOWN_UNUSED: " (place pour #variable $REMAINING_CAPACITY|1$@$ICON_STR$!#! de plus)"
 INVASION_PLANNER_HEADER: "$concept_invade$ [InvasionPlannerPopup.GetTargetState.GetNameWithCountryFlag]"
 SELECT_ARMY: "Sélectionner une [concept_army|l]"
 SELECT_FLEET: "Sélectionner une [concept_fleet|l]"
 SELECT_MILITARY_FORMATION: "Sélectionner une [concept_military_formation|l]"
 ARMY: "$concept_army$"
 ARMIES: "$concept_armies$"
 FLEET: "$concept_fleet$"
 FLEETS: "$concept_fleets$"
 LAND_INVASION_NAME: "[concept_invasion] en [State.GetNameWithCountryFlag]"
 NAVAL_INVASION_NAME: "[concept_naval_invasion] en [State.GetNameWithCountryFlag]"
 INVASION_PLANNER_ARMY_WILL_MOBILIZE: "La formation [MilitaryFormation.GetName] sera [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$e')|l]"
 INVASION_PLANNER_ARMY_NOT_MOBILIZED: "#r Pas encore#! [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$e')|l]"
 INVASION_PLANNER_ARMY_IS_MOBILIZED: "La formation [MilitaryFormation.GetName] est [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$e')|l]"
 INVASION_PLANNER_TRAVEL_TIME_LABEL: "Temps de trajet : #v $TIME$#!"
 INVASION_PLANNER_EFFICIENCY_LABEL: "Efficacité de l’invasion navale estimée à [InvasionPlannerPopup.GetEfficiencyRaw|%1v]."
 INVASION_PLANNER_PENALTIES_LABEL: "@warning! Vous n’avez pas assez de [Concept('concept_flotilla','$concept_flotillas$')|l] @flotillas! pour cette [concept_army|l] !\nCela pénalise l’efficacité de l’invasion de #r -[InvasionPlannerPopup.GetLandingPenaltyModifierMultiplier|%1]#!."
 INVASION_PLANNER_CONFIRM_TOOLTIP: "[SelectLocalization(InvasionPlannerPopup.HasNavalInvasionContext, 'INVASION_PLANNER_CONFIRM_NAVAL_INVASION', 'INVASION_PLANNER_CONFIRM_INVASION')][ConcatIfNeitherEmpty('\n', InvasionPlannerPopup.GetCommandValidityDesc)][ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', AddLocalizationIf(InvasionPlannerPopup.HasSelectedNecessaryFormations, InvasionPlannerPopup.GetTravelDaysDesc))]"
 INVASION_PLANNER_CONFIRM_NAVAL_INVASION: "#header Confirmer cette [concept_naval_invasion|l]#!"
 INVASION_PLANNER_CONFIRM_INVASION: "#header Confirmer cette [concept_invasion|l]#!"
 INVASION_PLANNER_TRAVEL_DAYS_DESC: "#v $TIME$#! de temps de trajet jusqu’à [InvasionPlannerPopup.GetTargetState.GetName][InvasionPlannerPopup.GetTargetState.GetCountry.GetFlagTextIcon]\n\n[AddLocalizationIf(InvasionPlannerPopup.HasSelectedNecessaryFormations,InvasionPlannerPopup.GetFleetDaysDesc)]\n[AddLocalizationIf(InvasionPlannerPopup.HasSelectedNecessaryFormations,InvasionPlannerPopup.GetArmyDaysDesc)]"
 INVASION_PLANNER_LAND_INVASION_TRAVEL_DAYS_DESC: "#v $TIME$#! de temps de trajet vers [InvasionPlannerPopup.GetSourceState.GetNameWithCountryFlag]"
 INVASION_PLANNER_FLEET_DAYS_DESC: "Flotte :\n$TAB$$TIME$ - [InvasionPlannerPopup.GetSlowestFleet.GetName] : [InvasionPlannerPopup.GetSlowestFleet.GetNumCombatUnits|v]@flotillas!"
 INVASION_PLANNER_ARMY_DAYS_DESC: "Armée :\n$TAB$$TIME$ - [InvasionPlannerPopup.GetSlowestArmy.GetName] : [InvasionPlannerPopup.GetSlowestArmy.GetNumCombatUnits|v]@battalions!"
 INVASION_PLANNER_INVASION_FROM_STATE: "$concept_invasion$ disponible via [InvasionPlannerPopup.GetSourceState.GetNameWithCountryFlag]"
 ADD_MILITARY_FORMATION_ARMY: "Ajouter une [concept_army|l] à cette [concept_invasion|l]"
 ADD_MILITARY_FORMATION_FLEET: "Ajouter une [concept_fleet|l] à cette [concept_naval_invasion|l]"
 REMOVE_FORMATION: "Retirer [MilitaryFormation.GetName] de cette [concept_invasion|l]"
 TRANSFER_POPUP_HEADER: "Transférer des unités"
 CHANGE_A_FORMATION: "Cliquez pour changer la [concept_military_formation|l] avec laquelle transférer des [Concept('concept_unit','$concept_units$')|l]"
 CHANGE_B_FORMATION: "Cliquez pour changer la [concept_military_formation|l] avec laquelle transférer des [Concept('concept_unit','$concept_units$')|l]"
 SELECT_MILITARY_FORMATION_TO_SEND_FROM: "Sélectionnez une [concept_military_formation|l] avec laquelle transférer des [Concept('concept_unit','$concept_units$')|l]"
 SELECT_MILITARY_FORMATION_TO_SEND_TO: "Sélectionnez une [concept_military_formation|l] avec laquelle transférer des [Concept('concept_unit','$concept_units$')|l]"
 TRANSFER_FORMATION_SELECT_ARMY: "#header Sélectionner [MilitaryFormation.GetName]#!\n@green_checkmark_box! Sélectionnez une [concept_army|l] #b vers/depuis#! laquelle effectuer le transfert"
 TRANSFER_FORMATION_SELECT_FLEET: "#header Sélectionner [MilitaryFormation.GetName]#!\n@green_checkmark_box! Sélectionnez une [concept_fleet|l] #b vers/depuis#! laquelle effectuer le transfert"
 TRANSFER_FORMATION_TRAVEL_TIME_LABEL: "Temps de trajet : #v $TIME$#!"
 TRANSFER_FORMATION_COMMANDER_LIST_HEADER: "#header Commandants sélectionnés :#!"
 TRANSFER_FORMATION_COMMANDER_LIST_FORMAT: "$TRANSFER_FORMATION_COMMANDER_LIST_HEADER$\n$SELECTED_COMMANDERS$"
 TRANSFER_FORMATION_UNIT_LIST_HEADER: "#header Unités sélectionnées :#!"
 TRANSFER_FORMATION_UNIT_LIST_FORMAT: "$TRANSFER_FORMATION_UNIT_LIST_HEADER$\n$SELECTED_UNITS$"
 TRANSFER_COMMANDER: "$TAB$$COMMANDER_NAME$"
 TRANSFER_BATTALION: "$TAB$@battalions! $NUM|v$ - $UNIT_NAME$"
 TRANSFER_FLOTILLA: "$TAB$@flotillas! $NUM|v$ - $UNIT_NAME$"
 TRANSFER_EFFECT_SPLIT: "Les [Concept('concept_commander', '$concept_commanders$')|l] et les [Concept('concept_unit', '$concept_units$')|l] sélectionnés seront ainsi transférés dans leur propre [concept_military_formation|l] et seront [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilized$s')|l] le temps du transfert."
 TRANSFER_EFFECT_LOCAL_TRANSFER: "Les [Concept('concept_commander', '$concept_commanders$')|l] et les [Concept('concept_unit', '$concept_units$')|l] sélectionnés seront ainsi transférés depuis $SOURCE_FORMATION_NAME$ vers $TARGET_FORMATION_NAME$ et seront [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilized$s')|l] le temps du transfert."
 TRANSFER_EFFECT_REMOTE_TRANSFER: "Les [Concept('concept_commander', '$concept_commanders$')|l] et les [Concept('concept_unit', '$concept_units$')|l] sélectionnés seront ainsi transférés dans leur propre [concept_military_formation|l] qui avancera immédiatement vers $TARGET_FORMATION_NAME$. Quand les deux [Concept('concept_military_formation', '$concept_military_formations$')|l] se rencontreront, les [Concept('concept_commander', '$concept_commanders$')|l] et les [Concept('concept_unit', '$concept_units$')|l] sélectionnés seront transférés vers $TARGET_FORMATION_NAME$, à moins que la [concept_military_formation|l] nouvellement créée n’ait reçu l’ordre de faire autre chose. Ils seront [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilized$s')|l] le temps du transfert."
 TRANSFER_FORMATION_GO_HOME_WARNING: "@warning! Cela entraînera le stationnement de la formation [MILITARY_FORMATION.GetName] dans le [HQ.GetName]"
 TRANSFER_NEW_FORMATION_GO_HOME_WARNING: "@warning! Cela entraînera le stationnement de la nouvelle [concept_military_formation|l] dans le [HQ.GetName]"
 TRANSFER_CONFIRM: "[AddTextIf(Not(StringIsEmpty(TransferFormationPopup.GetWarningsDesc)), Concatenate('@warning!', ' '))]$CONFIRM$"
 TRANSFER_FORMATION_POPUP_CONFIRM_TOOLTIP: "[SelectLocalization(StringIsEmpty(GetDesc(TransferFormationPopup.Confirm)), TransferFormationPopup.GetConfirmDesc, GetDesc(TransferFormationPopup.Confirm))]"
 TRANSFER_FORMATION_POPUP_CONFIRM_DESC: "#header Confirmer ce transfert#![ConcatIfNeitherEmpty('\n', TransferFormationPopup.GetWarningsDesc)][ConcatIfNeitherEmpty('\n', TransferFormationPopup.GetHintDesc)]\n[ConcatIfNeitherEmpty(AddTextIf(IsValid(TransferFormationPopup.Confirm), TransferFormationPopup.GetTravelTimeDesc), '\n')]$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(AddLocalizationIf(TransferFormationPopup.CanReset, 'TRANSFER_RESULTING_NUMBERS_DESC'), '\n\n')][ConcatIfNeitherEmpty(TransferFormationPopup.GetOrganizationImpactDesc,'\n\n')]$VISIBLE_EFFECT_EXPLANATION$"
 TRANSFER_RESULTING_NUMBERS_DESC: "#title Cela se traduira par :#!\n[TransferFormationPopup.GetLeftStagedFormation.GetResultingNumbersDesc]\n\n[TransferFormationPopup.GetRightStagedFormation.GetResultingNumbersDesc]"
 TRANSFER_RESULT_FORMAT: "$TRANSFER_RESULT_FORMATION$ :\n[StagedFormation.GetFormationResultBreakdown]"
 TRANSFER_RESULT_FORMATION: "[SelectLocalization(StagedFormation.HasValidFormation, 'TRANSFER_RESULT_HAS_FORMATION', 'TRANSFER_RESULT_NO_FORMATION')]"
 TRANSFER_RESULT_HAS_FORMATION: "[StagedFormation.GetName]"
 TRANSFER_RESULT_NO_FORMATION: "Nouvelle [concept_military_formation|l]"
 TRANSFER_RESULT_NO_COMMANDERS: "@warning! Aucun [concept_commander|l]"
 TRANSFER_RESULT_NO_UNITS: "@warning! Aucune [concept_unit|l]"
 TRANSFER_RESULT_NOTHING: "Cette [concept_military_formation|l] sera #r dissoute#!"
 TRANSFER_RESULT_COMMANDER: "$CHARACTER_FULL_NAME$ sera transféré[CHARACTER.GetCustom('FR_E')] ici"
 TRANSFER_RESULT_UNIT_TYPE: "$UNIT_ICON$ #v $RESULTING_UNIT_NUMBER$#! $UNIT_TYPE_NAME$"
 COMMANDER_TRANSFER_LIMIT_REACHED: "@red_cross! L’autre camp a atteint le maximum de [GetDefine('NMilitary','MAX_NUM_COMMANDERS_PER_FORMATION')|0v] [Concept('concept_commander','$concept_commanders$')|l]"
 MOVE_AT_LEAST_ONE_UNIT: "@simple_box! Déplacer au moins #v 1#! [concept_unit|l] [SelectLocalization(TransferFormationPopup.HasArmyContext, '@battalions!', '@flotillas!')] ou un [concept_commander|l] dans l’autre camp"
 TRANSFER_FORMATION_CONFIRMATION_SOURCE_WILL_BE_GONE: "Voulez-vous vraiment transférer l’intégralité de $SOURCE_NAME|v$ dans $TARGET_NAME|v$ ?"
 SELECT_UNIT_TYPE_TO_TRANSFER: "Sélectionnez ce [concept_combat_unit_type|l] pour le transfert"
 SELECT_UNIT_TO_TRANSFER: "Sélectionnez cette [concept_unit|l] pour le transfert"
 NO_FORMATION_SELECTED: "Pas de [concept_military_formation|l] choisie"
 NO_FORMATION_COMMANDERS: "Aucun [concept_commander|l] dans cette [concept_military_formation|l]"
 THIS_WILL_CREATE_A_NEW_MILITARY_FORMATION: "Déplacer les [Concept('concept_unit','$concept_units$')|l] et les [Concept('concept_commander', '$concept_commanders$')|l] ici sans [concept_military_formation|l] sélectionnée en créerait une nouvelle"
 TRANSFER_FORMATION_SELECT_UNITS_TO_TRANSFER: "Sélectionnez les unités à transférer"
 TRANSFER_FORMATION_SELECT_COMMANDERS_TO_TRANSFER: "Sélectionnez les commandants à transférer"
 SELECT_COMMANDER_TO_TRANSFER: "Sélectionnez ce [concept_commander|l]"
 NO_COMMANDERS_IN_MILITARY_FORMATION: "Aucun [concept_commander|l] dans cette [concept_military_formation|l]"
 NO_UNITS_IN_MILITARY_FORMATION: "Aucune [concept_unit|l] dans cette [concept_military_formation|l]"
 NO_UNITS_IN_UNIT_GROUP: "Pas d’[Concept('concept_unit','$concept_units$')|l] de #b [CombatUnitGroup.GetName]#!"
 TRANSFER_FORMATION_MOVE_UNITS_TOOLTIP: "#header Déplacer #v [StagedUnitsWithType.GetNumSelectedRegulars]#! [SelectLocalization(TransferFormationPopup.HasArmyContext, 'CONCEPT_REGULAR_BATTALIONS', 'CONCEPT_FLOTILLAS')][SelectLocalization(TransferFormationPopup.HasArmyContext, '@battalions!', '@flotillas!')] vers l’autre [concept_military_formation|l]#![ConcatIfNeitherEmpty( '\n\n', StagedUnitsWithType.GetInvalidRegularTransferDesc )]"
 TRANSFER_FORMATION_NO_UNITS_SELECTED: "@simple_box! Sélectionnez au moins #v 1#! [SelectLocalization(TransferFormationPopup.HasArmyContext, 'CONCEPT_REGULAR_BATTALION', 'CONCEPT_FLOTILLA')|l][SelectLocalization(TransferFormationPopup.HasArmyContext, '@battalions!', '@flotillas!')] de ce [Concept('concept_combat_unit_type','$concept_combat_unit_type_short$')|l] à déplacer"
 CONCEPT_REGULAR_BATTALION: "[concept_battalion] régulier"
 CONCEPT_REGULAR_BATTALIONS: "[Concept('concept_battalion','$concept_battalions$')] réguliers"
 CONCEPT_FLOTILLA: "[concept_flotilla]"
 CONCEPT_FLOTILLAS: "[Concept('concept_flotilla','$concept_flotillas$')]"
 REMOVE_SOURCE_FORMATION: "Désélectionner [TransferFormationPopup.GetLeftFormation.GetName]"
 REMOVE_TARGET_FORMATION: "Désélectionner [TransferFormationPopup.GetRightFormation.GetName]"
 TRANSFER_FORMATION_MOVE_CONSCRIPT_BATTALIONS_TOOLTIP: "#header Déplacer #v [StagedUnitsWithType.GetNumSelectedConscripts]#!@conscripts! vers l'autre [concept_military_formation|l]#![ConcatIfNeitherEmpty( '\n\n', StagedUnitsWithType.GetInvalidConscriptTransferDesc )]"
 TRANSFER_FORMATION_NO_CONSCRIPTS_SELECTED: "@simple_box! Sélectionnez au moins #v 1#! [concept_conscript_battalion|l]@conscripts! de ce [Concept('concept_combat_unit_type','$concept_combat_unit_type_short$')|l] à déplacer"
 TRANSFER_FORMATION_MOVE_COMMANDER_TOOLTIP: "#header Déplacer [StagedCommanderTransfer.GetCommander.GetFirstName] vers l’autre [concept_military_formation|l]#![ConcatIfNeitherEmpty( '\n\n', TransferFormationPopup.GetInvalidCommanderTransferDesc(StagedCommanderTransfer.AccessSelf))]"
 MOVE: "Déplacer"
 BY_NAME: "Nom"
 BY_ALL_STATES: "Tous les [Concept('concept_state','$concept_states$')]"
 BY_SPECIFIC_STATE: "Par un [concept_state]"
 BY_SPECIFIC_STATE_SELECTED: "Par [StagedUnitsWithType.GetStateFilter.GetName]"
 TRANSFER_UNIT_TYPE_NAME: "#tooltippable_name [CombatUnitType.GetNameNoFormatting]#![AddTextIf(StagedUnitsWithType.HasMoved, ' #i transférée#!')]"
 CREATE_NEW_ARMY: "Nouvelle [concept_army|l]"
 CREATE_NEW_FLEET: "Nouvelle [concept_fleet|l]"
 SELECT_NEW_FORMATION: "Créer une [concept_military_formation|l] vers laquelle effectuer le transfert"
 SELECT_NEW_FORMATION_SELECTED: "Créer une [concept_military_formation|l] vers laquelle effectuer le transfert\n#i Actuellement sélectionnée#!"
 SELECT_NEW_ARMY: "Créer une [concept_army|l] vers laquelle effectuer le transfert"
 SELECT_NEW_ARMY_SELECTED: "Créer une [concept_army|l] vers laquelle effectuer le transfert\n#i Actuellement sélectionnée#!"
 SELECT_NEW_FLEET: "Créer une [concept_fleet|l] vers laquelle effectuer le transfert"
 SELECT_NEW_FLEET_SELECTED: "Créer une[concept_fleet|l] vers laquelle effectuer le transfert\n#i Actuellement sélectionnée#!"
 CURRENTLY_SELECTED: "#i Actuellement sélectionnée#!"
 UNIT_TYPE_UNITS_IN_STATE: "[MilitaryFormation.GetUnitIcon] #v [StagedUnitsWithType.GetNumRegularsInState( State.AccessSelf )]#![AddLocalizationIf(MilitaryFormation.IsArmy, 'UNIT_TYPE_CONSCRIPT_UNITS_IN_STATE')]"
 UNIT_TYPE_CONSCRIPT_UNITS_IN_STATE: " | #v [StagedUnitsWithType.GetNumConscriptsInState( State.AccessSelf )]#!@conscripts!"
 SELECT_STATE_TO_FILTER_ON: "Sélectionner un [concept_state] pour filtrer"
 FILTER_UNITS_IN_STATE_TOOLTIP: "#header Afficher les [Concept('concept_unit','$concept_units$')|l] [StagedUnitsWithType.GetUnitType.GetName] en [State.GetName]#!\n$FILTER_UNITS_IN_STATE_TOOLTIP_BREAKDOWN$"
 FILTER_UNITS_IN_STATE_TOOLTIP_BREAKDOWN: "[MilitaryFormation.GetUnitIcon] #v [StagedUnitsWithType.GetNumRegularsInState( State.AccessSelf )]#! [SelectLocalization(MilitaryFormation.IsArmy, 'CONCEPT_REGULAR_BATTALIONS', 'CONCEPT_FLOTILLAS')] [AddLocalizationIf(MilitaryFormation.IsArmy, 'FILTER_ARMY_UNITS_TOOLTIP')]"
 FILTER_ARMY_UNITS_TOOLTIP: "\n #v [StagedUnitsWithType.GetNumConscriptsInState( State.AccessSelf )]#! [Concept('concept_conscript_battalion','$concept_conscript_battalions$')|l]@conscripts!"
 TRANSFER_RESET_BUTTON_TOOLTIP: "Réinitialiser toutes les modifications"
 TRANSFER_CANNOT_RESET_BUTTON_TOOLTIP: "Aucune modification apportée"
 TRANSFER_FORMATION_CHANGES_TO_TOTAL_NUMBER_OF_UNITS: "#v [StagedFormation.GetNumCombatUnitsIfTransferred]#!/[SelectLocalization(LessThan_int32(StagedFormation.GetCommandLimitRawIfTransferred, StagedFormation.GetNumCombatUnitsIfTransferred), 'TRANSFER_INSUFFICIENT_COMMAND_LIMIT', 'TRANSFER_SUFFICIENT_COMMAND_LIMIT')]"
 TRANSFER_FORMATION_CHANGES_TO_TOTAL_NUMBER_OF_UNITS_TOOLTIP: "Cette [SelectLocalization(TransferFormationPopup.HasArmyContext, 'MILITARY_FORMATION_ARMY_CONCEPT', 'MILITARY_FORMATION_FLEET_CONCEPT')|l] finira avec :\n#v [StagedFormation.GetNumCombatUnitsIfTransferred]#! [SelectLocalization(TransferFormationPopup.HasArmyContext, 'BATTALIONS_CONCEPT', 'FLOTILLAS_CONCEPT')][SelectLocalization(TransferFormationPopup.HasArmyContext, '@battalions!', '@flotillas!')]\n[AddLocalizationIf(LessThan_int32(StagedFormation.GetCommandLimitRawIfTransferred, StagedFormation.GetNumCombatUnitsIfTransferred), '@warning!')]@organization! [SelectLocalization(LessThan_int32(StagedFormation.GetCommandLimitRawIfTransferred, StagedFormation.GetNumCombatUnitsIfTransferred), 'TRANSFER_INSUFFICIENT_COMMAND_LIMIT', 'TRANSFER_SUFFICIENT_COMMAND_LIMIT')] de [concept_command_limit|l]"
 TRANSFER_FORMATION_NO_UNITS_AVAILABLE: "Pas de [CombatUnitType.GetName|l] de [StagedUnitsWithType.GetStateFilter.GetName]"
 BATTALIONS_CONCEPT: "[Concept('concept_battalion','$concept_battalions$')]"
 FLOTILLAS_CONCEPT: "[Concept('concept_flotilla','$concept_flotillas$')]"
 TRANSFER_FORMATION_WILL_DISBAND: "Sera dissoute !"
 LEFT_SIDE_MOVE_ALL: "Tout @transfer_all_right!"
 LEFT_SIDE_MOVE_HALF: "Moitié @transfer_half_right!"
 RIGHT_SIDE_MOVE_ALL: "@transfer_all_left! Tout"
 RIGHT_SIDE_MOVE_HALF: "@transfer_half_left! Moitié"
 LEFT_SIDE_MOVE_ALL_TOOLTIP: "Déplacer toutes les [Concept('concept_unit','$concept_units_short$')|l] et les [Concept('concept_commander','$concept_commanders$')|l] vers la droite"
 LEFT_SIDE_MOVE_HALF_TOOLTIP: "Déplacer la moitié des [Concept('concept_unit','$concept_units_short$')|l] et des [Concept('concept_commander','$concept_commanders$')|l] vers la droite (arrondi à l'unité inférieure)"
 RIGHT_SIDE_MOVE_ALL_TOOLTIP: "Déplacer toutes les [Concept('concept_unit','$concept_units_short$')|l] et les [Concept('concept_commander','$concept_commanders$')|l] vers la gauche"
 RIGHT_SIDE_MOVE_HALF_TOOLTIP: "Déplacer la moitié des [Concept('concept_unit','$concept_units_short$')|l] et des [Concept('concept_commander','$concept_commanders$')|l] vers la gauche (arrondi à l'unité inférieure)"
 TRANSFER_INSUFFICIENT_COMMAND_LIMIT: "#r [StagedFormation.GetCommandLimitRawIfTransferred]#!"
 TRANSFER_SUFFICIENT_COMMAND_LIMIT: "#g [StagedFormation.GetCommandLimitRawIfTransferred]#!"
 DEFAULT_UNIT_TYPE_BUTTON_LABEL: "[SelectLocalization(MilitaryFormation.HasSelectedUnitTypeForGroup( CombatUnitGroup.Self ), 'COMBAT_UNIT_GROUP_DEFAULT_TYPE_NAME', 'NO_DEFAULT_UNIT_TYPE_AVAILABLE')]"
 COMBAT_UNIT_GROUP_DEFAULT_TYPE_NAME: "Défaut : [CombatUnitGroup.GetDefaultUnitType.GetName]"
 NO_DEFAULT_UNIT_TYPE_AVAILABLE: "Pas de type d’unité par défaut"
 MILITARY_FORMATION_UNIT_GROUP_DEFAULT_UNIT_TOOLTIP: "#header [concept_combat_unit_type] par défaut#!\nActuel : #b [MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(CombatUnitGroup.Self).Self)]#!\n$TOOLTIP_DELIMITER$\nC’est le type d’unité militaire #b par défaut#! de [CombatUnitGroup.GetName], qui sera construit si d’autres unités sont ajoutées à ce [concept_combat_unit_group|l]."
 MILITARY_FORMATION_SUPPLY_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ [SelectLocalization(LessThan_CFixedPoint('(CFixedPoint)$VALUE$', '(CFixedPoint)1'),'#negative_value $VALUE|%0$#!','#variable $VALUE|%0$#!')]#!#!"
 MILITARY_FORMATION_SUPPLY_TOOLTIP: "#header [concept_supply]#!\nL’approvisionnement actuel de la formation [MilitaryFormation.GetName] est [SelectLocalization(LessThan_CFixedPoint('(CFixedPoint)$VALUE$', '(CFixedPoint)1'),'#negative_value $VALUE|%0$#!','#variable $VALUE|%0$#!')]\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty('$BREAKDOWN$','\n\n')][ConcatIfNeitherEmpty(MilitaryFormation.GetShippingLaneDesc,'\n\n')][concept_supply_desc]"
 MILITARY_FORMATION_SHIPPING_LANE_DESC: "La [concept_supply_route|l] de [MilitaryFormation.GetHomeHQ.GetName] :#!#indent_newline:3 \n[concept_shipping_lane_effectiveness] : [ShippingLane.GetEffectivenessFormatted]\n[concept_convoy_cost] : [ShippingLane.GetConvoyCostFormattedShort]#!"
 MILITARY_FORMATION_SUPPLY_FROM_SHIPPING_LANE: "[concept_shipping_lane]"
 MILITARY_FORMATION_SUPPLY_FROM_GOODS_SHORTAGES: "[Concept('concept_shortage','$concept_input_goods_shortages$')]"
 MILITARY_FORMATION_SUPPLY_FROM_FLEET_SUPPORT: "$concept_fleet_support$"
 MILITARY_FORMATION_DEFAULT_UNIT_CHANGE: "#header Définir [CombatUnitType.GetName] comme type d’unité militaire par défaut#!\n[MilitaryFormation.GetEffectOfDefaultUnitTypeChange(CombatUnitType.Self)]$TOOLTIP_DELIMITER$\n[CombatUnitType.GetDesc]"
 MILITARY_FORMATION_DEFAULT_UNIT_CHANGE_UPGRADE_CANCEL: "@warning! Changer le type d’unité militaire par défaut en [CombatUnitType.GetName] entraînera l’arrêt de la modernisation des types d’unités suivants :\n"
 MILITARY_FORMATION_DEFAULT_UNIT_CHANGE_UPGRADE_CANCEL_ENTRY: "[CombatUnitType.GetName]\n"
 MILITARY_FORMATION_SUPPLY_FROM_GOODS_SHORTAGE_ENTRY: "#indent_newline:3 [BUILDING.GetName] en [BUILDING.GetState.GetName] souffre d’une [Concept('concept_shortage','$concept_input_goods_shortage$')|l] de $SHORTAGE|-%0$\nCause principale : [GOODS.GetName][Nbsp][GOODS.GetTextIcon]\nAffectant $RATIO|v%0$ des [Concept('concept_unit','$concept_units$')|l] de l’[Concept('concept_army','$concept_army$')|l]#!"
 MILITARY_FORMATION_SUPPLY_FROM_RECOVERING_SHORTAGE_ENTRY: "#indent_newline:3 [BUILDING.GetName] en [BUILDING.GetState.GetName] se remet d’une [Concept('concept_shortage','$concept_input_goods_shortage$')|l] de $SHORTAGE|-%0$\nAffectant $RATIO|v%0$ des [Concept('concept_unit','$concept_units$')|l] de l’[Concept('concept_army','$concept_army$')|l]#!"
 FRONT_MORALE_TOOLTIP: "Le moral $COUNTRY_NAME|vl$ est de #BOLD #$MORALE_COLOR$ $VAL|0%$#!#! sur le $FRONT_NAME|l$"
 MILITARY_FORMATION_MORALE: "@morale! #[GetMoraleColorString( MilitaryFormation.GetMorale )] [MilitaryFormation.GetMorale|0%]#!"
 MILITARY_FORMATION_MORALE_NO_ICON: "#[GetMoraleColorString( MilitaryFormation.GetMorale )] [MilitaryFormation.GetMorale|0%]#!"
 MILITARY_FORMATION_MORALE_TOOLTIP: "#header [concept_morale]#!\nLe moral moyen des [Concept('concept_unit','$concept_units$')|l] dans la formation [MilitaryFormation.GetName] est de #BOLD #[GetMoraleColorString( MilitaryFormation.GetMorale )] [MilitaryFormation.GetMorale|0%]#!#!"
 MORALE_TOOLTIP: "Le moral [Country.GetAdjectiveNoFormatting|v] est de #BOLD #[GetMoraleColorString( FrontMarker.GetFront.GetMorale( Country.Self ) )] [FrontMarker.GetFront.GetMorale( Country.Self )|0%]#!#! au [FrontMarker.GetFront.GetName|l]"
 COMBAT_UNIT_MORALE_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #[GetMoraleColorString('(CFixedPoint)$VALUE$')] #variable $VALUE|0%$#!#!#!#!"
 COMBAT_UNIT_MORALE_RECOVERY_PER_DAY: "L’unité [CombatUnit.GetName] regagne #v $VALUE|+1%$#! de [concept_morale|l] chaque jour"
 COMBAT_UNIT_MORALE_RECOVERY_IN_BATTLE: "L’unité [CombatUnit.GetName] est en pleine [concept_battle|l] et ne regagnera pas de [concept_morale|l]."
 COMBAT_UNIT_MORALE_RECOVERY_MAX_MORALE: "L’unité [CombatUnit.GetName] ne peut pas regagner de [concept_morale|l] car il est déjà au niveau maximum."
 COMBAT_UNIT_MORALE_TOOLTIP: "#header [concept_morale] actuel : #tooltippable #tooltip:$MORALE_GAIN$ #$COLOR_STR$ #variable $MORALE|0%$#!#!#!#!#!\n\n[CombatUnit.GetMoraleModifierBreakdown]$TOOLTIP_DELIMITER$\nEffectif total : $MANPOWER$\nDémoralisés : $DEMORALIZED|v$"
 COMBAT_UNIT_MORALE_GAIN_TOOLTIP: "#header Gain de [concept_morale|l]#!\nDemain, l’unité [CombatUnit.GetName] gagnera $VALUE|+=^%$ de [concept_morale|l] pour atteindre $TOTAL|v^%$[ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n','$BREAKDOWN$')]"
 COMBAT_UNIT_ENEMY_MORALE_DAMAGE_DESC: "$VALUE|=-0%$ des $unit_morale_damage_mult$ du camp ennemi"
 MORALE_LOSS_HEADER: "#title $NAME$ lors d’une [concept_battle|l]#!"
 MORALE_RECOVERY_HEADER: "#title $NAME$ hors [concept_battle|l]#!"
 MILITARY_FORMATION_COMMAND_LIMIT_DESC: "[MilitaryFormation.GetCommandLimitDesc]"
 MILITARY_FORMATION_COMMAND_LIMIT_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ [SelectLocalization(EqualTo_int32('(int32)$INSUFFICIENT_COMMAND_LIMIT$', '(int32)1'),'#negative_value $VALUE$#!','#variable $VALUE$#!')]#!#!"
 MILITARY_FORMATION_COMMAND_LIMIT: "#header [concept_command_limit]#!\nValeur : $VALUE|v$\n$TOOLTIP_DELIMITER$\n$DESC$"
 MILITARY_FORMATION_COMMAND_LIMIT_REACHED: "$MILITARY_FORMATION_COMMAND_LIMIT$\n\n@warning! En raison d’une [concept_command_limit|l] insuffisante, l’effet suivant s’applique à la [concept_military_formation|l] :#indent_newline:3 \n[MilitaryFormation.GetEffectFromCommandLimitDesc]#!"
 MILITARY_FORMATION_COMMAND_LIMIT_NO_COMMANDER: "$VAL|v$[MilitaryFormation.GetUnitIcon] minimum en l’absence de [Concept('concept_commander','$concept_commanders$')|l]"
 MILITARY_FORMATION_COMMANDER_COMMAND_LIMIT_ENTRY: "[Character.GetFullName] : [SelectLocalization(Character.IsGeneral, '@battalions!', '@flotillas!')] [Character.GetCommandLimit]"
 MILITARY_FORMATION_ORGANIZATION: "[MilitaryFormation.GetOrganization][AddLocalizationIf(LessThan_CFixedPoint(MilitaryFormation.GetOrganizationRaw,GetDefine('NMilitary','MILITARY_FORMATION_ORGANIZATION_MAX')),'MILITARY_ORGANIZATION_SLASH_MAX')]"
 MILITARY_FORMATION_ORGANIZATION_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|vD$#!#!"
 MILITARY_ORGANIZATION_SLASH_MAX: "#maximum /[GetDefine('NMilitary','MILITARY_FORMATION_ORGANIZATION_MAX')|0]#!"
 MILITARY_ORGANIZATION_VALUE_WITH_TARGET: "[MilitaryFormation.GetOrganizationRaw|vD][Nbsp]@arrow_right![Nbsp][MilitaryFormation.GetOrganizationTargetRaw|vD]"
 MILITARY_ORGANIZATION_VALUE_WITH_TARGET_AND_CHANGE: "$MILITARY_ORGANIZATION_VALUE_WITH_TARGET$ (Changement : [MilitaryFormation.GetOrganizationDailyChange|+=D] par jour)"
 MILITARY_ORGANIZATION_VALUE_WITH_TARGET_FORMATTED: "[MilitaryFormation.GetOrganizationRaw|vD][Nbsp]@arrow_right![Nbsp][MilitaryFormation.GetOrganizationTargetFormatted]"
 MILITARY_ORGANIZATION_VALUE_WITHOUT_TARGET: "[MilitaryFormation.GetOrganizationRaw|vD]"
 MILITARY_ORGANIZATION_VALUE: "[SelectLocalization(EqualTo_CFixedPoint(MilitaryFormation.GetOrganizationRaw, MilitaryFormation.GetOrganizationTargetRaw), 'MILITARY_ORGANIZATION_VALUE_WITHOUT_TARGET', 'MILITARY_ORGANIZATION_VALUE_WITH_TARGET')]"
 MILITARY_ORGANIZATION_VALUE_WITH_CHANGE: "[SelectLocalization(EqualTo_CFixedPoint(MilitaryFormation.GetOrganizationRaw, MilitaryFormation.GetOrganizationTargetRaw), 'MILITARY_ORGANIZATION_VALUE_WITHOUT_TARGET', 'MILITARY_ORGANIZATION_VALUE_WITH_TARGET_AND_CHANGE')]"
 MILITARY_ORGANIZATION_VALUE_FORMATTED: "[SelectLocalization(EqualTo_CFixedPoint(MilitaryFormation.GetOrganizationRaw, MilitaryFormation.GetOrganizationTargetRaw), MilitaryFormation.GetOrganizationTargetFormatted, 'MILITARY_ORGANIZATION_VALUE_WITH_TARGET_FORMATTED')]"
 MILITARY_FORMATION_ORGANIZATION_TARGET_DESC: "La cible est [MilitaryFormation.GetOrganizationTargetRaw|vD] en raison de :#indent_newline:3 \n[MilitaryFormation.GetOrganizationTargetDesc]#!"
 MILITARY_FORMATION_ORGANIZATION_FULL: "La formation [MilitaryFormation.GetName] a une organisation maximale"
 MILITARY_FORMATION_ORGANIZATION_TOOLTIP: "#header @organization![Nbsp][concept_organization]#!\nActuellement : $MILITARY_ORGANIZATION_VALUE_WITH_CHANGE$\n$TOOLTIP_DELIMITER$\n[SelectLocalization(And(EqualTo_CFixedPoint(MilitaryFormation.GetOrganizationPercentage,'(CFixedPoint)1'),EqualTo_CFixedPoint(MilitaryFormation.GetOrganizationTargetRaw,GetDefine('NMilitary','MILITARY_FORMATION_ORGANIZATION_MAX'))),'MILITARY_FORMATION_ORGANIZATION_FULL','MILITARY_FORMATION_ORGANIZATION_TARGET_DESC')][ConcatIfNeitherEmpty('\n\n',AddLocalizationIf(NotEqualTo_CFixedPoint(MilitaryFormation.GetOrganizationDailyChange,'(CFixedPoint)0'),'MILITARY_FORMATION_ORGANIZATION_DAILY_CHANGE'))][ConcatIfNeitherEmpty('\n\n',MilitaryFormation.GetLowOrganizationDesc)]"
 MILITARY_FORMATION_ORGANIZATION_MAX: "$VAL|vD$ maximum"
 MILITARY_FORMATION_ORGANIZATION_LOSS_RATE: "$VAL|+=D$ en raison d’un taux de perte de $RATE|%-^$ par jour"
 MILITARY_FORMATION_ORGANIZATION_LOSS_MIN: "$VAL|+=D$ en raison d’une perte minimum par jour"
 MILITARY_FORMATION_ORGANIZATION_DAILY_CHANGE: "Changement quotidien de [MilitaryFormation.GetOrganizationDailyChange|=+D] en raison de :#indent_newline:3 \n[MilitaryFormation.GetOrganizationDailyChangeDesc]#!"
 MILITARY_FORMATION_ORGANIZATION_GAIN_NOT_WHILE_TRAVELING: "La formation [MilitaryFormation.GetName] ne regagnera pas d’[concept_organization|l] lors de ses déplacements."
 MILITARY_FORMATION_ORGANIZATION_GAIN_NO_UNITS: "La formation [MilitaryFormation.GetName] ne gagnera pas d’[concept_organization|l] tant qu’elle ne comptera pas d’[Concept('concept_unit','$concept_units$')|l]."
 MILITARY_FORMATION_ORGANIZATION_GAIN_UNITS_IN_BATTLE: "$PERCENT_UNITS_IN_BATTLE|v%1$ des [Concept('concept_unit','$concept_units$')|l] de la formation [MilitaryFormation.GetName] sont actuellement en pleine [concept_battle|l]."
 MILITARY_FORMATION_ORGANIZATION_SUPPLY_PENALTY: "$VAL|+=D$ en raison d’une pénurie de l’[concept_supply|l] en #tooltippable #tooltip:$BREAKDOWN_TAG$ $SUPPLY|%2-$#!#!"
 MILITARY_FORMATION_ORGANIZATION_EXILE_PENALTY: "$VAL|0%+$ pour être @exiled_state![Nbsp]en exil"
 MILITARY_FORMATION_ORGANIZATION_EFFECT_FROM_COMMAND_LIMIT: "@organization![Nbsp]$concept_organization$ : $VAL|+D$ (Actuellement : $MILITARY_ORGANIZATION_VALUE_WITH_TARGET$)"
 MILITARY_FORMATION_ORGANIZATION_EFFECT_FROM_SPECIAL_UNITS: "@organization![Nbsp]$concept_organization$ : $VAL|+D$ (Actuellement : $MILITARY_ORGANIZATION_VALUE_WITH_TARGET$)"
 MILITARY_FORMATION_ORGANIZATION_EFFECT_FROM_BEING_EXILED: "@organization![Nbsp][concept_organization] : $VAL|0%+$ (Actuellement : $MILITARY_ORGANIZATION_VALUE_WITH_TARGET$)"
 MILITARY_FORMATION_EXILED_ARMY_EFFECT_TOOLTIP: "#header @exiled_state![Nbsp][concept_exiled_army]#!\n$TOOLTIP_DELIMITER$\nLa formation [MilitaryFormation.GetNameWithCountryFlag] n’a pas d’[concept_military_access|l] en [MilitaryFormation.GetStateAtPosition.GetNameWithCountryFlag]. Elle subira les pénalités suivantes jusqu’à son retour en territoire allié :\n#indent_newline:2 [MilitaryFormation.GetEffectFromBeingExiledDesc]#!"
 MILITARY_FORMATION_EXILED_ARMY_SHORT: "#header @exiled_state![Nbsp][Concept('concept_exiled_army','$concept_exiled_army_short$')]#!\nPas d'[concept_military_access|l] en [MilitaryFormation.GetStateAtPosition.GetNameWithCountryFlag], ce qui entraînera :\n#indent_newline:2   [MilitaryFormation.GetEffectFromBeingExiledDesc]#!"
 TOO_MANY: "#r Trop nombreux#!"
 ARMY_TOO_MANY_UNITS_OF_THIS_UNIT_GROUP_TOOLTIP: "@warning! La limite d’[concept_organization|l] pour la formation [MilitaryFormation.GetName] est affectée car elle contient plus d'#b [GetCombatUnitGroup('combat_unit_group_artillery').GetName|l]#! et de #b [GetCombatUnitGroup('combat_unit_group_cavalry').GetName|l]#! combinées que d'#b [GetCombatUnitGroup('combat_unit_group_infantry').GetName|l]#!\n\n#title Nombre total d’[Concept('concept_unit','$concept_units$')|l] dans chaque [Concept('concept_combat_unit_group','$concept_combat_unit_group_short$')|l]\n(actuel + [Concept('concept_incoming_units', '$concept_incoming_units_short$')|l]) :#!\n#v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_infantry').Self)]#! #b d’[GetCombatUnitGroup('combat_unit_group_infantry').GetName|l]#!@battalions!\n#v [MilitaryFormation.GetNumSpecialUnitsExpected]#! [Concept('concept_special_unit','$concept_special_units$')|l]@battalions!\n$TAB$#v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_artillery').Self)]#! #b d’[GetCombatUnitGroup('combat_unit_group_artillery').GetName|l]#!@battalions!\n$TAB$#v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_cavalry').Self)]#! #b de [GetCombatUnitGroup('combat_unit_group_cavalry').GetName|l]#!@battalions!\n\n[MilitaryFormation.GetEffectFromSpecialUnitsDesc]"
 ARMY_TOO_MANY_EXPECTED_UNITS_OF_THIS_UNIT_GROUP_TOOLTIP: "@warning! Une fois que les [Concept('concept_special_unit','$concept_special_units$')|l] actuellement [Concept('concept_incoming_units', '$concept_incoming_units_short$')|l] auront rejoint le groupe, la limite d’[concept_organization|l] pour la formation [MilitaryFormation.GetName] sera affectée car elle contiendra plus d'#b [GetCombatUnitGroup('combat_unit_group_artillery').GetName|l]#! et de #b [GetCombatUnitGroup('combat_unit_group_cavalry').GetName|l]#! combinées que d'#b [GetCombatUnitGroup('combat_unit_group_infantry').GetName|l]#!\n\n#title Nombre total d’[Concept('concept_unit','$concept_units$')|l] dans chaque [Concept('concept_combat_unit_group','$concept_combat_unit_group_short$')|l]\n(actuel + [Concept('concept_incoming_units', '$concept_incoming_units_short$')|l]) :#!\n@battalions!#v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_infantry').Self)]#! #b d’[GetCombatUnitGroup('combat_unit_group_infantry').GetName|l]#!@battalions!\n#v [MilitaryFormation.GetNumSpecialUnitsExpected]#! [Concept('concept_special_unit','$concept_special_units$')|l]@battalions!\n$TAB$#v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_artillery').Self)]#! #b d’[GetCombatUnitGroup('combat_unit_group_artillery').GetName|l]#!@battalions!\n$TAB$#v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_cavalry').Self)]#! #b de [GetCombatUnitGroup('combat_unit_group_cavalry').GetName|l]#!\n\n[MilitaryFormation.GetEffectFromSpecialUnitsDesc]"
 FLEET_TOO_MANY_UNITS_OF_THIS_UNIT_GROUP_TOOLTIP: "@warning! La limite d’[concept_organization|l] pour la formation [MilitaryFormation.GetName] est affectée car elle contient plus de #b [GetCombatUnitGroup('combat_unit_group_capital_ship').GetName|l]#! et de #b [GetCombatUnitGroup('combat_unit_group_support_ship').GetName|l]#! combinés que de #b [GetCombatUnitGroup('combat_unit_group_light_ship').GetName|l]#!\n\n#title Nombre total d’[Concept('concept_unit','$concept_units$')|l] dans chaque [Concept('concept_combat_unit_group','$concept_combat_unit_group_short$')|l]\n(actuel + [Concept('concept_incoming_units', '$concept_incoming_units_short$')|l]) :#!\n#v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_light_ship').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_light_ship').GetName|l]#!@battalions!\n#v [MilitaryFormation.GetNumSpecialUnitsExpected]#! [Concept('concept_special_unit','$concept_special_units$')|l]@battalions!\n$TAB$#v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_capital_ship').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_capital_ship').GetName|l]#!@battalions!\n$TAB$#v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_support_ship').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_support_ship').GetName|l]#!@battalions!\n\n[MilitaryFormation.GetEffectFromSpecialUnitsDesc]"
 FLEET_TOO_MANY_EXPECTED_UNITS_OF_THIS_UNIT_GROUP_TOOLTIP: "@warning! Une fois que les [Concept('concept_special_unit','$concept_special_units$')|l] actuellement [Concept('concept_incoming_units', '$concept_incoming_units_short$')|l] auront rejoint le groupe, la limite d’[concept_organization|l] pour la formation [MilitaryFormation.GetName] sera affectée car elle contiendra plus de #b [GetCombatUnitGroup('combat_unit_group_capital_ship').GetName|l]#! et de #b [GetCombatUnitGroup('combat_unit_group_support_ship').GetName|l]#! combinés que de #b [GetCombatUnitGroup('combat_unit_group_light_ship').GetName|l]#!\n\n#title Nombre total d’[Concept('concept_unit','$concept_units$')|l] dans chaque [Concept('concept_combat_unit_group','$concept_combat_unit_group_short$')|l]\n(actuel + [Concept('concept_incoming_units', '$concept_incoming_units_short$')|l]) :#!\n#v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_light_ship').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_light_ship').GetName|l]#!@battalions!\n#v [MilitaryFormation.GetNumSpecialUnitsExpected]#! [Concept('concept_special_unit','$concept_special_units$')|l]@battalions!\n$TAB$#v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_capital_ship').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_capital_ship').GetName|l]#!@battalions!\n$TAB$#v [MilitaryFormation.GetNumTotalCombatUnitsExpectedInGroup(GetCombatUnitGroup('combat_unit_group_support_ship').Self)]#! #b [GetCombatUnitGroup('combat_unit_group_support_ship').GetName|l]#!@battalions!\n\n[MilitaryFormation.GetEffectFromSpecialUnitsDesc]"
 MILITARY_FORMATION_ORGANIZATION_COMMAND_LIMIT_PENALTY: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|+=D$#!#! en raison d’une [concept_command_limit|l] insuffisante"
 MILITARY_FORMATION_ORGANIZATION_COMMAND_LIMIT: "#header [concept_command_limit] insuffisante#!\n$TOOLTIP_DELIMITER$\n#indent_newline:3 Pénalité à l’[concept_organization|l] maximale#! en raison de :\nNombre actuel d’[Concept('concept_unit','$concept_units$')|l] : $NUM_UNITS|v$\n[concept_command_limit] actuelle : $COMMAND_LIMIT|v$#!#!"
 MILITARY_FORMATION_ORGANIZATION_SPECIAL_UNITS_PENALTY: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|+=D$#!#! en raison d’un nombre trop élevé d’[Concept('concept_special_unit','$concept_special_units$')|l]"
 MILITARY_FORMATION_ORGANIZATION_SPECIAL_UNITS: "#header Trop d’[Concept('concept_special_unit','$concept_special_units$')|l]#!\n$TOOLTIP_DELIMITER$\n#indent_newline:3 Pénalité à l’[concept_organization|l] maximale#! en raison de :\nNombre actuel d’[Concept('concept_special_unit','$concept_special_units$')|l] : $NUM_SPECIAL_UNITS|v$\nNombre actuel d’[Concept('concept_default_unit','$concept_default_units$')|l] : $NUM_DEFAULT_UNITS|v$#!#!"
 MILITARY_FORMATION_LOW_ORGANIZATION_IMPACT: "#indent_newline:3 En raison d’une faible [concept_organization|l], la formation [MilitaryFormation.GetName] subit les effets suivants :\n$DESC$#!"
 MILITARY_FORMATION_NEW_ORGANIZATION_AFTER_MERGE: "#indent_newline:3 Après la fusion, la formation [MilitaryFormation.GetName] aura $VALUE|v^2$ d’[concept_organization|l] en raison des facteurs suivants :\n$TARGET_NUM_UNITS|v0$ [Concept('concept_unit','$concept_units$')|l] initiales avec $TARGET_ORGANIZATION|v^2$ d’[concept_organization|l]\n$SOURCE_NUM_UNITS|v0$ [Concept('concept_unit','$concept_units$')|l] transférées avec $SOURCE_ORGANIZATION|v^2$ d’[concept_organization|l][AddTextIf(GreaterThan_int32('(int32)$MOBILIZATION_OPTION_DIFFERENCES$','(int32)0'),'\n#tooltippable #tooltip:$MOBILIZATION_OPTION_DIFFERENCES_BREAKDOWN$ $MOBILIZATION_OPTION_DIFFERENCES|0v$#!#! différences en $concept_mobilization_options$')]#!"
 MERGE_FORMATIONS_NEW_ORGANIZATION_INFO: "Après la fusion, la formation [MilitaryFormation.GetName] aura #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v^2$#!#! d’[concept_organization|l]."
 MOBILIZATION_OPTION_DIFFERENCES: "#header Pénalité d’[concept_organization|l] d’[Concept('concept_mobilization_option','$concept_mobilization_options$')|l] différentes#!\nNombre de différences : #negative_value $NUM_DIFFERENCES|0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 MOBILIZATION_OPTION_DIFFERENCE_ENTRY: "#negative_value -[GetDefine('NMilitary','MOBILIZATION_OPTION_DIFFERENCE_ORGANIZATION_IMPACT')]#!: [MilitaryFormation.GetName] a [MobilizationOption.GetName]"
 MILITARY_FORMATION_COMMANDERS: "Commandants"
 MILITARY_FORMATION_COMMANDERS_CONCEPT: "[Concept('concept_commander', '$concept_commanders$')]"
 MILITARY_FORMATION_COMMANDERS_TOOLTIP_TITLE: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_GENERALS_CONCEPT', 'MILITARY_FORMATION_ADMIRALS_CONCEPT')]"
 MILITARY_FORMATION_GENERALS_CONCEPT: "[Concept('concept_general','$concept_generals$')]"
 MILITARY_FORMATION_ADMIRALS_CONCEPT: "[Concept('concept_admiral','$concept_admirals$')]"
 MILITARY_FORMATION_NO_GENERALS: "Cette [concept_army|l] n’a pas de [concept_general|l], envisagez d’en recruter un"
 MILITARY_FORMATION_RECRUIT_GENERAL: "Recruter un [concept_general|l]"
 MILITARY_FORMATION_NO_ADMIRALS: "Cette [concept_fleet|l] n’a pas d’[concept_admiral|l], envisagez d’en recruter un"
 MILITARY_FORMATION_RECRUIT_ADMIRAL: "Recruter un [concept_admiral|l]"
 MILITARY_FORMATION_IS_FULLY_MOBILIZED: "Totalement mobilisé"
 MILITARY_FORMATION_IS_MOBILIZING: "Mobilisation : #v [MilitaryFormation.GetMobilizationPercentage|%0]#!"
 MILITARY_FORMATION_IS_MOBILIZING_TOOLTIP: "[MilitaryFormation.GetName] se [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilizing$')|l] : #v [MilitaryFormation.GetMobilizationPercentage|%0]#!"
 MILITARY_FORMATION_MOBILIZED_TOOLTIP: "#header Cette [concept_army|l] est [Concept('concept_mobilize_army','mobilisée')]#!\n\nCoût / Semaine : \n[MilitaryFormation.GetEstimatedMobilizationCostDesc]"
 MILITARY_FORMATION_ARMY_CONCEPT: "[concept_army]"
 MILITARY_FORMATION_FLEET_CONCEPT: "[concept_fleet]"
 MILITARY_FORMATION_NO_UNITS: "La formation [MilitaryFormation.GetName] n’a pas de [MilitaryFormation.GetUnitIcon][Nbsp][MilitaryFormation.GetUnitLabel]"
 MILITARY_FORMATION_NO_COMMANDER: "[MILITARY_FORMATION.GetName] n’a pas de [Concept('concept_commander', '$concept_commanders$')|l]"
 NO_COMMANDER: "Aucun [concept_commander|l]"
 MOBILIZE_ALL_MILITARY_FORMATIONS: "Mobiliser toutes les armées"
 DEMOBILIZE_ALL_MILITARY_FORMATIONS: "Démobiliser toutes les armées"
 MOBILIZE_ARMY_COMMAND_ARMY_ERRORS: "La formation [MilitaryFormation.GetName] ne peut pas être mobilisée[AddTextIf(Not(StringIsEmpty('$ERRORS$')), '\n #indent_newline:3 $ERRORS$#!')]"
 MOBILIZE_ALL_MILITARY_FORMATIONS_TOOLTIP: "$ERRORS$"
 MOBILIZE_ALL_MILITARY_FORMATIONS_BUTTON_TOOLTIP: "#header [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilize$' )] toutes les [Concept( 'concept_army', '$concept_armies$' )|l]#![ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', GetDesc( Country.MobilizeAllArmies ))]"
 DEMOBILIZE_ARMY_COMMAND_ARMY_ERRORS: "La formation [MilitaryFormation.GetName] ne peut pas être démobilisée[AddTextIf(Not(StringIsEmpty('$ERRORS$')), '\n #indent_newline:3 $ERRORS$#!')]"
 DEMOBILIZE_ALL_MILITARY_FORMATIONS_TOOLTIP: "$ERRORS$"
 DEMOBILIZE_ALL_MILITARY_FORMATIONS_BUTTON_TOOLTIP: "#header [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$' )] toutes les [Concept( 'concept_army', '$concept_armies$' )|l]#![ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', GetDesc( Country.DemobilizeAllArmies ))]"
 MILITARY_FORMATION_PANEL_TITLE: "[SelectLocalization(GreaterThan_int32(GetDataModelSize(FormationPanel.GetSelectedFormations), '(int32)1'), 'MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_FORMATIONS', 'MILITARY_FORMATION_PANEL_TITLE_SINGLE_FORMATION')]"
 MILITARY_FORMATION_PANEL_TITLE_SINGLE_FORMATION: "[LabelingHelper.CapitalizeOnlyFirst(FormationPanel.GetFormation.GetNameNoFormatting)]"
 MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_FORMATIONS: "[SelectLocalization(FormationPanel.GetFormation.IsArmy, 'MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_ARMIES', 'MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_FLEETS')]"
 MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_ARMIES: "#v [GetDataModelSize(FormationPanel.GetSelectedFormations)]#! [Concept( 'concept_army', '$concept_armies$' )]"
 MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_FLEETS: "#v [GetDataModelSize(FormationPanel.GetSelectedFormations)]#! [Concept( 'concept_fleet', '$concept_fleets$' )]"
 MILITARY_FORMATION_SUBTITLE: "[SelectLocalization(GreaterThan_int32(GetDataModelSize(FormationPanel.GetSelectedFormations), '(int32)1'), 'MILITARY_FORMATION_SUBTITLE_MULTIPLE_FORMATIONS_FROM_COUNTRY', 'MILITARY_FORMATION_SUBTITLE_SINGLE_FORMATION_FROM_COUNTRY')]"
 MILITARY_FORMATION_SUBTITLE_SINGLE_FORMATION_FROM_COUNTRY: "[SelectLocalization(FormationPanel.GetFormation.IsArmy, 'MILITARY_FORMATION_ARMY_CONCEPT', 'MILITARY_FORMATION_FLEET_CONCEPT')] de [FormationPanel.GetFormation.GetCountry.GetName]"
 MILITARY_FORMATION_SUBTITLE_MULTIPLE_FORMATIONS_FROM_COUNTRY: "[SelectLocalization(FormationPanel.GetFormation.IsArmy, 'concept_armies', 'concept_fleets')] de [FormationPanel.GetFormation.GetCountry.GetName]"
 MILITARY_FORMATION_NUMBER_OF_FLEET_COMBAT_UNIT_GROUPS: "#v [GetDataModelSize(MilitaryFormation.GetCombatUnitEntries)]#! [SelectLocalization(EqualTo_int32(GetDataModelSize(MilitaryFormation.GetCombatUnitEntries), '(int32)1'), 'COMBAT_UNIT_GROUP_CONCEPT', 'COMBAT_UNIT_GROUPS_CONCEPT')]"
 MILITARY_FORMATION_MOBILIZED_COMBAT_UNIT_GROUPS: "#v [GetDataModelSize(MilitaryFormation.GetCombatUnitEntries)]#! [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')] [SelectLocalization(EqualTo_int32(GetDataModelSize(MilitaryFormation.GetCombatUnitEntries), '(int32)1'), 'COMBAT_UNIT_GROUP_CONCEPT', 'COMBAT_UNIT_GROUPS_CONCEPT')]"
 MILITARY_FORMATION_IS_MOBILIZING_COMBAT_UNIT_GROUPS: "#v [GetDataModelSize(MilitaryFormation.GetCombatUnitEntries)]#! [SelectLocalization(EqualTo_int32(GetDataModelSize(MilitaryFormation.GetCombatUnitEntries), '(int32)1'), 'COMBAT_UNIT_GROUP_CONCEPT', 'COMBAT_UNIT_GROUPS_CONCEPT')] [Concept('concept_mobilize_army_mobilizing', 'en mobilisation')]"
 MILITARY_FORMATION_DEMOBILIZED_COMBAT_UNIT_GROUPS: "#v [GetDataModelSize(MilitaryFormation.GetCombatUnitEntries)]#! [Concept('concept_mobilize_army', 'démobilisés')|l] [SelectLocalization(EqualTo_int32(GetDataModelSize(MilitaryFormation.GetCombatUnitEntries), '(int32)1'), 'COMBAT_UNIT_GROUP_CONCEPT', 'COMBAT_UNIT_GROUPS_CONCEPT')]"
 COMBAT_UNIT_GROUP_CONCEPT: "[concept_combat_unit_group]"
 COMBAT_UNIT_GROUPS_CONCEPT: "[Concept('concept_combat_unit_group','$concept_combat_unit_groups_short$')]"
 MILITARY_FORMATION_MOBILIZATION_MODIFIER_NAME: "$FORMATION_NAME$ - [Concept('concept_mobilize_army','$concept_mobilize_army_mobilization$')]"
 MILITARY_FORMATION_ATTRITION_FORMAT: "[MilitaryFormation.GetAttritionFormatted] $MILITARY_FORMATION_ATTRITION_RISK_ICON$"
 MILITARY_FORMATION_ATTRITION_VALUE_TOOLTIPPABLE: "#v #tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_ATTRITION_TOOLTIP [MilitaryFormation.GetAverageAttritionPerWeek|%1^-]#!#!#! $MILITARY_FORMATION_ATTRITION_RISK_ICON$"
 MILITARY_FORMATION_ATTRITION_TOOLTIP: "[MilitaryFormation.GetAttritionRiskDesc]"
 MILITARY_FORMATION_MORALE_VALUE_TOOLTIPPABLE: "#[GetMoraleColorString( MilitaryFormation.GetMorale )] #tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_MORALE_TOOLTIP [MilitaryFormation.GetMorale|0%]#!#!#!"
 MILITARY_FORMATION_ORGANIZATION_VALUE_TOOLTIPPABLE: "#tooltippable #tooltip:[MilitaryFormation.GetTooltipTag],MILITARY_FORMATION_ORGANIZATION_TOOLTIP, [MilitaryFormation.GetOrganizationPercentage|%v0]#!#!"
 MILITARY_FORMATION_TROOP_ATTRITION_LEVEL: "$MILITARY_FORMATION_ATTRITION_RISK_ICON_WITH_LABEL$"
 PIN_MILITARY_FORMATION: "Épingler [MilitaryFormation.GetName] au tableau de bord"
 UNPIN_MILITARY_FORMATION: "Retirer [MilitaryFormation.GetName] du tableau de bord"
 ZOOM_TO_MILITARY_FORMATION: "Zoom sur l’emplacement actuel[AddLocalizationIf( MilitaryFormation.IsZoomingToMapMarkerPosition, 'ZOOM_TO_DISABLED' )]"
 MILITARY_FORMATION_IN_LOCATION_SUBTITLE: "[SelectLocalization(MilitaryFormation.IsArmy,'MILITARY_FORMATION_IN_LOCATION_SUBTITLE_ARMY','MILITARY_FORMATION_IN_LOCATION_SUBTITLE_FLEET')] en [MilitaryFormation.GetCurrentHQ.GetNameNoFlag]"
 MILITARY_FORMATION_IN_LOCATION_SUBTITLE_ARMY: "[concept_army]"
 MILITARY_FORMATION_IN_LOCATION_SUBTITLE_FLEET: "[concept_fleet]"
 MILITARY_FORMATION_PANEL_INFORMATION_TAB: "Informations"
 MILITARY_FORMATION_PANEL_INFORMATION_TAB_SELECTED: "#b $MILITARY_FORMATION_PANEL_INFORMATION_TAB$#!"
 MILITARY_FORMATION_PANEL_MOBILIZATION_TAB: "Mobilisation"
 MILITARY_FORMATION_PANEL_MOBILIZATION_TAB_SELECTED: "#b $MILITARY_FORMATION_PANEL_MOBILIZATION_TAB$#!"
 MILITARY_FORMATION_PANEL_MODIFIERS_TAB: "Modificateurs"
 MILITARY_FORMATION_PANEL_MODIFIERS_TAB_SELECTED: "#b $MILITARY_FORMATION_PANEL_MODIFIERS_TAB$#!"
 MILITARY_FORMATION_PANEL_BUILDINGS_TAB: "Bâtiments"
 MILITARY_FORMATION_PANEL_BUILDINGS_TAB_SELECTED: "#b $MILITARY_FORMATION_PANEL_BUILDINGS_TAB$#!"
 MILITARY_FORMATION_EXPENSE: "#v @money![MilitaryFormation.GetGoodsConsumptionCostRaw|0-K]#!"
 MILITARY_FORMATION_EXPENSE_TOOLTIP_TAG: "[MilitaryFormation.GetGoodsConsumptionDesc]"
 MILITARY_FORMATION_EXPENSE_TOOLTIP: "#header Entretien de [MilitaryFormation.GetName] #!\nCoût hebdomadaire : #v $VAL|0-K$@money!#!\n$TOOLTIP_DELIMITER$\nDépenses par [Concept('concept_good','$concept_goods$')] :\n$BREAKDOWN_BY_GOODS$\n\nDépenses par [Concept('concept_building','$concept_buildings$')] :\n$BREAKDOWN_BY_BUILDING$"
 MILITARY_FORMATION_EXPENSE_BY_GOODS: "#v $VAL|0-K$@money!#! pour [Goods.Custom('FR_Goods_Du')][Goods.GetName] [Goods.GetTextIcon]"
 MILITARY_FORMATION_EXPENSE_BY_BUILDING: "#v $VAL|0-K$@money!#! provenant du [Building.GetName] de [Building.GetState.GetName]"
 MILITARY_FORMATION_BUILDABLE_UNITS: "Unités possibles"
 MILITARY_FORMATION_UNITS_RECRUITMENT: "Types d’unité par défaut & recrutement"
 MILITARY_FORMATION_UNITS_UPGRADE_ALL: "Améliorer toutes les unités"
 MILITARY_FORMATION_UNITS_UPGRADE_ALL_DESC: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_UNITS_UPGRADE_ALL_DESC_ARMY', 'MILITARY_FORMATION_UNITS_UPGRADE_ALL_DESC_NAVY')]"
 MILITARY_FORMATION_UNITS_UPGRADE_ALL_DESC_ARMY: "Cela améliorera toutes les unités qui le peuvent en :\n[MilitaryFormation.GetSelectedUnitTypeForGroup(GetCombatUnitGroup('combat_unit_group_infantry').Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(GetCombatUnitGroup('combat_unit_group_infantry').Self).Self)] pour l’infanterie\n[MilitaryFormation.GetSelectedUnitTypeForGroup(GetCombatUnitGroup('combat_unit_group_artillery').Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(GetCombatUnitGroup('combat_unit_group_artillery').Self).Self)] pour l’artillerie\n[MilitaryFormation.GetSelectedUnitTypeForGroup(GetCombatUnitGroup('combat_unit_group_cavalry').Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(GetCombatUnitGroup('combat_unit_group_cavalry').Self).Self)] pour la cavalerie"
 MILITARY_FORMATION_UNITS_UPGRADE_ALL_DESC_NAVY: "Cela améliorera toutes les unités qui le peuvent en :\n[MilitaryFormation.GetSelectedUnitTypeForGroup(GetCombatUnitGroup('combat_unit_group_light_ship').Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(GetCombatUnitGroup('combat_unit_group_light_ship').Self).Self)] pour les navires légers\n[MilitaryFormation.GetSelectedUnitTypeForGroup(GetCombatUnitGroup('combat_unit_group_capital_ship').Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(GetCombatUnitGroup('combat_unit_group_capital_ship').Self).Self)] pour les navires capitaux"
 MILITARY_FORMATION_UNITS_UPGRADE_ALL_ALL: "Améliorer toutes les unités de toutes les formations militaires qui le peuvent"
 MILITARY_FORMATION_UNITS: "Détails de l’unité"
 MILITARY_FORMATION_CURRENT_UNITS: "Unités actuelles"
 CHANGE_COMMANDER_ORDER_TOOLTIP: "#header [Character.GetOrderType.GetAltName( 'gerund' )]#!\nL’[concept_order|l] actuel de [Character.GetFullName] est de #b [Character.GetOrderType.GetName|l]#!\n#i Cliquez pour changer l’ordre#!"
 CHANGE_NEXT_COMMANDER_ORDER_TOOLTIP: "#header [Character.GetNextOrderType.GetName] (actuellement : [Character.GetOrderType.GetAltName( 'gerund' )|l])#!\nL’[concept_order|l] suivant de [Character.GetFirstName] sera de #b [Character.GetNextOrderType.GetName|l]#!\nLa [concept_battle|l] actuelle en [Character.GetBattle.GetLocationName] doit d’abord se conclure\n#i Cliquez pour changer l’ordre#!"
 COMMANDER_ORDER_TOOLTIP: "#header [Character.GetOrderType.GetAltName( 'gerund' )]#!\nL’[concept_order|l] actuel de [Character.GetFirstName] est de #b [Character.GetOrderType.GetName|l]#!"
 COMMANDER_NEXT_ORDER_TOOLTIP: "#header [Character.GetNextOrderType.GetName] (actuellement : [Character.GetOrderType.GetAltName( 'gerund' )|l])#!\nL’[concept_order|l] suivant de [Character.GetFirstName] sera de #b [Character.GetNextOrderType.GetName|l]#!\nLa [concept_battle|l] actuelle en [Character.GetBattle.GetLocationName] doit d’abord se conclure"
 MILITARY_FORMATION_ARMY_BUILDING: "Caserne"
 MILITARY_FORMATION_ARMY_BUILDINGS: "Casernes"
 MILITARY_FORMATION_NAVAL_BUILDING: "Base navale"
 MILITARY_FORMATION_NAVAL_BUILDINGS: "Bases navales"
 MILITARY_FORMATION_REMOVE_UNIT_TOOLTIP: "#header Dissoudre #b [CombatUnitType.GetName]#!#!\n[ConcatIfNeitherEmpty(GetDesc( MilitaryFormation.GetDisbandUnitTypeRegularCommand( CombatUnitType.Self ) ),'\n')]$TOOLTIP_DELIMITER$\nCela dissoudra l’[Concept('concept_unit','$concept_unit_short$')|l] de type [CombatUnitType.GetName] ayant le moins d’expérience au sein de la formation [MilitaryFormation.GetName], quelle que soit la [SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_ARMY_BUILDING', 'MILITARY_FORMATION_NAVAL_BUILDING')|l] où elle a été créée. [AddLocalizationIf(MilitaryFormation.FindLeastExperiencedRegularUnit( CombatUnitType.Self ).IsValid, 'MILITARY_FORMATION_REMOVE_UNIT_DESC' )]\n\n@information! Dissoudre plus de #v 1#! unité [CombatUnitType.GetIconString] pourra entraîner la dissolution d’autres unités provenant d’autres [SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_ARMY_BUILDINGS', 'MILITARY_FORMATION_NAVAL_BUILDINGS')|l].\n\n#instruction Cliquez pour dissoudre 1 unité\n#instruction $SHORTCUT_KEY_MOD_shift$Cliquez pour dissoudre 5 unités\n#instruction $SHORTCUT_KEY_MOD_ctrl$Cliquez pour dissoudre 10 unités#!"
 MILITARY_FORMATION_REMOVE_UNIT_DESC: "L’unité [CombatUnitType.GetName] ayant actuellement le moins d’expérience vient du bâtiment [MilitaryFormation.FindLeastExperiencedRegularUnit( CombatUnitType.Self ).GetBuilding.GetName] en [MilitaryFormation.FindLeastExperiencedRegularUnit( CombatUnitType.Self ).GetBuilding.GetState.GetName]."
 MILITARY_FORMATION_RECRUIT_UNIT_TOOLTIP: "Recruter #b [CombatUnitType.GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForType(CombatUnitType.Self).Self)]#![ConcatIfNeitherEmpty('\n\n', MilitaryFormation.CanRecruitRegularUnitTooltip( CombatUnitType.Self ) ) ]"
 UPGRADING_UNIT_TYPE: "Modernise #b [MilitaryFormationUnitEntry.GetUnitType.GetName]#! en #b [MilitaryFormation.GetSelectedUnitTypeForGroup( MilitaryFormationUnitEntry.GetUnitType.GetGroup.Self ).GetName] #!"
 UPGRADE_UNIT_TYPE: "Moderniser #b [MilitaryFormationUnitEntry.GetUnitType.GetName]#! en #b [MilitaryFormation.GetSelectedUnitTypeForGroup( MilitaryFormationUnitEntry.GetUnitType.GetGroup.Self ).GetName]#!\n\nCeci [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$a')|l] les unités le temps de la modernisation."
 MILITARY_FORMATION_UPGRADE_UNIT_TOOLTIP: "[SelectLocalization( MilitaryFormation.IsRegularUnitTypeUpgrading( MilitaryFormationUnitEntry.GetUnitType.Self ), 'UPGRADING_UNIT_TYPE', 'UPGRADE_UNIT_TYPE' )] [ConcatIfNeitherEmpty('\n\n', GetDesc( MilitaryFormation.GetUpgradeRegularUnitTypeCommand( MilitaryFormationUnitEntry.GetUnitType.Self ) ))]"
 CANNOT_UPGRADE_UNIT_TO_TYPE: "Impossible de moderniser [COMBAT_UNIT_TYPE.GetName] en [TARGET_COMBAT_UNIT_TYPE.GetName] car les types d’unités sont trop différents."
 MILITARY_FORMATION_UPGRADE_GROUP_TOOLTIP: "[SelectLocalization(MilitaryFormation.GetSelectedUnitTypeForGroup( CombatUnitGroup.Self ).IsValid, 'UPGRADE_GROUP_VALID_HEADER','UPGRADE_GROUP_INVALID_HEADER')][ConcatIfNeitherEmpty( '\n', AddLocalizationIf( Not( IsValid( MilitaryFormation.GetUpgradeUnitGroupCommand( CombatUnitGroup.Self ) ) ), GetDesc(  MilitaryFormation.GetUpgradeUnitGroupCommand( CombatUnitGroup.Self )     ) ) )]"
 UPGRADE_GROUP_VALID_HEADER: "#header Améliorer toutes les [Concept('concept_unit', '$concept_units_short$')|l] de [CombatUnitGroup.GetName] en [MilitaryFormation.GetSelectedUnitTypeForGroup( CombatUnitGroup.Self ).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(CombatUnitGroup.Self).Self)]#!\n\nLes unités seront aussi démobilisées."
 UPGRADE_GROUP_INVALID_HEADER: "#header Améliorer toutes les [Concept('concept_unit', '$concept_units_short$')|l] de [CombatUnitGroup.GetName]#!"
 UPGRADE_UNIT_GROUP: "Améliorer toutes les unités de #b [CombatUnitGroup.GetName]#! en #b [MilitaryFormation.GetSelectedUnitTypeForGroup( CombatUnitGroup.Self ).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(CombatUnitGroup.Self).Self)]#!\n\nLes unités seront démobilisées pendant leur amélioration."
 CANNOT_UPGRADE_UNITS_IN_GROUP: "Aucune unité de #b [COMBAT_UNIT_GROUP.GetName]#! ne peut être améliorée en [TARGET_COMBAT_UNIT_TYPE.GetName]."
 CANNOT_UPGRADE_UNITS_IN_GROUP_ALL_UPGRADING: "Toutes les unités de #b [COMBAT_UNIT_GROUP.GetName]#! possibles sont déjà en cours d’amélioration."
 UPGRADE_ALL_UNIT_GROUP: "Améliorer tout [CombatUnitGroup.GetName]"
 MILITARY_FORMATION_REMOVE_CONSCRIPT_UNIT_TOOLTIP: "#header Dissoudre une unité de #b [Concept('concept_conscript_battalion','$concept_conscript_battalions_short$')|l] du type suivant : [CombatUnitType.GetName|l]#!#!\n[ConcatIfNeitherEmpty(GetDesc( MilitaryFormation.GetDisbandUnitTypeConscriptCommand( CombatUnitType.Self ) ),'\n')]$TOOLTIP_DELIMITER$\n#instruction Cliquez pour dissoudre 1 [Concept('concept_unit','$concept_unit_short$')|l]\n#instruction $SHORTCUT_KEY_MOD_shift$Cliquez pour dissoudre 5 unités\n#instruction $SHORTCUT_KEY_MOD_ctrl$Cliquez pour dissoudre 10 unités#!"
 MILITARY_FORMATION_RECRUIT_CONSCRIPT_UNIT_TOOLTIP: "Recruter #b [CombatUnitType.GetName] [Concept('concept_conscript_battalion','$concept_conscript_battalion_short$')|l]#![ConcatIfNeitherEmpty('\n\n', MilitaryFormation.CanRecruitConscriptUnitTooltip( CombatUnitType.Self ) ) ]"
 MILITARY_FORMATION_UPGRADE_CONSCRIPT_UNIT_TOOLTIP: "Améliorer #b unité de [Concept('concept_conscript_battalion','$concept_conscript_battalions_short$')|l] du type suivant : [CombatUnitType.GetName|l]#!"
 MILITARY_FORMATION_RECRUIT_DEFAULT_UNIT_TYPE_TOOLTIP: "Recruter #b [MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(CombatUnitGroup.Self).Self)]#![ConcatIfNeitherEmpty('\n\n', MilitaryFormation.CanRecruitRegularUnitTooltip( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self ) ) ]"
 MILITARY_FORMATION_DISBAND_DEFAULT_UNIT_TYPE_TOOLTIP: "Dissoudre #b [MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).GetNameWithCulture(MilitaryFormation.GetPrimaryCultureForGroup(CombatUnitGroup.Self).Self)]#!"
 MILITARY_FORMATION_RECRUIT_DEFAULT_UNIT_TYPE_CONSCRIPTS_TOOLTIP: "Recruter #b [Concept('concept_conscript_battalion','$concept_conscript_battalion_short$')] [MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).GetName]#![ConcatIfNeitherEmpty('\n\n', MilitaryFormation.CanRecruitConscriptUnitTooltip( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self ) ) ]"
 MILITARY_FORMATION_DISBAND_DEFAULT_UNIT_TYPE_CONSCRIPTS_TOOLTIP: "Dissoudre #b [MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).GetName] [Concept('concept_conscript_battalion','$concept_conscript_battalion_short$')|l]#!"
 MILITARY_FORMATION_NO_DEFAULT_UNIT_TYPE_TO_RECRUIT: "@red_cross! Aucun [concept_combat_unit_type] #b par défaut#! sélectionné pour ce [CombatUnitGroup.GetName]"
 MILITARY_FORMATION_NUMBER_OF_UNITS: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_NUMBER_OF_BATTALIONS', 'MILITARY_FORMATION_NUMBER_OF_FLOTILLAS')]"
 MILITARY_FORMATION_NUMBER_OF_BATTALIONS: "@battalions!#v [MilitaryFormationUnitEntry.GetCurrentNumRegularUnits]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumRegularUnits, MilitaryFormationUnitEntry.GetCurrentNumRegularUnits), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS')]"
 MILITARY_FORMATION_NUMBER_OF_CONSCRIPTS: "@conscripts!#v [MilitaryFormationUnitEntry.GetCurrentNumConscriptUnits]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumConscriptUnits, MilitaryFormationUnitEntry.GetCurrentNumConscriptUnits), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_CONSCRIPTS')]"
 CONSCRIPTS_CONCEPT: "[Concept('concept_conscript_battalion','$concept_conscript_battalions_short$')]"
 RAISE_ALL_CONSCRIPTS: "Lever [MilitaryFormation.GetMaxConscripts|v] [Concept('concept_conscript_battalion','$concept_conscript_battalions_short$')|l]@conscripts!"
 RAISE_ALL_CONSCRIPTS_TOOLTIP: "Lever [MilitaryFormation.GetMaxConscripts|v] [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')|l]@conscripts! au total. Les conscrits resteront actifs jusqu’à ce que l’armée soit [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilized$e')|l].[ConcatIfNeitherEmpty('\n\n', GetDesc( MilitaryFormation.RaiseConscripts ) )]"
 CANNOT_ADD_CONSCRIPT: "A promulgué les [GetLawType('law_peasant_levies').GetName|l]"
 MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS: " + [Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumRegularUnits, MilitaryFormationUnitEntry.GetCurrentNumRegularUnits)]"
 MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_CONSCRIPTS: " + [Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumConscriptUnits, MilitaryFormationUnitEntry.GetCurrentNumConscriptUnits)]"
 MILITARY_FORMATION_NUMBER_OF_UNITS_IN_DEFAULT_TYPE: "[MilitaryFormation.GetCombatUnitsTypeIcon] #v [MilitaryFormation.GetNumRegularCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self )]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormation.GetNumExpectedRegularCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self ), MilitaryFormation.GetNumRegularCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self )), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_DEFAULT_TYPE')]"
 MILITARY_FORMATION_NUMBER_OF_CONSCRIPTS_DEFAULT_TYPE_RAISED: "@conscripts! #v [MilitaryFormation.GetNumConscriptsCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self )]#![AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormation.GetNumExpectedConscriptsCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self ), MilitaryFormation.GetNumConscriptsCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self )), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_DEFAULT_TYPE_CONSCRIPTS')]"
 MILITARY_FORMATION_NUMBER_OF_CONSCRIPTS_DEFAULT_TYPE_NOT_RAISED: "@conscripts! #v [MilitaryFormation.GetNumExpectedConscriptsCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self )]#!"
 MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_DEFAULT_TYPE: " + [Subtract_int32(MilitaryFormation.GetNumExpectedRegularCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self ), MilitaryFormation.GetNumRegularCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self ))]"
 MILITARY_FORMATION_NUMBER_OF_CONSCRIPTS_NOT_RAISED: "@conscripts! #v [MilitaryFormationUnitEntry.GetExpectedNumConscriptUnits]#!"
 MILITARY_FORMATION_NUMBER_OF_EXPECTED_BATTALIONS_DEFAULT_TYPE_CONSCRIPTS: " + [Subtract_int32(MilitaryFormation.GetNumExpectedConscriptsCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self ), MilitaryFormation.GetNumConscriptsCombatUnitsOfType( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.Self).Self ))]"
 MILITARY_FORMATION_NUMBER_OF_FLOTILLAS: "@flotillas! #v [MilitaryFormationUnitEntry.GetCurrentNumTotalUnits]#! [AddLocalizationIf(GreaterThan_int32(Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumRegularUnits, MilitaryFormationUnitEntry.GetCurrentNumTotalUnits), '(int32)0'), 'MILITARY_FORMATION_NUMBER_OF_EXPECTED_FLOTILLAS')]"
 MILITARY_FORMATION_NUMBER_OF_EXPECTED_FLOTILLAS: "+ [Subtract_int32(MilitaryFormationUnitEntry.GetExpectedNumRegularUnits, MilitaryFormationUnitEntry.GetCurrentNumTotalUnits)]"
 MILITARY_FORMATION_UNIT_GROUP_NUMBER_OF_EXPECTED_BATTALIONS: "+ [Subtract_int32(CombatUnitGroup.GetExpectedNumUnits, CombatUnitGroup.GetCurrentNumUnits)]"
 MILITARY_FORMATION_UNIT_GROUP_NUMBER_OF_FLOTILLAS: "@flotillas! #v [CombatUnitGroup.GetCurrentNumUnits]#! [CombatUnitGroup.GetExpectedNumUnits]"
 MILITARY_FORMATION_DISBAND_TOOLTIP: "#r Dissoudre#! [MilitaryFormation.GetName][ConcatIfNeitherEmpty('\n\n',GetDesc( MilitaryFormation.Disband ))]"
 MILITARY_FORMATION_DISBAND: "Dissoudre"
 MILITARY_FORMATION_TRANSFER_UNIT_TOOLTIP: "Transférer des [Concept('concept_unit', '$concept_units$')|l] vers une autre [SelectLocalization( MilitaryFormation.IsArmy, 'MILITARY_FORMATION_TRANSFER_UNIT_ARMY_TOOLTIP', 'MILITARY_FORMATION_TRANSFER_UNIT_FLEET_TOOLTIP')]"
 MILITARY_FORMATION_TRANSFER_UNIT_ARMY_TOOLTIP: "[concept_army]"
 MILITARY_FORMATION_TRANSFER_UNIT_FLEET_TOOLTIP: "[concept_fleet]"
 FORMATION_STATUS_TRAVELING_TO_SEA_NODE_INVASION_SHORT: "[concept_naval_invasion] en préparation, voyage vers [Invasion.GetSeaNodeName] ([LabelingHelper.GetDaysLocWithoutTooltip(MilitaryFormation.GetTravelDaysLeft)])"
 FORMATION_STATUS_TRAVELING_TO_SEA_NODE_INVASION: "[Invasion.GetName] en préparation, voyage vers [Invasion.GetSeaNodeName] ([LabelingHelper.GetDaysLocWithoutTooltip(MilitaryFormation.GetTravelDaysLeft)])"
 FORMATION_STATUS_TRAVELING_TO_INVASION_FRONT: "En voyage vers [Invasion.GetSourceState.GetCountry.GetFlagTextIcon] [Invasion.GetSourceState.GetName] ([LabelingHelper.GetDaysLocWithoutTooltip(MilitaryFormation.GetTravelDaysLeft)]) pour [Concept('concept_invasion', '$concept_invade$')|l] [Invasion.GetTargetState.GetCountry.GetFlagTextIcon] [Invasion.GetTargetState.GetName]"
 FORMATION_STATUS_PREPARING_INVASION: "[concept_invasion] en cours de préparation en [Invasion.GetTargetState.GetNameWithCountryFlag] ([LabelingHelper.GetDaysLocWithoutTooltip(Invasion.GetPreparationDaysLeftRaw)])"
 FORMATION_STATUS_ADVANCING_INVASION: "En [Invasion.GetSourceState.GetNameWithCountryFlag] pour [Concept('concept_invasion', '$concept_invade$')|l] [Invasion.GetTargetState.GetNameWithCountryFlag]"
 FLEET_STATUS_NAVAL_INVASION_TRYING_TO_INTERCEPT: "Tentative d’interception et d’attaque des [Concept('concept_fleet', '$concept_fleets$')|l] ennemies dans la mer Baltique pour l’invasion [Invasion.GetName]. Toutes les [Concept('concept_fleet', '$concept_fleets$')|l] ennemies doivent être [concept_admiral_defeated|l]es"
 FLEET_STATUS_NAVAL_INVASION_TRYING_TO_INTERCEPT_SHORT: "Tentative d’interception et d’attaque des [Concept('concept_fleet', '$concept_fleets$')|l] ennemies à [Invasion.GetSeaNodeName]"
 FLEET_STATUS_NAVAL_INVASION_NO_INTERCEPT: "@warning! À [MilitaryFormation.GetCurrentSeaNode.GetSeaNodeName], l’invasion [Invasion.GetName] ne pourra avoir lieu que si un [concept_admiral|l] possède un [concept_order|l] avec le modificateur #tooltippable_name #tooltip:character_interception_add_desc « $character_interception_add$ »#!#!. Toutes les [Concept('concept_fleet', '$concept_fleets$')|l] ennemies doivent être [concept_admiral_defeated|l]es"
 FLEET_STATUS_NAVAL_INVASION_NO_INTERCEPT_SHORT: "@warning! L’[concept_naval_invasion|l] ne pourra avoir lieu que si un [concept_admiral|l] possède un [concept_order|l] avec le modificateur #tooltippable_name #tooltip:character_interception_add_desc « $character_interception_add$ »#!#!"
 FORMATION_STATUS_WAITING_DEFEAT_ENEMY_FLEETS_SHORT: "Prêt pour l’[concept_naval_invasion|l], dans l’attente que les [Concept('concept_fleet', '$concept_fleets$')|l] ennemies soient [concept_admiral_defeated|l]es"
 FORMATION_STATUS_WAITING_DEFEAT_ENEMY_FLEETS: "Prêt pour l’invasion [Invasion.GetName], dans l’attente que les [Concept('concept_fleet', '$concept_fleets$')|l] ennemies soient [concept_admiral_defeated|l]es et que [Invasion.GetSeaNodeName] soit sous le contrôle [MilitaryFormation.GetCountry.GetAltNameNoFormatting('Du')][MilitaryFormation.GetCountry.GetName]"
 FORMATION_STATUS_FIGHTING_CONTROL_SEA_NODE: "Tentative de contrôle de [Invasion.GetSeaNodeName] lors de l’invasion [Invasion.GetName]. Toutes les [Concept('concept_fleet', '$concept_fleets$')|l] ennemies doivent être [concept_admiral_defeated|l]es"
 FORMATION_STATUS_FIGHTING_CONTROL_SEA_NODE_SHORT: "Tentative de contrôle de [Invasion.GetSeaNodeName] lors de l’[concept_naval_invasion|l]"
 FORMATION_STATUS_CONTROLLING_SEA_NODE: "A pris le contrôle de [Invasion.GetSeaNodeName] lors de l’invasion [Invasion.GetName]"
 FORMATION_STATUS_CONTROLLING_SEA_NODE_SHORT: "A pris le contrôle de [Invasion.GetSeaNodeName] lors de l’[concept_naval_invasion|l]"
 FORMATION_STATUS_DEFENDING_INVASION_AT_STATE: "En [Invasion.GetTargetState.GetNameWithCountryFlag] pour défendre l’[concept_invasion|l] [Invasion.GetInvaderCountry.GetAltAdjective('FS')|l] de [Invasion.GetSourceState.GetNameWithCountryFlag]"
 FORMATION_STATUS_DEFENDING_INVASION_AT_SEA_REGION: "En [Province.GetSeaNodeName] pour défendre l’[concept_invasion|l] [Invasion.GetName] [Invasion.GetInvaderCountry.GetAltAdjective('FS')|l]"
 FORMATION_STATUS_DEFENDING_INVASION_AT_HQ: "Au [HQ.GetName] pour défendre l’[concept_invasion|l] [Invasion.GetName] [Invasion.GetInvaderCountry.GetAltAdjective('FS')|l]"
 FORMATION_STATUS_DEFENDING_INVASION_SHORT: "Se défend face à l’invasion [Invasion.GetName]"
 FORMATION_STATUS_LANDING: "Envahit [Invasion.GetTargetState.GetName] par voie navale ([Invasion.GetLandingProgress|v%0])"
 FORMATION_STATUS_LANDING_SHORT: "Envahit [Invasion.GetTargetState.GetName] par voie navale. La [concept_landing_progress|l] est actuellement de [Invasion.GetLandingProgress|v%0]"
 FORMATION_STATUS_TRAVELING_TO_FRONT: "Voyage vers le [Front.GetName|l], ([MilitaryFormation.GetTravelDaysLeft|v] jours restants, actuellement en [MilitaryFormation.GetLocationString])"
 FORMATION_STATUS_TRAVELING_TO_SEA_NODE: "Voyage vers [Province.GetStateRegion.GetName] ([MilitaryFormation.GetTravelDaysLeft|v] jours restants, actuellement en [MilitaryFormation.GetLocationString])"
 FORMATION_STATUS_TRAVELING_TO_HQ: "Voyage vers le [HQ.GetName] ([MilitaryFormation.GetTravelDaysLeft|v] jours restants, actuellement en [MilitaryFormation.GetLocationString])[ConcatIfNeitherEmpty('\n', AddLocalizationIf(MilitaryFormation.IsFullyDefeated, 'FORMATION_FULLY_DEFEATED_SHORT'))]"
 FORMATION_STATUS_AT_FRONT: "Au [Front.GetName|l]"
 FORMATION_STATUS_AT_HQ: "Stationné au [HQ.GetName][AddLocalizationIf(MilitaryFormation.IsReadyToDefendNavalInvasion, 'ARMY_STATUS_READY_DEFEND_INVASION')]"
 FORMATION_STATUS_AT_SEA_NODE: "En [Province.GetStateRegion.GetName] ([concept_presence|l] : [MilitaryFormation.GetSeaPresence|v%0])[AddLocalizationIf(MilitaryFormation.IsReadyToDefendNavalInvasion, 'FLEET_STATUS_READY_DEFEND_INVASION')]"
 ARMY_STATUS_READY_DEFEND_INVASION: ", prêt à défendre toute [Concept('concept_naval_invasion', '$concept_naval_invasion$')|l] visant [MilitaryFormation.GetCurrentHQ.GetName]"
 FLEET_STATUS_READY_DEFEND_INVASION: ", prêt à défendre toute [Concept('concept_naval_invasion', '$concept_naval_invasion$')|l] visant [MilitaryFormation.GetCurrentSeaNode.GetSeaNodeName]"
 MILITARY_FORMATION_OFFENSE: "[MilitaryFormation.GetAverageOffenseExcludeUnavailableManpower|1v] @unit_offense!"
 MILITARY_FORMATION_OFFENSE_TOOLTIP: "#header [concept_offense]#!\n[MilitaryFormation.GetAverageOffenseExcludeUnavailableManpower|1v] [concept_offense|l]@unit_offense! en moyenne\n$TOOLTIP_DELIMITER$\n[MilitaryFormation.GetAverageOffense|1v] [concept_offense|l]@unit_offense! en moyenne à [Concept('concept_manpower','effectif')] complet"
 MILITARY_FORMATION_DEFENSE: "[MilitaryFormation.GetAverageDefenseExcludeUnavailableManpower|1v] @unit_defense!"
 MILITARY_FORMATION_DEFENSE_TOOLTIP: "#header [concept_defense]#!\n[MilitaryFormation.GetAverageDefenseExcludeUnavailableManpower|1v] [concept_defense|l]@unit_defense! en moyenne\n$TOOLTIP_DELIMITER$\n[MilitaryFormation.GetAverageDefense|1v] [concept_defense|l]@unit_defense! à [Concept('concept_manpower','effectif')] complet"
 FORMATION_STATUS_TRAVELING_TO_FRONT_SHORT: "Voyage vers le [Front.GetName|l] ([MilitaryFormation.GetTravelDaysLeft|v] j)"
 FORMATION_STATUS_TRAVELING_TO_SEA_NODE_SHORT: "Voyage vers [Province.GetStateRegion.GetName] ([MilitaryFormation.GetTravelDaysLeft|v] j)"
 FORMATION_STATUS_TRAVELING_TO_HQ_SHORT: "Voyage vers [HQ.GetName] ([MilitaryFormation.GetTravelDaysLeft|v] j)"
 FORMATION_STATUS_AT_FRONT_SHORT: "Au [Front.GetName|l]"
 FORMATION_STATUS_AT_HQ_SHORT: "Stationné au [HQ.GetName]"
 FORMATION_STATUS_AT_SEA_NODE_SHORT: "En [Province.GetStateRegion.GetName] ([concept_presence|l] : [MilitaryFormation.GetSeaPresence|v%0])"
 COMBAT_UNIT_TYPES_CONCEPT: "[Concept('concept_combat_unit_type', '$concept_combat_unit_types$')]"
 COMBAT_UNITS_CONCEPT: "[Concept('concept_unit', '$concept_units$')]"
 MILITARY_FORMATION_BLOCKADE_TOOLTIP: "#header Force du [concept_blockade|l] maximale#!\n[MilitaryFormation.GetMaxBlockadeStrength|vK] pour [MilitaryFormation.GetName]\n$TOOLTIP_DELIMITER$\n[MilitaryFormation.GetCurrentBlockadeStrength|vK] de force actuelle en raison d’une [concept_presence|l] de [MilitaryFormation.GetSeaPresence|v%0]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_ATTRITION_RISK_ICON_ARMY', 'MILITARY_FORMATION_ATTRITION_RISK_ICON_NAVY')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_ARMY: "[SelectLocalization(GreaterThan_CFixedPoint(MilitaryFormation.GetAttritionRaw, GetStaticModifier('base_army_attrition').GetValueFor('military_formation_attrition_risk_add')), '@high_attrition!', '@attrition!')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_NAVY: "[SelectLocalization(GreaterThan_CFixedPoint(MilitaryFormation.GetAttritionRaw, GetStaticModifier('base_army_attrition').GetValueFor('military_formation_attrition_risk_add')), '@high_attrition!', '@attrition!')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_WITH_LABEL: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_ATTRITION_RISK_ICON_ARMY_WITH_LABEL', 'MILITARY_FORMATION_ATTRITION_RISK_ICON_NAVY_WITH_LABEL')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_ARMY_WITH_LABEL: "[SelectLocalization(GreaterThan_CFixedPoint(MilitaryFormation.GetAttritionRaw, GetStaticModifier('base_army_attrition').GetValueFor('military_formation_attrition_risk_add')), 'Élevée @high_attrition!', 'Normale @attrition!')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_NAVY_WITH_LABEL: "[SelectLocalization(GreaterThan_CFixedPoint(MilitaryFormation.GetAttritionRaw, GetStaticModifier('base_army_attrition').GetValueFor('military_formation_attrition_risk_add')), 'Élevée @high_attrition!', 'Normale @attrition!')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_VAL: "[SelectLocalization(MilitaryFormation.IsArmy, 'MILITARY_FORMATION_ATTRITION_RISK_ICON_ARMY_VAL', 'MILITARY_FORMATION_ATTRITION_RISK_ICON_NAVY_VAL')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_ARMY_VAL: "[SelectLocalization(GreaterThan_CFixedPoint(MilitaryFormation.GetAttritionRaw, GetStaticModifier('base_army_attrition').GetValueFor('military_formation_attrition_risk_add')), '@high_attrition!', '@attrition!')]"
 MILITARY_FORMATION_ATTRITION_RISK_ICON_NAVY_VAL: "[SelectLocalization(GreaterThan_CFixedPoint(MilitaryFormation.GetAttritionRaw, GetStaticModifier('base_army_attrition').GetValueFor('military_formation_attrition_risk_add')), '@high_attrition!', '@attrition!')]"
 MILITARY_FORMATION_ATTRITION: "[MilitaryFormation.GetAverageAttritionPerWeek|%1^-] $MILITARY_FORMATION_ATTRITION_RISK_ICON$"
 MILITARY_FORMATION_ATTRITION_DESC: "#header [concept_attrition] de [MilitaryFormation.GetName]#!\nActuellement : [MilitaryFormation.GetAverageAttritionPerWeek|%1^-][Nbsp]$MILITARY_FORMATION_ATTRITION_RISK_ICON_VAL$\n$TOOLTIP_DELIMITER$\n#indent_newline:3 Les [Concept('concept_unit', '$concept_units$')|l] de la formation [MilitaryFormation.GetName] subiront [MilitaryFormation.GetAverageAttritionPerWeek|%1^-] [concept_casualties|l] par semaine en moyenne (#v $CASUALTIES|0-$#! d’[concept_manpower|l]@manpower!), en raison de :\n#indent_newline:3 $VAL|0%-$$MILITARY_FORMATION_ATTRITION_RISK_ICON_VAL$ risque d’[concept_attrition|l] hebdomadaire\n$BREAKDOWN$#!\n$MIN|0%v$ à $MAX|0%v$ pertes si sujettes à l’[concept_attrition|l]#!"
 MILITARY_FORMATION_ATTRITION_DESC_BASE: "$TAB$Risque d’attrition de base : #v $VAL|%0-$#!"
 MILITARY_FORMATION_ATTRITION_RISK_EXILE_PENALTY: "$VAL|%-=^2$ pour être @exiled_state![Nbsp]en exil"
 MILITARY_FORMATION_ATTRITION_RISK_ON_ENEMY_TERRITORY: "$VAL|%-=^2$ pour être en territoire ennemi"
 MILITARY_FORMATION_ATTRITION_RISK_EFFECT_FROM_BEING_EXILED: "$MILITARY_FORMATION_ATTRITION_RISK_ICON_ARMY_VAL$[Nbsp][Concept('concept_attrition', '$concept_attrition_risk$')] : $VAL|%-=^2$ (Actuellement : [MilitaryFormation.GetAttritionRaw|%0-])"
 MILITARY_PANEL_ACTIVATE_CONSCRIPTS: "Activer les conscrits"
 MILITARY_PANEL_GARRISON_TOTAL_DEFENSES: "Défenses totales"
 MILITARY_PANEL_HQ_HEADER_FORMAT: "#variable [Hq.GetName]#!"
 MILITARY_PANEL_HQ_AVAILABLE: "Disponible"
 MILITARY_PANEL_HQ_STATE_NAME_FORMAT: "[State.GetName]"
 MILITARY_PANEL_NO_BATTALIONS: "Pas de [concept_battalion|l] disponible dans ce [concept_hq]"
 MILITARY_PANEL_COMMANDER_NAME_FORMAT: "[Character.GetFullName]"
 MILITARY_PANEL_BUILDING_TROOP_NAME: "[Building.GetCustom('troop_name')] en [Building.GetState.GetName]"
 MILITARY_PANEL_MOBILIZED: "[Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$')]"
 SUPPLY_NETWORK_MAPMARKER_HEADER: "Détails du [concept_supply_network|l] [GetPlayer.GetAdjectiveNoFormatting|l] :"
 SEA_NODE_DAMAGE_DESC: "@warning! Une [Concept('concept_raid_convoys', '$concept_convoy_raiding$')|l] a récemment coulé #v $NUM_SUNK_CONVOYS|-$#! des [concept_convoys|l] passant par ce nœud, ce qui réduit l’efficacité de la [concept_shipping_lane|l] de #v $DAMAGE|-%$#! en moyenne. Nous estimons qu’il nous faudra #v $DAYS_TO_RECOVER$#! jour(s) pour remplacer complètement les [concept_convoys|l] perdus."
 SUPPLY_NETWORK_DESC: "$SUPPLY_NETWORK_MAPMARKER_HEADER$\n$NUM_CONVOYS_NO_DAMAGE$\n$USED_CONVOYS$\n$NUM_SEA_NODES$\n$SUPPLY_NETWORK_STRENGTH$"
 SEA_NODE_TOOLTIP: "#header [concept_sea_node] en [StrategicRegion.GetNameNoFormatting]#!\n$TOOLTIP_DELIMITER$\n#v $NUM_CONVOYS$#! [concept_convoys|l] de nos [Concept('concept_shipping_lane', '$concept_shipping_lanes$')|l] passent par ce nœud[ConcatIfNeitherEmpty('\n','$SEA_NODE_DAMAGE$')]\n\n$SUPPLY_NETWORK$[ConcatIfNeitherEmpty('\n\n', StrategicRegion.GetConvoyRaidsDesc)]"
 MOVEMENT_MARKER_ALLIED_FLEETS_HEADER: "#title [Concept('concept_fleet', '$concept_fleets$')] alliées :#!"
 MOVEMENT_MARKER_ENEMY_FLEETS_HEADER: "#title [Concept('concept_fleet', '$concept_fleets$')] ennemies :#!"
 MOVEMENT_MARKER_NEUTRAL_FLEETS_HEADER: "#title [Concept('concept_fleet', '$concept_fleets$')] neutres :#!"
 MOVEMENT_MARKER_ALLIED_ARMIES_HEADER: "#title [Concept('concept_army', '$concept_armies$')] alliées :#!"
 MOVEMENT_MARKER_ENEMY_ARMIES_HEADER: "#title [Concept('concept_army', '$concept_armies$')] ennemies :#!"
 MOVEMENT_MARKER_NEUTRAL_ARMIES_HEADER: "#title [Concept('concept_army', '$concept_armies$')] neutres :#!"
 MOVEMENT_MARKER_FORMATION_LIST_ENTRY: "[MilitaryFormation.GetCountry.GetFlagTextIcon] [MilitaryFormation.GetUnitIcon]#v [MilitaryFormation.GetNumCombatUnits]#! [MilitaryFormation.GetName]"
 MOVEMENT_MARKER_TRAVEL_TIME_BREAKDOWN_ENTRY: "#v $TRAVEL_TIME$#! jours - $MOVEMENT_MARKER_FORMATION_LIST_ENTRY$"
 SEA_NODE_MOVEMENT_MARKER_TOOLTIP: "#header [SeaNodeMovementMarker.GetSeaNode.GetStateRegion.GetName]#!\n[SelectLocalization(SeaNodeMovementMarker.HasActiveSupplyNetwork, SeaNodeMovementMarker.GetActiveSupplyNetworkDesc, 'NO_ACTIVE_SUPPLY_NETWORK')][ConcatIfNeitherEmpty('\n', SeaNodeMovementMarker.GetConvoyRaidingDesc)][ConcatIfNeitherEmpty('\n', SeaNodeMovementMarker.GetInvasionDesc)]\n$TOOLTIP_DELIMITER$\n[GetDesc(SeaNodeMovementMarker.GetSeaNode.GetDeploySelectedFormationsCommand)][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(SeaNodeMovementMarker.IsAllSelectedFormationsTarget, 'SEA_NODE_TRAVEL_TIME'))][AddLocalizationIf(IsValid(SeaNodeMovementMarker.GetSeaNode.GetDeploySelectedFormationsCommand), 'SEA_NODE_MOVEMENT_MARKER_RIGHT_CLICK_PROMPT')][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(Not(StringIsEmpty(SeaNodeMovementMarker.GetPresentFormationsBreakdown)), 'SEA_NODE_MOVEMENT_MARKER_PRESENT_FORMATIONS'))]"
 SEA_NODE_MOVEMENT_MARKER_TOOLTIP_CONVOY_RAIDED: "@warning! Notre [concept_supply_network|l] en [SeaNodeMovementMarker.GetSeaNode.GetStateRegion.GetNameNoFormatting] a été diminué ([SeaNodeMovementMarker.GetConvoyRaidingEnemyFleetsDesc])"
 SEA_NODE_MOVEMENT_MARKER_TOOLTIP_NAVALLY_INVADED: "@warning! Nos ennemis lancent une [concept_naval_invasion|l]. Le [concept_sea_node|l] est actuellement [SeaNodeMovementMarker.GetInvasionStatus]"
 SEA_NODE_MOVEMENT_MARKER_TOOLTIP_SUPPLY_NETWORK: "Force du [concept_supply_network|l] : #v $SUPPLY_NETWORK_STRENGTH|%$#!"
 SEA_NODE_MOVEMENT_MARKER_RIGHT_CLICK_PROMPT: "@rightclick! #i Clic droit pour déployer les [Concept('concept_fleet', '$concept_fleets$')|l] sélectionnées ici#!\n\n#title Temps de trajet :#!#indent_newline:3 \n[SeaNodeMovementMarker.GetTravelTimeBreakdown]#![ConcatIfNeitherEmpty('\n\n' , SeaNodeMovementMarker.GetPresentFormationsBreakdown)]"
 SEA_NODE_TRAVEL_TIME: "#title En voyageant jusqu’ici, arrivée prévue dans :#!#indent_newline:3 \n[SeaNodeMovementMarker.GetTravelTimeBreakdown]#!"
 SEA_NODE_MOVEMENT_MARKER_TOOLTIP_RAIDING_FLEET: "La formation [MilitaryFormation.GetName] mène des [Concept('concept_raid_convoys', 'attaques de convois')]"
 SEA_NODE_MOVEMENT_MARKER_TOOLTIP_MULTIPLE_RAIDING_FLEETS: "#v #tooltippable #tooltip:$BREAKDOWN$ $COUNT$#!#!#! [Concept('concept_fleet', '$concept_fleets$')|l] mènent des [Concept('concept_raid_convoys', 'attaques de convois')]"
 NO_ACTIVE_SUPPLY_NETWORK: "#title Vous n’avez aucun [concept_supply_network|l] actif ici#!"
 SEA_NODE_MOVEMENT_MARKER_PRESENT_FORMATIONS: "#title [Concept('concept_military_formation', '$concept_military_formations$')] présentes :#indent_newline:3 \n[SeaNodeMovementMarker.GetPresentFormationsBreakdown]#!"
 HQ_MOVEMENT_MARKER_TOOLTIP: "#header [Hq.GetName]#!\n$TOOLTIP_DELIMITER$\n[GetDesc(Hq.GetStationSelectedFormationsCommand)][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(HQMovementMarker.IsAllSelectedFormationsTarget, 'HQ_TRAVEL_TIME'))][AddLocalizationIf(IsValid(Hq.GetStationSelectedFormationsCommand), 'HQ_MOVEMENT_MARKER_RIGHT_CLICK_PROMPT')][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(Not(StringIsEmpty(HQMovementMarker.GetPresentFormationsBreakdown)), 'HQ_MOVEMENT_MARKER_PRESENT_FORMATIONS'))]"
 HQ_TRAVEL_TIME: "#title En voyageant jusqu’ici, arrivée prévue dans :#!#indent_newline:3 \n[HQMovementMarker.GetTravelTimeBreakdown]#!"
 HQ_MOVEMENT_MARKER_RIGHT_CLICK_PROMPT: "@rightclick! #i Clic droit#! pour stationner les [Concept('concept_military_formation', '$concept_military_formations$')|l] sélectionnées ici\n\n#title Temps de trajet :#!#indent_newline:3 \n[HQMovementMarker.GetTravelTimeBreakdown]#!"
 HQ_MOVEMENT_MARKER_PRESENT_FORMATIONS: "#title [Concept('concept_military_formation', '$concept_military_formations$')] présentes :#indent_newline:3 \n[HQMovementMarker.GetPresentFormationsBreakdown]#!"
 HQ_MOVEMENT_MARKER_NON_PLAYER_COUNTRY_TOOLTIP: "#header [Hq.GetNameNoFlag] [Hq.GetCountry.GetAdjective]#![ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', AddLocalizationIf(Not(StringIsEmpty(HQMovementMarker.GetPresentFormationsBreakdown)), 'HQ_MOVEMENT_MARKER_PRESENT_FORMATIONS'))]"
 FRONT_MOVEMENT_MARKER_TOOLTIP: "#header [Front.GetName]#!\n$TOOLTIP_DELIMITER$\n[AddLocalizationIf(Not(StringIsEmpty( Front.GetPlayerAdvantageDesc )), 'DATA_FRONT_NAME_STATUS_TOOLTIP_BREAKDOWN')]\n\n[GetDesc(Front.GetDeploySelectedFormationsCommand)][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(FrontMovementMarker.IsAllSelectedFormationsTarget, 'FRONT_TRAVEL_TIME'))][AddLocalizationIf(IsValid(Front.GetDeploySelectedFormationsCommand), 'FRONT_MOVEMENT_MARKER_RIGHT_CLICK_PROMPT')][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(Not(StringIsEmpty(FrontMovementMarker.GetPresentFormationsBreakdown)), 'FRONT_MOVEMENT_MARKER_PRESENT_FORMATIONS'))]"
 FRONT_MOVEMENT_MARKER_ADVANTAGE_LABEL: "#tooltippable #tooltip:[Front.GetTooltipTag],DATA_FRONT_NAME_STATUS_TOOLTIP_BREAKDOWN #v [Front.GetPlayerAdvantageRaw|+]#!#!#!"
 FRONT_TRAVEL_TIME: "#title En voyageant jusqu’ici, arrivée prévue dans :#!#indent_newline:3 \n[FrontMovementMarker.GetTravelTimeBreakdown]#!"
 FRONT_MOVEMENT_MARKER_RIGHT_CLICK_PROMPT: "@rightclick! #i Clic droit#! pour déployer les [Concept('concept_military_formation', '$concept_military_formations$')|l] sur ce [concept_front|l]\n\n#title Temps de trajet :#!#indent_newline:3 \n[FrontMovementMarker.GetTravelTimeBreakdown]#!"
 FRONT_MOVEMENT_MARKER_PRESENT_FORMATIONS: "#title [Concept('concept_military_formation', '$concept_military_formations$')] présentes :#indent_newline:3 \n[FrontMovementMarker.GetPresentFormationsBreakdown]#!"
 FRONT_MARKER_TOOLTIP: "#header [Front.GetName]#!\n$TOOLTIP_DELIMITER$\n[FrontMarker.GetFront.GetPlayerAdvantageDesc]"
 UNITS_PROVIDED_FROM_BUILDING: "[Building.GetCombatUnitsIcon] [Building.GetNumActiveUnitsProvidedToFormation(MilitaryFormation.Self)|v] [SelectLocalization(NotZero(MilitaryFormation.GetIncomingNumRegularsFromBuilding(Building.Self)), 'UNITS_INCOMING_FROM_BUILDING_SHORT', '')]"
 UNITS_PROVIDED_FROM_BUILDING_TOOLTIP: "#header [Building.GetName] en [Building.GetState.GetName]#!\nFournit [Building.GetNumActiveUnitsProvidedToFormation(MilitaryFormation.Self)|v] [Building.GetCombatUnitsIcon] à [MilitaryFormation.GetName] [SelectLocalization(NotZero(MilitaryFormation.GetIncomingNumRegularsFromBuilding(Building.Self)), 'UNITS_INCOMING_FROM_BUILDING', '')]\n$TOOLTIP_DELIMITER$\n[Building.GetUnitsProvidedToFormationBreakdown(MilitaryFormation.Self)]"
 UNITS_INCOMING_FROM_BUILDING_SHORT: "(+[MilitaryFormation.GetIncomingNumRegularsFromBuilding(Building.Self)|v])"
 UNITS_INCOMING_FROM_BUILDING: "(+[MilitaryFormation.GetUnitIcon][MilitaryFormation.GetIncomingNumRegularsFromBuilding(Building.Self)|v] [Concept('concept_incoming_units', '$concept_incoming_units_short$')|l])"
 COMBAT_UNITS_PROVIDED_TO_FORMATION_LIST_ITEM: "$NUM|v$ [COMBAT_UNIT_TYPE.GetName] [BUILDING.GetCombatUnitsIcon]"
 MILITARY_FORMATION_BUILDINGS_DESC_LIST_ITEM: "#tooltippable #tooltip:[BUILDING.GetTooltipTag]|[MILITARY_FORMATION.GetTooltipTag],UNITS_PROVIDED_FROM_BUILDING_TOOLTIP [BUILDING.GetCombatUnitsIcon][BUILDING.GetNumActiveUnitsProvidedToFormation(MilitaryFormation.Self)|v]#!#! de [BUILDING.GetState.GetName]"
 CONVOY_TOPBAR_TOOLTIP: "#header [concept_convoys]@convoys!#!\nSolde : [Country.GetNumAvailableConvoys|=+D]\n[Country.GetConvoyEffectDesc]\n$TOOLTIP_DELIMITER$\n$NUM_CONVOYS_BREAKDOWN$"
 NUM_CONVOYS_BREAKDOWN: "Votre production totale est de #v [Country.GetNumConvoys|D+=]#! [concept_convoys|l]@convoys! en raison de :\n[Country.GetNumConvoysDesc][ConcatIfNeitherEmpty( '\n', Country.GetNumConvoysDamagedDesc )]\n\n$USED_CONVOYS_TOOLTIP_SHORT$"
 CONVOY_EFFECT_REDUCED_SUPPLY_NETWORK: "Réduit la force du [concept_supply_network|l] à #n $SUPPLY_NETWORK_STRENGTH|0%$#!"
 NUM_CONVOYS_NO_DAMAGE: "Convois disponibles : #tooltippable #tooltip:[Country.GetTooltipTag],NUM_CONVOYS_TOOLTIP [Country.GetNumConvoys|D]@convoys!#!#!"
 NUM_CONVOYS_NO_DAMAGE_NUMBER: "[Country.GetRequiredConvoys|vD]/[Country.GetNumConvoys|vD]@convoys!"
 NUM_CONVOYS_DAMAGE: "Convois utilisables : #tooltippable #tooltip:[Country.GetTooltipTag],NUM_CONVOYS_TOOLTIP [Country.GetNumUsableConvoys|D]@convoys!#!#! (#R [Country.GetNumDamagedConvoys]@convoys! coulés#!)"
 NUM_CONVOYS_TOOLTIP: "#header Nombre de [concept_convoys|l] produits#!\n$TOOLTIP_DELIMITER$\n[Country.GetNumConvoysDesc][ConcatIfNeitherEmpty( '\n', Country.GetNumConvoysDamagedDesc )]"
 NUM_CONVOYS_TOOLTIP_EXTENDED: "#header [concept_convoys] @convoys!#!\n$TOOLTIP_DELIMITER$\nSolde : [Country.GetNumAvailableConvoys|=+D]\n\n$NUM_CONVOYS_BREAKDOWN$"
 CONVOY_DAMAGE_TOOLTIP_ENTRY_LINGERING: "Dégâts persistants de l’attaque de convois en [StrategicRegion.GetName] : @convoys!$VALUE|+=$"
 USED_CONVOYS: "Convois requis : #tooltippable #tooltip:[Country.GetTooltipTag],USED_CONVOYS_TOOLTIP [Country.GetRequiredConvoys|D]@convoys!#!#!"
 USED_AVAILABE_CONVOYS_TEXT: "Convois requis :"
 USED_AVAILABE_CONVOYS_VALUE: "#tooltippable #tooltip:[Country.GetTooltipTag],USED_CONVOYS_TOOLTIP [Country.GetRequiredConvoys|D]#!#! / #tooltippable #tooltip:[Country.GetTooltipTag],NUM_CONVOYS_TOOLTIP [Country.GetNumUsableConvoys|D]#!#!@convoys!"
 USED_CONVOYS_TOOLTIP: "Nombre de convois requis par le [concept_supply_network|l] [Country.GetAdjective|v]\n[Country.GetRequiredConvoysBreakdown]"
 USED_CONVOYS_TOOLTIP_SHORT: "Votre utilisation totale de #v [Negate_int32(Country.GetRequiredConvoys)|D+=]#! @convoys! [concept_convoys|l] s’explique par :\n[Country.GetRequiredConvoysBreakdown]"
 SUPPLY_NETWORK_STRENGTH_COLOR: "[GetSupplyNetworkColorstring( Country.GetSupplyNetworkStrength )]"
 SUPPLY_NETWORK_STRENGTH: "Force du réseau d’approvisionnement : #$SUPPLY_NETWORK_STRENGTH_COLOR$ [Country.GetSupplyNetworkStrength|%0]#!"
 SUPPLY_NETWORK_STRENGTH_TEXT: "Force du réseau d’approvisionnement :"
 SUPPLY_NETWORK_STRENGTH_VALUE: "#$SUPPLY_NETWORK_STRENGTH_COLOR$ [Country.GetSupplyNetworkStrength|%0]#!"
 SUPPLY_NETWORK_STRENGTH_TOOLTIP: "Nombre de [concept_convoys|l] disponibles par rapport aux besoins"
 NUM_SEA_NODES: "Nœuds maritimes : #v [Country.GetSupplyNetworkNumSeaNodes]#!"
 NUM_SEA_NODES_TEXT: "Nœuds maritimes :"
 NUM_SEA_NODES_VALUE: "[Country.GetSupplyNetworkNumSeaNodes]"
 NUM_SEA_NODES_TOOLTIP: "Le [concept_supply_network|l] [Country.GetAltAdjectiveNoFormatting('MS')|vl] s’étend sur [Country.GetSupplyNetworkNumSeaNodes] nœuds maritimes.\n\n[Country.GetSupplyNetworkNumSeaNodesDesc]"
 SHIPPING_LANE_TOOLTIP: "#header [ShippingLane.GetName]#!\n[ShippingLane.GetDesc]\n\n[concept_shipping_lane_effectiveness] : [ShippingLane.GetEffectivenessFormatted]\n[concept_convoy_cost] : [ShippingLane.GetConvoyCostFormattedShort]"
 REQUIRED_CONVOYS_BREAKDOWN: "$TAB$#v [Negate_int32('(int32)$PORT_CONNECTION_CONVOYS$')|=+]#! des [Concept('concept_port_connection', '$concept_port_connections$')|l]\n$TAB$#v [Negate_int32('(int32)$SUPPLY_ROUTE_CONVOYS$')|=+]#! des [Concept('concept_supply_route', '$concept_supply_routes$')|l]\n$TAB$#v [Negate_int32('(int32)$GOODS_TRANSFER_CONVOYS$')|=+]#! du [GetArticleType('goods_transfer').GetName|l]"
 NO_SUPPLY_NETWORK: "Aucun [concept_country|l] utilise ce [concept_supply_network|l]"
 NOT_PART_OF_ANY_MILITARY_FORMATION: "Ne fait pas partie d’une [concept_military_formation|l]"
 CONVOYS_FROM_MARKET_MEMBERS: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #v $VALUE|+=$#!#!#! des [Concept('concept_country','$concept_countries$')|l] en [Country.GetMarket.GetName]"
 CONVOYS_FROM_MARKET_MEMBER: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|+=$#!#! [Country.GetAltNameNoFormatting('Du')][Country.GetName] (#tooltippable #tooltip:$BREAKDOWN_TAG$ $CONTRIBUTION|v%0$#!#! de contribution)"
 CONVOYS_FROM_MARKET_MEMBER_BREAKDOWN: "#header Contribution de #v $VALUE|+=$#! [concept_convoys|l] @convoys! [Country.GetAltNameNoFormatting('Du')][Country.GetName]#!\n$TOOLTIP_DELIMITER$\n$CONTRIBUTION_DESC$\n$BREAKDOWN$"
 NO_CONVOYS_FROM_MARKET_MEMBERS: "Pas de [concept_convoys] d’autres [Concept('concept_country','$concept_countries$')|l] en [Country.GetMarket.GetName]"
 MAIN_MENU_DISCLAIMER: "#header Bêta ouverte 1.5.3#!\n#r Remarque :#! À quelques exceptions près, répertoriées dans le document « Known Issues » (sur notre Discord), toutes les fonctionnalités prévues pour la version finale 1.5 devraient maintenant être disponibles et fonctionner. Lorsque vous testez cette mise à jour, vous devriez vous concentrer sur le plaisir de jouer avec les nouvelles fonctionnalités. Si quelque chose nuit à l’expérience de jeu, il pourrait être retiré.\n\nNous passerons la période précédant la sortie de la version 1.5 à peaufiner les fonctionnalités, à corriger les bugs et à ajuster l’équilibrage. Votre contribution est précieuse et très appréciée ! N’hésitez pas à nous faire part des bugs et autres commentaires ici :"
 MAIN_MENU_DISCLAIMER_DISCORD_LINK: "@discord! Discord"
 URL_TOOLTIP_OPEN_LINK: "\n$TOOLTIP_DELIMITER$\nOuvre le lien suivant dans votre navigateur :\n"
 DISCORD_URL: "#header Rejoignez le serveur Discord de Victoria 3#!\nDiscutez du jeu avec d’autres joueurs et profitez de leurs conseils$URL_TOOLTIP_OPEN_LINK$[GetDiscordUrl]"
 WIKI_URL: "#header Ouvrez le wiki de Victoria 3#!\nLisez et participez au wiki, riche en explications sur les mécaniques de jeu$URL_TOOLTIP_OPEN_LINK$[GetWikiUrl]"
 PLAYER_RESOURCES_URL: "#header Consultez les ressources des joueurs de Victoria 3#!\nRetrouvez toutes sortes d’informations utiles pour joueurs débutants et expérimentés$URL_TOOLTIP_OPEN_LINK$[GetPlayerResourcesUrl]"
 YOUTUBE_CHANNEL_URL: "#header Regardez la chaîne YouTube de Victoria 3#!\nDécouvrez des vidéos ainsi que les coulisses du jeu$URL_TOOLTIP_OPEN_LINK$[GetYoutubeChannelUrl]"
 SUPPLY_NETWORK_HEADER: "#title [concept_supply_network]#!"
 ACTIVE_BATTLES_HEADER: "#title Batailles en cours#!"
 ACTIVE_LAND_BATTLES_HEADER: "#title Batailles terrestres en cours#!"
 ACTIVE_NAVAL_BATTLES_HEADER: "#title Batailles navales en cours#!"
 ENDED_BATTLES_HEADER: "#title Batailles terminées#!"
 ENDED_LAND_BATTLES_HEADER: "#title Batailles terrestres terminées#!"
 ENDED_NAVAL_BATTLES_HEADER: "#title Batailles navales terminées#!"
 SEA_REGION_PANEL_ADMIRALS: "#title Activité des amiraux#!"
 NO_ACTIVE_LAND_BATTLES: "Aucune bataille terrestre en cours"
 NO_ACTIVE_NAVAL_BATTLES: "Aucune bataille navale en cours"
 NO_ENDED_LAND_BATTLES: "Aucune bataille terrestre terminée"
 NO_ENDED_NAVAL_BATTLES: "Aucune bataille navale terminée"
 SHIPPING_LANES: "Voies de navigation"
 NO_CONVOY_RAIDING_ADMIRALS: "Aucun [concept_admiral|l] n’[Concept('concept_raid_convoys', 'attaque de convoi')] ici"
 NO_INTERCEPTING_ADMIRALS: "Aucun [concept_admiral|l] ne patrouille ici"
 NO_FLOTILLAS_IN_HQ: "Aucune [concept_flotilla|l] @flotillas! dans ce [concept_hq]"
 NO_BATTALIONS_IN_HQ: "Aucun [concept_battalion|l] @battalions! dans ce [concept_hq]"
 ORIGIN_STATE_NAME: "[State.GetName]"
 ORIGIN_STATE_NUMBER_OF_SHIPPING_LANES: "(#v [GetDataModelSize( State.AccessShippingLanesFromThisState(SeaRegionPanel.GetProvince.Self) )]#!)"
 ORIGIN_STATE_NUMBER_OF_SHIPPING_LANES_TOOLTIP: "Le nombre total de [Concept('concept_shipping_lane', '$concept_shipping_lanes$')|l] depuis/vers [State.GetName] à travers cette région maritime"
 ORIGIN_STATE_TOTAL_CONVOYS_USED: "#v [State.GetTotalConvoysFromShippingLanesViaState(SeaRegionPanel.GetProvince.Self)|D]#!@convoys!"
 ORIGIN_STATE_TOTAL_CONVOYS_USED_TOOLTIP: "Nombre total de [concept_convoys|l] utilisés par des [Concept('concept_shipping_lane', '$concept_shipping_lanes$')|l] depuis/vers [State.GetName] à travers cette région maritime"
 ORIGIN_STATE_TOTAL_NUMBER_OF_PORT_CONNECTIONS: "#v [State.GetTotalPortConnectionsViaState(SeaRegionPanel.GetProvince.Self)]#! [SelectLocalization(GreaterThan_int32( State.GetTotalPortConnectionsViaState(SeaRegionPanel.GetProvince.Self), '(int32)1'), Concept('concept_port_connection', '$concept_port_connections$'), concept_port_connection )]"
 COUNTRY_SHIPPING_LANES: "[Concept('concept_shipping_lane', '$concept_shipping_lanes$')] [Country.GetAltAdjectiveNoFlag('FP')|l]"
 COUNTRY_SHIPPING_LANES_NETWORK_STRENGTH: "#$SUPPLY_NETWORK_STRENGTH_COLOR$ [Country.GetSupplyNetworkStrength|%0]#!"
 SHIPPING_LANE_SUPPLIED_STATE: "En [SelectLocalization(ShippingLane.GetEndState.IsValid,ShippingLane.GetEndState.GetName,ShippingLane.GetProvince.GetStateRegion.GetName)]"
 SHIPPING_LANE_SUPPLIED_STATE_GOODS_TRANSFER: "Vers [ShippingLane.GetEndState.GetName]"
 PORT_CONNECTION: "$concept_port_connection$"
 CONVOY_COST: "Convois"
 SHIPPING_LANE_EFFECTIVENESS_SHORTHAND: "Efficacité"
 SHIPPING_LANE_STATE_BEGIN_END: "[concept_shipping_lane] de [ShippingLane.GetBeginState.GetName] à [ShippingLane.GetEndState.GetName]"
 SHIPPING_LANE_NAME_SUPPLY_ROUTE: "[concept_supply_route] de la formation [MilitaryFormation.GetName]"
 SHIPPING_LANE_NAME_PORT_CONNECTION: "[concept_port_connection] outre-mer"
 SHIPPING_LANE_NAME_GOODS_TRANSFER: "[concept_treaty] sur le [GetArticleType('goods_transfer').GetName|l]"
 SHIPPING_LANE_DESC_SUPPLY_ROUTE: "Relie [ShippingLane.GetMilitaryFormation.GetName] à [ShippingLane.GetMilitaryFormation.GetHomeHQ.GetName]"
 SHIPPING_LANE_DESC_PORT_CONNECTION: "Relie [ShippingLane.GetEndState.GetName] [ShippingLane.GetEndState.GetOwner.GetFlagTextIcon] au [ShippingLane.GetBeginState.GetMarket.GetName|l] ([ShippingLane.GetBeginState.GetName] [ShippingLane.GetBeginState.GetOwner.GetFlagTextIcon])"
 SHIPPING_LANE_DESC_GOODS_TRANSFER: "Transfère des [Concept('concept_good', '$concept_goods$')|l] du [ShippingLane.GetBeginState.GetMarket.GetName|l] ([ShippingLane.GetBeginState.GetNameWithCountryFlag]) vers le [ShippingLane.GetEndState.GetMarket.GetName|l] ([ShippingLane.GetEndState.GetNameWithCountryFlag]) ([ShippingLane.GetTreaty.GetName])"
 SHIPPING_LANE_CONVOY_COST: "[Concept('concept_convoys', '$CONVOY_COST$')] : #tooltippable #tooltip:$BREAKDOWN_TAG$  $VALUE$@convoys!#!#!"
 SHIPPING_LANE_CONVOY_COST_SHORT: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|vD$@convoys!#!#!"
 SHIPPING_LANE_CONVOY_COST_GOOD_ENTRY: "$VALUE|vD=$ de $QUANTITY|0v$ [Goods.GetName|l][Nbsp][Goods.GetTextIcon] ($MULT|vD$ par quantité)"
 SHIPPING_LANE_EFFECTIVENESS_BASE: "#header [concept_shipping_lane_effectiveness]#!\n#$COLOR_TAG$ $VALUE|%0$#!Force du réseau d’approvisionnement"
 SHIPPING_LANE_FULL_EFFECT: "Cette [concept_shipping_lane|l] fonctionne à plein régime"
 SHIPPING_LANE_NOT_FULL_EFFECT: "Cette [concept_shipping_lane|l] ne fonctionne pas à plein régime. Selon le type de voie de navigation, cela implique la réduction de l’[concept_supply|l], de l’[concept_market_access|l] ou de la quantité de [Concept('concept_good', '$concept_goods$')|l] transportée."
 SHIPPING_LANE_EFFECTIVENESS_CONVOY_RAIDING_DMG: "[Concept('concept_raid_convoys', '$concept_convoy_raiding$')] : $VALUE|%2+$"
 SHIPPING_LANE_EFFECTIVENESS: "#$COLOR_TAG$ #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|%0$#!#!#!"
 SHIPPING_LANE_SUPPLY_ROUTE_BREAKDOWN_NUM_BATTALIONS: "[Concept('concept_battalion', '$concept_battalions$')] : $VALUE|v$"
 SHIPPING_LANE_SUPPLY_ROUTE_BREAKDOWN_BASE_BATTALION_COST: "Coût du bataillon de base : #variable x$VALUE|1$#!"
 SHIPPING_LANE_SUPPLY_ROUTE_BREAKDOWN_EFFIENCY: "Efficacité de l’approvisionnement du commandant : #variable x$VALUE|1$#!"
 SHIPPING_LANE_PORT_CONNECTION_BREAKDOWN_INFRA: "[concept_infrastructure_usage] outre-mer : $VALUE|0v$"
 SHIPPING_LANE_PORT_CONNECTION_BREAKDOWN_DEFINE: "Coût d’[concept_infrastructure_usage|l] : #variable x$VALUE|1$#!"
 SHIPPING_LANE_BREAKDOWN_NUM_SEA_NODES: "Passe par #v $NUM_NODES$#! nœuds maritimes : #variable x$VALUE$#! (#v +x$MULT$#! pour chaque nœud maritime après le premier)"
 SHIPPING_LANE_PREDICTION_ESTABLISH_PORT_CONNECTION: "Établira une [concept_port_connection|l] entre [STATE.GetName] et [STATE_OTHER.GetName]"
 SHIPPING_LANE_PREDICTION_REMOVE_PORT_CONNECTION: "Enlèvera une [concept_port_connection|l] entre [STATE.GetName] et [STATE_OTHER.GetName]"
 SHIPPING_LANE_PREDICTION_INCREASE_DESC: "Utilisera #tooltippable #tooltip:$BREAKDOWN_TAG$ $CONVOYS|-$@convoys!#!#! entre [STATE.GetName] et [STATE_OTHER.GetName] pour [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName]"
 SHIPPING_LANE_PREDICTION_DECREASE_DESC: "Libérera #tooltippable #tooltip:$BREAKDOWN_TAG$ $CONVOYS|+$@convoys!#!#! pour [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName]"
 SHIPPING_LANE_PREDICTION_SUPPLY_STRENGTH: "Force du [concept_supply_network|l] [COUNTRY.GetAltAdjectiveNoFormatting('MS')|l] estimée : #$SUPPLY_NETWORK_STRENGTH_COLOR$ $NEW_STRENGTH|%0$#!"
 SHIPPING_LANE_LAST_CAPITAL_MARKET_PORT: "#N C’est le dernier [GetBuildingType('building_port').GetName|l] de la région de la [concept_market_capital|l]. La suppression de cet élément invalidera toutes les [Concept('concept_shipping_lane', '$concept_shipping_lanes$')|l]"
 SEA_REGION_PANEL_ADMIRAL_DELAY: "Le délai d’interception de base est de [GetDefine('NMilitary', 'INTERCEPTION_DELAY_BASE_DAYS')|v] jours plus jusqu’à [GetDefine('NMilitary', 'INTERCEPTION_DELAY_MAX_RANDOM_DAYS_FACTOR')|v] jours aléatoires"
 SEA_REGION_PANEL_INTERCEPTION_CHANCE: "[GetDefine('NMilitary', 'INTERCEPTION_BASE_CHANCE')|v%0] de chance à chaque tentative de commencer une bataille navale"
 SEA_REGION_PANEL_CONVOY_RAIDERS: "Amiraux attaquant des convois"
 SEA_REGION_PANEL_INTERCEPTING_ADMIRALS: "Amiraux en patrouille le long de cette côte :"
 SEA_REGION_PANEL_ENTRY_HEADER: "[SeaRegionSupplyNetworkEntry.AccessCountry.GetAltNameNoFormatting('Le')|U][SeaRegionSupplyNetworkEntry.AccessCountry.GetName] [SeaRegionSupplyNetworkEntry.AccessCountry.GetAltNameNoFormatting('AOnt')] un réseau d’approvisionnement dans ce nœud maritime"
 SEA_REGION_PANEL_ENTRY_IS_RAIDED: "[SeaRegionSupplyNetworkEntry.AccessCountry.GetAltNameNoFormatting('Le')|U][SeaRegionSupplyNetworkEntry.AccessCountry.GetName] #N perd ici des [concept_convoys|l] face aux [Concept('concept_flotilla', '$concept_flotillas$')|l] ennemies !#!"
 SEA_REGION_PANEL_ENTRY_COMMANDER: "Le commandant [Character.GetFullName] suit l’[concept_supply|l]"
 CONVOYS_ENTRY_NAME: "$NAME$ : $NUM_CONVOYS|v$"
 SUPPLY_NETWORK_NUM_NODES_ENTRY_MARKET_NAME: "Du [FIRSTMARKET.GetName|l] au [SECONDMARKET.GetName|l] : $NUM_NODES|v$ nœuds maritimes"
 SUPPLY_NETWORK_NUM_NODES_ENTRY_COMMANDER_NAME: "[Character.GetFullName] : $NUM_NODES|v$ nœuds maritimes"
 SUPPLY_NETWORK_STRENGTH_ENTRY_MARKET_NAME: "Route commerciale du [FIRSTMARKET.GetName|l] au [SECONDMARKET.GetName|l]"
 SUPPLY_NETWORK_STRENGTH_ENTRY_COMMANDER_NAME: "Ligne d’approvisionnement pour [Character.GetFullName]"
 SUPPLY_NETWORK_STRENGTH_ENTRY_TOOLTIP_BASE: "La force du réseau d’approvisionnement de base est #$COLOR_FORMAT$ $VALUE|%0$#!"
 SUPPLY_NETWORK_STRENGTH_ENTRY_TOOLTIP_LOCAL: "Ceci est réduit de #BOLD $VALUE|%+=0$#! en raison de l’[Concept('concept_raid_convoys', '$concept_convoy_raiding$')|l] par des [Concept( 'concept_admiral', '$concept_admirals$' )|l] ennemis"
 SUPPLY_NETWORK_DELTA_HEADER: "Modifications du réseau d’approvisionnement : $DELTA_NUM_CHANGES|v$ nœuds maritimes"
 SUPPLY_NETWORK_DELTA_ADDED: "Ajoutera [StrategicRegion.GetName]"
 SUPPLY_NETWORK_DELTA_REMOVED: "Retirera [StrategicRegion.GetName]"
 SUPPLY_NETWORK_DELTA_STRENGTH: "Force du réseau d’approvisionnement : $NEW_STRENGTH|%0v$ ($STRENGTH_DELTA|%0+=$)"
 LAW_EVENT_TITLE_OUTCOME: "[GetPlayer.GetLawBeingEnacted.GetEnactmentLastCheckpointResult]"
 LAW_EVENT_FAIL_BREAKDOWN: "\n$LAW_ENACTMENT_STALLED_WARNING$#indent_newline:2 \n$LAW_ENACTMENT_STALL_BREAKDOWN$#!"
 LAW_EVENT_REMAINING_DAYS: "[SelectLocalization(LessThan_int32(Event.GetNumRemainingDays, GetPlayer.GetLawBeingEnacted.GetCheckpointRemainingDays), 'NORMAL_EVENT_REMAINING_DAYS', 'LAW_REMAINING_DAYS')]"
 LAW_REMAINING_DAYS: "#v [GetPlayer.GetLawBeingEnacted.GetCheckpointRemainingDays] jours#!"
 EVENT_REMAINING_DAYS: "[SelectLocalization(Event.HasCategory('enactment'), 'LAW_EVENT_REMAINING_DAYS', 'NORMAL_EVENT_REMAINING_DAYS')]"
 NORMAL_EVENT_REMAINING_DAYS: "#v [Event.GetRemainingDays] jours#!"
 DAYS_UNTIL_ELECTION: "[concept_election]"
 ELECTION_REMAINING_DAYS: "@clock! #v [AccessPlayer.GetDaysUntilElection] jours#!"
 EVENT_TOOLTIP: "#header [Event.GetTitle]#![ConcatIfNeitherEmpty('\n', SelectLocalization(Event.HasCategory('enactment'), 'LAW_EVENT_TOOLTIP', ''))][ConcatIfNeitherEmpty('\n', SelectLocalization(Event.HasCategory('revolution'), 'REVOLUTION_EVENT_TOOLTIP', ''))][ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(Event.HasCategory('enactment')), 'EVENT_LOCATION'))]\n\nRésolution automatique dans : $EVENT_REMAINING_DAYS$"
 EVENT_LOCATION: "Emplacement : [Event.GetState.GetName]"
 LAW_EVENT_TOOLTIP: "[Concept('concept_enactment_of_laws','$concept_enactment_of_laws_enactment$')] pour [GetPlayer.GetLawBeingEnacted.GetName][ConcatIfNeitherEmpty('\n' , SelectLocalization(GetPlayer.GetLawBeingEnacted.HasEnactmentLastCheckpoint, 'LAW_EVENT_OUTCOME', ''))]"
 LAW_EVENT_OUTCOME: "Résultat : [GetPlayer.GetLawBeingEnacted.GetEnactmentLastCheckpointResult]"
 REVOLUTION_EVENT_TOOLTIP: "Événement pour la [concept_revolution|l] du [AccessPlayer.GetGrowingCivilWar.GetPoliticalMovement.GetName|l]"
 EVENT_DEBUG_TOOLTIP: "$TOOLTIP_DELIMITER$\nID d’événement : [EVENT.GetKey|v]"
 ADVANCEMENT_COMMANDER_CONTRIBUTION_ADD: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #v $ADVANCEMENT_CONTRIBUTION|2+=$#!#!#!"
 ADVANCEMENT_COMMANDER_CONTRIBUTION_MULT: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #v $ADVANCEMENT_CONTRIBUTION|%0=$#!#!#!"
 ADVANCEMENT_COMMANDER_CONTRIBUTION_ORIGIN: "de [Character.GetFullName]"
 ADVANCEMENT_CONTRIBUTION_BREAKDOWN_ADD: "#v $NUM_UNITS|0$#! [Concept('concept_battalion', '$concept_battalions$')|l] mobilisés, #v $ADVANCEMENT_MODIFIER_VALUE|2+=$#!"
 ADVANCEMENT_CONTRIBUTION_BREAKDOWN_MULT: "#v $NUM_UNITS|0$#! [Concept('concept_battalion', '$concept_battalions$')|l] mobilisés, #v $ADVANCEMENT_MODIFIER_VALUE|%0=$#!"
 ADVANCEMENT_PROGRESS_BAR_TOOLTIP_INFO: "[concept_advancement_progress] sur #v [Front.GetRequiredAdvanceProgressForBattle|0+]#! requis pour lancer une nouvelle [concept_battle|l]. N’avancera que lorsque la guerre aura éclaté."
 ADVANCEMENT_PROGRESS_BAR_FORMATIONS_TOOLTIP: "#header [concept_advancement_progress] pour le camp [FrontSide.GetCountry.GetAltAdjective('MS')|l]#!\nProgression : #v [FrontSide.GetAdvancement|1+] / [Front.GetRequiredAdvanceProgressForBattle|0+]#!"
 ADVANCEMENT_PROGRESS_NUM_ENTRY: "$NUM$ @battalions!"
 ADVANCEMENT_PROGRESS_MIN_MAX_ENTRY: "$MIN$ - $MAX$ @battalions!"
 HAS_GENERALS_TOOLTIP: "Ce camp a au moins un commandant"
 ALLIES: "Alliés :"
 ALLIES_TRAVELING: "Alliés en déplacement :"
 JOBSEEKERS: "[Concept('concept_jobseeker', '$concept_jobseekers$')] : "
 JOBSEEKERS_BREAKDOWN_HEADER: "#header [Concept('concept_jobseeker', '$concept_jobseekers$')] en [STATE.GetName]#!\n$NUM|Kv$ [concept_working_adults|l] recherchent un autre emploi\n#variable [State.GetNumUnemployedWorkingAdults|D]#! parmi ceux-ci sont [concept_unemployed|l]\n$TOOLTIP_DELIMITER$\n"
 JOBSEEKERS_POP_TYPE_LIST_ITEM: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $NUM|Kv$#!#! [POP_TYPE.GetName] (#v $AVG_WAGE|1$#!@money!)"
 JOBSEEKERS_BREAKDOWN_FOOTER: "\n$TOOLTIP_DELIMITER$\n$STATE_QUALIFICATIONS$"
 JOBSEEKERS_POP_TYPE_BREAKDOWN_HEADER: "#header [POP_TYPE.GetName] en [Concept('concept_jobseeker', '$concept_jobseeking$')|l] en [STATE.GetName]#!\n$NUM|vK$ [POP_TYPE.GetName] recherchent un autre emploi\n[concept_average_wage] : #v $AVG_WAGE|1$#!@money!\n$TOOLTIP_DELIMITER$"
 JOBSEEKERS_POP_LIST_ITEM: "[Pop.GetNumWorkforce|Kv] [POP.GetName] - [POP.GetWorksAt]\n[concept_job_satisfaction] : #tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_JOB_SATISFACTION [Pop.GetCurrentJobSatisfaction|+]#!#!, [concept_average_wage|l] : [Pop.GetAverageAnnualWage|v1]@money!\n"
 SELECT_COMMANDER_ORDER: "#title Ordres du commandant#!"
 GENERAL_LOCATION_TITLE: "#title Emplacement du commandant#!"
 GENERAL_LOCATION_PRESENT_DESC: "[Character.GetOrderType.GetAltName( 'gerund' )|v] à $LOCATION|v$$ADDITIONAL_LOCATION_INFO$"
 GENERAL_LOCATION_PRESENT_DESC_WITHOUT_EXTRA_INFO: "[Character.GetOrderType.GetAltName( 'gerund' )|v] à $LOCATION|v$"
 GENERAL_TRAVELING_DAYS_BREAKDOWN: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL$#!#! "
 GENERAL_TRAVELING_ARRIVAL: "#header Arrivée au front#!\nArrivera le $DATE$"
 GENERAL_NAVAL_INVASION_TOOLTIP: "#header $naval_invasion$#!\nAssiste l’#variable invasion navale#! sur le [Character.GetInvasion.GetTargetState.GetName|v]\n\n[Character.GetInvasion.GetStatus]"
 FORMATION_BUSY_INVASION: "La formation [MilitaryFormation.GetName] ne participe pas à l’[concept_invasion|l]"
 FORMATION_BUSY_BATTLE: "La formation [MilitaryFormation.GetName] n’est pas engagée dans une [concept_battle|l]"
 FORMATION_FULLY_DEFEATED: "La formation [MilitaryFormation.GetName] est entièrement [concept_admiral_defeated|l]e et doit retourner à son [concept_hq] pour panser ses blessures. Progression des réparations : [MilitaryFormation.GetRepairProgress|0%v]"
 FORMATION_FULLY_DEFEATED_SHORT: "Actuellement [concept_admiral_defeated|l]"
 COMMANDER_BUSY: "[Character.GetFullName] est occupé[Character.GetCustom('FR_E')]"
 ADMIRAL_BUSY_NAVAL_INVASION: "#warning @warning! La modification de l’ordre annulera l’#variable invasion navale#! sur le [Character.GetInvasion.GetTargetState.GetName|v] assistée par [Character.GetInvasion.GetGeneral.GetFullName].#!"
 COMMANDER_HAS_NO_BATTALIONS: "$NAME$ n’as pas de [Concept('concept_battalion', '$concept_battalions$')|l]"
 COMMANDER_HAS_NO_FLOTILLAS: "$NAME$ n’as pas de [Concept('concept_flotilla','$concept_flotillas$')|l]"
 INVASION_MISSING_ARMY: "L’invasion manque de [Concept('concept_battalion', '$concept_battalions$')|l]"
 NAVAL_INVASION_MISSING_FLEET: "L’invasion navale manque de [Concept('concept_flotilla','$concept_flotillas$')|l]"
 NAVAL_INVASION_TOO_MANY_FORMATIONS: "L’invasion navale a trop de [Concept('concept_military_formation', '$concept_military_formations$')|l]"
 NAVAL_INVASION_REDUNDANT: "[State.GetName] est déjà envahi par [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 COMMANDER_LOCATION_ADDITIONAL_INFO_FORMAT: "\n($INFO$)"
 ADMIRAL_PREPARATION_DATE_TOOLTIP: "Estimation du départ : [Date.GetString]"
 NAVAL_INVASION_NO_GENERAL_ADVANCING_WARNING: "@warning! La [concept_landing_progress|l] de cette [concept_naval_invasion|l] sera nulle car aucun [concept_general|l] ne possède l’[concept_order|l] d'#b avancer#!.\n\nVeillez bien à ce qu’au moins l’un des [Concept('concept_general', '$concept_generals$')|l] possède l’ordre d'#b avancer#!."
 NAVAL_INVASION_NO_ADMIRAL_INTERCEPTION_CHANCE_WARNING: "@warning! Cette [concept_naval_invasion|l] ne pourra pas débarquer d’[Concept('concept_unit','$concept_units$')|l] car aucun [concept_admiral|l] ne possède d’[Concept('concept_order', '$concept_orders$')|l] lui permettant de commencer une [concept_battle|l].\n\nPensez à modifier les ordres d’au moins l’un de vos amiraux pour d’autres permettant de commencer des [Concept('concept_battle', '$concept_battles$')|l], comme #v $interception_coast$#!."
 LAND_INVASION_HAS_FRONT: "#n Le [Front.GetName] existe déjà#!"
 LAND_INVASION_CANNOT_REACH: "#n Impossible de rejoindre [State.GetName] par la terre#!"
 COMBAT_UNITS_TYPE_AND_NUM: "#v [MilitaryFormation.GetNumCombatUnits]#!"
 COMBAT_UNITS_TYPE_AND_NUM_WITH_ICON: "#v [MilitaryFormation.GetNumCombatUnits]#![MilitaryFormation.GetCombatUnitsTypeIcon]"
 MARKER_COMBAT_UNITS_TYPE_AND_NUM: "#v [FormationMarker.CalcTotalNumCombatUnits]#!"
 MARKER_COMBAT_UNITS_TYPE_AND_NUM_WITH_ICON: "#v [FormationMarker.CalcTotalNumCombatUnits]#![FormationMarker.GetCombatUnitsTypeIcon]"
 FRONT_STATUS: "[SelectLocalization(MilitaryFormation.IsAdvancing,'FRONT_STATUS_ADVANCING','FRONT_STATUS_DEFENDING')]"
 FRONT_STATUS_ADVANCING: "Avance le [concept_front|l]"
 FRONT_STATUS_DEFENDING: "Défend le [concept_front|l]"
 FRONT_FORMATION_ORDER_NAME: "#TODO[MilitaryFormation.GetFormationOrder.GetType.GetAltName( 'gerund' )] le [concept_front|l]#!"
 CURRENT_ORDER_STATUS: "#i #b (Ordre actuel)#!#!"
 NEXT_ORDER_STATUS: " #i #b (Ordre suivant)#!#!"
 MILITARY_FORMATION_MARKER_FORMATION_SUMMARY: "#header $FORMATIONS_HEADER$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 MILITARY_FORMATION_MARKER_FORMATION_MANPOWER: "#header [concept_manpower] de $FORMATIONS_HEADER$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 MILITARY_FORMATION_MARKER_FORMATION_OFFENSE: "#header [concept_offense] de $FORMATIONS_HEADER$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 MILITARY_FORMATION_MARKER_FORMATION_DEFENSE: "#header [concept_defense] de $FORMATIONS_HEADER$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 MILITARY_FORMATION_MARKER_FORMATION_ORGANIZATION: "#header [concept_organization] de $FORMATIONS_HEADER$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 MILITARY_FORMATION_MARKER_FORMATION_ENTRY_SUMMARY: "[COUNTRY.GetFlagTextIcon] [MILITARY_FORMATION.GetNumCombatUnits|v] [MILITARY_FORMATION.GetUnitIcon] ([MILITARY_FORMATION.GetName])"
 MILITARY_FORMATION_MARKER_FORMATION_ENTRY_MANPOWER: "[COUNTRY.GetFlagTextIcon] [MILITARY_FORMATION.GetCurrentManpower|vK] / #maximum [MILITARY_FORMATION.GetMaxManpower|vK]#!@manpower! ([MILITARY_FORMATION.GetName])"
 MILITARY_FORMATION_MARKER_FORMATION_ENTRY_OFFENSE: "[COUNTRY.GetFlagTextIcon] [MILITARY_FORMATION.GetAverageOffense|1v]@unit_offense! ([MILITARY_FORMATION.GetName])"
 MILITARY_FORMATION_MARKER_FORMATION_ENTRY_DEFENSE: "[COUNTRY.GetFlagTextIcon] @unit_defense! [MILITARY_FORMATION.GetAverageDefense|1v] ([MILITARY_FORMATION.GetName])"
 MILITARY_FORMATION_MARKER_FORMATION_ENTRY_ORGANIZATION: "[COUNTRY.GetFlagTextIcon] @organization![Nbsp]$MILITARY_ORGANIZATION_VALUE_FORMATTED$ ([MILITARY_FORMATION.GetName])"
 MILITARY_FORMATION_MARKER_ALLY_FORMATIONS: "[Concept( 'concept_military_formation', '$concept_military_formations$' )] alliées $POSITION_DESC$"
 MILITARY_FORMATION_MARKER_ENEMY_FORMATIONS: "[Concept( 'concept_military_formation', '$concept_military_formations$' )] ennemies $POSITION_DESC$"
 MILITARY_FORMATION_MARKER_POSITION_HQ: "dans le [HQ.GetName]"
 MILITARY_FORMATION_MARKER_POSITION_FRONT: "au [FRONT.GetName|l]"
 MILITARY_FORMATION_MARKER_POSITION_LOCATION: "en $LOCATION$"
 MILITARY_FORMATION_MARKER_SELECT_FORMATION: "Sélectionner une [concept_military_formation|l] [SelectLocalization(FormationMarker.IsEnemies,'MILITARY_FORMATION_MARKER_ENEMY_LABEL','MILITARY_FORMATION_MARKER_ALLIED_LABEL')]"
 MILITARY_FORMATION_MARKER_ENEMY_LABEL: "Ennemie"
 MILITARY_FORMATION_MARKER_ALLIED_LABEL: "Alliée"
 MILITARY_FORMATION_MARKER_RIGHT_CLICK_ITEM_DESC: "[MilitaryFormation.GetCountry.GetFlagTextIcon] [MilitaryFormation.GetNumCombatUnits|v] [MilitaryFormation.GetName] [MilitaryFormation.GetUnitIcon]"
 INVASION_PANEL_TITLE_INVASION: "[concept_invasion] en [Invasion.GetTargetState.GetName]"
 INVASION_PANEL_TITLE_NAVAL_INVASION: "[concept_naval_invasion] en [Invasion.GetTargetState.GetName]"
 INVASION_PANEL_TITLE: "[SelectLocalization(Invasion.IsNavalInvasion, 'INVASION_PANEL_TITLE_NAVAL_INVASION', 'INVASION_PANEL_TITLE_INVASION')]"
 INVASION_PANEL_SUBTITLE: "[Invasion.GetInvaderCountry.GetAltNameNoFormatting('Le')|U][Invasion.GetInvaderCountry.GetName] envahit [Invasion.GetInvadedCountry.GetAltNameNoFormatting('Le')][Invasion.GetInvadedCountry.GetName]"
 ### Commander Orders
 defend: "Défendre le front"
 defend_gerund: "Défend"
 defend_desc: "Ordonnez à ce commandant de défendre un [concept_front|l] pour essayer de tenir toutes ses provinces."
 defend_tooltip: "#header $defend$#!"
 defend_dig_in: "Défendre inflexiblement"
 defend_dig_in_gerund: "Défend inflexiblement"
 defend_dig_in_desc: "Ordonnez à ce commandant de défendre un [concept_front|l] pour essayer de tenir toutes ses provinces en s’y retranchant."
 defend_dig_in_tooltip: "#header $defend_dig_in$#!"
 advance: "Avancer le front"
 advance_gerund: "Avance"
 advance_desc: "Ordonnez à ce commandant d’avancer un [concept_front|l] pour tenter d’envahir le territoire ennemi.\nUn commandant avec l’ordre d’avancer peut toujours participer à des batailles défensives."
 advance_tooltip: "#header $advance$#!"
 advance_reckless: "Avancer intrépidement"
 advance_reckless_gerund: "Avance intrépidement"
 advance_reckless_desc: "Ordonnez à ce commandant d’avancer un [concept_front|l] pour tenter d’envahir le territoire ennemi de manière intrépide.\nUn commandant avec l’ordre d’avancer peut toujours participer à des batailles défensives."
 advance_reckless_tooltip: "#header $advance_reckless$#!"
 advance_heavy_barrage: "Effectuer un tir de barrage"
 advance_heavy_barrage_gerund: "Bombarde l’ennemi"
 advance_heavy_barrage_desc: "Ordonnez à ce commandant d’avancer un [concept_front|l] pour tenter d’envahir le territoire ennemi avec une puissance de feu écrasante.\nUn commandant avec l’ordre d’avancer peut toujours participer à des batailles défensives."
 advance_heavy_barrage_tooltip: "#header $advance_heavy_barrage$#!"
 defend_desperate_charge: "Contrer la charge"
 defend_desperate_charge_gerund: "Mène une charge désespérée"
 defend_desperate_charge_desc: "Ordonnez à ce commandant de défendre un [concept_front|l] pour essayer de charger l’ennemi et de causer autant de dégâts que possible."
 defend_desperate_charge_tooltip: "#header $defend_desperate_charge$#!"
 advance_cavalry_assualt: "Mener une progression rapide"
 advance_cavalry_assualt_gerund: "Charge avec des unités mobiles"
 advance_cavalry_assualt_desc: "Ordonnez à ce commandant d’avancer un [concept_front|l] en utilisant des unités rapides pour sécuriser le territoire.\nUn commandant avec l’ordre d’avancer peut toujours participer à des batailles défensives."
 advance_cavalry_assualt_tooltip: "#header $advance_cavalry_assualt$#!"
 advance_pillager: "Piller"
 advance_pillager_gerund: "Pille"
 advance_pillager_desc: "Ordonnez à ce commandant d’avancer un [concept_front|l] et de causer autant de dégâts que possible à l’ennemi.\nUn commandant avec l’ordre d’avancer peut toujours participer à des batailles défensives."
 advance_pillager_tooltip: "#header $advance_pillager$#!"
 advance_cautious: "Avancer prudemment"
 advance_cautious_gerund: "Avance prudemment"
 advance_cautious_desc: "Ordonnez à ce commandant d’avancer un [concept_front|l] pour tenter d’envahir le territoire ennemi de manière prudente.\nUn commandant avec l’ordre d’avancer peut toujours participer à des batailles défensives."
 advance_cautious_tooltip: "#header $advance_cautious$#!"
 advance_tank_assualt: "Mener un assaut avec des chars"
 advance_tank_assualt_gerund: "Mène un assaut avec des chars"
 advance_tank_assualt_desc: "Ordonnez à ce commandant d’avancer un [concept_front|l] en utilisant des chars lourds pour écraser tout ce qui se dresse sur son chemin.\nUn commandant avec l’ordre d’avancer peut toujours participer à des batailles défensives."
 advance_tank_assualt_tooltip: "#header $advance_tank_assualt$#!"
 defend_last_stand: "Mener un dernier combat"
 defend_last_stand_gerund: "Mène une charge désespérée"
 defend_last_stand_desc: "Ordonnez à ce commandant de défendre un [concept_front|l] en essayant de maintenir sa position autant que possible au détriment de la vie de ses hommes."
 defend_last_stand_tooltip: "#header $defend_last_stand$#!"
 defend_guerilla_warfare: "Employer des tactiques dilatoires"
 defend_guerilla_warfare_gerund: "Retarde l’avancée de l’ennemi"
 defend_guerilla_warfare_desc: "Ordonnez à ce commandant de défendre un [concept_front|l] en essayant de ralentir l’avancée de l’ennemi aux dépens de votre propre territoire."
 defend_guerilla_warfare_tooltip: "#header $defend_guerilla_warfare$#!"
 interception_coast: "Intercepter"
 interception_coast_gerund: "Intercepte"
 interception_coast_desc: "Recherchez et détruisez tous les navires ennemis."
 interception_coast_tooltip: "#header $interception_coast$#!"
 interception_coast_agressive: "Intercepter de façon agressive"
 interception_coast_agressive_gerund: "Intercepte de façon agressive"
 interception_coast_agressive_desc: "Recherchez et détruisez de manière agressive tous les navires ennemis au détriment du niveau de préparation."
 interception_coast_agressive_tooltip: "#header $interception_coast_agressive$#!"
 interception_carrier_assualt: "Mener des sorties avec des porte-avions"
 interception_carrier_assualt_gerund: "Mène des sorties avec des porte-avions"
 interception_carrier_assualt_desc: "Recherchez et détruisez tous les navires ennemis avec des attaques intenses à l’aide de porte-avions."
 interception_carrier_assualt_tooltip: "#header $interception_carrier_assualt$#!"
 interception_coordinated_attack: "Intercepter de façon coordonnée"
 interception_coordinated_attack_gerund: "Lance une attaque coordonnée"
 interception_coordinated_attack_desc: "Recherchez patiemment les navires ennemis et attaquez-les dans une bataille coordonnée et bien préparée."
 interception_coordinated_attack_tooltip: "#header $interception_coordinated_attack$#!"
 raid_convoys: "Attaquer des convois"
 raid_convoys_gerund: "Attaque des convois"
 raid_convoys_desc: "Réduisez la force d’un [concept_supply_network|l] ennemi en attaquant ses [concept_convoys|l]."
 raid_convoys_tooltip: "#header $raid_convoys$#!"
 blockade: "Blocus"
 blockade_gerund: "Blocus"
 blockade_desc: "[concept_blockade] d’un nœud maritime côtier, coupant le [concept_trade|l] et les [concept_convoys|l] dans les ports hostiles adjacents."
 blockade_tooltip: "#header $blockade$#!"
 raid_unrestricted_sub: "Attaquer en meute"
 raid_unrestricted_sub_gerund: "Attaque des convois avec des sous-marins"
 raid_unrestricted_sub_desc: "Réduisez la force d’un [concept_supply_network|l] ennemi en attaquant ses [concept_convoys|l] avec des sous-marins."
 raid_unrestricted_sub_tooltip: "#header $raid_unrestricted_sub$#!"
 escort_convoys: "Escorter les convois"
 escort_convoys_gerund: "Escorte des convois"
 escort_convoys_desc: "Protégez les [Concept('concept_shipping_lane','$concept_shipping_lanes$')|l] contre les pilleurs de convois."
 escort_convoys_tooltip: "#header $escort_convoys$#!"
 escort_convoys_advanced: "Organiser des convois marchands"
 escort_convoys_advanced_gerund: "Organise des convois marchands"
 escort_convoys_advanced_desc: "Protégez méthodiquement les [Concept('concept_shipping_lane','$concept_shipping_lanes$')|l] contre les pilleurs de convois."
 escort_convoys_advanced_tooltip: "#header $escort_convoys_advanced$#!"
 #new Military Formation Orders
 standby_army: "Être en état d’alerte"
 standby_army_gerund: "En état d’alerte"
 standby_army_desc: "#todo TODO#!"
 standby_army_tooltip: "#todo TODO#!"
 anchor_fleet: "Ancrer la flotte"
 anchor_fleet_gerund: "Flotte à l’ancrage"
 anchor_fleet_desc: "#todo TODO#!"
 anchor_fleet_tooltip: "#todo TODO#!"
 commander_status_traveling_front: "Voyage"
 commander_status_order_in_hq: "[Character.GetOrderType.GetName]"
 commander_status_order_on_front: "[Character.GetOrderType.GetName]"
 commander_status_order_in_strategic_region: "[Character.GetOrderType.GetName]"
 commander_status_attacking_in_battle: "Attaque dans la [Character.GetBattle.GetName|vl] sur le [Character.GetBattle.GetFront.GetName|l]"
 commander_status_defending_in_battle: "Défend dans la [Character.GetBattle.GetName|vl] sur le [Character.GetBattle.GetFront.GetName|l]"
 troop_name_regular: "Troupes régulières"
 troop_name_conscript: "Troupes conscrites"
 COMBAT_UNIT_GROUP_DEFAULT: "$NAME$ (par défaut)"
 combat_unit_regular: "Bataillons réguliers"
 combat_unit_conscript: "Bataillons conscrits"
 combat_unit_flotilla: "Flottilles"
 combat_unit_group_infantry: "Infanterie"
 combat_unit_group_infantry_desc: "C’est le gros de votre armée. Ces hommes courageux se battent pour votre pays."
 combat_unit_group_artillery: "Artillerie"
 combat_unit_group_artillery_desc: "Tire à distance sur les positions ennemies pour les dévaster."
 combat_unit_group_cavalry: "Cavalerie"
 combat_unit_group_cavalry_desc: "Tire à distance sur les positions ennemies pour les dévaster."
 combat_unit_group_light_ship: "Navires légers"
 combat_unit_group_light_ship_desc: "Les navires légers servent avant tout aux missions de patrouille et d’escorte."
 combat_unit_group_capital_ship: "Navires capitaux"
 combat_unit_group_capital_ship_desc: "Ces navires majestueux dominent les mers grâce à leur puissance de feu brute."
 combat_unit_group_support_ship: "Vaisseaux de soutien"
 combat_unit_group_support_ship_desc: "Ces vaisseaux s’acquittent de toutes les tâches permettant au reste de votre flotte de fonctionner."
 combat_unit_type_irregular_infantry: "Infanterie irrégulière"
 combat_unit_type_irregular_infantry_desc: "Unités qui ne suivent pas les normes d’organisation militaire traditionnelles."
 combat_unit_type_line_infantry: "Infanterie de ligne"
 combat_unit_type_line_infantry_desc: "Organisés en deux à quatre rangs de soldats pour maximiser leur puissance de feu."
 combat_unit_type_skirmish_infantry: "Infanterie d’escarmouche"
 combat_unit_type_skirmish_infantry_desc: "Infanterie légère qui se positionne en formation souple, ce qui lui confère un haut degré de flexibilité."
 combat_unit_type_trench_infantry: "Infanterie de tranchées"
 combat_unit_type_trench_infantry_desc: "Ces unités utilisent des tranchées pour fortifier leur position."
 combat_unit_type_squad_infantry: "Infanterie d’escouade"
 combat_unit_type_squad_infantry_desc: "Petits groupes pouvant agir indépendamment de l’organisation de l’armée."
 combat_unit_type_mechanized_infantry: "Infanterie mécanisée"
 combat_unit_type_mechanized_infantry_desc: "Soutenue par des véhicules lourdement blindés pour apporter une protection."
 combat_unit_type_cannon_artillery: "Artillerie de canons"
 combat_unit_type_cannon_artillery_desc: "Des canons massifs qui lancent de gros projectiles sur l’ennemi."
 combat_unit_type_mobile_artillery: "Artillerie mobile"
 combat_unit_type_mobile_artillery_desc: "Plus grande mobilité pour permettre un repositionnement plus rapide."
 combat_unit_type_shrapnel_artillery: "Artillerie de shrapnels"
 combat_unit_type_shrapnel_artillery_desc: "Les obus à fragmentation que ces unités tirent font des ravages parmi l’infanterie ennemie."
 combat_unit_type_siege_artillery: "Artillerie de siège"
 combat_unit_type_siege_artillery_desc: "Utilise une puissance de feu supérieure pour assurer la destruction des fortifications ennemies."
 combat_unit_type_heavy_tank: "Chars lourds"
 combat_unit_type_heavy_tank_desc: "Lourdement blindés et équipés d’obus explosifs."
 combat_unit_type_hussars: "Hussards"
 combat_unit_type_hussars_desc: "Cavalerie légère et mobile armée de sabres."
 combat_unit_type_dragoons: "Dragons"
 combat_unit_type_dragoons_desc: "Infanterie montée pour une mobilité accrue sur le champ de bataille."
 combat_unit_type_cuirassiers: "Cuirassiers"
 combat_unit_type_cuirassiers_desc: "Cavalerie blindée qui se bat en première ligne."
 combat_unit_type_lancers: "Lanciers"
 combat_unit_type_lancers_desc: "Cavalerie mobile équipée de longues lances dont les attaques sont destinées à désorganiser les formations ennemies."
 combat_unit_type_light_tanks: "Chars légers"
 combat_unit_type_light_tanks_desc: "Il s’agit d’une version plus légère du char d’assaut, davantage axée sur la mobilité que sur le blindage et la puissance de feu."
 combat_unit_type_frigate: "Frégates"
 combat_unit_type_frigate_desc: "Voilier faiblement armé, principalement utilisé pour des missions de reconnaissance, de patrouille et d’escorte."
 combat_unit_type_destroyer: "Destroyers"
 combat_unit_type_destroyer_desc: "Conçu pour des manœuvres rapides, il permet la chasse aux sous-marins et l’escorte des cibles de valeur."
 combat_unit_type_torpedo_boat: "Torpilleurs"
 combat_unit_type_torpedo_boat_desc: "Conçus pour contrer les navires lourds et lents à l’aide de torpilles."
 combat_unit_type_scout_cruiser: "Croiseur éclaireur"
 combat_unit_type_scout_cruiser_desc: "Croiseurs légèrement blindés construits pour le service outre-mer."
 combat_unit_type_man_o_war: "Man’o’wars"
 combat_unit_type_man_o_war_desc: "Navire à voiles armé de canons."
 combat_unit_type_ironclad: "Cuirassés"
 combat_unit_type_ironclad_desc: "Propulsé à la vapeur et protégé par un blindage métallique."
 combat_unit_type_monitor: "Monitors"
 combat_unit_type_monitor_desc: "Petit navire transportant de très gros canons, principalement utilisé près des côtes."
 combat_unit_type_dreadnought: "Frégates"
 combat_unit_type_dreadnought_desc: "Navire lourd et de grande taille, doté de plusieurs canons de gros calibre."
 combat_unit_type_battleship: "Navires de guerre"
 combat_unit_type_battleship_desc: "Le navire le plus lourd, armé d’une batterie inégalée de canons de gros calibre."
 combat_unit_type_submarine: "Sous-marins"
 combat_unit_type_submarine_desc: "Navires à moitié immergés et armés de torpilles."
 combat_unit_type_carrier: "Porte-avions"
 combat_unit_type_carrier_desc: "Un navire puissant à partir duquel même les avions peuvent opérer."
 CONVOY_RAIDING_ENEMIES_TOOLTIP: "Réseaux d’approvisionnement hostiles :"
 CONVOY_RAIDING_ENEMIES_TOOLTIP_ENTRY: "[Country.GetName]"
 INVASION_STATUS_WAITING_FOR_FORMATIONS_AT_FRONT: "En attente de l’arrivée des [Concept('concept_military_formation', '$concept_military_formations$')|l] sur le [concept_front|l] de l’[concept_invasion|l]"
 INVASION_STATUS_PREPARING: "En cours de préparation pour l’[concept_invasion|l] ([LabelingHelper.GetDaysLocWithoutTooltip('(int32)$NUM_DAYS$')])"
 INVASION_STATUS_STALLED: "@warning! L’[concept_invasion|l] est #n à l’arrêt#! car aucun [concept_general|l] n’[Concept('concept_advancement_progress', '$advance_gerund$')|l] actuellement sur le [concept_front|l]"
 INVASION_STATUS_TRAVELING_SHORT: "Déploiement des armées"
 INVASION_STATUS_PREPARING_SHORT: "En préparation ([LabelingHelper.GetDaysLocWithoutTooltip(Invasion.GetPreparationDaysLeftRaw)])"
 INVASION_STATUS_ADVANCING_SHORT: "Avance ([Invasion.GetAdvancementProgress|%0v])"
 INVASION_STATUS_SHORT: "[SelectLocalization(Invasion.IsWaiting, 'INVASION_STATUS_TRAVELING_SHORT', SelectLocalization(Invasion.IsPreparing, 'INVASION_STATUS_PREPARING_SHORT', 'INVASION_STATUS_ADVANCING_SHORT'))]"
 NAVAL_BATTLE_MARKER: "$SEA_REGION$"
 INVASION_STATUS_WAITING_FOR_FORMATION_AT_SEA_REGION: "En attente de l’arrivée de la formation [MilitaryFormation.GetName] dans le [concept_sea_node|l] à $REGION_NAME$"
 INVASION_STATUS_WAITING_FOR_MOBILIZATION: "En attente de la mobilisation des forces par la formation [MilitaryFormation.GetName] :\n$JOM_BULLET_WITH_TAB$[MilitaryFormation.GetMobilizationPercentageFormatted]#!"
 INVASION_STATUS_NAVAL_BATTLE: "Combat les [Concept('concept_fleet', '$concept_fleets$')|l] ennemies dans la [Battle.GetName|v]"
 INVASION_STATUS_LAND_BATTLE: "Combat les [Concept('concept_army', '$concept_armies$')|l] ennemies dans la [Battle.GetName|v]"
 INVASION_STATUS_ADVANCING_WITH_PROGRESS: "Tente de prendre le contrôle de [State.GetNameWithCountryFlag] ([concept_advancement_progress] : $ADVANCEMENT|%0v$)"
 INVASION_STATUS_READY_FOR_NAVAL_BATTLE: "Tente de prendre le contrôle du [concept_sea_node|l] en $REGION_NAME$"
 INVASION_STATUS_READY_FOR_LAND_BATTLE: "Tente de prendre le contrôle de [STATE.GetName]"
 NAVAL_INVASION_STALLED_DUE_TO_ORDERS: "L’invasion est à l’arrêt"
 NAVAL_INVASION_STALLED_DUE_TO_ORDERS_TOOLTIP: "#header $NAVAL_INVASION_STALLED_DUE_TO_ORDERS$#!\n$TOOLTIP_DELIMITER$\nL’[concept_naval_invasion|l] ne peut pas progresser car aucun [concept_admiral|l] ne possède d’ordre avec « Interception »"
 WAR_PANEL_PARTICIPANT_DEAD: "[concept_dead] : #variable #N -[WarParticipant.GetNumDead|K-]#!#!"
 WAR_PANEL_PARTICIPANT_WOUNDED: "[concept_wounded] : #variable #N -[WarParticipant.GetNumWounded|K-]#!#!"
 WAR_PANEL_PARTICIPANT_DEAD_TOOLTIP: "#header [concept_dead]#!\n[WarParticipant.GetNumDead|K-] [WarParticipant.GetCountry.GetAltAdjectiveNoFormatting('MP')|U] sont morts dans la #v guerre [War.GetName]#! :\n$TAB$[WarParticipant.GetNumDeadFromBattle|-] dans la [concept_battle|l]\n$TAB$[WarParticipant.GetNumDeadFromAttrition|-] en raison de l’[concept_attrition|l]"
 WAR_PANEL_PARTICIPANT_WOUNDED_TOOLTIP: "#header [concept_wounded]#!\n[WarParticipant.GetNumWounded|K-] [WarParticipant.GetCountry.GetAltAdjectiveNoFormatting('MP')|U] ont été blessés dans la #v guerre [War.GetName]#! :\n$TAB$[WarParticipant.GetNumWoundedFromBattle|-] dans la [concept_battle|l]\n$TAB$[WarParticipant.GetNumWoundedFromAttrition|-] en raison de l’[concept_attrition|l]"
 WOUNDED_BREAKDOWN: "#header Nombre total de [concept_wounded|l] : $NUM|-D$#!\n$TOTALS_HEADER$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 WOUNDED_HEADER_ENTRY_ATTRITION: "De l’[concept_attrition|l] : $NUM|-D$"
 WOUNDED_HEADER_ENTRY_BATTLE: "De la [concept_battle|l] : $NUM|-D$"
 WOUNDED_BREAKDOWN_ENTRY_ATTRITION: "Attrition [Country.GetAltNameNoFormatting('Du')][Country.GetName] : $NUM|-K$"
 WOUNDED_BREAKDOWN_ENTRY_BATTLE: "Bataille [Country.GetAltNameNoFormatting('Du')][Country.GetName] : $NUM|-K$"
 DEAD_BREAKDOWN: "#header Nombre total de [concept_dead|l] : $NUM|-D$#!\n$TOTALS_HEADER$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 DEAD_HEADER_ENTRY_ATTRITION: "De l’[concept_attrition|l] : $NUM|-D$"
 DEAD_HEADER_ENTRY_BATTLE: "De la [concept_battle|l] : $NUM|-D$"
 DEAD_BREAKDOWN_ENTRY_ATTRITION: "Attrition [Country.GetAltNameNoFormatting('Du')][Country.GetName] : $NUM|-K$"
 DEAD_BREAKDOWN_ENTRY_BATTLE: "Bataille [Country.GetAltNameNoFormatting('Du')][Country.GetName] : $NUM|-K$"
 MILITARY_UNITS_PRODUCTION: "#header [SelectLocalization(Building.IsBuildingType('building_naval_base'), Concept('concept_flotilla', '$concept_flotillas$'), Concept('concept_battalion', '$concept_battalions$'))|l]#!\n[Building.GetCombatUnitProduction] [Building.GetState.GetOwner.GetAltNameNoFormatting('Au')][Building.GetState.GetOwner.GetName]\n$TOOLTIP_DELIMITER$\n[Building.GetCombatUnitProductionBreakdown]"
 FLOTILLAS_SOURCES_BREAKDOWN: "De $SOURCE|v$ : #variable $VALUE|0$#!@flotillas!"
 UNITS_HEADER: "#title Unités de combat#!"
 FORMATIONS_PROVIDED_WITH_UNITS: "Formations fournies avec des unités"
 OFFENSE: "[concept_offense]"
 DEFENSE: "[concept_defense]"
 AVERAGE_UNIT_OFFENSE: "#title [concept_offense] moyenne : $VALUE|v0$#!\nL’attaque moyenne des $NUM_UNITS|v0$ [Concept('concept_unit','$concept_units$')|l] en attaque est de $VALUE|v0$."
 AVERAGE_UNIT_DEFENSE: "#title [concept_defense] moyenne : $VALUE|v0$#!\nLa défense moyenne des $NUM_UNITS|v0$ [Concept('concept_unit','$concept_units$')|l] en défense est de $VALUE|v0$."
 COMBAT_UNIT_OFFENSE_FORMATTED: "$VALUE|0v$@unit_offense!"
 COMBAT_UNIT_DEFENSE_FORMATTED: "$VALUE|0v$@unit_defense!"
 COMBAT_UNIT_MANPOWER_TOOLTIP: "$NAME$ a $COMBAT_UNIT_MANPOWER$ hommes disponibles"
 MANPOWER_FORMAT: "$VAL$ @manpower!"
 COMBAT_UNITS_BUILDING_HEADER: "#title #v #tooltippable #tooltip:MILITARY_UNITS_PRODUCTION [Building.GetNumberOfCombatUnits]#!#!#! [SelectLocalization(Building.IsBuildingType('building_naval_base'), 'flottilles @flotillas!', 'bataillons @battalions!')]#!"
 COMBAT_UNIT_BATTLE_TOOLTIP: "Dans la bataille de #variable [CombatUnit.GetBattle.GetName]#!"
 COMBAT_UNIT_MORALE_ONE_DAY_TOOLTIP: "(#variable 1#! jour restant)"
 COMBAT_UNIT_MORALE_DAYS_TOOLTIP: "($DAYS|v$ jours restant)"
 COMMANDER_SUPPLY_TOOLTIP_HEADER: "Approvisionnement de $NAME$ : #$COLOR_STRING$ $VALUE|0%$#!"
 COMMANDER_SUPPLY_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #$COLOR_STRING$ $VALUE|0%$#!#!#!"
 COMMANDER_SUPPLY_ISOLATED: "#R Incapable d’atteindre le [HQ.GetName]#!"
 COMMANDER_SUPPLY_REACH_BY_LAND: "A une route d’approvisionnement terrestre jusqu’au [HQ.GetName]"
 MILITARY_FORMATION_CHARACTER_HEADER: "#title Fait partie de [Character.GetMilitaryFormation.GetName|v](#todo make me tooltippable#!)#!"
 SHIPPING_LANE_CHARACTER_HEADER: "#title [concept_supply_route]#!"
 SHIPPING_LANES_HEADER: "#title [Concept('concept_shipping_lane', '$concept_shipping_lanes$')]#!"
 COMBAT_UNIT_SOURCES_BREAKDOWN_SUPPLY: "#BOLD #$COLOR$ $VALUE|%0$#!#! d’[concept_supply|l]"
 COMBAT_UNIT_SOURCES_BREAKDOWN_VERBOSE: "[GetUnitStrengthHeader( '(int64)$CURRENT$', '(int64)$MAX$', '$ICON$' )] $UNIT_NAME$ de [STATE.GetName] (#BOLD #$MORALE_COLOR$ $MORALE|%0$#!#! [concept_morale|l] et $SUPPLY$)"
 COMBAT_UNIT_SOURCES_BREAKDOWN_CLEAN: "[GetUnitStrengthHeader( '(int64)$CURRENT$', '(int64)$MAX$', '$ICON$' )] $UNIT_NAME$ de [STATE.GetName]"
 COMBAT_UNIT_MOBILIZATION_STATUS_DEMOBILIZED: "[Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_demobilized$')]"
 COMBAT_UNIT_MOBILIZATION_STATUS_DEMOBILIZED_TOOLTIP: "L’unité [CombatUnit.GetName] est actuellement [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_demobilized$e')|l]"
 COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZING: "[Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilizing$')] ([CombatUnit.GetMobilization|v%0])"
 COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZING_TOOLTIP: "L’unité [CombatUnit.GetName] est actuellement [CombatUnit.GetMobilization|v%0] [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$e')|l]"
 COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZED: "[Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$')]"
 COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZED_TOOLTIP: "L’unité [CombatUnit.GetName] est entièrement [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$e')|l]"
 COMBAT_UNIT_BATTALION_CONSCRIPTS: "de conscrits"
 COMBAT_UNIT_BATTALION_NAME_ONE: "$NUM|O$ $ORIGIN$"
 COMBAT_UNIT_BATTALION_NAME_TWO: "$COMBAT_UNIT_TYPE$[ConcatIfNeitherEmpty(' ', '$CONSCRIPT|l$')]"
 COMBAT_UNIT_BATTALION_FULL_NAME: "$COMBAT_UNIT_BATTALION_NAME_ONE$ - $COMBAT_UNIT_BATTALION_NAME_TWO$"
 COMBAT_UNIT_FLOTILLA_NAME_ONE: "[ConcatIfNeitherEmpty('$PREFIX$', ' ')]$NAME$[ConcatIfNeitherEmpty(' ', '$NUM_STR$')]"
 COMBAT_UNIT_FLOTILLA_NAME_TWO: "$BUILDING_PM$"
 COMBAT_UNIT_FLOTILLA_FULL_NAME: "$COMBAT_UNIT_FLOTILLA_NAME_TWO$ $COMBAT_UNIT_FLOTILLA_NAME_ONE$"
 FORMATIONS_NAME: "$NUM|O$ $TYPE$ $COUNTRY_ADJECTIVE$"
 HQ_HEADER: "#title [Concept('concept_hq', 'Quartier général')]#!"
 HQ_HEADER_CHARACTER: "$HQ_HEADER$"
 HQ_HEADER_MILITARY_PANEL: "$HQ_HEADER$"
 HQ_HEADER_EMPTY_HQS: "Quartier général vide"
 FRONT_COUNTRY_COMBATUNITS: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] [Country.GetAltNameNoFormatting('AOnt')] #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $NUM_UNITS|v$#!#!@battalions! sur le [FRONT.GetName|l]"
 FRONT_COUNTRY_COMBATUNITS_TRAVELING: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] [Country.GetAltNameNoFormatting('AOnt')] #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $NUM_UNITS|v$#!#!@battalions! de plus qui se rendent au [FRONT.GetName|l]"
 FRONT_COUNTRY_ARMIES_BREAKDOWN_HEADER: "#header [Concept('concept_army', '$concept_armies$')] [Country.GetAltAdjective('FP')|l] au [Front.GetName|l]#!\n$NUM_UNITS|v$ [Concept('concept_battalion', '$concept_battalions$')|l]@battalions! au total\n$TOOLTIP_DELIMITER$\n"
 FRONT_COUNTRY_ARMIES_BREAKDOWN_HEADER_TRAVELING: "#header [Concept('concept_army', '$concept_armies$')] [Country.GetAltAdjective('FP')|l] voyageant vers le [Front.GetName|l]#!\n$NUM_UNITS|v$ [Concept('concept_battalion', '$concept_battalions$')|l]@battalions! au total\n$TOOLTIP_DELIMITER$\n"
 FRONT_COUNTRY_ARMIES_BREAKDOWN_ENTRY: "#tooltippable #tooltip:[MILITARY_FORMATION.GetTooltipTag],MILITARY_FORMATION_BATTALIONS_TOOLTIP $NUM_BATTALIONS|v$#!#! $FORMATION_NAME$@battalions!"
 FRONT_COUNTRY_ARMIES_BREAKDOWN_ENTRY_TRAVELING: "#tooltippable #tooltip:[MILITARY_FORMATION.GetTooltipTag],MILITARY_FORMATION_BATTALIONS_TOOLTIP $NUM_BATTALIONS|v$#!#! $FORMATION_NAME$@battalions! ($TRAVEL_TIME$ jours)"
 FRONT_PARTICIPANT_ARMIES_BEYOND_FIVE_HEADER: "$NUM_ARMIES|v=$ [Concept('concept_army', '$concept_armies$')|l] supplémentaires à $FRONT_NAME$"
 FRONT_PARTICIPANT_ARMIES_BEYOND_FIVE_ENTRY: "[MILITARY_FORMATION.GetName] - $MOB_STRING$ [Concept('concept_mobilize_battalion','$concept_mobilize_battalion_mobilized_manpower$')|l]@battalions!"
 FRONT_PLAYER_SIDE_COMBATUNITS_TOOLTIP: "#header [FRONT.GetName]#!\n$TOOLTIP_DELIMITER$\nNous :[ConcatIfNeitherEmpty('\n', FRONT.GetPlayerSideCombatUnitsBreakdown)][ConcatIfNeitherEmpty('\n', FRONT.GetPlayerSideCombatUnitsTravelingBreakdown)]\n\nAlliés :[ConcatIfNeitherEmpty('\n', FRONT.GetPlayerSideAlliesCombatUnitsBreakdown)][ConcatIfNeitherEmpty('\n', FRONT.GetPlayerSideAlliesCombatUnitsTravelingBreakdown)]"
 ACTIVE_BATTLES: "[Concept('concept_battle', '$concept_battles$')] en cours"
 ENDED_BATTLES: "[Concept('concept_battle', '$concept_battles$')] terminées"
 ENDED_LAND_BATTLES: "[Concept('concept_battle', '$concept_battles$')] terrestres terminées"
 ENDED_SEA_BATTLES: "[Concept('concept_battle', '$concept_battles$')] maritimes terminées"
 BATTLE_VICTORY: "Victoire !"
 BATTLE_DEFEAT: "Défaite !"
 BATTLE_DRAW: "Ex æquo !"
 BATTLE_INCONCLUSIVE: "Issue indécise !"
 BATTLE_VICTOR: "Vainqueur :"
 BATTLE_TERRAIN: "[concept_terrain] : [Battle.GetTerrain]"
 BATTLE_ADVANCING: "Avance"
 BATTLE_DEFENDING: "Défend"
 BATTLE_OFFENSE_TITLE: "Attaque"
 BATTLE_DEFENSE_TITLE: "Défense"
 ADVANCEMENT_PROGRESS_HEADER: "Avancement"
 SUCCESSFUL_ADVANCE: "#G Attaque réussie#!"
 SUCCESSFUL_DEFENSE: "#G Défense réussie#!"
 FAILED_ADVANCE: "#R Attaque ratée#!"
 FAILED_DEFENSE: "#R Défense ratée#!"
 BATTLE_SIDE_STATUS_ESCAPING: "En fuite"
 BATTLE_SIDE_STATUS_DESC_ESCAPING: "#header [BattleSide.GetCommander.GetFirstName] fuit cette [concept_battle|l] en raison de l’ordre [BattleSide.GetCommander.GetOrderType.GetName]#!\nProgression en cours : $VAL|0%v$\n\n$BATTLE_SIDE_STATUS_COMMANDER_HINT$"
 BATTLE_SIDE_STATUS_DESC_ADVANCING: "#header [BattleSide.GetCommander.GetFirstName] avance dans cette [concept_battle|l]#!\n\n$BATTLE_SIDE_STATUS_COMMANDER_HINT$"
 BATTLE_SIDE_STATUS_DESC_DEFENDING: "#header [BattleSide.GetCommander.GetFirstName] défend dans cette [concept_battle|l]#!\n\n$BATTLE_SIDE_STATUS_COMMANDER_HINT$"
 BATTLE_SIDE_STATUS_COMMANDER_HINT: "@information! Vous pouvez changer l’[concept_order|l] de [Battle.GetCommander.GetFirstName] soit en faisant un clic droit sur [Battle.GetCommander.GetCustom('FR_LuiElle')] ou en allant dans son volet [concept_character|l] ou [concept_military_formation|l]"
 BATTLE_SIDE_OUTCOME_ESCAPED: "#v S’est enfui#!"
 BATTLE_SIDE_OUTCOME_ENEMY_ESCAPED: "#v L’ennemi s’est enfui#!"
 BATTLE_END_ATTACKER_OUTCOME: "[SelectLocalization( Battle.IsWinner( Battle.GetAttacker ), 'SUCCESSFUL_ADVANCE_BATTLE_ITEM', 'FAILED_ADVANCE_BATTLE_ITEM' )]"
 SUCCESSFUL_ADVANCE_BATTLE_ITEM: "Attaque [Battle.GetAttacker.GetAltAdjective('FS')|l] réussie"
 FAILED_ADVANCE_BATTLE_ITEM: "Attaque [Battle.GetAttacker.GetAltAdjective('FS')|l] ratée"
 BATTLE_LAND_MAX_OFFENSE: "@unit_offense! [GetGlobalMaxLandOffense|v0]"
 BATTLE_LAND_MAX_DEFENSE: "@unit_defense! [GetGlobalMaxLandDefense|v0]"
 BATTLE_NAVAL_MAX_OFFENSE: "@unit_offense! [GetGlobalMaxNavalOffense|v0]"
 BATTLE_NAVAL_MAX_DEFENSE: "@unit_defense! [GetGlobalMaxNavalDefense|v0]"
 BATTLE_OFFENSE_TOOLTIP: "#header [concept_offense] moyenne#!\nL’attaque des [SelectLocalization( Battle.IsNavalBattle, '$concept_flotillas$', '$concept_battalions$' )|l] qui attaquent est de @unit_offense! [Battle.GetOffenseRaw|v0].\nL’attaque la plus élevée au monde est de [SelectLocalization( Battle.IsNavalBattle, 'BATTLE_NAVAL_MAX_OFFENSE', 'BATTLE_LAND_MAX_OFFENSE' )]"
 BATTLE_DEFENSE_TOOLTIP: "#header [concept_defense] moyenne#!\nLa défense des [SelectLocalization( Battle.IsNavalBattle, '$concept_flotillas$', '$concept_battalions$' )|l] qui se défendent est de @unit_defense! [Battle.GetDefenseRaw|v0].\nLa défense la plus élevée au monde est de [SelectLocalization( Battle.IsNavalBattle, 'BATTLE_NAVAL_MAX_DEFENSE', 'BATTLE_LAND_MAX_DEFENSE' )]"
 BATTLE_ARMY_OFFENSE_TOOLTIP: "L’attaque moyenne des bataillons qui attaquent est de @unit_offense! [Battle.GetOffenseRaw|v]. L’attaque la plus élevée au monde est de @unit_offense! [GetGlobalMaxLandOffense|v0]"
 BATTLE_ARMY_DEFENSE_TOOLTIP: "La défense moyenne des bataillons qui se défendent est de @unit_defense! [Battle.GetDefenseRaw|v]. La défense la plus élevée au monde est de @unit_defense! [GetGlobalMaxLandDefense|v0]"
 BATTLE_NAVAL_OFFENSE_TOOLTIP: "L’attaque moyenne des flottilles qui attaquent est de @unit_offense! [Battle.GetOffenseRaw|v]. L’attaque la plus élevée au monde est de @unit_offense! [GetGlobalMaxNavalOffense|v0]"
 BATTLE_NAVAL_DEFENSE_TOOLTIP: "La défense moyenne des flottilles qui se défendent est de @unit_defense! [Battle.GetDefenseRaw|v]. La défense la plus élevée au monde est de @unit_defense! [GetGlobalMaxNavalDefense|v0]"
 FRONT_UNITS: "Le nombre d’unités que [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] [COUNTRY.GetAltNameNoFormatting('AOnt')] sur ce front"
 ATTACKING_MEN_STILL_FIGHTING: "Des hommes qui se battent encore : [Battle.CalcCurrentAttackerManpower|v]"
 DEFENDING_MEN_STILL_FIGHTING: "Des hommes qui se battent encore : [Battle.CalcCurrentDefenderManpower|v]"
 WAR_SUPPORT_ATTACKER_SIDE: "#variable [War.GetWarSupport(War.AccessLeftSideLeaderParticipant.GetCountry)|0+=]#!"
 WAR_SUPPORT_DEFENDER_SIDE: "#variable [War.GetWarSupport(War.AccessRightSideLeaderParticipant.GetCountry)|0+=]#!"
 WAR_SUPPORT_LEFT_SIDE: "#variable [War.GetWarSupport(War.AccessLeftSideLeaderParticipant.GetCountry)|0+=]#!"
 WAR_SUPPORT_RIGHT_SIDE: "#variable [War.GetWarSupport(War.AccessRightSideLeaderParticipant.GetCountry)|0+=]#!"
 NO_ALLIES: "Pas d’alliés"
 WAR_LEADER: "[concept_war_leader]"
 WAR_LEFT_SIDE_NUM_BATTALIONS: "[WarPanel.GetLeftAvailableBattalionsRaw|v]/[WarPanel.GetLeftPotentialBattalionsRaw|v]@battalions! ([WarPanel.GetLeftMobilizationRatioRaw|0%]@mobilization!)"
 WAR_LEFT_SIDE_NUM_BATTALIONS_TOOLTIP: "#header [Concept('concept_battalion', '$concept_battalions$')] pour le camp [WarPanel.GetLeftLeader.GetAltAdjective('MS')|l]#!\n[WarPanel.GetLeftAvailableBattalionsRaw|v]@battalions! en tout\n$TOOLTIP_DELIMITER$\n[WarPanel.GetLeftBattalionsBreakdown]"
 WAR_RIGHT_SIDE_NUM_BATTALIONS: "[WarPanel.GetRightAvailableBattalionsRaw|v]/[WarPanel.GetRightPotentialBattalionsRaw|v]@battalions! ([WarPanel.GetRightMobilizationRatioRaw|0%]@mobilization!)"
 WAR_RIGHT_SIDE_NUM_BATTALIONS_TOOLTIP: "#header [Concept('concept_battalion', '$concept_battalions$')] pour le camp [WarPanel.GetRightLeader.GetAltAdjective('MS')|l]#!\n[WarPanel.GetRightAvailableBattalionsRaw|v]@battalions! en tout\n$TOOLTIP_DELIMITER$\n[WarPanel.GetRightBattalionsBreakdown]"
 COUNTRY_ENTRY_BATTALIONS_FORMAT: "[COUNTRY.GetName] : #tooltippable #tooltip:[COUNTRY.GetTooltipTag],PANEL_MILITARY_ARMY_OVERVIEW_TOOLTIP [COUNTRY.GetBattalions|v]#!#!@battalions! (#v [COUNTRY.GetMobilizationRatio|0%]#![AddLocalizationIf(COUNTRY.IsMobilized, '@mobilization!')])"
 WAR_LEADER_LEFT_NUM_BATTALIONS: "#v [WarPanel.GetLeftLeader.GetBattalions]#!@battalions! (#v [WarPanel.GetLeftLeader.GetMobilizationRatio|0%]#![AddLocalizationIf(WarPanel.GetLeftLeader.IsMobilized, '@mobilization!')])"
 WAR_LEADER_RIGHT_NUM_BATTALIONS: "#v [WarPanel.GetRightLeader.GetBattalions]#!@battalions! (#v [WarPanel.GetRightLeader.GetMobilizationRatio|0%]#![AddLocalizationIf(WarPanel.GetRightLeader.IsMobilized, '@mobilization!')])"
 WAR_LEADER_LEFT_NUM_FLOTILLAS: "#v [WarPanel.GetLeftLeader.GetWarships]#!@combat_unit_flotilla!"
 WAR_LEADER_RIGHT_NUM_FLOTILLAS: "@combat_unit_flotilla! #v [WarPanel.GetRightLeader.GetWarships]#!"
 WAR_LEFT_SIDE_NUM_FLOTILLAS: "#variable [WarPanel.GetLeftFlotillasRaw]#! @combat_unit_flotilla!"
 WAR_LEFT_SIDE_NUM_FLOTILLAS_TOOLTIP: "#header [Concept('concept_flotilla', '$concept_flotillas$')] pour le camp [WarPanel.GetLeftLeader.GetAltAdjective('MS')|l]#!\n[WarPanel.GetLeftFlotillasRaw|v]@flotillas! en tout\n$TOOLTIP_DELIMITER$\n[WarPanel.GetLeftFlotillasBreakdown]"
 WAR_RIGHT_SIDE_NUM_FLOTILLAS: "@combat_unit_flotilla! #variable [WarPanel.GetRightFlotillasRaw]#!"
 WAR_RIGHT_SIDE_NUM_FLOTILLAS_TOOLTIP: "#header [Concept('concept_flotilla', '$concept_flotillas$')] pour le camp [WarPanel.GetRightLeader.GetAltAdjective('MS')|l]#!\n[WarPanel.GetRightFlotillasRaw|v]@flotillas! en tout\n$TOOLTIP_DELIMITER$\n[WarPanel.GetRightFlotillasBreakdown]"
 COUNTRY_ENTRY_FLOTILLAS_FORMAT: "@flotillas! #tooltippable #tooltip:[COUNTRY.GetTooltipTag],PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP [COUNTRY.GetWarships|v]#!#! [COUNTRY.GetName]"
 WAR_LEFT_SIDE_DEAD_NUMBER: "#variable [WarPanel.GetLeftDeadRaw|-D]#!"
 WAR_LEFT_SIDE_WOUNDED_NUMBER: "#variable [WarPanel.GetLeftWoundedRaw|-D]#!"
 WAR_RIGHT_SIDE_DEAD_NUMBER: "#variable [WarPanel.GetRightDeadRaw|-D]#!"
 WAR_RIGHT_SIDE_WOUNDED_NUMBER: "#variable [WarPanel.GetRightWoundedRaw|-D]#!"
 COST_OF_WAR: "Coût de la guerre :"
 COST_OF_WAR_LEFT_SIDE_NUMBER: "#variable [WarPanel.GetLeftCostOfWarRaw|-D]@money!#!"
 COST_OF_WAR_RIGHT_SIDE_NUMBER: "#variable [WarPanel.GetRightCostOfWarRaw|-D]@money!#!"
 WAR_ALLIES: "Vos alliés"
 WAR_ENEMIES: "Alliés ennemis"
 WAR_TARGET_ALLIES: "Alliés [Country.GetAltAdjectiveNoFlag('MP')|l]"
 WAR_INITIATOR_ALLIES: "Alliés [Country.GetAltAdjectiveNoFlag('MP')|l]"
 ACTIVE_FRONTS: "[Concept('concept_front', '$concept_fronts$')] actifs"
 FRONT_UNDEFENDED: "#header @warning! Ce [concept_front|l] pourrait être sans défense !#!\n$TOOLTIP_DELIMITER$\nVous n’avez pas d’[Concept('concept_army', '$concept_armies$')|l] présente sur le [Front.GetName|l]. Si aucun de vos alliés n’a d’armée sur ce front, votre ennemi peut avancer sur ce front sans aucune résistance.\n\nSongez à y envoyer une armée avec des bataillons."
 FRONT_SIDE_NUM_UNITS_FORMAT: "#variable #tooltippable #tooltip:$BREAKDOWN_TAG$ $NUM_UNITS$#!#!#!@battalions!"
 FRONT_SIDE_LEFT_NUM_UNITS: "[FrontSide.GetNumUnits|0v]@battalions! des [Concept( 'concept_army', '$concept_armies$' )|l]"
 FRONT_SIDE_FORMATIONS_LEFT_NUM_UNITS: "[Front.GetNumLeftCombatUnitsFromFormationsRaw|0v] @battalions! des formations"
 FRONT_SIDE_RIGHT_NUM_UNITS: "[FrontSide.GetNumUnits|0v]@battalions! des [Concept( 'concept_army', '$concept_armies$' )|l]"
 FRONT_SIDE_FORMATION_RIGHT_NUM_UNITS: "[Front.GetNumRightCombatUnitsFromFormationsRaw|0v] @battalions!"
 FRONT_SIDE_NO_ARMIES: "Aucune [Concept('concept_army', 'armée')|l]"
 FRONT_SIDE_ADVANCING_UNITS_DESC: "#header Les @battalions! avancent#!\n\n$UNITS_BREAKDOWN$"
 FRONT_SIDE_DEFENDING_UNITS_DESC: "#header Les @battalions! défendent#!\n\n$UNITS_BREAKDOWN$"
 FRONT_SIDE_UNIT_ENTRY: "$NUM_UNITS|v$@battalions! de $UNIT_ORIGIN|v$"
 FRONT_SIDE_TOTAL_UNITS: "Total : $NUM_UNITS|v$@battalions!"
 FRONT_COUNTRIES_PRESENT: "Pays présents"
 FRONT_YOUR_SIDE: "Votre camp"
 FRONT_ENEMY_SIDE: "Camp ennemi"
 FRONT_LEFT_ADJECTIVE_SIDE: "Camp [WarPanel.GetLeftLeader.GetAltAdjectiveNoFlag('MS')|l]"
 FRONT_RIGHT_ADJECTIVE_SIDE: "Camp [WarPanel.GetRightLeader.GetAltAdjectiveNoFlag('MS')|l]"
 FRONT_NO_ACTIVE_BATTLES: "Aucune [concept_battle|l] en cours"
 FRONT_NO_ENDED_BATTLES: "Aucune [concept_battle|l] terminée"
 NO_ACTIVE_FRONTS: "Actuellement aucun [concept_front|l] actif"
 FRONT_PANEL_BATTLES: "Batailles"
 FRONT_PRESENT_ARMIES_PLAYER: "#v [GetDataModelSize(Front.GetPlayerSide.GetArmies)]#! [Concept( 'concept_army', '$concept_armies$' )|l] (vous)"
 FRONT_PRESENT_ARMIES_ENEMY: "#v [GetDataModelSize(Front.GetPlayerEnemySide.GetArmies)]#! [Concept( 'concept_army', '$concept_armies$' )|l] (ennemi)"
 FRONT_PRESENT_ARMIES_INITIATOR: "#v [GetDataModelSize(Front.GetInitiatorSide.GetArmies)]#! [Concept( 'concept_army', '$concept_armies$' )|l] (initiateur)"
 FRONT_PRESENT_ARMIES_TARGET: "#v [GetDataModelSize(Front.GetTargetSide.GetArmies)]#! [Concept( 'concept_army', '$concept_armies$' )|l] (cible)"
 SEA_REGION_PANEL_NO_PRESENT_FLEETS: "Aucune [concept_fleet|l] présente dans ce camp"
 SEA_REGION_PANEL_NO_PRESENT_NEUTRAL_FLEETS: "Pas de [concept_fleet|l] neutre présente"
 SEA_REGION_WAR_HEADER: "[SeaRegionWar.GetWar.GetName]"
 NEUTRAL_FLEETS_HEADER: "[Concept( 'concept_fleet', '$concept_fleets$' )] neutres présentes"
 SUPPLY_NETWORK_WAR_HEADER: "[Concept('concept_supply_network', '$concept_supply_networks$')]"
 SUPPLY_NETWORK_COUNTRY: "[SelectLocalization(LessThan_CFixedPoint(Country.GetSupplyNetworkStrength, '(CFixedPoint)1'), '@warning! ', '')]$SUPPLY_NETWORK_STRENGTH_VALUE$ - [Country.GetName]"
 STRENGTH_SUPPLY_TOOLTIP: "Flottilles de ravitaillement [SeaRegionNavalPresence.GetCountry.GetAdjectiveNoFormatting|v] à #BOLD #[GetMoraleColorString( SeaRegionNavalPresence.GetStrength )] [SeaRegionNavalPresence.GetStrength|0%]#!#! des effectifs en [SeaRegionNavalPresence.GetProvince.GetStateRegion.GetName]"
 BATTLE_MORALE_TOOLTIP: "Le moral [BattleParticipant.GetCountry.GetAdjectiveNoFormatting|v] est de #BOLD #[GetMoraleColorString( BattleParticipant.GetMorale )] [BattleParticipant.GetMorale|0%]#!#!"
 BATTLE_MANPOWER_ATTACKER_TOOLTIP: "#header [concept_manpower]#!\nLes [concept_manpower|l] [BattleParticipant.GetCountry.GetAltAdjectiveNoFormatting('MP')|v] sont de #v [Battle.CalcCurrentAttackerManpower]#!@manpower!"
 BATTLE_MANPOWER_DEFENDER_TOOLTIP: "#header [concept_manpower]#!\nLes [concept_manpower|l] [BattleParticipant.GetCountry.GetAltAdjectiveNoFormatting('MP')|v] sont de #v [Battle.CalcCurrentDefenderManpower]#!@manpower!"
 BATTLE_ATTACKER_LIST_NAME: "Unités attaquantes"
 BATTLE_DEFENDER_LIST_NAME: "Unités défenseuses"
 BATTLE_ATTACKER_STARTING_UNITS: "Camp [Battle.GetAttacker.GetAltAdjectiveNoFormatting('MS')|l] : [Battle.GetStartingAttackerUnits|v] @battalions!#!"
 BATTLE_ATTACKER_ENDING_UNITS: "Camp [Battle.GetAttacker.GetAltAdjectiveNoFormatting('MS')|l] : [Battle.GetFinalAttackerUnits|v] @battalions!#!"
 BATTLE_DEFENDER_STARTING_UNITS: "Camp [Battle.GetDefender.GetAltAdjectiveNoFormatting('MS')|l] : [Battle.GetStartingDefenderUnits|v] @battalions!#!"
 BATTLE_DEFENDER_ENDING_UNITS: "Camp [Battle.GetDefender.GetAltAdjectiveNoFormatting('MS')|l] : [Battle.GetFinalDefenderUnits|v] @battalions!#!"
 BATTLE_NO_ATTACKER_MODIFIERS: "Aucun modificateur d’attaquant"
 BATTLE_NO_DEFENDER_MODIFIERS: "Aucun modificateur de défenseur"
 BATTLE_NO_UNITS_UNDER_COMMAND: "Aucune unité sous commandement"
 BATTLE_NO_BORROWED_UNITS: "Aucune unité empruntée"
 BATTLE_BORROWED_UNITS_HEADER: "Unités empruntées"
 BATTLE_ATTACKING_FORMATION_HEADER: "Formation d’attaque"
 BATTLE_DEFENDING_FORMATION_HEADER: "Formation de défense"
 COMBAT_UNIT_CURRENT_LESS_THAN_MAX: "$CURRENT|Kv$/#maximum $MAX|K$#!"
 COMBAT_UNIT_CURRENT_EQUAL_MAX: "$CURRENT|Kv$"
 MANPOWER_PACKAGE_COMMANDER_CE_BREAKDOWN: "#variable [CHARACTER.GetFullName] :#!"
 INTEREST_INACTIVE: "C’est un [concept_inactive_interest|l]"
 INTEREST_ACTIVE: "C’est un [concept_active_interest|l]"
 INTEREST_DECLARED: "C’est un [concept_declared_interest|l]"
 INTEREST_SOURCE_DECLARED: "Maintenu par un [concept_declared_interest|l]"
 INTEREST_SOURCE_OWNED_STATES: "Maintenu par le contrôle territorial de $STATES$"
 INTEREST_SOURCE_SUBJECT_STATES: "Maintenu par le contrôle territorial par un [concept_subject|l] de $STATES$"
 INTEREST_MARKER_TOOLTIP: "#header [concept_interest] [Interest.GetOwner.GetAltAdjectiveNoFormatting('MS')|l] en [Interest.GetStrategicRegion.GetName]#!\n$TOOLTIP_DELIMITER$\n[Interest.GetInterestStatusName][ConcatIfNeitherEmpty('\n',Interest.GetInterestSourceDesc)][ConcatIfNeitherEmpty('\n',Interest.GetProgressBarTooltip)]"
 NO_COUNTRIES_WITH_INTEREST: "Aucun [concept_country|l] n’a de l’[concept_interest|l] pour [StrategicRegion.GetNameNoFormatting]"
 COUNTRIES_WITH_INTEREST: "[Concept('concept_country', '$concept_countries$')] avec de l’[concept_interest|l] pour [StrategicRegion.GetNameNoFormatting] :"
 INTEREST_MARKER_HAS_PP: "La projection de puissance du ou des commandants suivants soutient l’[concept_interest|l] ici :"
 INTEREST_MARKER_PP_COMMANDER: "[CHARACTER.GetFullName]"
 INTEREST_MARKER_NO_UNITS_TOOLTIP: "L’[concept_interest|l] n’est actuellement soutenu par aucun [concept_battalion|l], [concept_power_projection|l] ou #variable $INTEREST_DOMINANT_INTEREST$#!"
 INTEREST_SUPPORTED_BY_DOMINANT: "Est soutenu par [INTEREST.GetInterestStatusName|v] en [INTEREST.GetStrategicRegion.GetName]"
 INTEREST_ICON_TOOLTIP_HAS: "[INTEREST.GetOwner.GetAltNameNoFormatting('Le')|U][INTEREST.GetOwner.GetName] [INTEREST.GetOwner.GetAltNameNoFormatting('AOnt')] un #variable [INTEREST.GetInterestStatusName|l]#! pour [INTEREST.GetStrategicRegion.GetName]\n$TOOLTIP_DELIMITER$"
 INTEREST_ICON_TOOLTIP_HAS_NOT: "[INTEREST.GetOwner.GetAltNameNoFormatting('Le')|U][INTEREST.GetOwner.GetName] [INTEREST.GetOwner.GetAltNameNoFormatting('EstSont')] en train d’établir un [concept_interest|l] pour [INTEREST.GetStrategicRegion.GetName]"
 INTEREST_PROGRESS_ACTIVATING_TOOLTIP: "Progression pour devenir un [concept_active_interest|l] : #variable [INTEREST.GetProgress|%0]#!"
 INTEREST_PROGRESS_DEACTIVATING_TOOLTIP: "Progression pour devenir un [concept_inactive_interest|l] : #variable [INTEREST.GetProgress|%0]#!"
 INTEREST_MAINTAIN_TOOLTIP: "Maintient un #variable [Interest.GetInterestStatusName|l]#!"
 TRADE_OVERVIEW_ENTRY_TOOLTIP_HEADER: "#header $GOODS_NAME$#!\n$TOOLTIP_DELIMITER$"
 TRADE_OVERVIEW_ENTRY_TOOLTIP_MARKET_ENTRY: "\n$MARKET_NAME$ : #variable $VALUE|K$#! (Prix local : #variable $PRICE|1$@money!#!)"
 EXPECTED_SOL_SHORT: "[Concept('concept_expected_sol', '$concept_expected_sol_short$')]"
 SOL_LOWER: "[LabelingHelper.GetLabelForStandardOfLivingNoIconCFixedPointFormatFromExpected(State.GetAverageStandardOfLivingPoor,State.GetExpectedStandardOfLivingPoor)|v]"
 SOL_MIDDLE: "[LabelingHelper.GetLabelForStandardOfLivingNoIconCFixedPointFormatFromExpected(State.GetAverageStandardOfLivingMiddle,State.GetExpectedStandardOfLivingMiddle)|v]"
 SOL_UPPER: "[LabelingHelper.GetLabelForStandardOfLivingNoIconCFixedPointFormatFromExpected(State.GetAverageStandardOfLivingRich,State.GetExpectedStandardOfLivingRich)|v]"
 STANDARD_OF_LIVING_TOOLTIP: "#header [concept_sol]#!\n$TOOLTIP_DELIMITER$\n[concept_sol_desc]"
 AVG_STANDARD_OF_LIVING_POOR: "$AVG_SOL_HEADER$ de la $FR_lower$ en [State.GetName]\n$TOOLTIP_DELIMITER$\nNombre de groupes sociaux : #variable [State.GetNumberOfPopsPoor|*]#!\nMoyenne actuelle : [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetAverageStandardOfLivingPoor)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_SOL_POOR [State.GetAverageStandardOfLivingPoor|1v]#!#!)\n$EXPECTED_SOL_SHORT$ moyen : [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingPoor)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_EXPECTED_SOL_POOR [State.GetExpectedStandardOfLivingPoor|v1]#!#!)"
 AVG_STANDARD_OF_LIVING_MIDDLE: "$AVG_SOL_HEADER$ de la $FR_middle$ en [State.GetName]\n$TOOLTIP_DELIMITER$\nNombre de groupes sociaux : #variable [State.GetNumberOfPopsMiddle|*]#!\nMoyenne actuelle : [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetAverageStandardOfLivingMiddle)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_SOL_MIDDLE [State.GetAverageStandardOfLivingMiddle|1v]#!#!)\n$EXPECTED_SOL_SHORT$ moyen : [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingMiddle)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_EXPECTED_SOL_MIDDLE [State.GetExpectedStandardOfLivingMiddle|v1]#!#!)"
 AVG_STANDARD_OF_LIVING_RICH: "$AVG_SOL_HEADER$ de la $FR_upper$ en [State.GetName]\n$TOOLTIP_DELIMITER$\nNombre de groupes sociaux : #variable [State.GetNumberOfPopsRich|*]#!\nMoyenne actuelle : [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetAverageStandardOfLivingRich)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_SOL_RICH [State.GetAverageStandardOfLivingRich|1v]#!#!)\n$EXPECTED_SOL_SHORT$ moyen : [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingRich)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_EXPECTED_SOL_RICH [State.GetExpectedStandardOfLivingRich|v1]#!#!)"
 SOL_BY_POPULATION_AVERAGE_SHORT: "#title NdV moy. :#!"
 SOL_BY_POPULATION_AVERAGE: "#title [concept_sol] :#!\n[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetAverageSoLByPopulation)|vl] ([Country.GetAverageSoLByPopulation|v1])"
 AVG_STANDARD_OF_LIVING_COUNTRY: "$AVG_SOL_HEADER$ [Country.GetAltNameNoFormatting('En')][Country.GetName]\nMoyenne actuelle : [Country.GetFormattedStandardOfLivingLabelAll|vl] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_SOL_ALL [Country.GetFormattedStandardOfLivingAll|v]#!#!) ([Country.GetStandardOfLivingRanking])\n$EXPECTED_SOL_SHORT$ moyen : [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetExpectedSoLByPopulation)|vl] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_EXPECTED_SOL_ALL [Country.GetExpectedSoLByPopulation|v1]#!#!)\n$TOOLTIP_DELIMITER$\n$COUNTRY_STRATAS_AVG_SOL$"
 COUNTRY_STRATAS_AVG_SOL: "$lower$ : [Country.GetFormattedStandardOfLivingLabelPoor|vl] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_SOL_LOW,CountryStandardOfLivingLower #v [Country.GetFormattedStandardOfLivingPoor]#!#!#!) - ([Concept('concept_expected_sol', '$concept_expected_sol_short$')|l] : #tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_EXPECTED_SOL_LOW [Country.GetExpectedStandardOfLivingPoor|v1]#!#! [LabelingHelper.GetIconForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingPoor)|v])\n$middle$ : #v [Country.GetFormattedStandardOfLivingLabelMiddle|l]#! (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_SOL_MIDDLE,CountryStandardOfLivingMiddle #v [Country.GetFormattedStandardOfLivingMiddle]#!#!#!) - ([Concept('concept_expected_sol', '$concept_expected_sol_short$')|l] : #tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_EXPECTED_SOL_MIDDLE [Country.GetExpectedStandardOfLivingMiddle|v1]#!#! [LabelingHelper.GetIconForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingMiddle)|v])\n$upper$ : #v [Country.GetFormattedStandardOfLivingLabelRich|l]#! (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_SOL_UPPER,CountryStandardOfLivingUpper [Country.GetFormattedStandardOfLivingRich|v]#!#!) - ([Concept('concept_expected_sol', '$concept_expected_sol_short$')|l] : #tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_EXPECTED_SOL_UPPER [Country.GetExpectedStandardOfLivingRich|v1]#!#! [LabelingHelper.GetIconForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingRich)|v])"
 COUNTRY_AVG_STANDARD_OF_LIVING_STRATA: "$STRATA$ : #v $LABEL_FOR_SOL$#! (#tooltippable #tooltip:$TOOLTIP_TAG$ #v $SOL_VALUE|1$#!#!#!)"
 COUNTRY_FACTORS_AFFECTING_STRATA: "#header Niveau de vie de la $STRATA$ [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName]#!\n$ADDITIONAL_FACTORS$"
 AVG_STANDARD_OF_LIVING_COUNTRY_LOWER: "[concept_sol] moyen de la [concept_lower_strata|l] [Country.GetAltNameNoFormatting('Du')][Country.GetName]"
 AVG_STANDARD_OF_LIVING_COUNTRY_MIDDLE: "[concept_sol] moyen de la [concept_middle_strata|l] [Country.GetAltNameNoFormatting('Du')][Country.GetName]"
 AVG_STANDARD_OF_LIVING_COUNTRY_UPPER: "[concept_sol] moyen de la [concept_upper_strata|l] [Country.GetAltNameNoFormatting('Du')][Country.GetName]"
 POPULATION_COUNTRY_LOWER: "[Concept('concept_pop','$concept_population$')] de la [concept_lower_strata|l] [Country.GetAltNameNoFormatting('Du')][Country.GetName]"
 POPULATION_COUNTRY_MIDDLE: "[Concept('concept_pop','$concept_population$')] de la [concept_middle_strata|l] [Country.GetAltNameNoFormatting('Du')][Country.GetName]"
 POPULATION_COUNTRY_UPPER: "[Concept('concept_pop','$concept_population$')] de la [concept_upper_strata|l] [Country.GetAltNameNoFormatting('Du')][Country.GetName]"
 COUNTRY_SOL_ALL_LABEL: "[Country.GetFormattedStandardOfLivingLabelAll] ([Country.GetFormattedStandardOfLivingAll|v])"
 COUNTRY_SOL_LOW_LABEL: "[Country.GetFormattedStandardOfLivingLabelPoor] ([Country.GetFormattedStandardOfLivingPoor|v])"
 COUNTRY_SOL_MIDDLE_LABEL: "[Country.GetFormattedStandardOfLivingLabelMiddle] ([Country.GetFormattedStandardOfLivingMiddle|v])"
 COUNTRY_SOL_UPPER_LABEL: "[Country.GetFormattedStandardOfLivingLabelRich] ([Country.GetFormattedStandardOfLivingRich|v])"
 POPS_OVERVIEW_AVERAGE_INCOME_LOW_LABEL: "@money!Revenu des [PopsOverviewPanel.GetAverageIncomePoor|v1]"
 POPS_OVERVIEW_AVERAGE_INCOME_MIDDLE_LABEL: "@money!Revenu des [PopsOverviewPanel.GetAverageIncomeMiddle|v1]"
 POPS_OVERVIEW_AVERAGE_INCOME_UPPER_LABEL: "@money!Revenu des [PopsOverviewPanel.GetAverageIncomeRich|v1]"
 POPS_OVERVIEW_AVERAGE_INCOME_LOW_LABEL_TOOLTIP: "#header Revenu moyen#!\nCes groupes sociaux gagnent en moyenne [PopsOverviewPanel.GetAverageIncomePoor|v1]@money!"
 POPS_OVERVIEW_AVERAGE_INCOME_MIDDLE_LABEL_TOOLTIP: "#header Revenu moyen#!\nCes groupes sociaux gagnent en moyenne [PopsOverviewPanel.GetAverageIncomeMiddle|v1]@money!"
 POPS_OVERVIEW_AVERAGE_INCOME_UPPER_LABEL_TOOLTIP: "#header Revenu moyen#!\nCes groupes sociaux gagnent en moyenne [PopsOverviewPanel.GetAverageIncomeRich|v1]@money!"
 POPS_OVERVIEW_TAX_BURDEN_LOW_LABEL: "Impôts des [PopsOverviewPanel.GetTaxBurdenPoor|v1%]"
 POPS_OVERVIEW_TAX_BURDEN_MIDDLE_LABEL: "Impôts des [PopsOverviewPanel.GetTaxBurdenMiddle|v1%]"
 POPS_OVERVIEW_TAX_BURDEN_UPPER_LABEL: "Impôts des [PopsOverviewPanel.GetTaxBurdenRich|v1%]"
 POPS_OVERVIEW_TAX_BURDEN_LOW_LABEL_TOOLTIP: "#header Impôts#!\nCes groupes sociaux paient en moyenne [PopsOverviewPanel.GetTaxBurdenPoor|v1%] de leurs revenus en impôts"
 POPS_OVERVIEW_TAX_BURDEN_MIDDLE_LABEL_TOOLTIP: "#header Impôts#!\nCes groupes sociaux paient en moyenne [PopsOverviewPanel.GetTaxBurdenMiddle|v1%] de leurs revenus en impôts"
 POPS_OVERVIEW_TAX_BURDEN_UPPER_LABEL_TOOLTIP: "#header Impôts#!\nCes groupes sociaux paient en moyenne [PopsOverviewPanel.GetTaxBurdenRich|v1%] de leurs revenus en impôts"
 TAX_BURDEN_TYPE_INCOME: "$BUDGET_INCOME_TAXES$"
 TAX_BURDEN_TYPE_CONSUMPTION: "$BUDGET_CONSUMPTION_TAXES$"
 TAX_BURDEN_TYPE_DIVIDEND: "$BUDGET_DIVIDENDS_TAXES$"
 TAX_BURDEN_TYPE_POLL: "$BUDGET_POLL_TAXES$"
 TAX_BURDEN_ITEM_LABEL: "[TaxBurdenItem.GetValue|v1%]"
 TAX_BURDEN_ITEM_LABEL_TOOLTIP: "#header [TaxBurdenItem.GetTaxType]#!\nCes groupes sociaux paient en moyenne [TaxBurdenItem.GetValue|v1%] de leurs revenus en [TaxBurdenItem.GetTaxType]"
 POPS_OVERVIEW_GOODS_EXPENSES_LOW_LABEL: "Besoins des [PopsOverviewPanel.GetGoodsExpensesPoor|v1%]"
 POPS_OVERVIEW_GOODS_EXPENSES_MIDDLE_LABEL: "Besoins des [PopsOverviewPanel.GetGoodsExpensesMiddle|v1%]"
 POPS_OVERVIEW_GOODS_EXPENSES_UPPER_LABEL: "Besoins des [PopsOverviewPanel.GetGoodsExpensesRich|v1%]"
 POPS_OVERVIEW_GOODS_EXPENSES_LOW_LABEL_TOOLTIP: "#header Besoins#!\nCes groupes sociaux dépensent en moyenne [PopsOverviewPanel.GetGoodsExpensesPoor|v1%] de leurs revenus pour leurs besoins"
 POPS_OVERVIEW_GOODS_EXPENSES_MIDDLE_LABEL_TOOLTIP: "#header Besoins#!\nCes groupes sociaux dépensent en moyenne [PopsOverviewPanel.GetGoodsExpensesMiddle|v1%] de leurs revenus pour leurs besoins"
 POPS_OVERVIEW_GOODS_EXPENSES_UPPER_LABEL_TOOLTIP: "#header Besoins#!\nCes groupes sociaux dépensent en moyenne [PopsOverviewPanel.GetGoodsExpensesRich|v1%] de leurs revenus pour leurs besoins"
 GOODS_EXPENSE_ITEM_LABEL: "[GoodsExpenseItem.GetExpenseRatio|v1%]"
 GOODS_EXPENSE_ITEM_TOOLTIP: "#header [Goods.GetName][Nbsp][Goods.GetTextIcon]#!\nCes groupes sociaux dépensent en moyenne [GoodsExpenseItem.GetExpenseRatio|v1%] de leurs revenus nets pour [Goods.GetCustom('FR_Goods_Du')][Goods.GetName|l]. Le prix moyen est de [GoodsExpenseItem.GetPrice|v1]@money! #tooltippable #tooltip:COIN_STACK_TOOLTIP [LabelingHelper.GetPriceCompareIcon(GoodsExpenseItem.GetRelativePriceDiff)]#!#!, à savoir [GoodsExpenseItem.GetRelativePriceDiff|=-%1] par rapport au prix de base du bien"
 POPS_OVERVIEW_REMAINDER_POOR: "#v [PopsOverviewPanel.GetIncomeRemainderPoor|%=+1]#! [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderPoor, '(CFixedPoint)0'), 'd’excédent', 'de déficit')]"
 POPS_OVERVIEW_REMAINDER_MIDDLE: "#v [PopsOverviewPanel.GetIncomeRemainderMiddle|%=+1]#! [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderMiddle, '(CFixedPoint)0'), 'd’excédent', 'de déficit')]"
 POPS_OVERVIEW_REMAINDER_RICH: "#v [PopsOverviewPanel.GetIncomeRemainderRich|%=+1]#! [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderRich, '(CFixedPoint)0'), 'd’excédent', 'de déficit')]"
 POPS_OVERVIEW_REMAINDER_POOR_TOOLTIP: "#header Tendance du niveau de vie#!\n#v [PopsOverviewPanel.GetIncomeRemainderPoor|%=+1]#! de [PopsOverviewPanel.GetAverageIncomePoor|v1]@money! participent à [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderPoor, '(CFixedPoint)0'), 'l’augmentation', 'la diminution')] du niveau de vie moyen de ces groupes sociaux"
 POPS_OVERVIEW_REMAINDER_MIDDLE_TOOLTIP: "#header Tendance du niveau de vie#!\n#v [PopsOverviewPanel.GetIncomeRemainderMiddle|%=+1]#! de [PopsOverviewPanel.GetAverageIncomeMiddle|v1]@money! participent à [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderMiddle, '(CFixedPoint)0'), 'l’augmentation', 'la diminution')] du niveau de vie moyen de ces groupes sociaux"
 POPS_OVERVIEW_REMAINDER_RICH_TOOLTIP: "#header Tendance du niveau de vie#!\n#v [PopsOverviewPanel.GetIncomeRemainderRich|%=+1]#! de [PopsOverviewPanel.GetAverageIncomeRich|v1]@money! participent à [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderRich, '(CFixedPoint)0'), 'l’augmentation', 'la diminution')] du niveau de vie moyen de ces groupes sociaux"
 COUNTRY_SOL_ALL: "#header [concept_sol] moyen de tous les [Concept('concept_pop', '$concept_pops$')|l] [Country.GetAltNameNoFormatting('En')][Country.GetName]#!\n#v [Country.GetFormattedStandardOfLivingLabelAll] ([Country.GetFormattedStandardOfLivingAll]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetAdditionalSOLFactorsDescAll]"
 COUNTRY_SOL_LOW: "#header [concept_sol] de la [concept_lower_strata|l] [Country.GetAltAdjective('FS')]#!\n[GetTrendValue(Country.GetLowerStrataPopulationTrend)|vD] [Concept('concept_pop', '$concept_pops$')|l] avec un niveau de vie moyen de #v [Country.GetFormattedStandardOfLivingLabelPoor] ([Country.GetFormattedStandardOfLivingPoor]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetAdditionalSOLFactorsDescPoor]"
 COUNTRY_SOL_MIDDLE: "#header [concept_sol] de la [concept_middle_strata|l] [Country.GetAltAdjective('FS')]#!\n[GetTrendValue(Country.GetMiddleStrataPopulationTrend)|vD] [Concept('concept_pop', '$concept_pops$')|l] avec un niveau de vie moyen de #v [Country.GetFormattedStandardOfLivingLabelMiddle] ([Country.GetFormattedStandardOfLivingMiddle]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetAdditionalSOLFactorsDescMiddle]"
 COUNTRY_SOL_UPPER: "#header [concept_sol] de la [concept_upper_strata|l] [Country.GetAltAdjective('FS')]#!\n[GetTrendValue(Country.GetUpperStrataPopulationTrend)|vD] [Concept('concept_pop', '$concept_pops$')|l] avec un niveau de vie moyen de #v [Country.GetFormattedStandardOfLivingLabelRich] ([Country.GetFormattedStandardOfLivingRich]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetAdditionalSOLFactorsDescRich]"
 COUNTRY_EXPECTED_SOL_ALL: "#header [concept_expected_sol] moyen de tous les [Concept('concept_pop', '$concept_pops$')|l] [Country.GetAltNameNoFormatting('En')][Country.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetExpectedSoLByPopulation)] ([Country.GetExpectedSoLByPopulation|1]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetExpectedSOLFactorsDescAll]"
 COUNTRY_EXPECTED_SOL_LOW: "#header [concept_expected_sol] moyen de la [concept_lower_strata|l] [Country.GetAltNameNoFormatting('En')][Country.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingPoor)] ([Country.GetExpectedStandardOfLivingPoor|1]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetExpectedSOLFactorsDescPoor]"
 COUNTRY_EXPECTED_SOL_MIDDLE: "#header [concept_expected_sol] moyen de la [concept_middle_strata|l] [Country.GetAltNameNoFormatting('En')][Country.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingMiddle)] ([Country.GetExpectedStandardOfLivingMiddle|1]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetExpectedSOLFactorsDescMiddle]"
 COUNTRY_EXPECTED_SOL_UPPER: "#header [concept_expected_sol] moyen de la [concept_upper_strata|l] [Country.GetAltNameNoFormatting('En')][Country.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingRich)] ([Country.GetExpectedStandardOfLivingRich|1]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetExpectedSOLFactorsDescRich]"
 CULTURE_GLOBAL_AVG_STANDARD_OF_LIVING: "[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Culture.CalcAvgSoL)|v] (#v [Culture.CalcAvgSoL|1]#!)"
 CULTURE_GLOBAL_AVG_STANDARD_OF_LIVING_LOWER_CLASS: "[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Culture.CalcAvgSoLForPoor)|v] (#v [Culture.CalcAvgSoLForPoor|1]#!)"
 CULTURE_GLOBAL_AVG_STANDARD_OF_LIVING_MIDDLE_CLASS: "[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Culture.CalcAvgSoLForMiddle)|v] (#v [Culture.CalcAvgSoLForMiddle|1]#!)"
 CULTURE_GLOBAL_AVG_STANDARD_OF_LIVING_UPPER_CLASS: "[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Culture.CalcAvgSoLForRich)|v] (#v [Culture.CalcAvgSoLForRich|1]#!)"
 FACTORS_AFFECTING_SOL_GLOBALLY: ""
 GLOBAL_FACTORS_AFFECTING_POOR: ""
 GLOBAL_FACTORS_AFFECTING_MIDDLE: ""
 GLOBAL_FACTORS_AFFECTING_RICH: ""
 GLOBAL_AVERAGE_HEADER: "#bold Moyenne mondiale :#!"
 GLOBAL_CLASS_AVERAGE_HEADER: "#bold Moyenne de la classe mondiale :#!"
 COUNTRY_AVERAGE_HEADER: "#bold Moyenne [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName] :#!"
 COUNTRY_CLASS_AVERAGE_HEADER: "#bold Moyenne des classes [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName] :#!"
 GLOBAL_AVG_STANDARD_OF_LIVING_TOOLTIP: "[concept_sol] moyen de tous les [Concept('concept_pop', '$concept_pops$')|l] de [concept_culture|l] [Culture.GetName|l] dans le monde"
 GLOBAL_AVG_STANDARD_OF_LIVING_LOWER_TOOLTIP: "[concept_sol] moyen de tous les [Concept('concept_pop', '$concept_pops$')|l] de la [concept_lower_strata|l] de [concept_culture|l] [Culture.GetName|l] dans le monde"
 GLOBAL_AVG_STANDARD_OF_LIVING_MIDDLE_TOOLTIP: "[concept_sol] moyen de tous les [Concept('concept_pop', '$concept_pops$')|l] de la [concept_middle_strata|l] de [concept_culture|l] [Culture.GetName] dans le monde"
 GLOBAL_AVG_STANDARD_OF_LIVING_UPPER_TOOLTIP: "[concept_sol] moyen de tous les [Concept('concept_pop', '$concept_pops$')|l] de la [concept_upper_strata|l] de [concept_culture|l] [Culture.GetName] dans le monde"
 COUNTRY_AVG_STANDARD_OF_LIVING_TOOLTIP: "[concept_sol] moyen de tous les [Concept('concept_pop', '$concept_pops$')|l] de [concept_culture|l] [Culture.GetName|l] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName]"
 COUNTRY_AVG_STANDARD_OF_LIVING_LOWER_TOOLTIP: "[concept_sol] moyen de tous les [Concept('concept_pop', '$concept_pops$')|l] de la [concept_lower_strata|l] de [concept_culture|l] [Culture.GetName|l] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName]"
 COUNTRY_AVG_STANDARD_OF_LIVING_MIDDLE_TOOLTIP: "[concept_sol] moyen de tous les [Concept('concept_pop', '$concept_pops$')|l] de la [concept_middle_strata|l] de [concept_culture|l] [Culture.GetName|l] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName]"
 COUNTRY_AVG_STANDARD_OF_LIVING_UPPER_TOOLTIP: "[concept_sol] moyen de tous les [Concept('concept_pop', '$concept_pops$')|l] de la [concept_upper_strata|l] de [concept_culture|l] [Culture.GetName|l] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName]"
 CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING: "#v [GetPlayer.GetFormattedStandardOfLivingLabelAllWithCulture(Culture.Self)]#! (#tooltippable #tooltip:[Culture.GetTooltipTag],FACTORS_AFFECTING_SOL_COUNTRY_CULTURE #v [GetPlayer.GetFormattedStandardOfLivingAllWithCulture(Culture.Self)]#!#!#!)"
 CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING_LOWER_CLASS: "#v [GetPlayer.GetFormattedStandardOfLivingLabelPoorWithCulture(Culture.Self)]#! (#tooltippable #tooltip:[Culture.GetTooltipTag],COUNTRY_CULTURE_FACTORS_AFFECTING_POOR #v [GetPlayer.GetFormattedStandardOfLivingPoorWithCulture(Culture.Self)]#!#!#!)"
 CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING_MIDDLE_CLASS: "#v [GetPlayer.GetFormattedStandardOfLivingLabelMiddleWithCulture(Culture.Self)]#! (#tooltippable #tooltip:[Culture.GetTooltipTag],COUNTRY_CULTURE_FACTORS_AFFECTING_MIDDLE #v [GetPlayer.GetFormattedStandardOfLivingMiddleWithCulture(Culture.Self)]#!#!#!)"
 CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING_UPPER_CLASS: "[GetPlayer.GetFormattedStandardOfLivingLabelRichWithCulture(Culture.Self)|v] (#tooltippable #tooltip:[Culture.GetTooltipTag],COUNTRY_CULTURE_FACTORS_AFFECTING_RICH #v [GetPlayer.GetFormattedStandardOfLivingRichWithCulture(Culture.Self)]#!#!#!)"
 FACTORS_AFFECTING_SOL_COUNTRY: "#title Facteurs affectant le [concept_sol|l] [Country.GetAltNameNoFormatting('Au')][Country.GetName]#!\n[Country.GetAdditionalSOLFactorsDesc]"
 COUNTRY_AVG_STANDARD_OF_LIVING_POOR: "$lower$ : [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetAverageStandardOfLivingPoor)|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_FACTORS_AFFECTING_POOR #v [Country.GetAverageStandardOfLivingPoor|1]#!#!#!)"
 COUNTRY_FACTORS_AFFECTING_POOR: "Facteurs affectant la $FR_lower$ :\n[Country.GetAdditionalSOLFactorsDescPoor]"
 COUNTRY_AVG_STANDARD_OF_LIVING_MIDDLE: "$middle$ : [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetAverageStandardOfLivingMiddle)|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_FACTORS_AFFECTING_MIDDLE #v [Country.GetAverageStandardOfLivingMiddle|1]#!#!#!)"
 COUNTRY_FACTORS_AFFECTING_MIDDLE: "Facteurs affectant la $FR_middle$ :\n[Country.GetAdditionalSOLFactorsDescMiddle]"
 COUNTRY_AVG_STANDARD_OF_LIVING_RICH: "$upper$ : [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetAverageStandardOfLivingRich)|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_FACTORS_AFFECTING_RICH #v [Country.GetAverageStandardOfLivingRich|1]#!#!#!)"
 COUNTRY_FACTORS_AFFECTING_RICH: "Facteurs affectant la $FR_upper$ :\n[Country.GetAdditionalSOLFactorsDescRich]"
 FACTORS_AFFECTING_SOL_COUNTRY_CULTURE: "#title Facteurs affectant le [concept_sol|l] pour la culture [Culture.GetName|l] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName]#!\n[GetPlayer.GetAdditionalSOLFactorsDescWithCulture(Culture.Self)]"
 COUNTRY_CULTURE_FACTORS_AFFECTING_POOR: "Facteurs affectant la $FR_lower$ pour la culture [Culture.GetName|l] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName] :\n[GetPlayer.GetAdditionalSOLFactorsDescWithCulturePoor(Culture.Self)]"
 COUNTRY_CULTURE_FACTORS_AFFECTING_MIDDLE: "Facteurs affectant la $FR_middle$ pour la culture [Culture.GetName|l] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName] :\n[GetPlayer.GetAdditionalSOLFactorsDescWithCultureMiddle(Culture.Self)]"
 COUNTRY_CULTURE_FACTORS_AFFECTING_RICH: "Facteurs affectant la $FR_upper$ pour la culture [Culture.GetName|l] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName] :\n[GetPlayer.GetAdditionalSOLFactorsDescWithCultureRich(Culture.Self)]"
 SOL_BY_CLOUT_AVERAGE: "#title [concept_sol] (par poids politique) :#!\n[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetAverageSoLByPoliticalStrength)|v] ([Country.GetAverageSoLByPoliticalStrength|v])"
 AVG_SOL_HEADER: "#header [concept_sol]#!"
 OVERVIEW: "Vue d’ensemble"
 GOVERNMENT: "Gouvernement"
 INTEREST_GROUPS: "[Concept('concept_interest_group', '$concept_interest_groups$')]"
 LAWS: "Lois"
 INSTITUTIONS: "Institutions"
 REFORM_GOVERNMENT: "Réformer le gouvernement"
 EXIT_REFORM_GOVERNMENT: "Quitter la réforme du gouvernement"
 REFORM_GOVERNMENT_CIVIL_WAR_ERROR: "@red_cross! [Country.GetAltNameNoFormatting('Le')|U][Country.GetName] [Country.GetAltNameNoFormatting('EstSont')] en [concept_civil_war|l]"
 REFORM_GOVERNMENT_MOVE_TO_GOVERNMENT_BUTTON_TOOLTIP: "@red_cross! [InterestGroup.GetName] soutient une [concept_revolution|l] en cours"
 IN_OPPOSITION_TITLE: "#title Opposition#!"
 IN_GOVERNMENT_TITLE: "#title Gouvernement#!"
 ELECTION_TITLE: "#title Élections#!"
 MARGINAL_TITLE: "#title [Concept('concept_interest_group', '$concept_interest_groups$')] [Concept('concept_marginalized', 'marginalisés')|l]#!"
 MARGINAL_TITLE_ACCORDION: "[Concept('concept_interest_group', '$concept_interest_groups$')] [Concept('concept_marginalized', 'marginalisés')|l] (#v [GetDataModelSize( AccessPlayer.AccessMarginalInterestGroups)]#!)"
 LAWS_TITLE: "#title [Concept('concept_law', '$concept_laws$')] promulguées#!"
 ABOLISHED_LAWS_TITLE: "#title [Concept('concept_law', '$concept_laws$')] abolies#!"
 STATE_TITLE: "#title [concept_state]#!"
 STATE_EXPLAINER: "#header État#!\n#instruction Cliquez pour trier en fonction du nom de l’[concept_state].#!"
 AVERAGE_POP_WAGE_EXPLAINER: "#header Salaire moyen des [Concept('concept_pop', '$concept_pops$')|l]#!\n#instruction Cliquez pour trier en fonction du salaire moyen des groupes sociaux dans l’[concept_state].#!"
 EXPENSES_EXPLAINER: "#header Dépenses#!\n#instruction Cliquez pour trier les dépenses totales pour cet [concept_state].#!"
 STATE_INCOME_TAX_REVENUE_EXPLAINER: "#header Revenu des impôts#!\n#instruction Cliquez pour trier le revenu total des impôts dans l’[concept_state].#!"
 TAX_CAPACITY_USAGE: "#header Utilisation de la [concept_tax_capacity|l]#!\n[State.GetName] en utilise $USAGE|1v$\n$TOOLTIP_DELIMITER$\nUn point de [concept_tax_capacity|l] est requis tous les $POPS_PER_CAPACITY|vK$ [Concept('concept_pop', '$concept_pops$')|l] et [State.GetName] a une population totale de $TOTAL_POPS|vK$"
 STATE_TAX_CAPACITY: "[concept_tax_capacity]\n$STATE_TAX_CAPACITY_CONDENSED$"
 STATE_TAX_CAPACITY_BUILDING: "#header [concept_tax_capacity] en [Building.GetState.GetName]#!\n$STATE_TAX_CAPACITY_CONDENSED$"
 STATE_TAX_CAPACITY_DESC: "#header [concept_tax_capacity]#!\nLe solde de la capacité d’imposition en [State.GetName] est de [State.CalcTaxCapacityBalance|1+=]\n$TOOLTIP_DELIMITER$\n$concept_tax_capacity$ : #tooltippable #tooltip:[State.GetTooltipTag],STATE_TAX_CAPACITY_TOOLTIP [State.CalcTaxCapacity|1+]#!#!\nUtilisation de la capacité d’imposition : #tooltippable #tooltip:[State.GetTooltipTag],STATE_TAX_CAPACITY_USAGE_TOOLTIP [State.CalcTaxCapacityUsage|1-]#!#![SelectLocalization(GreaterThan_CFixedPoint(State.CalcTaxCapacityUsage, State.CalcTaxCapacity), 'STATE_TAX_CAPACITY_INSUFFICIENT_LONG', '')]"
 STATE_TAX_CAPACITY_USAGE_TOOLTIP: "[State.GetTaxCapacityUsageDesc]"
 STATE_TAX_CAPACITY_TOOLTIP: "#header [concept_tax_capacity]#!\n[State.GetName] a une [concept_tax_capacity|l] de [State.CalcTaxCapacity|+0]\n$TOOLTIP_DELIMITER$\n[State.GetTaxCapacityDesc]"
 STATE_TAX_CAPACITY_INSUFFICIENT: "\n[State.GetTaxCapacityEffectsDesc]"
 STATE_TAX_CAPACITY_INSUFFICIENT_LONG: "\n\n@warning! Étant donné que l’utilisation est supérieure à la capacité, les effets suivants sont appliqués à l’[concept_state] :\n[State.GetTaxCapacityEffectsDesc]"
 EVENT_OPTION_TOOLTIP: "#header « [EventOption.GetText] »#!\n$TOOLTIP_DELIMITER$\n[EventOption.GetDesc]"
 POP_VOTING_POWER_WEALTH_TOO_LOW: "@warning! N’a pas le droit de voter en raison de la [concept_wealth|l] de $WEALTH|v0$ sous le seuil de $THRESHOLD|v0$\n$TAB$$BREAKDOWN$"
 POP_VOTING_POWER_WEALTH_SUFFICIENT: "$WEALTH|v0$ de [concept_wealth|l] atteint le seuil d’admissibilité au vote de $THRESHOLD|v0$\n$TAB$$BREAKDOWN$"
 POP_VOTING_POWER_POPULATION: "x$NUM|v0$ électeurs potentiellement éligibles"
 POP_VOTING_INCORPORATION_LEVEL: "x$INCORPORATION|v%$ d’[Concept('concept_incorporated_state','$concept_incorporation$')|l] de [State.GetName]"
 POP_VOTING_POWER: "Nombre de [concept_votes|l] : #v $VAL|+D0$#!\n$BREAKDOWN$"
 DOES_NOT_ALLOW_ELECTIONS: "Le [concept_government_type|l] actuel n’autorise pas d’[concept_election|l]"
 NEXT_ELECTION_DATE: "[concept_election] suivante : [AccessPlayer.GetNextElectionDate|v]"
 PREVIOUS_ELECTION_RESULTS: "Résultats de la précédente [concept_election|l]"
 PARTY_ELECTION_TOOLTIP: "Les candidats de [Party.GetNameNoFormatting|v] ont obtenu [Party.GetCurrentVotingPowerShare|%1v] des [concept_votes|l] à la dernière [concept_election|l]"
 ELECTION_ENTRY: "#header [Party.GetName] [Party.GetMembersSummary]#!\n[concept_votes] : $VOTING_POWER_SHARE|%1v$"
 ELECTION_POLL_ENTRY: "$ELECTION_ENTRY$\n[concept_momentum] : #tooltippable #tooltip:[Party.GetTooltipTag],MOMENTUM_BREAKDOWN [Party.GetMomentum|%=+0]#!#!\n\n"
 MOMENTUM_BREAKDOWN: "[Party.GetMomentumDesc]"
 IG_ELECTION_MOMENTUM: "#header [concept_momentum]#!\nValeur actuelle : $MOMENTUM|%=+0$\n$TOOLTIP_DELIMITER$\nUne valeur qui est aléatoire au début de l’élection + des changements à partir des événements : $RAW|%=+0$[ConcatIfNeitherEmpty(SelectLocalization(Not(EqualTo_CFixedPoint(Character.GetPopularity, '(CFixedPoint)0')),'CHARACTER_POPULARITY_HEADER',''), '$POPULARITY_ADJUSTMENT|%=+0$')]"
 CHARACTER_POPULARITY_HEADER: "\nAjustement de la [concept_popularity|l] de [Character.GetFullName] : "
 CHARACTER_POPULARITY: "#v [LabelingHelper.GetLabelForPopularityCFixedPoint(Character.GetPopularity)]#! (#v [Character.GetPopularity|+0]#!)"
 CHARACTER_POPULARITY_LABEL: "[concept_popularity] : #v #tooltippable #tooltip:[Character.GetTooltipTag],POPULARITY_BREAKDOWN [LabelingHelper.GetLabelForPopularityCFixedPoint(Character.GetPopularity)]#!#!#! (#v #tooltippable #tooltip:[Character.GetTooltipTag],POPULARITY_BREAKDOWN [Character.GetPopularity|+0]#!#!#!)"
 POPULARITY: "[concept_popularity]"
 POPULARITY_ICON: "@popularity! [concept_popularity]"
 IDEOLOGY_CONCEPT: "[concept_ideology]"
 CHARACTER_IDEOLOGY: "#v [Ideology.GetNameNoFormatting]#!"
 RELIGION: "[concept_religion]"
 CHARACTER_RELIGION: "#v [Religion.GetNameNoFormatting]#!"
 CHARACTER_PANEL_CULTURE_LABEL: "[concept_culture]"
 CHARACTER_CULTURE: "#v [Culture.GetNameNoFormatting]#!"
 CHARACTER_INTEREST_GROUP_OR_LEADER: "[SelectLocalization(Character.IsIGLeader, 'CHARACTER_INTEREST_GROUP_LEADER', 'CHARACTER_INTEREST_GROUP')]"
 CHARACTER_INTEREST_GROUP_LEADER: "[concept_leader] du [concept_interest_group|l]"
 CHARACTER_INTEREST_GROUP: "[concept_interest_group]"
 CHARACTER_PANEL_TAB_OVERVIEW: "Vue d’ensemble"
 CHARACTER_PANEL_TAB_OVERVIEW_SELECTED: "#b Vue d’ensemble#!"
 CHARACTER_PANEL_TAB_MODIFIERS: "Modificateurs"
 CHARACTER_PANEL_TAB_MODIFIERS_SELECTED: "#b Modificateurs#!"
 CHARACTER_PANEL_TRAITS_HEADER: "Traits de personnage"
 JOURNAL_ENTRY_PROGRESSBAR_FROM_ZERO: "Progression : [JournalEntry.GetGoalProgressPercent|%1v] ([JournalEntry.GetGoalProgressValue|D]/[JournalEntry.GetTotalGoalValue|D])"
 JOURNAL_ENTRY_PROGRESSBAR_FROM_BASE: "Progression : [JournalEntry.GetGoalProgressPercent|%1v] ([JournalEntry.GetBaselineValue|D][JournalEntry.GetGoalProgressValue|D=v]/[JournalEntry.GetTotalGoalValue|D])"
 JOURNAL_ENTRY_PROGRESSBAR_MONTHS: "[LabelingHelper.GetMultiTypeGameTimeDifferenceFromMonths( FixedPointToInt( JournalEntry.GetRemainingProgressValue ), '(int32)2', '' )] restant"
 JOURNAL_ENTRY_PROGRESSBAR_WEEKS: "[LabelingHelper.GetMultiTypeGameTimeDifferenceFromWeeks( FixedPointToInt( JournalEntry.GetRemainingProgressValue ), '(int32)2', '' )] restant"
 URBANIZATION_TOOLTIP: "#header [concept_urbanization]#!\nTotal : #tooltippable #tooltip:[State.GetTooltipTag],URBANIZATION_BREAKDOWN [State.GetUrbanization|v]#!#!\n$TOOLTIP_DELIMITER$\nTous les [State.GetUrbanizationNeededPerLevelFormatted] d’[concept_urbanization|l] donneront #b +1#! [GetBuildingType('building_urban_center').GetName|l] pour l’[concept_state]"
 URBANIZATION_BREAKDOWN: "#header [concept_urbanization] en [State.GetName]#!\nTotal : [State.GetUrbanization|v]\nUn niveau de [GetBuildingType('building_urban_center').GetName|l] est créé tous les [State.GetUrbanizationNeededPerLevelRaw|v] d’[concept_urbanization|l] dans l’[concept_state]\n$TOOLTIP_DELIMITER$\n[State.GetUrbanizationDesc]"
 LAND_TEXT: "[concept_arable_land] : [State.GetNumFreeArableLand|v]"
 LAND_TEXT_TOOLTIP: "#header [concept_arable_land]#!\ndisponible : [State.GetNumFreeArableLand|v][ConcatIfNeitherEmpty( '\n', State.GetFreeArableLandAfterInactiveQueuedEntry )]\n$TOOLTIP_DELIMITER$\n$LAND_TEXT_TOOLTIP_BREAKDOWN$\n\n$LAND_TEXT_TOOLTIP_CONCEPT$"
 LAND_TEXT_TOOLTIP_AFTER_INACTIVE_QUEUED: "Après la fin de la [concept_construction_queue|l] : $VALUE|v$"
 LAND_TEXT_TOOLTIP_BREAKDOWN: "[State.GetArableLandCapacity|v=] de la géographie locale[ConcatIfNeitherEmpty( '\n', State.GetNumUsedArableLandFullyBuiltEntry )][ConcatIfNeitherEmpty( '\n', State.GetNumUsedArableLandUnderConstructionEntry )][ConcatIfNeitherEmpty( '\n', State.GetNumInactiveQueuedArableLandEntry )]"
 LAND_TEXT_TOOLTIP_BREAKDOWN_FULLY_BUILT: "-$VALUE|v$ des bâtiments construits"
 LAND_TEST_TOOLTIP_BREAKDOWN_CONSTRUCTION_DETAIL: "-$VALUE|v$ des bâtiments en construction"
 LAND_TEXT_NUM_INACTIVE_QUEUED_ARABLE_LAND: "-$VALUE|v$ de [concept_arable_land|l] pour les bâtiments dans la file d’attente"
 LAND_TEXT_TOOLTIP_CONCEPT: "La [concept_arable_land|l] disponible en [State.GetName] est occupée par des [State.GetSubsistenceBuilding.GetName|l]."
 SUBSISTENCE_CONCEPT: "#concept $SUBSISTENCE_CONCEPT_CLEAN$#!"
 SUBSISTENCE_CONCEPT_CLEAN: "C’est un [concept_subsistence_building|l], qui est un bâtiment très inefficace qui apparaît lorsqu’il y a de la [concept_arable_land|l] inutilisée dans un État. Dès que vous commencerez à exploiter le potentiel qu’il utilise, ce bâtiment sera automatiquement réduit de taille."
 SUBSISTENCE_CREATION_EXPLANATION: "Un niveau de [concept_subsistence_building|l] est automatiquement créé pour chaque [concept_arable_land|l] inutilisée dans l’[concept_state].\n[Building.GetState.GetName] a #tooltippable #tooltip:[Building.GetState.GetTooltipTag],LAND_TEXT_TOOLTIP [Building.GetState.GetNumFreeArableLand|v]#!#! de [concept_arable_land|l] inutilisée"
 URBAN_CENTER_EXPLANATION: "C’est un [GetBuildingType('building_urban_center').GetName|l], qui apparaît automatiquement lorsqu’il y a assez d’[concept_urbanization|l] dans l’[concept_state]. $URBAN_CENTER_CREATION_EXPLANATION$"
 URBAN_CENTER_CREATION_EXPLANATION: "Un niveau de [GetBuildingType('building_urban_center').GetName|l] est créé tous les [Building.GetState.GetUrbanizationNeededPerLevelFormatted] d’[concept_urbanization|l] dans l’[concept_state].\n[Building.GetState.GetName] a #tooltippable #tooltip:[Building.GetState.GetTooltipTag],URBANIZATION_BREAKDOWN [Building.GetState.GetUrbanization|v]#!#! d’[concept_urbanization|l]"
 LOCAL_WORKFORCE_OWNERSHIP_EXPLANATION: "Les [concept_building_owners|l] de [Building.GetName] sont toujours la [concept_workforce|l] locale"
 EXPENSIVE_GOODS_IN_MARKET_ELEMENT: "$TAB$[State.GetName] - [Goods.GetMarketPriceWithTooltip|1]"
 URBAN_PART_OF_STATE: "Bâtiments urbains"
 NON_URBAN_PART_OF_STATE: "Bâtiments ruraux"
 INFRA_PART_OF_STATE: "Développement"
 URBAN_CENTER: "Centre urbain"
 LEVEL: "Taille :"
 STANDARD_OF_LIVING_TITLE: "[concept_sol] :"
 UNEMPLOYED_TITLE: "[concept_unemployed] :"
 TOOLTIP_VIEW_GRID: "#header Afficher la grille#!"
 TOOLTIP_VIEW_LIST: "#header Afficher la liste#!"
 TOOLTIP_PIE_CHART: "#header Voir le graphique circulaire#!"
 TOOLTIP_AREA_CHART: "#header Voir le graphique en aires"
 REFORM_PREV: "#bold [ReformGroup.GetPrevious.GetName]#!\n(#variable [GetPlayer.GetEnactmentCost(Reform.Self)|2]@aut!#!)"
 REFORM_NEXT: "#bold [ReformGroup.GetNext.GetName]#!\n(#variable [GetPlayer.GetEnactmentCost(Reform.Self)|2]@aut!#!)"
 HAS_DIPLO_POWER: "@inf! $COMPARATOR$ à #BOLD $NUM|0$#!"
 HAS_NOT_DIPLO_POWER: "#N $HAS_DIPLO_POWER$#!"
 EXPAND: "#header Agrandir#!"
 COLLAPSE: "#header Réduire#!"
 UNPIN: "#header Détacher#! du tableau de bord"
 PIN: "#header Épingler#! au tableau de bord"
 buildings_expand: "Agrandir"
 buildings_expand_tooltip: "#BOLD #V Agrandir#!#!\n$TOOLTIP_DELIMITER$\n[concept_building_desc]"
 buildings_upgrade: "Améliorer"
 buildings_upgrade_tooltip: "#BOLD #V Améliorer#!#!"
 factorys_tooltip: "#BOLD #V Usines#!#!"
 rgos_tooltip: "#BOLD #V Opérations de collecte de ressources#!#!"
 MAP_LIST_NO_AVAILABLE_OPTIONS: "Aucune option disponible"
 OUTLINER_ENTRY_INSTRUCTION_OPEN: "#instruction Cliquez#! pour étendre ou réduire"
 OUTLINER: "Tableau de bord"
 OUTLINER_TOOLTIP: "#bold Tableau de bord#!"
 MAP_LIST_DECREE_COST: "@aut! #v [MapListOption.GetDecreeData.GetCost]#!"
 MAP_LIST: "Registre"
 MAP_LIST_TOOLTIP: "#bold Registre#!"
 establish_colony: "Établir une colonie"
 establish_colony_tooltip: "#HEADER Établir une colonie#!\n$TOOLTIP_DELIMITER$\n[concept_colony_desc]"
 declare_interest: "Déclarer de l’intérêt"
 declare_interest_tooltip: "Déclarer notre [concept_interest|l] pour une [concept_strategic_region|l] dans laquelle nous ne contrôlons pas de territoire"
 diplomatic_plays: "Coups diplomatiques"
 diplomatic_plays_tooltip: "#header $diplomatic_plays$#!\n$TOOLTIP_DELIMITER$\n[concept_diplomatic_play_desc]"
 diplomatic_actions: "Actions diplomatiques"
 diplomatic_actions_tooltip: "#header Proposer des [Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')|l]#!\n$TOOLTIP_DELIMITER$\n[concept_diplomatic_action_desc]"
 PARTIES_ALREADY_IN_GOV: "#N Est déjà le gouvernement actuel#!"
 PARTIES_NO_PARTIES_SELECTED: "#N Aucun parti sélectionné pour former le gouvernement#!"
 DECLARE_INTEREST_BUTTON: "$declare_interest$ ([GetPlayer.GetNumDeclaredInterests|v] / [GetPlayer.CalcMaxNumDeclaredInterests|v])"
 buildings_lens_tab: "Bâtiments"
 buildings_lens_tab_tooltip: "Construire ou agrandir des bâtiments\n$TOOLTIP_DELIMITER$\n#concept Vous pouvez construire de nouveaux [Concept('concept_building', '$concept_buildings$')|l] ou agrandir ceux qui existent déjà pour être en mesure d’employer plus de personnes.#!"
 special_buildings_lens_tab: "Bâtiments spéciaux"
 special_buildings_lens_tab_tooltip: "Construire des bâtiments spéciaux\n$TOOLTIP_DELIMITER$\n#concept Les [Concept('concept_building', '$concept_buildings$')|l] spéciaux incluent les [Concept('concept_canal', '$concept_canals$')|l] et les [Concept('concept_monument', '$concept_monuments$')|l].#!"
 agriculture_lens_tab: "Agriculture"
 agriculture_lens_tab_tooltip: "Construire des bâtiments agricoles\n$TOOLTIP_DELIMITER$\n#concept Les [Concept('concept_building', '$concept_buildings$')|l] agricoles emploient des [Concept('concept_pop', '$concept_pops$')|l] pour produire des [Concept('concept_good', '$concept_goods$')|l] en utilisant la [concept_arable_land|l] d’un [concept_state].#!"
 resources_lens_tab: "Ressources"
 resources_lens_tab_tooltip: "Construire des bâtiments de ressources\n$TOOLTIP_DELIMITER$\n#concept Les [Concept('concept_building', '$concept_buildings$')|l] de ressources emploient des [Concept('concept_pop', '$concept_pops$')|l] pour produire des [Concept('concept_good', '$concept_goods$')|l] en utilisant les [Concept('concept_resource_potential', '$concept_resource_potentials$')|l] d’un [concept_state].#!"
 industry_lens_tab: "Industrie"
 industry_lens_tab_tooltip: "Construire des bâtiments industriels\n$TOOLTIP_DELIMITER$\n#concept Les [Concept('concept_building', '$concept_buildings$')|l] industriels emploient des [Concept('concept_pop', '$concept_pops$')|l] pour convertir un ou plusieurs types de [Concept('concept_good', '$concept_goods$')|l] en un ou plusieurs autres types de biens.#!"
 urban_lens_tab: "Urbain"
 urban_lens_tab_tooltip: "Construire des bâtiments urbains\n$TOOLTIP_DELIMITER$\n#concept Les [Concept('concept_building', '$concept_buildings$')|l] urbains emploient des [Concept('concept_pop', '$concept_pops$')|l] pour convertir un ou plusieurs types de [Concept('concept_good', '$concept_goods$')|l] en un ou plusieurs autres types de biens.#!"
 development_lens_tab: "Développement"
 development_lens_tab_tooltip: "Construire des bâtiments de développement\n$TOOLTIP_DELIMITER$\n#concept Les [Concept('concept_building', '$concept_buildings$')|l] de développement emploient des [Concept('concept_pop', '$concept_pops$')|l] pour convertir un ou plusieurs types de [Concept('concept_good', '$concept_goods$')|l] en biens et en capacités comme l’[concept_infrastructure|l].#!"
 decrees_lens_tab: "Décrets"
 decrees_lens_tab_tooltip: "Promulguer des décrets\n$TOOLTIP_DELIMITER$\n#concept Vous pouvez établir un [concept_decree|l] dans vos États, ce qui offre une variété d’avantages.#!"
 state_actions_lens_tab: "Actions d’État"
 state_actions_lens_tab_tooltip: "Interagissez avec vos [Concept( 'concept_state', '$concept_states$')]"
 diplomatic_plays_lens_tab: "Exigences diplomatiques"
 diplomatic_plays_lens_tab_tooltip: "#header $concept_diplomatic_demands$#!\n$TOOLTIP_DELIMITER$\n[concept_diplomatic_demand_desc]"
 diplomatic_overlord_actions_lens_tab: "Actions du suzerain"
 diplomatic_overlord_actions_lens_tab_tooltip: "#header Proposer des [Concept('concept_overlord_action', '$concept_overlord_actions$')|l]#!\n$TOOLTIP_DELIMITER$\n[concept_overlord_action_desc]"
 diplomatic_subjects_actions_lens_tab: "Actions du sujet"
 diplomatic_subjects_actions_lens_tab_tooltip: "#header Proposer des [Concept('concept_subject_action','$concept_subject_actions$')|l]#!\n$TOOLTIP_DELIMITER$\n[concept_subject_action_desc]"
 diplomatic_actions_lens_tab: "Actions diplomatiques"
 diplomatic_actions_lens_tab_tooltip: "#header Proposer des [Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')|l]#!\n$TOOLTIP_DELIMITER$\n[concept_diplomatic_action_desc]"
 army_lens_tab: "Armée"
 army_lens_tab_tooltip: "Interagissez avec votre armée"
 navy_lens_tab: "Marine"
 navy_lens_tab_tooltip: "Interagissez avec votre marine"
 show_supply_areas_lens_tab: "Afficher les zones d’approvisionnement"
 show_supply_areas_lens_tab_tooltip: "Afficher les zones d’approvisionnement\n$TOOLTIP_DELIMITER$\n#b DEBUG#!"
 trade_actions_lens_tab: "Actions commerciales"
 trade_actions_lens_tab_tooltip: "Prenez des mesures concernant le commerce"
 import_routes_lens_tab: "Routes commerciales d’importation"
 import_routes_lens_tab_tooltip: "#header $import_routes_lens_tab$#!\n$TOOLTIP_DELIMITER$\nÉtablissez une route commerciale semi-permanente entre deux marchés, en important des biens sur un marché que vous possédez ou dont vous contrôlez les ports."
 export_routes_lens_tab: "Routes commerciales d’exportation"
 export_routes_lens_tab_tooltip: "#header $export_routes_lens_tab$#!\n$TOOLTIP_DELIMITER$\nÉtablissez une route commerciale semi-permanente entre deux marchés, en exportant des biens depuis un marché que vous possédez ou dont vous contrôlez les ports."
 interests_lens_tab: "Actions régionales"
 interests_lens_tab_tooltip: "Interagir avec les [Concept('concept_strategic_region','$concept_strategic_regions$')|l]"
 JOURNAL_WINDOW_HEADER: "Journal"
 JOURNAL_ENTRY_HEADING: "[concept_journal_entry] [JournalEntry.GetType.GetGroup.GetName]"
 NUMBER_OF_PLAYER_OBJECTIVE_JOURNAL_ENTRIES: "Vous avez #v [Subtract_int32(GetDataModelSize(AccessPlayer.AccessActivePlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedPlayerObjectiveJournalEntries))]#! [SelectLocalization(EqualTo_int32(Subtract_int32(GetDataModelSize(AccessPlayer.AccessActivePlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedPlayerObjectiveJournalEntries)), '(int32)1'), 'défi désépinglé', 'défis désépinglés')]"
 NUMBER_OF_PLAYER_OBJECTIVE_JOURNAL_ENTRIES_SHORT: "#v [Subtract_int32(GetDataModelSize(AccessPlayer.AccessActivePlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedPlayerObjectiveJournalEntries))]#! désépinglés"
 NUMBER_OF_NON_PLAYER_OBJECTIVE_JOURNAL_ENTRIES: "Vous avez #v [Subtract_int32(GetDataModelSize(AccessPlayer.AccessActiveNonPlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedNonPlayerObjectiveJournalEntries))]#! [SelectLocalization(EqualTo_int32(Subtract_int32(GetDataModelSize(AccessPlayer.AccessActiveNonPlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedNonPlayerObjectiveJournalEntries)), '(int32)1'), 'JOURNAL_ENTRY_HEADING', 'ACTIVE_JOURNAL_ENTRIES')|l] [SelectLocalization(EqualTo_int32(Subtract_int32(GetDataModelSize(AccessPlayer.AccessActiveNonPlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedNonPlayerObjectiveJournalEntries)), '(int32)1'), 'désépinglée', 'désépinglées')]"
 NUMBER_OF_NON_PLAYER_OBJECTIVE_JOURNAL_ENTRIES_SHORT: "#v [Subtract_int32(GetDataModelSize(AccessPlayer.AccessActiveNonPlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedNonPlayerObjectiveJournalEntries))] [SelectLocalization(EqualTo_int32(Subtract_int32(GetDataModelSize(AccessPlayer.AccessActiveNonPlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedNonPlayerObjectiveJournalEntries)), '(int32)1'), 'désépinglée', 'désépinglées')]#!"
 EFFECT_RATIO_BELOW_MAX: "#v $EFFECT_RATIO|0%$#!"
 EFFECT_RATIO_ABOVE_MAX: "#v $EFFECT_RATIO|0%$#! ou plus"
 POWER_TOOLTIP: "#tooltip_header $POWER_TYPE$#!\nSolde : #variable $VAL|+=0$#![ConcatIfNeitherEmpty( '\n', '$EFFECT$' )]"
 POWER_EXCESS_EFFECT_HEADER: "$TOOLTIP_DELIMITER$\nEffets de l’#g excès#! de $EFFECT_RATIO_DESC$ en $POWER_TYPE|l$ (la production est supérieure à l’utilisation) :\n$BREAKDOWN$"
 POWER_DEFICIT_EFFECT_HEADER: "$TOOLTIP_DELIMITER$\nEffets du #n déficit#! de $EFFECT_RATIO_DESC$ en $POWER_TYPE|l$ (l’utilisation est supérieure à la production) :\n$BREAKDOWN$"
 BUREAUCRACY_TOOLTIP: "[GetPlayer.GetPowerTooltip('bureaucracy')][SelectLocalization(GetMetaPlayer.GetPlayedOrObservedCountry.IsValid, 'BUREAUCRACY_TOOLTIP_DELAYED', 'OBSERVER_NO_COUNTRY_SELECTED')]"
 AUTHORITY_TOOLTIP: "[GetPlayer.GetPowerTooltip('authority')][SelectLocalization(GetMetaPlayer.GetPlayedOrObservedCountry.IsValid, 'AUTHORITY_TOOLTIP_DELAYED', 'OBSERVER_NO_COUNTRY_SELECTED')]"
 INFLUENCE_TOOLTIP: "[GetPlayer.GetPowerTooltip('influence')][SelectLocalization(GetMetaPlayer.GetPlayedOrObservedCountry.IsValid, 'INFLUENCE_TOOLTIP_DELAYED', 'OBSERVER_NO_COUNTRY_SELECTED')]"
 BUREAUCRACY_TOOLTIP_DELAYED: "\n$TOOLTIP_DELIMITER$\nVotre production totale de #v [GetPlayer.GetPowerIncome('bureaucracy')|D+0=]#! en [concept_bureaucracy|l] @bur! s’explique par :[ConcatIfNeitherEmpty('\n', GetPlayer.GetPowerIncomeString('bureaucracy'))][ConcatIfNeitherEmpty('\n\n', GetPlayer.GetPowerExpensesString('bureaucracy'))]"
 AUTHORITY_TOOLTIP_DELAYED: "\n$TOOLTIP_DELIMITER$\nVotre production totale de #v [GetPlayer.GetPowerIncome('authority')|D+0=]#! en [concept_authority|l] @aut! s’explique par :[ConcatIfNeitherEmpty('\n', GetPlayer.GetPowerIncomeString('authority'))][ConcatIfNeitherEmpty('\n\n', GetPlayer.GetPowerExpensesString('authority'))]"
 INFLUENCE_TOOLTIP_DELAYED: "\n$TOOLTIP_DELIMITER$\nVotre production totale de #v [GetPlayer.GetPowerIncome('influence')|D+0=]#! en [concept_influence|l] @inf! s’explique par :[ConcatIfNeitherEmpty('\n', GetPlayer.GetPowerIncomeString('influence'))][ConcatIfNeitherEmpty('\n\n', GetPlayer.GetPowerExpensesString('influence'))]"
 BUREAUCRACY_LAWS: "Lois : #variable $COST|+=$#!\n"
 BUREAUCRACY_BUILDINGS: "Bâtiments : #variable $COST|+=$#!\n"
 AUTHORITY_FROM_RULER_POPULARITY: "#v $VAL|+=0$#! en raison de la [concept_popularity|l] [Character.GetCustom('FR_DuDela')] [Character.GetFullNameWithTitle]"
 CAPITAL_POLITICAL_EXPENSES_CHANGE_RELATIONS: "Changer l’opinion de nos citoyens à l’égard de $COUNTRY_NAME$ : #N #BOLD -$POWER_COST|1$ #!#!\n"
 CAPITAL_MONEY: "#tooltip_header [concept_money]#!\nSolde : #variable [AccessPlayer.PredictWeeklyBalance|D=+]@money!#![GetPlayer.GetPowerDeltaIcon('money')]\n[SelectLocalization(GreaterThan_CFixedPoint(GetPlayer.GetPrincipal, '(CFixedPoint)0'), 'CREDIT_DESC', 'GOLD_RESERVES_DESC')][SelectLocalization(GetMetaPlayer.GetPlayedOrObservedCountry.IsValid, 'CAPITAL_MONEY_DELAYED', 'OBSERVER_NO_COUNTRY_SELECTED')]"
 GOLD_RESERVES_DESC: "[concept_gold_reserves] : #tooltippable #tooltip:GOLD_RESERVES_BREAKDOWN [GetPlayer.GetGoldReserves|Dv]@money!#!#!"
 CREDIT_DESC: "[concept_credit] : #tooltippable #tooltip:CREDIT_PROGRESS #variable [GetPlayer.GetPrincipal|K]@money!#!#!#! / #maximum [GetPlayer.GetMaxCredit|K]#!"
 CREDIT_LIMIT: "[concept_credit] : #variable [GetPlayer.GetMaxCredit|2*]#!"
 CAPITAL_MONEY_DELAYED: "\n$TOOLTIP_DELIMITER$\n$INVESTMENT_POOL$\n$TOOLTIP_DELIMITER$\n[SelectLocalization(GreaterThan_CFixedPoint(GetPlayer.GetUnrealizedTaxes, '(CFixedPoint)0'), 'UNREALIZED_TAXES', '')][GetPlayer.GetIncomeBreakdown]\n\n[GetPlayer.GetExpensesBreakdown]"
 UNREALIZED_TAXES: "[concept_unrealized_taxes] : #tooltippable #tooltip:UNREALIZED_TAXES_BREAKDOWN #v [GetPlayer.GetUnrealizedTaxes|D-]@money!#!#!#!\n$TOOLTIP_DELIMITER$\n"
 UNREALIZED_TAXES_BREAKDOWN: "#header [concept_unrealized_taxes]#!\nTotal : #v [GetPlayer.GetUnrealizedTaxes|D-]@money!#!\n$TOOLTIP_DELIMITER$\nImpôt moyen non collecté : #tooltippable #tooltip:AVG_STATE_COLLECTION_MULT_BREAKDOWN #v [GetPlayer.GetAverageStateTaxCollectionMult|+%0]#!#!#!\n[concept_tax_waste] moyen : #tooltippable #tooltip:AVG_TAX_WASTE_BREAKDOWN #v [GetPlayer.GetAverageTaxWaste|-%0]#!#!#!"
 AVG_STATE_COLLECTION_MULT_BREAKDOWN: "#header Impôt moyen non collecté : #v [GetPlayer.GetAverageStateTaxCollectionMult|+%0]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetAverageStateTaxCollectionMultBreakdown]"
 STATE_TAX_COLLECTION_MULT_SINGLE_STATE: "@money!$UNCOLLECTED_TAX|Dv$ (#tooltippable #tooltip:$STATE_TAX_COLLECTION_MULTIPLIER_SUMMARY_TAG$ $TAX_COLLECTION_MULT|+%0$#!#!) en $STATE_NAME$"
 STATE_TAX_COLLECTION_MULTIPLIER_SUMMARY: "#header La pénalité de collecte d’impôt en $STATE_NAME$ est de $TAX_COLLECTION_MULT|+%0$ en raison de#! :\n$TOOLTIP_DELIMITER$\n$SUMMARY$"
 AVG_TAX_WASTE_BREAKDOWN: "#header [concept_tax_waste|l] moyen : #v [GetPlayer.GetAverageTaxWaste|-%0]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetAverageTaxWasteBreakdown]"
 STATE_TAX_WASTE_SINGLE_STATE: "$STATE_NAME$ : $TAX_WASTE_VALUE|D-$ ($TAX_WASTE_PERCENT|-%0$)"
 GOLD_RESERVES_BREAKDOWN: "[AccessPlayer.GetGoldProgressDesc]"
 POWER_BASE_INCOME: "Revenu de base : #variable #P +$POWER_BASE_GENERATION|1$ #!#!\n"
 CAPITAL_TRUST: "#tooltip_header Confiance#!\nActuel : #HEADER [GetPlayer.GetTrust|2]#!\nDéclin mensuel : #BOLD #V [GetPlayer.GetMonthlyTrustChange|+=3]#!#!"
 CAPITAL_TRUST_DELAYED: "\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetTrustBreakdown]\nMontant maximal : #variable 100#!\n\n$TRUST_CONCEPT$"
 POP_TOOLTIP: "#tooltip_header [Concept('concept_pop','$concept_population$')]#!\nActuel : [Country.GetTotalPopulation|*2v] ([Country.GetPopulationRanking])\n[Country.GetPopGrowthDesc]$POP_TOOLTIP_DELAYED$"
 RADICALS_TOOLTIP: "#tooltip_header $RADICALS$#!\nIl y a #v [Country.GetNumRadicals|D]#! [Concept('concept_radical', '$concept_radicals$')|l] pour #v [Country.GetTotalPopulation|D]#! de population [Country.GetAltNameNoFormatting('En')][Country.GetName]\n$TOOLTIP_DELIMITER$\nLe nombre de [Concept('concept_radical', '$concept_radicals$')|l] a changé de #v #tooltippable #tooltip:[Country.GetTooltipTag],RADICALS_CHANGE_TOOLTIP [Country.GetTotalNumRadicalsChange|D=-]#!#!#! depuis le [Country.GetRadicalsLoyalistsChangeStartDate|v].\nLes facteurs ayant le plus d’impact sont [Country.GetRadicalsChangeSummary]\n\n[Country.GetRadicalsSummaryDesc][ConcatIfNeitherEmpty('\n\n',SelectLocalization( GreaterThan_int32(Country.CalcNumStatesInTurmoil, '(int32)0'), 'STATES_IN_TURMOIL', '' ))][ConcatIfNeitherEmpty('\n\n',SelectLocalization( Country.HasIGApprovalFromRadicals, 'RADICALS_IG_APPROVAL', '' ))]"
 LOYALISTS_TOOLTIP: "#tooltip_header $LOYALISTS$#!\nIl y a #v [Country.GetNumLoyalists|D]#! [Concept('concept_loyalist', '$concept_loyalists$')|l] pour #v [Country.GetTotalPopulation|D]#! de population [Country.GetAltNameNoFormatting('En')][Country.GetName]\n$TOOLTIP_DELIMITER$\nLe nombre de [Concept('concept_loyalist', '$concept_loyalists$')|l] a changé de #v #tooltippable #tooltip:[Country.GetTooltipTag],LOYALISTS_CHANGE_TOOLTIP [Country.GetTotalNumLoyalistsChange|D=+]#!#!#! depuis le [Country.GetRadicalsLoyalistsChangeStartDate|v].\nLes facteurs ayant le plus d’impact sont [Country.GetLoyalistsChangeSummary]\n\n[Country.GetLoyalistsSummaryDesc][ConcatIfNeitherEmpty('\n\n',SelectLocalization( Country.HasIGApprovalFromLoyalists, 'LOYALISTS_IG_APPROVAL', '' ))]"
 RADICALS_SUMMARY_IG_HEADER: "\n\n[Concept('concept_radical', '$concept_radicals$')] par [concept_interest_group|l] :"
 LOYALISTS_SUMMARY_IG_HEADER: "\n\n[Concept('concept_loyalist', '$concept_loyalists$')] par [concept_interest_group|l] :"
 RADICALS_SUMMARY_IG_LIST_ITEM: "\n$TAB$[InterestGroup.GetNumRadicals|vD] [InterestGroup.GetName]"
 LOYALISTS_SUMMARY_IG_LIST_ITEM: "\n$TAB$[InterestGroup.GetNumLoyalists|vD] [InterestGroup.GetName]"
 RADICALS_SUMMARY_IG_LIST_ITEM_NO_TAB: "\n[InterestGroup.GetNumRadicals|vD] [InterestGroup.GetName]"
 LOYALISTS_SUMMARY_IG_LIST_ITEM_NO_TAB: "\n[InterestGroup.GetNumLoyalists|vD] [InterestGroup.GetName]"
 RADICALS_LOYALISTS_SUMMARY_IG_OTHER_LIST_ITEM: "\n$TAB$#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $VAL|vD$#!#! dans d’autres [Concept('concept_interest_group', '$concept_interest_groups$')|l]"
 RADICALS_SUMMARY_POP_TYPE_HEADER: "[Concept('concept_radical', '$concept_radicals$')] par [concept_profession|l] :"
 LOYALISTS_SUMMARY_POP_TYPE_HEADER: "[Concept('concept_loyalist', '$concept_loyalists$')] par [concept_profession|l] :"
 RADICALS_SUMMARY_POP_TYPE_LIST_ITEM: "\n$TAB$[PopType.GetRadicals(Country.Self)|vD] [PopType.GetName]"
 LOYALISTS_SUMMARY_POP_TYPE_LIST_ITEM: "\n$TAB$[PopType.GetLoyalists(Country.Self)|vD] [PopType.GetName]"
 RADICALS_SUMMARY_POP_TYPE_LIST_ITEM_NO_TAB: "\n[PopType.GetRadicals(Country.Self)|vD] [PopType.GetName]"
 LOYALISTS_SUMMARY_POP_TYPE_LIST_ITEM_NO_TAB: "\n[PopType.GetLoyalists(Country.Self)|vD] [PopType.GetName]"
 RADICALS_LOYALISTS_SUMMARY_POP_TYPE_OTHER_LIST_ITEM: "\n$TAB$#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $VAL|vD$#!#! dans d’autres [Concept('concept_profession','$concept_professions$')|l]"
 FORMATION_MAP_MARKER_INTERACTION_INFO: "#i Shift+Clic#! pour #b ajouter#! à la sélection\n#i Ctrl+Clic#! pour #b retirer#! de la sélection\n#i Faites glisser#! pour #b sélectionner plusieurs#! formations"
 RADICALS_LOYALISTS_SUMMARY_POLITICALLY_UNALIGNED_LIST_ITEM: "\n$TAB$$VAL|vD$ [Concept('concept_politically_unaligned_aligned', '$concept_politically_unaligned$')|l]"
 NEUTRALS_TOOLTIP: "#tooltip_header $NEUTRALS$#!\nIl y a #v [Country.GetNumNeutrals|*2]#! $NEUTRALS$ pour #v [Country.GetTotalPopulation|*2]#! de population [Country.GetAltNameNoFormatting('En')][Country.GetName]"
 IG_RADICALS_TOOLTIP: "#tooltip_header $RADICALS$#!\nIl y a #v [InterestGroup.GetNumRadicals|-*2]#! $RADICALS$ dans le groupe d’intérêt [InterestGroup.GetName]\n[InterestGroup.GetNumRadicalsRatio|%2r] sur #v #tooltippable #tooltip:[InterestGroup.GetTooltipTag],TOOLTIP_POPULATION [InterestGroup.GetPopulation|*2]#!#!#! soutiennent les [Concept('concept_pop', '$concept_pops$')|l]"
 IG_LOYALISTS_TOOLTIP: "#tooltip_header $LOYALISTS$#!\nIl y a #v [InterestGroup.GetNumLoyalists|+*2]#! $LOYALISTS$ dans le groupe d’intérêt [InterestGroup.GetName]\n[InterestGroup.GetNumLoyalistsRatio|%2g] sur #v #tooltippable #tooltip:[InterestGroup.GetTooltipTag],TOOLTIP_POPULATION [InterestGroup.GetPopulation|*2]#!#!#! soutiennent les [Concept('concept_pop', '$concept_pops$')|l]"
 IG_NEUTRALS_TOOLTIP: "#tooltip_header $NEUTRALS$#!\nIl y a #v [InterestGroup.GetNumNeutrals|*2]#! $NEUTRALS$ dans le groupe d’intérêt [InterestGroup.GetName]\n[InterestGroup.GetNumNeutralsRatio|%2v] sur #v #tooltippable #tooltip:[InterestGroup.GetTooltipTag],TOOLTIP_POPULATION [InterestGroup.GetPopulation|*2]#!#!#! soutiennent les [Concept('concept_pop', '$concept_pops$')|l]"
 POP_TOOLTIP_DELAYED: "\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty( SelectLocalization( GreaterThan_int64( GetPlayer.GetPeopleAbroad, '(int64)0' ), 'INCORPORATED_POPULATION', ''), '\n')][ConcatIfNeitherEmpty( SelectLocalization( GreaterThan_int64( GetPlayer.GetPeopleAbroad, '(int64)0' ), 'UNINCORPORATED_POPULATION', ''), '\n\n')]$POP_TOOLTIP_DELAYED_EMPLOYMENT_DETAIL$"
 POP_TOOLTIP_DELAYED_EMPLOYMENT_DETAIL: "Employés rémunérés : #variable [Country.GetSalariedWorkingAdults|K]#!\nPaysans : [Country.GetSubsistingWorkingAdults|Kv]\n[concept_unemployed] : [Country.GetUnemployedWorkingAdults|Kv]\n[concept_dependents] : #variable [Country.GetDependents|K]#!"
 COST_POLITICAL: "#BOLD #V $COST|1$#!#!@aut!"
 COST_DIPLOMATIC: "#BOLD #V $COST|1$#!#!@inf!"
 MISSING_RESOURCES_COLON: "#N Ressources manquantes :#! "
 CAPITAL_ADMINISTRATIVE_COLONIAL_MAINTENANCE: "Entretien colonial : #N #BOLD -$MAINTENANCE|1$ #!#!\n"
 WEEKLY_GDP: "PIB hebdomadaire"
 POPULATION: "Population"
 SUPPORTING_POPULATION: "[Concept('concept_pop', '$concept_pops$')] partisans"
 TOTAL_INDIVIDUALS_SUPPORT: "Nombre total d’[Concept('concept_individual', '$concept_individuals$')|l] [Concept('concept_political_movement_support','soutenant')] ce [Concept('concept_political_movement','$concept_political_movement_short$')|l]"
 POLITICALLY_UNALIGNED: "[Concept('concept_politically_unaligned_aligned', '$concept_politically_unaligned$')]"
 SUPPORTING_POLITICALLY_UNALIGNED_POPULATION: "[Concept('concept_political_movement_support','$concept_political_movement_support_short$')] des $POLITICALLY_UNALIGNED$"
 POPULATION_TOOLTIP: "[Concept('concept_pop', '$concept_population$')]"
 RADICALS: "[Concept('concept_radical', '$concept_radicals$')]"
 NO_RADICALS: "Vous n’avez actuellement pas de [Concept('concept_radical', '$concept_radicals$')|l]"
 LOYALISTS: "[Concept('concept_loyalist', '$concept_loyalists$')]"
 NO_LOYALISTS: "Vous n’avez actuellement pas de [Concept('concept_loyalist', '$concept_loyalists$')|l]"
 NEUTRALS: "[Concept('concept_neutral', '$concept_neutrals$')]"
 AVG_STANDARD_OF_LIVING: "[concept_sol] moyen"
 MONEY: "[concept_gold_reserves]"
 TENSION: "[concept_tension]"
 INFAMY: "[concept_infamy]"
 TAXATION: "[Concept('concept_taxes','$concept_taxation$')]"
 NO_ACTIVE_INTERACTION: "Aucune interaction active ou mode carte"
 INACTIVE_TREATY_PORT: "[concept_treaty_port] inactif"
 BUILDING_IS_MONOPOLIZED_BY: "Les bâtiments [BuildingType.GetName] sont [Concept('concept_monopoly','$concept_monopolized$s')|l] par $NAME$"
 MONOPOLY_CANNOT_BE_ADDED_ALREADY_GRANTED: "@red_cross! Les bâtiments [BuildingType.GetName] ne peuvent pas être [Concept('concept_monopoly','$concept_monopolized$s')|l] : $NAME$ a déjà le monopole dessus"
 MONOPOLY_CANNOT_BE_REMOVED_NOT_OWNER: "Un [concept_monopoly|l] ne peut pas être accordé sur le bâtiment [BuildingType.GetName] car il est déjà détenu par $NAME$"
 MONOPOLY_COOLDOWN_ACTIVE: "Suppression impossible avant le #b [DATE.GetString]#!"
 MONOPOLY_BUILDING_TYPE_CANNOT_SWITCH_OWNER: "[BuildingType.GetName] ne peut pas être [Concept('concept_monopoly','$concept_monopolized$')|l]"
 MONOPOLY_MAX_COUNT_COUNTRY: "Vous avez atteint le nombre maximal de [Concept('concept_country_monopoly','$concept_country_monopolies$')|l]"
 MONOPOLY_FORBIDDEN_COUNTRY: "Vos lois vous interdisent d’avoir un [concept_monopoly|l]"
 MONOPOLY_AUTHORITY_COST: " #v #n -$VALUE|0$#!#! de coût d’autorité pour avoir un [concept_country_monopoly|l] de #v $COUNT|D$#!"
 MONOPOLY_AFFECTS_RELATIONS: "Cela entraînera un changement dans les relations avec [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] d’un total de #v $VALUE|1$#!"
 PRESTIGE_GOODS_THROUGHPUT_BONUS: "$VALUE|0+=%$ en raison des $FRACTION|%0$ de [concept_prestige_goods|l] entrantes"
 SHOW: "Afficher"
 HIDE: "Masquer"
 WORLD_MARKET_ACCESS_FROM_MARKET_ACCESS: "$VALUE|v%0$ en raison de l’[concept_market_access|l]"
 BLOCKADE_IMPACT_DESC: "$VALUE|0+=%$ en raison du niveau de [concept_blockade|l] de $BLOCKADE_LEVEL|0-%$"
 CORE_IDEOLOGY_HEADER: "[Ideology.GetName] - [concept_core_movement_ideology]"
 CHARACTER_IDEOLOGIES_HEADER: "$concept_ideologies$ de personnage possibles"
 MOVEMENT_ENDORSE_ICON_TOOLTIP: "Le [PoliticalMovement.GetName|l] @approves! [Concept('concept_endorse_oppose','$concept_endorses$')|l] les [Concept('concept_law', '$concept_laws$')|l] dans cette colonne"
 MOVEMENT_INDIFFERENT_ICON_TOOLTIP: "Le [PoliticalMovement.GetName|l] est @indifferent! [Concept('concept_endorse_oppose', '$concept_indifferent$')|l] aux [Concept('concept_law', '$concept_laws$')|l] dans cette colonne"
 MOVEMENT_OPPOSE_ICON_TOOLTIP: "Le [PoliticalMovement.GetName|l] @disapproves! s’oppose aux [Concept('concept_law', '$concept_laws$')|l] dans cette colonne"
 MOVEMENT_AFFECTED_INTEREST_GROUPS: "[Concept('concept_interest_group','$concept_interest_groups$')] [Concept('concept_political_movement_pressure', '$concept_political_movement_pressured_short$')|l] :"
 MOVEMENT_AFFECTED_INTEREST_GROUPS_DESC: "De nouveaux [Concept('concept_leader', '$concept_leaders$')|l] peuvent apparaître dans les [Concept('concept_interest_group','$concept_interest_groups$')|l] [Concept('concept_political_movement_pressure', '$concept_political_movement_pressured_short$')|l] ayant l’une des [Concept('concept_ideology','$concept_ideologies$')|l] de [concept_character|l] ci-dessus"
 NO_PRESSURED_INTEREST_GROUPS: "Aucun [concept_interest_group|l] [Concept('concept_political_movement_pressure', '$concept_political_movement_pressured_short$')|l]"
 NO_POSSIBLE_CHARACTER_IDEOLOGIES: "Aucune [concept_ideology|l] de [concept_character|l] possible"
 STATES_IN_TURMOIL: "Il y a #tooltippable #tooltip:[Country.GetTooltipTag],STATES_IN_TURMOIL_TOOLTIP [Country.CalcNumStatesInTurmoil|v]#!#! [Concept('concept_state', '$concept_states$')] [Concept('concept_turmoil', 'agités')|l] en raison des [Concept('concept_radical', '$concept_radicals$')|l]"
 STATES_IN_TURMOIL_TOOLTIP: "#header [concept_turmoil]#!\n$TOOLTIP_DELIMITER$\n[Country.GetStatesInTurmoilBreakdown]"
 STATES_IN_TURMOIL_BREAKDOWN_NONE: "Pas d’[Concept('concept_state', '$concept_states$')] [Concept('concept_turmoil', 'agités')|l]"
 STATES_IN_TURMOIL_BREAKDOWN: "Les [Concept('concept_state', '$concept_states$')] suivants sont [Concept('concept_turmoil', 'agités')|l] :\n$BREAKDOWN$"
 RADICALS_CHANGE_TOOLTIP: "#header $RADICALS$#![ConcatIfNeitherEmpty('\n', Country.GetRadicalsIncreaseBreakdown)][ConcatIfNeitherEmpty('\n', Country.GetRadicalsDecreaseBreakdown)][AddTextIf(And(Not(GreaterThan_int64(Country.GetTotalNumRadicalsIncrease, '(int64)0')),Not(GreaterThan_int64(Country.GetTotalNumRadicalsDecrease, '(int64)0'))), '\n$LOYALISTS_RADICALS_NO_CHANGE$')]"
 LOYALISTS_CHANGE_TOOLTIP: "#header $LOYALISTS$#![ConcatIfNeitherEmpty('\n', Country.GetLoyalistsIncreaseBreakdown)][ConcatIfNeitherEmpty('\n', Country.GetLoyalistsDecreaseBreakdown)][AddTextIf(And(Not(GreaterThan_int64(Country.GetTotalNumLoyalistsIncrease, '(int64)0')),Not(GreaterThan_int64(Country.GetTotalNumLoyalistsDecrease, '(int64)0'))), '\n$LOYALISTS_RADICALS_NO_CHANGE$')]"
 LOYALISTS_RADICALS_NO_CHANGE: "Aucun changement récent"
 RADICALS_INCREASE_other: "#v #n +$AMOUNT|D$#!#! des événements et autres raisons"
 RADICALS_INCREASE_standard_of_living_reduction: "#v #n +$AMOUNT|D$#!#! de la diminution du [concept_sol|l]"
 RADICALS_INCREASE_low_standard_of_living: "#v #n +$AMOUNT|D$#!#! d’avoir un [concept_sol|l] inférieur au minimum prévu"
 RADICALS_INCREASE_political_movement_demands: "#v #n +$AMOUNT|D$#!#! en raison des [Concept('concept_political_movement','$concept_political_movements$')|l] ayant un [concept_activism|l] élevé"
 RADICALS_INCREASE_discrimination: "#v #n +$AMOUNT|D$#!#! en raison d’une faible [concept_acceptance|l]"
 RADICALS_INCREASE_slavery: "#v #n +$AMOUNT|D$#!#! d’être [Concept('concept_slavery', '$concept_enslaved$')|l]"
 RADICALS_INCREASE_conquest: "#v #n +$AMOUNT|D$#!#! d’être conquis par un [concept_country|l] étranger"
 RADICALS_INCREASE_bankruptcy: "#v #n +$AMOUNT|D$#!#! de déclarer la [concept_bankruptcy|l]"
 RADICALS_INCREASE_lost_job: "#v #n +$AMOUNT|D$#!#! pour être renvoyé des [Concept('concept_building', '$concept_buildings$')|l]"
 RADICALS_INCREASE_lost_ownership_job: "#v #n +$AMOUNT|D$#!#! pour être renvoyé des [Concept('concept_building', '$concept_buildings$')|l] où ils avaient des [Concept('concept_ownership_share', '$concept_ownership_shares$')|l]"
 RADICALS_INCREASE_building_downsized: "#v #n +$AMOUNT|D$#!#! de la réduction de la taille de [Concept('concept_building', '$concept_buildings$')|l] de l’[concept_state] dans lesquels leur [concept_profession|l] a des [Concept('concept_ownership_share', '$concept_ownership_shares$')|l]"
 RADICALS_INCREASE_legitimacy: "#v #n +$AMOUNT|D$#!#! en raison de la [concept_legitimacy|l] faible"
 RADICALS_INCREASE_government_reform: "#v #n +$AMOUNT|D$#!#! du changement récent de [concept_government|l]"
 RADICALS_INCREASE_nationalize: "#v #n +$AMOUNT|D$#!#! en raison de la [Concept('concept_nationalize','$concept_nationalization$')|l] des [Concept('concept_building', '$concept_buildings$')|l]"
 RADICALS_INCREASE_starvation: "#v #n +$AMOUNT|D$#!#! en raison de la [concept_starvation|l]"
 RADICALS_DECREASE_other: "#v #p -$AMOUNT|D$#!#! des [Concept('concept_pop', '$concept_pops$')|l] en déclin, des événements et autres raisons"
 RADICALS_DECREASE_standard_of_living_increase: "#v #p -$AMOUNT|D$#!#! de l’augmentation du [concept_sol|l]"
 RADICALS_DECREASE_political_movement_success: "#v #p -$AMOUNT|D$#!#! en raison de la promulgation de [Concept('concept_law', '$concept_laws$')|l] soutenues par les [Concept('concept_political_movement', '$concept_political_movements$')|l]"
 RADICALS_DECREASE_legitimacy: "#v #p -$AMOUNT|D$#!#! en raison de la [concept_legitimacy|l] élevée"
 RADICALS_DECREASE_external_movement: "#v #p -$AMOUNT|D$#!#! en raison de la [concept_migration|l] externe"
 LOYALISTS_INCREASE_other: "#v #p +$AMOUNT|D$#!#! des événements et autres raisons"
 LOYALISTS_INCREASE_standard_of_living_increase: "#v #p +$AMOUNT|D$#!#! de l’augmentation du [concept_sol|l]"
 LOYALISTS_INCREASE_political_movement_success: "#v #p +$AMOUNT|D$#!#! en raison de la promulgation de [Concept('concept_law', '$concept_laws$')|l] soutenues par les [Concept('concept_political_movement', '$concept_political_movements$')|l]"
 LOYALISTS_INCREASE_legitimacy: "#v #p +$AMOUNT|D$#!#! en raison de la [concept_legitimacy|l] élevée"
 LOYALISTS_DECREASE_other: "#v #n -$AMOUNT|D$#!#! des [Concept('concept_pop', '$concept_pops$')|l] en déclin, des événements et autres raisons"
 LOYALISTS_DECREASE_standard_of_living_reduction: "#v #n -$AMOUNT|D$#!#! de la diminution du [concept_sol|l]"
 LOYALISTS_DECREASE_low_standard_of_living: "#v #n -$AMOUNT|D$#!#! d’avoir un [concept_sol|l] inférieur au minimum prévu"
 LOYALISTS_DECREASE_political_movement_demands: "#v #n -$AMOUNT|D$#!#! en raison des [Concept('concept_political_movement','$concept_political_movements$')|l] ayant un [concept_activism|l] élevé"
 LOYALISTS_DECREASE_discrimination: "#v #n -$AMOUNT|D$#!#! en raison d’une faible [concept_acceptance|l]"
 LOYALISTS_DECREASE_slavery: "#v #n -$AMOUNT|D$#!#! d’être [Concept('concept_slavery', '$concept_enslaved$')|l]"
 LOYALISTS_DECREASE_conquest: "#v #n -$AMOUNT|D$#!#! d’être conquis par un [concept_country|l] étranger"
 LOYALISTS_DECREASE_bankruptcy: "#v #n -$AMOUNT|D$#!#! de déclarer la [concept_bankruptcy|l]"
 LOYALISTS_DECREASE_lost_job: "#v #n -$AMOUNT|D$#!#! de leur perte d’emploi"
 LOYALISTS_DECREASE_lost_ownership_job: "#v #n -$AMOUNT|D$#!#! de la perte d’emploi dans les [Concept('concept_building', '$concept_buildings$')|l] où ils avaient des [Concept('concept_ownership_share', '$concept_ownership_shares$')|l]"
 LOYALISTS_DECREASE_building_downsized: "#v #n -$AMOUNT|D$#!#! de la réduction de la taille de [Concept('concept_building', '$concept_buildings$')|l] de l’[concept_state] dans lesquels leur [concept_profession|l] a des [Concept('concept_ownership_share', '$concept_ownership_shares$')|l]"
 LOYALISTS_DECREASE_government_reform: "#v #n -$AMOUNT|D$#!#! en raison de la [concept_government_reform|l]"
 LOYALISTS_DECREASE_legitimacy: "#v #n -$AMOUNT|D$#!#! en raison de la [concept_legitimacy|l] faible"
 LOYALISTS_DECREASE_external_movement: "#v #n -$AMOUNT|D$#!#! en raison de la [concept_migration|l] externe"
 LOYALISTS_IG_APPROVAL: "Effets des [Concept('concept_loyalist', '$concept_loyalists$')|l] sur l’approbation du [concept_interest_group|l] :\n[Country.GetIGApprovalFromLoyalistsBreakdown]"
 RADICALS_IG_APPROVAL: "Effets des [Concept('concept_radical', '$concept_radicals$')|l] sur l’approbation du [concept_interest_group|l] :\n[Country.GetIGApprovalFromRadicalsBreakdown]"
 LOYALISTS_OR_RADICALS_IG_APPROVAL_ENTRY: "[InterestGroup.GetName] : #v $VALUE|=+$#! d’approbation"
 INCORPORATED_POPULATION: "Population incorporée : [GetPlayer.GetIncorporatedPopulation|Kv]"
 UNINCORPORATED_POPULATION: "Population non incorporée : [GetPlayer.GetPeopleAbroad|Kv]"
 POWER_EXPENSE_HEADER: "Votre utilisation totale de #v $VAL|D+=$#! [$EXPENSE_CONCEPT$] $EXPENSE_ICON$ s’explique par :\n$BREAKDOWN$"
 DIPLOMATIC_PACT_EXPENSE_LIST_ITEM: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $COST|+=0$#!#!#! en raison du $PACT$ avec [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 DIPLOMATIC_PACT_EXPENSE_LIST_ITEM_BREAKDOWN: "#header [Country.GetName] - $PACT$#!\nLe coût total de #variable $COST|0$#! s’explique par :\n$BREAKDOWN$"
 DIPLOMATIC_PACT_BASE_COST: "Coût de base : #variable $COST|0$#!"
 DIPLOMATIC_PACT_INFAMY_COST: "Notre [concept_infamy|l] : $COST|=-0$"
 DIPLOMATIC_PACT_RANK_COST: "$OTHER$ rang $RANK_NAME$ : $COST|=-0$"
 DIPLOMATIC_PACT_PRO_LOBBY_COST: "[concept_clout] des [Concept('concept_political_lobby', '$concept_political_lobbies_short$')|l] pro-[COUNTRY.GetNameNoFormatting] : $COST|=-0$"
 DIPLOMATIC_PACT_ANTI_LOBBY_COST: "[concept_clout] des [Concept('concept_political_lobby', '$concept_political_lobbies_short$')|l] anti-[COUNTRY.GetNameNoFormatting] : $COST|=-0$"
 COUNTRY_INFAMY_MAP_TOOLTIP: "[SelectLocalization(State.GetCountry.IsColonizable, GetPlayer.GetTensionTooltip(State.GetCountry), State.GetCountry.GetInfamyDesc)]"
 TREATY_ARTICLE_EXPENSE_LIST_ITEM_BREAKDOWN: "#header [Country.GetName] - $ARTICLE$#!\nLe coût total de #variable $COST|0$#! s’explique par :\n$BREAKDOWN$"
 TREATY_ARTICLE_EXPENSE_LIST_ITEM: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $COST|+=0$#!#!#! en raison de $ARTICLE$ avec [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 BUREAUCRACY_EXPENSE_FROM_STATES_AND_POPULATION: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $COST|+=0$#!#! de $POPULATION|Kv$ individus dans $NUM_INCORPORATED_STATES|v$ [Concept('concept_incorporated_state', '$concept_incorporated_states$')]"
 BUREAUCRACY_EXPENSE_FROM_INSTITUTIONS: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $COST|+=0$#!#! des [Concept('concept_institution', '$concept_institutions$')] dans $NUM_INCORPORATED_STATES|v$ [Concept('concept_incorporated_state', '$concept_incorporated_states$')]"
 BUREAUCRACY_EXPENSE_FROM_COMMANDERS: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $COST|+=0$#!#! de $NUM_GENERALS|v$ [Concept('concept_general', '$concept_generals$')|l] et $NUM_ADMIRALS|v$ [Concept('concept_admiral', '$concept_admirals$')|l]"
 BUREAUCRACY_EXPENSE_FROM_BUILDINGS: "$COST|+=0$ des $NUM_LEVELS|v$ [Concept('concept_building_level', '$concept_building_levels$')|l] nationalisés"
 BUREAUCRACY_EXPENSE_PER_INSTITUTION: "$COST|+=0$ de [INSTITUTION.GetName|l] ([INSTITUTION.GetInvestmentLevel|v])"
 BUREAUCRACY_EXPENSE_FROM_INSTITUTIONS_TOOLTIP: "#header Coût en [concept_bureaucracy|l]@bur! des [Concept('concept_institution', '$concept_institutions$')|l] : $COST|+=0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 TOTAL_INSTITUTION_INVESTMENT_LEVELS: "[Concept('concept_investment_level', '$concept_investment_levels$')|l] totaux des institutions : #v $LEVELS|0$#!"
 BUREAUCRACY_EXPENSE_INSTITUTIONS: "$INCORPORATEDCOST$\n$INSTITUTION_LEVELS$\n$BREAKDOWN$"
 BUREAUCRACY_EXPENSE_PER_STATE: "$TOTAL_COST|+=0$ de [State.GetName] ($STATE_COST|+=0$ de base, $POPULATION_COST|+=0$ de $POPULATION|Kv$ individus)"
 BUREAUCRACY_EXPENSE_FROM_STATES_AND_POPULATION_TOOLTIP: "#header Coût en [concept_bureaucracy|l]@bur! des [Concept('concept_pop', '$concept_pops$')] des [Concept('concept_incorporated_state', '$concept_incorporated_states$')] : $COST|+=0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 BUREAUCRACY_EXPENSE_PER_COMMANDER: "$COST|+=0$ de [Character.GetFullName] [Character.GetCombatUnitsTypeIcon]"
 BUREAUCRACY_EXPENSE_FROM_COMMANDERS_TOOLTIP: "#header Coût en [concept_bureaucracy|l]@bur! des [Concept('concept_commander', '$concept_commanders$')|l] : $COST|+=0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 BUREAUCRACY_EXPENSE_LIST_ITEM: "#tooltippable #tooltip:$TOOLTIP_TAG$ #variable $COST|+0$#!#!#! de [State.GetName]"
 INSTITUTION_GROWING: "En expansion : [Institution.GetGrowthProgress|+1%]"
 INSTITUTION_SHRINKING: "En recul : [Institution.GetGrowthProgress|+1%]"
 INSTITUTION_INVESTMENT_LEVEL: "Niveau d’investissement : [Institution.GetInvestmentLevel|v]"
 INSTITUTION_GROWTH_TOOLTIP: "Cette institution est en pleine expansion."
 INSTITUTION_SHRINKING_TOOLTIP: "Cette institution est actuellement en recul."
 SUPPRESSED_EXPENSE_LIST_ITEM: " #variable #N -$VAL|0$#!#! en raison de la [Concept('concept_suppress', 'répression')|l] du [POLITICAL_MOVEMENT.GetName|l]"
 BOLSTERED_EXPENSE_LIST_ITEM: " #variable #N -$VAL|0$#!#! en raison du [Concept('concept_bolster', 'renforcement')|l] du [POLITICAL_MOVEMENT.GetName|l]"
 GOODS_EMBARGO_EXPENSE_LIST_ITEM: " #variable #N -$VAL|0$#!#! en raison de l’[concept_embargo|l] sur le bien [GOODS.GetName|l]"
 GOODS_ENCOURAGE_CONSUMPTION_EXPENSE_LIST_ITEM: " #variable #N -$VAL|0$#!#! en raison de [Concept('concept_encourage_consumption', 'l’incitation à la consommation')] [GOODS.GetCustom('FR_Goods_De')][GOODS.GetName|l]"
 GOODS_DISCOURAGE_CONSUMPTION_EXPENSE_LIST_ITEM: " #variable #N -$VAL|0$#!#! en raison de [Concept('concept_discourage_consumption', 'la désincitation à la consommation')] [GOODS.GetCustom('FR_Goods_De')][GOODS.GetName|l]"
 GOODS_TAX_EXPENSE_LIST_ITEM: " #variable #N -$VAL|0$#!#! en raison de la collecte des [Concept('concept_consumption_tax', '$concept_consumption_taxes$')|l] [GOODS.GetCustom('FR_Goods_De')][GOODS.GetName|l]"
 STATE_POP_GROWTH: "$concept_pop_growth$ : #v [State.GetPopNetGrowth|K=+]#!"
 TOOLTIP_POP_GROWTH_COMMON: "[concept_pop_growth] annuelle prévue : #variable $NETGROWTHRATE|+=%$ #! (#variable $NETGROWTH|=*$#!)"
 TOOLTIP_COUNTRY_POP_GROWTH: "$TOOLTIP_POP_GROWTH_COMMON$"
 TOOLTIP_STATE_POP_GROWTH: "$TOOLTIP_POP_GROWTH_COMMON$"
 TOOLTIP_STATE_POP_MIGRATION: "[concept_migration] annuelle prévue : #variable $ANNUALNETGROWTHRATE|+=%$#! (#variable $ANNUALNETGROWTH|=*$#!)"
 HEADER_CULTURAL_COMMUNITIES: "[Concept('concept_cultural_community','$concept_cultural_communities$')]"
 MIGRATION_PULL_DESC: "[State.GetMigrationPullDesc]"
 STATE_MIGRATION_PULL_BREAKDOWN: "[State.GetMigrationPullDesc]"
 COUNTRY_MASS_MIGRATION_PULL_DESC: "[SelectLocalization(State.GetCountry.IsColonizable, State.GetMigrationPullDesc, State.GetCountry.GetMassMigrationAttractionDesc)]"
 MASS_MIGRATION_DESC_TOOLTIP: "#header [concept_mass_migration_pull]#!\n$TOOLTIP_DELIMITER$\nL’attractivité migratoire de masse [COUNTRY.GetAltAdjective('FS')|l] de #b $MASS_MIGRATION_ATTRACTION|1$#! est basée sur l’[concept_migration_pull|l] moyenne des $concept_states$ [Concept('concept_migration_target', '$concept_mass_migration_eligible$')|l] :\n\n[COUNTRY.GetMassMigrationAttractionBreakdown]\n\nLes pays ayant moins de #b $PENALTY_THRESHOLD$#! $concept_states$ éligibles reçoivent une pénalité supplémentaire d’attractivité migratoire de masse.\n\nVotre attractivité migratoire de masse peut également être affectée par vos [Concept('concept_law', '$concept_laws$')|l] sur la [GetLawGroup('lawgroup_migration').GetName|l] et la [GetLawGroup('lawgroup_citizenship').GetName|l] si celles-ci empêchent la culture en question de migrer dans votre pays."
 MASS_MIGRATION_ZERO_PULL_DESC_TOOLTIP: "#header [concept_mass_migration_pull]#!\n$TOOLTIP_DELIMITER$\n[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] n’[Country.GetAltNameNoFormatting('AOnt')] aucun $concept_state$ [concept_mass_migration_eligible|l] intéressant pouvant être la cible d’une [Concept('concept_migration_target', '$concept_mass_migration$')|l]."
 STATE_MM_ENTRY_FORMAT: "[STATE.GetName] : [STATE.GetMigrationLabel]"
 MIGRATION_PULL_FROM_EMPTY_STATE: "$TAB$État dépeuplé : #v $VAL|+=1$#!"
 MIGRATION_PULL_FROM_SOL: "$TAB$[concept_sol] : #v $VAL|+=1$#!"
 MIGRATION_PULL_FROM_UNEMPLOYMENT: "$TAB$[Concept('concept_unemployed','$concept_unemployment$')] : #v $VAL|+=1$#!"
 MIGRATION_PULL_FROM_AVAILABLE_ARABLE_LAND_EMPLOYMENT: "$TAB$Emploi de la [concept_arable_land|l] non utilisée : #v $VAL|+=1$#!"
 MIGRATION_PULL_FROM_AVAILABLE_EMPLOYMENT: "$TAB$Emplois disponibles : #v $VAL|+=1$#!"
 MIGRATION_PULL_FROM_COLONY: "$TAB$Est une colonie : #P #v ×$VAL|1$#!#!"
 TOOLTIP_STATE_MIGRATION_PULL_DESC: "#header [concept_migration_pull]#!\n$TOOLTIP_DELIMITER$\nL’[concept_migration_pull|l] de [State.GetName] est de #v [State.GetMigrationPull|1]#! en raison de :\n$DETAILS$\n[State.GetMigrationDetailsDesc]"
 LABEL_STATE_MIGRATION_ISOLATED: "[concept_isolated_state]"
 LABEL_STATE_MIGRATION_PULL_HIGH: "#tooltippable #tooltip:[STATE.GetTooltipTag],STATE_MIGRATION_PULL_BREAKDOWN #P #b élevée ($STATE_VALUE|1$)#!#!#!#!"
 LABEL_STATE_MIGRATION_PULL_MEDIUM: "#tooltippable #tooltip:[STATE.GetTooltipTag],STATE_MIGRATION_PULL_BREAKDOWN #V #b modérée ($STATE_VALUE|1$)#!#!#!#!"
 LABEL_STATE_MIGRATION_PULL_LOW: "#tooltippable #tooltip:[STATE.GetTooltipTag],STATE_MIGRATION_PULL_BREAKDOWN #N #b basse ($STATE_VALUE|1$)#!#!#!#!"
 TOOLTIP_STATE_MIGRATION_ISOLATED: "[STATE.GetName] est un [concept_isolated_state|l] et ne connaîtra aucune migration"
 TOOLTIP_STATE_MIGRATION_PULL_HIGH: "[STATE.GetName] a une [concept_migration_pull|l] $LABEL_STATE_MIGRATION_PULL_HIGH$ par rapport à la moyenne ($MARKET_VALUE|1v$) sur le [State.GetMarket.GetName|l], et peut recevoir des immigrants d’autres États du [State.GetMarket.GetName|l]\n\nLa [concept_migration|l] peut être affectée par votre [concept_law|l] sur la [GetLawGroup('lawgroup_migration').GetName|l]"
 TOOLTIP_STATE_MIGRATION_PULL_MEDIUM: "[STATE.GetName] a une [concept_migration_pull|l] $LABEL_STATE_MIGRATION_PULL_MEDIUM$ par rapport à la moyenne ($MARKET_VALUE|1v$) sur le [State.GetMarket.GetName|l], et peut envoyer un nombre limité d’émigrants dans d’autres États du [State.GetMarket.GetName|l]\n\nLa migration peut être affectée par votre [concept_law|l] sur la [GetLawGroup('lawgroup_migration').GetName|l]"
 TOOLTIP_STATE_MIGRATION_PULL_LOW: "[STATE.GetName] a une [concept_migration_pull|l] $LABEL_STATE_MIGRATION_PULL_LOW$ par rapport à la moyenne ($MARKET_VALUE|1v$) sur le [State.GetMarket.GetName|l], et peut envoyer des émigrants dans d’autres États du [State.GetMarket.GetName|l]\n\nLa migration peut être affectée par votre [concept_law|l] sur la [GetLawGroup('lawgroup_migration').GetName|l]"
 TOOLTIP_STATE_IMMIGRATION_STATES: "[STATE.GetName] a reçu en tout #variable $AMOUNT|D+$#! immigrants de $STATES_LIST$ la semaine dernière"
 TOOLTIP_STATE_EMIGRATION_STATES: "[STATE.GetName] a envoyé en tout #variable $AMOUNT|D-$#! émigrants vers $STATES_LIST$ la semaine dernière"
 TOOLTIP_STATE_MASS_MIGRATION_TARGET: "[STATE.GetName] est la cible d’une migration de masse en provenance de la culture [CULTURE.GetName] et recevra potentiellement un grand nombre de migrants"
 TOOLTIP_STATE_MASS_MIGRATION_TARGET_ADJACENCY: "[STATE.GetName] est adjacent à une [Concept('concept_migration_target', '$concept_mass_migration_target$')|l] de la culture [CULTURE.GetName] et recevra potentiellement un grand nombre de migrants"
 TOOLTIP_STATE_ELIGIBLE_MASS_MIGRATION: "@green_checkmark! [STATE.GetName] est #b éligible#! comme [Concept('concept_migration_target', '$concept_mass_migration_target$')|l]."
 TOOLTIP_STATE_NOT_ELIGIBLE_MASS_MIGRATION: "@red_cross! [STATE.GetName] n’est #b pas éligible#! comme [Concept('concept_migration_target', '$concept_mass_migration_target$')|l]."
 SOCIETY_OVERVIEW: "Société"
 COUNTRY_INFO: "Informations"
 DIPLOMATIC_ACTIONS: "Actions"
 NATION_FORMATION: "Formation d’une nation"
 RELEASE_SUBJECT: "Libérer le sujet"
 ACCEPTANCE_STATUSES: "Statuts"
 ACCEPTANCE_CULTURES: "Cultures"
 ACCEPTANCE_RELIGIONS: "Religions"
 ACCEPTANCE_CLASSES: "Classes"
 NO_SOCIAL_HIERARCHY: "Aucune [concept_social_hierarchy|l] spéciale"
 DEFAULT_SOCIAL_HIERARCHY_EXTRA_DESC: "Les [Concept('concept_pop', '$concept_pops$')|l] sont affectés à une [concept_social_class|l] en fonction de leur [concept_profession|l]."
 EXILE_POOL: "Groupe d’exilés"
 EXILE_HOME_COUNTRY: "[SelectLocalization( Character.GetHomeCountry.IsValid, 'EXILE_HOME_COUNTRY_EXISTS', 'EXILE_HOME_COUNTRY_NOT_EXISTS' )]"
 EXILE_HOME_COUNTRY_EXISTS: "Pays d’origine : [Character.GetHomeCountry.GetName]"
 EXILE_HOME_COUNTRY_NOT_EXISTS: "Pays d’origine : #tooltippable #tooltip:COUNTRY_DOES_NOT_EXIST_TOOLTIP [Character.GetHomeCountryDefinition.GetName]#!#!"
 FORM_NATION_STATE_REGION_CONTROL_DESC: "#header Contrôle [Country.GetAltAdjective('MS')|l] sur [STATE_REGION.GetName]#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 FORM_NATION_STATE_CONTROL_REASON_OWNERSHIP: "@green_checkmark! [State.GetName] : [Country.GetAltNameNoFormatting('Le')][Country.GetName] détient l’[concept_state]"
 FORM_NATION_STATE_CONTROL_REASON_CANDIDATE_SUPPORT: "@green_checkmark! [State.GetName] : [State.GetOwner.GetAltNameNoFormatting('Le')][State.GetOwner.GetName] soutient [Country.GetAltNameNoFormatting('Le')][Country.GetName] comme [concept_unification_candidate|l]"
 FORM_NATION_STATE_CONTROL_REASON_SUBJECT: "@green_checkmark! [State.GetName] : [State.GetOwner.GetAltNameNoFormatting('Le')][State.GetOwner.GetName] est un [concept_subject|l] non autonome ($SUBJECT_TYPE|l$) [Country.GetAltNameNoFormatting('Du')][Country.GetName]"
 FORM_NATION_STATE_NO_CONTROL_REASON_AUTONOMOUS_SUBJECT: "@red_cross! [State.GetName] : [State.GetOwner.GetAltNameNoFormatting('Le')][State.GetOwner.GetName] est un [concept_subject|l] trop autonome ($SUBJECT_TYPE|l$) pour compter comme étant contrôlé par [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 FORM_NATION_STATE_NO_CONTROL_REASON_GENERIC: "@red_cross! [State.GetName] : [Country.GetAltNameNoFormatting('Le')][Country.GetName] n’exerce aucun contrôle sur [State.GetOwner.GetAltNameNoFormatting('Le')][State.GetOwner.GetName]"
 PLAYER_CULTURE: "[GetPlayer.GetAltNameNoFormatting('En')|U][GetPlayer.GetNameNoFormatting]"
 GLOBAL_CULTURE: "Mondialement"
 CULTURE_ACCEPTANCE_STATUS_DISTRIBUTION_LABEL: "[concept_acceptance_status] de la [Concept('concept_pop','$concept_population$')|l] de culture [Culture.GetNameNoFormatting|l] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetNameNoFormatting]"
 CULTURE_ACCEPTANCE_STATUS_DISTRIBUTION_LABEL_TT: "[concept_acceptance_status] de la [Concept('concept_pop','$concept_population$')|l] de culture [Culture.GetNameNoFormatting|l] :"
 RELIGION_ACCEPTANCE_STATUS_DISTRIBUTION_LABEL: "[concept_acceptance_status] de la [Concept('concept_pop','$concept_population$')|l] de religion [Religion.GetNameNoFormatting|l] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetNameNoFormatting]"
 RELIGION_ACCEPTANCE_STATUS_DISTRIBUTION_LABEL_TT: "[concept_acceptance_status] de la [Concept('concept_pop','$concept_population$')|l] de religion [Religion.GetNameNoFormatting|l] :"
 HOMELANDS_HEADER: "Patries ([GetDataModelSize(Culture.AccessHomelands)])"
 MUSIC_PLAYER_VOLUME_LABEL_V3: "$MUSIC_PLAYER_VOLUME_LABEL$ :"
 SETTING_MUSIC_DENSITY_V3: "$SETTING_MUSIC_DENSITY$ :"
 MUSIC_PLAYER_PLAY: "Lire"
 MUSIC_PLAYER_PAUSE: "Mettre en pause"
 MUSIC_PLAYER_HEADER: "Lecteur de musique"
 MUSIC_PLAYER_PLAY_TRACK: "[SelectLocalization(MusicTrack.IsPlaying, 'MUSIC_PLAYER_IS_PLAYING_TRACK', 'MUSIC_PLAYER_CLICK_TO_PLAY_TRACK')]"
 MUSIC_PLAYER_CLICK_TO_PLAY_TRACK: "Cliquez pour lire #v [MusicTrack.GetName]#!"
 MUSIC_PLAYER_IS_PLAYING_TRACK: "#v [MusicTrack.GetName]#! en cours de lecture !"
 MUSIC_PLAYER_ENABLE_TRACK: "Ajouter/retirer #v [MusicTrack.GetName]#! de la file d’attente des morceaux"
 MUSIC_PLAYER_ENABLE_CATEGORY: "Ajouter/retirer tous les morceaux de la catégorie #v [MusicPlayerCategory.GetName]#!"
 MUSIC_PLAYER_SKIP_TO_NEXT_TRACK: "Passer à la piste suivante"
 MUSIC_PLAYER_SELECT_CATEGORY: "Sélectionnez pour voir les morceaux dans #v [MusicPlayerCategory.GetName]#!"
 MUSIC_PLAYER_CATEGORY_ENABLED_DISABLED_TEXT: "[MusicPlayerCategory.GetName] [SelectLocalization( MusicPlayerCategory.IsEnabled, 'MUSIC_PLAYER_CATEGORY_ENABLED_V3', 'MUSIC_PLAYER_CATEGORY_DISABLED_V3')]"
 MUSIC_PLAYER_CATEGORY_ENABLED_V3: "#g Ajouté#!"
 MUSIC_PLAYER_CATEGORY_DISABLED_V3: "#r Retiré#!"
 MUSIC_PLAYER_DENSITY: "#header Densité musicale#!\nContrôle la proportion entre les chansons complètes, le silence et les petites musiques d’ambiance\n$TOOLTIP_DELIMITER$\n#b Intense#! - Principalement des chansons complètes jouées les unes après les autres, comme une station de radio\n\n#b Équilibré#! - L’équilibre parfait entre les chansons, le silence et les segments de musique d’ambiance\n\n#b Détendu#! - Principalement des petites musiques d’ambiance qui offrent une expérience plus calme et moins de sensation de répétition après plusieurs heures de jeu"
 AND_SPACED: " et "
 COMMA_SPACED: ", "
 MAP_INFO: "#header Carte#!\n$TOOLTIP_DELIMITER$\nAppuyez et maintenez #bold Tab#! pour effectuer un zoom arrière complet. En la relâchant, vous reviendrez à votre niveau de zoom précédent."
 MAP_INFO_MAP_MODE_LOCKED: "$MAP_INFO$\n\n#instruction Cliquez pour effacer le mode carte verrouillé.#!"
 LOCATION_FINDER: "#header Recherche de lieux#!"
 ZOOM_TO_BUILDING_STATE: "Zoom sur [Building.AccessState.GetName][AddLocalizationIf( Building.AccessState.IsZoomingToCapital, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_EVENT_WINDOW_STATE: "Zoom sur [EventWindow.GetEvent.GetState.GetName][AddLocalizationIf( EventWindow.GetEvent.GetState.IsZoomingToCapital, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_COUNTRY_CAPITAL: "Zoom sur [Country.AccessCapital.GetName][AddLocalizationIf( Country.AccessCapital.IsZoomingToCapital, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_MARKET_CAPITAL: "Zoom sur [Market.AccessMarketCapital.GetName] ([concept_market_capital])[AddLocalizationIf( Market.AccessMarketCapital.IsZoomingToCapital, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_STATE: "#header Zoom sur [State.GetName]#!\n#instruction Clic droit#! pour changer le mode de zoom en #b Près#!\n\n"
 ZOOM_CLOSE_TO_STATE: "#header Zoom sur [State.GetName]#!\n#instruction Clic droit#! pour changer le mode de zoom en #b Loin#!\n\n"
 ZOOM_TO_BATTLE: "Zoom sur [Battle.GetName][AddLocalizationIf( Battle.IsZoomingToMapMarkerPosition, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_DISABLED: "\n@red_cross! Déjà sur place !"
 ZOOM_TO_ORDERTARGET: "Zoom sur l’emplacement[AddLocalizationIf( Character.IsZoomingToOrderTarget, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_HQ: "Zoom sur l’emplacement[AddLocalizationIf( Hq.IsZoomingToHQ, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_FRONT: "Zoom sur l’emplacement[AddLocalizationIf( Front.IsZoomingToFront, 'ZOOM_TO_DISABLED' )]"
 ZOOM_TO_STATE_NO_REASON: "Zoom sur [State.GetName]"
 ZOOM_TO_COUNTRY_CAPITAL_NO_REASON: "Zoom sur [Country.AccessCapital.GetName]"
 ZOOM_TO_NAVAL_INVASION: "Zoom sur [Invasion.GetName]"
 ZOOM_TO_LOCATION: "Zoom sur l’emplacement"
 ZOOM_TO_POWER_BLOC: "Zoom sur l’[concept_capital_state|l] du [concept_power_bloc_leader|l]"
 RIGHT_CLICK_TO_ZOOM_TO_STATE_REGION: "#i Clic droit pour zoomer sur [StateRegion.GetName]#![AddLocalizationIf( StateRegion.GetLargestStateInRegion.IsZoomingToCapital, 'ZOOM_TO_DISABLED' )]"
 NAVAL_INVASION_MARKER_TOOLTIP: "#header [Invasion.GetName]#!\n[Invasion.GetInvaderCountry.GetAltNameNoFormatting('Le')][Invasion.GetInvaderCountry.GetName] envahit [Invasion.GetInvadedCountry.GetAltNameNoFormatting('Le')][Invasion.GetInvadedCountry.GetName]\n$TOOLTIP_DELIMITER$\n$NAVAL_INVASION_FAIL_CONDITIONS$\n\n[Invasion.GetInvaderCountry.GetName] :\n$TAB$[SelectLocalization(EqualTo_int32(Invasion.GetNumInvadingFleetsUnits, '(int32)0'), 'NO_FLEETS', 'NAVAL_INVASION_NUMBER_OF_UNITS_IN_INVADING_FLEETS')]\n$TAB$[SelectLocalization(EqualTo_int32(Invasion.GetNumInvadingArmiesUnits, '(int32)0'), 'NO_ARMIES', 'NAVAL_INVASION_NUMBER_OF_UNITS_IN_INVADING_ARMIES')]\n\n[Invasion.GetInvadedCountry.GetName] :\n$TAB$[SelectLocalization(EqualTo_int32(Invasion.GetNumDefendingFleetsUnits, '(int32)0'), 'NO_FLEETS', 'NAVAL_INVASION_NUMBER_OF_UNITS_IN_DEFENDING_FLEETS')]\n$TAB$[SelectLocalization(EqualTo_int32(Invasion.GetNumDefendingArmiesUnits, '(int32)0'), 'NO_ARMIES', 'NAVAL_INVASION_NUMBER_OF_UNITS_IN_DEFENDING_ARMIES')]\n\n[Invasion.GetSeaNodeName] :\n$TAB$$INVASION_SEA_REGION_STATUS$\n\n[Invasion.GetTargetState.GetName] :\n$TAB$$NAVAL_INVASION_LANDING_PROGRESS$"
 LAND_INVASION_MARKER_TOOLTIP: "#header [Invasion.GetName]#!\n[Invasion.GetInvaderCountry.GetAltNameNoFormatting('Le')|U][Invasion.GetInvaderCountry.GetName] envahit [Invasion.GetInvadedCountry.GetAltNameNoFormatting('Le')][Invasion.GetInvadedCountry.GetName]\n$TOOLTIP_DELIMITER$\n$LAND_INVASION_FAIL_CONDITIONS$\n\n[Invasion.GetInvaderCountry.GetName] :\n$TAB$[SelectLocalization(EqualTo_int32(Invasion.GetNumInvadingArmiesUnits, '(int32)0'), 'NO_ARMIES', 'NAVAL_INVASION_NUMBER_OF_UNITS_IN_INVADING_ARMIES')]\n\n[Invasion.GetInvadedCountry.GetName] :\n$TAB$[SelectLocalization(EqualTo_int32(Invasion.GetNumDefendingArmiesUnits, '(int32)0'), 'NO_ARMIES', 'NAVAL_INVASION_NUMBER_OF_UNITS_IN_DEFENDING_ARMIES')]\n\n[Invasion.GetTargetState.GetName] :\n$TAB$$LAND_INVASION_PROGRESS$"
 INVASION_MARKER_TOOLTIP: "[SelectLocalization(Invasion.IsLandInvasion, 'LAND_INVASION_MARKER_TOOLTIP', 'NAVAL_INVASION_MARKER_TOOLTIP')]"
 NAVAL_INVASION_FAIL_CONDITIONS: "Cette invasion navale échouera si :\n$TAB$@simple_box! [Invasion.GetFleet.GetName] est [Concept('concept_admiral_defeated','vaincue')]\n$TAB$@simple_box! [Invasion.GetInvaderCountry.GetAltNameNoFormatting('Le')|U][Invasion.GetInvaderCountry.GetName] perd #v [Invasion.GetMaxLandBattleDefeatsAtZeroOccupation]#! [SelectLocalization(EqualTo_int32(Invasion.GetMaxLandBattleDefeatsAtZeroOccupation, '(int32)1'), 'bataille terrestre', 'batailles terrestres')|l] avec une [concept_landing_progress|l] de #v 0 %#! (#v [Invasion.GetNumLandBattleDefeatsAtZeroOccupation]/[Invasion.GetMaxLandBattleDefeatsAtZeroOccupation]#! actuellement perdus)"
 NAVAL_INVASION_FAIL_CONDITIONS_SHORT: "Cette invasion navale échouera si :\n$TAB$@simple_box! [Invasion.GetFleet.GetName] est [Concept('concept_admiral_defeated','vaincue')]\n$TAB$@simple_box! [Invasion.GetInvaderCountry.GetAltNameNoFormatting('Le')|U][Invasion.GetInvaderCountry.GetName] perd #v [Invasion.GetMaxLandBattleDefeatsAtZeroOccupation]#! [SelectLocalization(EqualTo_int32(Invasion.GetMaxLandBattleDefeatsAtZeroOccupation, '(int32)1'), 'concept_battle', 'concept_battles')|l] terrestres avec une [concept_landing_progress|l] de #v 0 %#!"
 LAND_INVASION_FAIL_CONDITIONS_SHORT: "Cette invasion échouera si :\n$TAB$@simple_box! [Invasion.GetInvaderCountry.GetAltNameNoFormatting('Le')|U][Invasion.GetInvaderCountry.GetName] perd #v [Invasion.GetMaxLandBattleDefeatsAtZeroOccupation]#! [SelectLocalization(EqualTo_int32(Invasion.GetMaxLandBattleDefeatsAtZeroOccupation, '(int32)1'), 'concept_battle', 'concept_battles')|l] avec une [concept_occupation|l] de #v 0 %#!"
 LAND_INVASION_FAIL_CONDITIONS: "$LAND_INVASION_FAIL_CONDITIONS_SHORT$ (Perdu actuellement : #v [Invasion.GetNumLandBattleDefeatsAtZeroOccupation]/[Invasion.GetMaxLandBattleDefeatsAtZeroOccupation]#!)"
 INVASION_FAIL_CONDITIONS_SHORT: "[SelectLocalization(Invasion.IsLandInvasion, 'LAND_INVASION_FAIL_CONDITIONS_SHORT', 'NAVAL_INVASION_FAIL_CONDITIONS_SHORT')]"
 NO_FLEETS: "#red 0#!@flotillas!"
 NO_ARMIES: "#red 0#!@battalions!"
 SEA_NODE_NAME: "[concept_sea_node] en $STRATEGIC_REGION_NAME$"
 LANDING_PROGRESS: "Progression du débarquement"
 NAVAL_INVADING: "Invasion par voie navale"
 INVADER_NAME: "[Invasion.GetInvaderCountry.GetNameNoFlag][ConcatIfNeitherEmpty(' ', AddLocalizationIf(Invasion.GetInvaderCountry.IsLocalPlayer, 'YOU'))]"
 DEFENDER_NAME: "[ConcatIfNeitherEmpty(AddLocalizationIf(Invasion.GetInvadedCountry.IsLocalPlayer, 'YOU'), ' ')][Invasion.GetInvadedCountry.GetNameNoFlag]"
 LAND_INVASION_PROGRESS: "[concept_occupation] [Invasion.GetInvaderCountry.GetAltAdjective('FS')|l] de [Invasion.GetProgress|v%0]"
 LAND_INVASION_PROGRESS_BAR_TOOLTIP: "Progression de l’invasion : [Invasion.GetProgress|v%0]"
 NAVAL_INVASION_LANDING_PROGRESS: "[SelectLocalization(Invasion.IsFightingNavalBattle, 'NAVAL_INVASION_LANDING_PROGRESS_STALLED', 'NAVAL_INVASION_LANDING_PROGRESS_ONGOING')]"
 NAVAL_INVASION_LANDING_PROGRESS_ONGOING: "[Invasion.GetLandingProgress|v%0] de [concept_landing_progress|l] [Invasion.GetInvaderCountry.GetAltAdjective('MS')|l]"
 NAVAL_INVASION_LANDING_PROGRESS_STALLED: "Le débarquement [Invasion.GetInvaderCountry.GetAltAdjective('MS')|l] ne [Concept('concept_landing_progress','progresse')] plus en raison de [Concept('concept_fleet', '$concept_fleets$')|l] ennemies !"
 NAVAL_INVASION_LANDING_PROGRESS_BAR_TOOLTIP: "Progression du débarquement de [Invasion.GetLandingProgress|v%0]"
 INVASION_STATUS_CONCLUDED: "Cette invasion est terminée."
 INVASION_SEA_REGION_STATUS: "[SelectLocalization(Invasion.HasBlockingEnemyFleetOnSeaNode, 'INVASION_SEA_REGION_CONTESTED', 'INVASION_SEA_REGION_CONTROLLED')]"
 INVASION_SEA_REGION_STATUS_TOOLTIP: "[SelectLocalization(Invasion.HasBlockingEnemyFleetOnSeaNode, 'INVASION_SEA_REGION_CONTESTED_TOOLTIP', 'INVASION_SEA_REGION_CONTROLLED_TOOLTIP')]"
 INVASION_SEA_REGION_CONTROLLED: "Sous le contrôle [Invasion.GetInvaderCountry.GetAltNameNoFormatting('Du')][Invasion.GetInvaderCountry.GetNameNoFlag]"
 INVASION_SEA_REGION_CONTROLLED_TOOLTIP: "Il n’y a pas de [Concept('concept_fleet', '$concept_fleets$')|l] défendant [Invasion.GetSeaNodeName]"
 INVASION_SEA_REGION_CONTESTED: "Région contestée !"
 INVASION_SEA_REGION_CONTESTED_TOOLTIP: "Cette [concept_naval_invasion|l] ne progressera pas tant qu’il y aura des flottes en défense à [Invasion.GetSeaNodeName]."
 INVADER: "Envahisseur"
 NAVAL_INVASION_NUMBER_OF_INVADING_FLEETS: "[Invasion.GetNumInvadingFleets|v] [Concept('concept_fleet','$concept_fleets$')|l] [Invasion.GetInvaderCountry.GetAltAdjective('FP')|l]"
 NAVAL_INVASION_NUMBER_OF_DEFENDING_FLEETS: "[Invasion.GetNumBlockingFleets|v] [Concept('concept_fleet','$concept_fleets$')|l] [Invasion.GetInvadedCountry.GetAltAdjective('FP')|l]"
 NAVAL_INVASION_NUMBER_OF_NON_BLOCKING_FLEETS: "Nombre de flottes trop faibles : [Invasion.GetNumNonBlockingFleets|v] [SelectLocalization(EqualTo_int32(Invasion.GetNumNonBlockingFleets, '(int32)1'), 'FLEET', 'FLEETS')]"
 NAVAL_INVASION_NUMBER_OF_UNITS_IN_INVADING_FLEETS: "[Invasion.GetNumInvadingFleetsUnits|v] @flotillas!"
 NAVAL_INVASION_NUMBER_OF_UNITS_IN_DEFENDING_FLEETS: "[Invasion.GetNumBlockingFleetsUnits|v] @flotillas!"
 NAVAL_INVASION_NUMBER_OF_UNITS_IN_NON_BLOCKING_FLEETS: "[Invasion.GetNumNonBlockingFleetsUnits|v] @flotillas!"
 NAVAL_INVASION_NUMBER_OF_INVADING_ARMIES: "[Invasion.GetNumInvadingArmies|v] [Concept('concept_army','$concept_armies$')|l] [Invasion.GetInvaderCountry.GetAltAdjective('FP')|l]"
 NAVAL_INVASION_NUMBER_OF_DEFENDING_ARMIES: "[Invasion.GetNumDefendingArmies|v] [Concept('concept_army','$concept_armies$')|l] [Invasion.GetInvadedCountry.GetAltAdjective('FP')|l]"
 NAVAL_INVASION_NUMBER_OF_UNITS_IN_INVADING_ARMIES: "[Invasion.GetNumInvadingArmiesUnits|v] @battalions!"
 NAVAL_INVASION_NUMBER_OF_UNITS_IN_DEFENDING_ARMIES: "[Invasion.GetNumDefendingArmiesUnits|v] @battalions!"
 NAVAL_INVASION_INVADING_FLEETS_TOOLTIP: "#header [Concept('concept_fleet','$concept_fleets$')] [Invasion.GetInvadedCountry.GetAltAdjective('FP')|l] d’invasion#!\nActuellement : [Invasion.GetNumInvadingFleets|v] [SelectLocalization(EqualTo_int32(Invasion.GetNumInvadingFleets, '(int32)1'), 'FLEET', 'FLEETS')]\n$TOOLTIP_DELIMITER$\n[Invasion.GetInvadingFleetsTooltipBreakdown]"
 NAVAL_INVASION_BLOCKING_FLEETS_TOOLTIP: "#header [Concept('concept_fleet','$concept_fleets$')] [Invasion.GetInvadedCountry.GetAltAdjective('FP')|l] de défense#!\nActuellement : [Invasion.GetNumBlockingFleets|v] [SelectLocalization(EqualTo_int32(Invasion.GetNumBlockingFleets, '(int32)1'), 'FLEET', 'FLEETS')]"
 NAVAL_INVASION_NON_BLOCKING_FLEETS_TOOLTIP: "#header [Concept('concept_fleet','$concept_fleets$')] trop faibles pour défendre#!\nActuellement : [Invasion.GetNumNonBlockingFleets|v] [SelectLocalization(EqualTo_int32(Invasion.GetNumNonBlockingFleets, '(int32)1'), 'FLEET', 'FLEETS')]\n$TOOLTIP_DELIMITER$\n[SelectLocalization(EqualTo_int32(Invasion.GetNumNonBlockingFleets, '(int32)1'), 'THIS_FLEET_HAS', 'THESE_FLEETS_HAVE')] une [concept_power_projection|l] inférieure à [GetDefine('NWar', 'NAVAL_INVASION_MIN_POWER_PROJECTION_RATIO_TO_BLOCK_LANDING')|%v0] des [Invasion.GetNumInvadingFleets|v] [SelectLocalization(EqualTo_int32(Invasion.GetNumInvadingFleets, '(int32)1'), 'FLEET', 'FLEETS')] [Invasion.GetInvadedCountry.GetAltAdjective('FP')|l] d’invasion"
 NAVAL_INVASION_INVADING_ARMIES_TOOLTIP: "#header [Concept('concept_army','$concept_armies$')] d’invasion [Invasion.GetInvaderCountry.GetAltNameNoFormatting('Du')][Invasion.GetInvaderCountry.GetName]#!\nActuellement : [Invasion.GetNumInvadingArmies|v] [Concept('concept_army', '$concept_armies$')|l]\n$TOOLTIP_DELIMITER$\n[Invasion.GetInvadingArmiesTooltipBreakdown]"
 NAVAL_INVASION_DEFENDING_ARMIES_TOOLTIP: "#header [Concept('concept_army','$concept_armies$')] de défense [Invasion.GetInvadedCountry.GetAltNameNoFormatting('Du')][Invasion.GetInvadedCountry.GetName]#!\nActuellement : [Invasion.GetNumDefendingArmies|v] [Concept('concept_army', '$concept_armies$')|l]\n$TOOLTIP_DELIMITER$\n[Invasion.GetDefendingArmiesTooltipBreakdown]"
 FLEET_BREAKDOWN_FORMAT: "@flotillas! #tooltippable #tooltip:$UNIT_BREAKDOWN_TAG$ [MILITARY_FORMATION.GetNumCombatUnits|v]#!#! [MILITARY_FORMATION.GetName]"
 ARMY_BREAKDOWN_FORMAT: "@battalions! #tooltippable #tooltip:$UNIT_BREAKDOWN_TAG$ [MILITARY_FORMATION.GetNumCombatUnits|v]#!#! [MILITARY_FORMATION.GetName]"
 THESE_FLEETS_HAVE: "Ces flottes ont"
 THIS_FLEET_HAS: "Cette flotte a"
 CANCEL_INVASION: "Annuler l’invasion"
 CANCEL_INVASION_TOOLTIP: "#header Annuler cette [concept_invasion|l]#![ConcatIfNeitherEmpty('\n', GetDesc(Invasion.Cancel))]"
 CANCEL_INVASION_CONFIRMATION: "Annuler l’invasion [Invasion.GetName] annulera toutes les [Concept('concept_battle','$concept_battles$')|l] terrestres et navales en cours, et renverra vos [Concept('concept_military_formation', '$concept_military_formations$')|l] dans leur [concept_hq] d’origine.\nToute la [concept_landing_progress|l] sera perdue.\n\nConfirmer ?"
 INVASION_LOCKED_BY_BATTLE: "Toutes les [Concept('concept_battle','$concept_battles$')|l] de l’[concept_invasion|l] sont terminées"
 ADD_DEFENDING_FLEET_TO_NAVAL_INVASION: "#b Déployer#! une [concept_fleet|l]"
 ADD_ADDITIONAL_DEFENDING_FLEETS_TO_NAVAL_INVASION: "#b Stationner#! des [Concept('concept_fleet','$concept_fleets$')|l] supplémentaires"
 ADD_DEFENDING_ARMY_TO_NAVAL_INVASION: "#b Stationner#! une [concept_army|l]"
 ADD_ADDITIONAL_DEFENDING_ARMIES_TO_NAVAL_INVASION: "#b Stationner#! des [Concept('concept_army','$concept_armies$')|l] supplémentaires"
 ADD_DEFENDING_FLEET_TO_NAVAL_INVASION_TOOLTIP: "Sélectionnez une [concept_fleet|l] à déployer dans le [Invasion.GetSeaNodeName] pour défendre cette #b invasion navale#!"
 ADD_DEFENDING_ARMY_TO_NAVAL_INVASION_TOOLTIP: "Sélectionnez une [concept_army|l] à #b stationner#! au [Invasion.GetDefenderHQ.GetName] pour défendre cette #b invasion navale#!"
 ADD_DEFENDING_ARMY_TO_INVASION: "#b Déployer#! l’[concept_army|l]"
 ADD_DEFENDING_ARMY_TO_INVASION_TOOLTIP: "Sélectionnez une [concept_army|l] à #b déployer#! au [Invasion.GetFront.GetName] pour défendre cette [concept_invasion|l]"
 ADD_ADDITIONAL_DEFENDING_ARMY_TO_INVASION: "#b Déployer#! des [Concept('concept_army','$concept_armies$')|l] supplémentaires"
 SELECT_FLEET_TO_SEND: "Déployer une [concept_fleet|l] dans le [Invasion.GetSeaNodeName]"
 SELECT_ARMY_TO_DEFEND_LAND_INVASION: "Déployer une [concept_army|l] au [Invasion.GetFront.GetName]"
 SELECT_ARMY_TO_DEFEND_NAVAL_INVASION: "Stationner une [concept_army|l] dans le [Invasion.GetDefenderHQ.GetName]"
 SELECT_ARMY_TO_SEND: "[SelectLocalization(Invasion.IsLandInvasion, 'SELECT_ARMY_TO_DEFEND_LAND_INVASION', 'SELECT_ARMY_TO_DEFEND_NAVAL_INVASION')]"
 POLITICS: "Politique"
 BUTTON_POLITICS: "#header Politique#!\n$LAW_ENACTMENT_PROGRESS_TOPBAR$"
 BUTTON_POPULATION: "#header Population#!"
 BUTTON_TRADE_OVERVIEW: "#header Marchés#!"
 BUTTON_SOCIETY_OVERVIEW: "#header Société#!"
 BUTTON_BUDGET: "#header Budget#!"
 BUTTON_MILITARY: "#header Militaire#!"
 BUTTON_TECHNOLOGY: "#header Technologie#!\n[SelectLocalization( Technology.IsValid, 'RESEARCHING', 'NOT_RESEARCHING' )]"
 UNLOCK_MAP_MODE: "Effacer le mode carte verrouillé"
 UNLOCK_MAP_MODE_TOOLTIP: "#header Effacer le mode carte verrouillé#!\nLe mode carte [GetSelectedMapModeName] est actuellement verrouillé."
 POWER_BLOC: "Bloc de nations"
 POWER_BLOC_SUBHEADER: "[SelectLocalization(PowerBlocPanel.IsPowerBlocSelected, 'POWER_BLOC_CONCEPT', 'IN_THE_WORLD')]"
 POWER_BLOC_CONCEPT: "[concept_power_bloc]"
 POWER_BLOC_LEADER_LABEL: "[Concept('concept_power_bloc_leader','$concept_power_bloc_leader_extra_short$')] : [PowerBloc.GetLeader.GetName]"
 COUNTRY_POWER_BLOC_POWER_STRUGGLE_STATUS: "@warning! [Concept('concept_power_struggle','$concept_power_struggling$')] ([Country.GetCurrentPowerStruggleMonth]/[Country.GetMaxPowerStruggleMonth] mois)"
 COUNTRY_POWER_BLOC_POWER_STRUGGLE_STATUS_CENTERED: "[Concept('concept_power_struggle','$concept_power_struggling$')]\n([Country.GetCurrentPowerStruggleMonth]/[Country.GetMaxPowerStruggleMonth] mois)"
 IN_THE_WORLD: "Dans le monde"
 YOUR_LEVERAGE: "Votre [concept_power_bloc_leverage|l]"
 NO_POWER_BLOC_TOOLTIP: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] n’est pas [Concept('concept_power_bloc_member','$concept_power_bloc_member_extra_short$')|l] d’un [concept_power_bloc|l]"
 PLAYER_IS_NOT_IN_A_POWER_BLOC: "Vous ne faites pas partie d’un [concept_power_bloc|l] ayant de l’[concept_power_bloc_leverage|l] sur [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 COUNTRY_PANEL_LEVERAGE_LABEL: "Non aligné"
 COUNTRY_PANEL_LEVERAGE_VALUE: "[SelectLocalization(GetPlayer.IsInPowerBloc, 'COUNTRY_PANEL_LEVERAGE_VALUE_PLAYER_POWER_BLOC', 'COUNTRY_PANEL_LEVERAGE_VALUE_NO_POWER_BLOC')]"
 COUNTRY_PANEL_LEVERAGE_VALUE_PLAYER_POWER_BLOC: "#v [GetPlayer.GetPowerBloc.GetLeverageAdvantage(Country.Self)|0=+]#!"
 COUNTRY_PANEL_LEVERAGE_VALUE_NO_POWER_BLOC: "#title $NONE$#!"
 POWER_BLOC_NUMBER_OF_COUNTRIES_TOOLTIP: "#header [PowerBloc.GetNumMembers] [Concept('concept_country','$concept_countries$')|l] dans le bloc [PowerBloc.GetName]#!\n$TOOLTIP_DELIMITER$\n[PowerBloc.GetMembersBreakdown]"
 POWER_BLOC_GDP_TOOLTIP: "#header [Concept('concept_gdp', '$concept_gdp_short$')] total du bloc [PowerBloc.GetName]#!\n#v [PowerBloc.GetGdp|D]@money!#! actuellement\n$TOOLTIP_DELIMITER$\n#title [Concept('concept_gdp', '$concept_gdp_short$')] par [concept_country|l] :#!\n[PowerBloc.GetGdpDesc]"
 POWER_BLOC_GDP_ENTRY: "$TAB$$VAL|Dv$@money! - [Country.GetName]"
 POWER_BLOC_INVITABLE_COUNTRIES_TOOLTIP: "#v [PowerBlocPanel.GetNumInvitableCountries|+]#! [Concept('concept_country', '$concept_countries$')|l] pouvant être invités"
 ANSWER_INVITATION: "Répondre à l’invitation"
 ANSWER_INVITATION_TOOLTIP: "Cliquez pour afficher vos options"
 REQUEST_TO_JOIN: "Demande d’adhésion"
 REQUEST_SENT: "Demande envoyée, en attente d’une réponse"
 POWER_BLOC_REQUEST_TO_JOIN_TOOLTIP: "#header Demande pour rejoindre le bloc [PowerBloc.GetName]#![ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', GetDesc(PowerBloc.RequestToJoin))]"
 POWER_BLOC_TOOLTIP: "#header $NAME$#!\nChef : $LEADER_NAME$"
 POWER_BLOC_MEMBERS_BREAKDOWN_ENTRY_LEADER: "[Country.GetName] - [Concept('concept_power_bloc_leader','$concept_power_bloc_leader_extra_short$')]\n\n"
 POWER_BLOC_MEMBERS_BREAKDOWN_ENTRY: "[Country.GetName]"
 POWER_BLOC_MEMBER_COUNTRY_NAME: "[Country.GetNameNoFlag] [AddLocalizationIf(Country.IsLocalPlayer, 'YOU')]"
 POWER_BLOC_KICK_MEMBER: "Retirer du [concept_power_bloc|l]"
 POWER_BLOC_KICK_MEMBER_TOOLTIP: "#header Retirer [Country.GetAltNameNoFormatting('Le')][Country.GetName] du bloc [Country.GetPowerBloc.GetName]#![ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', GetDesc(Country.GetPowerBloc.Kick(Country.Self)))]"
 POWER_BLOC_ARMY_NUMBERS_TOOLTIP: "#header [Concept('concept_battalion', '$concept_battalions$')] du bloc [PowerBloc.GetName]#!\nActuellement : [PowerBloc.GetBattalions|v]@battalions!\n$TOOLTIP_DELIMITER$\n[PowerBloc.GetBattalionsBreakdown]"
 POWER_BLOC_NAVY_NUMBERS_TOOLTIP: "#header [Concept('concept_flotilla','$concept_flotillas$')] du bloc [PowerBloc.GetName]#!\nActuellement : [PowerBloc.GetFlotillas|v]@flotillas!\n$TOOLTIP_DELIMITER$\n[PowerBloc.GetFlotillasBreakdown]"
 POWER_BLOC_BATTALIONS_BREAKDOWN_ENTRY: "#tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_ARMY_OVERVIEW_TOOLTIP $TOTAL|v$#!#!@battalions! - [Country.GetName] ([Country.GetBattalionsRanking])"
 POWER_BLOC_FLOTILLAS_BREAKDOWN_ENTRY: "#tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP $TOTAL|v$#!#!@flotillas! - [Country.GetName] ([Country.GetFlotillasRanking])"
 RANK_FORMATTING: "#v $RANK$e#!"
 POWER_BLOC_RANK_FORMATTED: "#tooltippable #tooltip:[Country.GetPowerBloc.GetTooltipTag],DATA_POWER_BLOC_RANK_TOOLTIP [Country.GetPowerBloc.GetRankFormatted]#!#!"
 COMPANY_PANEL_HEADER: "[Company.GetNameNoIcon]"
 COMPANY_PANEL_SUBHEADER: "[concept_company] [Company.GetCountry.GetAltNameNoFormatting('En')][Company.GetCountry.GetName]"
 COMPANY_TAB_OVERVIEW: "Vue d’ensemble"
 COMPANY_TAB_ASSETS: "Actifs"
 COMPANY_TAB_STATISTICS: "Statistiques"
 COMPANY_COLONY_DAYS_LEFT: "[AddTextIf( GreaterThan_int32(GetPlayer.GetTensionWith( State.GetNextColonyProvince.GetState.GetOwner), '(int32)50'), '@warning! ')]#bold [State.GetColonyProgressAsDays]#! jours"
 REGIONAL_HQS_AND_COLONIES: "$concept_regional_company_hqs_short$ et colonies"
 COMPANY_COUNTRIES_HEADER: "[Concept('concept_country','$concept_countries$')] d’anciennes [Concept('concept_colony', '$concept_colonies$')|l]"
 COMPANY_COLONIES_HEADER: "[Concept('concept_colony', '$concept_colonies$')] actives"
 COMPANY_REGIONAL_HQS_HEADER: "[Concept('concept_regional_company_hq','$concept_regional_company_hqs_short$')]"
 COMPANY_PROSPERITY_AND_PRODUCTIVITY_HEADER: "$concept_prosperity$ et productivité"
 NO_COMPANY_COUNTRIES: "Aucun [concept_country|l]"
 NO_OWNED_COLONIES: "Aucune [concept_colony|l] appartenant à la [concept_company|l]"
 NO_REGIONAL_HQS: "Aucun [concept_regional_company_hq|l]"
 NO_OWNED_TRADE_CENTERS: "Aucun [concept_building_level_short|l] du [GetBuildingType('building_trade_center').GetName|l] appartenant à la [concept_company|l]"
 NO_COMPANY_MONOPOLIES: "Aucun [concept_company_monopoly|l]"
 NO_COUNTRIES_OR_COLONIES: "Aucun [concept_country|l] ou aucune [concept_colony|l] appartenant à la [concept_company|l]"
 COMPANY_PANEL_CHARTERED_COMPANIES_TITLE: "[Concept('concept_company_charter','$concept_company_charters_short$')]"
 REGIONAL_COMPANY_HQS_TITLE: "[Concept('concept_regional_company_hq','$concept_regional_company_hqs_short$')] :"
 COMPANY_OWNED_TRADE_CENTERS_TITLE: "[Concept('concept_building_level', '$concept_building_levels_short$')] du [GetBuildingType('building_trade_center').GetName|l] appartenant à la compagnie [Company.GetName] :"
 COMPANY_OWNED_COLONIES_TITLE: "[Concept('concept_colony','$concept_colonies$')] appartenant à la compagnie [Company.GetName] :"
 COMPANY_CHARTER_SELECT_BUILDING_TYPE_TO_MONPOLIZE: "Sélectionner un [concept_building|l] à [Concept('concept_company_monopoly', '$concept_company_monopolize$')|l]"
 COMPANY_CHARTER_SELECT_BUILDING_TYPE_ADDITIONAL_INDUSTRY: "Sélectionner une [Concept('concept_building', '$concept_building_industry$')|l] supplémentaire"
 COMPANY_CHARTER_SELECT_STATE_TO_COLONIZE: "Sélectionner un [concept_state] à [Concept('concept_colony', '$concept_colonize$')|l]"
 COMPANY_COUNTRIES_AND_COLONIES_HEADER: "$concept_countries$ et colonies"
 COMPANY_CHARTER_ACTIVE_MONOPOLYS: "[Concept('concept_company_monopoly', '$concept_company_monopolies$')] actifs"
 COMPANY_CHARTER_ACTIVE_ADDITIONAL_INDUSTRIES: "[Concept('concept_building', '$concept_building_industries$')] actives supplémentaires"
 COMPANY_CHARTER_ACTIVE_COLONIES: "[Concept('concept_colony', '$concept_colonies$')] actives de la [concept_company|l]"
 GRANT_COMPANY_CHARTER_GENERIC_TOOLTIP: "Accorder [CompanyCharterType.GetNameNoIcon] à la compagnie [Company.GetName]"
 GRANT_MONOPOLY_CHARTER_TOOLTIP: "Donner à la compagnie [Company.GetName] le [Concept('concept_company_monopoly', '$concept_company_monopoly_short$')|l] sur le bâtiment [BuildingType.GetName] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName]"
 GRANT_ADDITIONAL_INDUSTRY_CHARTER_TOOLTIP: "Donner à la compagnie [Company.GetName] la possibilité de construire le bâtiment [BuildingType.GetName]"
 GRANT_COLONY_CHARTER_TOOLTIP: "Autoriser la compagnie [Company.GetName] à [Concept('concept_colony', '$concept_colonize$')|l] [StateRegion.GetName]"
 REMOVE_COMPANY_CHARTER_MONOPOLY: "#header Retirer le [concept_company_monopoly|l] sur le bâtiment [BuildingType.GetName]#!\n[ConcatIfNeitherEmpty(GetDesc(Company.ToggleBuildingCharter(CompanyCharterType.Self, BuildingType.Self)), '\n\n')]Gagnez #v [CompanyCharterType.GetAuthorityCost(Company.Self)|=+0]#!@aut!"
 REMOVE_COMPANY_CHARTER_ADDITIONAL_INDUSTRY: "#header Retirer le bâtiment [BuildingType.GetName] comme [Concept('concept_building', '$concept_building_industry$')|l] supplémentaire#!\n[ConcatIfNeitherEmpty(GetDesc(Company.ToggleBuildingCharter(CompanyCharterType.Self, BuildingType.Self)), '\n\n')]Gagnez #v [CompanyCharterType.GetAuthorityCost(Company.Self)|=+0]#!@aut!"
 REMOVE_COMPANY_CHARTER_COLONY: "#header Retirer les [concept_colonization_rights|l] pour [StateRegion.GetName]#!\n[ConcatIfNeitherEmpty(GetDesc(Company.ToggleRegionCharter(CompanyCharterType.Self, StateRegion.Self)), '\n\n')]Gagnez #v [CompanyCharterType.GetAuthorityCost(Company.Self)|=+0]#!@aut!"
 REMOVE_COMPANY_CHARTER_INVESTMENT_RIGHTS: "#header Retirer [CompanyCharterType.GetName]#!\n[ConcatIfNeitherEmpty(GetDesc(Company.ToggleCharter(CompanyCharterType.Self)), '\n\n')]Gagnez #v [CompanyCharterType.GetAuthorityCost(Company.Self)|=+0]#!@aut!"
 REMOVE_COMPANY_CHARTER_TRADE_RIGHTS: "#header Retirer [CompanyCharterType.GetName]#!\n[ConcatIfNeitherEmpty(GetDesc(Company.ToggleCharter(CompanyCharterType.Self)), '\n\n')]Gagnez #v [CompanyCharterType.GetAuthorityCost(Company.Self)|=+0]#!@aut!"
 COMPANY_HQ_HEADER: "[concept_company_hq] en [Building.GetState.GetName]"
 COMPANY_REGIONAL_HQ_HEADER: "[concept_regional_company_hq] en [Building.GetState.GetCountry.GetFlagTextIcon] [Building.GetState.GetName]"
 GRANT_COMPANY_CHARTER_CONFIRMATION_HEADER: "[CompanyCharterType.GetName]"
 NO_AVAILABLE_INDUSTRIES: "Aucune [Concept('concept_building', '$concept_building_industry$')|l] disponible"
 COMPANY_CHARTER_AVAILABLE_BUILDING_TYPES_NUMBER: "[GetDataModelSize(CompanyCharterType.GetPotentialBuildings(Company.Self))|+] disponibles"
 COMPANY_CHARTER_AVAILABLE_REGIONS_NUMBER: "[GetDataModelSize(CompanyCharterType.GetPotentialRegions(Company.Self))|+] disponibles"
 COMPANY_CHARTER_ACTIVE_NUMBER: "[GetDataModelSize(Company.GetActiveCharters(CompanyCharterType.Self))|u] actives"
 COMPANY_CHARTER_AUTHORITY_COST: "Coût de maintenance : #v [CompanyCharterType.GetAuthorityCost(Company.Self)|-0]#!@aut!"
 COMPANY_CHARTER_TYPE_IS_ACTIVE: "#i Actuellement actif pour#! [Company.GetName]"
 COMPANY_AVAILABLE_INDUSTRIES_CONCEPT: "[Concept('concept_building', '$concept_building_industries$')] disponibles"
 PRESTIGE_GOODS_CONCEPT: "[Concept('concept_prestige_good', '$concept_prestige_goods$')]"
 GOODS_CONCEPT: "[Concept('concept_good','$concept_goods$')]"
 WORLD_MARKET_CONCEPT: "[concept_world_market]"
 MONOPOLY_CHARTER_BUILDING_TYPES_TOOLTIP: "#header [Concept('concept_company_monopoly', '$concept_company_monopolies$')]#!\n[Concept('concept_building', '$concept_building_industries$')] [GetDataModelSize(Company.GetMonopolyBuildingTypes)]\n$TOOLTIP_DELIMITER$\n#title La compagnie [Company.GetNameNoFormatting] a le [concept_company_monopoly_short|l] sur :#!#indent_newline:3 \n[Company.GetMonopoliesDesc]"
 MONOPOLY_BUILDING_TYPE_ENTRY: "[BuildingType.GetName]"
 BUILDING_TYPE_ICON_ADDITIONAL_INDUSTRY: "@green_checkmark! [Concept('concept_building', '$concept_building_industry$')] débloquée par la [concept_company_charter|l] [GetCompanyCharterType('industry_charter').GetName]"
 BUILDING_TYPE_ICON_TRADE_CHARTER: "@green_checkmark! Débloqué par la [concept_company_charter|l] [GetCompanyCharterType('trade_charter').GetName]"
 BUTTON_POWER_BLOC: "#header Bloc de nations#!"
 POWER_BLOC_PANEL_HEADER: "[SelectLocalization(PowerBloc.IsValid, PowerBloc.GetName, 'Blocs de nations')]"
 POWER_BLOC_TAB_OVERVIEW: "Vue d’ensemble"
 POWER_BLOC_TAB_MEMBERS: "Membres ([PowerBloc.GetNumMembers])"
 POWER_BLOC_TAB_ALL_POWER_BLOCS: "Tous les blocs"
 POWER_BLOC_TAB_MODIFIERS: "Modificateurs"
 POWER_BLOC_PANEL_LEADER_MODIFIER_ENTRIES: "Modificateurs de chef"
 POWER_BLOC_PANEL_NON_LEADER_MODIFIER_ENTRIES: "Modificateurs de non-chef"
 FORM_POWER_BLOC: "Former un bloc de nations"
 FORM_POWER_BLOC_DESC: "#title [concept_power_bloc_identity] :#!\n$TAB$[PowerBlocIdentity.GetName]\n\n#title [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')] :#!#indent_newline:3 \n$PRINCIPLES$#!\n\n[ConcatIfNeitherEmpty('$EFFECT$','\n\n')]Voulez-vous vraiment former\nle [concept_power_bloc|l]#v $NAME$#! ?"
 FORM_THIS_POWER_BLOC: "Former ce bloc de nations"
 INVITE_TO_BLOC: "Inviter des pays"
 POWER_BLOC_FORMATION_HEADER: "Former un bloc de nations"
 POWER_BLOC_FORMATION_COOLDOWN_UNTIL: "Impossible de former un nouveau bloc de nations avant le #v $DATE$#!"
 POWER_BLOC_FORMATION_CHOOSE_NAME: "#header Choisir un nom :#!"
 POWER_BLOC_FORMATION_CLICK_TO_CHANGE_NAME: "Cliquez pour modifier le nom..."
 POWER_BLOC_FORMATION_INVALID_NAME: "Nom incorrect :\n$DESC$"
 RANDOMIZE_POWER_BLOC_NAME: "Nom aléatoire pour le bloc de nations"
 POWER_BLOC_FORMATION_NAME_IN_USE: "Ce nom est déjà utilisé par le bloc [PowerBloc.GetName]"
 CUSTOMIZE_STATUE: "Personnalisation de la statue du bloc de nations"
 CUSTOMIZE_EMBLEM: "Personnalisation de l’emblème du bloc de nations"
 EMBLEM_AND_COLORS: "Emblème et couleurs"
 STATUE: "Statue"
 OPEN_COLOR_PICKER: "Ouvrir le sélecteur de couleurs"
 COLOR_PICKER_HEADER: "Choisir une couleur"
 RANDOMIZE: "Aléatoire"
 POWER_BLOC_COA_SELECT_ITEM: "Sélectionner #v [PowerBlocCoaPieceSelector.GetName]#!"
 POWER_BLOC_MAP_TEXTURE_SELECT_ITEM: "Sélectionner $POWER_BLOC_MAP_TEXTURE_SELECTOR_LABEL$"
 CENTRAL_IDENTITY: "$concept_power_bloc_identity$"
 SELECT_A_CENTRAL_IDENTITY: "Sélectionnez un [concept_power_bloc_identity|l]"
 POWER_BLOC_COA_PIECE_SHIELD_PATTERN_COLOR1_LABEL: "Couleur principale"
 POWER_BLOC_COA_PIECE_SHIELD_PATTERN_COLOR2_LABEL: "Couleur secondaire"
 POWER_BLOC_COA_PIECE_CENTER_COLOR1_LABEL: "Couleur de l’emblème"
 POWER_BLOC_COA_PIECE_SHIELD_PATTERN_LABEL: "Motif de l’écu"
 POWER_BLOC_COA_PIECE_SHIELD_FRAME_LABEL: "Cadre de l’écu"
 POWER_BLOC_COA_PIECE_CENTER_LABEL: "Centre"
 POWER_BLOC_COA_PIECE_SIDE_LABEL: "Côté"
 POWER_BLOC_COA_PIECE_TOP_LABEL: "Haut"
 POWER_BLOC_COA_PIECE_ITEM_TOOLTIP: "#header [PowerBlocCoaPiece.GetName]#!\n[SelectLocalization(PowerBlocCoaPiece.IsSelected, 'POWER_BLOC_CUSTOMIZATION_OPTION_ITEM_TOOLTIP_SELECTED', 'POWER_BLOC_CUSTOMIZATION_OPTION_ITEM_TOOLTIP_NOT_SELECTED')]"
 POWER_BLOC_MAP_TEXTURE_ITEM_TOOLTIP: "#header [PowerBlocMapTexture.GetName]#!\n[SelectLocalization(PowerBlocMapTexture.IsSelected, 'POWER_BLOC_CUSTOMIZATION_OPTION_ITEM_TOOLTIP_SELECTED', 'POWER_BLOC_CUSTOMIZATION_OPTION_ITEM_TOOLTIP_NOT_SELECTED')]"
 POWER_BLOC_MAP_TEXTURE_SELECTOR_LABEL: "Motif de la carte"
 POWER_BLOC_MAP_TEXTURE_NAME: "Motif $VALUE$"
 POWER_BLOC_CUSTOMIZATION_OPTION_ITEM_TOOLTIP_SELECTED: "#i Actuellement sélectionné#!"
 POWER_BLOC_CUSTOMIZATION_OPTION_ITEM_TOOLTIP_NOT_SELECTED: "#i Cliquez pour sélectionner#!"
 FORM_POWER_BLOC_CONFIRM_BUTTON_TOOLTIP: "Former le [concept_power_bloc|l] #header [ConcatIfNeitherEmpty(PowerBlocFormation.GetChosenName,' ')]#! [AddTextIf(Not(StringIsEmpty(GetDesc(PowerBlocFormation.Confirm))),'\n$TOOLTIP_DELIMITER$\n')][GetDesc(PowerBlocFormation.Confirm)]"
 POWER_BLOC_CUSTOMIZATION_CONFIRM_BUTTON_TOOLTIP: "#header Confirmer#!\n[ConcatIfNeitherEmpty(PowerBlocCustomizationPopup.ConfirmGetDesc, '\n\n')]"
 POWER_BLOC_CHOOSE_A_NAME_PROMPT: "#i Ajouter un nom#!"
 POWER_BLOC_FORMATION_SELECT_IDENTITY_TITLE: "#header Sélectionner un [concept_power_bloc_identity|l] :#!"
 POWER_BLOC_IDENTITY_NOT_SELECTED: "Le [concept_power_bloc_identity|l] n’est pas sélectionné"
 POWER_BLOC_IDENTITY_CANNOT_SELECT: "Impossible de sélectionner l’identité #v [PowerBlocIdentity.GetName]#! :\n$TAB$[PowerBlocIdentity.GetIsPossibleDesc]"
 POWER_BLOC_PRINCIPLE_CANNOT_SELECT: "Impossible de sélectionner le principe #v [PowerBlocPrinciple.GetName]#! :\n$TAB$[PowerBlocPrinciple.GetIsPossibleDesc]"
 POWER_BLOC_IDENTITY_COUNTRY_CANNOT_JOIN: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] ne peut pas rejoindre le bloc [PowerBloc.GetName] avec le [concept_power_bloc_identity|l] #v [PowerBlocIdentity.GetName]#! en raison de :\n$DESC$"
 POWER_BLOC_COUNTRY_CANNOT_LEAVE_DUE_TO_IDENTITY: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] ne peut pas quitter le bloc [POWER_BLOC.GetName] avec le [concept_power_bloc_identity|l] #v [PowerBlocIdentity.GetName]#!. Conditions pour pouvoir le quitter :\n$DESC$"
 POWER_BLOC_COUNTRY_CANNOT_LEAVE_ON_COOLDOWN: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] ne peut pas quitter le bloc [PowerBloc.GetName] avant le [Date.GetString|v]"
 POWER_BLOC_COUNTRY_IS_IN_POWER_STRUGGLE: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] [Country.GetAltNameNoFormatting('EstSont')] en pleine [concept_power_struggle|l] contre le chef"
 POWER_BLOC_KICK_MEMBER_COMMAND_CONFIRMATION: "#header Retirer [Country.GetAltNameNoFormatting('Le')][Country.GetName] du bloc [PowerBloc.GetName]#!\n\nEffets supplémentaires : #indent_newline:3 \n$EFFECT$#!"
 POWER_BLOC_FORMATION_SELECT_PRINCIPLES_TITLE: "#header Sélectionner des [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')|l] :#!"
 POWER_BLOC_FORMATION_PRINCIPLE_POINTS_REMAINING: "Points restants : #v [PowerBlocFormation.GetPrinciplePointsRemainingRaw]/[GetDefine('NPowerBlocs', 'INITIAL_PRINCIPLE_LEVELS')]#!"
 POWER_BLOC_FORMATION_HAS_SAME_GROUP_PRINCIPLES: "Un [concept_power_bloc|l] ne peut pas avoir de [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')|l] du même groupe"
 POWER_BLOC_FORMATION_INSUFFICIENT_INFLUENCE: "[concept_influence] @inf! insuffisante ($REQUIRED_VALUE|v0$@inf! requise / $CURRENT_VALUE|v0$@inf! disponible)"
 POWER_BLOC_FORMATION_UNSPENT_PRINCIPLE_POINTS: "Utiliser tous les [Concept('concept_power_bloc_mandate','$concept_power_bloc_mandates$')|l] disponibles"
 POWER_BLOC_PRINCIPLE_IS_LOCKED_BY_IDENTITY: "[PowerBlocPrinciple.GetGroup.GetName] nécessite $IDENTITIES$"
 POWER_BLOC_PRINCIPLE_IS_BLOCKED_BY_IDENTITY: "Impossible de sélectionner [PowerBlocPrinciple.GetGroup.GetName] avec le [concept_power_bloc_identity|l] [POWER_BLOC_IDENTITY.GetName]"
 POWER_BLOC_PRINCIPLES_SLOTS_EXCEED_MAX_COUNT: "Un [concept_power_bloc|l] ne peut pas avoir plus de #v [GetDefine('NPowerBlocs', 'MAX_PRINCIPLES')]#! [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')|l]"
 POWER_BLOC_COUNTRY_CANNOT_JOIN_ON_COOLDOWN: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] ne peut pas rejoindre le bloc [PowerBloc.GetName] avant le [Date.GetString|v]"
 POWER_BLOC_COUNTRY_IS_POWER_BLOC_LEADER: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] [Country.GetAltNameNoFormatting('EstSont')] le chef d’un [concept_power_bloc|l]"
 POWER_BLOC_COUNTRY_IS_ALREADY_IN_ANOTHER_POWER_BLOC: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] appartient déjà à un autre [concept_power_bloc|l]"
 POWER_BLOC_COUNTRY_IS_ALREADY_IN_POWER_BLOC: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] appartient déjà au [concept_power_bloc|l] [PowerBloc.GetName]"
 POWER_BLOC_COUNTRY_IS_SUBJECT: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] est un [concept_subject|l] [Country.GetOverlord.GetAltNameNoFormatting('Du')][Country.GetOverlord.GetName] et ne peut pas appartenir à un autre [concept_power_bloc|l] que celui de son [concept_overlord|l]"
 POWER_BLOC_CANNOT_SWITCH_SIDE: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] ne peut pas s’opposer [TARGET_COUNTRY.GetAltNameNoFormatting('Au')][TARGET_COUNTRY.GetName] en raison de :\n$TAB$$BREAKDOWN$"
 POWER_BLOC_CANNOT_SIDE_AGAINST_OVERLORD: "[SCOPE.GetRootScope.GetCountry.GetAltNameNoFormatting('Le')|U][SCOPE.GetRootScope.GetCountry.GetName] ne peut pas s’opposer au [concept_overlord|l] d’un autre [concept_power_bloc_member|l] en raison de :\n$TAB$$modifier_power_bloc_disallow_war$"
 POWER_BLOC_COHESION: "[concept_power_bloc_cohesion]"
 POWER_BLOC_COHESION_LEVEL: "[Country.GetPowerBloc.GetCohesion|v0]"
 POWER_BLOC_COHESION_TOOLTIP: "#header [concept_power_bloc_cohesion]#!\nValeur : $VALUE$\n$TOOLTIP_DELIMITER$$BREAKDOWN$"
 POWER_BLOC_COHESION_PREDICTION_JOIN: "Le niveau de [concept_power_bloc_cohesion|l] cible du bloc [POWER_BLOC.GetName] changera de #v $VALUE|=+$#! si [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] le rejoint"
 POWER_BLOC_COHESION_PREDICTION_REMOVE: "Le niveau de [concept_power_bloc_cohesion|l] cible du bloc [POWER_BLOC.GetName] changera de #v $VALUE|=+$#! si [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] le quitte"
 POWER_BLOC_IDENTITY_HEADER: "Pilier de l’identité collective"
 PICK_AT_LEAST_ONE_PRIMARY: "@information! #title Un principe principal est requis#!"
 POWER_BLOC_PRINCIPLES_HEADER: "Principes"
 POWER_BLOC_LEADER_HEADER: "Chef"
 POWER_BLOC_MEMBERS_HEADER: "Membres"
 POWER_BLOC_NO_MEMBERS: "Aucun membre"
 POWER_BLOC_MEMBER_COUNTRY_NAME_HEADER_TOOLTIP: "Trier les membres par nom"
 POWER_BLOC_MEMBER_PRESTIGE_HEADER_TOOLTIP: "Trier les membres par [concept_prestige|l]"
 POWER_BLOC_MEMBER_LEVERAGE_HEADER_TOOLTIP: "Trier les membres par [concept_power_bloc_leverage|l]"
 POWER_BLOC_MANDATE_PROGRESS_TOOLTIP: "#header [concept_power_bloc_mandate_progress]#!\n$concept_power_bloc_mandate_progress$ actuelle : [PowerBloc.GetCurrentMandateProgress|v0]/[GetDefine('NPowerBlocs', 'MAX_MANDATE_PROGRESS')] (#v [PowerBloc.GetCurrentMandateProgressPercentage|%0]#!)\nGagnera un [concept_power_bloc_mandate|l] dans [LabelingHelper.GetRemainingDuration(PowerBloc.GetNextMandateDate.Self, '')]\n$TOOLTIP_DELIMITER$\n$concept_power_bloc_mandate_progress$ hebdomadaire : [PowerBloc.GetWeeklyMandateProgress|v0]#indent_newline:3 \n[PowerBloc.GetWeeklyMandateProgressDesc]#!"
 POWER_BLOC_MANDATE_PROGRESS_TIMER: "[LabelingHelper.GetRemainingDuration(PowerBloc.GetNextMandateDate.Self, '_SHORT')]"
 POWER_BLOC_MANDATE_PROGRESS_BASE: "Du classement du bloc [PowerBloc.GetRankFormatted]"
 POWER_BLOC_MANDATE_PROGRESS_FROM_GREAT_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_GREAT_POWER_MEMBERS_TOOLTIP Des membres d’une [concept_great_power|l]#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_GREAT_POWER_MEMBERS_TOOLTIP: "Nombre de membres d’une [concept_great_power|l] : [PowerBloc.MakeScope.ScriptValue('power_bloc_great_power_non_leader_members')]\nSomme : [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_great_power_member_add')]\nMultiplication : [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_great_power_member_mult')]"
 POWER_BLOC_MANDATE_PROGRESS_FROM_MAJOR_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_MAJOR_POWER_MEMBERS_TOOLTIP Des membres d’une [concept_major_power|l]#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_MAJOR_POWER_MEMBERS_TOOLTIP: "Nombre de membres d’une [concept_major_power|l] : [PowerBloc.MakeScope.ScriptValue('power_bloc_major_power_non_leader_members')]\nSomme : [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_major_power_member_add')]\nMultiplication : [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_major_power_member_mult')]"
 POWER_BLOC_MANDATE_PROGRESS_FROM_MINOR_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_MINOR_POWER_MEMBERS_TOOLTIP Des membres d’une [concept_minor_power|l]#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_MINOR_POWER_MEMBERS_TOOLTIP: "Nombre de membres d’une [concept_minor_power|l] : [PowerBloc.MakeScope.ScriptValue('power_bloc_minor_power_non_leader_members')]\nSomme : [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_minor_power_member_add')]\nMultiplication : [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_minor_power_member_mult')]"
 POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_MAJOR_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_MAJOR_POWER_MEMBERS_TOOLTIP Des membres d’une [Concept('concept_unrecognized_power','$concept_unrecognized_major_power$')|l]#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_MAJOR_POWER_MEMBERS_TOOLTIP: "Nombre de membres d’une [Concept('concept_unrecognized_power','$concept_unrecognized_major_power$')|l] : [PowerBloc.MakeScope.ScriptValue('power_bloc_unrecognized_major_power_non_leader_members')]\nSomme : [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_unrecognized_major_power_member_add')]\nMultiplication : [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_unrecognized_major_power_member_mult')]"
 POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_REGIONAL_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_REGIONAL_POWER_MEMBERS_TOOLTIP Des membres d’une [Concept('concept_unrecognized_power','$concept_unrecognized_regional_power$')|l]#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_REGIONAL_POWER_MEMBERS_TOOLTIP: "Nombre de membres d’une [Concept('concept_unrecognized_power','$concept_unrecognized_regional_power$')|l] : [PowerBloc.MakeScope.ScriptValue('power_bloc_unrecognized_regional_power_non_leader_members')]\nSomme : [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_unrecognized_regional_power_member_add')]\nMultiplication : [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_unrecognized_regional_power_member_mult')]"
 POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_POWER_MEMBERS_TOOLTIP Des membres d’une [concept_unrecognized_power|l]#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_UNRECOGNIZED_POWER_MEMBERS_TOOLTIP: "Nombre de membres d’une [concept_unrecognized_power|l] : [PowerBloc.MakeScope.ScriptValue('power_bloc_unrecognized_power_non_leader_members')]\nSomme : [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_unrecognized_power_member_add')]\nMultiplication : [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_unrecognized_power_member_mult')]"
 POWER_BLOC_MANDATE_PROGRESS_FROM_INSIGNIFICANT_POWER_MEMBERS: "#tooltippable #tooltip:[PowerBloc.GetTooltipTag],POWER_BLOC_MANDATE_PROGRESS_FROM_INSIGNIFICANT_POWER_MEMBERS_TOOLTIP Des membres d’une [concept_insignificant_power|l]#!#!"
 POWER_BLOC_MANDATE_PROGRESS_FROM_INSIGNIFICANT_POWER_MEMBERS_TOOLTIP: "Nombre de membres d’une [concept_insignificant_power|l] : [PowerBloc.MakeScope.ScriptValue('power_bloc_insignificant_power_non_leader_members')]\nSomme : [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_insignificant_power_member_add')]\nMultiplication : [PowerBloc.GetModifier.GetValueWithBreakdownFor('power_bloc_mandate_progress_per_insignificant_power_member_mult')]"
 PRINCIPLE: "#bold [Principle.GetNameNoFormatting]#!"
 ADD_NEW_PRINCIPLE_DURING_FORMATION: "[SelectLocalization(GreaterThan_int32(PowerBlocFormation.GetPrinciplePointsRemainingRaw, '(int32)0'), 'ADD_NEW_PRINCIPLE', 'NO_MANDATES')]"
 ADD_NEW_PRINCIPLE_DURING_FORMATION_TOOLTIP: "[SelectLocalization(GreaterThan_int32(PowerBlocFormation.GetPrinciplePointsRemainingRaw, '(int32)0'), 'TOOLTIP_ADD_NEW_PRINCIPLE_SLOT_LEADER', 'NO_MANDATES_TOOLTIP')]"
 NO_MANDATES: "Aucun mandat"
 NO_MANDATES_TOOLTIP: "@simple_box! Ayez au moins #v 1#! [concept_power_bloc_mandate|l] disponible"
 ADD_NEW_PRINCIPLE_TOOLTIP: "[SelectLocalization(GreaterThan_int32(PowerBloc.GetNumMandates, '(int32)0'), 'TOOLTIP_ADD_NEW_PRINCIPLE_SLOT_LEADER', 'NO_MANDATES_TOOLTIP')]"
 ADD_NEW_PRINCIPLE: "Ajouter un principe"
 NO_NEW_PRINCIPLE: "Aucun principe"
 LOCKED_PRINCIPLE_SLOT: "Verrouillé"
 TOOLTIP_LOCKED_PRINCIPLE_SLOT: "Cet emplacement de [concept_power_bloc_principle|l] sera disponible si :\n[PowerBlocPrincipleSlot.GetUnlockDesc]"
 TOOLTIP_LOCKED_PRINCIPLE_SLOT_DURING_FORMATION: "D’autres emplacements de [concept_power_bloc_principle|l] seront disponibles quand votre [concept_power_bloc|l] atteindra un rang plus élevé et accueillera plus de [Concept('concept_power_bloc_member','$concept_power_bloc_members_extra_short$')|l]"
 TOOLTIP_LOCKED_PRINCIPLE_SLOT_3_DURING_FORMATION: "Disponible si le rang de votre [concept_power_bloc|l] est de #v ##5#! ou plus, et si vous avez au moins #v 5#! [Concept('concept_power_bloc_member','$concept_power_bloc_members_extra_short$')|l]"
 TOOLTIP_LOCKED_PRINCIPLE_SLOT_4_DURING_FORMATION: "Disponible si le rang de votre [concept_power_bloc|l] est de #v ##3#! ou plus, et si vous avez au moins #v 10#! [Concept('concept_power_bloc_member','$concept_power_bloc_members_extra_short$')|l]"
 AVAILABLE_MANDATES: "[PowerBloc.GetNumMandates|v] [Concept('concept_power_bloc_mandate','$concept_power_bloc_mandates$')|l] disponibles"
 POWER_BLOC_FORMATION_CUSTOMIZATION: "Personnalisation"
 LEAVE_POWER_BLOC: "Quitter"
 TOOLTIP_LEAVE_POWER_BLOC: "Cliquez pour quitter le bloc [PowerBloc.GetName].[ConcatIfNeitherEmpty( '\n\n', GetDesc( GetPlayer.LeavePowerBloc ))]"
 LEAVE_POWER_BLOC_CONFIRMATION: "Voulez-vous vraiment quitter le bloc [PowerBloc.GetName] ? Cela réduira nos [concept_relations|l] avec tous les autres [Concept('concept_power_bloc_member','$concept_power_bloc_members_short$')|l]."
 POWER_BLOC_COUNTRY_NOT_IN_POWER_BLOC: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] n’appartient pas à un [concept_power_bloc|l]"
 POWER_BLOC_COUNTRY_NOT_POWER_BLOC_LEADER: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] n’occup[Country.GetAltNameNoFormatting('EEnt')] pas le rôle de chef du bloc [PowerBloc.GetName]"
 POWER_BLOC_COUNTRY_NOT_A_POWER_BLOC_LEADER: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] n’occup[Country.GetAltNameNoFormatting('EEnt')] pas le rôle de chef d’un [concept_power_bloc|l]"
 POWER_BLOC_COUNTRIES_NOT_IN_THE_SAME_POWER_BLOC: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] n’appartient pas au même [concept_power_bloc|l] que [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 POWER_BLOC_ALREADY_HAS_PRINCIPLE: "Le principe [PowerBlocPrinciple.GetName] est déjà actif dans un autre emplacement de [concept_power_bloc_principle|l]"
 POWER_BLOC_ALREADY_HAS_PRINCIPLE_SAME_SLOT: "Le principe [PowerBlocPrinciple.GetName] est déjà actif dans cet emplacement de [concept_power_bloc_principle|l]"
 POWER_BLOC_HAS_PRINCIPLE_OF_SAME_GROUP: "Un [concept_power_bloc_principle|l] du groupe [PowerBlocPrincipleGroup.GetName] est déjà actif dans un autre emplacement de [concept_power_bloc_principle|l]"
 POWER_BLOC_NOT_ENOUGH_MANDATES: "Ayez au moins #v $COST|0$#! [SelectLocalization(EqualTo_int32('(int32)$COST$', '(int32)1'), 'MANDATE_CONCEPT', 'MANDATES_CONCEPT')|l]"
 POWER_BLOC_NO_PRIMARY_PRINCIPLES_SELECTED: "Aucun des [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')|l] des [Concept('concept_power_bloc_primary_principle_group','$concept_power_bloc_primary_principle_groups$')|l] pour l’[Concept('concept_power_bloc_identity','$concept_power_bloc_identity_extra_short$')|l] [POWER_BLOC_IDENTITY.GetName] n’a été sélectionné"
 POWER_BLOC_PRINCIPLE_ON_COOLDOWN: "Le principe [POWER_BLOC_PRINCIPLE.GetName] est en cours de rechargement et ne peut pas être modifié avant le [DATE.GetString|v]"
 POWER_BLOC_PRINCIPLE_IS_INCOMPATIBLE: "Le principe [POWER_BLOC_PRINCIPLE.GetName] n’est pas compatible avec le principe [POWER_BLOC_PRINCIPLE_OTHER.GetName]"
 POWER_BLOC_LEADER_EXPENSE_LIST_ITEM: "#negative_value -$VAL|0$#! du [Concept('concept_power_bloc_leader','$concept_power_bloc_leader_extra_short$')|l] du bloc [PowerBloc.GetName]"
 POWER_BLOC_COUNTRY_IS_COLONIZABLE: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] est une [concept_decentralized_nation|l]."
 EXISTING_POWER_BLOCS_HEADER: "Blocs de nations dans le monde"
 POWER_BLOC_PLAYER_HAS_THIS_IDENTITY: "@green_checkmark_box! [GetPlayer.GetPowerBloc.GetName] possède ce [concept_power_bloc_identity|l]"
 POWER_BLOC_IDENTITY_POWER_BLOC_EFFECT: "#title [concept_power_bloc] :#!\n$DESC$"
 POWER_BLOC_IDENTITY_MEMBER_EFFECT: "#title Tous les [Concept('concept_power_bloc_member','$concept_power_bloc_members_short$')|l] :#!\n$DESC$"
 POWER_BLOC_IDENTITY_LEADER_EFFECT: "#title [Concept('concept_power_bloc_leader','$concept_power_bloc_leader_short$')] uniquement :#!\n$DESC$"
 POWER_BLOC_IDENTITY_NON_LEADER_EFFECT: "#title [Concept('concept_power_bloc_member','$concept_power_bloc_members_short_non_leader$')] :#!\n$DESC$"
 POWER_BLOC_PLAYER_CAN_UPGRADE_THIS_PRINCIPLE: "@arrow_up! Vous pouvez améliorer ce [concept_power_bloc_principle|l]"
 POWER_BLOC_PLAYER_HAS_THIS_PRINCIPLE: "@green_checkmark_box! [GetPlayer.GetPowerBloc.GetName] possède ce principe"
 POWER_BLOC_HAS_THIS_PRINCIPLE: "@green_checkmark_box! Le bloc [PowerBloc.GetName] possède ce principe"
 POWER_BLOC_HAS_THIS_PRINCIPLE_GROUP: "@red_cross! Le bloc #v [PowerBloc.GetName]#! possède déjà un autre principe du groupe [PowerBlocPrincipleGroup.GetName]"
 POWER_BLOC_FORMATION_HAS_THIS_PRINCIPLE: "@green_checkmark_box! Le bloc [PowerBlocFormation.GetChosenName] possède ce principe"
 POWER_BLOC_FORMATION_HAS_THIS_PRINCIPLE_GROUP: "@red_cross! Le bloc #v [PowerBlocFormation.GetChosenName]#! a déjà sélectionné un autre principe du groupe [PowerBlocPrincipleGroup.GetName]"
 POWER_BLOC_PLAYER_PRINCIPLE_IS_ON_COOLDOWN: "#italic Ce [concept_power_bloc_principle|l] a été récemment sélectionné et ne peut pas être modifié avant [AccessPlayer.AccessPowerBloc.GetPrincipleData(PowerBlocPrinciple.Self).GetCooldownDate.GetString|v]#!"
 POWER_BLOC_PLAYER_PRINCIPLE_INFO: "$POWER_BLOC_PLAYER_HAS_THIS_PRINCIPLE$[ConcatIfNeitherEmpty('\n', AddLocalizationIf(GetPlayer.GetPowerBloc.IsPrincipleOnCooldown(PowerBlocPrinciple.Self), 'POWER_BLOC_PLAYER_PRINCIPLE_IS_ON_COOLDOWN'))]"
 POWER_BLOC_PRINCIPLE_POWER_BLOC_EFFECT: "#title [concept_power_bloc] :#!\n$DESC$"
 POWER_BLOC_PRINCIPLE_MEMBER_EFFECT: "#title Tous les [Concept('concept_power_bloc_member','$concept_power_bloc_members_short$')|l] :#!\n$DESC$"
 POWER_BLOC_PRINCIPLE_LEADER_EFFECT: "#title [Concept('concept_power_bloc_leader','$concept_power_bloc_leader_short$')] uniquement :#!\n$DESC$"
 POWER_BLOC_PRINCIPLE_NON_LEADER_EFFECT: "#title [Concept('concept_power_bloc_member','$concept_power_bloc_members_short_non_leader$')] :#!\n$DESC$"
 POWER_BLOC_PRINCIPLE_INSTITUTION_EFFECT: "Fournit [InstitutionType.GetName] en :\n$DESC$"
 POWER_BLOC_PRINCIPLE_ON_SELECTED_LABEL: "#title En cas de sélection :#!"
 POWER_BLOC_PRINCIPLE_ON_MEMBER_JOINED_LABEL: "#title Lorsqu'un [concept_country|l] rejoint le bloc :#!"
 POWER_BLOC_PRINCIPLE_INCOMPATIBLE_PRINCIPLES: "Incompatible avec ce qui suit : $LIST$"
 POWER_BLOC_PLAYER_HAS_THIS_PRINCIPLE_GROUP: "@green_checkmark! [GetPlayer.GetPowerBloc.GetName] possède un [concept_power_bloc_principle|l] de ce [concept_power_bloc_principle_group|l]"
 POWER_BLOC_PRINCIPLE_GROUP_LEVELS: "Dispose des niveaux suivants : $LIST$"
 POWER_BLOC_CAN_INVITE_COUNTRY: "Peut être invité à rejoindre le bloc [PowerBloc.GetNameNoFormatting]"
 POWER_BLOC_CANNOT_INVITE_COUNTRY: "@red_cross! Ne peut pas être invité à rejoindre le bloc [PowerBloc.GetNameNoFormatting] en raison de :\n$DESC$"
 POWER_BLOC_NON_MEMBER_COUNTRY_TOOLTIP: "#header [Country.GetName]#!\nNe fait partie d’aucun [concept_power_bloc|l][ConcatIfNeitherEmpty('\n', '$INVITE_DESC$')][ConcatIfNeitherEmpty( '\n$TOOLTIP_DELIMITER$\n',Country.GetLeverageBreakdown)]"
 POWER_BLOC_ACTIVE_LEVERAGE_GAIN_DESC: "En raison du gain d’[concept_power_bloc_leverage_advantage|l] du bloc [PowerBloc.GetName] de #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|+=0$#!#!"
 POWER_BLOC_ACTIVE_LEVERAGE_COUNTER_GAIN_DESC: "En raison du gain d’[concept_power_bloc_leverage_advantage|l] du bloc concurrent [PowerBloc.GetName] de #tooltippable #tooltip:$BREAKDOWN_TAG$ [Negate_CFixedPoint('(CFixedPoint)$VALUE$')|+=0]#!#!"
 POWER_BLOC_LEVERAGE_ADVANTAGE_TOOLTIP: "[concept_power_bloc_leverage_advantage] du [concept_power_bloc|l] sur un autre [concept_country|l]"
 POWER_BLOC_LEVERAGE_ADVANTAGE_PLAYER_TOOLTIP: "#header [concept_power_bloc_leverage_advantage] sur [GetPlayer.GetAltNameNoFormatting('Le')][GetPlayer.GetName]#!\n#v [PowerBloc.GetLeverageAdvantage(GetPlayer.Self)|+=0]#! pour le bloc [PowerBloc.GetName]\n$TOOLTIP_DELIMITER$\n[PowerBloc.GetLeverageAdvantageDesc(GetPlayer.Self)]"
 POWER_BLOC_LEVERAGE_SELF_ADVANTAGE: "Actuellement en tête"
 POWER_BLOC_LEVERAGE_OTHER_ADVANTAGE: "Le bloc [POWER_BLOC_OTHER.GetName] est actuellement en tête"
 POWER_BLOC_LEVERAGE_NOBODY_ADVANTAGE: "Aucun [concept_power_bloc|l] n’est actuellement en tête"
 POWER_BLOC_LEVERAGE_COUNTRY_ADVANTAGE: "#todo 999 (99 %)#! #b #tooltip:country_leverage_resistance_add_desc La [country_leverage_resistance_add|l]#!#! [Country.GetAltNameNoFormatting('Du')][Country.GetName] est actuellement supérieure à l’[concept_power_bloc_leverage|l] de tous les [Concept('concept_power_bloc','$concept_power_blocs$')|l]"
 POWER_BLOC_LEVERAGE_ADVANTAGE_BREAKDOWN: "$BREAKDOWN$"
 POWER_BLOC_LEVERAGES_HEADER: "Tendances de l’[concept_power_bloc_leverage|l] pour les [Concept('concept_power_bloc','$concept_power_blocs$')|l] :"
 POWER_BLOC_LEVERAGE_ENTRY: "#v [PowerBloc.GetLeverageAdvantage(Country.Self)|+=0]#! [PowerBloc.GetName] : #v $CURRENT_LEVERAGE|0$#! @arrow_right! #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $TARGET_LEVERAGE|0$#!#!#! ($TARGET_LEVERAGE_SHARE|%1$)"
 POWER_BLOC_UNCLAIMED_LEVERAGE: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $UNCLAIMED_LEVERAGE|v0$#!#! ($UNCLAIMED_LEVERAGE_SHARE|%1$) @arrow_right! [Country.GetUnclaimedLeverageTarget|v0] ([Country.GetUnclaimedLeverageShareTarget|%1]) d’[concept_power_bloc_unclaimed_leverage|l]"
 POWER_BLOC_LEVERAGE_GAIN_FROM_INTEREST: "Un [Concept('concept_power_bloc_member','$concept_power_bloc_member_extra_short$')|l] du bloc [SCOPE.GetRootScope.GetCountry.GetPowerBloc.GetName] a de l’[concept_interest|l] pour [SCOPE.sCountry('target').GetAltNameNoFormatting('Le')][SCOPE.sCountry('target').GetName]"
 POWER_BLOC_LEVERAGE_GAIN_NO_CAPITAL_INTEREST: "Aucun [Concept('concept_power_bloc_member','$concept_power_bloc_member_extra_short$')|l] du bloc [SCOPE.GetRootScope.GetCountry.GetPowerBloc.GetName] n’a de l’[concept_interest|l] pour la [Concept( 'concept_capital_state', '$concept_capital_state_short$' )|l] [SCOPE.sCountry('target').GetAltNameNoFormatting('Du')][SCOPE.sCountry('target').GetName], [SCOPE.sCountry('target').GetCapital.GetName]"
 POWER_BLOC_LEVERAGE_GAIN_DECAY: "Aucun [concept_interest|l] pour [SCOPE.sCountry('target').GetAltNameNoFormatting('Le')][SCOPE.sCountry('target').GetName]"
 POWER_BLOC_INACTIVE_LEVERAGE_GAIN_DECAY: "Statut inactif du bloc [SCOPE.GetRootScope.GetCountry.GetPowerBloc.GetName]"
 POWER_BLOC_LEVERAGE_GAIN_FORMAT: "$VALUE|+=0$ de $KEY$"
 POWER_BLOC_LEVERAGE_COUNTER_GAIN_FORMAT: "[Negate_CFixedPoint('(CFixedPoint)$VALUE$')|+=0] de $KEY$"
 POWER_BLOC_LEVERAGE_GAIN_FROM_LOBBY_CLOUT: "#v $VALUE|+=0$#! en raison du [concept_clout|l] du lobby [POLITICAL_LOBBY.GetName]"
 POWER_BLOC_LEVERAGE_GAIN_FROM_DIPLOMATIC_PACT: "#v $VALUE|%=+1$#! en raison du pacte [DIPLOMATIC_PACT.GetName]"
 POWER_BLOC_ADDED_LEVERAGE_GAIN_FROM_DIPLOMATIC_PACT: "#v $VALUE|+=0$#! en raison du pacte [DIPLOMATIC_PACT.GetName]"
 POWER_BLOC_LEVERAGE_GAIN_FROM_TREATY_ARTICLE: "#v $VALUE|%=+1$#! en raison de l’article [TREATY_ARTICLE.GetName]"
 POWER_BLOC_ADDED_LEVERAGE_GAIN_FROM_TREATY_ARTICLE: "#v $VALUE|+=0$#! en raison de l’article [TREATY_ARTICLE.GetName]"
 POWER_BLOC_LEVERAGE_PENALTY_FROM_EXPELLED_DIPLOMATS: "Diplomates expulsés"
 POWER_BLOC_LEVERAGE_GAIN_IN_COMMON_WAR: "[concept_war] commune"
 POWER_BLOC_LEVERAGE_GAIN_NOT_IN_COMMON_WAR: "Aucune [concept_war|l] commune"
 POWER_BLOC_LEVERAGE_GAIN_FROM_ECONOMIC_DEPENDENCE: "[concept_economic_dependence] à l’égard [SCOPE.GetRootScope.GetCountry.GetAltNameNoFormatting('Du')][SCOPE.GetRootScope.GetCountry.GetName] ([SCOPE.sCountry('target').GetEconomicDependenceOn(SCOPE.GetRootScope.GetCountry.Self)])"
 POWER_BLOC_LEVERAGE_PENALTY_FROM_DISCRIMINATED_PRIMARY_CULTURE: "[Concept('concept_primary_cultures','$concept_primary_culture$')] ayant une faible [concept_acceptance|l]"
 POWER_BLOC_LEVERAGE_GAIN_FROM_MEMBERSHIP: "Déjà [concept_power_bloc_member|l]"
 POWER_BLOC_LEVERAGE_GAIN_FROM_CULTURAL_PROXIMITY: "[Concept('concept_cultural_trait','$concept_cultural_traits$')] communs"
 POWER_BLOC_LEVERAGE_PENALTY_FROM_DISCRIMINATED_RELIGION: "[concept_state_religion] ayant une faible [concept_acceptance|l]"
 POWER_BLOC_LEVERAGE_GAIN_FROM_SHARED_RELIGION: "[concept_state_religion] commune"
 POWER_BLOC_LEVERAGE_GAIN_NO_SHARED_RELIGION: "[Concept('concept_state_religion','$concept_state_religions$')] différentes"
 LEVERAGE_ON_LEADER_NOT_APPLICABLE: "L’[concept_power_bloc_leverage|l] ne s’applique pas au chef d’un [concept_power_bloc|l]"
 LEVERAGE_ON_PLAYER_LEADER_NOT_APPLICABLE: "L’[concept_power_bloc_leverage|l] ne s’applique pas à vous car vous êtes chef d’un [concept_power_bloc|l]"
 POWER_BLOC_LEVERAGE_NO_INTEREST: "Aucun [concept_power_bloc_member|l] [PowerBloc.GetName] n’a de l’[concept_interest|l] pour [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 POWER_BLOC_LEVERAGE_DECENTRALIZED: "Aucun [concept_power_bloc|l] ne peut gagner d’[concept_power_bloc_leverage|l] [Country.GetAltNameNoFormatting('En')][Country.GetName] car il s’agit d’une [concept_decentralized_nation|l]"
 POWER_BLOC_LEVERAGE_HAS_TREATY_PORT: "[concept_treaty_port]"
 POWER_BLOC_LEVERAGE_HAS_WAR_WITH: "en [concept_war|l] contre [SCOPE.sCountry('target').GetAltNameNoFormatting('Le')][SCOPE.sCountry('target').GetName]"
 POWER_BLOC_LEVERAGE_ADJACENT_TO_LEADER: "[concept_power_bloc_leader|l] adjacent [SCOPE.sCountry('target').GetAltNameNoFormatting('Au')][SCOPE.sCountry('target').GetName]"
 POWER_BLOC_LEVERAGE_STRATEGIC_ADJACENCY: "proximité stratégique avec [SCOPE.sCountry('target').GetAltNameNoFormatting('Le')][SCOPE.sCountry('target').GetName]"
 POWER_BLOC_LEVERAGE_PENALTY_INFAMY: "[concept_infamy|l] élevée"
 POWER_BLOC_LEVERAGE_UNRECOGNIZED_LEADER_RECOGNIZED_TARGET: "[SCOPE.sCountry('target').GetAltNameNoFormatting('Le')|U][SCOPE.sCountry('target').GetName] est une puissance reconnue, tandis que le [concept_power_bloc_leader|l], [SCOPE.GetRootScope.GetCountry.GetAltNameNoFormatting('Le')][SCOPE.GetRootScope.GetCountry.GetNameNoFlag], est une puissance non reconnue"
 POWER_BLOC_LEDGER_COLUMN_LEADER: "Chef"
 POWER_BLOC_LEDGER_COLUMN_MEMBERS: "Membres"
 POWER_BLOC_LEDGER_COLUMN_IDENTITY: "Identité"
 POWER_BLOC_LEDGER_COLUMN_PRINCIPLES: "Principes"
 SHOW_SPECIFIC_POWER_BLOCS_MAP_MODE: "Afficher le [concept_power_bloc|l] sélectionné sur la carte."
 SHOW_ALL_POWER_BLOCS_MAP_MODE: "Afficher tous les [Concept('concept_power_bloc','$concept_power_blocs$')|l] sur la carte."
 TOOLTIP_ACTIVE_PRINCIPLE_SLOT_LEADER: "Cliquez pour modifier ou améliorer les [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')|l]."
 TOOLTIP_ADD_NEW_PRINCIPLE_SLOT_LEADER: "Cliquez pour ajouter un nouveau [concept_power_bloc_principle|l] dans cet emplacement."
 TOOLTIP_NO_PRINCIPLE_SLOT: "#header Emplacement de [concept_power_bloc_principle|l] vide#!\n[AddLocalizationIf(Not(PowerBloc.IsLeader(GetPlayer.Self)), 'TOOLTIP_NO_PRINCIPLE_SLOT_OTHER')]"
 TOOLTIP_NO_PRINCIPLE_SLOT_LEADER: "Emplacement de [concept_power_bloc_principle|l] vide"
 TOOLTIP_NO_PRINCIPLE_SLOT_OTHER: "@red_cross! Seul le [concept_power_bloc_leader|l] peut ajouter un nouveau [concept_power_bloc_principle|l]."
 TOOLTIP_ACTIVE_PRINCIPLE_SLOT_MEMBER: "Seul le [concept_power_bloc_leader|l] peut modifier ou améliorer les [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')|l]."
 PRINCIPLE_SELECTION_HEADER: "[SelectLocalization(PowerBlocPrincipleSelectionWindow.IsReplacingPrinciple, 'PRINCIPLE_SELECTION_HEADER_ACTIVE_SLOT', 'PRINCIPLE_SELECTION_HEADER_EMPTY_SLOT')]"
 PRINCIPLE_SELECTION_HEADER_EMPTY_SLOT: "Choisir un [concept_power_bloc_principle|l]"
 PRINCIPLE_SELECTION_HEADER_ACTIVE_SLOT: "Modifier ou améliorer le principe [PowerBlocPrincipleSelectionWindow.GetReplacedPrinciple.GetName]"
 AVAILABLE_PRINCIPLE_GROUPS: "[Concept('concept_power_bloc_principle_group','$concept_power_bloc_principle_groups$')] disponibles"
 POTENTIAL_PRINCIPLE_GROUPS: "[Concept('concept_power_bloc_principle_group','$concept_power_bloc_principle_groups$')] potentiels ([SelectLocalization(IsDataModelEmpty(PowerBlocPrincipleSelectionWindow.GetPotentialGroups), 'NONE', 'POTENTIAL_PRINCIPLE_GROUPS_COUNT')])"
 POTENTIAL_PRINCIPLE_GROUPS_COUNT: "[GetDataModelSize(PowerBlocPrincipleSelectionWindow.GetPotentialGroups)|v]"
 PRINCIPLE_GROUP_NAME_LABEL: "[PowerBlocPrincipleGroup.GetName] [AddLocalizationIf(And(PowerBlocPrincipleGroup.IsPrimaryFor(PowerBlocPrincipleSelectionWindow.GetPowerBlocFormation.GetSelectedIdentity.Self), PowerBlocPrincipleSelectionWindow.IsPowerBlocFormation), 'PRIMARY_PRINCIPLE_GROUP_LABEL')][AddLocalizationIf(And(PowerBlocPrincipleGroup.IsPrimaryFor(PowerBlocPrincipleSelectionWindow.GetPowerBloc.GetIdentity.Self), Not(PowerBlocPrincipleSelectionWindow.IsPowerBlocFormation)), 'PRIMARY_PRINCIPLE_GROUP_LABEL')]"
 PRIMARY_PRINCIPLE_GROUP_LABEL: "([Concept('concept_power_bloc_primary_principle_group','$concept_power_bloc_primary_principle_group_short$')|l])"
 PRINCIPLE_SELECTION_NO_SELECTION: "Aucun [concept_power_bloc_principle|l] sélectionné"
 PRINCIPLE_SELECTION_SUBMIT_BUTTON_LABEL: "Soumettre"
 PRINCIPLE_SELECTION_SUBMIT_BUTTON_TOOLTIP: "#header Soumettre les modifications#!\n[SelectLocalization(PowerBlocPrincipleSelectionWindow.HasSelectedPrinciple, 'PRINCIPLE_SELECTION_SUBMIT_BUTTON_TOOLTIP_CHANGES_MADE', 'PRINCIPLE_SELECTION_SUBMIT_BUTTON_NO_SELECTION')][ConcatIfNeitherEmpty('\n', AddLocalizationIf(PowerBlocPrincipleSelectionWindow.HasSelectedPrinciple, 'PRINCIPLE_SELECTION_SUBMIT_BUTTON_COST_WITH_BREAKDOWN'))][ConcatIfNeitherEmpty('\n\n', GetDesc(PowerBlocPrincipleSelectionWindow.SubmitPrincipleSelection))]"
 FORMATION_PRINCIPLE_SELECTION_SUBMIT_BUTTON_TOOLTIP: "#header Soumettre les modifications#!\n[SelectLocalization(PowerBlocPrincipleSelectionWindow.HasSelectedPrinciple, 'PRINCIPLE_SELECTION_SUBMIT_BUTTON_TOOLTIP_CHANGES_MADE', 'PRINCIPLE_SELECTION_SUBMIT_BUTTON_NO_SELECTION')][ConcatIfNeitherEmpty('\n', AddLocalizationIf(PowerBlocPrincipleSelectionWindow.HasSelectedPrinciple, 'PRINCIPLE_SELECTION_SUBMIT_BUTTON_COST_WITH_BREAKDOWN'))][ConcatIfNeitherEmpty('\n\n', PowerBlocPrincipleSelectionWindow.GetDescForPrincipleSelection(PowerBlocPrincipleSelectionWindow.GetSelectedPrinciple.Self))]"
 PRINCIPLE_SELECTION_SUBMIT_BUTTON_TOOLTIP_CHANGES_MADE: "[SelectLocalization(PowerBlocPrincipleSelectionWindow.IsReplacingPrinciple, 'PRINCIPLE_SELECTION_UPGRADE_REPLACE_ACTIVE_PRINCIPLE_WITH_SELECTED', 'PRINCIPLE_SELECTION_ADD_SELECTED_PRINCIPLE')]"
 PRINCIPLE_SELECTION_SUBMIT_BUTTON_NO_SELECTION: "@red_cross! Aucune modification effectuée"
 PRINCIPLE_SELECTION_SUBMIT_BUTTON_COST: "Cette action coûtera [PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple|v] [SelectLocalization(EqualTo_int32(PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple, '(int32)1'), 'MANDATE_CONCEPT', 'MANDATES_CONCEPT')|l]@power_bloc_mandate!"
 PRINCIPLE_SELECTION_SUBMIT_BUTTON_COST_WITH_BREAKDOWN: "Cette action coûtera [PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple|v] [SelectLocalization(EqualTo_int32(PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple, '(int32)1'), 'MANDATE_CONCEPT', 'MANDATES_CONCEPT')|l]@power_bloc_mandate!#indent_newline:3 \n[PowerBlocPrincipleSelectionWindow.GetMandateCostDescForSelectedPrinciple]"
 POWER_BLOC_PRINCIPLE_SELECTION_COST_UPGRADE: "[PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple|v]@power_bloc_mandate! en raison de l’amélioration d’un principe de niveau $OLD_LEVEL|v$ au niveau $NEW_LEVEL|v$"
 POWER_BLOC_PRINCIPLE_SELECTION_COST_ADD: "[PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple|v]@power_bloc_mandate! en raison de l’ajout d’un principe de niveau $NEW_LEVEL|v$"
 POWER_BLOC_PRINCIPLE_SELECTION_COST_REPLACE: "[PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple|v]@power_bloc_mandate! en raison du remplacement d’un principe existant par un principe de niveau $NEW_LEVEL|v$"
 PRINCIPLE_SELECTION_UPGRADE_REPLACE_ACTIVE_PRINCIPLE_WITH_SELECTED: "$PRINCIPLE_SELECTION_UPGRADE_REPLACE_ACTIVE_PRINCIPLE$ $PRINCIPLE_SELECTION_WITH_SELECTED_PRINCIPLE$"
 PRINCIPLE_SELECTION_UPGRADE_REPLACE_ACTIVE_PRINCIPLE: "[SelectLocalization(PowerBlocPrincipleSelectionWindow.IsUpgradingPrinciple, 'PRINCIPLE_SELECTION_UPGRADE_ACTIVE_PRINCIPLE', 'PRINCIPLE_SELECTION_REPLACE_ACTIVE_PRINCIPLE')]"
 PRINCIPLE_SELECTION_UPGRADE_ACTIVE_PRINCIPLE: "Améliorer le principe [PowerBlocPrincipleSelectionWindow.GetReplacedPrinciple.GetName]"
 PRINCIPLE_SELECTION_REPLACE_ACTIVE_PRINCIPLE: "Remplacer le principe [PowerBlocPrincipleSelectionWindow.GetReplacedPrinciple.GetName]"
 PRINCIPLE_SELECTION_WITH_SELECTED_PRINCIPLE: "par le principe [PowerBlocPrincipleSelectionWindow.GetSelectedPrinciple.GetName]"
 PRINCIPLE_SELECTION_ADD_SELECTED_PRINCIPLE: "Ajouter le principe [PowerBlocPrincipleSelectionWindow.GetSelectedPrinciple.GetName]"
 AVAILABLE_MANDATES_TITLE_FORMATION: "[SelectLocalization(EqualTo_int32(PowerBlocFormation.GetPrinciplePointsRemainingRaw, '(int32)1'), 'MANDATE_CONCEPT', 'MANDATES_CONCEPT')] disponibles"
 AVAILABLE_MANDATES_TITLE: "[Concept('concept_power_bloc_mandate','$concept_power_bloc_mandates$')] disponibles"
 MANDATE_CONCEPT: "[concept_power_bloc_mandate]"
 MANDATES_CONCEPT: "[Concept('concept_power_bloc_mandate','$concept_power_bloc_mandates$')]"
 AVAILABLE_MANDATES_VALUE: "[PowerBlocPrincipleSelectionWindow.GetNumMandates] ([Negate_int32(PowerBlocPrincipleSelectionWindow.GetMandateCostForSelectedPrinciple)])"
 AVAILABLE_MANDATES_VALUE_TOOLTIP: "#header [PowerBlocPrincipleSelectionWindow.GetNumMandates] [Concept('concept_power_bloc_mandate','$concept_power_bloc_mandates$')|l] disponibles#!\n[LabelingHelper.GetRemainingDuration(PowerBlocPrincipleSelectionWindow.GetPowerBloc.GetNextMandateDate.Self, '')] jusqu’à l’obtention du prochain mandat"
 RESET_PRINCIPLES_TOOLTIP: "Réinitialiser tous les [Concept('concept_power_bloc_principle','$concept_power_bloc_principles$')|l]"
 REMOVE_PRINCIPLE: "Retirer ce [concept_power_bloc_principle|l]"
 RESEARCHING: "[GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName] recherche actuellement #variable [Technology.GetName|l]#!\nProgrès : $TECHNOLOGY_PROGRESS_WITH_GAIN_AND_TIME_LEFT$"
 NOT_RESEARCHING: "[GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName] ne recherche pas quoi que ce soit."
 BUTTON_DETAILS: "Aller à l’écran Détails"
 BUTTON_DETAILS_FRONT: "Aller au volet $concept_front$"
 BUTTON_INTERACT: "Interagir"
 NO_OF_UNREAD_PINS: "Vous avez #BOLD #V [InformationPanelBar.GetNumberOfUnreadPins]#!#! messages épinglés non lus"
 FRONT_SIDE_YOU_AND_ALLIES: "Vous et vos alliés ([FrontSide.GetCountry.GetFlagTextIcon])"
 FRONT_SIDE_ENEMY: "Ennemi ([FrontSide.GetCountry.GetFlagTextIcon])"
 FRONT_SIDE_COUNTRY: "Camp [FrontSide.GetCountry.GetAltAdjective('MS')|l]"
 ALREADY_ACQUIRED_TITLE: "#BOLD Technologie connue#!"
 RESEARCH_PANEL: "#BOLD Sélectionnez une nouvelle recherche#!"
 SHOW_ON_MAP: "Afficher sur la carte"
 TECHNOLOGY_HEADER: "#BOLD Technologie#!"
 GET_UNDISCOVERED_TECHNOLOGY_COST: "Coût : #BOLD [Era.GetTechnologyCost] points d’innovation#!"
 ECONOMY_TYPE_DESCRIPTION: "Économie, ère [Era.GetNumber]"
 MILITARY_TYPE_DESCRIPTION: "Militaire, ère [Era.GetNumber]"
 CULTURE_TYPE_DESCRIPTION: "Culture, ère [Era.GetNumber]"
 ALREADY_ACQUIRED_BUTTON: "Voir les technologies connues"
 TECHNOLOGY_AQUIRED_POPUP_HEADER: "#header Technologie [PlayerMessageItem.GetScopeTechnology.GetName] déverrouillée#!"
 TECHNOLOGY_UNLOCKS_TEXT: "[Technology.GetTooltipWithoutRequirements(GetPlayer.Self)]"
 TECHNOLOGY_LORE_TEXT: "#lore [Technology.GetDesc]#!"
 NA: "Indisponible"
 JOURNAL_ENTRY_ON_ACTIVATION: "#title Si activé :#!\n$EFFECT$"
 JOURNAL_ENTRY_ON_COMPLETION: "#title Si terminé :#!\n$EFFECT$"
 JOURNAL_ENTRY_ON_FAILURE: "#title En cas d’échec :#!\n$EFFECT$"
 JOURNAL_ENTRY_ON_INVALIDATION: "#title Si invalidé :#!\n$EFFECT$"
 JOURNAL_ENTRY_ON_TIMEOUT: "#title Si le temps est écoulé :#!\n$EFFECT$"
 JOURNAL_ENTRY_EVENT_OUTCOMES: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Effets d’événement possibles#!#!"
 JOURNAL_ENTRY_EVENT_OUTCOMES_TOOLTIP: "#header Effets d’événement possibles $JOURNAL_ENTRY_NAME$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 JOURNAL_ENTRY_ON_TIMEOUT_LONG: "[JournalEntry.GetOnTimeoutTooltip]\n\nExpirera dans #v [LabelingHelper.GetMultiTypeGameTimeDifferenceFromDays( JournalEntry.GetTimeoutDaysLeft, '(int32)5', '' )]#!"
 JOURNAL_ENTRY_TIMED_MODIFIERS_HEADER: "#title Les effets suivants s’appliquent lorsqu’ils sont actifs :#!"
 HAS_ON_PULSE: "#debug Debug : This Journal Entry has some sort of OnPulse#!"
 DEBUG_NO_CHARACTER_IN_GBR_IS_VICTORIA: "#debug Debug : No character in GBR is Victoria#!"
 ARKET_PANEL_STATES_IN_MARKET: "#header Connecté au marché#!\n[StateRegion.GetName] est connecté au [Market.GetName|l]"
 WORKS_AT: "$NAME$($NUM|0*$)"
 MARKET_INFRASTRUCTURE_INFO: "[concept_infrastructure] vers le [MARKET.GetName|l] : #variable $VAL|+$#!"
 MARKET_STATE_REGION_LIST_IN: "En ?"
 STATE_REGION: "[concept_state_region]"
 MARKET_ACCESS: "[concept_market_access]"
 MARKET_ACCESS_SHORT: "[Concept('concept_market_access', 'Accès')]"
 WORLD_MARKET_ACCESS: "[concept_world_market_access]"
 WORLD_MARKET_ACCESS_SHORT: "[Concept('concept_world_market_access', 'Accès')]"
 GDP_CONTRIBUTION: "Contribution au [Concept('concept_gdp','$concept_gdp_short$')]"
 GDP_OWNERSHIP: "Propriété du [Concept('concept_gdp','$concept_gdp_short$')]"
 URBANIZATION: "[concept_urbanization]"
 STATE_URBANIZATION_BUILDINGS_MAX_LEVEL_TOOLTIP: "#header Niveau des [Concept('concept_building','$concept_buildings$')|l] créés par l’[concept_urbanization|l]#!\n$MAX_LEVEL|v0$ niveaux en [State.GetName]\n$TOOLTIP_DELIMITER$\n#v $URBANIZATION$#! $concept_urbanization$ en [State.GetName]\nTous les $URBANIZATION_PER_LEVEL|v0$ d’urbanisation créent un niveau\n\n$BREAKDOWN$"
 STATE_URBANIZATION_NEEDED_PER_LEVEL_TOOLTIP: "#header Conditions d’[concept_urbanization|l] en [State.GetName]#!\nTous les $VALUE|v0$ d’urbanisation en [State.GetName] créent un niveau de [GetBuildingType('building_urban_center').GetName|l]\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 URBANIZATION_NEEDED_PER_LEVEL_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|0v$#!#!"
 TOTAL_URBAN_CENTERS: "Taille de [GetBuildingType('building_urban_center').GetName|l] :"
 TOTAL_TRADE_CENTER: "Taille de [GetBuildingType('building_trade_center').GetName|l] :"
 TOTAL_MANOR_HOUSE: "Taille de [GetBuildingType('building_manor_house').GetName|l] :"
 TOTAL_FINANCIAL_DISTRICT: "Taille de [GetBuildingType('building_financial_district').GetName|l] :"
 TOTAL_BARRACKS: "Taille de [GetBuildingType('building_barracks').GetName|l] :"
 TOTAL_CONSCRIPTION_CENTER: "Taille de [GetBuildingType('building_conscription_center').GetName|l] :"
 TOTAL_NAVAL_BASE: "Taille de [GetBuildingType('building_naval_base').GetName|l] :"
 TOTAL_URBANIZATION: "([concept_urbanization] : [Building.GetState.GetUrbanization|v])"
 UNUSED_ARABLE: "[concept_arable_land] inutilisée :"
 RESOURCE: "Ressource"
 AGRICULTURE: "Agriculture"
 BUILDINGS_USING_THIS_LIST: "#title Utilisé par#!\n$LIST$"
 BUILDINGS_PRODUCING_THIS_LIST: "#title Produit par#!\n$LIST$"
 OPEN_EXPANSION_LENS: "Agrandir dans d’autres États"
 STATE_INFRASTRUCTURE: "[concept_infrastructure]\n$STATE_INFRASTRUCTURE_CONDENSED$"
 STATE_MARKET_CAPITAL_STATUS: "[concept_market_capital]\n$STATE_MARKET_CAPITAL_STATUS_CONDENSED$"
 STATE_CAPITAL_STATUS: "[concept_capital_state]\n[State.GetOwner.GetName]"
 STATE_SPLIT_STATE_STATUS: "[concept_split_state]\n[State.GetStateRegion.GetName]"
 STATE_MIGRATION_TARGET_STATUS: "[concept_migration_target]\n[State.GetMassMigrationCulture.GetName] [State.GetMassMigrationOriginCountry.GetAltNameNoFormatting('Du')][State.GetMassMigrationOriginCountry.GetName]"
 STATE_MARKET_STATUS: "[State.GetMarket.GetName]\n[SelectLocalization(LessThan_CFixedPoint(State.GetInfrastructureBalance, '(CFixedPoint)0'), 'WARNING', '')][State.GetMarketAccess|%v0]"
 STATE_TRAIT_STATUS: "[StateTrait.GetName|v]\n#title Trait d’État#!"
 STATE_POPULATION_STATUS: "[Concept('concept_pop','$concept_population$')]\n$STATE_POPULATION_STATUS_CONDENSED$"
 STATE_SOL_STATUS: "[concept_sol]"
 STATE_GDP_STATUS: "$GDP_SHORT$\n$STATE_GDP_STATUS_CONDENSED$"
 STATE_DECREE_STATUS: "[Decree.GetName]"
 STATE_CONSTRUCTION: "[concept_construction]\n$STATE_CONSTRUCTION_CONDENSED$"
 STATE_CONSTRUCTION_CONDENSED: "[SelectLocalization(GreaterThan_int32(Country.GetNumBuildingsUnderConstructionInState(State.Self), '(int32)0'), 'STATE_CONSTRUCTION_ACTIVE', '')][SelectLocalization(GreaterThan_int32(Country.GetNumBuildingsInConstructionQueueInState(State.Self), '(int32)0'), 'STATE_CONSTRUCTION_IN_QUEUE', '')]"
 STATE_CONSTRUCTION_ACTIVE: "[Country.GetNumBuildingsUnderConstructionInState(State.Self)|v] en cours"
 STATE_CONSTRUCTION_IN_QUEUE: "\n[Country.GetNumBuildingsInConstructionQueueInState(State.Self)|v] en attente"
 TOOLTIP_VIEW_CONDENSED: "#header Afficher le volet d’État sommaire#!"
 TOOLTIP_VIEW_DETAILED: "#header Afficher le volet d’État détaillé#!"
 WARNING: "@warning! "
 BUILDING_POPULATION_STATUS: "Employés\n[Building.GetNoOfEmployed|Kv]"
 IMPOSE_LAW_TOOLTIP: "#header Imposer [Law.GetName|l] [Law.GetCountry.GetAltNameNoFormatting('Au')][Law.GetCountry.GetName]#!\n$TOOLTIP_DELIMITER$\n[SelectLocalization(Not(StringIsEmpty(GetDesc( Law.StartImposing ))), 'FORCE_SUBJECT_TRIGGERS', '' )]Cela obligera [Law.GetCountry.GetAltNameNoFormatting('Le')][Law.GetCountry.GetName] à passer à [Law.GetName|l] ([Law.GetActiveGroupLaw.GetName|l]) en tant que [concept_law|l] [Law.GetGroup.GetName] [ConcatIfNeitherEmpty('\n', SelectLocalization(Not(StringIsEmpty(Law.GetOnImposeDesc)), 'FORCE_SUBJECT_EFFECTS', '' ))]"
 LAW_RIGHT_CLICK_MENU_TITLE: "[concept_law_group] [Law.GetGroup.GetName]"
 FORCE_SUBJECT_EFFECTS: "\n\n#title Effets :#!\n[Law.GetOnImposeDesc]"
 FORCE_SUBJECT_TRIGGERS: "#title Conditions requises :#!\n[GetDesc( Law.StartImposing )]\n\n"
 IMPOSE_LAW_NOT_OVERLORD: "@red_cross! [GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName] doit être le [concept_overlord|l] [Country.GetAltNameNoFormatting('Du')][Country.GetName] pour imposer à ce pays une [concept_law|l]"
 IMPOSE_LAW_NO_OPTIONS: "[SelectLocalization(StringIsEmpty(Law.GetCountry.GetCustom('impose_law_error')),'IMPOSE_LAW_NO_OPTIONS_NO_COOLDOWN',Law.GetCountry.GetCustom('impose_law_error'))]"
 IMPOSE_LAW_NO_OPTIONS_COOLDOWN: "@red_cross! Vous ne pouvez pas imposer une [concept_law|l] [ROOT.GetCountry.GetAltNameNoFormatting('Au')][ROOT.GetCountry.GetName] pendant encore [ROOT.GetCountry.GetTimedModifierDurationRemaining('impose_law_cooldown')]"
 IMPOSE_LAW_NO_OPTIONS_JOURNAL_ENTRY: "@red_cross! Toujours sous le coup d’une [concept_law|l] imposée"
 IMPOSE_LAW_NO_OPTIONS_NO_COOLDOWN: "@red_cross! Aucune [concept_law|l] [Law.GetGroup.GetName] disponible à imposer [ROOT.GetCountry.GetAltNameNoFormatting('Au')][ROOT.GetCountry.GetName]"
 UNDER_COLONIZATION: "[concept_colony] grandissante"
 BEING_COLONIZED: "Est [Concept('concept_colony', '$concept_colonized$')|l] par\n[SelectLocalization(EqualTo_int32(State.GetNumColonizers,'(int32)1'),State.GetColonizers('STATE_REGION_COLONIZER_SINGLE_WIDGET'),State.GetColonizers('STATE_COLONIZER_WIDGET_ITEM'))]"
 TOOLTIP_COLONIZED: "#header Est [Concept('concept_colony', '$concept_colonized$')|l]#!\n$TOOLTIP_DELIMITER$\n[State.GetName] est colonisé par :\n[State.GetColonizers('STATE_REGION_COLONIZER_ITEM')]"
 STATE_REGION_COLONIZER_SINGLE_WIDGET: "[STATE.GetCountry.GetName]"
 STATE_REGION_COLONIZER_ITEM: "$TAB$[STATE.GetOwner.GetName] ([STATE.GetName])\n"
 STATE_COLONIZER_WIDGET_ITEM: "[STATE.GetCountry.GetFlagTextIcon] "
 STATE_INFRASTRUCTURE_USAGE_TOOLTIP: "#header [concept_infrastructure_usage]#!\n[SelectLocalization(EqualTo_CFixedPoint(State.GetInfrastructureUsage, '(CFixedPoint)0'), 'NO_STATE_INFRASTRUCTURE_USAGE_DESC', 'STATE_INFRASTRUCTURE_USAGE')]"
 STATE_INFRASTRUCTURE_USAGE: "[State.GetName] utilise #v [Multiply_CFixedPoint(State.GetInfrastructureUsage,'(CFixedPoint)-1')|0+]#! d’[concept_infrastructure|l]\n$TOOLTIP_DELIMITER$\n[State.GetInfrastructureUsageDesc]"
 STATE_INFRASTRUCTURE_TOOLTIP: "#header [concept_infrastructure]#!\n[SelectLocalization(LessThanOrEqualTo_CFixedPoint(State.GetInfrastructure, '(CFixedPoint)0'), 'NO_STATE_INFRASTRUCTURE_DESC', 'STATE_INFRASTRUCTURE_TOOLTIP_HAS_INFRASTRUCTURE')]"
 STATE_INFRASTRUCTURE_TOOLTIP_HAS_INFRASTRUCTURE: "[State.GetName] a [State.GetInfrastructure|+0] en [concept_infrastructure|l]\n$TOOLTIP_DELIMITER$\n[State.GetInfrastructureDesc]"
 NO_STATE_INFRASTRUCTURE_DESC: "[State.GetName] n’a pas d’[concept_infrastructure|l]"
 STATE_INFRASTRUCTURE_DESC: "#header Équilibre d’[concept_infrastructure|l]#!\nL’équilibre d’[concept_infrastructure|l] en [State.GetName] est de [State.GetInfrastructureBalance|0+=]\n$TOOLTIP_DELIMITER$\n[SelectLocalization(LessThanOrEqualTo_CFixedPoint(State.GetInfrastructure, '(CFixedPoint)0'), 'NO_STATE_INFRASTRUCTURE_DESC', 'STATE_INFRASTRUCTURE_DESC_HAS_INFRASTRUCTURE')]\n\n[SelectLocalization(EqualTo_CFixedPoint(State.GetInfrastructureUsage, '(CFixedPoint)0'), 'NO_STATE_INFRASTRUCTURE_USAGE_DESC', 'STATE_INFRASTRUCTURE_USAGE_DESC')]"
 STATE_INFRASTRUCTURE_DESC_HAS_INFRASTRUCTURE: "#title L’[concept_infrastructure|l] de #v [State.GetInfrastructure|0+]#! s’explique par :#!\n#indent_newline:3 [State.GetInfrastructureDesc]#!"
 STATE_INFRASTRUCTURE_USAGE_DESC: "#title L’[concept_infrastructure_usage|l] de #v [Multiply_CFixedPoint(State.GetInfrastructureUsage,'(CFixedPoint)-1')|0+]#! s’explique par :#!\n#indent_newline:3 [State.GetInfrastructureUsageDesc]#!"
 NO_STATE_INFRASTRUCTURE_USAGE_DESC: "[State.GetName] n’[Concept('concept_infrastructure_usage', 'utilise')] pas actuellement d’infrastructure"
 STATE_PANEL_INFRASTRUCTURE_DESC: "#header [concept_infrastructure]#!\n[concept_infrastructure] en [State.GetName] : #v [State.GetInfrastructure|0]#!\n$TOOLTIP_DELIMITER$\n[State.GetInfrastructureDesc]"
 STATE_PANEL_INFRASTRUCTURE_USAGE_DESC: "#header [concept_infrastructure_usage]#!\n[concept_infrastructure_usage] en [State.GetName] : #v [Multiply_CFixedPoint(State.GetInfrastructureUsage,'(CFixedPoint)-1')|0+]#!\n$TOOLTIP_DELIMITER$\n[State.GetInfrastructureUsageDesc]"
 STATE_TRAIT_STATE_MODIFIER: "Modificateurs d’État"
 STATE_TRAIT_STATE_REGION_MODIFIER: "Modificateurs de la région étatique"
 BUILDING_PROGRESS_TOOLTIP: "#header [Building.GetName]#!\nProgression de la construction : #VARIABLE [Building.GetConstructionProgressPercentage|%]#!\nAffectation hebdomadaire de la [concept_construction|l] : @construction! #v #tooltippable #tooltip:[Building.GetTooltipTag],CONSTRUCTION_SPEED_TOOLTIP [Building.GetConstructionSpeedPerWeek|2]#!#!#!\nTemps restant : #VARIABLE [Building.GetConstructionRemainingWeeksDesc]#!"
 BUILDING_PROGRESS_TOOLTIP_QUEUED: "#header [Building.GetName]#!\nDans la file d’attente de construction [Country.GetAltNameNoFormatting('Du')][Country.GetName]"
 DOUBLE_NEWLINE: "\n\n"
 PRODUCING_GOODS: "#title Production [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] :#!"
 USING_GOODS: "#title Utilisation [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] :#!"
 STATE_WORLD_MARKET_ACCESS: "[concept_world_market_access]\n[State.GetWorldMarketAccessFormatted]"
 STATE_WORLD_MARKET_ACCESS_DESC: "#header [concept_world_market_access]#!\n[State.GetWorldMarketAccessFormatted] pour [State.GetName]\n[MakeLineIf( IsZero(State.GetTradeCapacity), 'NO_WORLD_MARKET_ACCESS_DUE_TO_NO_TRADE_CAPACITY')]$TOOLTIP_DELIMITER$\n[State.GetWorldMarketAccessDesc]"
 STATE_TRADE_CAPACITY: "[concept_trade_capacity]\nUtilise #tooltippable #tooltip:[State.GetTooltipTag],STATE_TRADE_CAPACITY_USAGE_TOOLTIP [State.GetTradeCapacityUsage|v0]#!#! de #tooltippable #tooltip:[State.GetTooltipTag],STATE_TRADE_CAPACITY_TOOLTIP [State.GetTradeCapacity|v0]#!#!"
 STATE_TRADE_CAPACITY_TOOLTIP: "[State.GetTradeCapacityDesc]"
 STATE_TRADE_CAPACITY_USAGE_TOOLTIP: "[State.GetTradeCapacityUsageDesc]"
 STATE_TRADE_CAPACITY_DESC: "#header [concept_trade_capacity]#!\n[State.GetTradeCapacityUsage|v0]/[State.GetTradeCapacity|v0] en [State.GetName]\n$TOOLTIP_DELIMITER$\n[State.GetTradeCapacityDesc]"
 NO_WORLD_MARKET_ACCESS_DUE_TO_NO_TRADE_CAPACITY: "@red_cross! Ne commerce pas sur le [concept_world_market|l] parce qu’il n’y a pas de [State.GetBuilding('building_trade_center').GetName|l]"
 TRADE_CAPACITY_DESC: "#header [concept_trade_capacity]#!\n$VALUE|v0$ pour $STATE_NAME$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 TRADE_CAPACITY_USAGE_DESC: "#header [Concept('concept_trade_capacity','$concept_trade_capacity_usage$')]#!\n$VALUE|v0$/$CAPACITY|v0$ pour $STATE_NAME$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 TRADE_CAPACITY_USAGE_IMPORTS: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|=v$#!#! des importations de $AMOUNT|0v$ [GOODS.GetName|l] [GOODS.GetTextIcon]"
 TRADE_CAPACITY_USAGE_EXPORTS: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|=v$#!#! des exportations de $AMOUNT|0v$ [GOODS.GetName|l] [GOODS.GetTextIcon]"
 TRADE_CAPACITY_GOODS_USAGE: "#header Utilisation de la [concept_trade_capacity|l] des [Concept('concept_good', '$concept_goods$')|l]#!\n$VALUE|=v$ pour $AMOUNT|0v$ [GOODS.GetName|l] [GOODS.GetTextIcon]\n$TOOLTIP_DELIMITER$\n[concept_traded_quantity] : $QUANTITY|0v$ [GOODS.GetName|l][Nbsp][GOODS.GetTextIcon]"
 TRADE_CAPACITY_EXPLAINER: "[concept_trade_capacity]\n$TOOLTIP_DELIMITER$\nLa capacité de l’[concept_state] pour [Concept('concept_trade','échanger')] avec le [concept_world_market|l]"
 WORLD_MARKET_ACCESS_NO_HUB: "Puisqu’il n’est pas relié à une [concept_world_market_hub|l], cet $concept_state$ a un [concept_world_market_access|l] de #n 0 %#!"
 WORLD_MARKET_ACCESS_IS_HUB: "[STATE.GetName] est une [concept_world_market_hub|l] pour le [STATE.GetMarket.GetName]"
 WORLD_MARKET_ACCESS_HAS_HUB: "Relié au [concept_world_market|l] via la [Concept('concept_world_market_hub','$concept_world_market_hub_short$')|l] de [STATE.GetName]"
 WORLD_MARKET_NO_SEA_REGION_TRADE: "Pas de [concept_trade|l] sur le [concept_world_market|l]"
 WORLD_MARKET_SEA_REGION_TRADE_TOOLTIP: "[SeaRegionPanel.GetWorldMarketTradeBreakdown(Goods.Self)]"
 WORLD_MARKET_SEA_REGION_TRADE_BREAKDOWN: "#header [concept_trade] [GOODS.GetCustom('FR_Goods_De')][GOODS.GetName|l] via $SEA_NODE_NAME$#!\nCommerce total : $TOTAL|v0D$\n$DETAILS$"
 WORLD_MARKET_SEA_REGION_TRADE_IMPORTS_ENTRY: "Importation de $AMOUNT|v0D$ via la [Concept('concept_world_market_hub','$concept_world_market_hub_short$')|l] de [STATE.GetName] [STATE.GetOwner.GetFlagTextIcon] ([STATE.GetMarket.GetName])"
 WORLD_MARKET_SEA_REGION_TRADE_EXPORTS_ENTRY: "Exportation de $AMOUNT|v0D$ via la [Concept('concept_world_market_hub','$concept_world_market_hub_short$')|l] de [STATE.GetName] [STATE.GetOwner.GetFlagTextIcon] ([STATE.GetMarket.GetName])"
 INFRASTRUCTURE_FROM_STATE: "$VALUE|+=1$ de l’[concept_state] :\n$BREAKDOWN$"
 INFRASTRUCTURE_FROM_POPS: "$VALUE|+=1$ des [Concept('concept_pop', '$concept_pops$')|l]$CAP_BREAKDOWN$ :\n$BREAKDOWN$"
 INFRASTRUCTURE_FROM_POPS_CAPPED: " ($VALUE|+=1$, plafonné à $CAP|1v$)"
 INFRASTRUCTURE_FROM_GOODS: "$VALUE|+=1$ de la consommation [GOODS.GetCustom('FR_Goods_De')][GOODS.GetName|l] du [concept_pop|l] :\n$BREAKDOWN$"
 NEXT_PAGE: "Page suivante"
 PREVIOUS_PAGE: "Page précédente"
 AMOUNT: "Quantité"
 CONSTRUCTION_QUEUE_HEADER: "File d’attente de construction"
 CONSTRUCTION_QUEUE_BUILDING_IN_STATE: "[ConstructionQueueElement.GetBuilding.GetName] en [AddTextIf( Not(ConstructionQueueElement.GetState.GetOwner.IsLocalPlayer), ConstructionQueueElement.GetState.GetOwner.GetFlagTextIcon )][ConstructionQueueElement.GetBuilding.GetState.GetName]"
 CONSTRUCTION_QUEUE_ITEM_VALID: "#header Agrandir [Building.GetName] en [State.GetName]#!\n[AddTextIf( ConstructionQueueElement.IsCurrentlyUnderConstruction, '$WEEKS|v$ semaine(s) jusqu’à l’achèvement\n')]\n$TOOLTIP_DELIMITER$\n#v $PROGRESS|0$#!/#v $REQUIRED|0$#! de progression de [concept_construction|l] (#v $PERCENT_COMPLETE|%$#!)#v [ConstructionQueueElement.GetBaseConstructionSpeed|2]#! points de construction fournis par [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] donnent un total de #v #tooltippable #tooltip:[ConstructionQueueElement.GetTooltipTag],CONSTRUCTION_QUEUE_SPEED_TOOLTIP $SPEED$#!#!#! de progression chaque semaine[SelectLocalization( NotEqualTo_CFixedPoint(State.GetConstructionEfficiency, '(CFixedPoint)0'), 'CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY_LINE_BREAK', '')][ConcatIfNeitherEmpty('\n',ConstructionQueueElement.GetCompanyConstructionBonusDesc)]"
 CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY: "#tooltippable #tooltip:[State.GetTooltipTag],STATE_CONSTRUCTION_EFFICIENCY_TOOLTIP #v [State.GetConstructionEfficiency|%1+=]#!#!#! en efficacité de construction en [State.GetName]"
 CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY_WARNING: "@warning! $CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY$\n"
 CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY_LINE_BREAK: "\n$CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY$"
 STATE_CONSTRUCTION_EFFICIENCY_TOOLTIP: "[State.GetConstructionEfficiencyTooltip]"
 CONSTRUCTION_QUEUE_ITEM_INVALID: "#header [Building.GetName] de [State.GetName]#!\n$TOOLTIP_DELIMITER$\n$INVALID_DESC$"
 CONSTRUCTION_SPEED_BASE_TOOLTIP: "#tooltip_header [concept_construction]@construction!#![AddLocalizationIf(Country.IsConstructionPaused, 'CONSTRUCTION_IS_PAUSED')]\nTotal : #v [Country.CalcBaseConstructionSpeed|0]#!\nUtilisée : #v [Country.CalcUsedConstruction|0]#!/[Country.CalcBaseConstructionSpeed|0]\n$TOOLTIP_DELIMITER$\n[Country.GetBaseConstructionSpeedDesc]"
 CONSTRUCTION_QUEUE_TOOLTIP: "[Country.GetConstructionQueueDesc]"
 STATE_CONSTRUCTION_QUEUE_TOOLTIP: "[State.GetName] a [State.GetCountry.GetNumBuildingsUnderConstructionInState(State.Self)|v] [Concept('concept_building', '$concept_buildings$')|l] [concept_under_construction|l]"
 CONSTRUCTION_QUEUE_DESC: "#header [concept_construction]#! [Country.GetAltNameNoFormatting('En')][Country.GetName][AddLocalizationIf(Country.IsConstructionPaused, 'CONSTRUCTION_IS_PAUSED')]\n$TOOLTIP_DELIMITER$\n#v #tooltippable #tooltip:[Country.GetTooltipTag],CONSTRUCTION_SPEED_BASE_TOOLTIP [Country.CalcBaseConstructionSpeed|1]#!#!#!@construction! points de construction sont produits chaque semaine par ce pays.\n$CONSTRUCTION_PRIVATE_ALLOCATION_DESC$\n$CONSTRUCTION_GOVERNMENT_PROJECTS_DESC$[ConcatIfNeitherEmpty('\n', Country.GetPrivateConstructionQueueDesc)]"
 PRIVATE_CONSTRUCTION_DISABLED_DESC: "Aucune [concept_private_construction|l] en raison de :\n$TAB$$BREAKDOWN$"
 CONSTRUCTION_PRIVATE_ALLOCATION_DESC: "Allocation de construction privée : #v #tooltip:[Country.GetTooltipTag],CONSTRUCTION_PRIVATE_ALLOCATION_TOOLTIP #tooltippable [Country.GetModifier.GetValueFor('country_private_construction_allocation_mult')|%0]#!#!#!"
 CONSTRUCTION_PRIVATE_ALLOCATION_TOOLTIP: "#header #v Allocation de construction privée [Country.GetAltAdjective('FS')|l] : [Country.GetModifier.GetValueFor('country_private_construction_allocation_mult')|%0]#!#!\n$TOOLTIP_DELIMITER$\n[Country.GetModifier.GetDescFor('country_private_construction_allocation_mult')]"
 CONSTRUCTION_GOVERNMENT_PROJECTS_DESC: "Il y a #v [Country.GetNumActiveGovernmentConstructionQueueElements]#! [Concept('concept_government_construction', '$concept_government_constructions$')|l] en cours qui utilisent #v [Country.CalcUsedGovernmentConstruction|1]#!@construction! en [concept_construction|l] (#v [Country.CalcRelativeUsedGovernmentConstruction|%0]#!) et #v [Country.GetNumInactiveGovernmentConstructionQueueElements]#! autres dans la file d’attente"
 CONSTRUCTION_PRIVATE_PROJECTS_DESC: "Il y a #v [Country.GetNumActivePrivateConstructionQueueElements]#! [Concept('concept_private_construction', '$concept_private_constructions$')|l] en cours qui utilisent #v [Country.CalcUsedPrivateConstruction|1]@construction!#! en [concept_construction|l] (#v [Country.CalcRelativeUsedPrivateConstruction|%0]#!) et #v [Country.GetNumInactivePrivateConstructionQueueElements]#! autres dans la file d’attente"
 CONSTRUCTION_IS_PAUSED: "\nLa construction est actuellement #b en pause#!"
 CONSTRUCTION_QUEUE_ACTIVE_PROJECTS: "[Country.GetActiveConstructionProjectsDesc]"
 CONSTRUCTION_QUEUE_ACTIVE_PROJECTS_NO_ITEMS: "Aucun projet [concept_under_construction|l]"
 CONSTRUCTION_QUEUE_INACTIVE_PROJECTS: "[Country.GetInactiveConstructionProjectsDesc]"
 CONSTRUCTION_QUEUE_INACTIVE_PROJECTS_NO_ITEMS: "Aucun autre projet dans la [concept_construction_queue|l]"
 CONSTRUCTION_SPEED_TOOLTIP: "[Building.GetConstructionSpeedPerWeekDesc]"
 CONSTRUCTION_QUEUE_SPEED_TOOLTIP: "[ConstructionQueueElement.GetConstructionSpeedPerWeekDesc]"
 CONSTRUCTION_QUEUE_DESC_ITEM: "[BUILDING.GetName] en [STATE.GetName] : #v $BASE_SPEED$#! (#v $MAX_BASE_SPEED$#! max.)[AddTextIf( $IS_UNDER_CONSTRUCTION$ ,' - #v $WEEKS_LEFT$#! semaine(s) jusqu’à l’achèvement' )]"
 CONSTRUCTION_QUEUE_DESC_BACKLOG_ITEM: "[BUILDING.GetName] en [STATE.GetName] (en file d’attente)[AddTextIf( $IS_UNDER_CONSTRUCTION$ , ' - #v $WEEKS_LEFT$#! semaine(s) jusqu’à l’achèvement' )]"
 CONSTRUCTION_QUEUE_DESC_INVALID_ITEM: "[BUILDING.GetName] en [STATE.GetName] #N (invalide)#!"
 CONSTRUCTION_QUEUE: "[concept_construction_queue]"
 CONSTRUCTION_QUEUE_STATE: "[concept_construction] #v @construction! #tooltippable #tooltip:[State.GetOwner.GetTooltipTag],CONSTRUCTION_SPEED_BASE_TOOLTIP [State.GetOwner.CalcUsedConstruction|0]/[State.GetOwner.CalcBaseConstructionSpeed|0]#!#!#!"
 CONSTRUCTION_QUEUE_IS_EMPTY: "Rien n’est [concept_under_construction|l]"
 CONSTRUCTION_QUEUE_HIDDEN_ELEMENTS: "+[Country.GetNumHiddenConstructionQueueElements|v] projets supplémentaires en file d’attente"
 CONSTRUCTION_BUTTON_IDLE: "Inactif"
 CONSTRUCTION_BUTTON_IDLE_TOOLTIP: "$CONSTRUCTION_QUEUE_STATUS_IDLE_DESC$"
 CONSTRUCTION_BUTTON_PAUSE: "Mettre tout en pause"
 CONSTRUCTION_BUTTON_PAUSE_TOOLTIP: "$CONSTRUCTION_QUEUE_STATUS_ACTIVE_DESC_DATA$\nCliquez pour mettre en pause toutes les [Concept('concept_government_construction', '$concept_government_constructions$')|l]."
 CONSTRUCTION_BUTTON_RESUME: "Reprendre"
 CONSTRUCTION_BUTTON_RESUME_TOOLTIP: "$CONSTRUCTION_QUEUE_STATUS_PAUSED_DESC_DATA$\nCliquez pour reprendre toutes les [Concept('concept_government_construction', '$concept_government_constructions$')|l]."
 CONSTRUCTION_ALREADY_PAUSED: "La construction est déjà en pause."
 CONSTRUCTION_IN_DEFAULT: "Impossible de reprendre la construction alors que [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] est en banqueroute."
 CONSTRUCTION_ALREADY_RUNNING: "La construction est déjà en cours."
 CONSTRUCTION_BUILDING_PER_WEEK: "[Building.GetConstructionSpeedPerWeek|0]@construction!"
 CONSTRUCTION_QUEUE_ELEMENT_ALLOCATION: "[ConstructionQueueElement.GetBaseConstructionSpeed|1] @construction!"
 CONSTRUCTION_VALUE: "[SelectLocalization(Country.IsConstructionPaused, 'CONSTRUCTION_DURATION_PAUSED', 'CONSTRUCTION_VALUE_WITHOUT_ICON')]"
 CONSTRUCTION_VALUE_WITHOUT_ICON: "#v [Country.CalcUsedConstruction|0]#!/[Country.CalcBaseConstructionSpeed|0]"
 CONSTRUCTION_VALUE_WITH_ICON: "#v [Country.CalcUsedConstruction|0]#!@construction!/[Country.CalcBaseConstructionSpeed|0]"
 NO_CONSTRUCTION: "Aucun [concept_building|l] [concept_under_construction|l]"
 NOTHING_CONSTRUCTING: "Rien [concept_under_construction|l]"
 USED_VS_UNUSED_CONSTRUCTION: "#v [GetPlayer.CalcUsedConstruction|0]#!/[GetPlayer.CalcBaseConstructionSpeed|0]"
 IN_CONSTRUCTION_QUEUE: "#v [GetPlayer.GetNumInactiveConstructionQueueElements|=]#!"
 IN_CONSTRUCTION_QUEUE_TOOLTIP: "#header [GetPlayer.GetNumInactiveConstructionQueueElements|=] [Concept('concept_building', '$concept_buildings$')|l] dans la [concept_construction_queue|l]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetInactiveConstructionProjectsDesc]"
 QUEUED: "En file d’attente"
 CONSTRUCTION_QUEUE_FILTER_FUNDING: "Financement"
 CONSTRUCTION_QUEUE_FILTER_FUNDING_NATIONAL: "Gouvernementale ([ConstructionPanel.GetNumGovernmentConstructionQueueElements(GetPlayer)])"
 CONSTRUCTION_QUEUE_FILTER_FUNDING_PRIVATE: "Privée ([ConstructionPanel.GetNumPrivateConstructionQueueElements(GetPlayer)])"
 CONSTRUCTION_QUEUE_FILTER_FUNDING_ALL_TT: "#header $ALL$ #!\nAfficher les [Concept('concept_government_construction', '$concept_government_constructions$')|l] et les [Concept('concept_private_construction', '$concept_private_constructions$')|l]"
 CONSTRUCTION_QUEUE_FILTER_FUNDING_NATIONAL_TT: "#header $CONSTRUCTION_QUEUE_FILTER_FUNDING_NATIONAL$ #!\nAfficher uniquement les [Concept('concept_government_construction', '$concept_government_constructions$')|l]"
 CONSTRUCTION_QUEUE_FILTER_FUNDING_PRIVATE_TT: "#header $CONSTRUCTION_QUEUE_FILTER_FUNDING_PRIVATE$ #!\nAfficher uniquement les [Concept('concept_private_construction', '$concept_private_constructions$')|l]"
 CONSTRUCTION_QUEUE_PRIVATE_INVESTMENT_TT: "Investit actuellement dans [ConstructionQueueElement.GetBuilding.GetName] en [ConstructionQueueElement.GetState.GetName]"
 CONSTRUCTION_QUEUE_PRIVATE_INVESTMENT_VIRTUAL_BUILDING_TT: "Une fois la [concept_construction|l] terminée, un nouveau bâtiment [BuildingType.GetName] apparaîtra en [State.GetName] et détiendra à titre privé le nouveau [concept_building_level|l] [ConstructionQueueElement.AccessBuilding.GetName]."
 CONSTRUCTION_QUEUE_FILTER_SUMMARY: "[SelectLocalization(ConstructionPanel.IsShowingGovernmentConstructions, 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_GOV', 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_PRIV' )]"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_GOV: "[SelectLocalization(Not(ConstructionPanel.IsFiltered('is_domestic')), 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_ALL_GOVT', SelectLocalization(ConstructionPanel.IsFilterYes('is_domestic'), 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_DOM_GOVT', 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_ABR_GOVT' ) )]"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_PRIV: "[SelectLocalization(Not(ConstructionPanel.IsFiltered('is_domestic')), 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_ALL_PRIV', SelectLocalization(ConstructionPanel.IsFilterYes('is_domestic'), 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_DOM_PRIV', 'CONSTRUCTION_QUEUE_FILTER_SUMMARY_ABR_PRIV' ) )]"
 EXPAND_BUILDING_TYPE_RIGHT_TEXT: "[BuildingType.GetNumLevelsInCountryFormatted(GetPlayer.Self)]"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_ALL_GOVT: "[concept_government_construction]"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_ALL_PRIV: "[concept_private_construction]"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_DOM_GOVT: "[concept_government_construction] nationale"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_DOM_PRIV: "[concept_private_construction] nationale"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_ABR_GOVT: "[concept_government_construction] dans les [Concept('concept_country', '$concept_countries$')|l] étrangers"
 CONSTRUCTION_QUEUE_FILTER_SUMMARY_ABR_PRIV: "[concept_private_construction] dans les [Concept('concept_country', '$concept_countries$')|l] étrangers"
 CONSTRUCTION_QUEUE_NO_CONSTRUCTION_SECTOR: "Pas de [BuildingType.GetNameNoFormatting]"
 CONSTRUCTION_TAB_DOMESTIC: "File d’attente nationale"
 CONSTRUCTION_TAB_FOREIGN: "Files d’attente étrangères ([GetPlayer.GetTotalForeignConstructions])"
 FOREIGN_QUEUE_NO_INVESTORS_EMPTY_STATE: "Aucun [concept_country|l] ne peut effectuer d’[concept_foreign_investment|l] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetNameNoFlag].\n\nSi vous devenez un [concept_subject|l], ou si vous signez un [concept_treaty|l] sur les [concept_foreign_investment_rights|l], les [Concept('concept_construction', '$concept_constructions$')|l] à l’étranger apparaîtront ici."
 FOREIGN_QUEUE_NO_CONSTRUCTION_EMPTY_STATE: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetNameNoFlag] ne construit actuellement rien dans notre [concept_country|l]"
 FOREIGN_QUEUE_COUNTRY_HEADER: "Construction [Country.GetAltAdjective('FS')|l] dans notre pays"
 FOREIGN_QUEUE_COUNTRY_OVERLORD_TT: "#header [concept_overlord]#!\n[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] peut effectuer un [concept_foreign_investment|l] dans notre [concept_country|l] car il s’agit de notre suzerain"
 FOREIGN_QUEUE_COUNTRY_MUTUAL_PACT_TT: "#header Pacte mutuel sur les [concept_foreign_investment_rights|l]#!\n[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] peut effectuer un [concept_foreign_investment|l] dans notre [concept_country|l] car nous avons un [concept_treaty|l] mutuel"
 FOREIGN_QUEUE_COUNTRY_ONE_WAY_PACT_TT: "#header [concept_foreign_investment_rights] accordés#!\n[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] peut effectuer un [concept_foreign_investment|l] dans notre [concept_country|l] car nous leur avons accordé ce droit"
 BUILDING_PREDICTION_DISCLAIMER: "@information! Les prédictions de revenus, d'entretien et de productivité pour les nouvelles [Concept('concept_construction','$concept_constructions$')|l] tiennent compte de l'impact estimé sur le prix futur des constructions en attente et des [Concept('concept_building', '$concept_buildings$')|l] en sous-effectif"
 SHOW_PRIVATE_CONSTRUCTIONS: "Afficher les [Concept('concept_private_construction', '$concept_private_constructions$')|l] ([GetMetaPlayer.GetPlayedOrObservedCountry.GetNumPrivateConstructionsInQueue|v])"
 SHOW_GOVERNMENT_CONSTRUCTIONS: "Afficher les [Concept('concept_government_construction', '$concept_government_constructions$')|l] ([GetMetaPlayer.GetPlayedOrObservedCountry.GetNumGovernmentConstructionsInQueue|v])"
 BUILDING_DETAILS_EMPLOYMENT_TOOLTIP: "#header [Building.GetName] en [Building.GetState.GetName]#!\nTaille : [Building.GetExpansionLevelBreakdownDesc]\nEmploi : #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] employés#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)\n$TOOLTIP_DELIMITER$\n[Building.GetInputOutputTooltip]"
 BUILDING_EMPLOYMENT_UNCAPPED_TOOLTIP: "#header [Building.GetName]#!\n$BUILDING_EMPLOYMENT_UNCAPPED$"
 BUILDING_EMPLOYMENT_TOOLTIP: "#header [Building.GetName]#!\n$BUILDING_EMPLOYMENT_CAPPED$"
 BUILDING_EMPLOYMENT_CAPPED: "Emploi : #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] employés#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)"
 BUILDING_EMPLOYMENT_UNCAPPED: "Emploi : #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] employés#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)"
 BUILDING_LEVEL: "[concept_building_level]"
 BUILDING_LEVEL_HEADER_TOOLTIP: "#header [concept_building_level]#!\n$TOOLTIP_DELIMITER$\nLe niveau actuel."
 BUILDING_SIZE_TOOLTIP: "#header [Building.GetName]#!\nTaille : [Building.GetExpansionLevel|v]"
 BUILDING_INFO_TOOLTIP: "$BUILDING_TOOLTIP_BASE_P1$\n[Building.GetTooltip]"
 BUILDING_TOOLTIP_BASE_P1: "#header [Building.GetName]#!"
 CASH_RESERVES_INFO: "[concept_cash_reserves] : #variable [Building.GetCurrentCashReserves|D]#! [GetTrendIcon(Building.GetCashReservesTrend)] / #maximum [Building.GetMaxCashReserves|k]#!"
 PRODUCTIVITY_INFO: "[concept_productivity] : #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_PRODUCTIVITY,GraphTooltipProductivity [Building.GetAverageAnnualEarningsPerEmployeeFormatted|+]@money!#!#! (#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_BUILDING_TYPE,GraphTooltipTypeProfitability [Building.GetProfitabilityCompareIconInType]#!#! / #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_WORLD,GraphTooltipWorldProfitability [Building.GetProfitabilityCompareIcon]#!#!)"
 PRODUCTIVITY_INFO_LOWERCASE: "[concept_productivity] :\n$PRODUCTIVITY_INFO_NO_HEADER$"
 PRODUCTIVITY_INFO_NO_HEADER: "#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_PRODUCTIVITY,GraphTooltipProductivity [Building.GetAverageAnnualEarningsPerEmployeeFormatted|+]@money!#!#! (#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_BUILDING_TYPE,GraphTooltipTypeProfitability [Building.GetProfitabilityCompareIconInType]#!#! / #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_WORLD,GraphTooltipWorldProfitability [Building.GetProfitabilityCompareIcon]#!#!)"
 BUILDING_CASH_RESERVES_TOOLTIP: "#header [concept_cash_reserves]#!\nValeur : #variable [Building.GetCurrentCashReserves|D]#! [GetTrendIcon(Building.GetCashReservesTrend)] / #maximum [Building.GetMaxCashReserves|k]#!\n\n[concept_cash_reserves_desc]"
 BUILDING_CASH_RESERVES: "Réserves de liquidités : [Building.GetCurrentCashReserves|Dv]"
 LOW_LEGITIMACY_GOVERNMENT_CONFIRMATION: "#header Gouvernement illégitime#!\nCette constellation a une légitimité très faible, voulez-vous vraiment continuer ?\n\n#title Effets :#!\n[GetLegitimacyLevel('legitimacy_level_illegitimate').GetEffects]"
 PRODUCTIVITY_SPAN_FORMAT: "$MIN$@money! - $MAX$@money!"
 PRODUCTIVITY_SPAN_FORMAT_SAME: "$MIN$@money!"
 PRODUCTIVITY_SPAN_TOOLTIP: "#header [concept_productivity]#!\nLa [concept_productivity|l] de [BuildingType.GetName] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName] est [BuildingType.GetProductivitySpanDesc(GetPlayer.Self)]"
 EMPLOYMENT_BAR: "Emploi : [Building.GetNoOfEmployed|1*v]"
 EARNINGS_PER_EMPLOYEE: "Rémunération par employé"
 WORLD_PROFITABILITY_HEADER: "$EARNINGS_PER_EMPLOYEE$ par rapport à l’ensemble des bâtiments"
 BUILDING_PROFITABILITY_HEADER: "$EARNINGS_PER_EMPLOYEE$"
 BUILDING_PROFITABILITY_HEADER_TOOLTIP: "#header [concept_productivity]#!\n$TOOLTIP_DELIMITER$\nRémunération annuelle moyenne par employé."
 BUILDING_TAXATION_CAPACITY_HEADER_TOOLTIP: "#header Solde de capacité d’imposition#!\n$TOOLTIP_DELIMITER$\nLe solde de [concept_tax_capacity|l] et l’utilisation dans un État."
 BUILDING_PRODUCTIVITY_HEADER: "Rémunération annuelle moyenne par employé"
 GOVERNMENTAL_EXPENSES: "Dépenses gouvernementales : #tooltippable #tooltip:[Building.GetTooltipTag],BUILDING_GOVERNMENT_EXPENSES_DESC #N -[Building.GetGovernmentExpenses|D-]@money!#!#!#!"
 NOT_FULLY_EMPLOYED: "#header #red [Building.GetName] n’est pas en mesure de tout pourvoir#!#!\n$TOOLTIP_DELIMITER$\nEmplois : #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] employés#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)[ConcatIfNeitherEmpty('\n\n',Building.GetAllFailedHiresDesc)]"
 NOT_HIRING: "#header #red [SelectLocalization(Building.ShouldShowAsUnableToHire,'NOT_HIRING_UNABLE','NOT_HIRING_UNWILLING')]#!#!\n$TOOLTIP_DELIMITER$\nEmploi : #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] employés#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)\n\n[Building.GetNotHiringReasonDesc][Building.GetAdjustHiringTargetDesc]"
 NOT_HIRING_UNABLE: "[Building.GetName] en [Building.GetState.GetName] est incapable d’embaucher"
 NOT_HIRING_UNWILLING: "[Building.GetName] en [Building.GetState.GetName] refuse d’embaucher"
 EMPLOYMENT_HINT: "\n\n@information! Les [Concept('concept_building_wage', '$concept_building_wages$')|l] de [Building.GetName] dépendent de sa situation économique. Afin d’avoir les moyens d’attirer plus de [Concept('concept_pop', '$concept_pops$')|l] à la main-d’œuvre, son [concept_building_balance|l] hebdomadaire devrait être amélioré. Vous pouvez influencer cela soit en rendant moins chers les [Concept('concept_good', '$concept_goods$')|l] qu’il consomme, soit en rendant les biens qu’il produit plus chers. Cela se fait en augmentant ou en diminuant l’offre et la demande sur le [Building.GetState.GetMarket.GetName|l]. Vous pouvez garantir que la main-d’œuvre reçoit un [concept_building_wage|l] compétitif en [Concept('concept_subsidies', 'subventionnant')|l] le bâtiment. Cela le maintiendra à flot en utilisant l’[concept_money|l] du [concept_treasury] [GetPlayer.GetAltAdjectiveNoFormatting('MS')|l], si nécessaire."
 INCOME_TAXES: "Impôts payés : #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_TAXES_TOOLTIP #variable [Building.GetTaxationRevenue|D+=]@money!#!#!#!"
 BUILDING_TOOLTIP_BASE_INFO: "[AddLocalizationIf(Not(Building.GetState.IsIncorporated), 'BUILDING_STATE_IS_UNINCORPORATED')]Taille : [Building.GetExpansionLevelBreakdownDesc][AddLocalizationIf(Building.IsBuildingType('building_urban_center'), '\n')][AddLocalizationIf(Building.IsBuildingType('building_urban_center'), 'BUILDING_STATE_URBANIZATION')][ConcatIfNeitherEmpty('\n', SelectLocalization( GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), 'EMPLOYMENT_INFO', '' ))]"
 BUILDING_STATE_IS_UNINCORPORATED: "@unincorporated! [SelectLocalization(Building.GetState.IsIncorporating, 'BUILDING_STATE_INCORPORATING', 'UNINCORPORATED')]\n"
 BUILDING_STATE_INCORPORATING: "[Concept('concept_incorporated_state','$concept_incorporating$')] (#tooltippable #tooltip:[Building.GetState.GetTooltipTag],TOOLTIP_INCORPORATING_STATE [Building.GetState.GetIncorporationProgress|v%0]#!#!)"
 BUILDING_STATE_URBANIZATION: "Total d’[concept_urbanization|l] en [Building.GetState.GetName] : #v #tooltippable #tooltip:[Building.GetState.GetTooltipTag],URBANIZATION_BREAKDOWN [Building.GetState.GetUrbanization]#!#!#!"
 EMPLOYMENT_INFO: "Emploi : #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] employés#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)"
 BUILDING_TOOLTIP: "$BUILDING_TOOLTIP_BASE_INFO$[ConcatIfNeitherEmpty('\n', SelectLocalization( And(GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), Not(Building.IsSubsistenceBuilding)), 'PRODUCTIVITY_INFO', '' ))][ConcatIfNeitherEmpty('\n', SelectLocalization( GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), 'CASH_RESERVES_INFO', '' ))][ConcatIfNeitherEmpty('\n', SelectLocalization( GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), 'INCOME_TAXES', '' ))][ConcatIfNeitherEmpty('\n', SelectLocalization( GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), 'BUILDING_AVERAGE_WAGE_FLIPPED', '' ))]"
 BUILDING_GOVERNMENT_TOOLTIP: "$BUILDING_TOOLTIP_BASE_INFO$[ConcatIfNeitherEmpty('\n', SelectLocalization( GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), 'INCOME_TAXES', '' ))]\n$GOVERNMENTAL_EXPENSES$[ConcatIfNeitherEmpty('\n', SelectLocalization( GreaterThan_int64(Building.GetNoOfEmployed, '(int64)0'), 'BUILDING_AVERAGE_WAGE_FLIPPED', '' ))]"
 DEBUG_BUILDING_TOOLTIP: "ID : #variable [Building.GetID]#!"
 EXPANSION_DESC: "$LEVEL|v$"
 EXPANSION_DESC_BUILDING: "#tooltippable #tooltip:[Building.GetTooltipTag],BUILDING_LEVEL_TOOLTIP $LEVEL|v$#!#!"
 BUILDING_LEVEL_TOOLTIP: "[Building.GetSizeTooltip]"
 EXPANSION_DESC_QUEUE_STATE: "+#tooltippable #tooltip:[State.GetTooltipTag],CONSTRUCTION_QUEUE_IN_STATE $IN_QUEUE$#!#!"
 EXPANSION_DESC_QUEUE_BUILDING: "+#tooltippable #tooltip:[Building.GetState.GetTooltipTag],CONSTRUCTION_QUEUE_IN_STATE $IN_QUEUE$#!#!"
 EXPANSION_DESC_QUEUE_INVALID_STATE: "#red #tooltippable #tooltip:[State.GetTooltipTag],CONSTRUCTION_QUEUE_IN_STATE +$IN_QUEUE$#!#!#!"
 EXPANSION_DESC_QUEUE_INVALID_BUILDING: "#red #tooltippable #tooltip:[Building.GetState.GetTooltipTag],CONSTRUCTION_QUEUE_IN_STATE +$IN_QUEUE$#!#!#!"
 CONSTRUCTION_QUEUE_IN_STATE: "Nombre de niveaux d’agrandissement pour ce [concept_building|l] [concept_under_construction|l] ou dans la [concept_construction_queue|l] en [State.GetName]"
 EXPANSION_DESC_MAXIMUM: "/#maximum #tooltippable #tooltip:[Building.GetTooltipTag],BUILDING_EXPANSION_LEVEL_BREAKDOWN_TOOLTIP [Building.GetState.GetMaxPotentialFor(Building.Self)|v]#!#!#!"
 URBAN_CAP_PER_LEVEL: "#variable #P +[GetDefine('NCountry', 'BASE_URBAN_CAPACITY')]#!#! $urban_capacity$"
 BATTALIONS_PER_LEVEL: "[Concept('concept_battalion', '$concept_battalions$')] : #variable #P +$UNIT_COUNT$#!#! $UNIT_ICON$ par niveau"
 BATTALIONS_TOTAL: "[Concept('concept_battalion', '$concept_battalions$')] : #tooltippable #tooltip:[Building.GetTooltipTag],MILITARY_UNITS_PRODUCTION #variable #P +$UNIT_COUNT$#!#!#!#!$UNIT_ICON$ au total"
 FLOTILLAS_PER_LEVEL: "[Concept('concept_flotilla', '$concept_flotillas$')] : #variable #P +$UNIT_COUNT$#!#! $UNIT_ICON$ par niveau"
 FLOTILLAS_TOTAL: "[Concept('concept_flotilla', '$concept_flotillas$')] : #tooltippable #tooltip:[Building.GetTooltipTag],MILITARY_UNITS_PRODUCTION #variable #P +$UNIT_COUNT$#!#!#!#!$UNIT_ICON$ au total"
 CANAL_TOOLTIP_DESC: "Permet le passage entre [PROVINCE.GetStateRegion.GetName] et [PROVINCE_OTHER.GetStateRegion.GetName]"
 GOV_EXPENSES_TITLE: "#title [concept_government_expenses]#!"
 INCOME_TAXES_TITLE: "#title Impôts sur le revenu#!"
 EMBARGO_GOODS: "Commencer l’embargo"
 UNEMBARGO_GOODS: "Arrêter l’embargo"
 ENCOURAGE_GOODS: "Inciter à la consommation"
 UNENCOURAGE_GOODS: "Mettre fin à l’incitation"
 DISCOURAGE_GOODS: "Désinciter à la consommation"
 UNDISCOURAGE_GOODS: "Mettre fin à la désincitation"
 TAX_GOODS: "Ajouter l’impôt de consommation"
 NO_GOODS_TO_TAX: "Il n’y a pas de biens sur lesquels vous pouvez collecter des [Concept('concept_consumption_tax', '$concept_consumption_taxes$')|l]"
 UNTAX_GOODS: "Supprimer l’impôt de consommation"
 SUBSIDIZE_SHORT: "Subv :"
 BUILDING_SIZE: "[Building.GetExpansionLevel|v][AddLocalizationIf(NotEqualTo_int32( Building.GetExpansionLevelsInQueue, '(int32)0'), 'BUILDING_SIZE_CONSTRUCT')][AddLocalizationIf(Building.ShowLevelAndMaxLevel, 'BUILDING_SIZE_MAX')]"
 BUILDING_SIZE_CONSTRUCT: "+[Building.GetExpansionLevelsInQueue|P]"
 BUILDING_SIZE_MAX: "/[Building.GetState.GetMaxPotentialFor(Building.Self)]"
 BUILDING_SIZE_TT: "#header [Building.GetName] en [Building.GetState.GetName]#!\nTaille : [Building.GetExpansionLevel|v][AddLocalizationIf(Building.ShowLevelAndMaxLevel, 'EXPANSION_DESC_MAXIMUM')] [Concept('concept_building_level', '$concept_building_levels$')|l][AddLocalizationIf(NotEqualTo_int32( Building.GetExpansionLevelsInQueue, '(int32)0'), 'BUILDING_SIZE_TT_CONSTRUCTION')]"
 BUILDING_SIZE_TT_CONSTRUCTION: "\n[Building.GetExpansionLevelsInQueue|v] niveaux [concept_under_construction|l] ou dans la [concept_construction_queue|l]"
 BUILDING_SIZE_TT_OWNERS_HEADER: "$TOOLTIP_DELIMITER$\nPropriétaires :"
 BUILDING_AUTO_DOWNSIZE_WARNING: "@warning! Réduction autonome de la taille"
 BUILDING_AUTO_DOWNSIZE_HEADER: "#header Réduction autonome de la taille#!\n$TOOLTIP_DELIMITER$"
 BUILDING_WILL_AUTO_DOWNSIZE: "$BUILDING_AUTO_DOWNSIZE_HEADER$\nCe [concept_building|l] a trop de niveaux de [concept_privately_owned|l] sans personnel, et commencera à en réduire la taille de façon autonome le $DATE|v$, à moins qu’il ne soit en mesure d’embaucher de nouveaux [Concept('concept_employment','$concept_employees$')|l]."
 BUILDING_AUTO_DOWNSIZING: "$BUILDING_AUTO_DOWNSIZE_HEADER$\nCe [concept_building|l] a trop de niveaux de [concept_privately_owned|l] sans personnel, et réduira sa taille de façon autonome à raison d’un niveau de propriété privée chaque semaine, jusqu’à ce qu’il ait atteint une taille plus appropriée."
 BUILDING_NOT_HIRING_NO_PROFIT: "@red_cross! Ce bâtiment n’embauchera pas car son [concept_building_balance|l] hebdomadaire est inférieur ou égal à zéro"
 BUILDING_NOT_HIRING_LOW_PROFIT_LOW_CASH_RESERVES: "@red_cross! Ce bâtiment n’embauchera pas car son [concept_building_balance|l] hebdomadaire n’est pas au moins de $PROFIT_THRESHOLD|Kv$@money! ($PROFIT|Kv$@money!) et car ses [concept_cash_reserves|l] sont inférieures à $CASH_RESERVES_THRESHOLD|%v$ ($CASH_RESERVES|%v$)"
 BUILDING_NOT_HIRING_DECREASED_PRODUCTIVITY: "@red_cross! Ce bâtiment n’embauchera pas car il prévoit que cela réduirait sa [concept_productivity|l] en dessous de ce qu’il considère comme le minimum viable de $PRODUCTIVITY_THRESHOLD|1v$@money! ([Building.GetAverageAnnualEarningsPerEmployee|v1]@money! @arrow_right!$PRODUCTIVITY|v1$@money!)"
 TAX_WASTE: "[concept_tax_waste] : #v $VAL|-%$#!"
 RADICAL_IG_ITEM: "[InterestGroup.GetName] : #tooltippable #tooltip:[InterestGroup.GetTooltipTag],IG_APPROVAL_BREAKDOWN [InterestGroup.GetApprovalRating] #bold ([InterestGroup.GetApprovalValue|+=])#!#!#!\n"
 BUILDING_STATUS: "Statut :"
 BUILDING_ACTIVE: "#v Actif#!"
 BUILDING_INACTIVE: "Inactif"
 BUILDING_INACTIVE_CONSUMPTION_EMPTY_STATE: "Pas de consommation de [concept_building|l] puisque ce bâtiment est inactif."
 LOCAL_PRICE_CONDENSED: "Prix local : #variable [ProductionInterfaceInfo.GetLocalPrice|1]@money!#!"
 STATE_CONTROLLED_BY: "#BOLD #V [State.GetName]#!#! est [Concept('concept_controlled_war_goal','$concept_controlled_war_goal_short$')] par [State.GetController.GetAltNameNoFormatting('Le')] #BOLD #V [State.GetController.GetName]#!#!"
 STATE_OCCUPIED_BY: "#BOLD #V [Country.GetAltNameNoFormatting('Le')|U][Country.GetName]#!#! occupe $FRACTION|%0v$ de [State.GetName|v]"
 STATE_CONTESTED: "Le [Concept('concept_controlled_war_goal','$concept_control_war_goal_short$')] de #BOLD #V [State.GetName]#!#! est contesté !"
 CHANGE_PRODUCTION_METHOD_TOOLTIP: "#header Changer la [concept_production_method|l] : [ChangeProductionMethodMenuItem.GetProductionMethodGroup.GetName|l] -> [ProductionMethod.GetName|l]#!\n[ChangeProductionMethodMenuItem.GetTooltip(GetPlayer.Self)]"
 CHANGE_FROM_CURRENT_PRODUCTION_METHOD_TOOLTIP: "#header [concept_production_method] [ProductionMethodGroup.GetName]#!\nActuel : [ProductionMethod.GetName]\n[ProductionMethod.GetTooltipForBuilding(GetPlayer.Self, Building.Self)]\n\n#instruction #bold Clic gauche#! pour voir les options disponibles#!"
 CHANGE_PRODUCTION_METHOD_IMPACT_ON_BALANCE: "[concept_building_balance] hebdomadaire prévisionnel : #v $BALANCE|Dv$@money!#! (#v $BALANCE_DELTA|D+=$@money!#! à partir de la situation actuelle)\n[concept_productivity] prévisionnelle : $PRODUCTIVITY$@money! ($PRODUCTIVITY_DELTA|=+1$@money! à partir de la situation actuelle)"
 CHANGE_PRODUCTION_METHOD_IMPACT_ON_BALANCE_MULTI: "[concept_building_balance] hebdomadaire moyen prévisionnel : #v $BALANCE|D$@money!#! (#v $BALANCE_DELTA|D+=$@money!#! à partir de la situation actuelle)\n[concept_productivity] moyenne prévisionnelle : $PRODUCTIVITY|v1$@money! ($PRODUCTIVITY_DELTA|=+1$@money! à partir de la situation actuelle)"
 CHANGE_PRODUCTION_NO_EFFECT: "Cette méthode de production n’a actuellement aucun effet"
 BULK_CHANGE: "#header Appliquer la [concept_production_method|l] [ProductionMethodGroup.GetName|l] à [BuildingType.GetName|l]#!"
 BULK_CHANGE_MIXED: "$BULK_CHANGE$\nLes bâtiments [BuildingType.GetName] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetNameNoFlag] n’utilisent pas les mêmes [Concept('concept_production_method','$concept_production_methods$')|l] [ProductionMethodGroup.GetName|l]"
 BULK_CHANGE_SAME: "$BULK_CHANGE$\nTous les bâtiments [BuildingType.GetName|l] ont actuellement [ProductionMethod.GetName|l]\n$TOOLTIP$"
 SHOW_PER_LEVEL_VALUES: "Afficher les valeurs par niveau"
 PER_LEVEL_VALUES_NESTED_TOOLTIP: "#tooltippable #tooltip:[GetRawTextTooltipTag('$PER_LEVEL_VALUES_OUTPUT$')] [AddTextIf(Not(StringIsEmpty('$PER_LEVEL_VALUES_OUTPUT$')), '$SHOW_PER_LEVEL_VALUES$')][AddTextIf(Not(StringIsEmpty('$PER_LEVEL_VALUES_OUTPUT$')), '\n')]#!#!"
 PRODUCTION_METHOD_TOOLTIP_FORMAT: "[ConcatIfNeitherEmpty('$PREDICTION$', '\n')][AddTextIf(Not(StringIsEmpty('$TOTAL_VALUES_OUTPUT$')),'$TOOLTIP_DELIMITER$\n')][ConcatIfNeitherEmpty('$TIMED_MODIFIERS$','\n\n')][ConcatIfNeitherEmpty('$TOTAL_VALUES_OUTPUT$','\n\n')]$PER_LEVEL_VALUES_NESTED_TOOLTIP$"
 PRODUCTION_METHOD_WITH_REQUIREMENTS_TOOLTIP_FORMAT: "[ConcatIfNeitherEmpty('$PREDICTION$', '\n')][AddTextIf(Not(StringIsEmpty('$TOTAL_VALUES_OUTPUT$')),'$TOOLTIP_DELIMITER$\n')][ConcatIfNeitherEmpty('$TIMED_MODIFIERS$','\n')][ConcatIfNeitherEmpty('$TOTAL_VALUES_OUTPUT$','\n\n')]$PER_LEVEL_VALUES_NESTED_TOOLTIP$[AddTextIf(Not(StringIsEmpty('$EMPTY_REQUIREMENTS$')), '\n$TOOLTIP_REQUIREMENTS_ANY$\n')]$REQUIREMENTS$[AddTextIf(Not(StringIsEmpty('$EMPTY_REQUIREMENTS$')), '\n')]$BUILDING_TYPE_INFO$"
 PER_LEVEL_VALUES_ONLY: "$VALUES$"
 COMPACT_PM_DESC_OUTPUT: " #v $VAL|+^$#!$ICON$ "
 COMPACT_PM_DESC_INPUT: " #v $VAL|-^$#!$ICON$ "
 COMPACT_PM_DESC_OUTPUT_MODIFIERS: "$NUM|v$ modificateurs"
 COMPACT_PM_DESC_MORE_EMPLOYEES: " #v $VAL|D$ $ICON$#! "
 COMPACT_PM_DESC_LESS_EMPLOYEES: " #v $VAL|=D$ $ICON$#! "
 COMPACT_PM_GOODS_DESC_FORMAT: "[AddTextIf(StringIsEmpty('$INPUT_GOODS$'), '#title Aucun bien #!')]$INPUT_GOODS$[ConcatIfNeitherEmpty(' @turns_into! ','$OUTPUT_GOODS$')]"
 COMPACT_PM_EMPLOYMENT_DESC_FORMAT: "$MORE_EMPLOYEES$[ConcatIfNeitherEmpty(' ','$LESS_EMPLOYEES$')]#!"
 MARKET_PARTICIPANT_SHARE: "#V [Country.GetAltNameNoFormatting('Le')|U][Country.GetName]#! a [MarketPanel.GetMarket.GetMarketSharePercentageFor(Country.Self)|v%] des [Concept('concept_market_share','parts')] du [MarketPanel.GetMarket.GetName|l]\n$TOOLTIP_DELIMITER$\n"
 COIN_01_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin1!#!#! #bold Extrêmement moins cher#! que le [concept_base_price|l] ($VAL|v=1%$)"
 COIN_02_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin2!#!#! #bold Beaucoup moins cher#! que le [concept_base_price|l] ($VAL|v=1%$)"
 COIN_03_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin3!#!#! #bold Moins cher#! que le [concept_base_price|l] ($VAL|v=1%$)"
 COIN_04_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin4!#!#! #bold Moins cher#! que le [concept_base_price|l] ($VAL|v=1%$)"
 COIN_05_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin5!#!#! #bold Légèrement moins cher#! que le [concept_base_price|l] ($VAL|v=1%$)"
 COIN_06_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin6!#!#! #bold Légèrement moins cher#! que le [concept_base_price|l] ($VAL|v=1%$)"
 COIN_07_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin7!#!#! #bold Environ le même prix#! que le [concept_base_price|l] ($VAL|v=1%$)"
 COIN_08_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin8!#!#! #bold Un peu plus cher#! que le [concept_base_price|l] ($VAL|v=1%$)"
 COIN_09_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin9!#!#! #bold Un peu plus cher#! que le [concept_base_price|l] ($VAL|v=1%$)"
 COIN_10_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin10!#!#! #bold Plus cher#! que le [concept_base_price|l] ($VAL|v=1%$)"
 COIN_11_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin11!#!#! #bold Plus cher#! que le [concept_base_price|l] ($VAL|v=1%$)"
 COIN_12_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin12!#!#! #bold Extrêmement plus cher#! que le [concept_base_price|l] ($VAL|v=1%$)"
 COIN_13_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin13!#!#! #bold Extrêmement plus cher#! que le [concept_base_price|l] ($VAL|v=1%$)"
 COIN_01_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin1!#!#!  #bold Extrêmement moins cher#!"
 COIN_02_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin2!#!#!  #bold Beaucoup moins cher#!"
 COIN_03_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin3!#!#!  #bold Moins cher#!"
 COIN_04_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin4!#!#!  #bold Moins cher#!"
 COIN_05_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin5!#!#!  #bold Légèrement moins cher#!"
 COIN_06_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin6!#!#!  #bold Légèrement moins cher#!"
 COIN_07_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin7!#!#!  #bold Environ le prix de base#!"
 COIN_08_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin8!#!#!  #bold Un peu plus cher#!"
 COIN_09_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin9!#!#!  #bold Un peu plus cher#!"
 COIN_10_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin10!#!#!  #bold Plus cher#!"
 COIN_11_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin11!#!#!  #bold Plus cher#!"
 COIN_12_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin12!#!#!  #bold Extrêmement plus cher#!"
 COIN_13_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin13!#!#!  #bold Extrêmement plus cher#!"
 COIN_STACK_ICON_FORMAT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP $ICON$#!#!"
 COIN_STACK_ICON_FORMAT_NO_TOOLTIP: "$ICON$"
 COIN_STACK_TOOLTIP: "L’icône de prix indique à quel point un [concept_good|l] est cher (ou bon marché) par rapport à son [concept_base_price|l]. Ces icônes vont d’extrêmement moins cher (@coin1!) que le prix de base (@coin7!) à extrêmement plus cher (@coin13!)"
 GOODS_STATE_PRICE_AGAINST_BASE_PRICE_TOOLTIP: "#header [Goods.GetStatePriceLabel] comparé au [concept_base_price|l]#!\n[Goods.GetCompareDescAgainstBasePrice( Goods.GetStatePrice )]\n$TOOLTIP_DELIMITER$\n[Goods.GetStatePriceLabel] : #variable [Goods.GetStatePrice|1]@money!#!\n[concept_base_price] : #BOLD #V [Goods.GetBasePrice|1]@money!#!#!"
 GOODS_MARKET_PRICE_AGAINST_BASE_PRICE_TOOLTIP: "#header [Goods.GetMarketPriceLabel] comparé au [concept_base_price|l]#!\n[Goods.GetCompareDescAgainstBasePrice( Goods.GetMarketPrice )]\n$TOOLTIP_DELIMITER$\n[Goods.GetMarketPriceLabel] : #variable [Goods.GetMarketPrice|1]@money!#!\n[concept_base_price] : #BOLD #V [Goods.GetBasePrice|1]@money!#!#!"
 BUY_ORDERS: "[concept_buy_orders]"
 SELL_ORDERS: "[concept_sell_orders]"
 PRODUCTION: "[concept_good_production]"
 CONSUMPTION: "[concept_good_consumption]"
 BATTALIONS: "[Concept('concept_battalion', '$concept_battalions$')]"
 FLOTILLAS: "[Concept('concept_flotilla', '$concept_flotillas$')]"
 GOOD_PRICE_BASED_ON_LAST_TICK_WARNING: "#lore Ces valeurs sont mises à jour au moins une fois par semaine.#!"
 GOODS_PRICE_DESC_FIXED: "[GOODS.GetName][GOODS.GetTextIcon] a un prix fixe de [GOODS.GetPrice|1v]@money! qui ne changera jamais."
 GOODS_PRICE_DESC_IN_MARKET: "#header [Goods.GetName] [Goods.GetTextIcon] sur le [Goods.GetMarket.GetName|l]#!\n$TOOLTIP_DELIMITER$\n$DATA_GOODS_NAME_TOOLTIP$"
 GOODS_PRICE_DESC_IN_MARKET_PROGRESSBAR: "#header [Goods.GetMarketPrice|0v]@money! [Goods.GetCompareIconAgainstBasePrice( Goods.GetMarketPrice )] ([Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=-])#!"
 GOODS_PRICE_DESC_IN_STATE: "#header [Goods.GetName] [Goods.GetTextIcon] en [State.GetName]#!\n[concept_local_price] : [Goods.GetStatePrice|1v] @money! [Goods.GetCompareIconAgainstBasePrice( Goods.GetStatePrice )]\n[SelectLocalization(GreaterThan_CFixedPoint(Goods.GetStateMonopolyPriceImpact,'(CFixedPoint)0'),'GOODS_MONOPOLY_STATE_PRICE_DESC','')][SelectLocalization(Goods.IsLocal,'','GOODS_LOCAL_PRICE_DIFF')]#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetStatePrice)|%0=-]#! par rapport au [concept_base_price|l]\n$TOOLTIP_DELIMITER$\n[Goods.GetStateProductionWithTooltip] de $PRODUCTION$ locale :\n[Goods.GetStateConsumptionWithTooltip] de $CONSUMPTION$ locale :\n\n$PRICE_SETTING_INFO$[concept_base_price] : [Goods.GetBasePrice|1v] @money!\n\n$GOOD_PRICE_BASED_ON_LAST_TICK_WARNING$"
 GOODS_PRICE_DESC_IN_WORLD_MARKET: "#header Prix [Goods.Custom('FR_Goods_Du')][Goods.GetName][Nbsp][Goods.GetTextIcon]#!\n$PRICE|1v$@money! $COMPARE_ICON$ sur le [concept_world_market|l]\n$TOOLTIP_DELIMITER$\n$EXPORTS$ [Concept('concept_trade','$concept_exports$')|l] de [Goods.GetTextIcon]\n$IMPORTS$ [Concept('concept_trade','$concept_imports$')|l] de [Goods.GetTextIcon][ConcatIfNeitherEmpty('\n','$MONOPOLY_PRICE_IMPACT$')]\n\n$COMPARE_PRICE_DESC$\n$concept_base_price$ : $BASE_PRICE|1v$@money!\n\n$GOOD_PRICE_BASED_ON_LAST_TICK_WARNING$"
 PRICE_SETTING_INFO: "#title Fixation du prix#!\n[SelectLocalization(GreaterThan_CFixedPoint(Goods.GetMarketPriceShare, '(CFixedPoint)0'), 'MARKET_PRICE_SHARE_DESC', '')][SelectLocalization(GreaterThan_CFixedPoint(Goods.GetMarketMonopolyPriceImpact,'(CFixedPoint)0'),'GOODS_MONOPOLY_MARKET_PRICE_DESC','')][Goods.GetLocalPriceShare|%v0] de la $PRODUCTION$, de la $CONSUMPTION$, et du commerce sur le [concept_world_market|l] en [Goods.GetState.GetName]\n[SelectLocalization(GreaterThan_CFixedPoint(Goods.GetStateMonopolyPriceImpact,'(CFixedPoint)0'),'GOODS_MONOPOLY_STATE_PRICE_DESC','')][SelectLocalization(Goods.IsLocal,'','GOODS_LOCAL_PRICE_DIFF')]"
 MARKET_PRICE_SHARE_DESC: "#tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_MARKET_PRICE_SHARE_TOOLTIP [Goods.GetMarketPriceShare|%v0]#!#! du [concept_market_price|l] ([Goods.GetMarketPriceWithTooltip] sur le [Goods.GetMarket.GetName|l])\n"
 GOODS_PRICE_DESC_IN_ISOLATED_MARKET: "#header [Goods.GetName] [Goods.GetTextIcon] en [Goods.GetState.GetName]#!\nPrix local : [Goods.GetStatePrice|1v] @money! [Goods.GetCompareIconAgainstBasePrice( Goods.GetStatePrice )] (#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetStatePrice)|%0=-]#! par rapport au [concept_base_price|l])\n$TOOLTIP_DELIMITER$\n[concept_sell_orders] de [Goods.GetStateProductionWithTooltip]\n[concept_buy_orders] de [Goods.GetStateConsumptionWithTooltip]\n\n[concept_base_price] : [Goods.GetBasePrice|1v] @money!\n\n$GOOD_PRICE_BASED_ON_LAST_TICK_WARNING$"
 GOODS_MARKET_PRICE_SHARE_TOOLTIP: "#header [Concept('concept_market_price', '$concept_market_price_share$')] [Goods.GetCustom('FR_Goods_Du')][Goods.GetName|l] en [Goods.GetState.GetName] : [Goods.GetMarketPriceShare|%v1]#!\n$TOOLTIP_DELIMITER$\n[Goods.GetMarketPriceShareDesc]"
 GOODS_MARKET_PRICE_SHARE_DESC: "Calculé à partir de l’[concept_market_access|l] de #tooltippable #tooltip:$MARKET_ACCESS_BREAKDOWN$ $MARKET_ACCESS|v0%$#!#! multiplié par le modificateur #v « $state_market_access_price_impact$ »#!, valant #tooltippable #tooltip:$PRICE_IMPACT_BREAKDOWN$ $MARKET_ACCESS_IMPACT|v%$#!#!"
 GOODS_MARKET_ACCESS_PRICE_IMPACT_DESC: "#header #v $state_market_access_price_impact$#! : $MARKET_ACCESS_IMPACT|v%$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 GOODS_MONOPOLY_WORLD_MARKET_PRICE_DESC: "$concept_world_market_price$ de $PRICE_IMPACT|v=%0$ parce que le [MARKET.GetName|l] contrôle $EXPORT_SHARE|v%0$ des [Concept('concept_trade','$concept_exports$')|l]"
 GOODS_MONOPOLY_MARKET_PRICE_DESC: "$concept_market_price$ de [Goods.GetMarketMonopolyPriceImpact|v%=0] car [Goods.GetMarketMonopolyFraction|v%0] des [concept_sell_orders|l] du marché sont produits sous un [concept_monopoly|l]\n\n"
 GOODS_MONOPOLY_STATE_PRICE_DESC: "Prix de l’État de [Goods.GetStateMonopolyPriceImpact|v%=0] car [Goods.GetStateMonopolyFraction|v%0] de la [concept_good_production|l] de l’$concept_state$ sont produits sous un [concept_monopoly|l]\n\n"
 GOODS_PRICE_MARKET_LOCAL_PRICE_LINK: "Voir les #tooltippable #tooltip:[GOODS.GetTooltipTag],GOODS_PRICE_MARKET_LOCAL_PRICE_BREAKDOWN prix locaux#!#! sur le [GOODS.GetMarket.GetName|l]"
 GOODS_PRICE_MARKET_LOCAL_PRICE_BREAKDOWN: "[Goods.GetLocalPricesDesc]"
 GOODS_PRICE_MARKET_LOCAL_PRICE_HEADER: "#header Prix locaux [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon] sur le [Goods.GetMarket.GetName|l]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_MARKET_LOCAL_PRICE_ITEM: "[State.GetName] : [Goods.GetStatePriceWithTooltip]"
 GOODS_PRODUCTION_VALUE: "#tooltippable #tooltip:$TAG$,$BREAKDOWN_CONTEXT$ $VALUE|Dv$#!#!"
 GOODS_CONSUMPTION_VALUE: "#tooltippable #tooltip:$TAG$,$BREAKDOWN_CONTEXT$ $VALUE|Dv$#!#!"
 GOODS_MARKET_PRODUCTION_BREAKDOWN: "[Goods.GetMarketProductionBreakdown]"
 GOODS_MARKET_CONSUMPTION_BREAKDOWN: "[Goods.GetMarketConsumptionBreakdown]"
 GOODS_STATE_PRODUCTION_BREAKDOWN: "[Goods.GetStateProductionBreakdown]"
 GOODS_STATE_CONSUMPTION_BREAKDOWN: "[Goods.GetStateConsumptionBreakdown]"
 GOODS_MARKET_SELL_ORDERS_VALUE: "#tooltippable #tooltip:$TAG$,GOODS_MARKET_SELL_ORDERS_BREAKDOWN $VALUE|vD$#!#!"
 GOODS_MARKET_BUY_ORDERS_VALUE: "#tooltippable #tooltip:$TAG$,GOODS_MARKET_BUY_ORDERS_BREAKDOWN $VALUE|vD$#!#!"
 GOODS_MARKET_SELL_ORDERS_BREAKDOWN: "[Goods.GetMarketSellOrdersBreakdown]"
 GOODS_MARKET_BUY_ORDERS_BREAKDOWN: "[Goods.GetMarketBuyOrdersBreakdown]"
 GOODS_BASE_IMPORTS_VALUE: "#tooltippable #tooltip:$TAG$,GOODS_BASE_IMPORTS_BREAKDOWN $VALUE|Dv$#!#!"
 GOODS_BASE_EXPORTS_VALUE: "#tooltippable #tooltip:$TAG$,GOODS_BASE_EXPORTS_BREAKDOWN $VALUE|Dv$#!#!"
 GOODS_BASE_IMPORTS_BREAKDOWN: "[Goods.GetBaseImportBreakdown]"
 GOODS_BASE_EXPORTS_BREAKDOWN: "[Goods.GetBaseExportBreakdown]"
 URBAN_BUILDINGS: "Urbain"
 RURAL_BUILDINGS: "Rural"
 DEVELOPMENT_BUILDINGS: "Développement"
 BASE_GOODS_MARKET_SELL_ORDERS: "[Goods.GetNonPrestigeGoodsMarketSellOrders|vD]\n~[Divide_CFixedPoint(Goods.GetNonPrestigeGoodsMarketSellOrders, Goods.GetMarketSellOrders)|0%]"
 BASE_GOODS_MARKET_BUY_ORDERS: "[Goods.GetNonPrestigeGoodsMarketBuyOrders|vD]\n~[Divide_CFixedPoint(Goods.GetNonPrestigeGoodsMarketBuyOrders, Goods.GetMarketBuyOrders)|0%]"
 BASE_GOODS_WORLD_MARKET_IMPORTS: "[Goods.GetNonPrestigeGoodsWorldMarketImports|vD]\n~[Divide_CFixedPoint(Goods.GetNonPrestigeGoodsWorldMarketImports, Goods.GetWorldMarketImports)|0%]"
 BASE_GOODS_WORLD_MARKET_EXPORTS: "[Goods.GetNonPrestigeGoodsWorldMarketExports|vD]\n~[Divide_CFixedPoint(Goods.GetNonPrestigeGoodsWorldMarketExports, Goods.GetWorldMarketExports)|0%]"
 BASE_GOODS_STATE_PRODUCTION: "[Goods.GetNonPrestigeGoodsStateProduction|vD]\n~[Divide_CFixedPoint(Goods.GetNonPrestigeGoodsStateProduction, Goods.GetStateProduction)|0%]"
 BASE_GOODS_STATE_CONSUMPTION: "[Goods.GetNonPrestigeGoodsStateConsumption|vD]\n~[Divide_CFixedPoint(Goods.GetNonPrestigeGoodsStateConsumption, Goods.GetStateConsumption)|0%]"
 PRESTIGE_GOODS_MARKET_SELL_ORDERS: "[Goods.GetMarketSellOrdersWithTooltip]\n~[Divide_CFixedPoint(Goods.GetMarketSellOrders, Goods.GetBaseGoods.GetMarketSellOrders)|0%]"
 PRESTIGE_GOODS_MARKET_BUY_ORDERS: "[Goods.GetMarketBuyOrdersWithTooltip]\n~[Divide_CFixedPoint(Goods.GetMarketBuyOrders, Goods.GetBaseGoods.GetMarketBuyOrders)|0%]"
 PRESTIGE_GOODS_STATE_PRODUCTION: "[Goods.GetStateProductionWithTooltip]\n~[Divide_CFixedPoint(Goods.GetStateProduction, Goods.GetBaseGoods.GetStateProduction)|0%]"
 PRESTIGE_GOODS_STATE_CONSUMPTION: "[Goods.GetStateConsumptionWithTooltip]\n~[Divide_CFixedPoint(Goods.GetStateConsumption, Goods.GetBaseGoods.GetStateConsumption)|0%]"
 PRESTIGE_GOODS_WORLD_IMPORTS: "[Goods.GetWorldMarketImportsWithTooltip]\n~[Divide_CFixedPoint(Goods.GetWorldMarketImports, Goods.GetBaseGoods.GetWorldMarketImports)|0%]"
 PRESTIGE_GOODS_WORLD_EXPORTS: "[Goods.GetWorldMarketExportsWithTooltip]\n~[Divide_CFixedPoint(Goods.GetWorldMarketExports, Goods.GetBaseGoods.GetWorldMarketExports)|0%]"
 GOODS_PRICE_MARKET_PRODUCTION_HEADER: "#header [concept_good_production] [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] sur le [MARKET.GetName|l]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_MARKET_CONSUMPTION_HEADER: "#header [concept_good_consumption] [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] sur le [MARKET.GetName|l]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_MARKET_PRODUCTION_ITEM: "[State.GetName] : #tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_STATE_PRODUCTION_BREAKDOWN [Goods.GetStateProduction|D]#!#!"
 GOODS_PRICE_MARKET_CONSUMPTION_ITEM: "[State.GetName] : #tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_STATE_CONSUMPTION_BREAKDOWN [Goods.GetStateConsumption|D]#!#!"
 GOODS_PRICE_MARKET_SELL_ORDER_HEADER: "#header [concept_sell_orders] [GOODS.GetCustom('FR_Goods_Du')][GOODS.GetName|l] sur le [MARKET.GetName|l]#!\nTotal actuel : $ORDERS|vD$\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_MARKET_BUY_ORDER_HEADER: "#header [concept_buy_orders] [GOODS.GetCustom('FR_Goods_Du')][GOODS.GetName|l] sur le [MARKET.GetName|l]#!\nTotal actuel : $ORDERS|vD$\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_MARKET_SELL_ORDER_ITEM: "[Goods.GetAccessAdjustedStateSell|Dv] en [State.GetName] (#tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_STATE_PRODUCTION_BREAKDOWN [Goods.GetStateProduction|D]#!#! de [concept_good_production|l] × [State.GetMarketAccess|v0%] d’[concept_market_access|l])"
 GOODS_PRICE_MARKET_BUY_ORDER_ITEM: "[Goods.GetAccessAdjustedStateBuy|Dv] en [State.GetName] (#tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_STATE_CONSUMPTION_BREAKDOWN [Goods.GetStateConsumption|D]#!#! de [concept_good_consumption|l] × [State.GetMarketAccess|v0%] d’[concept_market_access|l])"
 GOODS_PRICE_MARKET_IMPORT_EXPORT: "Des routes commerciales : $VAL|=vD$"
 GOODS_PRICE_WORLD_MARKET_EXPORTS_HEADER: "#header [Concept('concept_trade','$concept_exports$')] [GOODS.GetCustom('FR_Goods_Du')][GOODS.GetName|l] vers le [concept_world_market|l]#!\nTotal actuel : $TRADES|vD$\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_WORLD_MARKET_IMPORTS_HEADER: "#header [Concept('concept_trade','$concept_imports$')] [GOODS.GetCustom('FR_Goods_Du')][GOODS.GetName|l] depuis le [concept_world_market|l]#!\nTotal actuel : $TRADES|vD$\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_WORLD_MARKET_MARKET_EXPORTS_DESC: "#header [Concept('concept_trade','$concept_exports$')] [GOODS.GetCustom('FR_Goods_Du')][GOODS.GetName|l] du marché [MARKET.GetName] [MARKET.GetOwner.GetFlagTextIcon] vers le [concept_world_market|l]#!\nTotal actuel : $TRADES|vD$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 GOODS_PRICE_WORLD_MARKET_MARKET_IMPORTS_DESC: "#header [Concept('concept_trade','$concept_imports$')] [GOODS.GetCustom('FR_Goods_Du')][GOODS.GetName|l] du marché [MARKET.GetName] [MARKET.GetOwner.GetFlagTextIcon] depuis le [concept_world_market|l]#!\nTotal actuel : $TRADES|vD$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 GOODS_WORLD_MARKET_EXPORTS_VALUE: "#tooltippable #tooltip:$TAG$,GOODS_WORLD_MARKET_EXPORTS_BREAKDOWN $VALUE|vD$#!#!"
 GOODS_WORLD_MARKET_IMPORTS_VALUE: "#tooltippable #tooltip:$TAG$,GOODS_WORLD_MARKET_IMPORTS_BREAKDOWN $VALUE|vD$#!#!"
 GOODS_WORLD_MARKET_EXPORTS_BREAKDOWN: "[Goods.GetWorldMarketExportsBreakdown]"
 GOODS_WORLD_MARKET_IMPORTS_BREAKDOWN: "[Goods.GetWorldMarketImportsBreakdown]"
 GOODS_WORLD_MARKET_MARKET_TRADES: "[MARKET.GetName] [MARKET.GetOwner.GetFlagTextIcon] : #tooltippable #tooltip:$BREAKDOWN_TAG$ $TRADES|=vD$#!#!"
 GOODS_WORLD_MARKET_STATE_TRADES: "[GetBuildingType('building_trade_center').GetName] en [STATE.GetName] [STATE.GetOwner.GetFlagTextIcon] : #tooltippable #tooltip:$BREAKDOWN_TAG$ $TRADES|=vD$#!#!"
 GOODS_WORLD_MARKET_STATE_TO_STATE_EXPORTS: "#header [Concept('concept_trade','$concept_exports$')] [GOODS.GetCustom('FR_Goods_Du')][GOODS.GetName|l] depuis [STATE.GetName] [STATE.GetOwner.GetFlagTextIcon]#!\nTotal actuel : $TRADES|vD$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 GOODS_WORLD_MARKET_STATE_TO_STATE_IMPORTS: "#header [Concept('concept_trade','$concept_imports$')] [GOODS.GetCustom('FR_Goods_Du')][GOODS.GetName|l] vers [STATE.GetName] [STATE.GetOwner.GetFlagTextIcon]#!\nTotal actuel : $TRADES|vD$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 GOODS_WORLD_MARKET_STATE_TO_STATE_EXPORTS_ENTRY: "Exportations vers [STATE.GetName] [STATE.GetOwner.GetFlagTextIcon] : $TRADES|=vD$"
 GOODS_WORLD_MARKET_STATE_TO_STATE_IMPORTS_ENTRY: "Importations depuis [STATE.GetName] [STATE.GetOwner.GetFlagTextIcon] : $TRADES|=vD$"
 GOODS_WORLD_MARKET_STATE_TO_STATE_EXPORTS_OVERFLOW: "Exportations supplémentaires : $TRADES|=vD$"
 GOODS_WORLD_MARKET_STATE_TO_STATE_IMPORTS_OVERFLOW: "Importations supplémentaires : $TRADES|=vD$"
 GOODS_WORLD_MARKET_DEMAND_BUFFER: "Exigence inhérente : $TRADES|=vD$"
 MARKET_TO_MARKET_TRADE_VALUE_EXPORTS_ENTRY: "[GOODS.GetName] [GOODS.GetTextIcon] : exportation de $AMOUNT|v1$ d’une valeur de $VALUE|vD$@money!"
 MARKET_TO_MARKET_TRADE_VALUE_IMPORTS_ENTRY: "[GOODS.GetName] [GOODS.GetTextIcon] : importation de $AMOUNT|v1$ d’une valeur de $VALUE|vD$@money!"
 COUNTRY_TO_COUNTRY_TRADE_VALUE_DESC: "#header Valeur commerciale $FIRST_ADJ$ - $SECOND_ADJ$ : $VALUE|vD$@money!#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 COUNTRY_TO_COUNTRY_TRADE_VALUE_NONE: "Aucun commerce entre ces marchés :"
 COUNTRY_TO_COUNTRY_TRADE_VALUE_MARKET_SHARE_DESC: "Multiplié par x$MULTIPLIER|v$ en raison des [Concept('concept_market_share','$concept_market_shares$')|l] de $OUR_SHARE|%v1$ et $THEIR_SHARE|%v1$"
 GOODS_PRICE_STATE_PRODUCTION_HEADER: "#header [concept_good_production] [GOODS.GetCustom('FR_Goods_De')][GOODS.GetName|l] en [STATE.GetName]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_STATE_CONSUMPITON_HEADER: "#header [concept_good_cconsumption] [GOODS.GetCustom('FR_Goods_De')][GOODS.GetName|l] en [STATE.GetName]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_STATE_STATE_HEADER: "#bold En [STATE.GetName]#!"
 GOODS_PRICE_STATE_BUILDING_PRODUCTION_ITEM: "[Building.GetName] : $VALUE|0v$"
 GOODS_PRICE_STATE_BUILDING_CONSUMPTION_ITEM: "[BUILDING.GetName] : $VALUE|0v$"
 GOODS_PRICE_STATE_POPS_PRODUCTION_ITEM: "Groupes sociaux : #tooltippable #tooltip:[GOODS.GetTooltipTag]|[STATE.GetTooltipTag],GOODS_PRICE_STATE_POPTYPE_PRODUCTION_BREAKDOWN $VALUE|0$#!#!"
 GOODS_PRICE_STATE_POPS_CONSUMPTION_ITEM: "Groupes sociaux : #tooltippable #tooltip:[GOODS.GetTooltipTag]|[STATE.GetTooltipTag],GOODS_PRICE_STATE_POPTYPE_CONSUMPTION_BREAKDOWN $VALUE|0$#!#!"
 GOODS_PRICE_STATE_POPTYPE_PRODUCTION_BREAKDOWN: "[Goods.GetStatePopTypeProductionBreakdown(State.Self)]"
 GOODS_PRICE_STATE_POPTYPE_CONSUMPTION_BREAKDOWN: "[Goods.GetStatePopTypeDemandBreakdown(State.Self)]"
 GOODS_PRICE_STATE_POPTYPE_PRODUCTION_HEADER: "#header [concept_good_production] [GOODS.GetCustom('FR_Goods_De')][GOODS.GetName|l] en [STATE.GetName] par [concept_profession|l]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_STATE_POPTYPE_CONSUMPTION_HEADER: "#header [concept_good_cconsumption] [GOODS.GetCustom('FR_Goods_De')][GOODS.GetName|l] en [STATE.GetName] par [concept_profession|l]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_STATE_POPTYPE_PRODUCTION_POPTYPE_ITEM: "[POP_TYPE.GetName] : #tooltippable #tooltip:[GOODS.GetTooltipTag]|[STATE.GetTooltipTag]|[POP_TYPE.GetTooltipTag],GOODS_PRICE_STATE_POP_PRODUCTION_BREAKDOWN $VALUE|0$#!#!"
 GOODS_PRICE_STATE_POPTYPE_CONSUMPTION_POPTYPE_ITEM: "[POP_TYPE.GetName] : #tooltippable #tooltip:[GOODS.GetTooltipTag]|[STATE.GetTooltipTag]|[POP_TYPE.GetTooltipTag],GOODS_PRICE_STATE_POP_CONSUMPTION_BREAKDOWN $VALUE|0$#!#!"
 GOODS_PRICE_STATE_POP_PRODUCTION_BREAKDOWN: "[Goods.GetStatePopProductionBreakdown(State.Self, PopType.Self)]"
 GOODS_PRICE_STATE_POP_CONSUMPTION_BREAKDOWN: "[Goods.GetStatePopDemandBreakdown(State.Self, PopType.Self)]"
 GOODS_PRICE_STATE_POP_PRODUCTION_HEADER: "#header [concept_good_production] [GOODS.GetCustom('FR_Goods_De')][GOODS.GetName|l] en [STATE.GetName] par [POP_TYPE.GetName|l]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_STATE_POP_CONSUMPTION_HEADER: "#header [concept_good_cconsumption] [GOODS.GetCustom('FR_Goods_De')][GOODS.GetName|l] en [STATE.GetName] par [POP_TYPE.GetName|l]#!\n$TOOLTIP_DELIMITER$"
 GOODS_PRICE_STATE_POP_PRODUCTION_POPTYPE_ITEM: "[Pop.GetName] en [POP.GetWorksAt] : $VALUE|0v$"
 GOODS_PRICE_STATE_POP_CONSUMPTION_POPTYPE_ITEM: "[Pop.GetName] en [POP.GetWorksAt] : $VALUE|0v$"
 GOOD_GOOD_HEADER_TOOLTIP: "#header Nom du bien#!\n$TOOLTIP_DELIMITER$\n#instruction Cliquez pour trier#!"
 GOOD_SELL_HEADER_TOOLTIP: "#header [concept_sell_orders]#!\n$TOOLTIP_DELIMITER$\n#instruction Cliquez pour trier#!"
 GOOD_BUY_HEADER_TOOLTIP: "#header [concept_buy_orders]#!\n$TOOLTIP_DELIMITER$\n#instruction Cliquez pour trier#!"
 GOOD_DELTA_WP_HEADER_TOOLTIP: "#header Prix par rapport au [concept_base_price|l]#!\n$TOOLTIP_DELIMITER$\n#instruction Cliquez pour trier#!"
 MARKET_MARKET_BREAKDOWN: "#BOLD #V [Market.GetName]#!#!\nContrôlé par [Market.GetOwner.GetAltNameNoFormatting('Le')]#BOLD #V [Market.GetOwner.GetName]#!#!\n$TOOLTIP_DELIMITER$\n#title Puissance commerciale#!#!"
 EXPORTING: "Exporte"
 IMPORTING: "Importe"
 WORLD_MARKET_TRADE: "#header Commerce sur le [concept_world_market|l] [Market.GetOwner.GetFlagTextIcon]#!"
 MARKET_IMPORTS: "[Market.GetTotalImportedAmount|vD] importations"
 MARKET_EXPORTS: "[Market.GetTotalExportedAmount|vD] exportations"
 MARKET_GOODS_IMPORT_DEPENDENCE: "#header Dépendance du [Market.GetName|l] à l’égard du [concept_world_market|l] [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon]#!\nLe [Market.GetName|l] est dépendant à #v [Divide_CFixedPoint(Goods.GetMarketImports, Goods.GetMarketSellOrders )|%0]#! des importations du [concept_world_market|l]\n$TOOLTIP_DELIMITER$\n[Goods.GetMarketSellOrdersWithTooltip|v] [concept_sell_orders|l] au total, dont [Goods.GetMarketImports|vD] proviennent des importations du [concept_world_market|l]"
 MARKET_GOODS_EXPORT_DEPENDENCE: "#header Dépendance du [Market.GetName|l] à l’égard du [concept_world_market|l] [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon]#!\nLe [Market.GetName|l] est dépendant à #v [Divide_CFixedPoint(Goods.GetMarketExports, Goods.GetMarketBuyOrders )|%0]#! des exportations vers le [concept_world_market|l]\n$TOOLTIP_DELIMITER$\n[Goods.GetMarketBuyOrdersWithTooltip|v] [concept_buy_orders|l] au total, dont [Goods.GetMarketExports|vD] proviennent des exportations vers le [concept_world_market|l]"
 STATE_GOODS_IMPORT_DEPENDENCE: "#header Dépendance de [State.GetName] à l’égard du [concept_world_market|l] [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon]#!\n[State.GetName] est dépendant à #v [Divide_CFixedPoint(Goods.GetStateImports, Goods.GetStateProduction )|%0]#! des importations du [concept_world_market|l]\n$TOOLTIP_DELIMITER$\n[Goods.GetStateProductionWithTooltip|v] [Concept('concept_good_production', 'biens produits')] au total, dont [Goods.GetStateImports|vD] proviennent des importations du [concept_world_market|l]"
 STATE_GOODS_EXPORT_DEPENDENCE: "#header Dépendance de [State.GetName] à l’égard du [concept_world_market|l] [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon]#!\n[State.GetName] est dépendant à #v [Divide_CFixedPoint(Goods.GetStateExports, Goods.GetStateConsumption )|%0]#! des exportations vers le [concept_world_market|l]\n$TOOLTIP_DELIMITER$\n[Goods.GetStateConsumptionWithTooltip|v] [Concept('concept_good_consumption','biens consommés')] au total, dont [Goods.GetStateExports|vD] proviennent des exportations vers le [concept_world_market|l]"
 STATE_MARKET: "#header [State.GetName]#! fait partie du #header [State.GetMarket.GetName|l]#!"
 GOODS_BUILDING_TYPE_BUY_ORDERS: "[BuildingType.GetName] : #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
 GOODS_BUILDING_TYPE_SELL_ORDERS: "[BuildingType.GetName] : #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
 GOODS_BUILDING_TYPE_BUY_ORDERS_BREAKDOWN: "#header [concept_buy_orders] de $GOODS_NAME$ de [BuildingType.GetName] sur le [Market.GetName|l]#!\nTotal actuel : $ORDERS|=vD$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 GOODS_BUILDING_TYPE_SELL_ORDERS_BREAKDOWN: "#header [concept_sell_orders] de $GOODS_NAME$ de [BuildingType.GetName] sur le [Market.GetName|l]#!\nTotal actuel : $ORDERS|=vD$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 GOODS_SLAVE_CONSUMPTION_MARKET_ORDERS: "Achetés pour des $FR_slaves$ : $ORDERS|=vD$"
 GOODS_BUILDING_BUY_ORDERS: "[Building.GetName] en [Building.GetState.GetName] : #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
 GOODS_BUILDING_SELL_ORDERS: "[Building.GetName] en [Building.GetState.GetName] : #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
 GOODS_BUILDING_BUY_ORDERS_BREAKDOWN: "#header [concept_buy_orders] de $GOODS_NAME$ de [Building.GetName] en [Building.GetState.GetName]#!\nTotal actuel : $ORDERS|=vD$\n$TOOLTIP_DELIMITER$\n[concept_good_consumption] de $BASE_AMOUNT|vD$ $GOODS_NAME$ modifiée par l’[concept_market_access|l] de [Building.GetState.GetMarketAccess|%v]"
 GOODS_BUILDING_SELL_ORDERS_BREAKDOWN: "#header [concept_sell_orders] de $GOODS_NAME$ de [Building.GetName] en [Building.GetState.GetName]#!\nTotal actuel : $ORDERS|=vD$\n$TOOLTIP_DELIMITER$\n[concept_good_production] de $BASE_AMOUNT|vD$ $GOODS_NAME$ modifiée par l’[concept_market_access|l] de [Building.GetState.GetMarketAccess|%v]"
 GOODS_POP_CONSUMPTION_MARKET_ORDERS: "Consommation du [concept_pop|l] : #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
 GOODS_POP_CONSUMPTION_MARKET_ORDERS_HEADER: "#header [concept_buy_orders] de $GOODS_NAME$ de la consommation de [concept_pop|l] sur le [Market.GetName|l]#!\nTotal actuel : $ORDERS|=vD$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 GOODS_POP_TYPE_CONSUMPTION_MARKET_ORDERS: "[PopType.GetName] : $ORDERS|=vD$"
 GOODS_IMPORTS: "Importations : $ORDERS|=vD$"
 GOODS_EXPORTS: "Exportations : $ORDERS|=vD$"
 PRODUCES: "#title Produit#!"
 USES: "#title Utilise#!"
 EFFICIENCY: "#title Biens d’efficacité#! ([Building.GetEfficiencyBonus|=+0%] de bonus d’efficacité)"
 BALANCE: "Solde"
 DEFICIT_OF: "#title Déficit de :#!"
 SUPPORTS: "#title Soutient :#!"
 OPPOSES: "#title S’oppose à :#!"
 CLOUT_HEADER: "#title [concept_clout]#!"
 IG_STATUS_HEADER: "#title [concept_approval]#!"
 IDEOLOGY_HEADER: "[Concept('concept_ideology','$concept_ideologies$')]"
 RESOURCES_HEADER: "#title Ressources :#!"
 POPULATION_HEADER: "#title Population#!"
 BUILDINGS_HEADER: "#title Bâtiments :#!"
 PRODUCTION_HEADER: "#title Économie#!"
 SPLIT_STATE_HEADER: "C’est un #BOLD État divisé#!"
 INCORPORATED_STATE_HEADER: "C’est un #BOLD [concept_incorporated_state]#!"
 UNINCORPORATED_STATE_HEADER: "C’est un #BOLD [concept_unincorporated_state]#!"
 STATE_DECENTRALIZED: "Cet #BOLD État#! appartient à une #BOLD [concept_decentralized_nation|l]#!."
 PRODUCTION_AMOUNT_TOOLTIP: "Quantité (pourcentage de la production du marché local)"
 INTEREST_GROUP_PRESSURED_IN_POLITICAL_MOVEMENT: "Est [Concept('concept_political_movement_pressure', '$concept_political_movement_pressured_short$')|l]"
 IG_PANEL_POP_PORTRAIT_TOOLTIP: "[Pop.GetTotalSize|vD] [Pop.GetPopType.GetNameNoIcon] soutiennent [InterestGroup.GetNameNoFormatting]"
 PRESSURING_MOVEMENTS_HEADER: "[Concept('concept_political_movement', '$concept_political_movements$')] exerçant une [Concept('concept_political_movement_pressure', '$concept_political_movement_pressure_short$')|l]"
 NO_PRESSURING_MOVEMENTS: "Aucun [concept_political_movement|l] exerçant une [Concept('concept_political_movement_pressure', '$concept_political_movement_pressure_short$')|l]"
 POSSIBLE_LEADER_IDEOLOGIES_HEADER: "[Concept('concept_ideology', '$concept_ideologies$')] de [concept_leader|l] - Chances d’apparition"
 INTEREST_GROUP_CHARACTER_LEADER_IDEOLOGIES_HEADER: "Chances pour les [Concept('concept_character', '$concept_characters$')|l] [Concept('concept_leader', '$concept_leaders$')|l] - Évaluation dans l’ordre"
 INTEREST_GROUP_RANDOM_LEADER_IDEOLOGIES_HEADER: "Chances pour les autres [Concept('concept_ideology', '$concept_ideologies$')|l] de [concept_leader|l][AddLocalizationIf(Not(IsDataModelEmpty(InterestGroup.GetPossibleCharacterLeaderIdeologies)), 'EVALUATED_AFTER')]"
 EVALUATED_AFTER: " - Évaluation future"
 INTEREST_GROUP_CHARACTER_LEADER_IDEOLOGY_TOOLTIP: "[PotentialLeaderIdeology.GetCharacterFullName|v] comme idéologie [Ideology.GetName|l]\n[PotentialLeaderIdeology.GetChancePercentage|0%v] de chances pour le [concept_leader|l] du groupe d’intérêt [InterestGroup.GetName] suivant d’être [PotentialLeaderIdeology.GetCharacterFullName|v]"
 INTEREST_GROUP_RANDOM_LEADER_IDEOLOGY_TOOLTIP: "[Ideology.GetName]\n[PotentialLeaderIdeology.GetChancePercentage|0%v] de chances pour le [concept_leader|l] du groupe d’intérêt [InterestGroup.GetName] suivant d’avoir cette [concept_ideology|l]\n$TOOLTIP_DELIMITER$\n[PotentialLeaderIdeology.GetChanceBreakdown]"
 POTENTIAL_LEADER_IDEOLOGY_FROM_MOVEMENT: "Cela se base sur la [Concept('concept_political_movement_pressure', '$concept_political_movement_pressure_short$')|l] exercée par le [PoliticalMovement.GetName|l]"
 POTENTIAL_LEADER_IDEOLOGY_FROM_IG: "Cela se base sur le poids des [Concept('concept_ideology', '$concept_ideologies$')|l] inhérentes au [concept_interest_group|l]"
 POTENTIAL_LEADER_IDEOLOGY_CHANCE_BREAKDOWN: "$HEADER$ :\n$TAB$Poids de l’idéologie #v [Ideology.GetNameNoFormatting]#! : $WEIGHT|0v$[ConcatIfNeitherEmpty('\n','$MOVEMENT_PRESSURE_DESC$')]\n\nPar rapport au poids total de $TOTAL|0v$"
 POTENTIAL_LEADER_IDEOLOGY_MOVEMENT_PRESSURE_DESC: "Multiplié par #v x$MULTIPLIER|2$#! en raison de la [concept_political_movement_pressure|l] de $MOVEMENT_PRESSURE|v0%$ en faveur de cette idéologie"
 STATE_PANEL_POLLUTION: "[concept_pollution_impact]\n$STATE_POLLUTION_CONDENSED$"
 STATE_POLLUTION_CONDENSED: "#b [State.GetStateRegion.GetPollutionImpact|%R1]#!"
 STATE_POLLUTION: "#BOLD #V [concept_pollution_impact]#!#!\n$concept_pollution_impact$ actuel : #b [State.GetStateRegion.GetPollutionImpact|%R1]#!\nTend vers #b [State.GetStateRegion.GetPollutionImpactTargetLevel|%R1]#! au taux journalier de #b [State.GetStateRegion.GetPollutionImpactDailyChange|%1]#!\n[concept_generated_pollution] : #tooltippable #b #tooltip:[State.GetTooltipTag],STATE_GENERATED_POLLUTION_TOOLTIP [State.GetPollutionGeneration|R0]#!#!#!\n[concept_arable_land]: #b [State.GetArableLandCapacity]#!\n$TOOLTIP_DELIMITER$\nL’impact de la pollution en [State.GetName] se traduit par un effet de base de :\n\n[State.GetStateRegion.GetPollutionEffects][SelectLocalization(EqualTo_CFixedPoint(State.GetPollutionHealthEffectsReduction, '(CFixedPoint)0'), 'EMPTY_KEY', 'POLLUTION_EFFECTS_REDUCTION_CONDENSED')]"
 STATE_GENERATED_POLLUTION_TOOLTIP: "#header [concept_generated_pollution]#!\n[State.GetName] génère actuellement #b [State.GetPollutionGeneration|R0]#! de pollution\n$TOOLTIP_DELIMITER$\n[State.GetPollutionGenerationDesc]"
 STATE_POLLUTION_EFFECTS_REDUCTION_TOOLTIP: "#header $state_pollution_reduction_health_mult$#!\nLes effets de l’[concept_pollution_impact|l] en [State.GetName] sont réduits de #b [State.GetPollutionHealthEffectsReduction|%G0]#! en raison des éléments suivants :\n$TOOLTIP_DELIMITER$\n[State.GetPollutionHealthEffectsReductionDesc]"
 POLLUTION_EFFECTS_REDUCTION_CONDENSED: "\n\nLes effets ci-dessus sur la santé publique sont encore réduits de #tooltippable #b #tooltip:[State.GetTooltipTag],STATE_POLLUTION_EFFECTS_REDUCTION_TOOLTIP [State.GetPollutionHealthEffectsReduction|%G0]#!#!#! en [State.GetName]"
 STATE_BLOCKADE_WORLD_MARKET_ACCESS_EFFECTS: "[concept_world_market_access] : $VALUE|=%+0$"
 STATE_BLOCKADE_SHIPPING_LANE_EFFECTS: "$VALUE|=%+0$ d’efficacité pour les [Concept('concept_shipping_lane','$concept_shipping_lanes$')|l] commençant ou finissant en [State.GetNameNoFormatting]"
 STATE_BLOCKADE_BUILDING_THROUGHPUT_EFFECTS: "$VALUE|=%+0$ de [concept_throughput|l] pour :\n$LIST$"
 STATE_BLOCKADE_LEVEL: "[Concept('concept_blockade','$concept_blockade_level$')]\n[State.GetBlockadeLevel|%-0]"
 TOOLTIP_STATE_BLOCKADE_LEVEL: "#header [Concept('concept_blockade','$concept_blockade_level$')]#!\n[State.GetBlockadeLevel|%-0] en [State.GetName]\n$TOOLTIP_DELIMITER$\n[State.GetBlockadeEffectsDesc]"
 STATE_DEVASTATION: "[concept_devastation]\n$STATE_DEVASTATION_CONDENSED$"
 TOOLTIP_STATE_DEVASTATION: "#BOLD #V [concept_devastation]#!#!\nDévastation actuelle : #b [StateRegion.GetDevastationLevel|%R1]#!\nChangement quotidien : #b [StateRegion.CalcDevastationDailyChange|%-2]#!\n$TOOLTIP_DELIMITER$\n[StateRegion.GetDevastationEffects]"
 STATE_TURMOIL: "[concept_turmoil]\n$STATE_TURMOIL_CONDENSED$"
 TOOLTIP_STATE_TURMOIL: "#BOLD #V [concept_turmoil]#!#!\n[concept_turmoil] des [Concept('concept_pop', '$concept_pops$')|l] [Concept('concept_radical', 'radicaux')|l] : #b [State.CalcTurmoil|%2-]#!\n$TOOLTIP_DELIMITER$\n[State.GetTurmoilEffects]"
 STATE_TURMOIL_EFFECTS_MULT_DESC: "Effets du [concept_turmoil|l] multiplié par $MULT|%=-$ en raison de :\n#b $MODIFIER_NAME$ :#!\n$DETAILS$"
 TOOLTIP_SPLIT_STATE: "#BOLD #V [concept_split_state]#!#!\n$TOOLTIP_DELIMITER$\n#title États en [State.GetStateRegion.GetName] ([concept_state_region|l])#!\n[State.GetStateRegion.GetStatesDesc]\n[concept_split_state_desc]"
 TOOLTIP_INCORPORATED_STATE: "#BOLD #V [concept_incorporated_state]#!"
 TOOLTIP_CAPITAL_STATE_HEADER: "(#header [concept_capital_state]#!)"
 TOOLTIP_MARKET_CAPITAL_STATE: "#HEADER [concept_market_capital]#!\n[State.GetName] est la [Concept('concept_market_capital', 'capitale')|l] du [State.GetMarket.GetName|l]\n[State.GetMarketCapitalEffectsDesc]\n$TOOLTIP_DELIMITER$\n[State.GetMarketAccessDesc]"
 TOOLTIP_CAPITAL_STATE: "#HEADER [concept_capital_state]#!\n[State.GetName] est l’[concept_capital_state] [State.GetOwner.GetAltNameNoFormatting('Du')][State.GetOwner.GetName]\n$TOOLTIP_DELIMITER$\n[State.GetCapitalEffectsDesc]"
 TOOLTIP_TREATY_PORT: "#BOLD #V [concept_treaty_port]#!#!\n$TOOLTIP_DELIMITER$\n[State.GetName] est un [concept_treaty_port|l] pour le [State.GetMarket.GetName|l]"
 TOOLTIP_UNINCORPORATED_STATE_NOT_VALID: "#BOLD #V [concept_unincorporated_state]#!#!\n[GetDesc( State.IncorporateState )]\n$TOOLTIP_DELIMITER$\n$concept_unincorporated_state_desc$"
 TOOLTIP_UNINCORPORATED_STATE_VALID: "#bold [concept_unincorporated_state]#!\n#instruction Cliquez pour [Concept('concept_incorporated_state', '$concept_incorporate$')|l] [State.GetName]#!\nCoût : [State.PredictBureaucracyCost|1v] [concept_bureaucracy|l] @bur!\n$TOOLTIP_DELIMITER$\n$TOOLTIP_UNINCORPORATED_STATE_INSTITUTIONS_EFFECT$\n$TOOLTIP_DELIMITER$\n$concept_unincorporated_state_desc$"
 TOOLTIP_INCORPORATED_STATE_VALID: "#bold [concept_incorporated_state]#!\n[State.GetCountry.GetAltNameNoFormatting('Le')|U][State.GetCountry.GetName] considère [State.GetName] comme un [concept_incorporated_state]\n$TOOLTIP_DELIMITER$\n$TOOLTIP_INCORPORATED_STATE_INSTITUTIONS_EFFECT$\n$TOOLTIP_DELIMITER$\n$STATE_BUR_BREAKDOWN$"
 STATE_BUR_BREAKDOWN: "Le coût total de #v [State.GetBureaucracyCost|1=-]@bur!#! s’explique par :\n$TAB$Coût de base : [State.GetBaseBureaucracyCostRaw|1=-]\n$TAB$Coût de l’[concept_institution|l] : #tooltippable #tooltip:[State.GetCountry.GetTooltipTag],INSTITUTION_BUR_FACTOR_BREAKDOWN #v [State.CalcPopInstitutionBureaucracyCost|1=-]#!#!#!\n$TAB$Coût de [State.GetPopulationSize|Dv] en [Concept('concept_pop','$concept_population$')|l] : #v [State.GetBasePopBureaucracyCostRaw|1=-]#!"
 STATE_BUR_TOOLTIP: "#header Coût en [concept_bureaucracy|l] pour [State.GetName]#!\n$STATE_BUR_BREAKDOWN$"
 TOOLTIP_UNINCORPORATED_STATE_INSTITUTIONS_EFFECT: "Les [Concept('concept_institution', '$concept_institutions$')|l] [State.GetOwner.GetAltAdjectiveNoFormatting('FP')|l] n’ont aucun effet sur [State.GetName] parce que c’est un [concept_unincorporated_state].\n[Concept('concept_incorporated_state', '$concept_incorporate$')] [State.GetName] aurait les effets suivants :\n[State.GetOwner.GetInstitutionsSummary]"
 TOOLTIP_INCORPORATED_STATE_INSTITUTIONS_EFFECT: "Que [State.GetName] soit un [concept_incorporated_state] a les effets suivants :\n[State.GetOwner.GetInstitutionsSummary]"
 INSTITUTION_BUR_FACTOR_BREAKDOWN: "[Country.GetInstitutionInvestmentBureaucracyFactorDesc]"
 TREATY_PORT_INACTIVE: "[concept_treaty_port] inactif"
 TREATY_PORT_INACTIVE_COUNTRY_RANK: "@simple_box! Le [concept_rank|l] [COUNTRY.GetAltAdjective('MS')|l] doit être supérieur au rang [TARGET_COUNTRY.GetAltAdjective('MS')|l] de [TARGET_COUNTRY.GetRank|l]"
 TREATY_PORT_INACTIVE_OCCUPIED: "@simple_box! [State.GetName] ne doit pas être occupé par un [concept_country|l] ennemi"
 TREATY_PORT_INACTIVE_ISOLATED: "@simple_box! [State.GetName] ne doit pas être isolé du [Market.GetName|l]"
 TREATY_PORT_INACTIVE_NO_ADJACENT_VALID: "@simple_box! [State.GetName] doit être adjacent à un [concept_incorporated_state] qui n’est pas isolé de son [concept_market|l]"
 INCORPORATE_STATE_COST: "Coût : $COST|1v$ en [concept_bureaucracy|l] @bur!"
 TOOLTIP_INCORPORATE_STATE: "#header Incorporer l’État#!\nDurée : [State.GetYearsToIncorporate|v0] ans\n[State.GetBureaucracyCostDesc]\n$TOOLTIP_DELIMITER$\n[SelectLocalization(StringIsEmpty(GetDesc(State.IncorporateState)), 'STATE_INCORPORATION_TIME', 'STATE_INCORPORATION_ERROR')]"
 STATE_INCORPORATION_TIME: "[State.GetIncorporationTimeDesc]"
 STATE_INCORPORATION_ERROR: "[GetDesc(State.IncorporateState)]"
 TOOLTIP_CANCEL_INCORPORATION: "#header Annuler l’incorporation#!\nRemboursement : [State.PredictBureaucracyCost|1v] [concept_bureaucracy|l] @bur!\n\n@warning! #bold [State.GetIncorporationProgress|v%0] de la progression d’incorporation seront perdus !#!"
 TOOLTIP_INCORPORATING_STATE: "#header L’État est en train d’être [Concept('concept_incorporated_state', '$concept_incorporated$')|l]#!\n$TOOLTIP_DELIMITER$\nTemps restant : [State.GetIncorporationTimeLeft]\n\n[State.GetIncorporationTimeDesc]\n\n[State.GetIncorporationPartialEffectsDesc]\n$TOOLTIP_DELIMITER$\n[concept_unincorporated_state_desc]"
 INCORPORATION_PARTIAL_EFFECTS: "[State.GetName] est à [State.GetIncorporationProgress|v%0] [Concept('concept_incorporated_state', '$concept_incorporated$')|l], ce qui lui donne les effets suivants :\n[Modifier.GetDesc]"
 PARTIAL_INCORPORATION_TAXATION_MODIFIER: "Pas entièrement [Concept('concept_incorporated_state', '$concept_incorporated$')|l]"
 INCORPORATING: "[Concept('concept_incorporated_state', 'En cours d’incorporation')] (#tooltippable #tooltip:[State.GetTooltipTag],TOOLTIP_INCORPORATING_STATE [State.GetIncorporationProgress|v%0]#!#!)"
 INCORPORATE: "[Concept('concept_incorporated_state', '$concept_incorporate$')] [State.PredictBureaucracyCost|1v]@bur!"
 INCORPORATION_TIME_SAME_CULTURE: "Cela prend $YEARS|v0$ années au total pour [Concept('concept_incorporated_state', '$concept_incorporate$')|l] [State.GetName] puisqu’il s’agit d’une [concept_homeland|l] [State.GetOwner.GetAltNameNoFormatting('Du')][State.GetOwner.GetName] en raison de sa [concept_culture|l] [Culture.GetName|l]."
 INCORPORATION_TIME_SAME_HERITAGE: "Cela prend $YEARS|v0$ années au total pour [Concept('concept_incorporated_state', '$concept_incorporate$')|l] [State.GetName] puisqu’il s’agit d’une [concept_homeland|l] de [concept_culture|l] [Culture.GetName|l], qui partage le [concept_cultural_heritage_trait|l] [DiscriminationTrait.GetName] avec une autre culture [State.GetOwner.GetAltNameNoFormatting('Du')][State.GetOwner.GetName]."
 INCORPORATION_TIME_SAME_TRAIT: "Cela prend $YEARS|v0$ années au total pour [Concept('concept_incorporated_state', '$concept_incorporate$')|l] [State.GetName] puisqu’il s’agit d’une [concept_homeland|l] de [concept_culture|l] [Culture.GetName|l], qui partage le [concept_cultural_trait|l] [DiscriminationTrait.GetName] avec une autre culture [State.GetOwner.GetAltNameNoFormatting('Du')][State.GetOwner.GetName]."
 INCORPORATION_TIME_NO_MATCH: "Cela prend $YEARS|v0$ années au total pour [Concept('concept_incorporated_state', '$concept_incorporate$')|l] [State.GetName] puisque ses [Concept('concept_homeland', '$concept_homelands$')|l] n’ont rien de commun avec les cultures [State.GetOwner.GetAltNameNoFormatting('Du')][State.GetOwner.GetName]."
 INCORPORATION_TIME_MODIFIER_EFFECTS: "La vitesse d’incorporation est modifiée de $YEARS|0-=$ ans du fait de :\n$DETAILS$"
 TOOLTIP_COLONY_STATE_NOT_VALID: "#BOLD #V $state_type_colony$#!#!\n$TOOLTIP_DELIMITER$\n[GetDesc( State.IncorporateState )]"
 TOOLTIP_COLONY_STATE_VALID: "#BOLD #V $state_type_colony$#!#!\n$TOOLTIP_DELIMITER$\nCliquez pour incorporer cet État ([State.PredictBureaucracyCost|1] @bur! en [concept_bureaucracy|l])"
 TOOLTIP_STATE_DECENTRALIZED: "#HEADER $decentralized_nation$#!\n$TOOLTIP_DELIMITER$\n[concept_decentralized_nation_desc]"
 TOOLTIP_HOMELANDS: "#title [Concept('concept_homeland', '$concept_homelands$')]#!\n[State.GetHomelandsDesc]"
 TOOLTIP_CLAIMS: "#title [Concept('concept_claim', '$concept_claims$')]#!\n[State.GetClaimsDesc]"
 TOOLTIP_ARABLE_LAND: "#title #V [concept_arable_land]#!#!\n$TOOLTIP_DELIMITER$\nNiveaux inexploités : #V [State.GetNumFreeArableLand]#!\nNiveaux exploités : #V [State.GetNumUsedArableLand]#!\nNiveaux maximum : #V [State.GetArableLandCapacity]#!\n\n[concept_arable_land_desc]"
 TOOLTIP_STATE_MODIFIERS: "#title Modificateurs d’État#!\n[State.GetTimedModifiersBreakdown]"
 TOOLTIP_STATE_MODIFIER_ENTRY: "$NAME$ :"
 TOOLTIP_STATE_MODIFIER_ENTRY_TIME: "($DATE_STR|v$)"
 TOOLTIP_OCCUPATION_EFFECT_PRODUCTION_PENALTY: "#variable -$FACTOR$#! de capacité de [concept_good_production|l]"
 TOOLTIP_OCCUPATION_EFFECT_MARKET_TAKEOVER: "#variable [COUNTRY.GetName]#! Peut relier des liens et autres !"
 TOOLTIP_STATE_OCCUPATION_MINIMAL: "25% occupés par #variable [State.GetOccupier.GetCountry.GetAltNameNoFormatting('Le')][State.GetOccupier.GetCountry.GetName]#!\n#variable [State.GetOccupationStrengthPoints]@army_SP!#! occupent #variable [State.GetName]#!\n\n[State.GetOccupationEffectsAsString]"
 TOOLTIP_STATE_OCCUPATION_PARTIAL: "50% occupés par #variable [State.GetOccupier.GetCountry.GetAltNameNoFormatting('Le')][State.GetOccupier.GetCountry.GetName]#!\n#variable [State.GetOccupationStrengthPoints]@army_SP!#! occupent #variable [State.GetName]#!\n\n[State.GetOccupationEffectsAsString]"
 TOOLTIP_STATE_OCCUPATION_FULL: "100% occupés par #variable [State.GetOccupier.GetCountry.GetAltNameNoFormatting('Le')][State.GetOccupier.GetCountry.GetName]#!\n#variable [State.GetOccupationStrengthPoints]@army_SP!#! occupent #variable [State.GetName]#!\n\n[State.GetOccupationEffectsAsString]"
 PROFITABILITY_FORMAT_HIGH: "#P $VALUE|%0$#!"
 PROFITABILITY_FORMAT_MEDIUM: "#V $VALUE|%0$#!"
 PROFITABILITY_FORMAT_LOW: "#N $VALUE|%0$#!"
 EARNINGS_FORMAT_HIGH: "#P $VALUE|1$#!"
 EARNINGS_FORMAT_MEDIUM: "#V $VALUE|1$#!"
 EARNINGS_FORMAT_LOW: "#N $VALUE|1$#!"
 PROFITABILITY_FORMAT_GENERALIZED: "#v $VALUE|0%+=$#!"
 TOOLTIP_BUILDINGS_EMPLOYED: "#BOLD #V [Building.GetName]#!#!\n$TOOLTIP_DELIMITER$\nEmployés : #BOLD #V [Building.GetNoOfEmployed]#!#!\nMaximum employés : #BOLD #V [Building.GetEmployeeCap]#!#!"
 TOOLTIP_BUILDINGS_OCCUPANCY: "#BOLD #V [Building.GetName]#!#!\n$TOOLTIP_DELIMITER$\n"
 TOOLTIP_BUILDING_EMPLOYMENT: "#BOLD #V Emplois de [Building.GetName]#!#!\nEmplois : #variable [Building.GetNoOfEmployed|1*]#! / #maximum [Building.GetEmployeeCap|1*] employés#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)\n$TOOLTIP_DELIMITER$\n[Building.GetEmployeesBreakdown][Building.GetAllEmployeesTransferDesc][ConcatIfNeitherEmpty('\n\n',Building.GetAllFailedHiresDesc)]$EMPLOYMENT_HINT$"
 EMPLOYEE_POP: "[Pop.GetNumWorkforce|Dv] [Pop.GetName|l]"
 BUILDING_GOVERNMENT_EXPENSES_DESC: "[Building.GetGovernmentExpensesDesc]"
 TOOLTIP_BUILDING_GOVERNMENT_EXPENSES: "#header [concept_government_expenses] en [Building.GetName]#!\nDépenses hebdomadaires : #variable $VAL|D-$@money!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 TOOLTIP_BUILDING_MATERIAL_EXPENSES: "Dépenses matérielles : #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $VAL|D-$@money!#!#!"
 TOOLTIP_BUILDING_WAGES_EXPENSES: "Salaires : #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_WAGES_DESC $VAL|D-$@money!#!#!"
 TOOLTIP_BUILDING_SLAVE_UPKEEP: "Maintenance des esclaves : #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDINGS_SLAVE_UPKEEP_DETAILS $VAL|D-$@money!#!#!"
 TOOLTIP_BUILDING_WAGE_SUBSIDIES: "Subventions salariales : #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_WAGES_DESC $VAL|D-$@money!#!#!"
 TOOLTIP_BUILDING_BALANCE_SUBSIDIES: "Solde des subventions : $VAL|D-$@money!"
 TOOLTIP_BUILDING_SUBVENTIONS: "[concept_subventions] : @money!$VAL|D-$"
 TOOLTIP_BUILDING_WAGES_DESC: "[Building.GetLastWagesExpensesDesc]"
 TOOLTIP_BUILDING_TOTAL_WAGE_EXPENSES: "Total des salaires hebdomadaires : $VAL|Dv$@money!$SUBSIDIES$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 BUILDING_WAGE_SUBSIDIES: " + $VAL|D-0$@money! ([concept_subsidies|l])"
 TOOLTIP_BUILDING_BASE_WAGE: "Salaire de base de [Building.GetName] de $VAL|v$@money! en raison de :\n$BREAKDOWN$"
 COUNTRY_NORMAL_WAGE: "$TAB$[concept_normal_wage|l] [Building.GetOwner.GetAltNameNoFormatting('En')][Building.GetOwner.GetName] : $VAL|v$@money!"
 BUILDING_NEEDED_WAGE: "$TAB$Salaire annuel moyen en [Building.GetState.GetName] : @money!$VAL|v$"
 BUILDING_WAGE_MODIFIER: "$TAB$$MODIFIER$"
 BUILDING_WAGE_DIFF_SUBSIDIES: "$TAB$[concept_subsidies|l] pour maintenir un [concept_normal_wage|l] [Building.GetOwner.GetAltNameNoFormatting('En')][Building.GetOwner.GetName] : $VAL|v$@money!"
 BUILDING_WAGES_INCREASING: "Les salaires augmentent depuis la semaine dernière : #v $VAL|D$@money!#!"
 BUILDING_WAGES_DECREASING: "Les salaires sont en baisse depuis la semaine dernière : #v $VAL|D$@money!#!"
 TOOLTIP_BUILDING_POP_TYPE_WAGE: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $WAGE|Dv$#!#! @money! - [PopType.GetName] ($NUM_WORKFORCE|Dv$)"
 BUILDING_POP_WAGE: "$VAL|Dv$@money! - [Pop.GetName|l] (salaire annuel @money!#tooltippable #tooltip:$BREAKDOWN_TAG$ $ANNUAL_WAGE|v2$#!#! x $NUM_WORKFORCE|Dv$)"
 POP_ANNUAL_WAGE: "Salaire annuel pour les [Pop.GetName|l] de #v $VAL$@money!#! en raison de :\n$BREAKDOWN$"
 POP_BUILDING_BASE_WAGE: "Salaire de base de [Pop.GetBuilding.GetName|l] : $VAL|v$@money!"
 POP_TYPE_WAGE_FACTOR: "Facteur de salaire des [Pop.GetPopType.GetName|l] : #v ×$VAL|1$#!"
 POP_WAGE_DISCRIMINATION_FACTOR: "[POP.GetWageDiscriminationDesc]"
 POP_WAGE_SUBSISTENCE_FACTOR: "$TAB$Facteur de subsistance pour les [Pop.GetName|l] : #v ×$VAL|1$#!"
 TOOLTIP_BUILDING_HIRING: "#BOLD #V [Building.GetName] recrute actuellement#!#!\nEmplois : #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] employés#! (#BOLD #V [Building.GetEmploymentPercentage|0%]#!#!)[Building.GetAllEmployeesTransferDesc][ConcatIfNeitherEmpty('\n\n',Building.GetAllFailedHiresDesc)]"
 TOOLTIP_BUILDING_HEALTH_WORLD: "#BOLD #V [Building.GetName]#!#!\n#variable [Building.GetProfitabilityRank]e#! bâtiment le plus productif au monde\n#variable [Building.GetProfitability]#! ([Building.GetProfitabilityCompareIcon]) de [concept_productivity|l] par rapport au bâtiment moyen\n\nGains : #tooltip:[Building.GetTooltipTag],EARNINGS_BREAKDOWN @money!#bold [Building.GetEarnings|D=+]#!#!\nSalaires : #BOLD #N -[Building.GetLastWagesExpenses|D-]@money!#!#!\n"
 TOOLTIP_BUILDING_HEALTH_BUILDING_TYPE: "#BOLD #V [Building.GetName]#!#!\n#variable [Building.GetProfitabilityRankInType]e#! bâtiment de type [Building.GetName] le plus productif au monde\n#variable [Building.GetProfitabilityInType]#! ([Building.GetProfitabilityCompareIconInType]) [concept_productivity|l] par rapport au bâtiment moyen de type [Building.GetBuildingType.GetName]\n\nGains : #tooltippable #tooltip:[Building.GetTooltipTag],EARNINGS_BREAKDOWN @money!#bold [Building.GetEarnings|D=+]#!#!#!\nSalaires : #BOLD #N -[Building.GetLastWagesExpenses|D-]@money!#!#!\n"
 TOOLTIP_BUILDING_PRODUCTIVITY: "#header [concept_productivity]#!\nValeur : [Building.GetAverageAnnualEarningsPerEmployeeFormatted]@money! / an (#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_BUILDING_TYPE,GraphTooltipTypeProfitability [Building.GetProfitabilityCompareIconInType]#!#! / #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_WORLD,GraphTooltipWorldProfitability [Building.GetProfitabilityCompareIcon]#!#!)\n$TOOLTIP_DELIMITER$\n#variable [Building.GetProfitabilityRankInType]e#! bâtiment de type [Building.GetBuildingType.GetName|l] le plus productif au monde\n[Building.GetProfitabilityInType] de [concept_productivity|l] par rapport au bâtiment moyen de ce type\n\n#variable [Building.GetProfitabilityRank]e#! bâtiment le plus productif au monde\n[Building.GetProfitability] [concept_productivity|l] par rapport au bâtiment moyen\n"
 TOOLTIP_BUILDINGS_MATERIAL_EXPENSES: "\nDépenses matérielles : #BOLD #N -$VAL|D-$@money!#!#!"
 TOOLTIP_BUILDINGS_SLAVE_UPKEEP: "\nMaintenance des esclaves : #tooltip:$TAG$,TOOLTIP_BUILDINGS_SLAVE_UPKEEP_DETAILS #tooltippable #N -$VAL|D-$@money!#!#!#!"
 TOOLTIP_BUILDINGS_SLAVE_UPKEEP_DETAILS: "#header Maintenance des esclaves#!\nDépenses totales : #BOLD #V [Building.GetLastSlaveUpkeep|K1]@money!#!#!\n$TOOLTIP_DELIMITER$\n[Building.GetLastSlaveBasketDesc]"
 TOOLTIP_BUILDING_HEADER: "[Building.GetBuildingType.GetName] en [Building.GetState.GetName]"
 BUILDING_RANK: "[Building.GetProfitabilityCompareIconInType] [Building.GetProfitabilityRankInType|v]e [Building.GetBuildingType.GetNameNoFormatting|l]"
 BUILDING_RANK_WORLD: "[Building.GetProfitabilityCompareIcon] [Building.GetProfitabilityRank|v]e au monde"
 TOOLTIP_BUILDINGS_BUDGET: "#BOLD #V [Building.GetName]#!#!\n[Building.GetBuildingType.GetBuildingKindDesc(Building.GetOwner.Self)]\n[concept_government_expenses] : #variable [Building.GetGovernmentExpenses|-K]@money!#!\n\nLes salaires (et les éventuelles dépenses matérielles) seront payés par votre trésorerie. Les salaires se rapprocheront du salaire moyen de l’État."
 TOOLTIP_PRODUCTION_AMOUNT: "#BOLD #V [GoodsProductionInfo.GetName]#!#! en [ProductionMarker.AccessState.GetName]\n$TOOLTIP_DELIMITER$\nProduit : #BOLD #V [GoodsProductionInfo.GetAmount|D]#!#! unités\n#BOLD #V [GoodsProductionInfo.GetMP|1%]#!#! de la [concept_good_production|l] totale de #variable [GoodsProductionInfo.GetName]#! du #variable [ProductionMarker.AccessState.GetMarket.GetName|l]#!"
 TOOLTIP_PRODUCTION_PRICE: "#BOLD #V [GoodsProductionInfo.GetName]#!#!\n$TOOLTIP_DELIMITER$\nPrix : #BOLD #V [GoodsProductionInfo.GetPrice|1]@money!#!#! / unité"
 TOOLTIP_PRODUCTION_SOLD_FOR: "#BOLD #V [GoodsProductionInfo.GetName]#!#!\n$TOOLTIP_DELIMITER$\n[GoodsProductionInfo.GetName] vendus pour #BOLD #V [GoodsProductionInfo.GetSoldFor|D]@money!#!#! la semaine dernière"
 START_DIPLO_PLAY: "Commencer le [concept_diplomatic_play|l] (déclarer la guerre)"
 PRICE: "Prix du marché"
 WORLD_MARKET_PRICE: "Prix du marché mondial"
 GO_TO_BUTTON_FRONT: "Voir le [Front.GetName|l]"
 GO_TO_BUTTON_BUILDING: "Voir [Building.GetName] en [Building.GetState.GetName]"
 GO_TO_BUTTON_STATE: "Voir [State.GetName]"
 GO_TO_BUTTON_SEA_REGION: "Aller en [Province.GetSeaNodeName]"
 GO_TO_BUTTON_COUNTRY: "Voir [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 GO_TO_BUTTON_CHARACTER: "Voir [Character.GetFullName]"
 GO_TO_BUTTON_FORMATION: "Aller au [MilitaryFormation.GetName]"
 GO_TO_BUTTON_MARKET: "Voir le [Market.GetName|l]"
 GO_TO_BUTTON_WORLD_MARKET: "Voir le [concept_world_market|l]"
 GO_TO_BUTTON_CONSTRUCTION_QUEUE: "Voir la [concept_construction_queue|l]"
 GO_TO_BUTTON_INTEREST_GROUP: "Aller à [InterestGroup.GetName]"
 GO_TO_BUTTON_DIPLOMATIC_PLAY: "Aller à [DiplomaticPlay.GetName]"
 GO_TO_BUTTON_WAR: "Aller à [War.GetName]"
 GO_TO_BUTTON_JOURNAL: "Accéder au journal"
 GO_TO_BUTTON_EXILED_AGITATORS: "Afficher les [Concept('concept_agitator', '$concept_agitators$')|l] [Concept('concept_exile','$concept_exiles$')|l]"
 GO_TO_BUTTON_LAW: "Afficher le [concept_law_group|l] [Law.GetGroup.GetName]"
 GO_TO_BUTTON_MILITARY_FORMATION: "Aller au [MilitaryFormation.GetName]"
 GO_TO_BUTTON_POWER_BLOC: "Aller au bloc [PowerBloc.GetName]"
 GO_TO_BUTTON_MOVEMENT: "Aller au [PoliticalMovement.GetName|l]"
 GO_TO_TREATY: "Aller au traité [Treaty.GetName]"
 GO_TO_BUTTON_COMPANY_HQ: "Aller au [concept_building|l] du siège de la compagnie"
 GO_TO_BUTTON_COMPANY: "Aller à la compagnie [Company.GetName]"
 START_RESEARCHING: "Lancer la recherche"
 POPULATION_CHARTS: "Graphiques"
 POPULATION_LIST: "Liste"
 TOOLTIP_STATE_POPULATION: "#header [Concept('concept_pop', '$concept_population$')] en [State.GetName] : #v [State.GetPopulationSize|*]#!#!\n$TOOLTIP_DELIMITER$\n[State.GetPopGrowthDesc]\n[State.GetMigrationDesc]\n[Concept('concept_pop_growth', '$concept_pop_growth_birthrate$')] : #v [State.GetPopBirthrate|+%1]#! par an\n[Concept('concept_pop_growth', '$concept_pop_growth_mortality$')] : #v [State.GetPopMortality|-%1]#! par an\n\n$STATE_AVAILABLE_LABOR$"
 TOOLTIP_STATE_MIGRATION: "#header [Concept('concept_migration', '$concept_weekly_migration$')] en [State.GetName] : #v [State.GetWeeklyPopNetMigration|D=+]#!#!\n$TOOLTIP_DELIMITER$\n[State.GetMigrationDesc]\n\n[State.GetMigrationAndSlaveTradeDetailsDesc]"
 STATE_MIGRATION_VALUE: "$concept_weekly_migration$ #v [State.GetWeeklyPopNetMigration|D=+]#!"
 STATE_MIGRATION_ATTRACTION: "$concept_migration_pull_short$ [State.GetMigrationLabel]"
 TOOLTIP_OCCUPANCY: "#BOLD #V Capacité utilisée#!#!\n$TOOLTIP_DELIMITER$\n[concept_occupancy_desc]"
 TOOLTIP_MORALE: "#BOLD #V [concept_morale]#!#!\n$TOOLTIP_DELIMITER$\nLe moral est le pourcentage des fournitures nécessaires que l’unité obtient."
 TAXATION_REVENUE: "[Concept('concept_taxes','$concept_tax_revenue$')]"
 STATE_TAX_REVENUE: "$TAXATION_REVENUE$ : #BOLD [State.GetTaxationRevenue|+=D]#!@money!"
 STATE_TAX_REVENUE_TOOLTIP_HEADER: "#header $TAXATION_REVENUE$ en [State.GetName]#!\nTotal : @money![State.GetTaxationRevenue|+=D]\n$TOOLTIP_DELIMITER$"
 STATE_GOVERNMENT_EXPENSES: "[concept_government_expenses] : #BOLD [State.GetGovernmentExpenses|+=D]#!@money!"
 STATE_GOVERNMENT_EXPENSES_TOOLTIP_HEADER: "#header [concept_government_expenses] en [State.GetName]#!\nTotal : @money![State.GetGovernmentExpenses|+=D]\n$TOOLTIP_DELIMITER$"
 STATE_TOTAL_LABOR: "#title [concept_workforce] :#! #V [State.GetTotalLabor|K]#!"
 STATE_TOTAL_LABOR_TOOLTIP: "#header [concept_workforce] totale#!\nQuantité : #variable [State.GetTotalLabor|K]#!\n\n#concept Il s’agit du nombre total de la population de l’État qui est considérée comme faisant partie de la main-d’œuvre et qui peut être employée dans des bâtiments.#!"
 STATE_AVAILABLE_LABOR: "$STATE_JOBSEEKERS$\n$STATE_PEASANTS$\n$STATE_UNEMPLOYED$\n$STATE_QUALIFICATIONS$"
 STATE_AVAILABLE_LABOR_TOOLTIP: "[State.GetJobseekersDesc]"
 STATE_INFRASTRUCTURE_PRODUCTION_MARKER: "$concept_infrastructure$ : [State.GetInfrastructureBalance|0+=]"
 STATE_UNEMPLOYED: "#v [State.GetNumUnemployedWorkingAdults|D-]#! sans-emploi"
 STATE_PEASANTS: "[State.GetNumSubsistenceWorkingAdults|Dv] [GetPopType('peasants').GetNameNoFormatting|l]"
 STATE_JOBSEEKERS: "[State.GetNumJobseekers|Dv] [Concept('concept_jobseeker', '$concept_jobseekers$')|l]"
 STATE_QUALIFICATIONS: "#tooltip:[State.GetTooltipTag],STATE_QUALIFICATIONS_BREAKDOWN [SelectLocalization(State.HasInsufficientQualificationsForAvailablePositions, '@red_cross!', '@green_checkmark!')]#! a des [concept_pop_qualifications|l] pour occuper tous les postes vacants"
 STATE_QUALIFICATIONS_BREAKDOWN: "[State.GetPotentialQualificationsDesc]"
 STATE_PRODUCTION_MARKER_TOOLTIP: "#header [State.GetName]#!\n$TOOLTIP_DELIMITER$\n[concept_infrastructure] : #tooltippable #tooltip:[State.GetTooltipTag],STATE_INFRASTRUCTURE_DESC [State.GetInfrastructureBalance|0+=]#!#!\n[concept_unemployed] :#v [State.GetNumUnemployedWorkingAdults|D-]#!\n[GetPopType('peasants').GetName] :#v [State.GetNumSubsistenceWorkingAdults|D]#!"
 MAP_LIST_STATE_AVAILABLE_LABOR: "[State.GetNumJobseekers|Dv] [SelectLocalization(State.HasInsufficientQualificationsForAvailablePositions, '@red_cross!', '@green_checkmark!')]"
 MAP_LIST_STATE_CONSCRIPTION_LIMIT: "#v [State.GetConscriptionLimit]#!@conscripts!"
 MAP_LIST_STATE_CONSCRIPTION_EXPECTED: "#v [MapListOption.GetActivateConscriptionCenterData.GetNumExpectedConscripts] / [State.GetConscriptionLimit]#!@conscripts!"
 STATE_CONSCRIPTION_TOOLTIP: "#header [Concept('concept_conscript_battalion','$concept_conscript_battalions$')] en [State.GetName]#!\n@conscripts!#v [MapListOption.GetActivateConscriptionCenterData.GetNumExpectedConscripts]#! actuellement\n@conscripts!#v #tooltippable #tooltip:[State.GetTooltipTag],STATE_CONSCRIPTION_LIMIT_TOOLTIP [State.GetConscriptionLimit]#!#!#! [concept_conscription_limit]"
 STATE_CONSCRIPTION_LIMIT_TOOLTIP: "#header [concept_conscription_limit] en [State.GetName]#!\nLimite actuelle : @conscripts!#v [State.GetConscriptionLimit]#!\n$TOOLTIP_DELIMITER$\n[State.GetConscriptionLimitDesc]"
 STATE_CONSCRIPTION_LIMIT_CONSCRIPTION_RATE: "$LEVELS|=+0$ de $CONSCRIPTABLE_POPULATION|Dv$ de [Concept('concept_pop','$concept_population$')|l] conscriptible avec un taux d’enrôlement de #tooltippable #tooltip:$BREAKDOWN_TAG$ $CONSCRIPTION_RATE|v%$#!#!"
 STATE_CONSCRIPTION_LIMIT_MAX_LEVELS: "Maximum de $MAX_LEVELS|v0$ en [concept_conscription_limit|l] dans cet [concept_state] en raison de :\n$DETAILS$"
 STATE_LITERACY: "#header [concept_literacy]#!\n[State.GetLiteracy|%1v] des [Concept('concept_pop', '$concept_pops$')|l] de [State.GetName] sont alphabétisés."
 TOOLTIP_MASS_MIGRATION_TARGET: "#header [concept_migration_target]#!\n$TOOLTIP_DELIMITER$\nCet État et les États environnants sont la cible d’une importante migration de personnes de culture [State.GetMassMigrationCulture.GetName|l] d’origine [State.GetMassMigrationOriginCountry.GetAltAdjective('FS')|l]. Cette migration se poursuivra jusqu’au #variable [State.GetMassMigrationEndDate]#!."
 TOOLTIP_UNDISCOVERED_RESOURCES: "#header Ressources à découvrir#!\n$TOOLTIP_DELIMITER$\nIl existe des gisements de ressources non découverts dans cet État. Ces ressources ont une chance d’être découvertes chaque jour si l’État ne fait pas partie d’une [concept_isolated_state|l]."
 DISCOVERABLE_RESOURCES: "Ressources à découvrir"
 MARKET_ACCESS_WARNING: "@warning! #bold [StateInfraMarker.GetState.GetMarketAccess|0%]#!"
 MARKET_ACCESS_WARNING_SEA: "@warning!\n#bold [SeaRegionInfraMarker.GetStateRegion.GetSeaInfrastructure(GetPlayer)|0]%#!"
 ISOLATED: "@warning!"
 MIGRATION_TARGET_ENTRY: "#variable $TARGET$#!"
 INFLUENTIAL_CULTURE_FORMAT: "[Culture.GetNameNoFormatting]"
 STATE_AVERAGE_WAGE_TOOLTIP: "#header Salaires#!\nMoyenne annuelle de l’État : #variable $VAL|D$@money!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 BUILDING_AVERAGE_WAGE_ENTRY: "#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_AVERAGE_WAGE $VAL|vD$@money!#!#! - [Building.GetName]"
 POP_DEPENDENT_PRODUCTION: "Production des [concept_dependents|l]"
 POP_CONSUMPTION: "[concept_pop_needs]"
 BUILDING_CONSUMPTION: "Consommation du bâtiment"
 BUILDING_PRODUCTION: "Production du bâtiment"
 GOODS_PANEL_VALUE_TOOLTIP_HEADER: "#header [GoodsPanelValue.GetName]#!\n[SelectLocalization(GoodsPanelValue.HasMarketContext, GoodsPanelValue.GetMarket.GetNameNoFormatting, GoodsPanelValue.GetState.GetNameNoFormatting)] : [GoodsPanelValue.GetValue|Dv]\n$TOOLTIP_DELIMITER$"
 GOODS_PANEL_STATE_PRICE: "[Goods.GetShortCompareDescAgainstBasePrice( Goods.GetStatePrice )]"
 TREATY_TRADE: "[Concept('concept_treaty', '$concept_treaties$')] sur le transfert de marchandises"
 TREATY_TRADE_MARKET_ORDERS: "$TREATY_TRADE$ : $ORDERS|=vD$"
 GOODS_ICON_AND_NAME_FORMAT: "[Goods.GetName] [Goods.GetTextIcon]"
 GOODS_EMBARGO_HEADER: "#header [concept_embargo]#!"
 GOODS_ENCOURAGE_CONSUMPTION_HEADER: "#header [concept_encourage_consumption]#!"
 GOODS_DISCOURAGE_CONSUMPTION_HEADER: "#header [concept_discourage_consumption]#!"
 GOODS_TAX_HEADER: "#header [concept_consumption_tax]#!"
 GOODS_EMBARGO_INACTIVE: "Nous ne mettons pas sous [concept_embargo|l] [Goods.GetName|l] [Goods.GetTextIcon]"
 GOODS_EMBARGO_ACTIVE: "Nous mettons sous [concept_embargo|l] [Goods.GetName|l] [Goods.GetTextIcon]"
 GOODS_ENCOURAGE_CONSUMPTION_INACTIVE: "Nous n’[Concept('concept_encourage_consumption', 'incitons')|l] pas à la consommation [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon]"
 GOODS_ENCOURAGE_CONSUMPTION_ACTIVE: "Nous [Concept('concept_encourage_consumption', 'incitons')|l] à la consommation [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon]"
 GOODS_DISCOURAGE_CONSUMPTION_INACTIVE: "Nous ne [Concept('concept_discourage_consumption', 'désincitons')|l] pas à la consommation [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon]"
 GOODS_DISCOURAGE_CONSUMPTION_ACTIVE: "Nous [Concept('concept_discourage_consumption', 'désincitons')|l] à la consommation [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon]"
 GOODS_TAX_INACTIVE: "Nous ne collectons pas d’[Concept('concept_consumption_tax', '$concept_consumption_taxes$')|l] sur [Goods.GetName|l] [Goods.GetTextIcon]"
 GOODS_TAX_ACTIVE: "Nous collectons des [Concept('concept_consumption_tax', '$concept_consumption_taxes$')|l] sur [Goods.GetName|l] [Goods.GetTextIcon]"
 TOGGLE_GOODS_EMBARGO_INACTIVE: "#instruction Clic gauche#! pour $EMBARGO_GOODS$"
 TOGGLE_GOODS_EMBARGO_ACTIVE: "#instruction Clic gauche#! pour $UNEMBARGO_GOODS$"
 TOGGLE_GOODS_ENCOURAGE_CONSUMPTION_INACTIVE: "#instruction Clic gauche#! pour $ENCOURAGE_GOODS$"
 TOGGLE_GOODS_ENCOURAGE_CONSUMPTION_ACTIVE: "#instruction Clic gauche#! pour $UNENCOURAGE_GOODS$"
 TOGGLE_GOODS_DISCOURAGE_CONSUMPTION_INACTIVE: "#instruction Clic gauche#! pour $DISCOURAGE_GOODS$"
 TOGGLE_GOODS_DISCOURAGE_CONSUMPTION_ACTIVE: "#instruction Clic gauche#! pour $UNDISCOURAGE_GOODS$"
 TOGGLE_GOODS_TAX_INACTIVE: "#instruction Clic gauche#! pour $TAX_GOODS$"
 TOGGLE_GOODS_TAX_ACTIVE: "#instruction Clic gauche#! pour $UNTAX_GOODS$"
 GOODS_ENCOURAGE_CONSUMPTION_EFFECTS_INACTIVE: "[Concept('concept_encourage_consumption', '$concept_encouraging_consumption$')] [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon] nous coûtera #v $COST|-0$#! @aut! et, au fil du temps, augmentera la quantité [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon] que les [Concept('concept_pop', '$concept_pops$')|l] de tous les [Concept('concept_market', '$concept_markets$')|l] dont nous avons une [Concept('concept_market_share', 'part')|l] consomment dans le cadre d’une [concept_goods_substitution|l]"
 GOODS_ENCOURAGE_CONSUMPTION_EFFECTS_ACTIVE: "Cesser d’[Concept('concept_encourage_consumption', '$concept_encouraging_consumption$')|l] [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon] recouvrera les dépenses actuelles de #v $COST|+0$#!@aut!"
 GOODS_DISCOURAGE_CONSUMPTION_EFFECTS_INACTIVE: "[Concept('concept_discourage_consumption', '$concept_discouraging_consumption$')] [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon] nous coûtera #v $COST|-0$#! @aut! et, au fil du temps, diminuera la quantité [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon] que les [Concept('concept_pop', '$concept_pops$')|l] de tous les [Concept('concept_market', '$concept_markets$')|l] dont nous avons une [Concept('concept_market_share', 'part')|l] consomment dans le cadre d’une [concept_goods_substitution|l]"
 GOODS_DISCOURAGE_CONSUMPTION_EFFECTS_ACTIVE: "Cesser de [Concept('concept_discourage_consumption', '$concept_discouraging_consumption$')|l] [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon] recouvrera les dépenses actuelles de #v $COST|+0$#! @aut!"
 GOODS_TAX_EFFECTS_INACTIVE: "Collecter un [concept_consumption_tax|l] sur $GOODS_NAME|l$[Nbsp]$GOODS_ICON$ nous coûtera #v $COST|-0$#! @aut! et générera environ $REVENUE|K+$ @money! de recettes"
 GOODS_TAX_EFFECTS_ACTIVE: "Supprimer notre [concept_consumption_tax|l] sur $GOODS_NAME|l$[Nbsp]$GOODS_ICON$ recouvrera les dépenses actuelles de #v $COST|+0$#! @aut! mais nous fera perdre environ $REVENUE|K+$ @money! de recettes"
 NOT_PERMITTED_TO_EMBARGO_GOODS: "Nos lois ne permettent pas de mettre sous [concept_embargo|l] [Goods.GetName|l] [Goods.GetTextIcon]"
 NOT_PERMITTED_TO_ENCOURAGE_GOODS: "Nos lois ne permettent pas d’[Concept('concept_encourage_consumption', '$concept_encouraging_consumption$')|l] [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon]"
 NOT_PERMITTED_TO_DISCOURGE_GOODS: "Nos lois ne permettent pas de [Concept('concept_discourage_consumption', '$concept_discouraging_consumption$')|l] [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon]"
 NOT_PERMITTED_TO_TAX_GOODS: "Nos lois ne permettent pas d’[Concept('concept_consumption_tax', '$concept_consumption_taxes$')|l] sur [Goods.GetName|l] [Goods.GetTextIcon]"
 NOT_POSSIBLE_TO_TAX_FIXED_PRICE: "Il n’est pas possible de collecter des [Concept('concept_consumption_tax', '$concept_consumption_taxes$')|l] sur [Goods.GetName|l] [Goods.GetTextIcon] en raison de son prix fixe"
 NOT_POSSIBLE_TO_NO_BUY_ORDERS: "Il n’est pas possible de collecter des [Concept('concept_consumption_tax', '$concept_consumption_taxes$')|l] sur [Goods.GetName|l] [Goods.GetTextIcon] parce qu’il n’a pas d’[concept_buy_orders|l] dans l’un de nos [Concept('concept_market', '$concept_markets$')|l]"
 NOT_POSSIBLE_TO_ENCOURAGE_IS_DISCOURAGING: "Nous [Concept('concept_discourage_consumption', 'désincitons')|l] déjà à la consommation [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon]"
 NOT_POSSIBLE_TO_DISCOURAGE_IS_ENCOURAGING: "Nous [Concept('concept_encourage_consumption', 'incitons')|l] déjà à la consommation [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon]"
 NOT_POSSIBLE_TO_ENCOURAGE_NOT_BOUGHT_BY_POPS: "Il n’est pas possible d’[Concept('concept_encourage_consumption', '$concept_encouraging_consumption$')|l] [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon] parce qu’il n’est pas consommé par des [Concept('concept_pop', '$concept_pops$')|l]"
 NOT_POSSIBLE_TO_DISCOURAGE_NOT_BOUGHT_BY_POPS: "Il n’est pas possible de [Concept('concept_discourage_consumption', '$concept_discouraging_consumption$')|l] [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon] parce qu’il n’est pas consommé par des [Concept('concept_pop', '$concept_pops$')|l]"
 NOT_POSSIBLE_TO_EMBARGO_NON_TRADABLE: "Il n’est pas possible de mettre sous [concept_embargo|l] [Goods.GetName|l] [Goods.GetTextIcon] parce qu’il ne peut pas être échangé entre les [Concept('concept_market', '$concept_markets$')|l]"
 GOODS_INTERACTION_INSUFFICIENT_AUT: "A au moins $REQVAL|0=+$ en [concept_authority|l] @aut!"
 GOODS_INTERACTION_INSUFFICIENT_INF: "$INFLUENCE$ disponible insuffisante, $REQVAL|1v$ requis "
 LAW: "#bold [Law.GetNameNoFormatting]#!"
 LAW_GROUP: "#title [Law.GetGroupName]#!"
 LAW_GROUP_ACTIVE_LAW: "#bold [Law.GetActiveGroupLaw.GetName]#!"
 INVESTMENT_LEVEL: "#variable [Law.GetInvestmentCost]@bur!#!"
 INVESTMENT_LEVEL_DESC: "[concept_investment_level] : #variable [Law.GetInvestmentLevel]#!"
 CURRENT_LAW: "Loi actuelle"
 CURRENT_LAW_TOOLTIP: "C’est la loi actuelle."
 COUNTRY_LAW_MODIFIER_NAME: "[LAW_TYPE.GetName] [COUNTRY.GetAltNameNoFormatting('En')][COUNTRY.GetNameNoFlag]"
 POPS_POLSTR_PIECHART_TITLE: "#title Force politique, par [concept_profession|l]#!"
 POPS_POPULATION_PIECHART_TITLE: "#title Population, par [concept_profession|l]#!"
 POPS_VOTES_PIECHART_TITLE: "#title Votes, par [concept_profession|l]#!"
 POPS_WORKING_IN_PIECHART_TITLE: "#title Lieu de travail, par type de bâtiment#!"
 POPS_CULTURE_POPULATION_PIECHART_TITLE: "#title Population, par culture#!"
 POPS_CULTURE_POL_STR_PIECHART_TITLE: "#title Force politique, par culture#!"
 POPS_RELIGION_POPULATION_PIECHART_TITLE: "#title Population, par religion#!"
 POPS_RELIGION_POL_STR_PIECHART_TITLE: "#title Force politique, par religion#!"
 POPULATION_PIECHART_HEADER: "[Concept('concept_pop','$concept_population$')]"
 COUNTRY_OWNERSHIP_PIECHART_HEADER: "[Concept('concept_ownership_share','$concept_ownership_shares$')] du [concept_country|l]"
 OWNERSHIP_DISTRIBUTION_PIECHART_HEADER: "Répartition des [Concept('concept_building','$concept_buildings$')|l] appartenant [GetPlayer.GetAltNameNoFormatting('Au')][GetPlayer.GetName]"
 POLITICAL_STRENGTH_PIECHART_HEADER: "[concept_political_strength]"
 POP_TYPE_HEADER: "#header [concept_profession]#!"
 POP_CULTURE_HEADER: "#header [concept_culture]#!"
 POP_RELIGION_HEADER: "#header [concept_religion]#!"
 POPULATION_CONCEPT_HEADER: "[Concept('concept_pop','$concept_population$')] :"
 AVERAGE_SOL_HEADER: "[concept_sol] :"
 POP_POLITICAL_MOVEMENTS_HEADER: "[Concept('concept_political_movement', '$concept_political_movements$')]"
 POLITICAL_MOVEMENT_IN_COUNTRY: "[Concept('concept_political_movement','$concept_political_movement_short$')] [PoliticalMovement.GetCountry.GetAltNameNoFormatting('En')][PoliticalMovement.GetCountry.GetName]"
 POLITICAL_MOVEMENT_SUPPORT_SHORT: "[Concept('concept_political_movement_support','$concept_political_movement_support_short$')]"
 POLITICAL_LOBBY_IN_COUNTRY: "[Concept('concept_political_lobby','$concept_political_lobby_short$')] [PoliticalLobby.GetCountry.GetAltNameNoFormatting('En')][PoliticalLobby.GetCountry.GetName]"
 SUPPORTING_INTEREST_GROUPS: "$concept_interest_groups$ partisans"
 SUPPORTING_AGITATORS: "$concept_agitators$ partisans"
 PRESSURED_INTEREST_GROUPS: "$concept_interest_groups$ sous pression"
 POP_IG_INACTIVE_HEADER: "#header [concept_interest_group]#!\nCe [concept_pop|l] est [Concept('concept_politically_unaligned_aligned', '$concept_politically_unaligned$')|l]\n$TOOLTIP_DELIMITER$\n#title Nombre d’adhérents du groupe d’intérêt#!\n[Pop.GetIGMembershipDesc]"
 POP_IG_ATTRACTION_HEADER: "#header [concept_interest_group]#!\nLe principal groupe d’intérêt de ce [concept_pop|l] est [Pop.GetLargestInterestGroup.GetName]\n$TOOLTIP_DELIMITER$\n#title Nombre d’adhérents du groupe d’intérêt#!\n[Pop.GetIGMembershipDesc]\n$POP_DETAILS_IG$"
 POP_IG_ATTRACTION_HEADER_NO_CLICK: "#header [concept_interest_group]#!\nLe principal groupe d’intérêt de ce [concept_pop|l] est [Pop.GetLargestInterestGroup.GetName]\n$TOOLTIP_DELIMITER$\n#title Nombre d’adhérents du groupe d’intérêt#!\n[Pop.GetIGMembershipDesc]"
 POP_IG_DISCRIMINATED: "Ce groupe social est [concept_disenfranchised|l] en raison d’une faible valeur d’[concept_acceptance|l] et ne peut pas rejoindre de [concept_interest_group|l]."
 POP_IG_MEMBERSHIP: "#variable $MEMBERS|D$#! soutiennent [INTEREST_GROUP.GetName] (attraction : #tooltip_header #tooltippable #tooltip:[INTEREST_GROUP.GetPopWithIG(POP.Self).GetTooltipTag],POP_IG_ATTRACTION_TOOLTIP $ATTRACTION|%0$#!#!#!)\n"
 POP_IG_ATTRACTION_TOOLTIP: "#header Attraction de groupe social vers [PopWithIG.GetInterestGroup.GetName]#!\n$TOOLTIP_DELIMITER$\nAttraction totale : [PopWithIG.CalcAttractionToIG|v]\n[PopWithIG.GetAttractionToIGDesc]"
 POP_IG_NO_MEMBERSHIP: "#variable $NUM_INACTIVE|D$#! sont #bold [Concept('concept_politically_unaligned_aligned', '$concept_politically_unaligned$')|l]#! et ne soutiennent aucun [concept_interest_group|l]\n#variable $NUM_NON_PARTICIPATING|D$#! #bold personnes à charge privées de leurs droits#! ne peuvent pas participer à la politique"
 POP_MOVEMENT_MEMBERSHIP: "#variable $MEMBERS|D$#! font partie du [POLITICAL_MOVEMENT.GetName|l] (attraction : #tooltip_header #tooltippable #tooltip:$BREAKDOWN_TAG$ $ATTRACTION|%0$#!#!#!)\n"
 POP_MOVEMENT_ATTRACTION_TOOLTIP: "#header Attraction des groupes sociaux pour le [PopWithMovement.GetPoliticalMovement.GetName|l]#!\n$TOOLTIP_DELIMITER$\nAttraction totale : [PopWithMovement.CalcAttractionToMovement|v]\n[PopWithMovement.GetAttractionToMovementDesc]"
 POP_MOVEMENT_NO_MEMBERSHIP: "#variable $NUM_INACTIVE|D$#! n’ont rejoint aucun [concept_political_movement|l]\n#variable $NUM_NON_PARTICIPATING|D$#! #bold personnes à charge privées de leurs droits#! ne peuvent pas participer à la politique"
 INTEREST_GROUP_MOVEMENT_SUPPORT_INDIVIDUALS: "[InterestGroup.GetNumSupportersForMovement(PoliticalMovementPanel.GetPoliticalMovement.Self)|vD] @population! sur [InterestGroup.GetPopulation|vD] [Concept('concept_individual','$concept_individuals$')|l]"
 INTEREST_GROUP_MOVEMENT_SUPPORT_CLOUT: "[InterestGroup.GetFractionOfCloutSupportingMovement(PoliticalMovementPanel.GetPoliticalMovement.Self)|%v0] de [concept_political_movement_pressure|l]"
 INTEREST_GROUP_MOVEMENT_SUPPORT_CLOUT_TOOLTIP: "#header [concept_political_movement_pressure] sur le groupe [InterestGroup.GetName]#!\n[InterestGroup.GetFractionOfCloutSupportingMovement(PoliticalMovement.Self)|%v0] actuellement\n$TOOLTIP_DELIMITER$\nLes [Concept('concept_pop','$concept_pops$')|l] qui représentent [InterestGroup.GetCloutSupportingMovement(PoliticalMovement.Self)|%v0] du [concept_clout|l] total de [InterestGroup.GetClout|%v0] pour le groupe d’intérêt [InterestGroup.GetName], soutiennent ce [concept_political_movement|l], ce qui entraîne une pression de [InterestGroup.GetFractionOfCloutSupportingMovement(PoliticalMovement.Self)|%v0].\n\nSi la pression au sein du mouvement est supérieure à [GetDefine('NPolitics', 'IG_INFLUENCING_MOVEMENT_MIN_SUPPORTING_CLOUT')|0%v], le groupe d’intérêt [InterestGroup.GetName] est considéré sous pression par le [PoliticalMovement.GetName|l]"
 POP_BASE_SUPPORT: "Soutien de base"
 POP_BASE_ATTRACTION: "Attraction de base"
 POP_POVERTY: "Faible [concept_sol|l]"
 POP_STARVATION: "Famine"
 POP_DISCRIMINATED: "[Concept('concept_discrimination','$concept_discriminated_against$')]"
 POP_NOT_DISCRIMINATED: "Non [Concept('concept_discrimination','$concept_discriminated$s')|l]"
 POP_RELIGIOUS_DISCRIMINATION: "Faible [concept_acceptance|l] de la [concept_religion|l]"
 POP_NO_RELIGIOUS_DISCRIMINATION: "[concept_acceptance] élevée de la [concept_religion|l]"
 POP_ARISTOCRATS: "[concept_profession] des $FR_aristocrats$"
 POP_BUREAUCRATS: "[concept_profession] des $FR_bureaucrats$"
 POP_CAPITALISTS: "[concept_profession] des $FR_capitalists$"
 POP_CLERGYMEN: "[concept_profession] des $FR_clergymen$"
 POP_CLERKS: "[concept_profession] des $FR_clerks$"
 POP_ENGINEERS: "[concept_profession] des $FR_engineers$"
 POP_FARMERS: "[concept_profession] des $FR_farmers$"
 POP_PEASANTS: "[concept_profession] des $FR_peasants$"
 POP_LABORERS: "[concept_profession] des $FR_laborers$"
 POP_OFFICERS: "[concept_profession] des $FR_officers$"
 POP_ACADEMICS: "[concept_profession] des $FR_academics$"
 POP_SHOPKEEPERS: "[concept_profession] des $FR_shopkeepers$"
 POP_SLAVES: "[concept_profession] des $FR_slaves$"
 POP_SOLDIERS: "[concept_profession] des $FR_soldiers$"
 POP_MACHINISTS: "[concept_profession] des $FR_machinists$"
 NO_LABOR_MOVEMENT: "La [concept_technology|l] #v $labor_movement$#! n’est pas déverrouillée"
 NO_EGALITARIANISM: "La [concept_technology|l] #v $egalitarianism$#! n’est pas déverrouillée"
 HAS_POLITICAL_AGITATION: "La [concept_technology|l] #v $political_agitation$#! est déverrouillée"
 URBAN_POP: "Emploi non-agricole"
 RURAL_POP: "Emploi agricole"
 POP_PRIMARY_CULTURE: "A des [concept_primary_cultures|l]"
 POP_STATE_RELIGION: "Suit la [concept_state_religion|l]"
 MONARCHY_BEING_ABOLISHED: "La [GetLawType('law_monarchy').GetName|l] est abolie"
 POP_LITERACY: "Degré d’alphabétisation"
 POP_WEALTH: "Richesse"
 POP_DANGEROUS_JOBS: "Emploi dangereux"
 POP_WORKPLACE: "Lieu de travail"
 LITERACY_0_10: "Degré d’alphabétisation inférieur à #variable 25%#!"
 LITERACY_10_20: "Degré d’alphabétisation entre #variable 10%#! et #variable 20%#!"
 LITERACY_20_30: "Degré d’alphabétisation entre #variable 20%#! et #variable 30%#!"
 LITERACY_30_40: "Degré d’alphabétisation entre #variable 30%#! et #variable 40%#!"
 LITERACY_40_50: "Degré d’alphabétisation entre #variable 40%#! et #variable 50%#!"
 LITERACY_50_60: "Degré d’alphabétisation entre #variable 50%#! et #variable 60%#!"
 LITERACY_60_70: "Degré d’alphabétisation entre #variable 60%#! et #variable 70%#!"
 LITERACY_70_80: "Degré d’alphabétisation entre #variable 70%#! et #variable 80%#!"
 LITERACY_80_90: "Degré d’alphabétisation entre #variable 80%#! et #variable 90%#!"
 LITERACY_90_100: "Degré d’alphabétisation supérieur à #variable 90%#!"
 LEADER_POPULARITY: "[concept_popularity] de [SCOPE.gsInterestGroup('interest_group').GetLeader.GetFullNameWithTitle]"
 IN_GOVERNMENT_ATTRACTION: "Impact de la fiscalité sur l’attractivité du groupe d’intérêt"
 MILITARY_INDUSTRIES: "Emploi dans le secteur industriel militaire"
 POP_MILITARY_BUREAUCRACY: "Bureaucratie militaire russo-américaine"
 STATE_ATHEISM_LAW: "[concept_law] [GetLawType('law_state_atheism').GetName]"
 STATE_RELIGION_LAW: "[concept_law] [GetLawType('law_state_religion').GetName]"
 FREEDOM_OF_CONSCIENCE_LAW: "[concept_law] [GetLawType('law_freedom_of_conscience').GetName]"
 POP_LOYALISTS: "Du groupe social des loyalistes"
 POP_RADICALS: "Du groupe social des radicaux"
 POP_RADICAL_MOVEMENT_LOSSES: "Du mouvement radical concurrent"
 HOMESTEADING_LAW: "[concept_law] [GetLawType('law_homesteading').GetName]"
 ADMINISTRATION_ROLE: "Gestionnaires des villes"
 POP_BUREAUCRATS_ELECTED: "Le propriétaire a la loi [GetLawType('law_elected_bureaucrats').GetName]"
 RULER_WRONG_RELIGION: "le [concept_ruler|l] n’a pas la bonne [concept_religion|l]"
 RULER_NOT_PRIMARY_CULTURE: "le [concept_ruler|l] n’appartient pas à une [concept_culture|l] principale"
 RULER_IS_ANTI_SLAVERY: "le [concept_ruler|l] s’oppose à l’esclavage"
 RULER_IS_PRO_SLAVERY: "le [concept_ruler|l] soutient l’esclavage"
 RULER_IS_CHILD: "Le [concept_ruler|l] est un enfant"
 RULER_IS_LIBERAL: "Le [concept_ruler|l] est réformiste"
 RULER_POPULARITY: "[concept_popularity] du [concept_ruler|l]"
 ARMY_FRACTION_IN_SLAVE_STATES: "moins de #v 50 %#! des niveaux des [GetBuildingType('building_barracks').GetName|l] se trouvent dans des États esclavagistes"
 NAVY_FRACTION_IN_SLAVE_STATES: "moins de #v 50 %#! des niveaux de la [GetBuildingType('building_naval_base').GetName|l] se trouvent dans des États esclavagistes"
 STANDARD_OF_LIVING_FOR_CULTURE: "le [concept_sol|l] de la culture [SCOPE.sCulture('culture').GetName|l] par rapport à la moyenne dans le [concept_country|l]"
 STANDARD_OF_LIVING_FOR_PRIMARY_CULTURES: "[concept_sol] des [concept_primary_cultures|l] par rapport à la moyenne dans le [concept_country|l]"
 STANDARD_OF_LIVING_FOR_RELIGION: "le [concept_sol|l] de la religion [SCOPE.sReligion('religion').GetName|l] par rapport à la moyenne dans le [concept_country|l]"
 STANDARD_OF_LIVING_FOR_SLAVES: "le [concept_sol|l] des [GetPopType('slaves').GetName|l] est inférieur à #v 10#!"
 INSTITUTION_FUNDING_LEVEL_social_security: "Niveau d’investissement pour la [GetInstitutionType('institution_social_security').GetName|l]"
 INSTITUTION_FUNDING_LEVEL_colonial_affairs: "Niveau d’investissement pour les [GetInstitutionType('institution_colonial_affairs').GetName|l]"
 INSTITUTION_FUNDING_LEVEL_workplace_safety: "Niveau d’investissement pour la [GetInstitutionType('institution_workplace_safety').GetName|l]"
 INSTITUTION_FUNDING_LEVEL_schools: "Niveau d’investissement pour l’[GetInstitutionType('institution_schools').GetName|l]"
 INSTITUTION_FUNDING_LEVEL_police: "Niveau d’investissement pour le [GetInstitutionType('institution_police').GetName|l]"
 INSTITUTION_FUNDING_LEVEL_health_system: "Niveau d’investissement pour le [GetInstitutionType('institution_health_system').GetName|l]"
 INSTITUTION_FUNDING_LEVEL_home_affairs: "Niveau d’investissement pour les [GetInstitutionType('institution_home_affairs').GetName|l]"
 NO_INSTITUTION_social_security: "Aucune [GetInstitutionType('institution_social_security').GetName|l]"
 NO_INSTITUTION_colonial_affairs: "Aucune affaire coloniale"
 NO_INSTITUTION_workplace_safety: "Aucune [GetInstitutionType('institution_workplace_safety').GetName|l]"
 NO_INSTITUTION_schools: "Aucune [GetInstitutionType('institution_schools').GetName|l]"
 NO_INSTITUTION_police: "Aucun [GetInstitutionType('institution_police').GetName|l]"
 NO_INSTITUTION_health_system: "Aucun [GetInstitutionType('institution_health_system').GetName|l]"
 NO_INSTITUTION_home_affairs: "Aucune affaire intérieure"
 IS_BELOW_15_SOL: "Le [concept_sol|l] moyen est inférieur à $STANDARD_OF_LIVING_LEVEL_15$"
 COUNTRY_TURMOIL: "[concept_turmoil] dans le [concept_country|l]"
 DISCRIMINATION_LEVEL_cultural_erasure: "Le niveau d’acceptation de base est @acceptance_status_2! l’effacement culturel"
 DISCRIMINATION_LEVEL_violent_hostility: "Le niveau d’acceptation de base est @acceptance_status_1! l’hostilité"
 DISCRIMINATION_LEVEL_open_prejudice: "Le niveau d’acceptation de base est @acceptance_status_3! le préjugé"
 NUMBER_OF_CLAIMS: "Nombre de [Concept('concept_claim','$concept_claims$')|l]"
 owner_has_modern_agriculture_tt: "Le propriétaire possède la [GetLawType('law_commercialized_agriculture').GetName|l] ou la [GetLawType('law_collectivized_agriculture').GetName|l]"
 owner_has_homesteading_tt: "Le propriétaire possède le [GetLawType('law_homesteading').GetName] ou la [GetLawType('law_commercialized_agriculture').GetName|l]"
 RELIGIOUS_SCHOOLS_LAW: "[concept_law] [GetLawType('law_religious_schools').GetName]"
 from_communal_divides_je: "l’[concept_journal_entry|l] $je_communal_divides$"
 from_communal_divides_completed_je: "avoir accompli l’[concept_journal_entry|l] $je_communal_divides$"
 CORPORATISM_TECH: "La [concept_technology|l] #v $corporatism$#! est débloquée"
 NATIONALISM_TECH: "La [concept_technology|l] #v $nationalism$#! est débloquée"
 PAN_NATIONALISM_TECH: "La [concept_technology|l] #v $pan-nationalism$#! est débloquée"
 financial_districts_buy_farms_tt: "La promulgation de la loi sur la [GetLawType('law_commercialized_agriculture').GetName|l] augmentera la probabilité qu’un [GetBuildingType('building_financial_district').GetName|l] achète des $bg_plantations$, des $bg_ranching$, et des [Concept('concept_building','$concept_buildings$')|l] d’$bg_agriculture$"
 farmers_pb_ig_shift_effect_tt: "[GetInterestGroupVariant('ig_petty_bourgeoisie',GetPlayer).GetNameWithCountryVariant] attirera des [Concept('concept_pop', '$concept_pops$')|l] de la [concept_middle_strata|l] employés dans les bâtiments ruraux"
 rural_laborers_tu_ig_shift_effect_tt: "[GetInterestGroupVariant('ig_trade_unions',GetPlayer).GetNameWithCountryVariant] attirera des [Concept('concept_pop', '$concept_pops$')|l] de la [concept_lower_strata|l] employés dans les bâtiments ruraux"
 farmers_pb_ig_shift_effect_negative_tt: "[GetInterestGroupVariant('ig_petty_bourgeoisie',GetPlayer).GetNameWithCountryVariant] n’attirera plus de [Concept('concept_pop', '$concept_pops$')|l] de la [concept_middle_strata|l] employés dans les bâtiments ruraux"
 rural_laborers_tu_ig_shift_effect_negative_tt: "[GetInterestGroupVariant('ig_trade_unions',GetPlayer).GetNameWithCountryVariant] n’attirera plus de [Concept('concept_pop', '$concept_pops$')|l] de la [concept_lower_strata|l] employés dans les bâtiments ruraux"
 bureaucrats_pb_ig_shift_effect_negative_tt: "[GetInterestGroupVariant('ig_petty_bourgeoisie',GetPlayer).GetNameWithCountryVariant] attirera moins de [GetPopType('bureaucrats').GetName|l]"
 urban_aristocrats_int_ig_shift_effect_negative_tt: "[GetInterestGroupVariant('ig_intelligentsia',GetPlayer).GetNameWithCountryVariant] attirera moins d’[GetPopType('aristocrats').GetName|l] employés dans les bâtiments urbains"
 bureaucrats_pb_ig_shift_effect_tt: "[GetInterestGroupVariant('ig_petty_bourgeoisie',GetPlayer).GetNameWithCountryVariant] attirera davantage de [GetPopType('bureaucrats').GetName|l]"
 urban_aristocrats_int_ig_shift_effect_tt: "[GetInterestGroupVariant('ig_intelligentsia',GetPlayer).GetNameWithCountryVariant] attirera davantage d’[GetPopType('aristocrats').GetName|l] employés dans des bâtiments urbains"
 aristocrats_af_ig_shift_effect_tt: "[GetInterestGroupVariant('ig_armed_forces',GetPlayer).GetNameWithCountryVariant] attirera davantage d’[GetPopType('aristocrats').GetName|l]"
 aristocrats_af_ig_shift_effect_negative_tt: "[GetInterestGroupVariant('ig_armed_forces',GetPlayer).GetNameWithCountryVariant] attirera moins d’[GetPopType('aristocrats').GetName|l]"
 non_military_pops_af_ig_shift_effect_tt: "[GetInterestGroupVariant('ig_armed_forces',GetPlayer).GetNameWithCountryVariant] attirera moins de [Concept('concept_pop', '$concept_pops$')|l] qui ne sont ni des [GetPopType('soldiers').GetName|l] ni des [GetPopType('officers').GetName|l]"
 non_military_pops_af_ig_shift_effect_negative_tt: "[GetInterestGroupVariant('ig_armed_forces',GetPlayer).GetNameWithCountryVariant] attirera davantage de [Concept('concept_pop', '$concept_pops$')|l] qui ne sont ni des [GetPopType('soldiers').GetName|l] ni des [GetPopType('officers').GetName|l]"
 military_pops_af_ig_shift_effect_tt: "[GetInterestGroupVariant('ig_armed_forces',GetPlayer).GetNameWithCountryVariant] attirera davantage de [GetPopType('soldiers').GetName|l]"
 military_pops_af_ig_shift_effect_negative_tt: "[GetInterestGroupVariant('ig_armed_forces',GetPlayer).GetNameWithCountryVariant] attirera moins de [GetPopType('soldiers').GetName|l]"
 POP_HINDU: "Suit la [concept_religion|l] hindoue"
 POP_MUSLIM: "Suit la [concept_religion|l] sunnite ou chiite"
 POP_INDIA_EUROPEAN_ADMINISTRATORS: "Administrateurs européens"
 POP_INDIA_NATIVE_ADMINISTRATORS: "Fonctionnaires de la compagnie"
 POP_INDIA_COLONIAL_RULE: "Privilèges coloniaux européens"
 POP_INDIA_CIVIL_SERVICE: "Fonction publique indienne"
 POP_INDIA_MONEYED_ELITES: "Classes aisées indiennes"
 POP_INDIA_ADMINISTRATION_PRIVILEGES: "Exclus de l’administration coloniale"
 has_colonial_growth_tt: "Doit avoir une source de [concept_colonial_growth|l]"
 POP_SOL_OVER_EXPECTED: "[concept_sol] supérieur au [concept_expected_sol|l]"
 POP_SOL_UNDER_EXPECTED: "[concept_sol] supérieur au [concept_expected_sol|l]"
 URBAN_STATE: "[concept_urbanization] de l’État"
 POSITIVISM_BONUS: "Éducation positiviste"
 from_early_trade_unions: "Les syndicats de travailleurs privés de suffrage"
 SPRINGTIME_OF_THE_PEOPLES_UNDERWAY: "[concept_journal_entry] Printemps des peuples en cours"
 LOW_MOVEMENT_IDENTITY_SUPPORT: "faible soutien au sein de l’identité"
 POP_POLISH_ARISTOCRATS: "Héritage du Commonwealth"
 POP_POLISH_NATIONALISM: "Nationalisme polonais"
 COLONIAL_SETTLERS: "Colons"
 NATIONALISM: "A recherché le nationalisme"
 PAN_NATIONALISM: "A recherché le pan-nationalisme"
 FAILED_TANZIMAT_REFORMS: "Échec de l’[concept_journal_entry|l] $je_sick_man_main$"
 STRONG_SOCIALIST_MOVEMENT: "[concept_political_movement] socialiste puissant"
 COUNTRY_IS_AUTOCRATIC: "Le pays n’a pas le [Concept('concept_election', '$concept_election_voting_franchise$')|l]"
 COUNTRY_IS_DEMOCRATIC: "Le pays a des [concept_elections|l] démocratiques"
 POP_HIGH_URBANIZATION: "Forte urbanisation de l’[concept_state]"
 POP_LOW_URBANIZATION: "Faible urbanisation de l’[concept_state]"
 POP_HIGH_LITERACY: "[concept_literacy] élevé"
 POP_LOW_LITERACY: "[concept_literacy] faible"
 EMPLOYEE_TRANSFERS: "\n\n#header Derniers changements d’employés :#!\n"
 EMPLOYEE_TRANSFER_FROM: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|+=]#!#!#! [EMPLOYEE_TRANSFER.GetNewPopType.GetName|l] (étaient [EMPLOYEE_TRANSFER.GetOldPopType.GetName] en [EMPLOYEE_TRANSFER.GetOldEmployment.GetName])"
 EMPLOYEE_TRANSFER_TO: "#b #tooltippable #N #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN -[EMPLOYEE_TRANSFER.GetTotal|-]#!#!#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName|l] (devenus [EMPLOYEE_TRANSFER.GetNewPopType.GetName] en [EMPLOYEE_TRANSFER.GetNewEmployment.GetName])"
 EMPLOYEE_PROMOTION_DEMOTION_FROM: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|+]#!#!#! [EMPLOYEE_TRANSFER.GetNewPopType.GetName|l] qui étaient [EMPLOYEE_TRANSFER.GetOldPopType.GetName]"
 EMPLOYEE_PROMOTION_DEMOTION_TO: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|-]#!#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName|l] qui sont devenus [EMPLOYEE_TRANSFER.GetNewPopType.GetName]"
 EMPLOYEE_PROMOTION_DEMOTION_FROM_TO: "#tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|v]#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName|l] sont devenus [EMPLOYEE_TRANSFER.GetNewPopType.GetName]"
 EMPLOYEE_DIED: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|-]#!#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName|l] morts"
 EMPLOYEE_FIRED: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|-]#!#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName|l] ont été licenciés"
 EMPLOYEE_EMIGRATED: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|-]#!#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName|l] ont émigré vers un autre [concept_state]"
 EMPLOYEE_NEW: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|+=]#!#!#! [EMPLOYEE_TRANSFER.GetNewPopType.GetName|l] qui étaient auparavant [concept_unemployed|l]"
 EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN: "Total : [EmployeeTransfer.GetTotal|v]\nAlphabétisés : [EmployeeTransfer.GetLiterate|v]\nAnalphabètes : [EmployeeTransfer.GetIlliterate|v]"
 FAILED_HIRE: "#b Impossible#! de recruter le groupe social [POP_TYPE.GetName] en raison de :\n$REASONS$\n\n"
 FAILED_HIRE_NO_POP_TYPE: "#b Impossible#! de recruter en raison de :\n$REASONS$\n\n"
 WARN_HIRE_LOW_WAGE: "\nLes [POP_TYPE.GetName|l] en trop ont été embauchés à bas salaire."
 FAILED_HIRE_REASON_LOW_WAGE: "@red_cross! Les [POP_TYPE.GetName|l] de [BUILDING.GetName] en [BUILDING.GetState.GetName] avec $NUM_QUALIFIED_POPS|v1*$ [TARGET_POP_TYPE.GetName|l] qualifiés ne sont pas prêts à travailler pour un salaire de #v $OFFERED_WAGE$@money!#!. Ils accepteraient un salaire de #v $MIN_ACCEPTABLE_WAGE$@money!#!"
 FAILED_HIRE_REASON_LOW_QUALIFICATIONS: "@red_cross! #tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $NUM_QUALIFIED_POPS|1*$#!#!#! groupes sociaux remplissent les [concept_pop_qualifications|l] pour devenir des [POP_TYPE.GetName|l] en [BUILDING.GetState.GetName]. [BUILDING.GetName] veut embaucher #variable $TOTAL_TO_BE_HIRED|1*$#! au total"
 FAILED_HIRE_LOW_QUALIFICATIONS_BREAKDOWN: "$BREAKDOWN$"
 FAILED_HIRE_REASON_SLAVERY: "@red_cross! Les [POP_TYPE.GetName|l] ne peuvent être embauchés que s’ils sont [concept_unemployed|l] ou travaillent dans un [concept_subsistence_building|l]"
 FAILED_HIRE_REASON_LOW_EARNINGS: "@red_cross! Si vous recrutez des employés supplémentaires, [BUILDING.GetName] en [BUILDING.GetState.GetName] deviendrait non rentable en raison de la baisse de la [concept_productivity|l] (@money!$CUR_PRODUCTIVITY|1v$ -> @money!$NEW_PRODUCTIVITY|1v$)"
 FAILED_HIRE_REASON_LOW_PRODUCTIVITY: "@red_cross! [BUILDING.GetName] en [BUILDING.GetState.GetName] nécessite une [concept_productivity|l] plus élevée pour pouvoir rivaliser avec les autres [Concept('concept_building', '$concept_buildings$')|l] de l’[concept_state] en matière d’emplois."
 FAILED_HIRE_REASON_COOLDOWN: "@red_cross! [BUILDING.GetName] en [BUILDING.GetState.GetName] a récemment échoué à recruter des employés supplémentaires et ne pourra pas réessayer avant le #v $DATE$#!"
 FAILED_HIRE_REASON_JOB_SATISFACTION: "@red_cross! Les [POP_TYPE.GetName|l] de [BUILDING.GetName] en [BUILDING.GetState.GetName] sont [Concept('concept_job_satisfaction', '$concept_job_satisfaction_satisfied$s')|l] de leur [concept_employment|l] actuel ($NUM_QUALIFIED_POPS|v1*$ [TARGET_POP_TYPE.GetName|l] qualifiés)"
 FAILED_HIRE_REASON_JOB_SATISFACTION_NO_BUILDING: "@red_cross! Les [POP_TYPE.GetName|l] de [TARGET_BUILDING.GetState.GetName] sont [Concept('concept_job_satisfaction', '$concept_job_satisfaction_satisfied$s')|l] de leur situation actuelle ($NUM_QUALIFIED_POPS|v1*$ [TARGET_POP_TYPE.GetName|l] qualifiés)"
 FAILED_HIRE_BUILDING_CAN_ADJUST_HIRING_RATE: "@information! Ce bâtiment diminuera son objectif d’embauche et essaiera de recruter à nouveau la semaine prochaine. Il essaiera alors de recruter $HIRING_TARGET|v$ nouveaux employés."
 FAILED_HIRE_BUILDING_CANNOT_ADJUST_HIRING_RATE: "@warning! Ce bâtiment a déjà diminué son objectif d’embauche au minimum de $HIRING_TARGET|v$ employés par semaine, et ne pourra pas recruter tant que les problèmes l’empêchant d’embaucher ne seront pas résolus."
 WARNING_LOW_POTENTIAL_QUALIFIED_WORKFORCE: "@warning! Il y a quelques groupes sociaux qualifiés ou prêts à travailler en tant que [POP_TYPE.GetName|l] à [TARGET_BUILDING.GetState.GetName] qui ne travaillent pas déjà à des postes plus lucratifs ou dans des industries plus prospères.\nPensez à développer d’autres [concept_pop_qualifications|l] pour les [POP_TYPE.GetName|l] afin d’améliorer la capacité de production dans le bâtiment [TARGET_BUILDING.GetName]."
 POPS_LIST_POPULATION: "#BOLD [PopListItem.GetTotalPopSizePercentage|%1]#! de la population\n#BOLD [PopListItem.GetTotalPolStrPercentage|%1]#! de la [concept_political_strength|l]"
 POP_LIST_POL_STR_TOOLTIP: "#header [concept_political_strength]#!\nValeur : [PopListItem.GetTotalPolStr|Dv]\nC’est #BOLD [PopListItem.GetTotalPolStrPercentage|%1v]#! de la [concept_political_strength|l] totale de ces groupes sociaux"
 POP_LIST_SIZE_TOOLTIP: "#header Population#!\n$POP_LIST_SIZE_BREAKDOWN$\n\nCe groupe représente #BOLD [PopListItem.GetTotalPopSizePercentage|%1v]#! de la population totale indiquée"
 POP_LIST_SIZE_BREAKDOWN: "Total : [PopListItem.GetTotalPopSize|Dv]\n$TAB$Adultes actifs : [PopListItem.GetWorkingAdultsPopSize|Dv]\n$TAB$[concept_dependents] : [PopListItem.GetDependentsPopSize|Dv]"
 POPS_LIST_TYPE_NAME: "#bold [PopListItem.GetTotalPopSize|D] [PopListItem.GetPopType.GetName]#!\n#bold [PopListItem.GetTotalPolStr|D]#! de [concept_political_strength|l]"
 POPS_LIST_TYPE_SIZE_AND_NAME: "#bold [PopListItem.GetTotalPopSize|D] [PopListItem.GetPopType.GetName]#!"
 POPS_LIST_TYPE_POL_STR: "#v [PopListItem.GetTotalPolStr|D]#! de [concept_political_strength|l]"
 POPS_LIST_MAX_SIZE: "#header [PopListItem.GetPopType.GetName]#!\nEmployés : [PopListItem.GetWorkingAdultsPopSize|Dv]\n$TOOLTIP_DELIMITER$\nCe bâtiment peut employer #variable [Building.GetMaxPopSize(PopListItem.GetPopType)|D]#! [PopListItem.GetPopType.GetName|l] en raison de :\n[Building.GetMaxPopSizeDesc(PopListItem.GetPopType)] [Building.GetEmployeesTransferDesc(PopListItem.GetPopType)] [Building.GetFailedHiresDesc(PopListItem.GetPopType)]"
 POPS_LIST_SLAVES_ROLE_MAX_SIZE: "#header [PopListItem.GetPopType.GetName]#!\nEmployés : [PopListItem.GetWorkingAdultsPopSize|Dv]\n[Building.GetPopTypeReplacementDesc(PopListItem.GetPopType)]\n$TOOLTIP_DELIMITER$\nCe bâtiment peut employer #variable $MAX_POP_SIZE|D$#! [POP_TYPE.GetName] ou [TARGET_POP_TYPE.GetName] en raison de :\n$MAX_POP_SIZE_DESC$ [Building.GetEmployeesTransferDesc(TARGET_POP_TYPE.Self)] [Building.GetFailedHiresDesc(TARGET_POP_TYPE.Self)]"
 POPS_LIST_SOL: "[LabelingHelper.GetLabelForStandardOfLivingFloat(PopListItem.GetAverageSoL)|v] ([PopListItem.GetAverageSoL|1y])"
 POPS_LIST_SOL_TOOLTIP: "#header [concept_sol]#!\n[concept_sol] moyen : [LabelingHelper.GetLabelForStandardOfLivingFloat(PopListItem.GetAverageSoL)|v] ([PopListItem.GetAverageSoL|1y])\n\n[SelectLocalization(PopListItem.GetPopType.IsSlave, '', 'POPS_LIST_SOL_TOOLTIP_AVG_INCOME')]"
 POPS_LIST_SOL_TOOLTIP_AVG_INCOME: "Revenu annuel moyen par groupe social : [PopListItem.GetAverageAnnualWage|vD]@money!"
 ANNUAL_WAGE_TOOLTIP: "#header Salaire annuel des [PopListItem.GetPopType.GetName|l]#!\nChaque année les [PopListItem.GetPopType.GetName|l] de ce bâtiment gagnent #bold [PopListItem.GetAverageAnnualWage|Dv]@money!#! en moyenne"
 POPS_LIST_CAN_BE_REPLACED_BY: "Peut être remplacé par [POP_TYPE.GetNameNoIcon]"
 POPS_LIST_REPLACES_POP_TYPE: "Remplace [POP_TYPE.GetNameNoIcon]"
 POPS_LIST_FULLY_REPLACED_BY_SLAVES: "Entièrement remplacé par [POP_TYPE.GetNameNoIcon]"
 POPS_LIST_MAX_CAPACITY: "[POP_TYPE.GetNameNoIcon] sont à capacité maximale"
 POPS_LIST_ESOL: "#title [PopListItem.GetAverageESoL|1]#!"
 POPS_LIST_LARGEST_IGS: "#title GI principaux : #!"
 POP_LIST_POL_STR: "Force pol. : #variable [Pop.GetPoliticalStrength|K]#!"
 POP_LIST_WEALTH: "Richesse : #variable [Pop.GetCurrentWealth|1*]#!"
 POP_LIST_NOT_ALL_POPS_SHOWN: "[GetDataModelSize(PopListItem.GetPops)]/[PopListItem.GetNumTotalPops] [Concept('concept_pop', '$concept_pops$')|l] affichés"
 STATE_CULTURES: "#title [Concept('concept_culture', '$concept_cultures$')]#!"
 STATE_RELIGIONS: "#title [Concept('concept_religion', '$concept_religions$')]#!"
 STATE_POP_TYPES: "#title [concept_profession]#!"
 VERSION_TOOLTIP: "#title Version#!\n[GetVersion]\n#instruction Cliquez pour copier dans le presse-papiers#!"
 MAX_DECLARED_INTERESTS_TOOLTIP: "#header Nombre maximal d’[Concept('concept_declared_interest','$concept_declared_interests$')|l] pour [Country.GetAltNameNoFormatting('Le')][Country.GetName]#!\n$TOOLTIP_DELIMITER$\n[Country.GetMaxNumDeclaredInterestsBreakdown]"
 MAP_INTERACTION_ADD_CONSCRIPTS: "Sélectionnez l’#v État#! auquel ajouter le [concept_conscript_battalion|l] de [CombatUnitType.GetName|v] à [MilitaryFormation.GetName|v]\nA actuellement [MilitaryFormation.GetMaxConscripts|v]@conscripts!"
 MAP_INTERACTION_ADD_CONSCRIPTS_INSTRUCTIONS: "#instruction Cliquez pour ajouter 1 unité, $SHORTCUT_KEY_MOD_shift$clic pour $SHIFT_NUM_LEVELS$, $SHORTCUT_KEY_MOD_ctrl$clic pour $CTRL_NUM_LEVELS$#!"
 MAP_INTERACTION_ADD_CONSCRIPTS_TOOLTIP: "#header Ajouter [concept_conscript_battalion|l] [CombatUnitType.GetName|v]#!\nActuellement $CURRENT_UNITS|v$/$MAX_UNITS|v$ [Concept('concept_conscript_battalion','$concept_conscript_battalions$')|l] de [State.GetName|v]\n$TOOLTIP_DELIMITER$\n[concept_military_formation] : [MilitaryFormation.GetName|v]\n[concept_state] : [State.GetName|v]\n[concept_hq] : [Hq.GetName]\n\n@information! Ceci ajoutera un [concept_conscript_battalion|l] à [MilitaryFormation.GetName|v] mais n’enrôlera pas de la population tant qu’elle n’aura pas été levée.\n\n$KEY_MODIFIER_INSTRUCTIONS$"
 MAP_INTERACTION_ADD_CONSCRIPTS_LIMIT_HEADER_TOOLTIP: "#header Limite de [Concept('concept_conscript_battalion','$concept_conscript_battalions$')|l] de l’État#!\n$TOOLTIP_DELIMITER$\nLe nombre de [Concept('concept_conscript_battalion','$concept_conscript_battalions$')|l] réclamés par les [Concept('concept_army', '$concept_armies$')|l] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName] par rapport au nombre pouvant être soutenu dans l’[concept_state]."
 MAP_INTERACTION_ESC_TO_CANCEL: "#instruction Appuyez sur #bold Échap#! pour fermer la carte actuelle#!"
 MAP_INTERACTION_BUILD_BUILDING_DESC: "Sélectionnez l'#V État#! dans lequel construire #V [BUILDING_TYPE.GetName|l]#!\n#regular_size [BUILDING_TYPE.GetConstructionCosts]#!"
 MAP_INTERACTION_BUILD_BUILDING_MILTIARY_INFO_LINE: "Recrutera [CombatUnitType.GetName|v] pour [MilitaryFormation.GetName|v]"
 MAP_INTERACTION_BUILD_BUILDING_MILTIARY_DESC: "$MAP_INTERACTION_BUILD_BUILDING_DESC$\n$MAP_INTERACTION_BUILD_BUILDING_MILTIARY_INFO_LINE$"
 MAP_INTERACTION_BUILD_BUILDING_PERFORMED: "Construction de #V [BuildingType.GetName|l]#! commencé"
 MAP_INTERACTION_BUILDING_BUILT: "[Building.GetName] construit en [Building.GetState.GetName]"
 MAP_INTERACTION_BUILDING_EXPANDED: "[Building.GetName] agrandit au niveau #v [Building.GetExpansionLevel]#! en [Building.GetState.GetName]"
 MAP_INTERACTION_CREATE_MARKET_DESC: "Sélectionnez l’#V État#! dans lequel construire un #V marché#!"
 MAP_INTERACTION_ESTABLISH_COLONY_DESC: "Sélectionnez une #V région étatique#! où créer une #V colonie#!"
 MAP_INTERACTION_ESTABLISH_COLONY_PERFORMED: "[concept_colony] établie"
 MAP_INTERACTION_DECLARE_INTEREST_DESC: "Sélectionnez la [concept_strategic_region|l] dans laquelle déclarer un [concept_interest|l]\n[GetPlayer.GetNumDeclaredInterests|v] / #tooltippable #tooltip:[GetPlayer.GetTooltipTag],MAX_DECLARED_INTERESTS_TOOLTIP [GetPlayer.CalcMaxNumDeclaredInterests|v]#!#! utilisés"
 MAP_INTERACTION_DECLARE_INTEREST_PERFORMED: "[concept_interest] déclaré"
 MAP_INTERACTION_MERGE_MARKET_MARKET_DESC: "Sélectionnez le #V marché#! auquel relier un #V État#! ou #V marché#!"
 MAP_INTERACTION_MERGE_MARKET_STATE_DESC: "Sélectionnez l’#V État#! ou #V marché#! à relier au #V [MARKET.GetName|l]#!"
 MAP_INTERACTION_DIPLOMATIC_ACTION_DESC: "Sélectionnez le #V pays#! où effectuer [DIPLOMATIC_ACTION_TYPE.GetName|v]"
 MAP_INTERACTION_DIPLOMATIC_ACTION_PERFORMED: "[DIPLOMATIC_ACTION.GetNameWithContext|v]"
 MAP_INTERACTION_DIPLOMATIC_ACTION_TYPE_PERFORMED: "[DIPLOMATIC_ACTION_TYPE.GetName|v]"
 MAP_INTERACTION_DIPLOMATIC_ACTION_REDUNDANT: "[DiplomaticAction.GetName|v] déjà en vigueur avec [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName]"
 MAP_INTERACTION_DIPLOMATIC_ACTION_AI_WILL_APPROVE: "[DiplomaticAction.GetWillAcceptDesc]\n[DiplomaticAction.GetWillAcceptBreakdown]"
 MAP_INTERACTION_DIPLOMATIC_ACTION_TOOLTIP: "[DIPLOMATIC_ACTION.GetNameWithContext|v] [COUNTRY.GetAltNameNoFormatting('En')][COUNTRY.GetName][ConcatIfNeitherEmpty('\n', DIPLOMATIC_ACTION.GetMaintenanceCostFormatted)][ConcatIfNeitherEmpty('\n', DIPLOMATIC_ACTION.GetActionAcceptEffectDesc)][ConcatIfNeitherEmpty('\n', SelectLocalization(DIPLOMATIC_ACTION.IsActivePact, 'MAP_INTERACTION_DIPLOMATIC_ACTION_REDUNDANT', ''))][ConcatIfNeitherEmpty('\n\n', SelectLocalization(DIPLOMATIC_ACTION.RequiresApproval, 'MAP_INTERACTION_DIPLOMATIC_ACTION_AI_WILL_APPROVE', ''))]"
 MAP_INTERACTION_JOIN_POWER_BLOC_DESC: "Sélectionnez le #v bloc de nations#! que vous souhaitez rejoindre"
 MAP_INTERACTION_JOIN_POWER_BLOC_TOOLTIP: "Envoyer une demande pour rejoindre le bloc [POWER_BLOC.GetName]\n$TOOLTIP_DELIMITER$\n[DIPLOMATIC_ACTION.GetWillAcceptDesc]\n[DIPLOMATIC_ACTION.GetWillAcceptBreakdown][ConcatIfNeitherEmpty('\n\n','$ERRORS$')]"
 MAP_INTERACTION_INVASION_DESC: "Sélectionnez un [concept_state] à [Concept('concept_invasion', '$concept_invade$')|l]"
 MAP_INTERACTION_INVASION_TOOLTIP: "#header Planifier une invasion#! en [State.GetName] [State.GetCountry.GetFlagTextIcon]"
 MAP_INTERACTION_WARGOAL_wg_take_state_STATE_DESC: "Sélectionnez quel [concept_state] prendre"
 MAP_INTERACTION_WARGOAL_wg_war_reparations_COUNTRY_DESC: "Sélectionnez de quel #v [concept_countryl|l]#! obtenir des #V réparations de guerre#!"
 MAP_INTERACTION_WARGOAL_wg_remove_interest_marker_COUNTRY_DESC: "Sélectionnez l’#V [concept_interest|l]#! du [concept_country|l] à retirer"
 MAP_INTERACTION_WARGOAL_wg_remove_interest_marker_STRATEGIC_REGION_DESC: "Sélectionnez la #V [concept_strategic_region|l]#! de laquelle retirer l’#V [concept_interest|l]#!"
 MAP_INTERACTION_SET_DECREE_DESC: "Sélectionnez un [concept_state] pour le [concept_decree|l] $NAME|v$"
 MAP_INTERACTION_SET_DECREE_PERFORMED: "[DecreeType.GetName]"
 MAP_INTERACTION_INCORPORATE_STATE_DESC: "Sélectionnez un [concept_state] à incorporer"
 MAP_INTERACTION_INCORPORATE_STATE_PERFORMED: "L’incorporation de l’État a commencé"
 MAP_INTERACTION_INCORPORATE_STATE_SELECT: "Incorporer [STATE.GetName] ([STATE.PredictBureaucracyCost|1] [concept_bureaucracy|l] @bur!)"
 MAP_INTERACTION_MOVE_CAPITAL_STATE_DESC: "Sélectionnez un nouvel [concept_capital_state]"
 MAP_INTERACTION_MOVE_CAPITAL_STATE_PERFORMED: "L’[concept_capital_state] a été modifié"
 MAP_INTERACTION_MOVE_CAPITAL_STATE_SELECT: "#header Faire de [STATE.GetName] l’[concept_capital_state]#!\n$TOOLTIP_DELIMITER$\nFaire de [STATE.GetName] notre [concept_capital_state] donnera à l’État les avantages suivants :\n[STATE.GetCapitalEffectsDesc]\n\nChanger notre [concept_capital_state] entraînera des pénalités à l’échelle du pays qui déclineront sur une période de #V [GetDefine('NCountry', 'MOVE_CAPITAL_COOLDOWN_YEARS')]#! ans :\n[STATE.GetOwner.GetMoveCapitalEffectsDesc]\n\nTant que ces pénalités seront en vigueur, nous ne pourrons pas modifier à nouveau l’[concept_capital_state]."
 MAP_INTERACTION_MOVE_MARKET_CAPITAL_STATE_SELECT: "#header Faire de [STATE.GetName] la [concept_market_capital|l]#!\n$TOOLTIP_DELIMITER$\nCela aura les avantages suivants :\n[STATE.GetMarketCapitalEffectsDesc]#!#!\n\nChanger notre [concept_market_capital|l] entraînera des pénalités à l’échelle du pays qui déclineront sur une période de #V [GetDefine('NCountry', 'MOVE_MARKET_CAPITAL_COOLDOWN_YEARS')]#! ans :\n[STATE.GetOwner.GetMoveMarketCapitalEffectsDesc]\n\nTant que ces pénalités seront en vigueur, nous ne pourrons pas modifier à nouveau la [concept_market_capital|l]."
 MAP_INTERACTION_DIPLOMATIC_PLAY_DESC: "Sélectionnez la cible de cette [concept_diplomatic_demand|l]"
 MAP_INTERACTION_DIPLOMATIC_PLAY_PERFORMED: "[DiplomaticPlayType.GetName|v] commencé"
 MAP_INTERACTION_DIPLOMATIC_DEMAND_PERFORMED: "[DiplomaticPlayType.GetName|v] exigé"
 MAP_INTERACTION_FRONT_TOOLTIP: "$FRONT_ORDER_DESC$"
 MAP_INTERACTION_INVASION_CANNOT_TARGET_SELF: "#N Impossible de cibler vos propres États non occupés#!"
 MAP_INTERACTION_ACTIVATE_CONSCRIPTION_CENTER_DESC: "Sélectionnez l’[concept_state] pour activer un [concept_conscription_center|l]"
 MAP_INTERACTION_ACTIVATE_CONSCRIPTION_CENTER_PERFORMED: "A ajouté un [concept_conscript_battalion|l]"
 MAP_INTERACTION_SET_STRATEGIC_OBJECTIVE_ACTIVATE: "Affecter [State.GetName] [State.GetCountry.GetFlagTextIcon] comme [concept_strategic_objective|l] pour la formation [MilitaryFormation.GetName]"
 MAP_INTERACTION_SET_STRATEGIC_OBJECTIVE_DEACTIVATE: "Supprimer l’[concept_strategic_objective|l] en [State.GetName] [State.GetCountry.GetFlagTextIcon] pour la formation [MilitaryFormation.GetName]"
 MAP_INTERACTION_SET_STRATEGIC_OBJECTIVE_DESC: "Sélectionnez l’[concept_state] à affecter comme [concept_strategic_objective|l] pour la formation [MilitaryFormation.GetName]"
 MAP_INTERACTION_SET_STRATEGIC_OBJECTIVE_PERFORMED: "[concept_strategic_objective] affecté"
 STATE_STRATEGIC_OBJECTIVE: "[concept_strategic_objective]\n[GetStrategicObjectiveFormationInState(GetPlayer.Self,State.Self).GetName]"
 STATE_STRATEGIC_OBJECTIVE_DESC: "[State.GetName] [State.GetCountry.GetFlagTextIcon] est affecté comme objectif stratégique pour :\n$BREAKDOWN$"
 STATE_STRATEGIC_OBJECTIVE_TOOLTIP: "#header [concept_strategic_objective]#!\n$TOOLTIP_DELIMITER$\n[GetCountryStrategicObjectiveInStateDesc(GetPlayer.Self,State.Self)]"
 MAP_INTERACTION_BUILD_ARMY_FORMATION_DESC: "Sélectionnez un #V [concept_hq]#! pour constituer une [concept_army|l]"
 MAP_INTERACTION_BUILD_FLEET_FORMATION_DESC: "Sélectionnez un #V [concept_hq]#! pour constituer une [concept_fleet|l]"
 MAP_INTERACTION_BUILD_ARMY_FORMATION_VALID: "#header Constituer une [concept_army|l]#!\nSera stationnée au [HQ.GetName]"
 MAP_INTERACTION_BUILD_FLEET_FORMATION_VALID: "#header Constituer une [concept_fleet|l]#!\nSera stationnée au [HQ.GetName]"
 MAP_INTERACTION_BUILD_ARMY_FORMATION_FAIL: "Vous ne pouvez constituer une [concept_army|l] que dans un [concept_hq] terrestre"
 MAP_INTERACTION_BUILD_FLEET_FORMATION_FAIL: "Vous ne pouvez constituer une [concept_fleet|l] que dans un [concept_hq] naval"
 MAP_INTERACTION_CREATE_FORMATION_PERFORMED: "Formation créée"
 MONEY_PREFIX: "@money!"
 MAP_INTERACTION_RECRUIT_ADMIRALS_DESC: "Choisissez un #V [concept_hq]#! pour recruter des [Concept( 'concept_admiral', '$concept_admirals$')|l]"
 MAP_INTERACTION_RECRUIT_ADMIRALS_FAIL_NAVAL: "Les [Concept( 'concept_admiral', '$concept_admirals$')|l] ne peuvent être recrutés que pour les QG navals"
 MAP_INTERACTION_RECRUIT_ADMIRALS_VALID: "Recruter des [Concept( 'concept_admiral', '$concept_admirals$')|l] pour le [HQ.GetName]"
 POWER_PROJECTION_ORDER_DESC: "#header Projeter de la puissance#! en [STRATEGIC_REGION.GetName]\nOrdonner à [CHARACTER.GetFullName] de #variable projeter de la puissance#! en [STRATEGIC_REGION.GetName]"
 FRONT_ORDER_DESC: "[COMMANDER_ORDER_TYPE.GetName] au [FRONT.GetName|l]"
 TRAVEL_TIME_DESC: "Pour s’y rendre, il faudra #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|v$#!#! "
 DECREE_DESC: "[ConcatIfNeitherEmpty('$ERRORS$','\n')]$EFFECT$\n\n#title Coût :#! #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $COST|0$#!#!#! $AUTHORITY$\n\n#lore $DESC$#!"
 DECREE_COST_FORMATTED: "#title Coût :#! #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $COST|0$#!#!#! $AUTHORITY$"
 SET_DECREE_IN_STATE_TOOLTIP: "#header Publier un décret de type [DecreeType.GetName] en [State.GetName]#!\n$TOOLTIP_DELIMITER$\n$DESC$"
 DECREE_TYPE_TOOLTIP: "$DESC$"
 DECREE_TOOLTIP: "$DESC$"
 DECREE_CANNOT_REMOVE_NOT_OWNER: "Impossible de retirer le décret [Decree.GetName] appliqué par [Decree.GetCountry.GetAltNameNoFormatting('Le')][Decree.GetCountry.GetName]"
 DECREE_REMOVE: "#header Annuler#! [Decree.GetName] en [Decree.GetState.GetName]"
 CANNOT_SET_DECREE: "#header #N Impossible d’établir le [concept_decree|l] en [State.GetName]#!#!"
 DECREE_ALREADY_ACTIVE: "Le [concept_decree|l] [DECREE.GetName] est déjà établi en [STATE.GetName]"
 DECREE_ALREADY_ACTIVE_CANNOT_REMOVE: "Le [concept_decree|l] [Decree.GetName] est déjà appliqué en [Decree.GetState.GetName] par [Decree.GetCountry.GetAltNameNoFormatting('Le')][Decree.GetCountry.GetName]"
 DECREE_CANNOT_AFFORD: "A au moins $COST|vD$@aut! en [concept_authority|l] à dépenser pour ce [concept_decree|l]"
 DECREE_COST_MINIMUM_VALUE: "Le coût du décret de type [DECREE_TYPE.GetName] ne peut pas être inférieur à $VALUE|^v1$"
 DISABLE_DECREE_TOOLTIP: "#header Annuler#! [DecreeType.GetName|l] en [State.GetName]#!"
 DECREE_COST_ENTRY: " #variable #N -[DECREE.GetCost|0]#!#! du décret [DECREE.GetName] en [DECREE.GetState.GetName]"
 CHARTER_CANNOT_AFFORD: "A au moins $COST|vD$@aut! en [concept_authority|l] à dépenser pour cette [concept_company_charter|l]"
 COMPANY_CHARTER_COST: " #variable #N -$COST|0$#!#! en raison des $COUNT$ [Concept('concept_company_charter','$concept_company_charters_short$')|l] au-delà de la limite de chartes gratuites"
 COMPANY_ALREADY_HAS_INDUSTRY_CHARTER: "Cette [concept_company|l] possède déjà une autre [GetCompanyCharterType('industry_charter').GetName|l]"
 COLONIAL_CHARTER_BREAKS_CONTINUITY: "Supprimer cette charte coloniale romprait le lien entre [STATE_REGION.GetName] et les autres régions coloniales."
 COLONIAL_CHARTER_NOT_CONNECTED: "La région cible [STATE_REGION.GetName] n’est pas adjacente aux chartes coloniales existantes."
 SELECT_TARGET: "Sélectionner une cible"
 CHANGE_TARGET: "Changer de cible"
 SELECT: "Sélectionner"
 LIBERATE: "Libérer"
 LIBERATE_TARGET_COUNTRY_FROM_COUNTRY: "Libère [DiplomaticPlayConfirmation.GetCountryDefinition.GetName] [DiplomaticPlayConfirmation.GetTargetCountry.GetAltNameNoFormatting('Du')][DiplomaticPlayConfirmation.GetTargetCountry.GetName]"
 SELECT_STATE: "Sélectionner"
 CHANGE_STATE: "Changer"
 CLEAR_STATE: "Réinitialiser"
 NO_STATE_SELECTED: "Aucun"
 DIPLOMATIC_ACTION_STATE_HEADER: "[concept_state] [Country.GetAltAdjective('MS')|l]"
 START_DIPLOMATIC_PLAY_SUMMARY: "#header  Exiger le [concept_diplomatic_play|l] « [WarGoal.GetName]«#!"
 START_DIPLOMATIC_PLAY_TOOLTIP: "#header Exiger : #v $NAME$#!#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 START_DIPLOMATIC_WAR_GOAL_DESC: "[concept_primary_demand] : $DESC$"
 DIPLO_PLAY_TOOLTIP_PARTICIPANTS_HEADER: "[Concept('concept_country', '$concept_countries$')] impliqués dans un potentiel [concept_diplomatic_play|l]"
 DIPLO_PLAY_TOOLTIP_ENEMY_SIDE: "Camp Ennemi : #tooltippable #tooltip:$BREAKDOWN_TAG$ #v $NUM_BATTALIONS$#! + #v $NUM_CONSCRIPTABLE_BATTALIONS$@battalions!#!#!#! ($COUNTRY_FLAGS$)"
 DIPLO_PLAY_TOOLTIP_OUR_SIDE: "Notre camp : #tooltippable #tooltip:$BREAKDOWN_TAG$ #v @battalions!$NUM_BATTALIONS$#! + #v $NUM_CONSCRIPTABLE_BATTALIONS$#!#!#! ($COUNTRY_FLAGS$)"
 DIPLO_PLAY_TOOLTIP_UNDECIDED: "Indécis : #tooltippable #tooltip:$BREAKDOWN_TAG$ #v $NUM_BATTALIONS$#! + #v $NUM_CONSCRIPTABLE_BATTALIONS$@battalions!#!#!#! ($COUNTRY_FLAGS$)"
 DIPLO_PLAY_TOOLTIP_COUNTRIES_BREAKDOWN_UNDECIDED: "#header  Participants d’un potentiel [concept_diplomatic_play|l]#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 DIPLO_PLAY_TOOLTIP_COUNTRIES_BREAKDOWN_OUR_SIDE: "#header  Alliés pour un potentiel [concept_diplomatic_play|l]#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 DIPLO_PLAY_TOOLTIP_COUNTRIES_BREAKDOWN_ENEMY_SIDE: "#header  Ennemis d’un potentiel [concept_diplomatic_play|l]#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 DIPLO_PLAY_TOOLTIP_COUNTRY_ENTRY: "[COUNTRY.GetName] : #variable [COUNTRY.GetBattalions|0]#! + #v [Country.CalcConscriptableBattalions]#!$LEANING_SIDE$ @battalions!"
 DIPLO_PLAY_TOOLTIP_COUNTRY_LEANING_SIDE: " (se rapproche [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName])"
 DIPLO_PLAY_TOOLTIP_COUNTRY_CANNOT_JOIN_EITHER: " (Impossible de rejoindre le coup)"
 DIPLO_PLAY_TOOLTIP_COUNTRY_CANNOT_JOIN_COUNTRY: " (Impossible de soutenir [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName])"
 DIPLO_PLAY_TOOLTIP_COUNTRY_UNDECIDED: " (indécis)"
 DIPLO_PLAY_STANCE_INITIATOR: "Initiateur"
 DIPLO_PLAY_STANCE_TARGET: "Cible"
 DIPLO_PLAY_STANCE_SUPPORTING_COUNTRY: "Soutient [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName]"
 DIPLO_PLAY_STANCE_LEANING_COUNTRY: "Se rapproche [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName]"
 DIPLO_PLAY_STANCE_UNDECIDED: "Indécis"
 PRESSED_WAR_GOALS: "[Concept('concept_war_goal', '$concept_war_goals$')] appuyés"
 UNPRESSED_WAR_GOALS: "[Concept('concept_war_goal', '$concept_war_goals$')] non appuyés"
 INTEREST_GROUPS_TAB: "Groupes d’intérêt"
 IDEOLOGY_FOR: "Idéologies pour : "
 IDEOLOGY_AGAINST: "Idéologies contre : "
 IDEOLOGY: "$NAME$"
 PRO_IDEOLOGY: "$NAME|v$"
 ANTI_IDEOLOGY: "$NAME|v$"
 TOTAL_IDEOLOGY_APPROVAL: " ([Law.GetPercentPolStrApprove|v%1] du [concept_clout|l] total)"
 TOTAL_IDEOLOGY_DISAPPROVAL: " ([Law.GetPercentPolStrDisapprove|v%1] du [concept_clout|l] total)"
 INTEREST_GROUP_NAME: "#BOLD #V $NAME$#!#!"
 TOOLTIP_POPULATION: "#header Population du [concept_interest_group|l]#!\nSoutiens [InterestGroup.GetCountry.GetAltAdjective('MP')|l] de [InterestGroup.GetName] : [InterestGroup.GetPopulation|v1*] ([InterestGroup.GetPopulationInCountryAsPercentage|v%1])\n$TOOLTIP_DELIMITER$\n#title Seuls les [Concept('concept_pop','$concept_pops$')|l] qui répondent aux critères suivants envisageront de soutenir ce groupe d’intérêt :#!\n[InterestGroup.GetPopPotentialDesc]"
 IG_POPULATION_PIECHART: "#header [InterestGroup.GetName]#!\nPopulation : #variable [InterestGroup.GetPopulation|K]#!\n$TOOLTIP_DELIMITER$\nPourcentage de la population ayant le droit de vote [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName] : #variable [InterestGroup.GetPopulationInCountryAsPercentage|%1]#!"
 POPULATION_PIECHART: "#header [InterestGroup.GetName]#!\nIdéologie du chef : [InterestGroup.GetLeaderIdeologyDesc|l]\nIdéologies : [InterestGroup.GetIdeologyDesc]\nPopulation : #variable [InterestGroup.GetPopulation|K]#!\n$TOOLTIP_DELIMITER$\nPourcentage de la population ayant le droit de vote [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName] : #variable [InterestGroup.GetPopulationInCountryAsPercentage|%1]#!"
 IG_CLOUT_PIECHART: "#header [InterestGroup.GetName]#!\n$POL_STR_RATIO$\n$TOOLTIP_DELIMITER$\n$RAW_POL_STR$\n\n[concept_political_strength_desc]"
 CLOUT_PIECHART: "#header [InterestGroup.GetName]#!\nIdéologie du chef : [InterestGroup.GetLeaderIdeologyDesc|l]\nIdéologies : [InterestGroup.GetIdeologyDesc]\n$POL_STR_RATIO$\n$TOOLTIP_DELIMITER$\n$RAW_POL_STR$\n\n[concept_political_strength_desc]"
 CLOUT_PIECHART_STATE: "#header [InterestGroup.GetName]#!\nIdéologie du chef : [InterestGroup.GetLeaderIdeologyDesc|l]\nIdéologies : [InterestGroup.GetIdeologyDesc]\n[concept_clout] en [State.GetName] : #variable [InterestGroup.GetPoliticalStrengthInStateAsPercentage(State.Self)|%1]#!\n$TOOLTIP_DELIMITER$\n[concept_clout] total [Country.GetAltNameNoFormatting('En')][Country.GetName] : #variable [InterestGroup.GetClout|%1]#![InterestGroup.GetInfluenceDesc]\n\n$RAW_POL_STR$\n\n[concept_political_strength_desc]"
 CULTURE_PIECHART: "#header [Culture.GetName]#!\nPopulation : #v [Culture.GetPopulationAsPercentage(GetPlayer)|/%d] ([Culture.GetPopulation(GetPlayer)|*])#!\n$TAB$Main-d’œuvre : #variable [Culture.GetWorkforceAsPercentage(GetPlayer)|/%d] ([Culture.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents] : #variable [Culture.GetDependentsAsPercentage(GetPlayer)|/%d] ([Culture.GetDependents(GetPlayer)|*v])#!\n$TOOLTIP_DELIMITER$\n[concept_political_strength] : #variable [Culture.GetPolStrAsPercentage(GetPlayer)|/%d] ([Culture.GetPolStr(GetPlayer)|*])#!"
 RELIGION_PIECHART: "#header [Religion.GetName]#!\nPopulation : #v [Religion.GetPopulationAsPercentage(GetPlayer)|/%d] ([Religion.GetPopulation(GetPlayer)|*])#!\n$TAB$Main-d’œuvre : #variable [Religion.GetWorkforceAsPercentage(GetPlayer)|/%d] ([Religion.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents] : #variable [Religion.GetDependentsAsPercentage(GetPlayer)|/%d] ([Religion.GetDependents(GetPlayer)|*v])#!\n$TOOLTIP_DELIMITER$\n[concept_political_strength] : #variable [Religion.GetPolStrAsPercentage(GetPlayer)|/%d] ([Religion.GetPolStr(GetPlayer)|*])#!"
 HARVEST_CONDITIONS_HEADER: "[Concept('concept_harvest_condition', '$concept_harvest_conditions$')]"
 STARVATION_PIECHART_HEADER: "[concept_starvation]"
 STARVATION_PIESLICE_TOOLTIP: "#header [Concept('concept_pop','$concept_pops$')] avec [StarvationType.GetName] en $FOOD_SECURITY_FILTER_CONTEXT_NAME$#!\n[FoodSecurity.GetStarvationTypePopulation(StarvationType.Self)|Dv] @population! ([FoodSecurity.GetStarvationTypePopulationAsPercentage(StarvationType.Self)|%0v]) actuellement\n[FoodSecurity.GetNumPopsTotal|Dv] @population! de la population totale"
 FOOD_SECURITY_FILTER_CONTEXT_NAME: "[SelectLocalization(FoodSecurityFilter.HasSpecificState, 'FOOD_SECURITY_SPECIFIC_STATE', SelectLocalization(FoodSecurityFilter.HasSpecificCountry, 'FOOD_SECURITY_SPECIFIC_COUNTRY', FoodSecurityFilter.GetMarket.GetName))]"
 GLOBAL_STARVATION_DESC: "[STATE.GetFoodSecurityDesc]"
 HARVEST_CONDITION_DURATION_LABEL_VERY_HIGH: "Infinie"
 HARVEST_CONDITION_DURATION_LABEL_HIGH: "Indéfinie"
 HARVEST_CONDITION_DURATION_LABEL_MODERATE: "Prolongée"
 HARVEST_CONDITION_DURATION_LABEL_LOW: "Limitée"
 HARVEST_CONDITION_DURATION_LABEL_VERY_LOW: "Réduite"
 HARVEST_CONDITION_DURATION_LABEL_LOWEST: "Brève"
 POP_TYPE_PIECHART: "#header [PopType.GetName]#!\nPopulation : #v [PopType.GetPopulationAsPercentage(GetPlayer)|/%d] ([PopType.GetPopulation(GetPlayer)|*])#!\n$TAB$Main-d’œuvre : #variable [PopType.GetWorkforceAsPercentage(GetPlayer)|/%d] ([PopType.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents] : #variable [PopType.GetDependentsAsPercentage(GetPlayer)|/%d] ([PopType.GetDependents(GetPlayer)|*v])#!\n$TOOLTIP_DELIMITER$\n[concept_political_strength] : #variable [PopType.GetPolStrAsPercentage(GetPlayer)|/%d] ([PopType.GetPolStr(GetPlayer)|*])#!"
 CULTURE_PIECHART_POL_STR: "#header [Culture.GetName]#!\n[concept_political_strength] : #variable [Culture.GetPolStrAsPercentage(GetPlayer)|/%d] ([Culture.GetPolStr(GetPlayer)|*])#!\n$TOOLTIP_DELIMITER$\nPopulation : #v [Culture.GetPopulationAsPercentage(GetPlayer)|/%d] ([Culture.GetPopulation(GetPlayer)|*])#!\n$TAB$Main-d’œuvre : #variable [Culture.GetWorkforceAsPercentage(GetPlayer)|/%d] ([Culture.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents] : #variable [Culture.GetDependentsAsPercentage(GetPlayer)|/%d] ([Culture.GetDependents(GetPlayer)|*v])#!"
 RELIGION_PIECHART_POL_STR: "#header [Religion.GetName]#!\n[concept_political_strength] : #variable [Religion.GetPolStrAsPercentage(GetPlayer)|/%d] ([Religion.GetPolStr(GetPlayer)|*])#!\n$TOOLTIP_DELIMITER$\nPopulation : #v [Religion.GetPopulationAsPercentage(GetPlayer)|/%d] ([Religion.GetPopulation(GetPlayer)|*])#!\n$TAB$Main-d’œuvre : #variable [Religion.GetWorkforceAsPercentage(GetPlayer)|/%d] ([Religion.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents] : #variable [Religion.GetDependentsAsPercentage(GetPlayer)|/%d] ([Religion.GetDependents(GetPlayer)|*v])#!"
 POP_TYPE_PIECHART_POL_STR: "#header [PopType.GetName]#!\n[concept_political_strength] : #variable [PopType.GetPolStrAsPercentage(GetPlayer)|/%d] ([PopType.GetPolStr(GetPlayer)|*])#!\n$TOOLTIP_DELIMITER$\nPopulation : #v [PopType.GetPopulationAsPercentage(GetPlayer)|/%d] ([PopType.GetPopulation(GetPlayer)|*])#!\n$TAB$Main-d’œuvre : #variable [PopType.GetWorkforceAsPercentage(GetPlayer)|/%d] ([PopType.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents] : #variable [PopType.GetDependentsAsPercentage(GetPlayer)|/%d] ([PopType.GetDependents(GetPlayer)|*v])#!"
 STATE_CULTURE_PIECHART: "#header [Culture.GetName]#!\nPopulation : #v [Culture.GetStatePopulationAsPercentage(State.Self)|/%d] ([Culture.GetStatePopulation(State.Self)|*])#!\n$TAB$Main-d’œuvre : #variable [Culture.GetStateWorkforceAsPercentage(State.Self)|/%d] ([Culture.GetStateWorkforce(State.Self)|*v])#!\n$TAB$[concept_dependents] : #variable [Culture.GetStateDependentsAsPercentage(State.Self)|/%d] ([Culture.GetStateDependents(State.Self)|*v])#!\n\n[concept_political_strength] : #variable [Culture.GetStatePolStrAsPercentage(State.Self)|/%d] ([Culture.GetStatePolStr(State.Self)|*])#!"
 STATE_RELIGION_PIECHART: "#header [Religion.GetName]#!\nPopulation : #v [Religion.GetStatePopulationAsPercentage(State.Self)|/%d] ([Religion.GetStatePopulation(State.Self)|*])#!\n$TAB$Main-d’œuvre : #variable [Religion.GetStateWorkforceAsPercentage(State.Self)|/%d] ([Religion.GetStateWorkforce(State.Self)|*v])#!\n$TAB$[concept_dependents] : #variable [Religion.GetStateDependentsAsPercentage(State.Self)|/%d] ([Religion.GetStateDependents(State.Self)|*v])#!\n\n[concept_political_strength] : #variable [Religion.GetStatePolStrAsPercentage(State.Self)|/%d] ([Religion.GetStatePolStr(State.Self)|*])#!"
 STATE_POP_TYPE_PIECHART: "#header [PopType.GetName]#!\nPopulation : #v [PopType.GetStatePopulationAsPercentage(State.Self)|/%d] ([PopType.GetStatePopulation(State.Self)|*])#!\n$TAB$Main-d’œuvre : #variable [PopType.GetStateWorkforceAsPercentage(State.Self)|/%d] ([PopType.GetStateWorkforce(State.Self)|*v])#!\n$TAB$[concept_dependents] : #variable [PopType.GetStateDependentsAsPercentage(State.Self)|/%d] ([PopType.GetStateDependents(State.Self)|*v])#!\n\n[concept_political_strength] : #variable [PopType.GetStatePolStrAsPercentage(State.Self)|/%d] ([PopType.GetStatePolStr(State.Self)|*])#!"
 RAW_POL_STR: "[concept_political_strength] : #variable [InterestGroup.GetTotalPoliticalStrengthIncludingPartyVotes|K]#!\n[InterestGroup.GetPoliticalStrengthDesc]"
 TOOLTIP_MARGINALIZATION: "#BOLD #V Marginalisation#!#!\n$TOOLTIP_DELIMITER$\n$MARGINALIZATION_CONCEPT$"
 POL_STR_RATIO: "[concept_clout] [InterestGroup.GetCountry.GetAltNameNoFormatting('En')][InterestGroup.GetCountry.GetName] : #variable [InterestGroup.GetClout|%1]#![InterestGroup.GetInfluenceDesc]"
 MARGINAL_IG_DESC: "\nConsidéré comme [concept_marginalized|l] car [INTEREST_GROUP.GetInfluenceReason]"
 MARGINALIZATION_REASON_BELOW_THRESHOLD: "son [concept_clout|l] est inférieur à #variable [GetDefine('NPolitics', 'MARGINAL_IG_THRESHOLD')|%0]#!"
 MARGINALIZATION_REASON_REVOLTING: "il se révolte contre #variable [INTEREST_GROUP.GetCountry.GetAltNameNoFormatting('Le')][INTEREST_GROUP.GetCountry.GetName]#!"
 POWERFUL_IG_DESC: "\nConsidéré comme [concept_powerful|l] car [INTEREST_GROUP.GetInfluenceReason]"
 POWERFUL_IG_TRAIT_BONUS_DESC: "Puisque ce [concept_interest_group|l] est [concept_powerful|l], ses [Concept('concept_interest_group_trait', '$concept_interest_group_traits$')|l] ont un effet #variable [GetDefine('NPolitics', 'POWERFUL_IG_TRAIT_BONUS')|=%0]#! plus fort."
 POWERFUL_REASON_ABOVE_THRESHOLD: "son [concept_clout|l] est supérieur à #variable [GetDefine('NPolitics', 'POWERFUL_IG_THRESHOLD')|%0]#!"
 POWERFUL_REASON_ABOVE_CUTOFF: "son [concept_clout|l] est supérieur à #variable [GetDefine('NPolitics', 'POWERFUL_IG_CUTOFF')|%0]#!"
 NEUTRAL_IG_DESC: "\nConsidéré comme [concept_influential|l]"
 RADICAL_IG_TOOLTIP: "#N Le groupe [InterestGroup.GetName] soutient un [concept_political_movement|l] qui fomente une [concept_revolution|l] !#!"
 REVOLUTION_IG_TOOLTIP: "#N Le groupe [InterestGroup.GetName] soutient une [concept_revolution|l] en cours !#!"
 RADICALIZATION_CHANCE_TOOLTIP: "[InterestGroup.GetChanceToRadicalizeDesc]"
 RADICALIZATION_CHANCE_BREAKDOWN: "#header Chance hebdomadaire de se radicaliser : #v $CHANCE|-%$#!#!\n$TOOLTIP_DELIMITER$\nDe l’[concept_approval|l] : #v $BASE|-=1%$#![ConcatIfNeitherEmpty('$SUPPRESSION_MODIFIER_FORMAT$','$SUPPRESSION_MODIFIER$')]"
 SUPPRESSION_MODIFIER_FORMAT: "\n#header Répression :#!\n"
 POL_STR_FROM_VOTES: "[concept_political_strength] de [concept_votes|l] à la dernière [concept_election|l] : #variable $VAL|+=D$#!"
 POL_STR_FROM_WEALTH: "De la [concept_wealth|l] : #variable $VAL|+=D$#!\n$TAB$Richesse #tooltippable #tooltip:[POP.GetTooltipTag],TOOLTIP_WEALTH #v $WEALTH|0$#!#!#! : #bold $VALPERPOP|+=$#! par groupe social politiquement actif"
 POL_STR_FROM_WEALTH_AVERAGE: "De la [concept_wealth|l] : #variable $VAL|+=K$#!\n$TAB$Richesse moyenne #variable $WEALTH|1$#! : #bold $VALPERPOP|+=2$#! par groupe social politiquement actif"
 NO_ACTIVE_TRAITS: "Les [Concept('concept_interest_group', '$concept_interest_groups$')|l] ont des [Concept('concept_interest_group_trait', 'traits')|l] actifs"
 NO_ACTIVE_TRAITS_EXPLAIN: "#header Traits de [concept_interest_group|l]#!\nChaque [concept_interest_group|l] a un certain nombre de [Concept('concept_interest_group_trait', '$concept_interest_group_traits$')|l] qui seront activés en fonction de l’[concept_approval|l] du [concept_interest_group|l]. Ces traits ont des effets négatifs ou positifs sur votre pays."
 PRODUCTION_METHOD_DISABLED_BY_GAME_RULE: "$concept_production_method$ désactivée par une règle du jeu"
 CHANGE_TO: "#title Changer pour#!"
 CURRENT_SUFFIX: "#title (Actuel)#!"
 INVESTMENT_TITLE: "Nombre de [Concept('concept_investment_level', '$concept_investment_levels$')|l]"
 COST_PER_INVESTMENT_TITLE: "Coût en [concept_bureaucracy|l] / [concept_investment_level|l]"
 WEEKLY_COSTS_TITLE: "Coût hebdomadaire total"
 INSTITUTION_LEVEL_CHANGE: "Passage au niveau [Institution.GetTargetInvestmentLevel]"
 INSTITUTION_CURRENT_LEVEL: "Niveau [Institution.GetInvestmentLevel]"
 INSTITUTION_TIME_TO_REACH_LEVEL: "$NUM_WEEKS|v$ semaines"
 INSTITUTION_TIME_TO_REACH_LEVEL_DAYS: "$NUM_DAYS|v$ jours"
 INSTITUTION_TIME_TO_REACH_LEVEL_ONE_DAY: "1 jour"
 INSTITUTION_TIME_TO_REACH_LEVEL_LESS_THAN_ONE_DAY: "Moins d’un jour"
 NO_INSTITUTIONS: "Pas d’[concept_institution|l]"
 MINCOST: "Coût minimum : $VAL|v1$"
 INCORPORATED_POPULATION_LAW_COST: "Population incorporée de $POPULATION|vK$ coûte #v $COST|1+$#! par investissement\n$TAB$Coût de base : #v $BASECOST|1+$#! $MODIFIER$"
 INSTITUTION_INVESTMENT_FACTOR: "#title $COST_PER_INVESTMENT_TITLE$ : #v $VAL|1+$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 INSTITUTION_INVESTMENT_TOTAL: "#header [Concept('concept_investment_level', '$concept_investment_levels$')] totaux#!\nActuellement : #variable $VAL|0$@ins!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 INSTITUTION_INVESTMENT_LIST_ITEM: "#title [Institution.GetName] :#! #variable [Institution.GetInvestmentLevel]#!"
 CLOCK_TEXT: "#BOLD [TimeKeeper.GetCurrentDate.Format('wd wmw wy')]#!"
 CLOCK_DEBUG_TEXT: "[TimeKeeper.GetDayOfWeek]"
 CLOCK_PAUSED: "(En pause)"
 CLOCK_PAUSED_BY_EVENT: "(En pause en raison d’un événement)"
 CLOCK_PLAYING: "Le jeu tourne"
 POLITICAL_ACTION_EFFECT: "#!Il s’agit d’une action politique\nCoût :  $POWER_COST$\n$DEMANDING_IGS$Vous donnera #variable $TRUST|+=$#! de confiance#! $IG_EFFECTS$"
 POLITICAL_ACTION_EFFECT_IG_LINE: "\n#header $NAME$ :#!"
 INFRASTRUCTURE_EFFECTS_HEADER: "Effets de l’[concept_infrastructure|l] :"
 SEA_REGION_PANEL_PRESENCE_OWNER: "[SeaRegionNavalPresence.GetCountry.GetNameNoFormatting]"
 SEA_REGION_PANEL_PRESENCE_OWNER_TOOLTIP: "[SeaRegionNavalPresence.GetCountry.GetAltNameNoFormatting('Le')|U]#variable [SeaRegionNavalPresence.GetCountry.GetName]#! a des navires de guerre en #variable [SeaRegionNavalPresence.GetProvince.GetStateRegion.GetName]#!"
 SEA_REGION_PANEL_PRESENCE_INFRASTRUCTURE: "[SeaRegionNavalPresence.GetProvince.GetStateRegion.GetSeaInfrastructure(SeaRegionNavalPresence.GetCountry)]"
 SEA_REGION_PANEL_PRESENCE_INFRASTRUCTURE_TOOLTIP: "#header Infrastructure#!\n[SeaRegionNavalPresence.GetProvince.GetStateRegion.GetSeaInfrastructureDesc(SeaRegionNavalPresence.GetCountry)]"
 NAVAL_PRESENCE: "Présence navale"
 BATTLES: "Batailles"
 SEA_REGION_MAP_MARKER_BATTLE_ONGOING: "Une bataille entre [Battle.GetAttacker.GetAltNameNoFormatting('Le')]#variable [Battle.GetAttacker.GetName]#! et [Battle.GetDefender.GetAltNameNoFormatting('Le')]#variable [Battle.GetDefender.GetName]#!"
 SEA_INFRASTRUCTURE_MAP_MARKER_TOOLTIP: "#header [concept_market_access] de [StateRegion.GetName]#!\n[StateRegion.GetSeaInfrastructureDesc(GetPlayer)]"
 STATE_INFRASTRUCTURE_MAP_MARKER_TOOLTIP: "#header [concept_market_access] de [State.GetName]#!\n[State.GetMarketAccessDesc]"
 ERROR_DEER_TOOLTIP: "#header Mince !#!\n#instruction Clic gauche#! pour ouvrir le journal des erreurs\n#instruction Clic droit#! pour le faire disparaître (jusqu’à ce que vous le contrariiez à nouveau)"
 PRODUCTION_LENS: "[concept_production_lens]"
 POLITICAL_LENS: "[concept_political_lens]"
 DIPLOMATIC_LENS: "[concept_diplomatic_lens]"
 MILITARY_LENS: "[concept_military_lens]"
 TOOLTIP_GO_BACK: "#BOLD #V Retour#!#!"
 TOOLTIP_CLOSE_WINDOW: "#BOLD #V Fermer#!#!"
 TOOLTIP_MINIMIZE_WINDOW: "#BOLD #V Réduire#!#!"
 FOUND_IN_BUY_PACKAGES: "Groupes sociaux $TYPE|vl$ avec la richesse #variable $LOW$ - $HIGH$#!"
 rural: "Rural"
 urban: "Urbain"
 TOOLTIP_WAR_SUMMARY: "#HEADER [War.GetName]#!\n#BOLD Attaquants#! :\n#V [War.GetAttackerListString]#!\n#BOLD Défenseurs#! :\n#V [War.GetDefenderListString]#!"
 TOOLTIP_REVOLUTION_SUMMARY: "#HEADER Révolution !"
 CALC_WAR_EXHAUSTION: "#indent_newline:3 Dans #variable $TIMER$#! jours, cette valeur changera de #bold $LOSS|+$#!\n$BREAKDOWN$#!"
 WAR_EXHAUSTION_SCRIPT_VALUE_FORMAT: "#v [Negate_CFixedPoint('(CFixedPoint)$VALUE$')|=+2]#! de $KEY$"
 WAR_EXHAUSTION_BASE: "Base"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_NONE: "Aucune occupation ennemie"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_LOW: "Faible occupation ennemie ([SCOPE.GetRootScope.GetCountry.GetEnemyOccupation|%1v])"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_MODERATE: "Occupation ennemie modérée ([SCOPE.GetRootScope.GetCountry.GetEnemyOccupation|1v%])"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_SUBSTANTIAL: "Occupation ennemie substantielle ([SCOPE.GetRootScope.GetCountry.GetEnemyOccupation|%1v])"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_HIGH: "Occupation ennemie élevée ([SCOPE.GetRootScope.GetCountry.GetEnemyOccupation|%1v])"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_EXTREME: "Occupation ennemie très élevée ([SCOPE.GetRootScope.GetCountry.GetEnemyOccupation|%1v])"
 WAR_EXHAUSTION_FROM_ENEMY_OCCUPATION_TOTAL: "Occupation ennemie totale ([SCOPE.GetRootScope.GetCountry.GetEnemyOccupation|%1v])"
 WAR_EXHAUSTION_FROM_ENEMY_CONTESTED_WARGOALS: "[SCOPE.sWar('war').GetEnemyContestedWargoalsFraction(SCOPE.GetRootScope.GetCountry.Self)|%0v] de [Concept('concept_controlled_war_goal','$concept_control_war_goal_short$')|l] ennemi sur $WARGOALS$"
 WAR_EXHAUSTION_FROM_CASUALTIES: "[SCOPE.sWar('war').GetCasualties(SCOPE.GetRootScope.GetCountry.Self)|Dv] [concept_casualties|l] subies, comparées à une taille militaire maximale de #v [SCOPE.GetRootScope.GetCountry.GetNumCombatUnits|D]K#! et leur camp a perdu [SCOPE.sWar('war').GetSizeWeightedLostBattlesFraction(SCOPE.GetRootScope.GetCountry.Self)|%1v] des batailles (en fonction de la taille des batailles)"
 WAR_EXHAUSTION_FROM_ACCEPTANCE_OF_DEAD: "[concept_acceptance] culturelle de #negative_value [SCOPE.sWar('war').GetTotalDeadWithWarExhaustionTooltip(SCOPE.GetRootScope.GetCountry.Self)]#! morts au total"
 WAR_EXHAUSTION_TOTAL_DEAD_FORMATTED: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE|D$#!#!"
 WAR_EXHAUSTION_FROM_CULTURAL_ACCEPTANCE: "#header [concept_war_exhaustion] en raison de l’[concept_acceptance|l] [Concept('concept_culture','culturelle')]#!\n#negative_value $VALUE|=2$#! par semaine\n$TOOLTIP_DELIMITER$\n$DEATHS|vK$ morts à ce jour\n[concept_manpower] actuels de $MOBILIZED|vK$ en [concept_war|l]\n\n#indent_newline:3 #title $concept_war_exhaustion$ en raison des morts dans chaque [concept_culture|l]#! :\n$BREAKDOWN$#!"
 WAR_EXHAUSTION_FROM_CULTURAL_ACCEPTANCE_ENTRY: "#indent_newline:3 #negative_value $VALUE|=2$#! en raison des $DEATHS|vD$ morts de culture [Culture.GetName|l] ([AcceptanceStatus.GetName])\n$BREAKDOWN$#!"
 WAR_EXHAUSTION_FROM_CULTURAL_ACCEPTANCE_NO_IMPACT_ENTRY: "Aucun impact en raison des $DEATHS|vD$ morts de culture [Culture.GetName|l] ([AcceptanceStatus.GetName])"
 WAR_EXHAUSTION_FROM_CULTURAL_ACCEPTANCE_ENTRY_BREAKDOWN: "#negative_value $IMPACT|=2$#! en raison des $DEATHS|vD$ morts dans le camp [Country.GetAltAdjective('MS')|l]"
 WAR_EXHAUSTION_FROM_country_war_exhaustion_casualties_mult: "$country_war_exhaustion_casualties_mult$"
 WAR_EXHAUSTION_FROM_TURMOIL: "Population [Concept('concept_radical', 'radicale')] ([SCOPE.GetRootScope.GetCountry.CalcTurmoil|%1v])"
 WAR_SUPPORT_FROM_LOBBIES: "[concept_clout] des [Concept('concept_political_lobby', '$concept_political_lobbies_short$')|l] pro-guerre"
 WAR_OPPOSITION_FROM_LOBBIES: "[concept_clout] des [Concept('concept_political_lobby', '$concept_political_lobbies_short$')|l] anti-guerre"
 WAR_EXHAUSTION_FROM_EVENTS: "Événements"
 WARGOAL_CONTESTED_DESC: "#header [concept_war_goal] pour [WarGoal.GetWar.GetName]#!\nL’objectif de guerre [WarGoal.GetName] est [Concept('concept_controlled_war_goal','$concept_controlled_war_goal_short$')|l]\n$TOOLTIP_DELIMITER$\n[WarGoal.GetIsContestedDesc]"
 WARGOAL_NOT_CONTESTED_DESC: "#header [concept_war_goal] pour [WarGoal.GetWar.GetName]#!\nL’objectif de guerre [WarGoal.GetName] n’est pas [Concept('concept_controlled_war_goal','$concept_controlled_war_goal_short$')|l]\n$TOOLTIP_DELIMITER$\n[WarGoal.GetIsContestedDesc]"
 WAR_GOAL_CONTESTED_DESC_SHORT: "[SelectLocalization(WarGoal.IsContested,'WAR_GOAL_CONTESTED_SHORT','WAR_GOAL_NOT_CONTESTED_SHORT')]"
 WAR_GOAL_CONTESTED_SHORT: "@green_checkmark_box! L’objectif de guerre [WarGoal.GetName] est [Concept('concept_controlled_war_goal','$concept_controlled_war_goal_short$')|l]#indent_newline:3 \n[WarGoal.GetIsContestedDesc]#!"
 WAR_GOAL_NOT_CONTESTED_SHORT: "@simple_box! L’objectif de guerre [WarGoal.GetName] n’est pas [Concept('concept_controlled_war_goal','$concept_controlled_war_goal_short$')|l]#indent_newline:3 \n[WarGoal.GetIsContestedDesc]"
 WARGOAL_CONTESTATION_CONTROL_HEADER_ANY: "$EFFECT_LIST_BULLET$#title Cet [concept_war_goal] sera [Concept('concept_controlled_war_goal','$concept_controlled_war_goal_short$')|l] si #b n’importe laquelle#! des options suivantes est vérifiée :#!"
 WARGOAL_CONTESTATION_CONTROL_HEADER_ALL: "$EFFECT_LIST_BULLET$#title Cet [concept_war_goal] sera [Concept('concept_controlled_war_goal','$concept_controlled_war_goal_short$')|l] si #b toutes#! les options suivantes sont vérifiées :#!"
 WARGOAL_CONTESTATION_CONTROL_TARGET_STATE: "$TAB$$EFFECT_LIST_BULLET$[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] et ses [Concept('concept_ally', '$concept_allies$')|l] contrôlent [TARGET_STATE.GetName] [TARGET_STATE.GetCountry.GetFlagTextIcon]"
 WARGOAL_CONTESTATION_CONTROL_ENEMY_CAPITAL: "$TAB$$EFFECT_LIST_BULLET$[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] et ses [Concept('concept_ally', '$concept_allies$')|l] contrôlent la [Concept('concept_capital_state','$concept_capital_state_short$')|l] [TARGET_COUNTRY.GetAltAdjective('FS')|l] ([TARGET_COUNTRY.GetCapital.GetName])"
 WARGOAL_CONTESTATION_CONTROL_ANY_ENEMY_STATE: "$TAB$$EFFECT_LIST_BULLET$[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] et ses [Concept('concept_ally', '$concept_allies$')|l] contrôlent au moins un [concept_state] [TARGET_COUNTRY.GetAltAdjective('MS')|l]"
 WARGOAL_CONTESTATION_CONTROL_OWN_STATE: "$TAB$$EFFECT_LIST_BULLET$[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] et ses [Concept('concept_ally', '$concept_allies$')|l] gardent le contrôle sur [TARGET_STATE.GetName] [TARGET_STATE.GetCountry.GetFlagTextIcon]"
 WARGOAL_CONTESTATION_CONTROL_OWN_CAPITAL: "$TAB$$EFFECT_LIST_BULLET$[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] et ses [Concept('concept_ally', '$concept_allies$')|l] gardent le contrôle sur la [Concept('concept_capital_state','$concept_capital_state_short$')|l] [COUNTRY.GetAltAdjective('FS')|l] ([COUNTRY.GetCapital.GetName])"
 WARGOAL_CONTESTATION_CONTROL_ALL_OWN_STATES: "$TAB$$EFFECT_LIST_BULLET$[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] et ses [Concept('concept_ally', '$concept_allies$')|l] gardent le contrôle sur tous les [Concept('concept_state','$concept_states$')|l] [COUNTRY.GetAltAdjective('MP')|l]"
 WARGOAL_CONTESTATION_CONTROL_ALL_CLAIMED_STATES: "$TAB$$EFFECT_LIST_BULLET$[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] et ses [Concept('concept_ally', '$concept_allies$')|l] gardent le contrôle sur tous les [Concept('concept_state','$concept_states$')|l] [COUNTRY.GetAltAdjective('MP')|l] [Concept('concept_claim','revendiqués')] par [TARGET_COUNTRY.GetAltNameNoFormatting('Le')|l] [TARGET_COUNTRY.GetName] ($LIST$)"
 WARGOAL_CONTESTATION_CONTROL_ANY_RELEASABLE_STATE: "$TAB$$EFFECT_LIST_BULLET$[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] et ses [Concept('concept_ally', '$concept_allies$')|l] contrôlent au moins un [concept_state] [TARGET_COUNTRY.GetAltAdjective('MS')|l] pouvant être libéré avec [COUNTRY_CREATION.GetAltNameNoFormatting('Le')][COUNTRY_CREATION.GetName] ($LIST$)"
 TOOLTIP_COUNTRY: "#BOLD #V [GetPlayer.GetName]#!#!"
 TOOLTIP_COUNTRY_DELAYED: "\n$TOOLTIP_DELIMITER$\nCultures : #VARIABLE [GetPlayer.GetPrimaryCulturesDesc]#!\nReligion : #VARIABLE [GetPlayer.GetStateReligion.GetName]#!\nCapitale : #VARIABLE [GetPlayer.GetCapital.GetName]#!\n\n[concept_country_desc]"
 TOOLTIP_BUILDING_USES: "#header [Goods.GetNameNoFormatting]#!"
 TOOLTIP_BUILDING_USES_UNITS_INFO: "#header [Goods.GetName]#!\nQuantité consommée : #variable [Building.GetConsumption(Goods.Self)|0]#! / semaine\n[Building.GetConsumptionDesc(Goods.Self)]"
 TOOLTIP_BUILDING_PRODUCES: "#header [Goods.GetNameNoFormatting]#!\n"
 TOOLTIP_BUILDING_PRODUCES_UNITS_INFO: "#header [Goods.GetName]#!\nQuantité produite : #variable [Building.GetProduction(Goods.Self)|0]#!\n$TOOLTIP_DELIMITER$\nPourcentage de production : #variable [Building.GetOutputPercentage(Goods.Self)|%1]#! de la [concept_good_production|l] de [Building.GetName]\n[Building.GetProductionDesc(Goods.Self)]"
 TOOLTIP_BUILDING_USES_VALUE_INFO: "#header [Goods.GetName] [Goods.GetTextIcon]#!\nDépenses payées pour [Goods.GetName|l] [Goods.GetTextIcon] consommés : #variable [Building.GetConsumptionValue(Goods.Self)|D]@money!#!\n$TOOLTIP_DELIMITER$\nPrix de région étatique : [Goods.GetStatePriceWithTooltip|1]"
 TOOLTIP_BUILDING_PRODUCES_VALUE_INFO: "#header [Goods.GetName]#!\nRecettes de la vente des #variable [Goods.GetName|l]#! : #variable [Building.GetProductionValue(Goods.Self)|D]@money!#!\n$TOOLTIP_DELIMITER$\nPrix de région étatique : [Goods.GetStatePriceWithTooltip]"
 TOOLTIP_RESET: "#BOLD #V Réinitialiser"
 MARKET_BALANCE: "#title Solde :\n#variable [Market.GetBalance|D+=]@money!#!#!"
 MARKET_BALANCE_TOOLTIP: "#header Solde du marché#!\nMontant : #variable $VAL|D+=$@money!#!\n$TOOLTIP_DELIMITER$\nVentes totales : #variable $SALESVAL|D+=$@money!#!\n$SALESBREAKDOWN$\n\nTotal des achats : #variable $PURCHASEVAL|D+=$@money!#!\n$PURCHASEBREAKDOWN$"
 MARKET_GOOD_PRODSTATS: "[GOODS.GetTextIcon] #variable $AMOUNT|D=+$#! vendus pour #variable $VAL|D=+$@money!#! ([GOODS.GetName|l])"
 MARKET_GOOD_CONSUMESTATS: "[GOODS.GetTextIcon] #variable $AMOUNT|D=+$#! achetés pour #variable $VAL|D=+$@money!#! ([GOODS.GetName|l])"
 AND_X_MORE_MONEY_VAL: "... et #variable $NUM$#! autres d’une valeur de #variable $VAL|D$@money!#!"
 BUILDING_URBANIZATION_WITH_VALUE: "$VALUE|0v=$ de [BUILDING.GetName]"
 BUILDING_INFRA_USAGE_WITH_VALUE: "#v $VALUE|0-$#! de [BUILDING.GetName]"
 BUILDING_COMBAT_UNIT_PRODUCTION: "Fournit $UNIT_COUNT|v$ $UNIT_ICON$"
 BUILDING_COMBAT_UNIT_PRODUCTION_BREAKDOWN_FORMATION_ITEM: "#header [MilitaryFormation.GetName]#! #indent_newline:3 \n[Building.GetUnitsProvidedToFormationBreakdown(MilitaryFormation.Self)]#!"
 IMPORT_SUGGESTIONS_TITLE: "Biens dont la demande d’importation est considérable"
 EXPORT_SUGGESTIONS_TITLE: "Biens ayant un potentiel d’exportation considérable"
 NO_GOODS_IMPORT_SUGGESTION: "Aucun [concept_good|l] n’a une demande d’importation considérable"
 NO_GOODS_EXPORT_SUGGESTION: "Aucun [concept_good|l] n’a une demande d’exportation considérable"
 MARKET_GOODS_BALANCE_TOOLTIP: "[SelectLocalization(LessThan_int32(FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance), '(int32)0'), 'MARKET_GOODS_BALANCE_TOOLTIP_IMBALANCE', 'MARKET_GOODS_BALANCE_TOOLTIP_BALANCE')]"
 MARKET_GOODS_BALANCE_TOOLTIP_BALANCE: "#header Solde pour [Goods.GetCustom('FR_Goods_Le')][Goods.GetName|l]#!\nSolde actuel : #v [FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance)|=Do]#!\n$TOOLTIP_DELIMITER$\n[concept_sell_orders] : [Goods.GetMarketSellOrdersWithTooltip]\n[concept_buy_orders] : [Goods.GetMarketBuyOrdersWithTooltip]\n\nLa barre affiche l’[Concept('concept_market_impact', '$concept_market_impact_short$')|l] que le solde actuel [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon] a sur le [Goods.GetMarket.GetName|l]. Plus la barre est #blue bleue#! ou #gold dorée#!, plus l’impact est important."
 MARKET_GOODS_BALANCE_TOOLTIP_IMBALANCE: "#header Solde pour [Goods.GetCustom('FR_Goods_Le')][Goods.GetName|l]#!\nSolde actuel : #v [FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance)|=Du]#!\n$TOOLTIP_DELIMITER$\n[concept_sell_orders] : [Goods.GetMarketSellOrdersWithTooltip]\n[concept_buy_orders] : [Goods.GetMarketBuyOrdersWithTooltip]\n\nLa barre affiche l’[Concept('concept_market_impact', '$concept_market_impact_short$')|l] que le solde actuel [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon] a sur le [Goods.GetMarket.GetName|l]. Plus la barre est #blue bleue#! ou #gold dorée#!, plus l’impact est important."
 STATE_GOODS_BALANCE_TOOLTIP: "[SelectLocalization(LessThan_int32(FixedPointToInt(Goods.GetStateProductionConsumptionDiff), '(int32)0'), 'STATE_GOODS_BALANCE_TOOLTIP_IMBALANCE', 'STATE_GOODS_BALANCE_TOOLTIP_BALANCE')]"
 STATE_GOODS_BALANCE_TOOLTIP_BALANCE: "#header Solde pour [Goods.GetCustom('FR_Goods_Le')][Goods.GetName|l]#!\nSolde actuel : #v [FixedPointToInt(Goods.GetStateProductionConsumptionDiff)|=Do]#!\n$TOOLTIP_DELIMITER$\nProduction : [Goods.GetStateProductionWithTooltip]\nConsommation : [Goods.GetStateConsumptionWithTooltip]\n\nLa barre affiche l’[Concept('concept_market_impact', '$concept_market_impact_short$')|l] que le solde actuel [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon] a sur [Goods.GetState.GetName]. Plus la barre est #blue bleue#! ou #gold dorée#!, plus l’impact est important."
 STATE_GOODS_BALANCE_TOOLTIP_IMBALANCE: "#header Solde pour [Goods.GetCustom('FR_Goods_Le')][Goods.GetName|l]#!\nDéséquilibre actuel : #v [FixedPointToInt(Goods.GetStateProductionConsumptionDiff)|=Du]#!\n$TOOLTIP_DELIMITER$\nProduction : [Goods.GetStateProductionWithTooltip]\nConsommation : [Goods.GetStateConsumptionWithTooltip]\n\nLa barre affiche l’[Concept('concept_market_impact', '$concept_market_impact_short$')|l] que le déséquilibre actuel [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon] a sur [Goods.GetState.GetName]. Plus la barre est #blue bleue#! ou #gold dorée#!, plus l’impact est important."
 PRODUCED_IN: "Produit dans"
 CONSUMED_IN: "Consommé dans"
 POP_IG_POPULATION: "#variable [PopListPopEntry.GetIGTotalPops|D]#!"
 POP_WORK_INFO: "de [Pop.GetWorksAt]"
 POP_TOTAL_INFO: "#header Taille totale#!\n[Pop.GetTotalSize|Dv], y compris les [concept_dependents|l]"
 POP_IG_POPULATION_TOOLTIP: "#header Membres du [concept_interest_group|l]#!\n$TOOLTIP_DELIMITER$\n$POP_IG_POPULATION_WORKING_ADULTS$\n$POP_IG_POPULATION_DEPENDENTS$"
 POP_IG_WORKING_ADULTS: "Adultes actifs : #variable [PopListPopEntry.GetIGWorkingAdults|D]#!"
 POP_IG_DEPENDENTS: "#header Personnes à charge#!\nValeur : #variable [PopListPopEntry.GetIGDependents|1D]#!\n$TOOLTIP_DELIMITER$\n[concept_dependents_desc]"
 POP_IG_POPULATION_WORKING_ADULTS: "Ce groupe social soutient #variable [PopListPopEntry.GetInterestGroupContext.GetName]#! avec #variable [PopListPopEntry.GetIGWorkingAdults|1K]#! de sa #variable [PopListPopEntry.GetPop.GetNumWorkforce|1K]#! main-d’œuvre"
 POP_IG_POPULATION_DEPENDENTS: "Ce groupe social soutient #variable [PopListPopEntry.GetInterestGroupContext.GetName]#! avec #variable [PopListPopEntry.GetIGDependents|1K]#! de ses #variable [PopListPopEntry.GetPop.GetNumDependentPoliticalParticipants|1K]#! personnes à charge privées de leurs droits"
 POP_IG_WORKING_ADULTS_TOOLTIP: "#variable Adultes actifs#!\n$POP_IG_POPULATION_WORKING_ADULTS$"
 POP_IG_DEPENDENTS_TOOLTIP: "#variable Personnes à charge#!\n$POP_IG_POPULATION_DEPENDENTS$"
 POP_POL_STR_SLAVES_DESC: "Les [Concept('concept_slavery','$concept_slaves$')|l] n'ont pas de force politique"
 POP_IG_POL_STR: "Force pol. : #variable [PopListPopEntry.GetIGPolStr|D]#!"
 POP_IG_POL_STR_TOOLTIP: "#header [concept_political_strength]#!\n$TOOLTIP_DELIMITER$\nCe groupe social soutient #variable [PopListPopEntry.GetInterestGroupContext.GetName]#! avec #variable [PopListPopEntry.GetIGPolStr|K]#! de sa #variable [PopListPopEntry.GetPop.GetPoliticalStrength|D]#! [concept_political_strength|l]."
 POP_POL_STR: "#header [concept_political_strength]#!\nValeur : #variable [Pop.GetPoliticalStrength|1*]#!\n$TOOLTIP_DELIMITER$\n[Pop.GetPoliticalStrengthDesc]"
 POP_SUPPORTERS_POL_STR: "#header [concept_political_strength]#!\nValeur : #v [Pop.GetPoliticalMovementSupportersPoliticalStrength(PoliticalMovement.Self)|1*]#!\n$TOOLTIP_DELIMITER$\n[Pop.GetPoliticalStrengthDesc][AddTextIf(Not(StringIsEmpty(Pop.GetPoliticalStrengthDesc)), '\n\n')]"
 POP_POPULATION: "#header [Concept('concept_pop','$concept_population$')] des [Pop.GetName] en [Pop.GetState.GetName]#!\n$POP_SIZE_BREAKDOWN$\n$TOOLTIP_DELIMITER$\n[Pop.GetPopGrowthDesc]\n[ConcatIfNeitherEmpty('\n',Pop.GetPopAssimilationDesc)][ConcatIfNeitherEmpty('\n',Pop.GetPopConversionDesc)]   $TOOLTIP_DELIMITER$\n[Pop.GetWorkforceRatioDesc]"
 POP_SIZE_BREAKDOWN: "Total : #variable [Pop.GetTotalSize|Dv]#!\n$TAB$Main-d’œuvre : #variable [Pop.GetNumWorkforce|Dv]#!\n$TAB$Personnes à charge : #variable [Pop.GetDependentsSize|Dv]#!"
 WORKFORCE_RATIO_DESC: "#variable $VAL|%1$#! de ce groupe social fait partie de la main-d’œuvre, tandis que le reste est constitué de personnes à charge. Au fil du temps, ce ratio s’approchera de #variable $TARGET_VAL|%1$#! en raison de :\n$BREAKDOWN$"
 TARGET_WORKFORCE_RATIO_BASE_FOR_TYPE: "Valeur de base pour #variable $POP_TYPE$#! : #variable $VAL|%1$#!"
 CHANGE_SPEED_TOOLTIP_1: "Changer la vitesse pour 1"
 CHANGE_SPEED_TOOLTIP_2: "Changer la vitesse pour 2"
 CHANGE_SPEED_TOOLTIP_3: "Changer la vitesse pour 3"
 CHANGE_SPEED_TOOLTIP_4: "Changer la vitesse pour 4"
 CHANGE_SPEED_TOOLTIP_5: "Changer la vitesse pour 5"
 POP_WORKFORCE_TOOLTIP: "#header Main-d’œuvre#!\nValeur : #variable [Pop.GetNumWorkforce|1K]#!\n$TOOLTIP_DELIMITER$\n[concept_pop_qualifications]\n[Pop.GetQualificationsDesc]\n$TOOLTIP_DELIMITER$\n[concept_working_adults_desc]"
 POP_DEPENDENTS_TOOLTIP: "#header Personnages à charge#!\nValeur : #variable [Pop.GetDependentsSize|1K]#!\n$TOOLTIP_DELIMITER$\n[concept_dependents_desc]"
 DEPENDENT_WAGE_SOURCES: "de $BREAKDOWN$"
 DEPENDENT_WAGE_SOURCE_ODD_JOBS: "petits boulots"
 DEPENDENT_WAGES_TOOLTIP: "#header Salaires des personnes à charge : #variable $VAL|=+D$@money!#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 DEPENDENT_BASE_WAGES: "Base : $VAL|0v$@money! ($PERPOP|3v$@money! par personne à charge)"
 POP_POPULATION_GROWTH: "#tooltip_header Croissance de la population#!\nVariation annuelle de la population : #variable [Pop.GetPopGrowth|+=0]#!\n$TOOLTIP_DELIMITER$\n[Pop.GetPopGrowthDesc]"
 POP_POPULATION_LITERACY: "#header Degré d’alphabétisation#!\n[Pop.GetLiteracyDesc]"
 POP_BUILDING_SHARES: "[concept_ownership_share] : #v $SHARE|%1$#!"
 POP_DISCRIMINATION_STATUS_DISCRIMINATED: "$concept_discriminated$"
 POP_DISCRIMINATION_STATUS_ACCEPTED: "Accepté"
 TURMOIL_TITLE: "#title [concept_turmoil]#!"
 TURMOIL_ENTRY_TITLE: "#title [concept_turmoil] :#!"
 NET_INCOME_TITLE: "#title Revenu net#!"
 PRODUCTION_NO_CONCEPT: "Production"
 STATISTICS: "Statistiques"
 TURMOIL: "Degré d’agitation :"
 MIGRATION_TARGETS: "Cibles migratoires :"
 CULTURAL_TRAITS: "Traits culturels :"
 CULTURE_OBSESSIONS: "Obsessions :"
 CULTURE_TABOOS: "Tabous :"
 RELIGIONS: "$concept_religions$ :"
 HOMELANDS: "Patries"
 OWNER: "Propriétaire"
 CULTURE_OF_SAME_HERITAGE: "Cultures d’un même patrimoine ([GetDataModelSize(Culture.AccessSameHeritageCultures)])"
 TURMOIL_OF_CULTURE: "[concept_turmoil] moyen de tous les [Concept('concept_pop', '$concept_pops$')|l] de cette culture"
 ACCEPTANCE_IN_PLAYER_COUNTRY: "$concept_acceptance$ [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetNameNoFormatting]"
 STATE_WITH_FLAG_UNLESS_OWNED_BY_PLAYER: "[AddTextIf( Not(ObjectsEqual(State.GetOwner, GetPlayer.Self)), State.GetOwner.GetFlagTextIcon)] [State.GetName]"
 MARKET_WITH_FLAG_UNLESS_OWNED_BY_PLAYER: "[AddTextIf( Not(ObjectsEqual(Market.GetOwner, GetPlayer.Self)), Market.GetOwner.GetFlagTextIcon)] [Market.GetName]"
 WORLD_MARKET_GOODS_BALANCE_TOOLTIP: "#header Solde du [concept_world_market|l]#!\nValeur : [Goods.GetWorldMarketExportsAndImportsBalance|v0]"
 POP_NEEDS_ENTRY_DEFAULT: "[Goods.GetName] - [Concept('concept_good', '$concept_goods$')] par défaut pour [PopNeed.GetNameNoFormatting|l]"
 POP_NEEDS_ENTRY: "[Goods.GetName] - Équivalent à $MULT|2v$ unité(s) [PopNeed.GetDefaultGoods.GetCustom('FR_Goods_De')][PopNeed.GetDefaultGoods.GetName|l]"
 BUY_PACKAGE_POP_CONSUMPTION_WEALTH_SPECIFIC: "Consommé par les [Concept('concept_pop', '$concept_pops$')|l] aux niveaux $LEVEL|v$ de [concept_wealth|l]"
 BUY_PACKAGE_POP_CONSUMPTION_WEALTH_TO_LEVEL: "Consommé par les [Concept('concept_pop', '$concept_pops$')|l] de niveau $LEVEL|v$ ou moins de [concept_wealth|l]"
 BUY_PACKAGE_POP_CONSUMPTION_WEALTH_FROM_LEVEL: "Consommé par les [Concept('concept_pop',  '$concept_pops$')|l] de niveau $LEVEL|v$ ou plus de [concept_wealth|l]"
 BUY_PACKAGE_POP_CONSUMPTION_WEALTH_BETWEEN_LEVELS: "Consommé par les [Concept('concept_pop', '$concept_pops$')|l] entre les niveaux $FROM|v$ et $TO|v$ de [concept_wealth|l]"
 BUY_PACKAGE_POP_CONSUMPTION_WEALTH_ALL: "Consommé par les [Concept('concept_pop', '$concept_pops$')|l] de tous les niveaux de [concept_wealth|l]"
 BUY_PACKAGE_POP_CONSUMPTION_WEALTH_NONE: "N’est consommé par aucun [concept_pop|l]"
 POPNEED_SUMMARY_DESC: "#tooltippable #tooltip:$TAG$,POPNEED_EXPENSES_TOOLTIP [PopNeed.CalcTotalCost|Dv]@money!#!#! - [PopNeed.GetName]"
 POPNEED_DETAILS_DESC: "$CONSUMPTIONDESC$\n\n$GOODSDESC$"
 POPNEED_EXPENSES_DESC: "Dépenses actuelles de [PopNeed.GetNameNoFormatting] pour [POP.GetTotalSize|Kv] [POP.GetPopType.GetName|l] [POP.GetCulture.GetName|l] en [POP.GetState.GetName] :\n$CONTENTS$\nCoût total : [PopNeed.CalcTotalCost|Dv]@money!"
 POPNEED_DETAILS_TOOLTIP: "[PopNeed.GetDetailsDesc]"
 POPNEED_EXPENSES_TOOLTIP: "[PopNeed.GetExpensesDesc]"
 BUY_PACKAGE_POP_NEEDS_ENTRY: "[Goods.GetName] [Goods.GetTextIcon]$CULTURESTATUSDESC$\n#bold $AMOUNT|vD$#! ($AMOUNT_PERCENT|1v%$ du montant)\n#variable $GOODS_TOTAL_COST|D$@money!#! ([Goods.GetCompareIconAgainstBasePrice( '(CFixedPoint)$GOODS_UNITARY_PRICE$' )]) ($GOODS_COST_PERCENT|1v%$ du coût)\n\n"
 BUY_PACKAGE_GOOD_CULTURE_TABOO: " ([concept_taboo|l])"
 BUY_PACKAGE_GOOD_CULTURE_OBSESSION: " ([concept_obsession|l])"
 POPNEED_USAGE_DESC: "Consommé par les [Concept('concept_pop', '$concept_pops$')|l] de $WEALTHDESC$ ([Concept('concept_pop_needs','$concept_pop_needs_short$')|l] en [PopNeed.GetName|l])"
 POPNEED_USAGE_WEALTH_SPECIFIC: "Niveau de [concept_wealth|l] $LEVEL|v$"
 POPNEED_USAGE_WEALTH_BETWEEN_LEVELS: "Niveaux de [concept_wealth|l] $FROM|v$ à $TO|v$"
 POPNEED_USAGE_WEALTH_ALL: "Tous les niveaux de [concept_wealth|l]"
 POPNEED_USAGE_WEALTH_NONE: "Aucun niveau de [concept_wealth|l]"
 BUY_PACKAGE_CONTENT_ENTRY_WITH_COSTS: "#bold $AMOUNT|vD$#! [Goods.GetName|l][Goods.GetTextIcon] - #variable $GOODS_TOTAL_COST|D$@money!#! ([GOODS.GetCompareIconAgainstBasePrice( '(CFixedPoint)$GOODS_UNITARY_PRICE$' )])"
 TOOLTIP_QOL_BUY_PACKAGE: "#header [concept_sol]#!\nEst actuellement #variable [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(EmployeeStats.GetCurrentStandardOfLiving)]#! (#V [EmployeeStats.GetCurrentStandardOfLiving]#!)\nS’attend à être #variable [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(EmployeeStats.GetExpectedStandardOfLiving)]#! (#V [EmployeeStats.GetExpectedStandardOfLiving]#!)"
 BUILDINGS_OWNED: "Portefeuille immobilier"
 BUILDING: "Bâtiment"
 OWNED: "Niveaux acquis"
 DIVIDENDS: "Dividendes"
 OWNERS: "Propriétaires"
 IN_TOTAL: "au total"
 POP_WEEKLY_INCOME: "#bold Revenu hebdomadaire : #variable $VAL|+D$@money!#!#!\n$BREAKDOWN$\n"
 POP_WEEKLY_EXPENSES: "#bold Dépenses hebdomadaires : #variable $VAL|+D$@money!#!#!\n$BREAKDOWN$\n"
 POP_WEEKLY_MONEY: "#bold Argent hebdomadaire : #variable $VAL|+D$@money!#!#!\n$BREAKDOWN$\n"
 POP_WEEKLY_wage: "Salaires : #variable @money!$VAL|+=D$#!\n$TAB$#indent_newline:3 [POP.GetWageDiscriminationDesc]#!"
 POP_WEEKLY_dependent_production: "Salaires des personnes à charge : #variable $VAL|+=D$@money!#!"
 POP_WEEKLY_dividends: "Dividendes : #variable $VAL|+=D$@money!#!"
 POP_WEEKLY_interest: "Intérêt : #variable $VAL|+=D$@money!#!"
 POP_WEEKLY_diplomatic_pacts: "[concept_budget_diplomatic_pacts] : #variable @money!$VAL|+=D$#!"
 POP_WEEKLY_welfare: "[concept_welfare_payments] : #variable $VAL|+=D$@money!#!"
 POP_WEEKLY_income_taxes: "Impôts sur le revenu : #variable $VAL|+=D$@money!#!"
 POP_WEEKLY_needs: "[Concept('concept_pop_needs','$concept_pop_needs_short$')] : #tooltippable #tooltip:[Pop.GetTooltipTag],NEEDS_BREAKDOWN #variable $VAL|+=D$@money!#!#!#!"
 POP_WEEKLY_losses: "Pertes d’investissement : #variable $VAL|+=D$@money!#!"
 TOOLTIP_WEALTH: "#header Richesse#!\n[Concept('concept_pop_needs','$concept_pop_needs_short$')] de niveau [Pop.GetCurrentWealth|v]\n$TOOLTIP_DELIMITER$\n$POP_NET_INCOME$"
 TOOLTIP_WEALTH_SLAVE: "#header Richesse#!\nLa maintenance des esclaves satisfait les [Concept('concept_pop_needs','$concept_pop_needs_short$')|l] de ce [concept_pop|l] esclave de niveau [Pop.GetCurrentWealth|v]\n$TOOLTIP_DELIMITER$\n#bold Répartition du coût de maintenance des esclaves :#!\n[Pop.GetNeedsDesc]"
 TOOLTIP_WEALTH_SUBSISTENCE: "#header Richesse#!\nSa [concept_subsistence_output|l] de [Pop.GetAverageAnnualWage|Dv]@money! et sa [concept_budget_poll_taxes|l] annuelle de [Pop.CalcAnnualPollTaxAmount|Dv]@money! satisfont les [Concept('concept_pop_needs','$concept_pop_needs_short$')|l] des [GetPopType('peasants').GetName] équivalent au niveau [Pop.GetCurrentWealth|v]\n\nUn [concept_building|l] qui veut embaucher parmi ce [concept_pop|l] devra offrir un salaire d’au moins [Pop.GetWageRequiredToHireFrom|Dv]@money!."
 TOOLTIP_POP_NET_INCOME: "#header [Concept('concept_pop_income','$concept_pop_income_short$')] net#!\n#variable [Subtract_CFixedPoint(Pop.GetIncome, Pop.GetExpenses)|+=D]@money!#!\n$TOOLTIP_DELIMITER$\n$POP_NET_INCOME$"
 POP_NET_INCOME: "[Pop.GetIncomeExpensesBalanceDesc]\nProgression vers le niveau de richesse suivant : #v [Pop.GetWealthProgression|+=%0]#!\n\nRevenu annuel par adulte actif : [Pop.GetAverageAnnualWage|Dv]@money!"
 POP_MONEY_BALANCE: "$INCOME$\n$EXPENSES$"
 POP_ECONOMY_WEEKLY_INCOME: "#title $concept_pop_income$ hebdomadaire#!"
 POP_ECONOMY_WEEKLY_EXPENSES: "#title $concept_pop_income_expenses$ hebdomadaires#!"
 POP_GOODS_CONSUMPTION_TOOLTIP_HEADER: "$concept_good_consumption$ [PopConsumptionGoods.GetGoods.GetCustom('FR_Goods_De')][PopConsumptionGoods.GetGoods.GetNameNoFormatting|l]"
 POP_GOODS_BUDGET_EXPENDITURE_PERCENTAGE: "#header Pourcentage des dépenses en [Goods.GetName|l] [Goods.GetTextIcon]#!\n#v [PopConsumptionGoods.GetConsumptionRatio|1%v]#! du budget de ce [concept_pop|l] est dépensé en [Goods.GetName|l].\nPart des [concept_pop_needs|l] en [PopConsumptionGoods.GetPopNeedsDesc|l]."
 POP_GOODS_AMOUNT_CONSUMED: "Quantité [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] [Goods.GetTextIcon] [Concept('concept_good_consumption','$concept_good_consumed$e')|l] par les [Pop.GetName|l]"
 POP_LIST_SOL: "#variable [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)]#!  ([Pop.GetCurrentStandardOfLiving|v])"
 NEEDS_BREAKDOWN: "#header [concept_pop_needs]#!\n[Pop.GetNeedsDesc]"
 AVG_WAGE_POP_LIST: "Salaire annuel moyen : [PopListItem.GetAverageAnnualWage|vD]@money!"
 AVG_WAGE_SUBSISTENCE_POP_LIST: "[concept_subsistence_output] : [PopListItem.GetAverageAnnualWage|vD]@money!"
 TOOLTIP_POP_QOL_TURMOIL: "\nUn [concept_sol|l] bas augmente le [concept_turmoil_target|l] de #variable $VAL|-=D$ #!"
 TOOLTIP_POP_QOL: "#header [concept_sol]#!\nActuel : #variable [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)]#! ([Pop.GetCurrentStandardOfLiving|v])\nMinimum attendu : #variable [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetExpectedStandardOfLiving)]#! #tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_POP_EXPECTED_SOL ([Pop.GetExpectedStandardOfLiving|v])#!#!\nLe [concept_sol|l] affecte le taux de croissance de la population, qui est actuellement de #tooltippable #tooltip:[Pop.GetTooltipTag],GROWTH_RATE_BREAKDOWN [Pop.GetNetGrowthRate|%=+]#!#!\nSi le [concept_sol|l] est inférieur au minimum attendu, ce [concept_pop|l] deviendra plus [concept_radical|l] au fil du temps\n$TOOLTIP_DELIMITER$\nLe [concept_sol|l] de ce groupe social de #variable [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)]#! ([Pop.GetCurrentStandardOfLiving|v]) s’explique par :\n$TAB$Richesse : #variable #tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_WEALTH [Pop.GetCurrentWealth]#!#!#!\n[Pop.GetCurrentSoLModifiersDesc]\n[Pop.GetAdditionalSOLFactorsDesc]"
 JOB_SATISFACTION_ITEM: "[concept_job_satisfaction] : [SelectLocalization(Pop.IsLookingForJob, 'JOB_SATISFACTION_LOOKING_FOR_JOB', 'JOB_SATISFACTION_NOT_LOOKING_FOR_JOB')|v] (#tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_JOB_SATISFACTION [Pop.GetCurrentJobSatisfaction|0+]#!#!)"
 LABEL_JOB_SATISFACTION: "[SelectLocalization(Pop.IsLookingForJob, 'JOB_SATISFACTION_LOOKING_FOR_JOB', 'JOB_SATISFACTION_NOT_LOOKING_FOR_JOB')|v] ([Pop.GetCurrentJobSatisfaction|0+])"
 JOB_SATISFACTION_LOOKING_FOR_JOB: "À la recherche d’un meilleur [concept_employment|l]"
 JOB_SATISFACTION_NOT_LOOKING_FOR_JOB: "Satisfait"
 TOOLTIP_JOB_SATISFACTION: "#header [concept_job_satisfaction]#!\nActuellement : $LABEL_JOB_SATISFACTION$\n$TOOLTIP_DELIMITER$\n[SelectLocalization(EqualTo_CFixedPoint(Pop.GetCurrentJobSatisfaction, Pop.GetNextJobSatisfaction), 'TOOLTIP_JOB_SATISFACTION_DUE_TO_SAME', 'TOOLTIP_JOB_SATISFACTION_DUE_TO_UPDATING')]\n[Pop.GetNextJobSatisfactionDesc]"
 TOOLTIP_JOB_SATISFACTION_DUE_TO_SAME: "Ceci s’explique par :"
 TOOLTIP_JOB_SATISFACTION_DUE_TO_UPDATING: "Cela sera bientôt mis à jour à [Pop.GetNextJobSatisfaction|0+] en raison de :"
 JOB_SATISFACTION_BASE: "$VALUE|0+=$ de l’insatisfaction de base"
 JOB_SATISFACTION_FOR_NEWLY_HIRED: "$VALUE|0+=$ car le [concept_pop|l] vient d’être embauché"
 JOB_SATISFACTION_PER_SOL_ABOVE_EXPECTED_SOL: "$VALUE|0+=$ de la différence entre le [concept_sol|l] actuel (#tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_POP_QOL [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)|v] ([Pop.GetCurrentStandardOfLiving|v])#!#!) et le [Concept('concept_expected_sol', '$concept_expected_sol_short$')|l] (#tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_POP_EXPECTED_SOL [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetExpectedStandardOfLiving)] ([Pop.GetExpectedStandardOfLiving|v])#!#!)"
 JOB_SATISFACTION_PER_SOL_ABOVE_COUNTRY_STRATA_SOL: "$VALUE|0+=$ de la différence entre le [concept_sol|l] actuel (#tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_POP_QOL [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)|v] ([Pop.GetCurrentStandardOfLiving|v])#!#!) et le [concept_sol|l] moyen [Pop.GetCountry.GetAltNameNoFormatting('En')][Pop.GetCountry.GetName] pour la [Pop.GetSocialClass.GetStrataConcept] ([LabelingHelper.GetLabelForStandardOfLiving(FixedPointToInt('(CFixedPoint)$AVERAGE$'))|v] ($AVERAGE|v1$))"
 JOB_SATISFACTION_PER_SOL_ABOVE_STATE_STRATA_SOL: "$VALUE|0+=$ de la différence entre le [concept_sol|l] actuel (#tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_POP_QOL [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)|v] ([Pop.GetCurrentStandardOfLiving|v])#!#!) et le [concept_sol|l] moyen en [Pop.GetState.GetName] pour la [Pop.GetSocialClass.GetStrataConcept] ([LabelingHelper.GetLabelForStandardOfLiving(FixedPointToInt('(CFixedPoint)$AVERAGE$'))|v] ($AVERAGE|v1$))"
 JOB_SATISFACTION_PER_PERCENT_WAGE_RATE_ABOVE_NORMAL: "$VALUE|0+=$ de la différence relative de #variable $DIFF|1$ %#! entre le [concept_building_wage|l] de [Pop.GetBuilding.GetName] ($WORKPLACE_WAGE_RATE|v1$@money!) et [Pop.GetCountry.GetAltNameNoFormatting('En')][Pop.GetCountry.GetName] ($NORMAL_WAGE_RATE|v1$@money!)"
 JOB_SATISFACTION_DIVIDENDS: "$VALUE|0+=$ du ratio de #variable $DIVIDENDS_WAGES_RATIO|0$ %#! entre les [concept_dividends|l] reçus ($POP_DIVIDENDS|v1$@money!) et les [concept_budget_wages|l] ($POP_WAGES|v1$@money!)"
 JOB_SATISFACTION_LOSSES: "$VALUE|0+=$ du ratio de #variable $LOSSES_WAGES_RATIO|0$ %#! entre les pertes d’investissements ($POP_LOSSES|v1$@money!) et les [concept_budget_wages|l] ($POP_WAGES|v1$@money!)"
 JOB_SATISFACTION_FROM_CAN_AFFORD_EXPENSES: "$VALUE|0+=$ car le [concept_pop|l] peut se permettre ses [Concept( 'concept_pop_income', '$concept_pop_income_expenses_short$' )|l] ($EXPENSES|v1$@money!) avec son [Concept( 'concept_pop_income', '$concept_pop_income_short$')|l] actuel ($INCOME|v1$@money!)"
 JOB_SATISFACTION_FROM_CAN_BARELY_AFFORD_EXPENSES: "$VALUE|0+=$ car le [concept_pop|l] peut à peine se permettre ses [Concept( 'concept_pop_income', '$concept_pop_income_expenses_short$' )|l]"
 JOB_SATISFACTION_FROM_CANNOT_AFFORD_EXPENSES: "$VALUE|0+=$ car le [concept_pop|l] ne peut pas se permettre ses [Concept( 'concept_pop_income', '$concept_pop_income_expenses_short$' )|l] ($EXPENSES|v1$@money!) avec son [Concept( 'concept_pop_income', '$concept_pop_income_short$')|l] actuel ($INCOME|v1$@money!)"
 JOB_SATISFACTION_PER_PERCENT_HIGHER_SOL_QUALIFICATION: "$VALUE|0+=$ car $RATIO|%v1$ sont [Concept('concept_pop_qualifications', 'qualifiés')] pour des emplois ayant un [concept_sol|l] de base plus élevé que le niveau actuel (#tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_POP_QOL [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)|v] ([Pop.GetCurrentStandardOfLiving|v])#!#!)"
 JOB_SATISFACTION_FROM_EMPLOYMENT: "$VALUE|0+=$ pour avoir un [Concept('concept_employment' ,'emploi')]"
 JOB_SATISFACTION_GOVERNMENT: "$VALUE|0+=$ en raison de la collecte d’un salaire du gouvernement"
 GROWTH_RATE_BREAKDOWN: "#header Taux de croissance#!\n[Pop.GetPopGrowthDesc]"
 TOOLTIP_POP_EXPECTED_SOL: "#header [concept_sol] minimum attendu#!\nTotal : [Pop.GetExpectedStandardOfLiving]\n$TOOLTIP_DELIMITER$\n[Pop.GetExpectedStandardOfLivingDesc]"
 EXPECTED_SOL_FROM_LITERACY: "Du [concept_literacy|l] : #tooltippable #tooltip:[Pop.GetTooltipTag],EXPECTED_SOL_FROM_LITERACY_BREAKDOWN #v $VALUE|=$#!#!#!"
 EXPECTED_SOL_FROM_LITERACY_BREAKDOWN: "#header [concept_sol] minimum attendu du [concept_literacy|l]#!\nTotal : [Pop.GetExpectedStandardOfLivingFromLiteracy]\n$TOOLTIP_DELIMITER$\n[Pop.GetExpectedStandardOfLivingFromLiteracyDesc]"
 MODIFIED_BY_LITERACY_RATE: "Modifié par #v ×$LITERACY_RATE|2$#! à cause du [concept_literacy|l]"
 MODIFIED_BY_SUBSISTENCE_EMPLOYMENT: "Multiplié par #v $MULTIPLIER$#! en raison de l'emploi dans un [concept_subsistence_building|l]"
 SOL_FACTOR_TAXES: "Ils payent en moyenne #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $TAX_BURDEN|%1$#!#!#! de leurs revenus en [concept_taxes|l], ce qui réduit leur argent disponible pour leurs [Concept('concept_pop_needs','$concept_pop_needs_short$')|l]"
 SOL_FACTOR_MODIFIERS: "Leur [concept_sol|l] est modifié de #v $VALUE|1=+$#! en raison des modificateurs"
 SOL_FACTOR_NO_MODIFIERS: "Ils ne sont actuellement affectés par aucun modificateur de [concept_sol|l]"
 SOL_FACTOR_GOODS: "Ils payent en moyenne #v #tooltip:COIN_STACK_TOOLTIP $PRICEICON$#! #tooltippable #tooltip:$BREAKDOWN_TAG$ $RELATIVE_PRICE|=-%1$#!#!#! par rapport au [concept_base_price|l] pour leurs [Concept('concept_pop_needs','$concept_pop_needs_short$')|l]. $GOODS_BREAKDOWN_SHORT_SUMMARY$"
 SOL_FACTOR_SLAVES: "$POP_FRACTION|%1v$ d’entre eux sont [Concept('concept_slavery', '$concept_enslaved$s')|l], ce qui leur impose un [concept_sol|l] très bas"
 SOL_FACTOR_PEASANTS: "$POP_FRACTION|%1v$ d’entre eux sont des [GetPopType('peasants').GetName|l] dans les [Concept('concept_subsistence_building', '$concept_subsistence_buildings$')|l], ce qui les contraint à un faible [concept_sol|l]"
 SOL_FACTOR_TAX_ENTRY: "$TAX_LEVEL|%1v$ des revenus payés en $TAX_TYPE|l$"
 SOL_FACTOR_GOODS_ENTRY: "$RELATIVE_EXPENDITURES|v1%$ - [Goods.GetName][Nbsp][Goods.GetTextIcon] - @money!$PRICE|v1$ #tooltippable #tooltip:COIN_STACK_TOOLTIP $PRICEICON$#!#! ($RELATIVE_PRICE|=-%1$)"
 SOL_FACTOR_GOODS_ENTRY_SHORT: "[Goods.GetName] [Goods.GetTextIcon] : ($RELATIVE_EXPENDITURES|v1%$)"
 SOL_FACTOR_GOODS_BREAKDOWN_SHORT_SUMMARY: "Leurs principales dépenses sont $SUMMARY_LIST$."
 SOL_FACTOR_GOODS_BREAKDOWN: "#header [concept_pop_needs]#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 SOL_FACTOR_TAX_BREAKDOWN: "#header [Concept('concept_taxes','$concept_taxation$')]#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 EXPECTED_SOL_FACTOR_STRATA: "$FRACTION|%1v$ d’entre eux sont de la $STRATA|vl$ : $VALUE|=v$"
 EXPECTED_SOL_FACTOR_LITERACY: "Ils ont en moyenne $LITERACY|%0v$ en [concept_literacy|l] : $VALUE|=v$"
 SOL_BELOW_EXPECTED: "@warning! $TOTAL|vD$ ($FRACTION|%1v$) d’entre eux ont un [concept_sol|l] en dessous du [Concept('concept_expected_sol', '$concept_expected_sol_short$')|l] et deviendront plus [Concept('concept_radical','radicaux')] au fil du temps"
 SOL_WELFARE: "$TOTAL|vD$ ($FRACTION|%1v$) d’entre eux reçoivent des [concept_welfare_payments|l], ce qui augmente leur [concept_sol|l]"
 TOOLTIP_SOL_MODIFIERS: "$BREAKDOWN$"
 POP_DETAILS_TITLE: "#bold Détails du groupe social#!"
 POP_DETAILS_IG: "\n#instruction Cliquez#! pour #variable [Pop.GetLargestInterestGroup.GetName]#!"
 FOOD_SECURITY_LABEL_SECURED: "#g Assurée#! ($VAL|%0v$)"
 FOOD_SECURITY_LABEL_MODERATE: "#v Modérée#! ($VAL|%0v$)"
 FOOD_SECURITY_LABEL_STARVATION: "#r Faible#! ($VAL|%0v$)"
 FOOD_SECURITY_LABEL_SEVERE_STARVATION: "#r Insuffisante#! ($VAL|%0v$)"
 POP_NEED_COST_SHARE: "$VAL|%1-$ du budget du groupe social dépensé en #v $popneed_basic_food$#! :\n$TAB$Coût total : @money!$COST|v$\n$TAB$Coût de base de l’ensemble :@money!$BASE_COST|v$"
 STATE_SHORTAGE_SEVERITY: "$VAL|%1-$ de la gravité de la pénurie en [State.GetName] :\n$TAB$$SELL|v$ [concept_sell_orders]\n$TAB$$BUY|v$ [concept_buy_orders]"
 POP_FOOD_SECURITY_HIGH: "#header [concept_food_security] du groupe social#! :\nActuellement : $VAL|%1+$"
 POP_FOOD_SECURITY: "#header [concept_food_security] du groupe social#! :\nActuellement : $VAL|%1v$\n$TOOLTIP_DELIMITER$\n$COST_DESC$\n$SHORTAGE_DESC$[AddTextIf(NotEqualTo_CFixedPoint('(CFixedPoint)$MODIFIER_VAL$','(CFixedPoint)0'), '\n$MODIFIER_DESC|%0v$' )]"
 POP_FOOD_SECURITY_LOW: "#header [concept_food_security] du groupe social#!\nActuellement : $VAL|%1-$\n$TOOLTIP_DELIMITER$\nCeci s’explique par :\n$COST_DESC$\n$SHORTAGE_DESC$[AddTextIf(NotEqualTo_CFixedPoint('(CFixedPoint)$MODIFIER_VAL$','(CFixedPoint)0'), '\n$MODIFIER_DESC|%0v$' )][ConcatIfNeitherEmpty('\n\n', Pop.GetStarvationEffectDesc)]"
 POP_STARVATION_EFFECT: "Ce groupe social souffre de #r famine#! :\n$DESC$"
 POP_SEVERE_STARVATION_EFFECT: "Ce groupe social souffre de #r grande famine#! :\n$DESC$"
 ALL_STATES_FOOD_SECURITY_FILTER_TOOLTIP: "#header Tous les [Concept('concept_state', '$concept_states$')] en $FOOD_SECURITY_FILTER_CONTEXT_NAME$#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(GreaterThan_int32(FoodSecurity.GetNumStatesWithFamineRaw, '(int32)0'), 'NUMBER_OF_STATES_WITH_FAMINE'))]\n[FoodSecurity.GetNumPopsTotal|D0v] @population! de la [Concept('concept_pop', '$concept_population$')|l] totale\n$TOOLTIP_DELIMITER$\n@mild_starvation! [FoodSecurity.GetNumStarvingPopsMild|D0-] ([FoodSecurity.GetPercentageStarvingPopsMild|%0-]) en état de [Concept('concept_starvation', '$concept_mild_starvation$')|l]\n@severe_starvation! [FoodSecurity.GetNumStarvingPopsSevere|D0-] ([FoodSecurity.GetPercentageStarvingPopsSevere|%0-]) en état de [Concept('concept_starvation', '$concept_severe_starvation$')|l]"
 ALL_STATES_FOOD_SECURITY_FILTER_TOOLTIP_SELECTED: "#header Tous les [Concept('concept_state', '$concept_states$')] en $FOOD_SECURITY_FILTER_CONTEXT_NAME$#! #i (filtre actuellement actif)#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(GreaterThan_int32(FoodSecurity.GetNumStatesWithFamineRaw, '(int32)0'), 'NUMBER_OF_STATES_WITH_FAMINE'))]\n[FoodSecurity.GetNumPopsTotal|D0v] @population! de la [Concept('concept_pop', '$concept_population$')|l] totale\n$TOOLTIP_DELIMITER$\n@mild_starvation! [FoodSecurity.GetNumStarvingPopsMild|D0-] ([FoodSecurity.GetPercentageStarvingPopsMild|%0-]) en état de [Concept('concept_starvation', '$concept_mild_starvation$')|l]\n@severe_starvation! [FoodSecurity.GetNumStarvingPopsSevere|D0-] ([FoodSecurity.GetPercentageStarvingPopsSevere|%0-]) en état de [Concept('concept_starvation', '$concept_severe_starvation$')|l]"
 NUMBER_OF_STATES_WITH_FAMINE: "@warning! #v [FoodSecurity.GetNumStatesWithFamineRaw]#! $concept_states$ souffrent actuellement de la [concept_famine|l]"
 STATE_FOOD_SECURITY: "[Concept('concept_pop', '$concept_population$')] affamée\n[State.GetFoodSecurity.GetNumStarvingPops|D-] ([State.GetFoodSecurity.GetPercentageStarvingPops|%0-])"
 STATE_FOOD_SECURITY_TOOLTIP: "#header [concept_starvation] en [State.GetName] [State.GetCountry.GetFlagTextIcon]#!\n[State.GetFoodSecurity.GetNumStarvingPops|D-] ([State.GetFoodSecurity.GetPercentageStarvingPops|%0-]) des [Concept('concept_pop', '$concept_pops$')|l] sont affamés\n$TOOLTIP_DELIMITER$\n@mild_starvation! [State.GetFoodSecurity.GetNumStarvingPopsMild|D-] ([State.GetFoodSecurity.GetPercentageStarvingPopsMild|%0-]) sont dans un état de famine modérée\n@severe_starvation! [State.GetFoodSecurity.GetNumStarvingPopsSevere|D-] ([State.GetFoodSecurity.GetPercentageStarvingPopsSevere|%0-]) sont dans un état de grande famine[ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(State.HasFamine, State.GetFamineDesc))]"
 STATE_FOOD_SECURITY_MAP_TOOLTIP: "[SelectLocalization(State.HasFamine,State.GetFamineDesc,'STATE_FOOD_SECURITY_MAP_TOOLTIP_NO_FAMINE')]"
 STATE_FOOD_SECURITY_MAP_TOOLTIP_NO_FAMINE: "#header [concept_starvation] en [State.GetName] [State.GetCountry.GetFlagTextIcon]#!\n$STATE_STARVATION_NUMBERS$"
 STATE_STARVATION_NUMBERS: "#title [State.GetFoodSecurity.GetNumStarvingPops|D0-] ([State.GetFoodSecurity.GetPercentageStarvingPops|%0-]) des [Concept('concept_pop', '$concept_pops$')|l] sont [SelectLocalization(State.HasFamine,Concept('concept_starvation','$concept_starving$'),'$concept_starving$')|l]s :#!\n@mild_starvation! [State.GetFoodSecurity.GetNumStarvingPopsMild|Dv] ([State.GetFoodSecurity.GetPercentageStarvingPopsMild|%0v]) sont dans un état de famine modérée\n@severe_starvation! [State.GetFoodSecurity.GetNumStarvingPopsSevere|-D0] ([State.GetFoodSecurity.GetPercentageStarvingPopsSevere|%0r]) sont dans un état de grande famine"
 FAMINE_DESC: "#header [concept_famine] en [State.GetName] [State.GetCountry.GetFlagTextIcon]#!\nDébut : $START_DATE|v$ ($DURATION|v$)\n$TOOLTIP_DELIMITER$\n$STATE_STARVATION_NUMBERS$\n\n#title Pendant $DURATION|v$, la crise alimentaire a entraîné :#!\n$DEATHS|D-$ morts\n$BIRTHS|D+$ naissances non réalisées\n\n#title Une crise alimentaire est déclarée dans un $concept_state$ si les deux conditions suivantes sont remplies :#!\n@green_checkmark_box! Au moins #b #r [GetDefine('NPops', 'FAMINE_POPULATION_SHARE_IN_STARVATION')|0%]#!#! de la population sont dans un état de famine\n@green_checkmark_box! Au moins #b #r [GetDefine('NPops', 'FAMINE_POPULATION_SHARE_IN_SEVERE_STARVATION')|%0]#!#! sont dans un état de grande famine."
 HARVEST_CONDITIONS_MAP_TOOLTIP: "#header [State.GetName] [State.GetCountry.GetFlagTextIcon]#!\n$TOOLTIP_DELIMITER$\n#title [Concept('concept_harvest_condition', '$concept_harvest_conditions$')] :#!#indent_newline:3 \n$BREAKDOWN$#!"
 HARVEST_CONDITIONS_MAP_TOOLTIP_BREAKDOWN_ENTRY: "[HarvestCondition.GetName] : $INTENSITY|v$ d’[Concept('concept_harvest_condition_intensity', '$concept_harvest_condition_intensity_short$')|l]"
 HARVEST_CONDITIONS_MAP_TOOLTIP_NO_CONDITIONS: "#header [State.GetName] [State.GetCountry.GetFlagTextIcon]#!\nPas de [Concept('concept_harvest_condition', '$concept_harvest_conditions$')|l]"
 HARVEST_CONDITION_SORT_HEADER_INTENSITY: "$concept_harvest_condition_intensity_short$ ([GetDefine( 'NEconomy', 'HARVEST_CONDITION_MIN_INTENSITY' )]-[GetDefine( 'NEconomy', 'HARVEST_CONDITION_MAX_INTENSITY' )])#!"
 HARVEST_CONDITION_AREA_NAME_IN_STATE_REGION: "[HarvestConditionArea.GetName] en [HarvestConditionArea.GetEpicenterRegion.GetName]"
 EMPLOYEE_POPS_LIST: "$TYPE$ $CULTURE$ $RELIGION$ : $SIZE$"
 CONDITIONS_NOT_SATISFIED: "Les conditions suivantes empêchent cette action :"
 CREATE_MARKET: "#BOLD Créer un [concept_market|l] en #V $STATE$#!#!"
 MERGE_MARKET: "Lier [STATE.GetName] au #V [MARKET.GetName|l]#!"
 SPLIT_MARKET: "Délier [STATE.GetName] du #V [MARKET.GetName|l]#!"
 CANNOT_BUILD_BUILDING: "#BOLD #N Impossible de $BUILD_OR_EXPAND|l$ #V [BUILDING_TYPE.GetName]#! en [STATE.GetName] !#!#!"
 CANNOT_BUILD_MARKET: "#BOLD #N Impossible de construire un #V marché#! ici !#!#!"
 CANNOT_MERGE_MARKET: "#BOLD #N Impossible de relier le #V marché#! ici !#!#!"
 CANNOT_MERGE_MARKET_STATE: "#BOLD #N Impossible de relier au #V [MARKET.GetName|l]#!#!#!"
 CANNOT_SPLIT_MARKET_STATE: "#BOLD #N Impossible de délier du #V [MARKET.GetName|l]#!#!#!"
 AND_X_MORE_NEEDS: "+[Subtract_int32(GetDataModelSize(Pop.GetGoodsConsumption), GetDataModelSize(Pop.GetTopGoodsConsumption))]"
 ACTIVE: "Actif"
 INACTIVE: "Inactif"
 CONSTRUCTION_SECTOR_INPUT_FACTOR: "Multiplié par #v x$MULT$#! en raison de la [concept_construction|l] inutilisée"
 CONSTRUCTION_BREAKDOWN: "#header [concept_construction] : $CONSTRUCTION_SPEED$#! / semaine\n$TOOLTIP_DELIMITER$\n#v #tooltippable #tooltip:$BREAKDOWN_TAG$ $BASE_CONSTRUCTION$#!#!#! en [concept_construction|l] fournis par [Country.GetAltNameNoFormatting('Le')][Country.GetName][ConcatIfNeitherEmpty('\n\n', '$CAPPEDDESC$')][ConcatIfNeitherEmpty('\n\n', '$MODIFIERDESC$')]"
 CONSTRUCTION_MODIFIER_HEADER: "L’efficacité de la [concept_construction|l] hebdomadaire de [State.GetName] est modifiée par :\n$MODIFIER_BREAKDOWN$"
 CONSTRUCTION_CAPPED_DESC: "La progression de [BuildingType.GetName] est plafonnée à #v $MAXPOINTS$#! de [concept_construction|l] / semaine"
 CAN_EXPAND_BUILDING_PRODUCTIVITY_DELTA: " ($PRODUCTIVITY_DELTA|=+1$@money! à partir de la situation actuelle)"
 CAN_EXPAND_BUILDING_PRODUCTIVITY_DESC: "#tooltippable #tooltip:[GetRawTextTooltipTag('$PRODUCTIVITY_IMPACT_DESC$')] #v $PRODUCTIVITY_IMPACT$@money!#!#!#! [concept_productivity] prévisionnelle$PRODUCTIVITY_DELTA_DESC$"
 CAN_EXPAND_BUILDING_TOOLTIP: "#header $BUILD_OR_EXPAND$ [BUILDING_TYPE.GetName] en [STATE.GetName]#! (taille : [BUILDING.GetExpansionLevelBreakdownDesc])\n[AddLocalizationIf( Not(STATE.GetOwner.IsLocalPlayer), 'CAN_EXPAND_BUILDING_TOOLTIP_FOREIGN' )]#tooltippable #tooltip:[GetRawTextTooltipTag('$PROFIT_IMPACT_DESC$')] #v $PROFIT_IMPACT|K+=$@money!#!#!#! Prévisions de [SelectLocalization(Or(Or(ObjectsEqual(BUILDING.GetBuildingType, GetBuildingType('building_government_administration').Self), ObjectsEqual(BUILDING.GetBuildingType, GetBuildingType('building_construction_sector').Self)), BUILDING.GetBuildingType.IsMilitaryBuilding), 'BUILDING_UPKEEP_HEADER', 'BUILDING_EARNINGS_HEADER')] / semaine\n[ConcatIfNeitherEmpty('$PRODUCTIVITY$', '\n')][ConcatIfNeitherEmpty('$QUALIFICATIONS$', '\n')][SelectLocalization( LessThan_CFixedPoint(State.GetConstructionEfficiency, '(CFixedPoint)0'), 'CONSTRUCTION_QUEUE_STATE_CONSTRUCTION_EFFICIENCY_WARNING', '')]$TOOLTIP_DELIMITER$\n@construction! $REQUIRED_CONSTRUCTION|v0$ en [concept_construction|l] ($CONSTRUCTION_COST_CHANGE$)\n$EXPAND_BUILDING_TT_NATIONAL_MAINTENANCE$\n\n$PRODUCTION_BREAKDOWN$\n\n[STATE.GetMarketAccessStatus]\nMain-d’œuvre disponible : [State.GetNumSubsistenceWorkingAdults|Dv] [GetPopType('peasants').GetName] [SelectLocalization( GreaterThan_int64(State.GetNumUnemployedWorkingAdults, '(int64)0'), 'AND_UNEMPLOYED', '' )][ConcatIfNeitherEmpty('$PORT_INFO$', '\n')]\n\n$KEY_MODIFIER_INSTRUCTIONS$"
 CAN_EXPAND_BUILDING_TOOLTIP_FOREIGN: "[concept_foreign_investment]@foreign_investment! en [State.GetOwner.GetName][AddLocalizationIf( Not( ObjectsEqual(State.GetMarket.Self, AccessPlayer.AccessFirstMarket.Self)), 'CAN_EXPAND_BUILDING_TOOLTIP_FOREIGN_IN_FOREIGN_MARKET' )]\n\n"
 CAN_EXPAND_BUILDING_TOOLTIP_FOREIGN_IN_FOREIGN_MARKET: " (Marché étranger : [State.GetMarket.GetName])"
 AND_UNEMPLOYED: "et [State.GetNumUnemployedWorkingAdults|Dv] [concept_unemployed|l]"
 MILITARY_BUILDING_INFO: "QG : [State.GetStateRegion.GetStrategicRegion.GetName]\n"
 CONSTRUCTION_CAN_BE_FUNDED_BY_INVESTMENT_POOL: "Les [concept_budget_construction_goods|l] #P #bold peuvent#!#! être financés par le [concept_investment_pool|l] (actuellement #v [GetPlayer.GetInvestmentPool|D+]@money!#!)"
 CONSTRUCTION_TOTAL_COST_IMPACT: "#v $COST|K-$@money!#! de coût total prévu en [concept_budget_construction_goods|l]"
 CONSTRUCTION_WEEKLY_COST_IMPACT: "#v $COST|K-=$@money!#! de coût hebdomadaire en [concept_budget_construction_goods|l]"
 EXPAND_TOOLTIP_EXPAND_BUILD: "Construire"
 EXPAND_TOOLTIP_EXPAND_EXPAND: "Agrandir"
 EXPAND_TOOLTIP_EXPAND: "#header $BUILD_OR_EXPAND$ [BUILDING_TYPE.GetName] en [STATE.GetName]#!\nTaille : [BUILDING.GetExpansionLevelBreakdownDesc]\n[STATE.GetMarketAccessStatus]\nMain-d’œuvre disponible : [State.GetNumSubsistenceWorkingAdults|Dv] [GetPopType('peasants').GetName|l] et [State.GetNumUnemployedWorkingAdults|Dv] [concept_unemployed|l]"
 EXPAND_BUILDING_MODIFIERS_INSTRUCTIONS: "#instruction Cliquez#! pour #v mettre en file d'attente 1#! niveau, #i $SHORTCUT_KEY_MOD_shift$Cliquez#! pour #v $SHIFT_NUM_LEVELS$#!, #i $SHORTCUT_KEY_MOD_ctrl$Cliquez#! pour #v $CTRL_NUM_LEVELS$#!\n#instruction $SHORTCUT_KEY_MOD_alt$Cliquez#! pour #v mettre en haut#! de la [concept_construction_queue|l]"
 DOWNSIZE_BUILDING_MODIFIERS_INSTRUCTIONS: "#instruction Cliquez pour réduire la taille d’un niveau#!\n#instruction $SHORTCUT_KEY_MOD_shift$Cliquez pour réduire la taille de $SHIFT_NUM_LEVELS$ niveaux#!\n#instruction $SHORTCUT_KEY_MOD_ctrl$Cliquez pour réduire la taille de $CTRL_NUM_LEVELS$ niveaux#!"
 EXPANSION_PROFIT_IMPACT: "#header Prévisions de [SelectLocalization(Or(ObjectsEqual(BUILDING.GetBuildingType, GetBuildingType('building_government_administration').Self), ObjectsEqual(BUILDING.GetBuildingType, GetBuildingType('building_construction_sector').Self)), 'BUILDING_UPKEEP_HEADER', 'BUILDING_EARNINGS_HEADER')] en raison du nouveau niveau#!\n#v $VAL|K+=$@money!#! Prévisions de [SelectLocalization(Or(ObjectsEqual(BUILDING.GetBuildingType, GetBuildingType('building_government_administration').Self), ObjectsEqual(BUILDING.GetBuildingType, GetBuildingType('building_construction_sector').Self)), 'BUILDING_UPKEEP_HEADER', 'BUILDING_EARNINGS_HEADER')] / semaine\n(hors [Concept('concept_building_wage','$concept_building_wages$')|l])\n$TOOLTIP_DELIMITER$\n$IMPACT_DETAILS$\n\n$BUILDING_PREDICTION_DISCLAIMER$"
 EXPANSION_PRODUCTIVITY_IMPACT: "#header Prévisions de $EARNINGS_PER_EMPLOYEE$ après l'agrandissement#! : #v $VAL|+$@money!#!\n$TOOLTIP_DELIMITER$\n$IMPACT_DETAILS$\n\n$BUILDING_PREDICTION_DISCLAIMER$"
 EXPANSION_EMPLOYEES_VS_REVENUE: "Recettes annuelles prévues : #v $REVENUE|K+$@money!#!\nNombre total d’employés : #v $EMPLOYEES|vD$#!"
 EXPANSION_WAGES_IMPACT: "#v $IMPACT|K+=$@money!#! pour les salaires hebdomadaires"
 GOODS_PROFIT_CONSUMPTION: "#v [Negate_CFixedPoint('(CFixedPoint)$IMPACT$')|K+=]@money!#! pour #v $NUM_UNITS|0-$#! unités [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l][Goods.GetTextIcon] ($PRICE_CUR_ICON$@arrow_right!$PRICE_NEW_ICON$)"
 GOODS_PROFIT_CONSUMPTION_AFTER_SUBSTITUTION: "#v [Negate_CFixedPoint('(CFixedPoint)$IMPACT$')|K+=]@money!#! pour #v $NUM_UNITS|0-$#! unités [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l][Goods.GetTextIcon] ($PRICE_CUR_ICON$@arrow_right!$PRICE_NEW_ICON$ après une [concept_goods_substitution|l])"
 GOODS_PROFIT_PRODUCTION: "#v $IMPACT|K+=$@money!#! de #v $NUM_UNITS|0=+$#! unités [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l][Goods.GetTextIcon] ($PRICE_CUR_ICON$@arrow_right!$PRICE_NEW_ICON$)"
 GOODS_PROFIT_PRODUCTION_AFTER_SUBSTITUTION: "#v $IMPACT|K+=$@money!#! de #v $NUM_UNITS|0=+$#! unités [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l][Goods.GetTextIcon] ($PRICE_CUR_ICON$@arrow_right!$PRICE_NEW_ICON$ après une [concept_goods_substitution|l])"
 NO_OPPOSITION: "#bold Pas de [Concept('concept_interest_group', '$concept_interest_groups$')|l] dans l’opposition#!"
 NO_POLITICAL_MOVEMENTS: "Pas de [Concept('concept_political_movement', '$concept_political_movements$')|l]"
 IG_NO_POLITICAL_MOVEMENT: "Aucun [concept_political_movement|l] soutenu"
 NO_LAW_BEING_ENACTED: "Pas de [concept_law|l] en cours de promulgation"
 NO_INTERESTS: "Pas d’[concept_interest|l]"
 NO_POLITICAL_LOBBIES: "Aucun lobby politique"
 POLITICAL_LOBBIES: "Lobbies politiques"
 TERRAIN_TOOLTIP: "#header [Battle.GetTerrain]#!\n$TOOLTIP_DELIMITER$\n[Battle.GetTerrainDesc]"
 TERRAIN_DESC: "[concept_combat_width] : $COMBAT_WIDTH|v0%$\n[concept_risk] : $RISK|v0%$\n[concept_terrain_labels] : #v $LABELS$#!"
 CANNOT_EXPAND_BUILDING_NO_URBAN_CAP: "[BuildingType.GetName] nécessite l’[concept_urbanization|l]"
 CANNOT_EXPAND_BUILDING_AT_MAX_LEVEL: "Le bâtiment [BuildingType.GetName] ne peut pas être agrandi au-delà de sa taille maximale, qui est de $VAL|v$"
 CANNOT_EXPAND_BUILDING_AT_MAX_LEVEL_BREAKDOWN: ", ce qui s’explique par :\n$BREAKDOWN$"
 CANNOT_EXPAND_BUILDING_NOT_EXPANDABLE: "Le bâtiment [BuildingType.GetName] ne peut pas être agrandi au-delà du niveau 1 en [STATE_REGION.GetName]"
 CANNOT_EXPAND_BUILDING_NO_ARABLE_LAND: "[BuildingType.GetName] nécessite une [concept_arable_land|l]"
 CANNOT_EXPAND_BUILDING_NO_RESOURCE: "Quantité insuffisante de ressources en [State.GetName]"
 CANNOT_EXPAND_BUILDING_NOT_AVAILABLE_IN_STATE: "[STATE.GetName] ne peut pas accueillir [BUILDING_TYPE.GetName]"
 CANNOT_EXPAND_BUILDING_AT_REGION_MAX_CAP: "[BuildingType.GetName] est à capacité maximale en [STATE_REGION.GetName]"
 CANNOT_EXPAND_BUILDING_NOT_ACTIVE: "[BuildingType.GetName] n’est pas actif"
 CANNOT_EXPAND_BUILDING_NOT_BUILDABLE: "[BuildingType.GetName] ne peut pas être construit manuellement"
 CANNOT_EXPAND_BUILDING_NOT_OWNABLE: "Le bâtiment [BuildingType.GetName] ne peut pas être construit dans un État étranger"
 CANNOT_EXPAND_BUILDING_IN_PLAY_AGAINST_STATE_OWNER: "Ne peut pas investir dans [BuildingType.GetName] en étant en [concept_diplomatic_play|l] contre [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName]"
 CANNOT_EXPAND_BUILDING_STATE_HAS_NO_ACCESS_TO_GOODS: "[State.GetName] n’a aucun [concept_supply|l] en [Goods.GetName][Nbsp][Goods.GetTextIcon] pour [CombatUnitType.GetName] et ne peut pas en importer depuis le [concept_world_market|l]"
 CANNOT_EXPAND_BUILDING_IS_MONOPOLIZED: "$BUILDING_IS_MONOPOLIZED_BY$"
 FORMATION_BELONGS_TO_FOREIGN_COUNTRY: "La formation [MILITARY_FORMATION.GetName] appartient [COUNTRY.GetAltNameNoFormatting('Au')][COUNTRY.GetName]"
 EXPAND_BUILDING_WARNING_MISSING_QUALIFICATIONS: "@warning! [concept_pop_qualifications] #tooltippable #tooltip:[BUILDING.GetTooltipTag],EXPAND_BUILDING_WARNING_MISSING_QUALIFICATIONS_BREAKDOWN insuffisantes#!#! pour doter ce bâtiment d’un personnel complet (il manque $POP_TYPES$)"
 EXPAND_BUILDING_WARNING_MISSING_QUALIFICATIONS_BREAKDOWN: "#header [concept_pop_qualifications] manquantes#!\n$TOOLTIP_DELIMITER$\n[Building.GetQueueConstructionPopQualificationsWarningBreakdown]"
 EXPAND_BUILDING_WARNING_MISSING_QUALIFICATIONS_ENTRY: "Seulement $AVAILABLE|v$ des $REQUIRED|v$ [POP_TYPE.GetName|l] employables disponibles, il manque $MONTHS|v$ mois de [concept_pop_qualifications|l] au taux de croissance actuel de $MONTHLY|=v$/mois"
 EXPAND_BUILDING_WARNING_MISSING_QUALIFICATIONS_ENTRY_NO_GROWTH: "@warning! Seulement $AVAILABLE|v$ des $REQUIRED|v$ [POP_TYPE.GetName|l] employables disponibles avec #n aucune croissance mensuelle actuelle#! des [concept_pop_qualifications|l]"
 CHANGE_PRODUCTION_METHOD_WARNING_ADDITIONAL_PM_CHANGED: "@warning! Changera la méthode du $GROUP|v$ actif ($DISABLED_METHOD$ @arrow_right! $ENABLED_METHOD$)"
 CHANGE_PRODUCTION_METHOD_WARNING_GOODS_SHORTAGE: "@warning! La [Concept('concept_shortage','$concept_input_goods_shortage$')|l] en $LIST$ entraînera une pénalité sur tous les biens sortants du [concept_building|l]"
 CHANGE_PRODUCTION_METHOD_WARNING_MISSING_QUALIFICATIONS: "@warning! [concept_pop_qualifications] #tooltippable #tooltip:[BUILDING.GetTooltipTag]|[PRODUCTION_METHOD.GetTooltipTag],CHANGE_PRODUCTION_METHOD_WARNING_MISSING_QUALIFICATIONS_BREAKDOWN insuffisantes#!#! pour doter [Building.GetName] d’un personnel complet (il manque $POP_TYPES$)"
 CHANGE_PRODUCTION_METHOD_WARNING_MISSING_QUALIFICATIONS_BREAKDOWN: "#header [concept_pop_qualifications] manquantes#!\n$TOOLTIP_DELIMITER$\n[Building.GetChangeProductionMethodPopQualificationsWarningBreakdown(ProductionMethod.Self)]"
 CHANGE_PRODUCTION_METHOD_WARNING_MISSING_QUALIFICATIONS_ENTRY: "Seulement $AVAILABLE|v$ des $REQUIRED|v$ [POP_TYPE.GetName|l] [Concept('concept_pop_qualifications', 'qualifiés')] employables disponibles, il manque $MONTHS|v$ mois de [concept_pop_qualifications|l] au taux de croissance actuel de $MONTHLY|=v$/mois"
 CHANGE_PRODUCTION_METHOD_WARNING_MISSING_QUALIFICATIONS_ENTRY_NO_GROWTH: "@warning! Seulement $AVAILABLE|v$ des $REQUIRED|v$ [POP_TYPE.GetName|l] employables disponibles avec #n aucune croissance mensuelle actuelle#! des [concept_pop_qualifications|l]"
 CANNOT_JOIN_FOREIGN_MARKET: "Aucune loi sur le système économique ni aucune union douanière ne permet de rejoindre le [MARKET.GetName|l] étranger"
 NO_STATE_TRAITS: "Aucun trait d’État"
 QUICK_SELECT: "Sélection rapide"
 MOVE_SELECTED: "Déplacer la sélection"
 #MARKET is the market to merge
 MERGE_MARKET_INFO_TOOLTIP: "Fusionner le #BOLD #V [MARKET.GetName|l]#!#! avec un autre marché."
 MERGE_MARKET_NEGATIVE_INFO_TOOLTIP: "Impossible de fusionner le #BOLD #V [MARKET.GetName|l]#!#! avec un autre marché."
 #STATE is the selected state, MARKET the market to merge to
 MERGE_MARKETS_INFO_TOOLTIP: "Fusionner le #BOLD #V [STATE.GetMarket.GetName|l]#!#! avec le #BOLD #V [MARKET.GetName|l]#!#!"
 MERGE_MARKETS_NEGATIVE_INFO_TOOLTIP: "Impossible de fusionner le #BOLD #V [STATE.GetMarket.GetName|l]#!#! avec le #BOLD #V [MARKET.GetName|l]#!#! !"
 RETARGET_LINK_TOOLTIP: "Retirer la liaison en #BOLD #V [STATE.GetName]#!#! du #BOLD #V [STATE.GetMarket.GetName|l]#!#! et le lier à un autre marché."
 RETARGET_LINK_FAIL_TOOLTIP: "Impossible de retirer la liaison en #BOLD #V [STATE.GetName]#!#!."
 RETARGET_LINK_TO_TOOLTIP: "Retirer la liaison en #BOLD #V [STATE.GetName]#!#! du #BOLD #V [STATE.GetMarket.GetName|l]#!#! et le lier au #BOLD #V [MARKET.GetName|l]#!#!."
 RETARGET_LINK_TO_FAIL_TOOLTIP: "Impossible de faire la liaison en #BOLD #V [STATE.GetName]#!#! au #BOLD #V [MARKET.GetName|l]#!#!"
 MARKET_CONTROLLER_TITLE: "#title Contrôleur de marché#!\n#bold [Market.GetOwner.GetName]#!"
 TOOLTIP_HOVER_STRATEGIC_REGION: "#V [STATE.GetName]#! (#V [STATE.GetCountry.GetName]#!)\n[concept_strategic_region] : #V $STRATEGIC_REGION$#!"
 #Budget panel
 BUDGET: "Budget"
 BUDGET_PANEL_TITLE: "#BOLD Budget#!"
 WEEKLY_BALANCE: "Solde hebdomadaire : [AccessPlayer.PredictWeeklyBalanceWithEconomyHealthHint]"
 BUDGET_TAB_OVERVIEW: "Vue d’ensemble"
 STATES: "États"
 BUDGET_TAB_ASSETS: "Actifs"
 POOLS: "Fonds"
 LAND_TAX: "[concept_budget_land_taxes]"
 HEATHEN_TAX: "[concept_budget_heathen_taxes]"
 PER_CAPITA_TAX: "[concept_budget_per_capita_taxes]"
 NATIONAL_REVENUE: "Recettes nationales"
 BUDGET_TAXATION_LEVEL: "[Concept('concept_taxes','$concept_tax_level$')]"
 BUDGET_INCOME_TAXES: "[concept_budget_income_taxes]"
 BUDGET_POLL_TAXES: "[concept_budget_poll_taxes]"
 BUDGET_CONSUMPTION_TAXES: "[concept_budget_consumption_taxes]"
 BUDGET_ADDITIONAL_INCOME: "[concept_budget_additional_income]"
 BUDGET_ADDITIONAL_EXPENSES: "[concept_budget_additional_expenses]"
 BUDGET_DIVIDENDS_TAXES: "[concept_budget_dividends_taxes]"
 BUDGET_MINTING: "[concept_budget_minting]"
 BUDGET_TARIFFS: "[concept_tariffs]"
 BUDGET_INVESTMENT_INCOME: "[concept_budget_investment_income]"
 BUDGET_DIPLOMATIC_PACTS: "[concept_budget_diplomatic_pacts]"
 NATIONAL_EXPENSES: "Dépenses nationales"
 BUDGET_GOODS_FOR_GOVERNMENT_BUILDINGS: "[concept_budget_goods_for_government_buildings]"
 BUDGET_GOODS_FOR_MILITARY_BUILDINGS: "[concept_budget_goods_for_military_buildings]"
 BUDGET_GOVERNMENT_WAGES: "[concept_budget_government_wages]"
 BUDGET_MILITARY_WAGES: "[concept_budget_military_wages]"
 BUDGET_GOVERNMENT_SLAVES: "[concept_budget_government_slaves]"
 BUDGET_MILITARY_SLAVES: "[concept_budget_military_slaves]"
 BUDGET_SUBSIDIES: "[concept_subsidies]"
 BUDGET_SUBVENTIONS: "[concept_subventions]"
 BUDGET_WELFARE_PAYMENTS: "[concept_welfare_payments]"
 BUDGET_INTEREST: "[concept_budget_interest]"
 BUDGET_CONSTRUCTION_GOODS: "[concept_budget_construction_goods]"
 PAUSE_ALL_CONSTRUCTION_BUTTON: "Suspendre tout"
 PAUSE_ALL_CONSTRUCTION_TOOLTIP_HEADER: "#header Suspendre les constructions#!"
 RESUME_ALL_CONSTRUCTION_BUTTON: "Reprendre tout"
 RESUME_ALL_CONSTRUCTION_TOOLTIP_HEADER: "#header Reprise des constructions#!"
 CHANGE_ALL_CONSTRUCTION_SPEED_TOOLTIP_HEADER: "#header Changer tout le $FR_building_construction_sector$ pour [PRODUCTION_METHOD.GetName|l]#!"
 TAXES: "Impôts"
 EXPENSES: "Dépenses"
 invalid_market: "Pas un marché valide"
 diplomatic_play_invalid_state: "Région étatique non valide"
 set_decree_select_state_tooltip: "[concept_decree] $NAME|v$ en [STATE.GetName]"
 MANAGE_MARKET_BUTTON_LABEL: "Gérer"
 MANAGE_MARKET_BUTTON_TOOLTIP: "Gérer le marché"
 MANAGE_MARKET_BUTTON_DISABLED_TOOLTIP: "$MANAGE_MARKET_BUTTON_TOOLTIP$\n@simple_box! Est le contrôleur du marché"
 TRADING_TITLE: "#title Demandes commerciales actuelles dans le marché $MARKET$#!\n"
 IMPORTING_TITLE: "\n#title Demande actuellement non satisfaite dans le marché $MARKET$#!\n"
 NO_UP_TO_DATE_MARKET_INFO: "#N Il n’existe pas d’informations à jour sur les biens de ce marché#!"
 MARKET_GOOD_SORT: "Bien"
 MARKET_PRODUCE_SORT: "Produit"
 MARKET_CONSUME_SORT: "Consomme"
 MARKET_SELL_SORT: "Ordres de vente"
 MARKET_BUY_SORT: "Ordres d’achat"
 MARKET_PRICE_SORT: "Prix"
 FRONT_PANEL_DEBUG_INFO: "#title Informations de débogage#! :\nID : #variable [Front.GetID]#!\nThéâtres initiateurs : [Front.GetInitiatorTheatersDebugDesc]\nThéâtres cibles : [Front.GetTargetTheatersDebugDesc]"
 FRONT_PANEL_FIRST_UNITS: "Unités du premier camp"
 FRONT_PANEL_SECOND_UNITS: "Unités du second camp"
 FRONT_PANEL_NO_PRESENT_GENERALS: "Aucun [concept_general|l] présent dans ce camp"
 FRONT_PANEL_NO_PRESENT_FORMATIONS: "Aucune [concept_military_formation|l] présente dans ce camp"
 FRONT_PANEL_NO_PRESENT_ARMIES: "Aucune [concept_army|l] présente dans ce camp"
 SAVING_GAME: "Sauvegarde la partie"
 BUILDING_COSTS: "Coûts de construction"
 TARGET_STRENGTH: "Points de force de la cible pour l’armée"
 STRATEGIC_GOODS: "Biens stratégiques"
 WEEKLY_COST_STRATEGIC_REGION_TOOLTIP: "#header Coût hebdomadaire des ressources stratégiques#!"
 PDX_TOOLTIP_SHORTCUT: "Raccourci : #header $MODS$$SHORTCUT$#!"
 PDX_TOOLTIP_INPUT_ACTION: "Raccourci : $INPUT_ACTION_NAME|v$ ($BOUND_INPUT_1|v$[AddTextIf(Not(StringIsEmpty('$BOUND_INPUT_2$')), ' ou $BOUND_INPUT_2|v$')])"
 SHORTCUT_KEY: "$KEY$"
 SHORTCUT_KEY_MOD_shift: "Shift+"
 SHORTCUT_KEY_MOD_alt: "Alt+"
 SHORTCUT_KEY_MOD_ctrl: "Ctrl+"
 SHORTCUT_KEY_MOD_os: "Os+"
 KEY_MB4: "Souris 4"
 KEY_MOUSE_X1: "Souris 4"
 KEY_MOUSE_X2: "Souris 5"
 KEY_ESCAPE: "Échap"
 KEY_TAB: "Tabulation"
 KEY_RETURN: "Retour / Entrée"
 KEY_BACKSPACE: "Retour arrière"
 KEY_DEL: "Suppr"
 KEY_LSHIFT: "Shift gauche"
 KEY_LCTRL: "Ctrl gauche"
 KEY_LOS: "OS gauche"
 KEY_LALT: "Alt gauche"
 KEY_SPACE: "Espace"
 KEY_RALT: "Alt droit"
 KEY_ROS: "OS droit"
 KEY_RCTRL: "Ctrl droit"
 KEY_RSHIFT: "Shift droit"
 KEY_SHIFT: "Shift"
 KEY_CTRL: "Ctrl"
 KEY_ALT: "Alt"
 KEY_EQUALS: "="
 KEY_MINUS: "-"
 KEY_LBRACKET: "["
 KEY_RBRACKET: "]"
 KEY_APOSTROPHE: " "
 KEY_SLASH: "/"
 KEY_BACKSLASH: "\\"
 KEY_SEMICOLON: ";"
 KEY_PERIOD: "."
 KEY_COMMA: ","
 KEY_UP: "Flèche du haut"
 KEY_LEFT: "Flèche gauche"
 KEY_DOWN: "Flèche du bas"
 KEY_RIGHT: "Flèche droite"
 KEY_KP_0: "Pavé num 0"
 KEY_KP_1: "Pavé num 1"
 KEY_KP_2: "Pavé num 2"
 KEY_KP_3: "Pavé num 3"
 KEY_KP_4: "Pavé num 4"
 KEY_KP_5: "Pavé num 5"
 KEY_KP_6: "Pavé num 6"
 KEY_KP_7: "Pavé num 7"
 KEY_KP_8: "Pavé num 8"
 KEY_KP_9: "Pavé num 9"
 KEY_KP_PLUS: "Pavé num +"
 KEY_KP_MINUS: "Pavé num -"
 RAW_MATERIALS: "Mat. prem."
 INDUSTRIAL_GOODS: "Industriels"
 CONSUMER_GOODS: "De consommation"
 MILITARY_GOODS: "Militaires"
 LUXURY_GOODS: "De luxe"
 PREVIOUS_WEEK_MODIFIERS: "#title Modificateurs de la semaine précédente#!"
 MODIFIER_ENTRY_TEXT: "[ModifierEntry.GetFormattedValue] [ModifierEntry.GetName]"
 MODIFIER_ENTRY_TOOLTIP: "#header [ModifierEntry.GetName]#! : [ModifierEntry.GetFormattedValue]\n$TOOLTIP_DELIMITER$\n[ModifierEntry.GetBreakdown]\n[ModifierEntry.GetDesc]"
 MODIFIER_ENTRY_VALUE_WITH_BREAKDOWN: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE$#!#!"
 MODIFIER_DEFINITION_NAME: "#tooltippable_name #tooltip:$DESCRIPTION_TAG$ $NAME$#!#!"
 FULL_MODIFIER_ENTRY_DESC: "$VALUE$ en raison de : $NAME$"
 BALANCE_ITEM: "[TradeOverviewEntry.GetGoods.GetCompareIconAgainstBasePriceNoFormatting(TradeOverviewEntry.GetGoods.GetMarketPrice)] "
 RELATIONS_TOOLTIP: "#header $LABEL$[concept_relations]#!\nLes [concept_relations|l] entre [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName] sont #BOLD $LABEL|l$#! (#variable $VAL|+=$#!)$PROGRESS$"
 INFAMY_TOOLTIP: "#header [concept_infamy] [COUNTRY.GetAltAdjective('FS')|l] : #BOLD $INFAMY_LABEL$#! (#variable $INFAMY|-1$#!)#![ConcatIfNeitherEmpty( '\n$TOOLTIP_DELIMITER$\n', Concatenate('$INFAMY_DECAY$', ConcatIfNeitherEmpty('\n\nEffets :\n','$INFAMY_EFFECTS$')))]"
 INFAMY_DECAY_RATE: "Déclin de l’[concept_infamy|l] : #P #bold -$VAL|3$#!#! / semaine\n$TAB$Déclin de base : #P #bold -$YEARLYBASE|3$#!#!  / an$MITIGATION$"
 TENSION_TOOLTIP: "Le niveau de [concept_tension|l] entre nous et [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] est #BOLD $LABEL$#! (#variable $VAL|-$#!)$DECAY$"
 TENSION_DECAY_RATE: "Déclin de la [concept_tension|l] : #P #bold -$VAL|3$#!#! / semaine\n$TAB$Déclin de base : #P #bold -$YEARLYBASE|3$#!#!  / an$MITIGATION$"
 RELATIONS_PROGRESS: "Progrès vers de meilleures relations : $VAL|v%0$"
 RELATIONS_DECAY: "Déclin des relations : #N #bold -$VAL|-3$#!#! / semaine"
 lower: "[concept_lower_strata] @lower_strata!"
 middle: "[concept_middle_strata] @middle_strata!"
 upper: "[concept_upper_strata] @upper_strata!"
 LOWER_NO_ICON: "[concept_lower_strata]"
 MIDDLE_NO_ICON: "[concept_middle_strata]"
 UPPER_NO_ICON: "[concept_upper_strata]"
 BULK_CHANGE_HEADER: "Changer $MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_FORMATIONS$"
 BULK_CHANGE_MOBILIZATION_OPTIONS: "Changer les [Concept('concept_mobilization_option','$concept_mobilization_options$')|l] pour $MILITARY_FORMATION_PANEL_TITLE_MULTIPLE_FORMATIONS$"
 MERGE_SELECTED_FORMATIONS_TOOLTIP: "#header Fusionner les [Concept('concept_army','$concept_armies$')|l] sélectionnées#!\n$TOOLTIP_DELIMITER$\n[GetDesc(MergeSelectedFormations)]" #[[ConcatIfNeitherEmpty('\n', )]
 SET_COMMANDER_ORDER_IN_SELECTED_FORMATIONS_TOOLTIP: "#header Ordre [CommanderOrderType.GetName] pour [GetNumCommandersInSelectedFormations] [Concept('concept_commander','$concept_commanders$')|l]#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(GreaterThan_int32(GetNumCommandersInSelectedFormationsWithOrderActive(CommanderOrderType.Self), '(int32)0'), 'ORDER_ALREADY_ACTIVE_FOR_X_COMMANDERS'))][ConcatIfNeitherEmpty('\n', AddLocalizationIf(GreaterThan_int32(GetNumCommandersInSelectedFormationsWithOrderNext(CommanderOrderType.Self), '(int32)0'), 'ORDER_NEXT_FOR_X_COMMANDERS'))]\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(AddLocalizationIf(GreaterThan_int32(GetNumCommandersInSelectedFormationsWithOrderBlocked(CommanderOrderType.Self), '(int32)0'), 'ORDER_BLOCKED_FOR_X_COMMANDERS'), '\n\n')][ConcatIfNeitherEmpty(GetDesc(SetCharacterOrderForSelectedFormations(CommanderOrderType.Self)), '\n\n')]$DATA_COMMANDER_ORDER_TYPE_NAME_TOOLTIP$"
 ORDER_ALREADY_ACTIVE_FOR_X_COMMANDERS: "Actif pour [GetNumCommandersInSelectedFormationsWithOrderActive(CommanderOrderType.Self)|vu] [Concept('concept_commander','$concept_commanders$')|l]"
 ORDER_NEXT_FOR_X_COMMANDERS: "Ordre suivant pour [GetNumCommandersInSelectedFormationsWithOrderNext(CommanderOrderType.Self)|v] [Concept('concept_commander','$concept_commanders$')|l]"
 ORDER_BLOCKED_FOR_X_COMMANDERS: "Activation impossible pour [GetNumCommandersInSelectedFormationsWithOrderBlocked(CommanderOrderType.Self)|vn] [Concept('concept_commander','$concept_commanders$')|l]"
 NUM_ACTIVE_ORDERS_FOR_SELECTED: "[GetNumCommandersInSelectedFormationsWithOrderActive(CommanderOrderType.Self)|vu]"
 NUM_ACTIVE_AND_NEXT_ORDERS_FOR_SELECTED: "[AddLocalizationIf(NotZero(GetNumCommandersInSelectedFormationsWithOrderActive(CommanderOrderType.Self)), 'ACTIVE_ORDERS_FOR_SELECTED')][AddLocalizationIf(NotZero(GetNumCommandersInSelectedFormationsWithOrderNext(CommanderOrderType.Self)), 'NEXT_ORDERS_FOR_SELECTED')]"
 ACTIVE_ORDERS_FOR_SELECTED: "[GetNumCommandersInSelectedFormationsWithOrderActive(CommanderOrderType.Self)|vu]"
 NEXT_ORDERS_FOR_SELECTED: " ([GetNumCommandersInSelectedFormationsWithOrderNext(CommanderOrderType.Self)|v])"
 DIVIDENDS_FROM_GOVERNMENT_SHARES: "[concept_government_dividends]"
 LOSSES_FROM_GOVERNMENT_SHARES: "Pertes des [Concept('concept_building','$concept_buildings$')|l] nationalisés"
 GOVERNMENT_DIVIDENDS_MULT_DESC: "Efficacité des dividendes gouvernementaux : #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|%+$#!#!"
 GOVERNMENT_DIVIDENDS_WASTE_DESC: "Multiplié par #v x$MULTIPLIER$#! en raison des pertes :"
 TAX_INCOME_BREAKDOWN: "#bold Recettes nationales :#! #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_INCOME_BREAKDOWN,TotalIncomeTooltip #variable [GetPlayer.PredictWeeklyFixedIncome|D+=]@money!#!#!#!"
 TAX_INCOME_INCOME: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],INCOME_TAXES_BREAKDOWN,TaxIncomeTooltip [GetPlayer.GetIncomeTaxIncome|D+=]@money!#!#! des [concept_budget_income_taxes|l]"
 TAX_INCOME_POLL: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],POLL_TAXES_BREAKDOWN,TaxPollTooltip [GetPlayer.GetPollTaxIncome|D+=]@money!#!#! de la [concept_budget_poll_taxes|l]"
 TAX_INCOME_CONSUMPTION: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],CONSUMPTION_TAXES_BREAKDOWN,ConsumptionTaxTooltip [GetPlayer.PredictConsumptionTaxes|D+=]@money!#!#! des [concept_budget_consumption_taxes|l]"
 TAX_INCOME_DIVIDENDS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],DIVIDENDS_TAXES_BREAKDOWN,DividendsTaxTooltip [GetPlayer.PredictDividendsTaxes|D+=]@money!#!#! des [concept_budget_dividends_taxes|l]"
 TAX_INCOME_ADDITIONAL: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],ADDITIONAL_INCOME_BREAKDOWN,AdditionalIncomeTooltip [GetPlayer.GetModifier.GetValueFor('country_tax_income_add')|K+=]@money!#!#! du [concept_budget_additional_income|l]"
 TAX_INCOME_MINTING: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],MINTING_BREAKDOWN,MintingTooltip [GetPlayer.PredictMinting|D+=]@money!#!#! du [concept_budget_minting|l]"
 TAX_INCOME_INVESTMENT: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],INVESTMENT_INCOME_BREAKDOWN,InvestmentIncomeTooltip [GetPlayer.GetInvestmentIncome|D+=]@money!#!#! du [concept_budget_investment_income|l]"
 TAX_INCOME_DIPLOMATIC: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],DIPLOMATIC_PACTS_INCOME_BREAKDOWN,DiplomaticPactsIncomeTooltip [GetPlayer.PredictDiplomaticPactsIncome|D+=]@money!#!#! des [concept_budget_diplomatic_pacts|l]"
 TAX_INCOME_POWER_BLOC: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],POWER_BLOC_INCOME_BREAKDOWN,PowerBlocIncomeTooltip [GetPlayer.GetPowerBlocIncomeRaw|D+=]@money!#!#! du [concept_budget_power_bloc|l]"
 TAX_INCOME_TARIFFS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],TARIFFS_BREAKDOWN,TariffsTooltip [GetPlayer.PredictTariffs|D+=]@money!#!#! des [concept_tariffs|l]"
 TAX_INCOME_GOVERNMENT_SHARE_DIVIDENDS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],GOVERNMENT_SHARE_DIVIDENDS_BREAKDOWN,GovernmentShareDividendsTooltip [GetPlayer.PredictGovernmentShareDividends|D+=]@money!#!#! en [concept_government_dividends|l]"
 INVESTMENT_POOL: "[concept_investment_pool] : #tooltippable #tooltip:[GetPlayer.GetTooltipTag],INVESTMENT_POOL_BREAKDOWN,InvestmentPoolTooltip #v [GetPlayer.GetInvestmentPool|D+]@money!#!#!#! (Changement : #v [GetPlayer.GetInvestmentPoolChange|D+=]@money!#!)"
 INVESTMENT_POOL_BREAKDOWN: "#header [concept_investment_pool]#!\nActuel : #v [GetPlayer.GetInvestmentPool|D+]@money!#!\nChangement hebdomadaire : #v [GetPlayer.GetInvestmentPoolChange|D+=]@money!#!\n$TOOLTIP_DELIMITER$\n$INVESTMENT_POOL_CHANGE$"
 INVESTMENT_POOL_CHANGE: "[GetPlayer.GetInvestmentPoolChangeFromConstructionDesc]\n[GetPlayer.GetInvestmentPoolChangeFromInvestmentDesc]"
 INVESTMENT_POOL_CHANGE_FROM_CONSTRUCTION: "#bold Nouvelle [concept_construction|l] :#! #v $CHANGE|D+$@money!#!"
 INVESTMENT_POOL_CHANGE_FROM_CONSTRUCTION_EMPTY: "Pas de nouvelle [concept_construction|l] utilisant le fonds d’investissement : #v $CHANGE|D+=$@money!#!"
 INVESTMENT_POOL_CHANGE_FROM_INVESTMENT: "[concept_reinvestment] : #v #tooltippable #tooltip:[GetPlayer.GetTooltipTag],INVESTMENT_POOL_SOURCES_BREAKDOWN $CHANGE|D+=$#!#!@money!#!\nTous les investissements sont multipliés par #v x$MULTIPLIER$#! en raison du [concept_gdp|l] [GetPlayer.GetAltAdjective('MS')|l] de [GetPlayer.GetGDP|Dv]@money!"
 INVESTMENT_POOL_CHANGE_FROM_INVESTMENT_EMPTY: "Aucune source d’investissement : #v $CHANGE|D+=$@money!#!"
 INVESTMENT_POOL_SOURCES_BREAKDOWN: "#header [Concept('concept_building', '$concept_buildings$')] ajoutant de l’[concept_money|l] au [concept_investment_pool|l]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetInvestmentPoolChangeFromInvestmentBreakdown]"
 INVESTMENT_FROM_BUILDING_DETAIL: "[BuildingType.GetName] : #N #variable $VAL|D+$@money!#!#!"
 CURRENT_INVESTMENT_POOL: "[concept_investment_pool] : #v [GetPlayer.GetInvestmentPool|D+]@money!#! ([GetPlayer.GetInvestmentPoolChange|=+D])"
 NEXT_PRIVATE_CONSTRUCTION: "[GetPlayer.GetInvestmentPoolPredictedNextBuildingDesc]"
 NO_NEXT_PRIVATE_CONSTRUCTION_OTHER_REASON: "Aucune [concept_private_construction|l] potentielle dans laquelle investir"
 NO_NEXT_PRIVATE_CONSTRUCTION_NO_INFRASTRUCTURE: "Aucun [concept_state] ne possède à la fois l’[concept_infrastructure|l] suffisante et la [concept_workforce|l] disponible pour de nouvelles [Concept('concept_private_construction', '$concept_private_constructions$')|l]"
 NO_NEXT_PRIVATE_CONSTRUCTION_NO_CONSTRUCTION_SECTOR: "Un [GetBuildingType('building_construction_sector').GetName|l] est nécessaire pour soutenir des [Concept('concept_private_construction', '$concept_private_constructions$')|l]"
 INVESTMENT_POOL_PRIVATIZING_NEXT_BUILDING_WITH_INVESTOR: "[BUILDING_TYPE.GetName] en [STATE.GetName] [Concept('concept_privatize','privatisera')|l] [TARGET_BUILDING_TYPE.GetName] en [TARGET_STATE.GetName]\nStatut : $STATUS$"
 INVESTMENT_POOL_PRIVATIZING_NEXT_BUILDING: "[Concept('concept_privatize','Privatisera')] [BUILDING_TYPE.GetName] en [STATE.GetName]\nStatut : $STATUS$"
 INVESTMENT_POOL_NEXT_BUILDING_WITH_INVESTOR: "[BUILDING_TYPE.GetName] en [STATE.GetName] agrandira [TARGET_BUILDING_TYPE.GetName] en [TARGET_STATE.GetName]\n$STATUS$"
 INVESTMENT_POOL_NEXT_BUILDING: "Agrandira [BUILDING_TYPE.GetName] en [STATE.GetName]\nStatut : $STATUS$"
 INVESTMENT_POOL_NEXT_BUILDING_WAITING_FOR_FUNDING: "#b En attente que des fonds soient disponibles (#tooltippable #tooltip:$BREAKDOWN_TAG$ $PERCENTAGE|v%0$#!#!)#!"
 INVESTMENT_POOL_NEXT_BUILDING_WAITING_FOR_QUEUE: "#b En attente de l’achèvement d’autres [Concept('concept_private_construction', '$concept_private_constructions$')|l]#!"
 INVESTMENT_POOL_NEXT_BUILDING_READY: "#p Prêt pour la construction#!"
 INVESTMENT_POOL_NEXT_PRIVATIZATION_READY: "#p Prêt pour la privatisation#!"
 INVESTMENT_POOL_NEXT_BUILDING_FUNDING_DESC: "#header Financement pour [BUILDING_TYPE.GetName] en [STATE.GetName] : $FUNDING|v%$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 INVESTMENT_POOL_PRIVATIZATION_COST: "Coût pour [concept_privatize|l] un niveau de [BUILDING.GetName] : $COST|vD$@money!"
 INVESTMENT_POOL_NEXT_BUILDING_AVAILABLE_TOTAL_FUNDS: "$CURRENT|vD$@money! épargnés dans le [concept_investment_pool|l] avec $NEEDED|vD$@money! nécessaires pour les [Concept('concept_private_construction', '$concept_private_constructions$')|l] actuellement en file d’attente résulte en $AVAILABLE|vD$@money! fonds épargnés disponibles"
 INVESTMENT_POOL_NEXT_BUILDING_AVAILABLE_WEEKLY_FUNDS: "$CURRENT|vD$@money! versés chaque semaine dans le [concept_investment_pool|l] avec $NEEDED|vD$@money! nécessaires pour les [Concept('concept_private_construction', '$concept_private_constructions$')|l] actuellement en file d’attente résulte en $AVAILABLE|vD$@money! fonds hebdomadaires disponibles"
 INVESTMENT_POOL_NEXT_BUILDING_NO_AVAILABLE_FUNDS: "@information! Tous les fonds collectés et hebdomadaires du [concept_investment_pool|l] sont actuellement alloués à d’autres projets"
 INVESTMENT_POOL_NEXT_FRACTION_HANDLED_BY_TOTAL_FUNDS: "$FRACTION|%0v$ du coût total de construction ($COST|vD$@money!) sont couverts par les fonds disponibles épargnés dans le [concept_investment_pool|l]"
 INVESTMENT_POOL_NEXT_FRACTION_HANDLED_BY_WEEKLY_FUNDS: "$FRACTION|%0v$ du coût de construction hebdomadaire ($COST|vD$@money!) sont couverts par les fonds hebdomadaires disponibles versés au [concept_investment_pool|l]"
 INVESTMENT_POOL_TOTAL_FRACTION: "@information! Une [concept_private_construction|l] est considérée comme financée lorsque la somme combinée de sa couverture de coût hebdomadaire et de sa couverture de coût total est de $REQUIRED|%v0$ (actuellement $TOTAL|%v0$). Le pourcentage de financement peut fluctuer en fonction de facteurs tels que le prix actuel des [Concept('concept_good', '$concept_goods$')|l] de construction."
 INVESTMENT_POOL_PREVIOUS_INVESTMENTS_DESC: "#header [Concept('concept_private_construction', '$concept_private_constructions$')] précédentes et [Concept('concept_privatize', '$concept_privatizations$')|l]#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 INVESTMENT_POOL_NO_PREVIOUS_INVESTMENTS: "Aucun investissement précédent"
 INVESTMENT_POOL_PREVIOUS_PRIVATIZATION: "$EFFECT_LIST_BULLET$[BUILDING_TYPE.GetName] en [STATE.GetName] privatisé [TARGET_BUILDING_TYPE.GetName] en [TARGET_STATE.GetName] le $DATE|v$"
 INVESTMENT_POOL_PREVIOUS_CONSTRUCTION: "$EFFECT_LIST_BULLET$[BUILDING_TYPE.GetName] en [STATE.GetName] construit [TARGET_BUILDING_TYPE.GetName] en [TARGET_STATE.GetName] le $DATE|v$"
 TOTAL_INCOME_BREAKDOWN: "[GetPlayer.GetIncomeBreakdown]"
 TOTAL_EXPENSES_BREAKDOWN: "[GetPlayer.GetExpensesBreakdown]"
 BUILDING_GROUP_LAW_HEADER: "[Law.GetName] permet de financer les éléments suivants à l’aide du [concept_investment_pool|l] :"
 INTEREST_EXPENSE_TOOLTIP: "#header Intérêt#!\nTotal : #N -[GetPlayer.GetInterestPayment|D-]@money!"
 POLL_TAXES_BREAKDOWN: "#tooltip_header [concept_budget_poll_taxes]#!\nTotal : #v [GetPlayer.GetPollTaxIncome|K+=]@money!#!"
 INCOME_TAXES_BREAKDOWN: "#tooltip_header [concept_budget_income_taxes]#!\nTotal : #v [GetPlayer.GetIncomeTaxIncome|K+=]@money!#!"
 INCOME_TAX_RATE: "Le taux d’impôt sur le revenu de #v $VAL|+%0$#! s’explique par :$BASE_INCOME_TAX_RATE_BREAKDOWN$$TAXCOLLECTION_EFFICIENCY_BREAKDOWN$"
 POP_INCOME_TAX_RATE: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $VAL|%1$#!#!#! d’[concept_budget_income_taxes|l] : #N #bold -$TAX_LOSS|D$@money!#!#!"
 POP_DIVIDEND_TAX_RATE: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $VAL|%1$#!#!#! [concept_budget_dividends_taxes|l] : #N #bold -$TAX_LOSS|D$@money!#!#!"
 POP_PER_CAPITA_TAX: "[concept_budget_per_capita_taxes] : #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #N #bold -$TAX_LOSS|D$@money!#!#!#!#!"
 POP_LAND_TAX: "[concept_budget_land_taxes] : #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #N #bold -$TAX_LOSS|D$@money!#!#!#!#!"
 POP_HEATHEN_TAX: "[concept_budget_heathen_taxes] : #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #N #bold -$TAX_LOSS|D$@money!#!#!#!#!"
 POP_CONSUMPTION_TAX: "[concept_budget_consumption_taxes] : #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #N #bold -$TAX_LOSS|D$@money!#!#!#!#!"
 POP_CONSUMPTION_TAX_BREAKDOWN: "#header [concept_budget_consumption_taxes]#!\n$BREAKDOWN$"
 POP_CONSUMPTION_TAX_ENTRY: "[Goods.GetName] : #N #bold -$AMOUNT|D$@money!#!#!#!#!"
 ECONOMIC_CONTRIBUTION: "Apport économique : $VAL|v%0$"
 TAXATION_BREAKDOWN: "#header Imposition#!\nLe niveau d’imposition total de #variable $VAL|%1$#! s’explique par :\n$TAB$$STATE_TAX_MODIFIER$\n$TAB$$BREAKDOWN$"
 ECONOMIC_DEPENDENCE_ON_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $LABEL$ ($VALUE|1v$)#!#!"
 ECONOMIC_DEPENDENCE_GDP_RATIO_SECTION: "$VALUE|=v1$ de #tooltippable #tooltip:$TOOLTIP_TAG$ $BASE_VALUE|%v1$#!#! du [concept_gdp] [COUNTRY.GetAltAdjectiveNoFlag('MS')|l] détenu par [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetNameNoFormatting]"
 ECONOMIC_DEPENDENCE_MARKET_GDP_COMPARISON_SECTION: "$VALUE|=v1$ en raison de la différence de $BASE_VALUE|=v0%$ de [concept_gdp] entre [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetNameNoFormatting] ([COUNTRY.GetGDP|Dv]@money!) et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetNameNoFormatting] ([TARGET_COUNTRY.GetGDP|Dv]@money!)"
 ECONOMIC_DEPENDENCE_POP_GOODS_DEPENDENCE_SECTION: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VALUE|=v1$#!#! en raison des [concept_buy_orders|l] [COUNTRY.GetAltAdjectiveNoFormatting('MP')|l] non satisfaits et comblés par [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetNameNoFormatting]"
 ECONOMIC_DEPENDENCE_TRADE_DEPENDENCE_SECTION: "$VALUE|=v1$ en raison de la valeur du commerce #tooltippable #tooltip:$BREAKDOWN_TAG$ ($BASE_VALUE|Dv$@money!)#!#! avec [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetNameNoFlag]"
 ECONOMIC_DEPENDENCE_ON_TOOLTIP: "#header [concept_economic_dependence] [COUNTRY.GetAltAdjectiveNoFlag('FS')|l] à l’égard [TARGET_COUNTRY.GetAltNameNoFormatting('Du')][TARGET_COUNTRY.GetName]#!\nValeur : [GetEconomicDependenceOnLabel('(CFixedPoint)$VALUE$')|v] ($VALUE|v1$)\n$TOOLTIP_DELIMITER$\n[SelectLocalization(StringIsEmpty('$BREAKDOWN$'),'ECONOMIC_DEPENDENCE_ON_NO_BREAKDOWN','$BREAKDOWN$')]"
 ECONOMIC_DEPENDENCE_ON_NO_BREAKDOWN: "Aucun facteur contribuant à la [concept_economic_dependence|l]."
 ECONOMIC_DEPENDENCE_LABEL_0: "Autonome"
 ECONOMIC_DEPENDENCE_LABEL_1: "Importante"
 ECONOMIC_DEPENDENCE_LABEL_2: "Entremêlée"
 ECONOMIC_DEPENDENCE_LABEL_3: "Tributaire"
 ECONOMIC_DEPENDENCE_LABEL_4: "Dépendante"
 ECONOMIC_DEPENDENCE_LABEL_5: "Contrôlée"
 GOODS_DEPENDENCE_INSUFFICIENCE_SATISFIED_SECTION_HEADER: "$VALUE|vD$@money! équivalent à la valeur des demandes non satisfaites à l’échelle nationale et comblées par [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName] (par rapport au [concept_gdp|l] hebdomadaire de [COUNTRY.GetWeeklyGDP|vD]@money!)"
 GOODS_DEPENDENCE_DOMESTIC_SUFFICIENCE_SECTION_HEADER: "$VALUE|v0$@money! équivalent à la valeur des demandes satisfaites à l’échelle nationale"
 GOODS_DEPENDENCE_INSUFFICIENCE_SATISFIED_ENTRY: "[Goods.GetName][Goods.GetTextIcon] – $VALUE|vD$@money! ($AMOUNT|vD$)"
 GOODS_DEPENDENCE_DOMESTIC_SUFFICIENCE_ENTRY: "[Goods.GetName][Goods.GetTextIcon] – $VALUE|v0$@money! ($AMOUNT|v0$)"
 GOODS_DEPENDENCE_BREAKDOWN: "#indent_newline:3 $INSUFFICIENCE_SATISFIED_HEADER$\n$INSUFFICIENCE_BREAKDOWN$#!"
 GOODS_DEPENDENCE_TOOLTIP: "#header Dépendance de la population [COUNTRY.GetAltAdjective('FS')|l] en termes de [concept_good_consumption|l] à l’égard [TARGET_COUNTRY.GetAltNameNoFormatting('Du')][TARGET_COUNTRY.GetName]#!\nValeur : $VALUE|%1v$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$\n\n@information! La dépendance en termes de consommation mesure la demande de consommation à laquelle l’industrie nationale d’un pays ne peut pas répondre, et qui est satisfaite par un autre pays sur le même marché. La valeur de la dépendance dépend du prix des biens fournis sur le marché et de leur part dans la production totale du marché de ces biens. Cette valeur est ensuite comparée au PIB hebdomadaire du pays."
 CONSUMPTION_TAXES_BREAKDOWN: "[GetPlayer.GetConsumptionTaxesDesc]"
 CONSUMPTION_TAXES: "#tooltip_header Impôts de consommation#!\nTotal : #v $VAL|K+=$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 CONSUMPTION_TAXES_GOODS_ENTRY: "#variable $VAL|K+$@money!#! [GOODS.GetCustom('FR_Goods_De')][GOODS.GetName|l]"
 DIVIDENDS_TAXES_BREAKDOWN: "#tooltip_header Impôts sur les dividendes#!\nTotal : #v [GetPlayer.PredictDividendsTaxes|K+=]@money!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictDividendsTaxesDesc]"
 DIVIDENDS_TAX_FROM_BUILDING_DETAIL: "#N #variable $VAL|D+$@money!#!#! de [BuildingType.GetName]"
 GOVERNMENT_SHARES_FROM_BUILDING_DETAIL: "#N #variable $VAL|D+$@money!#!#! de la [concept_nationally_owned|l] [BuildingType.GetName]"
 IMPORT_TARIFFS_FROM_GOODS_DETAIL: "#N #variable $VAL|D+$@money!#!#! de l’importation [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l]"
 EXPORT_TARIFFS_FROM_GOODS_DETAIL: "#N #variable $VAL|D+$@money!#!#! de l’exportation [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l]"
 TARIFFS_BREAKDOWN: "#tooltip_header [concept_tariffs]#!\nTotal : #v [GetPlayer.PredictTariffs|K+=]@money!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictTariffsDesc]"
 MINTING_BREAKDOWN: "#tooltip_header [concept_budget_minting]#!\nTotal : #v [GetPlayer.PredictMinting|D+=]@money!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictMintingDesc]"
 MINTING_VALUE_FORMAT: "$VAL|D+=$"
 INVESTMENT_INCOME_BREAKDOWN: "#tooltip_header [concept_budget_investment_income]#!\nTotal : #v [GetPlayer.GetInvestmentIncome|K+=]@money!#!"
 GOVERNMENT_SHARE_DIVIDENDS_BREAKDOWN: "#tooltip_header $DIVIDENDS_FROM_GOVERNMENT_SHARES$#!\nTotal : #v [GetPlayer.PredictGovernmentShareDividends|K+=]@money!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictGovernmentShareDividendsDesc]"
 GOVERNMENT_SHARE_LOSSES_BREAKDOWN: "#tooltip_header $LOSSES_FROM_GOVERNMENT_SHARES$#!\nTotal : #v [GetPlayer.PredictGovernmentShareLosses|K+=]@money!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictGovernmentShareLossesDesc]"
 ADDITIONAL_INCOME_BREAKDOWN: "#tooltip_header Revenu supplémentaire#!\nTotal : #v [GetPlayer.GetModifier.GetValueFor('country_tax_income_add')|K+=]@money!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetModifier.GetDescFor('country_tax_income_add')]"
 ADDITIONAL_EXPENSES_BREAKDOWN: "#tooltip_header Dépenses supplémentaires#!\nTotal : #v [GetPlayer.GetModifier.GetInvertedValueFor('country_expenses_add')|K+=]@money!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetModifier.GetDescFor('country_expenses_add')]"
 WELFARE_PAYMENTS_EXPENSES_BREAKDOWN: "#tooltip_header [concept_welfare_payments]#!\nTotal : #n -[GetPlayer.GetWelfarePaymentsExpenses|D]@money!#!"
 DIPLOMATIC_PACTS_INCOME_BREAKDOWN: "#tooltip_header Pactes diplomatiques#!\nTotal : #v [GetPlayer.PredictDiplomaticPactsIncome|K+]@money!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictDiplomaticPactsIncomeDesc]"
 POWER_BLOC_INCOME_BREAKDOWN: "#tooltip_header Bloc de nations#!\nTotal : #v [GetPlayer.GetPowerBlocIncomeRaw|K+]@money!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetPowerBlocIncomeDesc]"
 ONLY_SHOW_AVAILABLE: "Disponibles uniquement"
 ONLY_SHOW_AVAILABLE_EXILED_AGITATORS_TOOLTIP: "Afficher uniquement les [Concept('concept_agitator', '$concept_agitators$')|l] [Concept('concept_exile', '$concept_exiled$s')] pouvant être invités"
 EXPENSES_ADDITIONAL: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],ADDITIONAL_EXPENSES_BREAKDOWN,AdditionalExpensesTooltip [GetPlayer.GetModifier.GetInvertedValueFor('country_expenses_add')|K+=]@money!#!#! de [concept_budget_additional_expenses|l]"
 EXPENSES_WELFARE_PAYMENTS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],WELFARE_PAYMENTS_BREAKDOWN,WelfarePaymentsTooltip [Negate_CFixedPoint(GetPlayer.GetWelfarePaymentsExpenses)|D+=]#!#!@money! en [concept_welfare_payments|l]"
 EXPENSES_GOVERNMENT_SHARE_LOSSES: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],GOVERNMENT_SHARE_LOSSES_BREAKDOWN,GovernmentShareLossesTooltip [GetPlayer.PredictGovernmentShareLosses|D-]@money!#!#! $LOSSES_FROM_GOVERNMENT_SHARES$"
 GOVERNMENT_BUILDINGS_EXPENSES_BREAKDOWN: "#tooltip_header Biens pour les bâtiments gouvernementaux#!\nTotal : #v #N -[GetPlayer.GetGovernmentGoodsExpenses|D-]@money!#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetGovernmentGoodsExpensesDesc]\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetGovernmentGoodsExpensesByGoodsDesc]"
 GOVERNMENT_WAGES_EXPENSES_BREAKDOWN: "#tooltip_header Salaires gouvernementaux#!\nTotal : #v #N -[GetPlayer.GetGovernmentWagesExpenses|D-]@money!#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetGovernmentWagesExpensesDesc]"
 GOVERNMENT_SLAVES_EXPENSES_BREAKDOWN: "#tooltip_header Esclaves gouvernementaux#!\nTotal : #v #N -[GetPlayer.GetGovernmentSlavesExpenses|D-]@money!#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetGovernmentSlavesExpensesDesc]"
 MILITARY_BUILDINGS_EXPENSES_BREAKDOWN: "#tooltip_header Biens pour les bâtiments militaires#!\nTotal : #v #N -[GetPlayer.GetMilitaryGoodsExpenses|D-]@money!#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetMilitaryGoodsExpensesDesc]\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetMilitaryGoodsExpensesByGoodsDesc]"
 MILITARY_WAGES_EXPENSES_BREAKDOWN: "#tooltip_header Salaires militaires#!\nTotal : #v #N -[GetPlayer.GetMilitaryWagesExpenses|D-]@money!#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetMilitaryWagesExpensesDesc]"
 MILITARY_TOTAL_EXPENSES_BREAKDOWN: "#tooltip_header Total des dépenses militaires#!\nTotal : #v #n -[Country.PredictTotalMilitaryExpenses|D]#!#!@money!\n$TOOLTIP_DELIMITER$\nSalaires : #v #N -[GetPlayer.GetMilitaryWagesExpenses|D-]@money!#!#!\n#indent_newline:2   [GetPlayer.GetMilitaryWagesExpensesDesc]#!\n\nBiens : #v #N -[GetPlayer.GetMilitaryGoodsExpenses|D-]@money!#!#!\n#indent_newline:2   [GetPlayer.GetMilitaryGoodsExpensesByGoodsDesc]#!\n\nDépenses de biens regroupées par type de bâtiment :\n#indent_newline:2   [GetPlayer.GetMilitaryGoodsExpensesDesc]#!"
 MILITARY_SLAVES_EXPENSES_BREAKDOWN: "#tooltip_header Esclaves militaires#!\nTotal : #v #N -[GetPlayer.GetMilitarySlavesExpenses|D-]@money!#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetMilitarySlavesExpensesDesc]"
 DIPLOMATIC_PACTS_EXPENSES_BREAKDOWN: "#tooltip_header Pactes diplomatiques#!\nTotal : #v #N -[GetPlayer.PredictDiplomaticPactsExpenses|D-]@money!#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictDiplomaticPactsExpensesDesc]"
 POWER_BLOC_EXPENSE_BREAKDOWN: "#tooltip_header Bloc de nations#!\nTotal : #v #N -[GetPlayer.GetPowerBlocExpenseRaw|D-]@money!#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetPowerBlocExpenseDesc]"
 CONSTRUCTION_GOODS_EXPENSES_BREAKDOWN: "#tooltip_header [Concept('concept_good', '$concept_goods$')] pour la [concept_government_construction|l]#!\nTotal : #v #N -[GetPlayer.GetConstructionGoodsExpenses|D-]@money!#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetConstructionGoodsExpensesByGoodsDesc]"
 GOODS_EXPENSES_DETAIL: "#v $EXPENSE|D-$@money!#! dépensés pour [Goods.GetName|l][Goods.GetTextIcon]"
 GOV_EXPENSES_DETAIL: "#N #variable $EXPENSE|D-$@money!#!#! de [BUILDING_TYPE.GetName|l]"
 PACT_EXPENSE_DETAIL: "$ACTION$ : #N #variable #tooltippable #tooltip:$BREAKDOWN$ $VAL|D-$@money!#!#!#!#!"
 PACT_INCOME_DETAIL: "$ACTION$ : #P #variable #tooltippable #tooltip:$BREAKDOWN$ $VAL|D+$@money!#!#!#!#!"
 TRANSFER_GOODS_EXPENSE: "Dépenses du transfert des biens du traité : #N #variable #tooltippable @money!#tooltip:$BREAKDOWN$ $VAL|D-$#!#!#!#!"
 TRANSFER_GOODS_EXPENSE_BREAKDOWN_ENTRY: "$VAL|D-$@money! en raison de l’achat de $QUANTITY|0v$ [Goods.GetName|l] pour [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 TRANSFER_GOODS_INCOME: "Revenus du transfert des biens du traité : #P #variable #tooltippable @money!#tooltip:$BREAKDOWN$ $VAL|D+$#!#!#!#!"
 TRANSFER_GOODS_INCOME_BREAKDOWN_ENTRY: "$VAL|D+$@money! en raison de la vente de $QUANTITY|0v$ [Goods.GetName|l] [Country.GetAltNameNoFormatting('En')][Country.GetName]"
 TRANSFER_MONEY_EXPENSE: "Dépenses du transfert de l’argent du traité : #N #variable #tooltippable @money!#tooltip:$BREAKDOWN$ $VAL|D-$#!#!#!#!"
 TRANSFER_MONEY_EXPENSE_BREAKDOWN_ENTRY: "$VAL|D-$@money! transférés vers [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 TRANSFER_MONEY_INCOME: "Revenus du transfert de l’argent du traité : #P #variable #tooltippable @money!#tooltip:$BREAKDOWN$ $VAL|D+$#!#!#!#!"
 TRANSFER_MONEY_INCOME_BREAKDOWN_ENTRY: "$VAL|D+$@money! transférés depuis [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 INCOME_TRANSFER_FACTOR: "#v x$VAL$#! du type de sujet [SubjectType.GetNameNoIcon]"
 INCOME_TRANSFER_TOOLTIP: "#header [SubjectType.GetName]#!\nTotal : $VAL|K+$@money!\n$TOOLTIP_DELIMITER$\n$BASE|K+$@money! des revenus du [concept_treasury] [Country.GetAltAdjective('MS')|l][ConcatIfNeitherEmpty('\n', '$BREAKDOWN$')]"
 INCOME_TRANSFER_TOOLTIP_MAX_DESC: "Plafonné à $MAX|K+$@money! ($MAX_FRACTION|v0%$ du revenu [COUNTRY.GetAltAdjective('MS')|l])"
 INCOME_TRANSFER_FACTOR_NO_SUBJECT: "#v x$VAL$#! en raison de l’action [DIPLOMATIC_ACTION_TYPE.GetName]"
 INCOME_TRANSFER_TOOLTIP_NO_SUBJECT: "#header [DIPLOMATIC_ACTION_TYPE.GetName]#!\nTotal : @money!$VAL|K+$\n$TOOLTIP_DELIMITER$\n$BASE|K+$@money! des revenus du [concept_treasury] [Country.GetAltAdjective('MS')|l][ConcatIfNeitherEmpty('\n', '$BREAKDOWN$')]"
 SUBSIDIES_EXPENSES_BREAKDOWN: "#tooltip_header Subventions : #N [GetPlayer.GetSubsidiesExpenses|D-]@money!#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetSubsidiesExpensesDesc]"
 SUBVENTIONS_EXPENSES_BREAKDOWN: "#tooltip_header Subventions : #N [GetPlayer.GetSubventionsExpenses|D-]@money!#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetSubventionsExpensesDesc]"
 POWER_BLOC_EXPENSES_BREAKDOWN: "#tooltip_header Bloc de nations : #N [GetPlayer.GetPowerBlocExpenseRaw|D-]@money!#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetPowerBlocExpenseDesc]"
 INCOME_TRANSFER_TO_POWER_BLOC_LEADER_FACTOR: "#v x$VAL$#! de $MODIFIER_NAME$"
 INCOME_TRANSFER_TO_POWER_BLOC_LEADER: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $VAL|D-$@money!#!#! vers [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName]"
 INCOME_TRANSFER_FROM_POWER_BLOC_MEMBER: "$VAL|D+$@money! [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName]"
 DIPLOMATIC_ACTION_WITH_COUNTRY: "[COUNTRY.GetName] - [DIPLOMATIC_ACTION_TYPE.GetName]"
 IMPORTANT_ACTIONS: "Situation actuelle"
 CURRENT_SITUATION_TOOLTIP: "#header Situation actuelle#!"
 UNREAD_MESSAGES: "#header Vous avez des messages non lus !#!"
 RESET_TO_DEFAULT: "Réinitialiser aux paramètres par défaut"
 BALANCE_WITHOUT_TEMPORARY_INCOME_AND_EXPENSES: "\nSolde (à l’exclusion des revenus et dépenses temporaires) : #v [GetPlayer.PredictBalanceWithoutTemporaryIncomeAndExpenses|D+=]@money!#!"
 TAX_OCCUPATION_LOSS: "Perte d’occupation due aux impôts : #variable [GetPlayer.GetTaxOccupationLoss|1-=]#!\n$lower$ : #variable [GetPlayer.GetTaxOccupationLossFor('lower')|1-=]#!\n$middle$ : #variable [GetPlayer.GetTaxOccupationLossFor('middle')|1-=]#!\n$upper$ : #variable [GetPlayer.GetTaxOccupationLossFor('upper')|1-=]#!\n"
 FIXED_EXPENSES_BREAKDOWN: "#bold Dépenses nationales fixes :#! #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_EXPENSES_BREAKDOWN,TotalExpensesTooltip #bold #N -[GetPlayer.GetWeeklyFixedExpenses|D-]@money!#!#!#!#!"
 TEMPORARY_INCOME_BREAKDOWN: "#bold Recettes nationales temporaires :#! #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_INCOME_BREAKDOWN,TotalIncomeTooltip #bold #P @money!+[GetPlayer.GetWeeklyTemporaryIncome|D+]#!#!#!#!"
 TEMPORARY_EXPENSES_BREAKDOWN: "#bold Dépenses nationales temporaires :#! #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_EXPENSES_BREAKDOWN,TotalExpensesTooltip #bold #N -[GetPlayer.GetWeeklyTemporaryExpenses|D-]@money!#!#!#!#!"
 EXPENSES_BREAKDOWN: "#bold Dépenses nationales :#! #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_EXPENSES_BREAKDOWN,TotalExpensesTooltip #bold #N -[GetPlayer.GetWeeklyExpenses|D-]@money!#!#!#!#!"
 EXPENSES_GOVERNMENT_BUILDING_GOODS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],GOVERNMENT_BUILDINGS_EXPENSES_BREAKDOWN,GovernmentGoodsExpenseTooltip #N -[GetPlayer.GetGovernmentGoodsExpenses|D-]@money!#!#!#! en [concept_budget_goods_for_government_buildings|l]"
 EXPENSES_GOVERNMENT_WAGES: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],GOVERNMENT_WAGES_EXPENSES_BREAKDOWN,GovernmentWagesExpenseTooltip #N -[GetPlayer.PredictGovernmentWagesExpenses|D-]@money!#!#!#! en [concept_budget_government_wages|l]"
 EXPENSES_GOVERNMENT_SLAVES: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],GOVERNMENT_SLAVES_EXPENSES_BREAKDOWN,GovernmentSlavesExpenseTooltip #N -[GetPlayer.GetGovernmentSlavesExpenses|D-]@money!#!#!#! en [concept_budget_government_slaves|l]"
 EXPENSES_MILITARY_BUILDING_GOODS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],MILITARY_BUILDINGS_EXPENSES_BREAKDOWN,MilitaryGoodsExpenseTooltip #N -[GetPlayer.GetMilitaryGoodsExpenses|D-]@money!#!#!#! en [concept_budget_goods_for_military_buildings|l]"
 EXPENSES_MILITARY_WAGES: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],MILITARY_WAGES_EXPENSES_BREAKDOWN,MilitaryWagesExpenseTooltip #N -[GetPlayer.PredictMilitaryWagesExpenses|D-]@money!#!#!#! en [concept_budget_military_wages|l]"
 EXPENSES_MILITARY_SLAVES: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],MILITARY_SLAVES_EXPENSES_BREAKDOWN,MilitarySlavesExpenseTooltip #N -[GetPlayer.GetMilitarySlavesExpenses|D-]@money!#!#!#! en [concept_budget_military_slaves|l]"
 EXPENSES_SUBSIDIES: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],SUBSIDIES_EXPENSES_BREAKDOWN,SubsidiesExpenseTooltip #N -[GetPlayer.GetSubsidiesExpenses|D-]@money!#!#!#! en [concept_subsidies|l]"
 EXPENSES_SUBVENTIONS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],SUBVENTIONS_EXPENSES_BREAKDOWN,SubventionsExpenseTooltip #N -[GetPlayer.GetSubventionsExpenses|D-]@money!#!#!#! en [concept_subventions|l]"
 EXPENSES_DIPLOMATIC_PACTS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],DIPLOMATIC_PACTS_EXPENSES_BREAKDOWN,DiplomaticPactsExpenseTooltip #N -[GetPlayer.PredictDiplomaticPactsExpenses|D-]@money!#!#!#! [concept_budget_diplomatic_pacts|l]"
 EXPENSES_POWER_BLOC: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],POWER_BLOC_EXPENSES_BREAKDOWN,PowerBlocExpenseTooltip #N -[GetPlayer.GetPowerBlocExpenseRaw|D-]@money!#!#!#! du [concept_budget_power_bloc|l]"
 EXPENSES_CONSTRUCTION_GOODS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],CONSTRUCTION_GOODS_EXPENSES_BREAKDOWN,ConstructionGoodsExpenseTooltip #N -[GetPlayer.GetConstructionGoodsExpenses|D-]@money!#!#!#! en [concept_budget_construction_goods|l]"
 EXPENSES_INTEREST: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],INTEREST_EXPENSE_TOOLTIP,InterestExpenseTooltip #N -[GetPlayer.GetInterestPayment|D-]@money!#!#!#! en [concept_budget_interest|l]"
 ECONOMY_HEALTH: "Votre économie est $HEALTH$\n$TAB$$INCOME_RATIO$\n$TAB$$CREDIT_RATIO$ (Capital : #variable $CURRENT_LOAN_BALANCE|D$@money!#!)"
 HEALTH_GOOD: "[Concept('concept_economy_health','$concept_economy_health_healthy_short$')]"
 HEALTH_BAD: "[Concept('concept_economy_health','$concept_economy_health_unhealthy_short$')]"
 INCOME_RATIO_GOOD: "@green_checkmark! Revenu hebdomadaire de #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_INCOME_BREAKDOWN,TotalIncomeTooltip #variable $INCOME|+K$@money!#!#!#! dépasse les dépenses fixes de #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_EXPENSES_BREAKDOWN,TotalExpensesTooltip #variable $EXPENSES|-K$@money!#!#!#!"
 INCOME_RATIO_BAD: "@red_cross! Dépenses fixes de #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_EXPENSES_BREAKDOWN,TotalExpensesTooltip #variable $EXPENSES|-K$@money!#!#!#! dépasse le revenu hebdomadaire de #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_INCOME_BREAKDOWN,TotalIncomeTooltip #variable $INCOME|+K$@money!#!#!#!"
 CREDIT_RATIO_GOOD: "@green_checkmark! Crédit utilisé : #variable #P $CREDITRATIO|%1$#!#!"
 CREDIT_RATIO_BAD: "@red_cross! Crédit utilisé : #variable #N $CREDITRATIO|%1$#!#!"
 TAX_INCOME: "Revenu fiscal"
 DECLARE_BANKRUPTCY: "Déclarer la [concept_bankruptcy|l]"
 DECLARE_BANKRUPTCY_TOOLTIP: "[Country.GetDeclareBankruptcyDesc]"
 DECLARE_BANKRUPTCY_NOT_IN_DEFAULT: "Nous ne sommes pas en [concept_default|l]"
 DECLARE_BANKRUPTCY_DESC: "#header Déclarer la [concept_bankruptcy|l]#!\n$TOOLTIP_DELIMITER$\nDéclarer la [concept_bankruptcy|l] effacera nos [concept_loans|l] et sortira [GetPlayer.GetAltNameNoFormatting('Le')][GetPlayer.GetName] du [concept_default|l], mais cela aura de graves conséquences nationales pour notre [concept_country|l] :\n$EFFECTS$[ConcatIfNeitherEmpty('\n\nImpossible en raison de :\n', '$ERRORS$')]"
 DECLARE_BANKRUPTCY_CONFIRM_DESC: "#header Déclarer la [concept_bankruptcy|l]#!\n\nCette procédure affectera considérablement la stabilité [Country.GetAltNameNoFormatting('Du')][Country.GetName] et aura d’importantes répercussions économiques et politiques sur une période de #v [GetDefine('NEconomy','DECLARE_BANKRUPTCY_PENALTY_DURATION_YEARS')]#! ans.\n\nEffets supplémentaires :\n #indent_newline:3 #v [Country.GetRadicalizationFromBankruptcy|D=-]#! [Concept('concept_pop', '$concept_pops$')|l] deviendront [Concept('concept_radical','radicaux')]\nNotre nouveau solde sera constitué de #v [Country.GetPredictedBalanceFromBankruptcy|D+=]@money!#!#! [AddLocalizationIf(LessThan_CFixedPoint(Country.GetPredictedBalanceFromBankruptcy, '(CFixedPoint)0'), 'DECLARE_BANKRUPTCY_NEGATIVE_BALANCE_WARNING')]"
 DECLARE_BANKRUPTCY_NEGATIVE_BALANCE_WARNING: "\n\n@warning! Le solde [Country.GetAltAdjective('MS')|l] sera encore négatif une fois la [concept_bankruptcy|l] déclarée, et [Country.GetAltNameNoFormatting('Le')][Country.GetName] sera à nouveau en banqueroute à moins que des mesures drastiques ne soient prises."
 DECLARE_BANKRUPTCY_CONSTRUCTION_QUEUE_EFFECTS: "Tous les projets dans la [concept_construction_queue|l] seront annulés"
 DECLARE_BANKRUPTCY_BUILDING_EFFECTS: "#v $AMOUNT$ [Concept('concept_building', '$concept_buildings$')|l]#! auront leurs [concept_cash_reserves|l] vidées"
 DECLARE_BANKRUPTCY_POP_EFFECTS: "#v $AMOUNT|*$#! [Concept('concept_pop', '$concept_pops$')|l] deviendront plus [Concept('concept_radical','radicaux')]"
 DECLARE_BANKRUPTCY_MODIFIER_EFFECTS: "Les pénalités supplémentaires suivantes seront appliquées [GetPlayer.GetAltNameNoFormatting('Au')][GetPlayer.GetName] (elles déclineront pendant #v [GetDefine( 'NEconomy', 'DECLARE_BANKRUPTCY_PENALTY_DURATION_YEARS' )]#! ans) :\n$EFFECTS$"
 CREDIT_PROGRESS: "#header Crédit#!\n[concept_principal] actuel : #variable @money![GetPlayer.GetPrincipal|K]#! ([AccessPlayer.PredictWeeklyBalanceWithEconomyHealthHint])\nLe gouvernement doit #variable [AccessPlayer.GetGovernmentSelfDebt|D]@money!#! de dette à lui-même (#variable  [AccessPlayer.GetGovernmentSelfDebtFraction|%]#! de la dette totale)\n$TOOLTIP_DELIMITER$\nCrédit maximal : #variable [GetPlayer.GetMaxCredit|K]@money!#!\n"
 GOLD_PROGRESS: "#header [concept_gold_reserves]#!\nRéserves actuelles : #variable [GetPlayer.GetGoldReserves|K]@money!#! ([AccessPlayer.PredictWeeklyBalanceWithEconomyHealthHint])\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetGoldReserveLimitDesc]"
 #Reserves Limit: #variable @money![GetPlayer.GetGoldReserveLimit|K]#!"
 GOLD_RESERVE_DIMINISHING_RETURNS: "Le stock excessif d’or entraîne une hausse de son prix. Votre solde de #variable $MONEY|D$@money!#! vous permet d’acheter l’équivalent de #variable $VAL|D$@money!#! d’or seulement."
 WAGES: "Salaires"
 SLAVE_UPKEEP: "Maintenance des esclaves"
 PARTICIPANTS: "Participants"
 IMPORTERS: "Importateurs"
 EXPORTERS: "Exportateurs"
 IN_THIS_MARKET: "#title [Concept('concept_country', '$concept_countries$')] dans ce marché#!"
 PRODUCTION_METHODS: "#title [Concept('concept_production_method', '$concept_production_methods$')]#!"
 PROCESS: "Processus"
 PROCESS_TOOLTIP_HEADER: "$PROCESS$ :"
 PORTFOLIO_TOOLTIP_HEADER: "Portefeuille immobilier :"
 WORLD_MARKET_IMPORTERS_TOOLTIP: "#header [Market.GetName]#!\nImporte [Market.GetTotalImportedAmount|Dv] du [concept_world_market|l]"
 WORLD_MARKET_EXPORTERS_TOOLTIP: "#header [Market.GetName]#!\nExporte [Market.GetTotalExportedAmount|Dv] vers le [concept_world_market|l]"
 IMPORTS: "Importations"
 EXPORTS: "Exportations"
 IMPORTS_TOTAL: "Recettes des importations : [State.GetTotalImportRevenue|+K]@money!"
 EXPORTS_TOTAL: "Recettes des exportations : [State.GetTotalExportRevenue|+K]@money!"
 CONCEPT_IMPORT: "[Concept('concept_trade','$concept_import$')]"
 CONCEPT_EXPORT: "[Concept('concept_trade','$concept_export$')]"
 CONCEPT_IMPORTS: "[Concept('concept_trade','$concept_imports$')]"
 CONCEPT_EXPORTS: "[Concept('concept_trade','$concept_exports$')]"
 IMPORT_PRICE: "[concept_import_price]"
 EXPORT_PRICE: "[concept_export_price]"
 STATE_IMPORT_EXPORT_GOOD_TOOLTIP: "#header $GOODS_ICON$[Nbsp]$GOODS_NAME$ : $DIRECTION_WITH_CONCEPT$#!\n$AMOUNT|0v$ en [STATE.GetName]\n$TOTAL_PROFIT|+Kv$@money! de profit\n$TOOLTIP_DELIMITER$\n#tooltippable;tooltip:$ADVANTAGE_BREAKDOWN$ $ADVANTAGE|=+%0$#! d’[Concept('concept_trade_advantage','$concept_relative_trade_advantage$')|l]\n#tooltippable;tooltip:$TRADE_PRICE_BREAKDOWN$ @money!$TRADE_PRICE|1v$#! $TRADE_PRICE_ICON$ $TRADE_PRICE_CONCEPT$\n#tooltippable;tooltip:$LOCAL_PRICE_BREAKDOWN$ $LOCAL_PRICE|1v$@money!#! $LOCAL_PRICE_ICON$ du [concept_local_price|l]\n#tooltippable;tooltip:$TARIFF_RATE_BREAKDOWN$ $TARIFF_RATE|1v%$#! de [Concept('concept_tariffs','$concept_tariff$')|l]\n#tooltippable;tooltip:$SUBVENTION_RATE_BREAKDOWN$ $SUBVENTION_RATE|1v%$#! de [Concept('concept_subventions','$concept_subvention$')|l]\n\n@money!$PROFIT_PER_TRADE_CAPACITY|+D$ de profit pour chaque [concept_trade_capacity|l] ($BASE_REVENUE|+1v$@money! de différence de prix, plus $SUBVENTION|+1v$@money! en subventions moins $TARIFF|-1v$@money! en droits de douane, multiplié par la [concept_traded_quantity|l] de $TRADED_QUANTITY|0v$)"
 STATE_IMPORT_TARIFF_RATE_TOOLTIP: "#header $GOODS_NAME$[Nbsp]$GOODS_ICON$ : [concept_tariffs|l] pour les [Concept('concept_trade','$concept_imports$')|l]#!\n$TARIFF_RATE|1v%$ en [STATE.GetName]\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 STATE_EXPORT_TARIFF_RATE_TOOLTIP: "#header $GOODS_NAME$[Nbsp]$GOODS_ICON$ : [concept_tariffs|l] pour les [Concept('concept_trade','$concept_exports$')|l]#!\n$TARIFF_RATE|1v%$ en [STATE.GetName]\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 STATE_IMPORT_SUBVENTION_RATE_TOOLTIP: "#header $GOODS_NAME$[Nbsp]$GOODS_ICON$ : [concept_subventions|l] pour les [Concept('concept_trade','$concept_imports$')|l]#!\n$SUBVENTION_RATE|1v%$ en [STATE.GetName]\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 STATE_EXPORT_SUBVENTION_RATE_TOOLTIP: "#header $GOODS_NAME$[Nbsp]$GOODS_ICON$ : [concept_subventions|l] pour les [Concept('concept_trade','$concept_exports$')|l]#!\n$SUBVENTION_RATE|1v%$ en [STATE.GetName]\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 STATE_IMPORT_PRICE_TOOLTIP: "#header $GOODS_NAME$[Nbsp]$GOODS_ICON$ : [concept_import_price|l]#!\n$PRICE|v1$@money! $PRICE_ICON$ en [STATE.GetName]\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 STATE_EXPORT_PRICE_TOOLTIP: "#header $GOODS_NAME$[Nbsp]$GOODS_ICON$ : [concept_export_price|l]#!\n$PRICE|v1$@money! $PRICE_ICON$ en [STATE.GetName]\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 STATE_IMPORT_ADVANTAGE_TOOLTIP: "#header $GOODS_NAME$[Nbsp]$GOODS_ICON$ : [concept_trade_advantage|l] pour les [Concept('concept_trade','$concept_imports$')|l]#!\n$ADVANTAGE|vD$ en [STATE.GetName]\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 STATE_EXPORT_ADVANTAGE_TOOLTIP: "#header $GOODS_NAME$[Nbsp]$GOODS_ICON$ : [concept_trade_advantage|l] pour les [Concept('concept_trade','$concept_exports$')|l]#!\n$ADVANTAGE|vD$ en [STATE.GetName]\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 STATE_RELATIVE_IMPORT_ADVANTAGE_TOOLTIP: "#header $GOODS_NAME$[Nbsp]$GOODS_ICON$ : [Concept('concept_trade_advantage','$concept_relative_trade_advantage$')|l] pour les [Concept('concept_trade','$concept_imports$')|l]#!\n$RELATIVE_ADVANTAGE|=+0%$ en [STATE.GetName]\n[concept_import_price] de $PRICE_IMPACT|=-0%$\n$TOOLTIP_DELIMITER$\nAvantage de base de $BASE_ADVANTAGE|0v$ en raison de :\n$BASE_ADVANTAGE_DETAILS$\n\n$DETAILS$"
 STATE_RELATIVE_EXPORT_ADVANTAGE_TOOLTIP: "#header $GOODS_NAME$[Nbsp]$GOODS_ICON$ : [Concept('concept_trade_advantage','$concept_relative_trade_advantage$')|l] pour les [Concept('concept_trade','$concept_exports$')|l]#!\n$RELATIVE_ADVANTAGE|=+0%$ en [STATE.GetName]\n[concept_export_price] de $PRICE_IMPACT|=+0%$\n$TOOLTIP_DELIMITER$\nAvantage de base de $BASE_ADVANTAGE|0v$ en raison de :\n$BASE_ADVANTAGE_DETAILS$\n\n$DETAILS$"
 MARKET_RELATIVE_IMPORT_ADVANTAGE_TOOLTIP: "#header $GOODS_NAME$[Nbsp]$GOODS_ICON$ : [Concept('concept_trade_advantage','$concept_relative_trade_advantage$')|l] pour les [Concept('concept_trade','$concept_imports$')|l]#!\n$RELATIVE_ADVANTAGE|=+0%$ sur le [MARKET.GetName|l]\n[concept_import_price] de $PRICE_IMPACT|=-0%$\n$TOOLTIP_DELIMITER$\nAvantage moyen de $AVERAGE_ADVANTAGE|0v$ dans $NUM_STATES|v$ [Concept('concept_state','$concept_states$')] avec une [concept_trade_capacity|l] totale de $TOTAL_TRADE_CAPACITY|0v$ :\n$STATE_DETAILS$"
 MARKET_RELATIVE_EXPORT_ADVANTAGE_TOOLTIP: "#header $GOODS_NAME$[Nbsp]$GOODS_ICON$ : [Concept('concept_trade_advantage','$concept_relative_trade_advantage$')|l] pour les [Concept('concept_trade','$concept_exports$')|l]#!\n$RELATIVE_ADVANTAGE|=+0%$ sur le [MARKET.GetName|l]\n[concept_export_price] de $PRICE_IMPACT|=+0%$\n$TOOLTIP_DELIMITER$\nAvantage moyen de $AVERAGE_ADVANTAGE|0v$ dans $NUM_STATES|v$ [Concept('concept_state','$concept_states$')] avec une [concept_trade_capacity|l] totale de $TOTAL_TRADE_CAPACITY|0v$ :\n$STATE_DETAILS$"
 MARKET_RELATIVE_ADVANTAGE_STATE_ENTRY: "#tooltippable;tooltip:$BREAKDOWN_TAG$ $ADVANTAGE|0v$#! ($RELATIVE_ADVANTAGE|=+0%$) pour [STATE.GetName] (capacité commerciale de $TRADE_CAPACITY|v0$)"
 WORLD_MARKET_STATE_EXPORT_ADVANTAGE: "#header [Concept('concept_trade_advantage','$concept_trade_advantage_short$')] pour les [Concept('concept_trade','$concept_exports$')|l] [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l][Nbsp][Goods.GetTextIcon]#!\n$BASE_VALUE|vD$ par unité exportée pour [STATE.GetName]\n$VALUE|vD$ pour $VOLUME|v0$ unités\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 WORLD_MARKET_STATE_IMPORT_ADVANTAGE: "#header [Concept('concept_trade_advantage','$concept_trade_advantage_short$')] pour les [Concept('concept_trade','$concept_imports$')|l] [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l][Nbsp][Goods.GetTextIcon]#!\n$BASE_VALUE|vD$ par unité importée pour [STATE.GetName]\n$VALUE|vD$ pour $VOLUME|v0$ unités\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 WORLD_MARKET_STATE_PRICE_WORLD_MARKET_PRICE: "[concept_world_market_price] : $PRICE|v1$@money!"
 WORLD_MARKET_STATE_ADVANTAGE_IMPORT_PRICE_EFFECT: "$PRICE_IMPACT|=-0%$ du [concept_import_price|l] en raison de l’avantage"
 WORLD_MARKET_STATE_ADVANTAGE_EXPORT_PRICE_EFFECT: "$PRICE_IMPACT|=+0%$ du [concept_export_price|l] en raison de l’avantage"
 WORLD_MARKET_STATE_PRICE_ADVANTAGE_MULTIPLIER: "$RELATIVE_ADVANTAGE|=+%0$ d’[Concept('concept_trade_advantage','$concept_relative_trade_advantage$')|l] de $ADVANTAGE_SHARE|%v$ (#tooltippable;tooltip:$ADVANTAGE_BREAKDOWN_TAG$ $ADVANTAGE|vD$#!/#tooltippable;tooltip:$TOTAL_ADVANTAGE_BREAKDOWN_TAG$ $TOTAL_ADVANTAGE|vD$#!) de l’[concept_trade_advantage_short|l] global par rapport à $VOLUME_SHARE|%v$ ($VOLUME|vD$/$TOTAL_VOLUME|vD$) du volume commercial global"
 WORLD_MARKET_STATE_PRICE_ADVANTAGE_NO_COMPETITORS: "Aucun impact sur le prix grâce à l’[concept_trade_advantage|l] en raison du manque de concurrence"
 WORLD_MARKET_TOTAL_TRADE_ADVANTAGE_ENTRY: "#tooltippable;tooltip:$BREAKDOWN_TAG$ $ADVANTAGE|vD$#! pour [STATE.GetName] (avantage relatif de $RELATIVE_ADVANTAGE|=+%0$)"
 WORLD_MARKET_TOTAL_TRADE_ADVANTAGE_BREAKDOWN: "#header [concept_trade_advantage] global#!\n$TOTAL_ADVANTAGE|vD$ pour [Goods.Custom('FR_Goods_Le')][Goods.GetName] [Goods.GetTextIcon] $DIRECTION$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADVANTAGE_FROM_CAPACITY: "$VAL|0%=+$ de la [concept_trade_capacity|l] de $CAPACITY|v$ (maximum de $MAX|0%=+$)"
 ADVANTAGE_FROM_WORLD_MARKET_ACCESS: "#n x$VAL|2$#! en raison de l’[concept_world_market_access|l]"
 ADVANTAGE_FROM_OPPOSITE_DIRECTION_TRADE: "#n x$VAL|2$#! en raison du [concept_trade|l] opposé sur le même [concept_market|l]"
 ADVANTAGE_FROM_POWER_BLOC: "#tooltippable;tooltip:$BREAKDOWN_TAG$ $VAL|D=+v$#! du [concept_power_bloc|l]"
 ADVANTAGE_FROM_POWER_BLOC_BREAKDOWN: "#header [concept_trade_advantage] du [concept_power_bloc|l]#!\n$VAL|D=+v$ en $STATE_NAME$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADVANTAGE_FROM_POWER_BLOC_ENTRY: "$VAL|D=+v$ car [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName] appartient au bloc [TARGET_COUNTRY.GetPowerBloc.GetName]"
 ADVANTAGE_FROM_RELIGION: "#tooltippable;tooltip:$BREAKDOWN_TAG$ $VAL|D=+v$#! de la [concept_religion|l]"
 ADVANTAGE_FROM_RELIGION_BREAKDOWN: "#header [concept_trade_advantage] de la [concept_religion|l]#!\n$VAL|D=+v$ en $STATE_NAME$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADVANTAGE_FROM_RELIGION_ENTRY: "$VAL|D=+v$ car [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName] est de foi [TARGET_COUNTRY.GetStateReligion.GetName|l]"
 ADVANTAGE_FROM_TRADE_AGREEMENTS: "#tooltippable;tooltip:$BREAKDOWN_TAG$ $VAL|D=+v$#! en raison des [Concept('concept_trade_privilege','$concept_trade_privileges$')|l]"
 ADVANTAGE_FROM_TRADE_AGREEMENTS_BREAKDOWN: "#header [concept_trade_advantage] en raison des [Concept('concept_trade_privilege','$concept_trade_privileges$')|l]#!\n$VAL|D=+v$ en $STATE_NAME$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADVANTAGE_FROM_TRADE_AGREEMENTS_ENTRY: "$VAL|D=+v$ du [concept_trade_privilege|l] entre [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetNameNoFlag] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetNameNoFlag]"
 ADVANTAGE_FROM_TREATY_PORTS: "#tooltippable;tooltip:$BREAKDOWN_TAG$ $VAL|D=+v$#! en raison des [Concept('concept_treaty_port','$concept_treaty_ports$')|l]"
 ADVANTAGE_FROM_TREATY_PORTS_BREAKDOWN: "#header [concept_trade_advantage] en raison des [Concept('concept_treaty_port','$concept_treaty_ports$')|l]#!\n$VAL|D=+v$ en $STATE_NAME$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADVANTAGE_FROM_TREATY_PORT_ENTRY: "$VAL|D=+v$ du [concept_treaty_port|l] [COUNTRY.GetAltAdjectiveNoFlag('MS')|l] $DIRECTION$ dans le marché [TARGET_COUNTRY.GetMarket.GetName]"
 ADVANTAGE_FROM_LACK_OF_INTERESTS: "#tooltippable;tooltip:$BREAKDOWN_TAG$ $VAL|D=+v$#! du manque d’[concept_interest|l] dans les [Concept('concept_market','$concept_markets$')|l] concernés ( $RELEVANT_MARKETS_FLAGS$)"
 ADVANTAGE_FROM_LACK_OF_INTEREST_FLAG: "[MARKET.GetOwner.GetFlagTextIcon] "
 ADVANTAGE_FROM_LACK_OF_INTERESTS_BREAKDOWN: "#header [concept_trade_advantage] en raison du manque d’[concept_interest|l]#!\n$VAL|D=+v$ en $STATE_NAME$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADVANTAGE_FROM_LACK_OF_INTERESTS_ENTRY: "$VAL|D=+v$ en raison du manque d’[concept_interest|l] sur le [MARKET.GetName|l] [MARKET.GetOwner.GetFlagTextIcon]"
 ADVANTAGE_FROM_AT_WAR: "#tooltippable;tooltip:$BREAKDOWN_TAG$ $VAL|D=+v$#! en raison des [Concept('concept_war','$concept_wars$')|l]"
 ADVANTAGE_FROM_AT_WAR_BREAKDOWN: "#header [concept_trade_advantage] en raison des [Concept('concept_war','$concept_wars$')|l]#!\n$VAL|D=+v$ en $STATE_NAME$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADVANTAGE_FROM_AT_WAR_ENTRY: "$VAL|D=+v$ pour être en guerre avec [Market.GetOwner.GetAltNameNoFormatting('Le')][MARKET.GetOwner.GetName] ([MARKET.GetName])"
 ADVANTAGE_FROM_EMBARGO: "#tooltippable;tooltip:$BREAKDOWN_TAG$ $VAL|D=+v$#! en raison des [Concept('concept_embargo','$concept_embargoes$')|l]"
 ADVANTAGE_FROM_EMBARGO_BREAKDOWN: "#header [concept_trade_advantage] en raison des [Concept('concept_embargo','$concept_embargoes$')|l]#!\n$VAL|D=+v$ en $STATE_NAME$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADVANTAGE_FROM_EMBARGO_ENTRY: "$VAL|D=+v$ en raison de l’embargo sur [Market.GetOwner.GetAltNameNoFormatting('Le')][MARKET.GetOwner.GetName] ([MARKET.GetName])"
 ADVANTAGE_MARKET_AREA_GOODS_PRODUCTION: "$VAL|D=+v$ en raison de la production de $AMOUNT|vD0$ [GOODS.GetName][Nbsp][GOODS.GetTextIcon] dans la [concept_market_area|l] ($FRACTION|v2%$ de la production mondiale)"
 ADVANTAGE_MARKET_GOODS_TRADE_CHARTER: "$VAL|D=+v$ en raison de la production de $AMOUNT|vD0$ [GOODS.GetName][Nbsp][GOODS.GetTextIcon] sur la [concept_market_area|l] par des compagnies ayant des [GetCompanyCharterType('trade_charter').GetName|l] ($FRACTION|v2%$ de la production de la zone)"
 ADVANTAGE_ENTRY_IMPORT_SUFFIX: "couvre $TRADE_FRACTION|%0v$ des importations"
 ADVANTAGE_ENTRY_EXPORT_SUFFIX: "couvre $TRADE_FRACTION|%0v$ des exportations"
 ADVANTAGE_MARKET_PRESTIGE_GOODS: "$VAL|D=v$ en raison de la production de #tooltippable;tooltip:$BREAKDOWN_TAG$ $AMOUNT|vD0$#! [Concept('concept_prestige_good', '$concept_prestige_goods$')|l] de type [GOODS.GetName][Nbsp][GOODS.GetTextIcon] dans la [concept_market_area|l] ($FRACTION|v2%$ de la production de la zone)"
 ADVANTAGE_MARKET_PRESTIGE_GOODS_BREAKDOWN: "#header Production de [GOODS.GetName][Nbsp][GOODS.GetTextIcon] ([concept_prestige_good|l])#!\n$VAL|0v$ sur le [MARKET.GetName|l]\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADVANTAGE_MARKET_PRESTIGE_GOODS_ENTRY: "$VAL|0v$ [GOODS.GetName][Nbsp][GOODS.GetTextIcon]"
 STATE_GOODS_IMPORT_ADVANTAGE: "[Goods.GetStateRelativeImportAdvantage|=+%0] d’[concept_trade_advantage|l] sur les [Concept('concept_trade','importations')]"
 STATE_GOODS_EXPORT_ADVANTAGE: "[Goods.GetStateRelativeExportAdvantage|=+%0] d’[concept_trade_advantage|l] sur les [Concept('concept_trade','exportations')]"
 YOUR_IMPORT_ROUTE_HEADER: "#title Vos routes commerciales d’importation#!"
 YOUR_EXPORT_ROUTE_HEADER: "#title Vos routes commerciales d’exportation#!"
 IMPORT_ROUTE_HEADER: "#title Routes commerciales entrantes#!"
 EXPORT_ROUTE_HEADER: "#title Routes commerciales sortantes#!"
 POP_LIST_TOTAL_TOOLTIP: "#header Population totale#!\nValeur : [PopListItem.GetTotalPopSize|vD]"
 POP_LIST_TOTAL_WORKFORCE_TOOLTIP: "#header Main-d’œuvre totale#!\nValeur : [PopListItem.GetWorkingAdultsPopSize|vD]"
 TO: "vers"
 FROM: "depuis"
 IMPORT: "Importation"
 EXPORT: "Exportation"
 SUPPLY_NETWORK_EMPTY_STATE: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] n’[Country.GetAltNameNoFormatting('AOnt')] pas de [concept_supply_network|l]"
 TRADE_AMOUNT_DELTA: "(#v $VAL|+=D$#!)"
 same_import_export_market: "Impossible d’importer et d’exporter vers le même marché"
 MARKET_NAME_WITH_STATUS_ISOLATED: "#bold [MARKET.GetNameNoFormatting]#! #maximum (isolé)#!"
 MARKET_NAME_WITH_STATUS: "#bold [MARKET.GetNameNoFormatting]#!"
 PEACE_ACCEPTANCE_SUMMARY: "#title Score d’acceptation : #bold $VAL|+$#!#!"
 CAPITULATION_DESIRE_SUMMARY: "[concept_capitulation_desire] [Country.GetAltNameNoFormatting('Du')][Country.GetName]\nActuel : #value $VAL|+=$#!\n$TOOLTIP_DELIMITER$\n#title En raison de :#!"
 PEACE_ACCEPTANCE_BASE_VALUE: "Valeur de base : #bold $VAL|=+$#!"
 PEACE_ACCEPTANCE_WAR_SUPPORT: "[concept_war_support] : #bold $VAL|=+$#!"
 PEACE_ACCEPTANCE_WAR_LEADER: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] est le [concept_war_leader|l] : #bold $VAL|=+$#!"
 PEACE_ACCEPTANCE_WHITE_PEACE: "Paix blanche : #bold $VAL|=+$#!"
 PEACE_ACCEPTANCE_OWN_WAR_GOALS: "[Concept('concept_war_goal', '$concept_war_goals$')] [Country.GetAltAdjective('MP')|l] qui seront perdus : #bold $VAL|=+$#!"
 PEACE_ACCEPTANCE_ENEMY_WAR_GOALS_ON_SELF: "[Concept('concept_war_goal', '$concept_war_goals$')] qui seront appliqués contre [Country.GetAltNameNoFormatting('Le')][Country.GetName] : #bold $VAL|=+$#!"
 MEMBERS_SUMMARY_ITEM: "[InterestGroup.GetTextIcon]"
 MEMBERS_SUMMARY_FORMAT: "($MEMBERS_LIST$)"
 PEACE_ACCEPTANCE_PRESSED_WARGOAL: "[WAR_GOAL.GetName] fait partie de l’[concept_peace_deal|l] : $VAL|=+$"
 PEACE_ACCEPTANCE_ACHIEVABLE_WARGOAL: "[WAR_GOAL.GetName] est réalisable par capitulation : $VAL|=+$"
 PEACE_ACCEPTANCE_ACHIEVABLE_PRESSED_WARGOAL: "[WAR_GOAL.GetName] fait partie de l’[concept_peace_deal|l] : $VAL|=+$ (effet réduit car le [concept_war_goal|l] est susceptible d’être perdu lors de la capitulation)"
 PEACE_ACCEPTANCE_TOTAL_VICTORY: "Victoire totale : #bold $VAL|=+$#!"
 UNIFICATION_SUPPORT_ATTITUDE_SCORE: "Attitude de #v [Country.GetAttitudeTowards(COUNTRY_THIRD_PARTY.Self).GetName]#! : #v $VALUE$#!"
 UNIFICATION_SUPPORT_RELATIONS_SCORE: "Relations de #v [Country.GetRelationsWithDesc(COUNTRY_THIRD_PARTY.Self)]#! : #v $VALUE$#!"
 UNIFICATION_SUPPORT_RANK_SCORE: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] [Country.GetAltNameNoFormatting('EstSont')] une #v [COUNTRY.GetRank|l]#! : #v $VALUE$#!"
 UNIFICATION_SUPPORT_POWER_BLOC_SCORE: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName] sont [Concept('concept_power_bloc_member','$concept_power_bloc_members$')|l] : #v $VAL$#!"
 UNIFICATION_SUPPORT_COHESION_SCORE: "Le bloc [PowerBloc.GetName] a une [concept_power_bloc_cohesion|l] [CohesionLevel.GetName] : #v $VAL$#!"
 UNIFICATION_SUPPORT_FOR_CANDIDATES_ENTRY: "[Country.GetName] : #tooltippable #tooltip:$BREAKDOWN_TAG$ #v $VALUE$#!#!#!"
 UNIFICATION_SUPPORT_FOR_CANDIDATES_DESC: "Soutien [CountryFormation.GetAdjective] aux [Concept('concept_unification_candidate', '$concept_unification_candidates$')|l] :\n$DETAILS$"
 UNIFICATION_CANDIDATE_SUPPORT_BREAKDOWN: "#header Soutien [Country.GetAltAdjectiveNoFormatting('MS')|l] pour [COUNTRY_THIRD_PARTY.GetAltNameNoFormatting('Le')][COUNTRY_THIRD_PARTY.GetName] en tant que [concept_unification_candidate|l] de [CountryFormation.GetName] : #v $VALUE$#!#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 NO_VALID_WAR_GOALS: "Pas d’[concept_war_goal|l] valide"
 WARGOAL_SUBHEADER_HOLDER_AND_TARGET: "[WarGoal.GetHolder.GetAltNameNoFormatting('Le')|U][WarGoal.GetHolder.GetName][ConcatIfNeitherEmpty(' ', AddLocalizationIf(WarGoal.GetHolder.IsLocalPlayer, 'YOU'))] cible [WarGoal.GetTarget.GetAltNameNoFormatting('Le')][WarGoal.GetTarget.GetName]"
 WARGOAL_INFAMY_DESC: "@infamy! #tooltippable #tooltip:$BREAKDOWN_TAG$ [WAR_GOAL.GetInfamyAmount|-1]#!#! d’[concept_infamy|l] pour [WAR_GOAL.GetCreator.GetAltNameNoFormatting('Le')][WAR_GOAL.GetCreator.GetName]"
 WARGOAL_POTENTIAL_INFAMY_DESC: "@infamy! #tooltippable #tooltip:$BREAKDOWN_TAG$ [WAR_GOAL.GetInfamyAmount|-1]#!#! d’[concept_infamy|l] pour [WAR_GOAL.GetCreator.GetAltNameNoFormatting('Le')][WAR_GOAL.GetCreator.GetName]"
 BASE_WARGOAL_MANEUVERS_COST_DESC: "@maneuver! #tooltippable #tooltip:$BREAKDOWN_TAG$ [WAR_GOAL.CalcBaseManeuversCost|v]#!#! [Concept('concept_maneuver', '$concept_maneuvers$')|l]"
 ADD_WARGOAL_MANEUVERS_COST_DESC: "@maneuver! #tooltippable #tooltip:$BREAKDOWN_TAG$ [WAR_GOAL.CalcManeuversCostToAdd|v]#!#! [Concept('concept_maneuver', '$concept_maneuvers$')|l]"
 WARGOAL_IS_INVALID: "#N Invalide#! et ne peut pas actuellement être appuyé par [WarGoal.GetHolder.GetAltNameNoFormatting('Le')][WarGoal.GetHolder.GetName] :#!#indent_newline:3 \n$ERRORS$#!"
 WARGOAL_IS_EXECUTED: "A été #b appliqué#! contre [WAR_GOAL.GetWarGoalStakeholder.GetAltNameNoFormatting('Le')][WAR_GOAL.GetWarGoalStakeholder.GetName]"
 WARGOAL_IS_PRESSED: "#P Est appuyé#! par [WarGoal.GetHolder.GetAltNameNoFormatting('Le')][WarGoal.GetHolder.GetName] dans la [WAR_GOAL.GetWar.GetName] et sera appliqué si l’[concept_peace_deal|l] actuel est accepté par tous les pays concernés"
 WARGOAL_IS_NOT_PRESSED: "#N N’est pas appuyé#! par [WarGoal.GetHolder.GetAltNameNoFormatting('Le')][WarGoal.GetHolder.GetName] dans la [WAR_GOAL.GetWar.GetName] et ne sera #b pas#! appliqué si l’[concept_peace_deal|l] actuel est accepté par tous les pays concernés"
 OBLIGATION_MANEUVERS_COST: "[GetDefine( 'NDiplomacy', 'SWAY_OFFER_OWE_OBLIGATION_MANEUVERS_COST' )|v]@maneuvers!"
 OBLIGATION_MANEUVERS_COST_TOOLTIP: "#header [concept_obligation]#!\nCoût des [Concept('concept_maneuver', '$concept_maneuvers$')|l] : @maneuvers![GetDefine( 'NDiplomacy', 'SWAY_OFFER_OWE_OBLIGATION_MANEUVERS_COST' )|v]\nNous avons [DiplomaticPlay.GetNumManeuversRemaining(GetPlayer.Self)|v] [Concept('concept_maneuver', '$concept_maneuvers$')|l] restantes"
 OBLIGATION_MANEUVERS_DESC: "Offrir une [concept_obligation] coûte toujours [GetDefine( 'NDiplomacy', 'SWAY_OFFER_OWE_OBLIGATION_MANEUVERS_COST' )|v] [Concept('concept_maneuver', '$concept_maneuvers$')|l] @maneuvers!"
 OBLIGATION_CALL_IN_MANEUVERS_COST: "[GetDefine( 'NDiplomacy', 'SWAY_OFFER_CALL_IN_OBLIGATION_MANEUVERS_COST' )|v]@maneuvers!"
 OBLIGATION_CALL_IN_MANEUVERS_COST_TOOLTIP: "#header [concept_obligation]#!\nCoût des [Concept('concept_maneuver', '$concept_maneuvers$')|l] : @maneuvers![GetDefine( 'NDiplomacy', 'SWAY_OFFER_CALL_IN_OBLIGATION_MANEUVERS_COST' )|v]\nNous avons [DiplomaticPlay.GetNumManeuversRemaining(GetPlayer.Self)|v] [Concept('concept_maneuver', '$concept_maneuvers$')|l] restantes"
 OBLIGATION_CALL_IN_MANEUVERS_DESC: "Faire appel à une [concept_obligation|l] coûte toujours [GetDefine( 'NDiplomacy', 'SWAY_OFFER_OWE_OBLIGATION_MANEUVERS_COST' )|v] [Concept('concept_maneuver', '$concept_maneuvers$')] @maneuvers!"
 SWAY_OFFER_MANEUVERS_DESC: "Proposer une [concept_obligation|l] coûte toujours $COST|v$ [Concept('concept_maneuver', '$concept_maneuvers$')|l] @maneuvers!"
 OFFER_SUPPORT: "Négocier le soutien"
 ARTICLE_WARGOAL_SELECT_INPUT_TOOLTIP: "#instruction Cliquez pour sélectionner#!"
 ADD_ARTICLE_WARGOAL_MANEUVERS_COST_TOOLTIP: "#header Coût des [Concept('concept_maneuver', '$concept_maneuvers$')|l] de l’[concept_war_goal|l]#!\n[ArticleDraft.GetWarGoalManeuversCost(GetPlayer.Self, WarGoal.GetDiplomaticPlay.Self)|v]@maneuvers! pour [WarGoal.GetName|v]\n$TOOLTIP_DELIMITER$\n[ArticleDraft.GetWarGoalManeuversCostDesc(GetPlayer.Self, WarGoal.GetDiplomaticPlay.Self)]"
 ADD_ARTICLE_WARGOAL_MANEUVERS_COST: "[ArticleDraft.GetWarGoalManeuversCost(GetPlayer.Self, WarGoal.GetDiplomaticPlay.Self)|v] [Concept('concept_maneuver', '$concept_maneuvers$')|l]@maneuvers!"
 ADD_ARTICLE_WARGOAL_INFAMY_VALUE_TOOLTIP: "#header [concept_infamy] de l’[concept_war_goal|l]#!\n[ArticleDraft.GetWarGoalInfamyValue(GetPlayer.Self)|-1] pour [WarGoal.GetName|v]\n$TOOLTIP_DELIMITER$\n[ArticleDraft.GetWarGoalInfamyValueDesc(GetPlayer.Self)]"
 ADD_ARTICLE_WARGOAL_INFAMY_VALUE: "[ArticleDraft.GetWarGoalInfamyValue(GetPlayer.Self)|-1]@infamy! d’[concept_infamy|l]"
 ADD_ARTICLE_WARGOAL_BINDING_PERIOD: "Aurait une [concept_binding_period|l] de #v [GetDefine('NDiplomacy', 'TREATY_DEFAULT_BINDING_DURATION_YEARS')] ans#!"
 SWAY_OFFER_MANEUVERS_COST_DESC: "#header $COST|v$ [Concept('concept_maneuver', '$concept_maneuvers$')] @maneuvers! pour $SWAY_OFFER|v$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 ADD_WARGOAL_MANEUVERS_COST: "@maneuvers![WarGoal.CalcManeuversCostToAdd|v]"
 ADD_WARGOAL_MANEUVERS_COST_WITH_LABEL: "Coût des [Concept('concept_maneuver', '$concept_maneuvers$')|l] @maneuvers! : [WarGoal.CalcManeuversCostToAdd|v]"
 ADD_WARGOAL_MANEUVERS_COST_TOOLTIP: "#header [concept_war_goal] – Coût des [Concept('concept_maneuver', '$concept_maneuvers$')|l] : [WarGoal.CalcManeuversCostToAdd|v]#!\n$TOOLTIP_DELIMITER$\n[WarGoal.GetManeuversCostToAddDesc]\nNous avons [WarGoal.GetDiplomaticPlay.GetNumManeuversRemaining(GetPlayer.Self)|v] [Concept('concept_maneuver', '$concept_maneuvers$')|l] restantes"
 BASE_WARGOAL_MANEUVERS_COST: "@maneuvers![WarGoal.CalcBaseManeuversCost|v-]"
 BASE_WARGOAL_MANEUVERS_COST_TOOLTIP: "#header [concept_war_goal] – Coût des [Concept('concept_maneuver', '$concept_maneuvers$')|l] : [WarGoal.CalcBaseManeuversCost|v-]#!\n$TOOLTIP_DELIMITER$\n[WarGoal.GetBaseManeuversCostDesc]\nNous avons [WarGoal.GetDiplomaticPlay.GetNumManeuversRemaining(GetPlayer.Self)|v] [Concept('concept_maneuver', '$concept_maneuvers$')|l] restantes"
 WARGOAL_INFAMY_TOOLTIP: "#header [concept_infamy] d’[concept_war_goal|l] : [WarGoal.GetInfamyAmount|-1]#!\n$TOOLTIP_DELIMITER$\n[WarGoal.GetInfamyDesc]"
 WARGOAL_INFAMY: "[WarGoal.GetInfamyAmount|-1]@infamy!"
 WARGOAL_INFAMY_WITH_LABEL: "[concept_infamy] [WarGoal.GetInfamyAmount|-1]@infamy!"
 WARGOAL_WILL_ENACT_LAWS: "Les lois suivantes seront imposées : $LAWS$"
 WAR_SUPPORT_CANNOT_BE_NEGATIVE: "Ce [concept_war_support|l] ne peut pas être inférieur à #v 0#! parce que les [Concept('concept_war_goal','$concept_war_goals$')|l] suivants ne sont pas [Concept('concept_controlled_war_goal','contrôlés')] par le camp adverse :"
 WAR_SUPPORT_CANNOT_BE_NEGATIVE_WAR_GOAL_ENTRY: "$EFFECT_LIST_BULLET$ #tooltippable;tooltip:[WAR_GOAL.GetTooltipTag],WARGOAL_CONTESTED_OR_NOT_DESC [WAR_GOAL.GetName]#!"
 DO_COUNTRY_ACCEPT_THIS_PEACE_DEAL: "Acceptez-vous cet [concept_peace_deal|l] ?"
 DAYS_UNTIL_PEACE_DEAL_FAILS: "#v [War.GetDaysUntilPeaceDealFails] jours#! restants"
 CURRENTLY_REJECTING_PEACE_DEAL_TOOLTIP: "Vous rejetez actuellement l’[concept_peace_deal|l] qui sera entièrement rejeté dans #v [War.GetDaysUntilPeaceDealFails] jours#! à moins que vous ne changiez d’avis"
 REJECTING_PEACE_DEAL_TOOLTIP: "Si vous le rejetez, l’[concept_peace_deal|l] sera entièrement rejeté dans #v [War.GetDaysUntilPeaceDealFails] jours#! à moins que vous ne changiez d’avis"
 ACCEPTING_PEACE_DEAL_TOOLTIP: "Si vous l’acceptez, la [concept_war|l] [War.GetName] prendra fin et les [Concept('concept_war_goal', '$concept_war_goals$')|l] #b appuyés#! ci-dessus seront appliqués"
 CURRENTLY_ACCEPTING_PEACE_DEAL_TOOLTIP: "Vous avez accepté l’[concept_peace_deal|l], ce qui signifie que la [concept_war|l] [War.GetName] prendra fin et que tous les [Concept('concept_war_goal', '$concept_war_goals$')|l] #b appuyés#! seront appliqués"
 WAR_PANEL_CURRENT_PEACE_DEAL_PROPOSER: "Proposé par [WarPanel.GetWar.GetCountryProposingPeace.GetAltNameNoFormatting('Le')][WarPanel.GetWar.GetCountryProposingPeace.GetName]"
 WAR_PANEL_NO_CURRENT_PEACE_DEAL: "Aucun [concept_peace_deal|l] actuel"
 WAR_PANEL_CURRENT_PEACE_DEAL: "[concept_peace_deal] actuel"
 WAR_PANEL_OVERVIEW: "Vue d’ensemble"
 WAR_PANEL_PEACE: "Faire la paix"
 WAR_PANEL_PEACE_TOOLTIP: "#header $WAR_PANEL_CURRENT_PEACE_DEAL$#!\n$TOOLTIP_DELIMITER$\n#title [Concept('concept_war_goal', '$concept_war_goals$')] appuyés :#!\n[War.GetPressedWarGoalsString]\n\n[ConcatIfNeitherEmpty(War.GetPeaceDealValidationDesc, '\n' )][War.GetAcceptActivePeaceDealDesc]"
 WAR_PANEL_ALL_ACCEPT_PEACE: "@green_checkmark_box! #bold Toutes les parties acceptent cet [concept_peace_deal|l].#!"
 WAR_PANEL_NONE_ACCEPT_PEACE: "@red_cross! #bold Aucune partie n’accepte cet [concept_peace_deal|l].#!"
 WAR_PANEL_ACCEPT_PEACE_ONE: "@green_checkmark_box! $COUNTRY$ #bold accepte#! cet [concept_peace_deal|l]."
 WAR_PANEL_ACCEPT_PEACE_LIST: "@green_checkmark_box! $LIST$ #bold acceptent#! cet [concept_peace_deal|l]."
 WAR_PANEL_NOT_ACCEPT_PEACE_ONE: "@red_cross! $COUNTRY$ #bold n’accepte pas#! cet [concept_peace_deal|l]."
 WAR_PANEL_NOT_ACCEPT_PEACE_LIST: "@red_cross! $LIST$ #bold n’acceptent pas#! cet [concept_peace_deal|l]."
 WAR_PANEL_LIKELY_ACCEPT_PEACE_ONE: "@green_checkmark_box! $COUNTRY$ #bold acceptera probablement#! cet [concept_peace_deal|l]."
 WAR_PANEL_LIKELY_ACCEPT_PEACE_LIST: "@green_checkmark_box! $LIST$ #bold accepteront probablement#! cet [concept_peace_deal|l]."
 WAR_PANEL_LIKELY_NOT_ACCEPT_PEACE_ONE: "@red_cross! $COUNTRY$ #bold n’acceptera probablement pas#! cet [concept_peace_deal|l]."
 WAR_PANEL_LIKELY_NOT_ACCEPT_PEACE_LIST: "@red_cross! $LIST$ #bold n’accepteront probablement pas#! cet [concept_peace_deal|l]."
 WAR_PANEL_ACCEPT_PEACE: "Nous #bold #N n’acceptons pas#!#! cet [concept_peace_deal|l]"
 WAR_PANEL_NOT_ACCEPT_PEACE: "Nous acceptons cet [concept_peace_deal|l]"
 WAR_PANEL_PEACE_YES: "#header Acceptation de la paix#!\n$TOOLTIP_DELIMITER$\n#variable $COUNTRY$#! #P #bold acceptera#!#! l’[concept_peace_deal|l] actuel\n\n$BREAKDOWN$"
 WAR_PANEL_PEACE_NO: "#header Acceptation de la paix#!\n$TOOLTIP_DELIMITER$\n#variable $COUNTRY$#! #N #bold refusera#!#! l’[concept_peace_deal|l] actuel\n\n$BREAKDOWN$"
 WAR_PANEL_PEACE_PLAYER: "Ils sont dirigés par un joueur, le choix leur appartient donc."
 WAR_PANEL_CAPITULATE: "Capituler"
 WAR_PANEL_CAPITULATE_TOOLTIP: "Vous quittez immédiatement la guerre. Tous les objectifs de guerre nous visant seront appliqués.\n[GetDesc(WarPanel.GetWar.Capitulate(GetPlayer.Self))]"
 WAR_PANEL_PROPOSE_PEACE_DEAL: "Proposer un [concept_peace_deal|l]"
 WAR_PANEL_PROPOSE_PEACE: "Proposer un [concept_peace_deal|l]"
 WAR_PANEL_PROPOSE_PEACE_TOOLTIP: "#header $WAR_PANEL_PROPOSE_PEACE$#!\n$TOOLTIP_DELIMITER$\nProposer la paix à toutes les autres parties sur la base de l’[concept_peace_deal|l] que nous proposons[ConcatIfNeitherEmpty('\n\n',GetDesc(WarPanel.GetWar.ProposePeaceDeal(GetPlayer.Self)))]\n\n[WarPanel.GetWar.GetAcceptProposedPeaceDealDesc(GetPlayer.Self)]"
 WAR_PANEL_WHITE_PEACE: "Paix blanche"
 WAR_PANEL_SET_WHITE_PEACE: "Définir les conditions de la paix blanche"
 WAR_PANEL_SET_WHITE_PEACE_TOOLTIP: "#header $WAR_PANEL_SET_WHITE_PEACE$#!\n$TOOLTIP_DELIMITER$\nRetirer tous les [Concept('concept_war_goal', '$concept_war_goals$')|l] de l’[concept_peace_deal|l] que nous proposons[ConcatIfNeitherEmpty('\n\n',GetDesc(WarPanel.GetWar.SetWhitePeace(GetPlayer.Self)))]\n\n[WarPanel.GetWar.GetAcceptWhitePeaceDealDesc]"
 CANNOT_CAPITULATE_OVERLORD_IN_WAR: "Vous ne pouvez pas capituler tant que votre suzerain participe encore"
 CANNOT_CAPITULATE_SOVEREIGNTY_VIOLATED: "Vous ne pouvez pas capituler dans une guerre que vous avez rejointe parce que votre souveraineté a été violée"
 CANNOT_CAPITULATE_OVERLORD_WARGOAL_STAKEHOLDER: "Vous ne pouvez pas capituler alors que votre suzerain est partie prenante des objectifs de guerre visant votre pays"
 WAR_PANEL_PARTICIPANT_TOOLTIP: "[WarParticipant.GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[WarParticipant.GetWarSupportDescDelayed]\n[WarParticipant.GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',WarParticipant.GetCanCapitulateDesc)]"
 WAR_RIGHT_LEADER_TOOLTIP: "[War.AccessRightSideLeaderParticipant.GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[War.AccessRightSideLeaderParticipant.GetWarSupportDescDelayed]\n[War.AccessRightSideLeaderParticipant.GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',War.AccessRightSideLeaderParticipant.GetCanCapitulateDesc)]"
 WAR_LEFT_LEADER_TOOLTIP: "[War.AccessLeftSideLeaderParticipant.GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[War.AccessLeftSideLeaderParticipant.GetWarSupportDescDelayed]\n[War.AccessLeftSideLeaderParticipant.GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',War.AccessLeftSideLeaderParticipant.GetCanCapitulateDesc)]"
 WAR_ATTACKER_LEADER_TOOLTIP: "[War.AccessAttackerLeaderParticipant.GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[War.AccessAttackerLeaderParticipant.GetWarSupportDescDelayed]\n[War.AccessAttackerLeaderParticipant.GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',War.AccessAttackerLeaderParticipant.GetCanCapitulateDesc)]"
 WAR_DEFENDER_LEADER_TOOLTIP: "[War.AccessDefenderLeaderParticipant.GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[War.AccessDefenderLeaderParticipant.GetWarSupportDescDelayed]\n[War.AccessDefenderLeaderParticipant.GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',War.AccessDefenderLeaderParticipant.GetCanCapitulateDesc)]"
 WAR_PANEL_RIGHT_LEADER_TOOLTIP: "[WarPanel.AccessWar.AccessParticipant(WarPanel.GetRightLeader.Self).GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[WarPanel.AccessWar.AccessParticipant(WarPanel.GetRightLeader.Self).GetWarSupportDescDelayed]\n[WarPanel.AccessWar.AccessParticipant(WarPanel.GetRightLeader.Self).GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',WarPanel.AccessWar.AccessParticipant(WarPanel.GetRightLeader.Self).GetCanCapitulateDesc)]"
 WAR_PANEL_LEFT_LEADER_TOOLTIP: "[WarPanel.AccessWar.AccessParticipant(WarPanel.GetLeftLeader.Self).GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[WarPanel.AccessWar.AccessParticipant(WarPanel.GetLeftLeader.Self).GetWarSupportDescDelayed]\n[WarPanel.AccessWar.AccessParticipant(WarPanel.GetLeftLeader.Self).GetExhaustionDesc][ConcatIfNeitherEmpty('\n\n',WarPanel.AccessWar.AccessParticipant(WarPanel.GetLeftLeader.Self).GetCanCapitulateDesc)]"
 WAR_PANEL_WAR_SUPPORT_DESC: "#HEADER Soutien de guerre#! ($COUNTRY_NAME$)\nValeur actuelle : #variable $SUPPORT|1+=$#!"
 WAR_PANEL_WAR_SUPPORT_DESC_INITIAL: "[concept_war_support] initial : #variable [GetDefine('NDiplomacy','BASE_WAR_SUPPORT')|+=1]#!"
 WAR_PANEL_WAR_SUPPORT_DESC_BATTLES: "\nDes batailles : #variable $BATTLES|1+=$#!"
 WAR_PANEL_WAR_SUPPORT_DESC_EXHAUSTION: "\nDe l’épuisement : #variable $EXHAUSTION|1+=$#!"
 WAR_PANEL_WAR_SUPPORT_DESC_SITUATIONS: "\nDes événements : #variable $SITUATIONS|1+=$#!"
 WAR_PANEL_WAR_SUPPORT_UNABLE_TO_CAPITULATE: "@warning! Impossible de capituler en raison de :\n$DETAILS$"
 PEACE_TOAST_TITLE: "Traité de paix"
 PEACE_SIGNED_DATE: "Signé le [DiplomaticPlay.GetEndDate]"
 CAPITULATION_TITLE: "Capitulation"
 CAPITULATION_ENFORCED: "Les objectifs de guerre suivants ont été imposés [Country.GetAltNameNoFormatting('Au')][Country.GetName]"
 IS_PROMOTED: "est promu à"
 IS_DEMOTED: "est rétrogradé à"
 REMAINS_SAME_RANK: "reste"
 COMMANDER_COMMAND_LIMIT_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v0$#!#!"
 COMMANDER_COMMAND_LIMIT_UNITS: "$NUM_UNITS|v$"
 COMMANDER_COMMAND_LIMIT_UNITS_TOOLTIPPABLE: "#tooltippable #tooltip:$NUM_UNITS_BREAKDOWN$ $NUM_UNITS|v$#!#!"
 COMMANDER_COMMAND_LIMIT_DIVIDER: " / "
 COMMANDER_COMMAND_LIMIT_ENDING_BATTALIONS: " $NAME$"
 COMMANDER_COMMAND_LIMIT_ENDING_FLOTILLAS: " $NAME$"
 #Terrains
 plains: "Plaines"
 ocean: "Océan"
 lakes: "Lacs"
 river: "Fleuve"
 forest: "Forêt"
 hills: "Collines"
 mountain: "Montagnes"
 jungle: "Jungle"
 wetland: "Marécages"
 desert: "Désert"
 tundra: "Toundra"
 savanna: "Savane"
 snow: "Arctique"
 farmland_rye: "Terres agricoles"
 farmland_rice: "Rizières"
 farmland_millet: "Terres agricoles"
 plantation: "Terres agricoles"
 pasture: "Terres agricoles"
 farmland_wheat: "Terres agricoles"
 farmland_maize: "Terres agricoles"
 cleared_land: "Terrain ouvert"
 mining: "Mines"
 forestry: "Terres forestières"
 docks: "Chantiers navals"
 MILITARY_FORMATION_FRONT_DISTRIBUTION: "[Front.GetName] : $NUM_UNITS|v$ @battalions! :\n$BREAKDOWN$"
 MILITARY_FORMATION_STATE_DISTRIBUTION_ENTRY: "$TAB$$NUM_UNITS|v$ @battalions! de [State.GetName]"
 MILITARY_PANEL_FRONT_TROOP_BREAKDOWN_HEADER: "Répartition des troupes :"
 MILITARY_PANEL_FRONT_TROOP_BREAKDOWN: "[Front.GetName] : $NUM_TROOPS|v$ @battalions! ($PERCENT_OF_TROOPS|%1+$)"
 MILITARY_PANEL_COMMAND_LIMIT_BREAKDOWN_TOOLTIP: "#header Unités#!\n[MilitaryFormation.GetName] contient [GetUnitStrengthHeader( MilitaryFormation.GetCurrentManpower, MilitaryFormation.GetMaxManpower, MilitaryFormation.GetCombatUnitsTypeIcon )]"
 REGULARS: "Réguliers"
 CONSCRIPTS: "Conscrits"
 EVENT_DLC_TOOLTIP: "Cet événement fait partie du DLC #v [Event.GetDLCName]#!"
 FORMATION_PANEL_DEBUG_INFO: "#title Informations de débogage#! :\nID : #variable [MilitaryFormation.GetIDString]#!"
 FORMATION_PANEL_ARMY_MOBILIZATION_FORMATTED: "[Concept('concept_mobilize_army', '$concept_mobilize_army_mobilization$')] : $VALUE|v%0$"
 WAR_PANEL_INITIATOR_HEADER: "Initiateur"
 WAR_PANEL_INITIATOR_HEADER_TOOLTIP: "Le camp de l’initiateur de cette [concept_war|l]"
 WAR_PANEL_TARGET_HEADER: "Cible"
 WAR_PANEL_TARGET_HEADER_TOOLTIP: "Le camp de la cible de cette [concept_war|l]"
 WAR_PANEL_INITIATOR_WARGOALS: "#title [Concept('concept_war_goal', '$concept_war_goals$')] de l’initiateur#!"
 WAR_PANEL_TARGET_WARGOALS: "#title [Concept('concept_war_goal', '$concept_war_goals$')] de la cible#!"
 PROMOTION_EFFECTS_TOOLTIP: "[AddTextIf(IsValid(Character.GetPromoteCommand), Character.GetNextCommanderRankBenefits)]"
 PROMOTE_CHARACTER_HEADER: "#header Promouvoir [Character.GetFullName][AddTextIf(Not(Character.IsMaxRank), Concatenate(' en ', Character.GetRankNameFor(Character.GetNextCommanderRank)))]#!"
 MILITARY_PANEL_PROMOTE_CHARACTER_TOOLTIP: "$PROMOTE_CHARACTER_HEADER$[ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\nEffets :\n', Localize('PROMOTION_EFFECTS_TOOLTIP'))][ConcatIfNeitherEmpty('\n\n', GetDesc(Character.GetPromoteCommand))]"
 MILITARY_PANEL_PROMOTE_CHARACTER_TOOLTIP_MAX_RANK: "#header Promouvoir [Character.GetFullName]#!\n\n#N [GetDesc(Character.GetPromoteCommand)]#!"
 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_HEADER: "#header Séparer pour en faire une [SelectLocalization(Character.GetMilitaryFormation.IsArmy,'MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_ARMY','MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_FLEET')]#!"
 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_TOOLTIP: "$MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_HEADER$\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(GetDesc(Character.SplitIntoOwnFormation),'\n\n')]#indent_newline:3 [Character.GetFullName] serait aux commandes de [Character.GetNumUnitsThatWouldBeSplitOff|v0] [Concept('concept_unit','$concept_units$')|l] en raison de :\n[Character.GetCommandLimit] de [concept_command_limit|l]\n[Character.GetMilitaryFormation.GetCommandLimit] [Character.GetMilitaryFormation.GetName] [concept_command_limit|l] au total\n[Character.GetMilitaryFormation.GetNumCombatUnits|v0] [Concept('concept_unit','$concept_units$')|l] en [Character.GetMilitaryFormation.GetName]#!\n\n@information! Pour un contrôle plus fin, utilisez le bouton #b Transférer#! du volet de la #b Formation militaire#!."
 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_ARMY: "[concept_army]"
 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_FLEET: "[concept_fleet]"
 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_CONFIRMATION: "Voulez-vous vraiment séparer $CHARACTERS$ et $NUM_UNITS|v0$ [Concept('concept_unit','$concept_units$')|l] pour en faire une [SelectLocalization(MilitaryFormation.IsArmy,'MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_ARMY','MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_FLEET')] ?"
 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_CONFIRMATION_ONLY_UNITS: "Voulez-vous vraiment séparer $NUM_UNITS|v0$ [Concept('concept_unit','$concept_units$')|l] pour en faire une [SelectLocalization(MilitaryFormation.IsArmy,'MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_ARMY','MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_FLEET')] ?"
 MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_CONFIRMATION_ONLY_COMMANDERS: "Voulez-vous vraiment séparer $CHARACTERS$ (sans [Concept('concept_unit','$concept_units$')|l]) pour en faire une [SelectLocalization(MilitaryFormation.IsArmy,'MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_ARMY','MILITARY_PANEL_SPLIT_CHARACTER_INTO_OWN_FORMATION_FLEET')] ?"
 RECRUIT_CHARACTER_HEADER: "#header Recruter un personnage#!"
 ACQUIRING_TITLE: "#title Acquis#!"
 COST_TITLE: "#title Coût#!"
 CONSUMED_TITLE: "#title Consommé#!"
 BALANCE_TITLE: "#title Solde#!"
 STOCKPILE_TITLE: "#title Stock#!"
 COMMANDER_ORDER_REDUNDANT: "#V Déjà reçu cet ordre#!"
 COMMANDER_ORDER_NAVAL_NO_COASTAL: "#N [STATE.GetName] ne contrôle aucune province côtière#!"
 COMMANDER_ORDER_NAVAL_COAST_FULLY_IMPASSABLE: "#N La côte $ENEMY_ADJ|l$ de $STATE_NAME$ n’a pas de provinces praticables#!"
 COMMANDER_ORDER_NAVAL_NOT_ENEMY: "#N Pas en guerre avec [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName]#!"
 COMMANDER_ORDER_NAVAL_REPAIRING: "#N $ADMIRAL_REPAIRING_DATE$#!"
 COMMANDER_ORDER_NAVAL_NEED_GENERAL: "#N [Country.GetAltNameNoFormatting('Le')|U][Country.GetName] n’a pas de [Concept('concept_general', '$concept_generals$')|l] dans un [concept_hq] côtier avec des troupes pour effectuer une invasion navale#!"
 COMMANDER_ORDER_NAVAL_GENERAL_NOT_COASTAL: "#N Le [concept_general|l] doit se trouver dans un [concept_hq] côtier pour effectuer une invasion navale#!"
 COMMANDER_ORDER_NAVAL_GENERAL_NO_TROOPS: "#N Le [concept_general|l] n’a pas de [Concept( 'concept_battalion', '$concept_battalions$')|l] pour effectuer une invasion navale#!"
 COMMANDER_ORDER_POWER_PROJECTION_ALREADY_PRESENT: "#N Déjà présent en [STRATEGIC_REGION.GetName], ce qui y produit automatiquement un [concept_interest|l].#!"
 COMMANDER_ORDER_POWER_PROJECTION_NOT_ADJACENT: "#N Pas une #variable [concept_strategic_region|l]#! adjacente"
 COMMANDER_ORDER_ADVANCE_FRONT_FAIL_NOT_PARTICIPATING: "#N [Country.GetAltNameNoFormatting('Le')|U][Country.GetName] ne participe pas au [Front.GetName|l]#!"
 COMMANDER_ORDER_DEFEND_FRONT_FAIL_NOT_PARTICIPATING: "#N [Country.GetAltNameNoFormatting('Le')|U][Country.GetName] ne participe pas au [Front.GetName|l]#!"
 COMMANDER_ORDER_PATROL_SAME_HQ: "#N Il faut cibler un QG éloigné#!"
 COMMANDER_ORDER_PATROL_NOT_FRIENDLY_HQ: "#N Ne peut cibler que les QG amis#!"
 COMMANDER_PANEL_CURRENT_ORDER: "[concept_order] actuel : #b [Character.GetOrderType.GetAltName( 'gerund' )]#! [AddLocalizationIf(Not(Or(Character.IsAdmiral, Character.GetOrderType.IsStandBy)), 'COMMANDER_PANEL_CURRENT_ORDER_LOCATION')]"
 COMMANDER_PANEL_CURRENT_ORDER_SHORT: "[concept_order] actuel : #b [Character.GetOrderType.GetName]#!"
 COMMANDER_PANEL_NEXT_ORDER_SHORT: "[concept_order] suivant : #b [Character.GetNextOrderType.GetName]#!"
 FORMATION_PANEL_CURRENT_ORDER: "[concept_order] actuel : #TODO#b [MilitaryFormation.GetFormationOrder.GetType.GetAltName( 'gerund' )]#!#! [AddLocalizationIf(Not(Or(MilitaryFormation.IsFleet, MilitaryFormation.GetFormationOrder.GetType.IsStandBy)), 'FORMATION_PANEL_CURRENT_ORDER_LOCATION')]"
 COMMANDER_PANEL_CURRENT_ORDER_LOCATION: "[AddTextIf(Character.IsAtFront,Character.GetMilitaryFormation.GetCurrentFront.GetName)]"
 FORMATION_PANEL_CURRENT_ORDER_LOCATION: "[AddTextIf(MilitaryFormation.IsAtFront,MilitaryFormation.GetCurrentFront.GetName)]"
 NEXT: "Suivant"
 FORMATION_SETTINGS: "Paramètres de la formation"
 ALLOW_BORROWING_AND_LENDING: "Autoriser l’emprunt et le prêt de troupes"
 NEXT_OR_CURRENT_ORDER: "[AddLocalizationIf(ObjectsEqual(Character.GetOrderType.Self, CommanderOrderType.Self), 'CURRENT_ORDER_STATUS')][AddLocalizationIf(ObjectsEqual(Character.GetNextOrderType.Self, CommanderOrderType.Self), 'NEXT_ORDER_STATUS')][AddTextIf(And(Not(StringIsEmpty(GetDesc( Character.SelectOrder( CommanderOrderType.Self )))), Or(ObjectsEqual(Character.GetOrderType.Self, CommanderOrderType.Self), ObjectsEqual(Character.GetNextOrderType.Self, CommanderOrderType.Self))), '\n')][GetDesc( Character.SelectOrder( CommanderOrderType.Self ))]"
 UNAVAILABLE_ORDERS: "[Concept('concept_order', '$concept_orders$')] disponibles"
 UNAVAILABLE_ORDERS_TOOLTIP: "[Concept('concept_order', '$concept_orders$')] actuellement indisponibles : #v [GetDataModelSize(Character.AccessUnavailableOrders)]#!"
 TRAIT_UNLOCKABLE_ORDERS_TITLE: "Débloque les [Concept('concept_order', '$concept_orders$')|l] suivant"
 RECRUIT_COMMANDER_SPECIAL_ORDERS_TITLE: "[Concept('concept_order', '$concept_orders$')] spéciaux disponibles"
 NO_SPECIAL_ORDERS_TITLE: "Aucun [concept_order|l] spécial disponible"
 MAKE_PEACE_NOT_AT_WAR_WITH: "#N #HEADER [COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName]#! n’est pas en guerre avec #HEADER [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]#!#!"
 LOCAL_GOOD: "[concept_local_good]"
 LOCAL_GOODS: "[Concept('concept_local_good','$concept_local_goods$')]"
 GOODS_STATE_PANEL_PRICE_MARKET_SHARE: "#tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_MARKET_PRICE_SHARE_TOOLTIP [Goods.GetMarketPriceShare|%v1]#!#! de la [Concept('concept_market_price', '$concept_market_price_share$')|l]"
 GOODS_PANEL_STATE_PRICE_RIGHT_NOW: "#variable [Goods.GetStatePriceWithTooltip|1]#!"
 GOODS_PANEL_STATE_PRICE_COMPARE: "[SelectLocalization(Goods.IsLocal,'LOCAL_GOOD','GOODS_LOCAL_PRICE_DIFF_AND_MARKET_PRICE_SHARE')]"
 GOODS_PANEL_PRICE_RIGHT_NOW: "#variable [Goods.GetMarketPriceWithTooltip|1]#!"
 GOODS_PANEL_PRICE_COMPARE: "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=-]#! par rapport au [concept_base_price|l]\nSolde du marché : #variable [Goods.GetMarketBuyAndSellOrdersBalance|=D+]#!"
 GOODS_LOCAL_PRICE_DIFF_AND_MARKET_PRICE_SHARE: "$GOODS_LOCAL_PRICE_DIFF$$GOODS_STATE_PANEL_PRICE_MARKET_SHARE$"
 GOODS_LOCAL_PRICE_DIFF: "[Goods.GetStateToMarketPriceDiff|%0=-] en [Goods.GetState.GetName] par rapport au [Concept('concept_market_price', '$MARKET_PRICE$')|l] sur le [Goods.GetMarket.GetName|l]\n"
 SOLD_BY: "#title Vendu par#!"
 BOUGHT_BY: "#title Acheté par#!"
 PRODUCED_BY: "Produit par"
 CONSUMED_BY: "Consommé par"
 RESOURCE_POTENTIALS: "[Concept('concept_resource_potential','$concept_resource_potentials$')]"
 INFORMATION: "Informations"
 STATE_MODIFIERS: "Modificateurs d’État :\n[State.GetModifier.GetDesc]"
 SP_CAPACITY_CONCEPT: "#concept Les militaires tenteront d’atteindre la capacité de points de force en prenant l’argent de votre budget militaire, en achetant des biens militaires et en les utilisant pour former des soldats dans vos casernes et vos bases navales.#!"
 STAPLE: "Biens essentiels"
 STAPLE_FILTER: "#instruction Afficher/masquer#! les #header biens essentiels#!\n\n#concept Les biens essentiels sont des biens essentiels.#!"
 INDUSTRIAL_GOODS_FILTER: "#instruction Afficher/masquer#! les #header biens industriels#!\n\n#concept Les biens industriels sont des biens produits par les manufactures qui peuvent être consommés par d’autres manufactures.#!"
 LUXURY_GOODS_FILTER: "#instruction Afficher/masquer#! les #header biens de luxe#!\n\n#concept Les biens de luxe sont des biens que les groupes sociaux commencent à consommer à des niveaux plus élevés de [concept_sol|l].#!"
 MILITARY_GOODS_FILTER: "#instruction Afficher/masquer#! les #header biens militaires#!\n\n#concept Les biens militaires sont des biens que les militaires consomment.#!"
 NATIONAL_SP_CAPACITY: "#title Capacité des points de force nationaux#!"
 ARMY_TITLE: "@army_SP! #TITLE Armée#!"
 NAVY_TITLE: "#title @navy_SP! Marine#!"
 NAVY_SP_CAPACITY_TITLE: "#HEADER Capacité de points de force de la marine#!\n$TOOLTIP_DELIMITER$\nCible : #variable [Country.GetNavySPCapacity]@army_SP!#!\n\n$SP_CAPACITY_CONCEPT$"
 ARMY_SP_CAPACITY_TITLE: "#HEADER Capacité de points de force de l’armée#!\n$TOOLTIP_DELIMITER$\nCible : #variable [Country.GetArmySPCapacity]@navy_SP!#!\n\n$SP_CAPACITY_CONCEPT$"
 COMMANDS_TITLE: "#title Commandements#!"
 CURRENT_ARMY_SP: "Actuel : #variable [Country.GetStrengthPointArmy]@army_SP!#!"
 CURRENT_NAVY_SP: "Actuel : #variable [Country.GetStrengthPointNavy]@navy_SP!#!"
 UNASSIGNED_CHARACTERS_TITLE: "#title Personnages non affectés#!"
 PRIO_TITLE: "#title Prio :#!"
 TRAITS_TITLE: "#title Traits#!"
 AGE_VALUE: "#title Âge :#! #BOLD [Character.GetAge]#!"
 INTEREST_GROUP_VALUE: "#title [concept_interest_group] :#! #BOLD #underline [Character.GetInterestGroup.GetName]#!#!"
 INTEREST_GROUP_VALUE_TWO_ROWS: "#title [concept_interest_group] :#!\n#BOLD #underline [InterestGroup.GetName]#!#!"
 RULER_OF_COUNTRY: "Chef de l’État [Character.GetCountry.GetAltNameNoFormatting('Du')]#variable [Character.GetCountry.GetName]#!"
 HEIR_OF_COUNTRY: "Héritier présomptif [Character.GetCountry.GetAltNameNoFormatting('Du')]#variable [Character.GetCountry.GetName]#!"
 AT_THE_WAR_OFFICE: "Non affectés"
 RECRUIT_CHARACTER_GENERAL: "Recruter un [concept_general|l] supplémentaire"
 RECRUIT_CHARACTER_ADMIRAL: "Recruter un [concept_admiral|l] supplémentaire"
 CREATE_ARMY_FORMATION: "Créer une [concept_army|l]"
 CREATE_FLEET_FORMATION: "Créer une [concept_fleet|l]"
 RECRUIT_CHARACTER_GENERAL_HEADER: "#bold Sélectionnez le général à recruter#!"
 RECRUIT_CHARACTER_ADMIRAL_HEADER: "#bold Sélectionnez l’amiral à recruter#!"
 RECRUIT_CHARACTER_BUTTON: "Recruter"
 RECRUIT_COMMANDER_TOO_MANY_OF_TYPE: "La formation [MilitaryFormation.GetName] compte déjà [GetDefine('NMilitary','MAX_NUM_COMMANDERS_PER_FORMATION')|0v] unités de type [CHARACTER.GetPrimaryRoleName] et ne peut pas en recruter plus"
 RECRUIT_COMMANDER_TARGET_WILL_EXCEED_LIMIT: "Après la ou les fusions en cours dans la formation [MILITARY_FORMATION.GetName], la limite d’unités de type [CHARACTER.GetPrimaryRoleName] serait dépassée (limite de [GetDefine('NMilitary','MAX_NUM_COMMANDERS_PER_FORMATION')|0v]). Le recrutement d’autres unités de ce type ne sera pas possible."
 RECRUIT_COMMANDER_WRONG_COUNTRY: "#R [Character.GetFullName] n’appartient pas [Country.GetAltNameNoFormatting('Au')][Country.GetName]#!"
 RECRUIT_COMMANDER_HQ_WRONG_COUNTRY: "#R [Hq.GetName] n’appartient pas [Country.GetAltNameNoFormatting('Au')][Country.GetName]#!"
 RECRUIT_COMMANDER_FORMATION_WRONG_COUNTRY: "#R [MilitaryFormation.GetName] n’appartient pas [Country.GetAltNameNoFormatting('Au')][Country.GetName]#!"
 RECRUIT_COMMANDER_TEMP_HQ: "#R [Hq.GetName] est un [concept_hq] temporaire#!"
 CHARACTER_TOOLTIP: "[Character.GetInfoTooltip]"
 CHARACTER_IS_BUSY: "[Character.GetFullName] est occupé[Character.GetCustom('FR_E')] et ne peut accepter aucune mission"
 CREATE_FORMATION_TEMP_HQ: "#R [Hq.GetName] est un [concept_hq] temporaire#!"
 CREATE_FORMATION_HQ_WRONG_COUNTRY: "#R [Hq.GetName] n’appartient pas [Country.GetAltNameNoFormatting('Au')][Country.GetName]#!"
 DISBAND_UNIT_WRONG_COUNTRY: "#[CombatUnit.GetName]  n’appartient pas [Country.GetAltNameNoFormatting('Au')][Country.GetName]"
 DISBAND_UNIT_FORMATION_WRONG_COUNTRY: "#R [MilitaryFormation.GetName] n’appartient pas [Country.GetAltNameNoFormatting('Au')][Country.GetName]#!"
 DISBAND_UNIT_TYPE_EMPTY: "[MilitaryFormation.GetName] ne compte pas de [CombatUnitType.GetName]"
 DISBAND_COMBAT_UNIT: "Dissoudre [CombatUnit.GetName|v][ConcatIfNeitherEmpty('\n\n', GetDesc( CombatUnit.GetMilitaryFormation.GetDisbandUnitCommand( CombatUnit.Self ) ) )]\n\nCela supprimera un niveau de [CombatUnit.GetBuilding.GetName] en [CombatUnit.GetBuilding.GetState.GetName]"
 character_role_general: "[concept_general]"
 character_role_admiral: "[concept_admiral]"
 character_role_politician: "[concept_politician]"
 character_role_agitator: "[concept_agitator]"
 character_role_ruler: "[concept_ruler]"
 character_role_heir: "[concept_heir]"
 character_role_executive: "[concept_executive]"
 character_role_general_title: "Général"
 character_role_admiral_title: "Amiral"
 character_role_politician_title: "" #Empty on purpose
 character_role_agitator_title: "" #Intentionally empty
 character_role_executive_title: "Cadre"
 ROLE: "[concept_character_role]"
 CHARACTER_PRIMARY_ROLE: "#v [Character.GetAllRoleNames]#!"
 CHARACTER_PRIMARY_ROLE_TOOLTIP: "#header [Character.GetFullName]#! est un #v [Character.GetAllRoleNames]#!"
 INPUT_MULT: "[concept_input_mult] : #v [Building.GetInputMult|-=%0]#!"
 INPUT_MULT_TOOLTIP: "[Building.GetInputMultDesc]"
 THROUGHPUT: "[SelectLocalization(EqualTo_CFixedPoint(Building.GetThroughputBonusCurrent, Building.GetThroughputBonusTarget), 'THROUGHPUT_CONSTANT', 'THROUGHPUT_CHANGING')]"
 THROUGHPUT_CONSTANT: "[concept_throughput] : #v [Building.GetThroughputBonusCurrent|%=+0]#!"
 THROUGHPUT_CHANGING: "[concept_throughput] : #v [Building.GetThroughputBonusCurrent|%=+0]#! @arrow_right! #v [Building.GetThroughputBonusTarget|%=+0]#!"
 THROUGHPUT_TOOLTIP: "[SelectLocalization(EqualTo_CFixedPoint(Building.GetThroughputBonusCurrent, Building.GetThroughputBonusTarget), 'THROUGHPUT_TOOLTIP_CONSTANT', 'THROUGHPUT_TOOLTIP_CHANGING')]"
 THROUGHPUT_TOOLTIP_CONSTANT: "#header Bonus de capacité de production#!\n[Building.GetThroughputDesc]"
 THROUGHPUT_TOOLTIP_CHANGING: "La [concept_throughput|l] du bâtiment change.\n\n#header Bonus de capacité de production#!\n[Building.GetThroughputDesc]"
 EXPAND_ECONOMY_OF_SCALE_EFFECT_PER_LEVEL: "$EFFECT$ par niveau (plafonné au niveau $MAX_LEVEL|v$)"
 EXPAND_ECONOMY_OF_SCALE_EFFECT_TOTAL: "$EFFECT$ au total (plafonné à $MAX_EFFECT$)"
 BUILDING_ECONOMY_OF_SCALE_CAP_TOOLTIP: "Le bâtiment [Building.GetName] en [Building.GetState.GetName] est soumis à des [Concept('concept_economy_of_scale','économies d’échelle')] jusqu’au niveau [Building.GetModifier.GetValueWithBreakdownFor('building_economy_of_scale_level_cap_add')]"
 BUILDING_TYPE_ECONOMY_OF_SCALE_CAP_TOOLTIP: "[BUILDING_TYPE.GetName] en [STATE.GetName] est soumis à des effets d’[concept_economy_of_scale|l] jusqu’au niveau [MODIFIER.GetValueWithBreakdownFor('building_economy_of_scale_level_cap_add')]"
 BUILDING_ECONOMY_OF_SCALE_NATIONALIZATION_EFFECT: "Bonus liés à l'[concept_economy_of_scale|l] réduits de $AMOUNT|=+%0$ en raison des $LEVELS|v$/$TOTAL_LEVELS|v$ niveaux de [concept_nationally_owned|l]."
 character_ig_info: "[concept_interest_group] : #variable [CHARACTER.GetInterestGroup.GetName]#!"
 character_name_info: "[CHARACTER.GetFullNameWithTitle]"
 character_role_info: "#bold [CHARACTER.GetPrimaryRoleName]#!"
 character_age_info: "Âge : #variable [CHARACTER.GetAge]#!"
 character_traits_info: "#title Traits#!\n[CHARACTER.GetTraitsDesc]"
 character_command_limit_army: "[concept_command_limit] : [CHARACTER.GetCommandLimit] @battalions!"
 character_command_limit_navy: "[concept_command_limit] : [CHARACTER.GetCommandLimit] @flotillas!"
 character_ideology_info: "Idéologie : [CHARACTER.GetIdeology.GetName]"
 CHARACTER_TRAIT_FORMAT: "#variable $TRAIT$#!"
 CHAR_TRAIT_MODIFIER_HEADER_COUNTRY: "#title En tant que [concept_ruler|l] :#!"
 CHAR_TRAIT_MODIFIER_HEADER_COMMAND: "#title En tant que [concept_commander|l] :#!"
 CHAR_TRAIT_MODIFIER_HEADER_EXECUTIVE: "#title En tant que [concept_executive|l] :#!"
 CHAR_TRAIT_MODIFIER_HEADER_IG_LEADER: "#title En tant que [concept_leader|l] d’un [concept_interest_group|l] :#!"
 CHAR_TRAIT_MODIFIER_HEADER_AGITATOR: "#title En tant que [concept_agitator|l] :#!"
 CHAR_TRAIT_MODIFIER_HEADER_COUNTRY_INACTIVE: "#title En tant que [concept_ruler|l] (inactif) :#!"
 CHAR_TRAIT_MODIFIER_HEADER_COMMAND_INACTIVE: "#title En tant que [concept_commander|l] (inactif) :#!"
 CHAR_TRAIT_MODIFIER_HEADER_EXECUTIVE_INACTIVE: "#title En tant que [concept_executive|l] (inactif) :#!"
 CHAR_TRAIT_MODIFIER_HEADER_IG_LEADER_INACTIVE: "#title En tant que [concept_leader|l] d’un [concept_interest_group|l] (inactif) :#!"
 CHAR_TRAIT_MODIFIER_HEADER_AGITATOR_INACTIVE: "#title En tant que [concept_agitator|l] (inactif) :#!"
 POPULARITY_HATED: "#r Haï#!"
 POPULARITY_DISLIKED: "#r Détesté#!"
 POPULARITY_NEUTRAL: "Neutre"
 POPULARITY_LIKED: "#g Apprécié#!"
 POPULARITY_LOVED: "#g Adoré#!"
 character_info_with_ig_tooltip_general: "$character_info_tooltip_general$\n\n$character_ig_info$"
 character_info_with_ig_tooltip_admiral: "$character_info_tooltip_admiral$\n\n$character_ig_info$"
 character_info_with_ig_tooltip_politician: "$character_info_tooltip_politician$\n\n$character_ig_info$"
 character_info_tooltip_general: "#HEADER $character_name_info$#!\n$character_role_info$ \n$TOOLTIP_DELIMITER$\n$character_age_info$\n$character_assignments_info$\n\n$character_command_limit_army$\n\n$character_traits_info$"
 character_info_tooltip_admiral: "#HEADER $character_name_info$#!\n$character_role_info$\n$TOOLTIP_DELIMITER$\n$character_age_info$\n$character_assignments_info$\n\n$character_command_limit_navy$\n\n$character_traits_info$"
 character_info_tooltip_politician: "#HEADER $character_name_info$#!\n$character_role_info$\n$TOOLTIP_DELIMITER$\n$character_ideology_info$\n$character_age_info$\n\n$character_traits_info$"
 character_info_tooltip_ruler: "#HEADER $character_name_info$#!\n$character_role_info$\n$TOOLTIP_DELIMITER$\n$character_age_info$\n\n$character_traits_info$"
 character_info_tooltip_heir: "#HEADER $character_name_info$#!\n$character_role_info$\n$TOOLTIP_DELIMITER$\n$character_age_info$\n\n$character_traits_info$"
 MILITARY_PANEL: "Militaire"
 MILITARY_PANEL_TAB_ARMY: "Armée"
 MILITARY_PANEL_TAB_ARMY_SELECTED: "#bold Armée#!"
 MILITARY_PANEL_TAB_GARRISON: "Garnisons"
 MILITARY_PANEL_TAB_GARRISON_SELECTED: "#bold Garnisons#!"
 MILITARY_PANEL_TAB_NAVY: "Marine"
 MILITARY_PANEL_TAB_NAVY_SELECTED: "#bold Marine#!"
 TITLE_RULER: "#title Chef d’État#!"
 TITLE_HEIR: "#title Héritier présomptif#!"
 TITLE_LEADER: "#title Chef#!"
 IDEOLOGY_STRONG_APPROVAL: "#P Approuve fortement#!"
 IDEOLOGY_APPROVAL: "#P Approuve#!"
 IDEOLOGY_NEUTRAL: "#V Neutre#!"
 IDEOLOGY_DISAPPROVAL: "#N S'oppose#!"
 IDEOLOGY_STRONG_DISAPPROVAL: "#N S’oppose vivement#!"
 IDEOLOGY_NO_LAW_STANCES: "#bold Pas de positions#!"
 IDEOLOGY_LAW_STANCE_GROUP: "#title Position sur $LAW_GROUP|l$#!"
 IDEOLOGY_LAW_STANCE_STRONGLY_APPROVE: "#P Approuve fortement#! $LAWS|l$"
 IDEOLOGY_LAW_STANCE_APPROVE: "#P Approuve#! $LAWS|l$"
 IDEOLOGY_LAW_STANCE_DISAPPROVE: "#N Désapprouve#! $LAWS|l$"
 IDEOLOGY_LAW_STANCE_STRONGLY_DISAPPROVE: "#N Désapprouve fortement#! $LAWS|l$"
 IDEOLOGY_LAW_STANCE_NEUTRAL: "#V Neutre#! à propos de $LAWS|l$"
 POL_PANEL_IG_STATUS_HEADER: "#title Approbation#!"
 ig_approval_loyal: "#bold #P Loyal#!#!"
 ig_approval_happy: "#bold #P Heureux#!#!"
 ig_approval_neutral: "#bold Neutre#!"
 ig_approval_unhappy: "#bold #N Malheureux#!#!"
 ig_approval_angry: "#bold #N En colère#!#!"
 WILL_RADICALIZE_WARNING: "@warning! Cela conduira à la [Concept('concept_radical', '$concept_radicalization$')|l] du groupe [INTEREST_GROUP.GetName]"
 IG_APPROVAL_FROM_LEADER: "(de [CHARACTER.GetFullName] [INTEREST_GROUP.GetTextIcon])"
 IG_APPROVES_OF_LAW: "#BOLD $VAL|+=$#! car @approves! [Law.GetName]\n"
 IG_DISAPPROVES_OF_LAW: "#BOLD $VAL|+=$#! car @disapproves! [Law.GetName]\n"
 IG_APPROVES_OF_LAW_CHANGE: "@approves! $NAME$ $CLOUT_OPTIONAL$ : #tooltippable #tooltip:[INTEREST_GROUP.GetTooltipTag]|[LAW.GetTooltipTag],IG_LAW_APPROVAL_BREAKDOWN #BOLD $APPROVAL_DELTA|+=$#!#!#! (de #v $CURR_APPROVAL|+$#! à #v $PROJECTED_APPROVAL|+$#!)\n\n"
 IG_APPROVES_OF_PREVIOUS_LAW_CHANGE: "@approves! $NAME$ $CLOUT_OPTIONAL$#P #bold approuve#!#! le récent changement de [LAW_OTHER.GetName|l] à [LAW.GetName|l] : #BOLD $APPROVAL_DELTA|+=$#!#!#!\n\n"
 IG_DISAPPROVES_OF_LAW_CHANGE: "@disapproves! $NAME$ $CLOUT_OPTIONAL$ : #tooltippable #tooltip:[INTEREST_GROUP.GetTooltipTag]|[LAW.GetTooltipTag],IG_LAW_APPROVAL_BREAKDOWN #BOLD $APPROVAL_DELTA|+=$#!#!#! (de #v $CURR_APPROVAL|+$#! à #v $PROJECTED_APPROVAL|+$#!)\n\n"
 IG_DISAPPROVES_OF_PREVIOUS_LAW_CHANGE: "@disapproves! $NAME$ $CLOUT_OPTIONAL$#N #bold désapprouve#!#! le récent changement de [LAW_OTHER.GetName|l] à [LAW.GetName|l] : #BOLD $APPROVAL_DELTA|+=$#!#!#!\n\n"
 IG_NAME_WITH_LEADER: "[INTEREST_GROUP.GetName] (de [CHARACTER.GetFullName])"
 IG_APPROVES_OF_LAW_LONG: "@approves! $NAME$ $CLOUT_OPTIONAL$#P #bold approuve#!#! [Law.GetName|l] : #BOLD $VAL|+=$#!\n"
 IG_DISAPPROVES_OF_LAW_LONG: "@disapproves! $NAME$ $CLOUT_OPTIONAL$#N #bold désapprouve#!#! [Law.GetName|l] : #BOLD $VAL|+=$#!\n"
 IG_STRONGLY_APPROVES_OF_LAW_LONG: "@approves! $NAME$ $CLOUT_OPTIONAL$#P #bold approuve fortement#!#! [Law.GetName|l] : #BOLD $VAL|+=$#!\n"
 IG_STRONGLY_DISAPPROVES_OF_LAW_LONG: "@disapproves! $NAME$ $CLOUT_OPTIONAL$#N #bold désapprouve fortement#!#! [Law.GetName|l] : #BOLD $VAL|+=$#!\n"
 IG_APPROVES_OF_LAW_CHANGE_BREAKDOWN: "@approves! #variable [INTEREST_GROUP.GetName]#! #P #bold approuve#!#! le remplacement de #variable $OLD_LAW|l$#! ($OLD_APPROVAL$) par #variable $LAW|l$#! ($APPROVAL$)\n#BOLD $APPROVAL_DELTA|+=$#! (de $CURR_APPROVAL|=$ à $PROJECTED_APPROVAL|=$)"
 IG_DISAPPROVES_OF_LAW_CHANGE_BREAKDOWN: "@disapproves! #variable [INTEREST_GROUP.GetName]#! #N #bold désapprouve#!#! le remplacement de #variable $OLD_LAW|l$#! ($OLD_APPROVAL$) par #variable $LAW|l$#! ($APPROVAL$)\n#BOLD $APPROVAL_DELTA|+=$#! (de $CURR_APPROVAL|=$ à $PROJECTED_APPROVAL|=$)"
 IG_LAW_APPROVAL_BREAKDOWN: "[InterestGroup.GetLawApprovalBreakdown(Law.Self)]"
 IG_APPROVAL_DECAY_DESC: "#bold Après la promulgation#!, $APPROVAL_DELTA|+=$ déclinera vers #BOLD $VAL|+=$#! durant $MONTHS|0v$ mois"
 IG_APPROVAL_DECAY_IN_PROGRESS_DESC: "(Cette réaction décline en $MONTHS$ mois et sera remplacée par une approbation de #BOLD $VAL|+=$#! ($APPROVAL$).)"
 IG_WITH_CLOUT: "([INTEREST_GROUP.GetClout|%1v])"
 IG_MARGINAL_WITH_CLOUT: "([INTEREST_GROUP.GetClout|%1v] - [concept_marginalized|l])"
 NO_CHANGE_IN_APPROVAL: "[INTEREST_GROUP.GetName] aime $LAW|l$ autant que $OLD_LAW|l$"
 ENACTING: "En cours d’adoption"
 CURRENTLY_ENACTING: "Actuellement en cours d’adoption :"
 ZOOM_TO_CAPITAL_STATE: "Zoom sur [Country.GetCapital.GetName] ([concept_capital_state])"
 GOV_STABILITY_DROP_FROM_LAW: "$TAB$ #variable $IGNAME$#! $IDEOLOGY$ : #BOLD #N -$VAL|0%$#!#!"
 IG_STABILITY_DROP_FROM_LAW: "Adopté : $LAW|l$"
 IG_STABILITY_BONUS_SINGLE_GROUP: "Seul [concept_interest_group|l] au gouvernement : #variable #P $VAL|=0%$#!#!#!\n"
 IG_STABILITY_PENALTY_RELATION: "#bold $DISLIKING_IG$#! n’aime pas #bold $LEADER_IG$#! : #variable #N $VAL|0%$#!#!\n"
 IG_STABILITY_BONUS_RELATION: "#bold $LIKING_IG$#! aime #bold $LEADER_IG$#! : #variable #P $VAL|=0%$#!#!\n"
 IG_STABILITY_PENALTY_RECENT_LAW: "#bold $DISLIKING_IG$#! s’est opposé aux lois récemment adoptées : #variable #N $VAL|0%$#!#!\n"
 IG_STABILITY_PENALTY_OPPOSITION: "Poids politique de l’opposition : #variable #N $VAL|0%$#!#!\n"
 GOV_IG_ENACTMENT_SUPPORT: "   @approves! [INTEREST_GROUP.GetName] ($CLOUT_SHARE|%1v$) #P #bold approuve#!#! : #BOLD $VAL|-=$#! jours"
 GOV_IG_ENACTMENT_NEUTRAL: "   [INTEREST_GROUP.GetName] ($CLOUT_SHARE|%v1$) sont #tooltippable #tooltip:INDIFFERENT_BREAKDOWN indifférents#!#! : #BOLD $VAL|-=$#! jours"
 GOV_IG_ENACTMENT_OPPOSITION: "   @disapproves! [INTEREST_GROUP.GetName] ($CLOUT_SHARE|%v1$) #bold #N s’oppose#!#! : #BOLD $VAL|-=$#! jours"
 LAW_APPROVAL: "#bold [Law.GetPercentPolStrApprove|%1]#!"
 #LAW_APPROVAL: "#bold [Law.GetNumIGsApprove]#! ([Law.GetPercentPolStrApprove|%0])"
 LAW_DISAPPROVAL: "#bold [Law.GetPercentPolStrDisapprove|%1]#!"
 #LAW_DISAPPROVAL: "#bold [Law.GetNumIGsDisapprove]#! ([Law.GetPercentPolStrDisapprove|%0])"
 LAW_INDIFFERENT: "#bold [Law.GetPercentPolStrUndecided|%1]#!"
 #LAW_UNDECIDED: "#bold [Law.GetNumIGsUndecided]#! ([Law.GetPercentPolStrUndecided|%0])"
 TOOLTIP_LAW_APPROVAL: "#header [Concept('concept_endorse_oppose', '$concept_endorsement$')] @approves!#!\n$LAW_IGS_APPROVE$"
 TOOLTIP_LAW_INDIFFERENT: "#header [Concept('concept_endorse_oppose', 'Indifférence')] @indifferent!#!\n$LAW_IGS_INDIFFERENT$"
 TOOLTIP_LAW_DISAPPROVAL: "#header [Concept('concept_endorse_oppose', '$concept_opposition$')] @disapproves!#!\n$LAW_IGS_DISAPPROVE$"
 LAW_IGS_APPROVE: "#variable [Law.GetPercentPolStrApprove|%1]#! du [concept_clout|l] dans le [concept_country|l] approuvent #variable [Law.GetName|l]#! @approves!.[ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', Law.GetIGsApproveList)]"
 LAW_IGS_DISAPPROVE: "#variable [Law.GetPercentPolStrDisapprove|%1]#! du [concept_clout|l] dans le [concept_country|l] désapprouvent #variable [Law.GetName|l]#! @disapproves!.[ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', Law.GetIGsDisapproveList)]"
 LAW_IGS_INDIFFERENT: "#variable [Law.GetPercentPolStrUndecided|%1]#! du [concept_clout|l] dans le [concept_country|l] ne se préoccupent pas de #variable [Law.GetName|l]#!.[ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', Law.GetIGsUndecidedList)]"
 LAW_NO_GOVERNMENT_OR_MOVEMENT_SUPPORT: "Aucun [concept_interest_group|l] [concept_in_government|l] approuve [Law.GetName] et il n’y a pas de [concept_political_movement|l] qui soutient cette loi"
 LAW_NO_CHANCE_TO_PASS: "La probabilité de [concept_enactment_success|l] est supérieure à #v 0 %#!"
 NEVER: "#b Permanent#!"
 TOOLTIP_IDEOLOGY: "#HEADER [Ideology.GetName]#!\n$TOOLTIP_DELIMITER$\n[Ideology.GetLawStanceDesc]\n\n#lore [Ideology.GetDesc]#!"
 TOOLTIP_IG_TRAIT_FROM_PAIR: "#HEADER [InterestGroupAndTraitPair.GetInterestGroup.GetName] - [InterestGroupAndTraitPair.GetTrait.GetName]#! [InterestGroupAndTraitPair.GetTrait.GetInactiveString(InterestGroupAndTraitPair.GetInterestGroup)]\n[InterestGroupAndTraitPair.GetTrait.GetModifiersDesc(InterestGroupAndTraitPair.GetInterestGroup)]\n$TOOLTIP_DELIMITER$\n[InterestGroupAndTraitPair.GetTrait.GetTriggersDesc(InterestGroupAndTraitPair.GetInterestGroup)]\n\n#lore [InterestGroupAndTraitPair.GetTrait.GetDesc]#!"
 TOOLTIP_STATE_TRAIT: "#HEADER [StateTrait.GetName]#!\n[StateTrait.GetModifiersDesc]"
 IN_GOVERNMENT: "[concept_in_government]"
 IN_OPPOSITION: "[concept_in_opposition]"
 IN_GOVERNMENT_WITH_ICON: "@in_government! [concept_in_government|l]"
 IN_OPPOSITION_WITH_ICON: "@in_opposition! [concept_in_opposition|l]"
 MARGINAL: "[concept_marginalized]"
 MARGINAL_GROUPING: "$MARGINAL$"
 MARGINAL_AND_INACTIVE_GROUPING: "Marginalisés et inactifs"
 INTEREST_GROUP_ITEM: "#variable [INTEREST_GROUP.GetClout|1%]#! [INTEREST_GROUP.GetName]"
 INTEREST_GROUP_ITEM_POPULATION: "[INTEREST_GROUP.GetName] : #variable [INTEREST_GROUP.GetPopulation|K]#!"
 POP_TYPE_POPULATION_ITEM: "$TYPE$ : #variable $VAL|K$#!\n"
 LEADING_IG: "#header [concept_interest_group] en chef#!\nIdéologie du chef : [InterestGroup.GetLeaderIdeologyDesc|l]\nIdéologies : [InterestGroup.GetIdeologyDesc]\n\nPuisque [InterestGroup.GetName] est le [concept_interest_group|l] avec le plus de [concept_political_strength|l] au gouvernement, il est considéré comme le [concept_interest_group|l] en chef."
 FAVORS_IDEOLOGY: "Favorable à #variable $IDEOLOGY_NAME$#! : $VAL|+=$"
 OPPOSES_IDEOLOGY: "S’oppose à #variable $IDEOLOGY_NAME$#! : $VAL|+=$"
 RELATION_TO_IG: "Relation envers #variable $IG_NAME$#! : $RELATION_VALUE|+=$\n$TOOLTIP_DELIMITER$\n$RELATION_BREAKDOWN$"
 IN_GOVERNMENT_DESC: "#HEADER Au gouvernement#!\n$TOOLTIP_DELIMITER$\n[concept_in_government_desc]"
 IN_OPPOSITION_DESC: "#HEADER Dans l’opposition#!\n$TOOLTIP_DELIMITER$\n[concept_in_opposition_desc]"
 MARGINAL_DESC: "#HEADER Marginalisés#!\n$TOOLTIP_DELIMITER$\n[concept_marginalized_desc]"
 IN_REVOLUTION_DESC: "#HEADER En révolution#!\n$TOOLTIP_DELIMITER$\n$IN_REVOLUTION_CONCEPT$"
 IG_IDEOLOGY_LABEL: "[Ideology.GetNameNoFormatting][AddLocalizationIf( Ideology.IsCharacterIdeology, 'IG_IDEOLOGY_FROM_LEADER')]"
 IG_IDEOLOGY_FROM_LEADER: " #lore (du dirigeant)#!"
 SECESSION_ALERT_ENTRY_CHANCE: "[CULTURE.GetName] [CULTURE.GetChanceForSecessionMovement( GetPlayer.Self )|%1v]"
 SECESSION_ALERT_ENTRY_GROWING: "[CULTURE.GetName]"
 COST_OF_WAR_ENTRY: "[Country.GetName] $TYPE$ : $COST|vD$@money!"
 COST_OF_WAR_TYPE_MATERIEL: "Biens militaires"
 COST_OF_WAR_TYPE_WAGES: "Salaires des conscrits"
 COST_OF_WAR_TOOLTIP: "#header Coût total de la guerre : $COST|vD$@money!#!\n$COST_OF_WAR_TYPE_MATERIEL$ : $MATERIEL_COST|vD$@money!\n$COST_OF_WAR_TYPE_WAGES$ : $WAGES_COST|vD$@money!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 FILTERS: "Filtres"
 MARKET_PANEL_WORLD_MARKET_TRADE: "Commerce"
 TODO: "#todo TODO#!"
 TARIFFS: "Droits de douane"
 GOODS_WITHOUT_WORLD_MARKET_TRADE: "Biens sans commerce sur le marché mondial"
 GOODS_CATEGORY: "Catégorie de biens"
 SHOW_ZERO_TRADE: "Tout commerce"
 TARIFFS_SHOW_ALL: "Tout afficher"
 TARIFFS_SHOW_ALL_TT: "Tout afficher"
 TARIFFS_SHOW_ONLY_TRADED: "Uniquement échangé"
 TARIFFS_SHOW_ONLY_TRADED_TT: "Uniquement échangé"
 TOTAL_TARIFFS_SUBVENTIONS_MONEY_STATE_BALANCE_FOR_GOODS: "[Goods.GetStateTariffsSubventionsBalance|K=+]@money!"
 TOTAL_TARIFFS_SUBVENTIONS_MONEY_STATE_BALANCE_FOR_GOODS_TOOLTIP: "[Goods.GetStateTariffsSubventionsBalanceDesc]"
 TOTAL_TARIFFS_SUBVENTIONS_MONEY_MARKET_BALANCE_FOR_GOODS: "[Goods.GetMarketTariffsSubventionsBalance|K=+]@money!"
 TOTAL_TARIFFS_SUBVENTIONS_MONEY_MARKET_BALANCE_FOR_GOODS_TOOLTIP: "[Goods.GetMarketTariffsSubventionsBalanceDesc]"
 TOTAL_TARIFFS_SUBVENTIONS_MONEY_BALANCE_FOR_GOODS_HEADER: "#header $GOODS_NAME$[Nbsp]$GOODS_ICON$ : [concept_tariffs|l] et [concept_subventions|l]#!"
 TOTAL_TARIFFS_SUBVENTIONS_MONEY_BALANCE_FOR_GOODS_DESC: "$HEADER$\n$VALUE|K=+$ en $NAME$\n$TOOLTIP_DELIMITER$\n$TARIFFS|K=+$ des droits de douane ($TARIFF_RATE|%0v$ de taux de droit de douane)\n$SUBVENTIONS|K=+$ des subventions ($SUBVENTION_RATE|%0v$ de taux de subvention)"
 TOTAL_TARIFFS_SUBVENTIONS_MONEY_BALANCE_FOR_GOODS_NO_TRADE_DESC: "$HEADER$\n$TOOLTIP_DELIMITER$\nAucun [concept_trade|l] pour ce [concept_good|l] en $NAME|v$"
 TOTAL_TARIFFS_SUBVENTIONS_MONEY_BALANCE_FOR_GOODS_NONE_DESC: "$HEADER$\n$TOOLTIP_DELIMITER$\nPas de droits de douane ni de subventions pour ce [concept_good|l] en $NAME|v$"
 WORLD_MARKET_GOODS_EXPORT_TOOLTIP: "#header Exportations [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] sur le [MARKET.GetName|l]#!\nQuantité : [Market.GetExportedAmount(Goods.Self)|v0]"
 WORLD_MARKET_GOODS_IMPORT_TOOLTIP: "#header Importations [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] sur le [MARKET.GetName|l]#!\nQuantité : [Market.GetImportedAmount(Goods.Self)|v0]"
 revolution_name: "[concept_revolution]"
 secession_name: "[concept_secession]"
 REVOLUTIONS_HEADER: "#header $concept_revolution$#!"
 REVOLUTIONS_HEADER_TOOLTIP: "Il y a des [Concept('concept_interest_group', '$concept_interest_groups$')|l] qui essaient de renverser le gouvernement !"
 SECESSION_HEADER: "#header $concept_secession$#!"
 SECESSION_HEADER_TOOLTIP: "Une partie du [concept_country|l] essaie de faire sécession !"
 SECESSIONS: "Sécessions"
 CIVIL_WAR_PROGRESS_TOOLTIP: "#header Progrès du [PoliticalMovement.GetCivilWar.GetName|l]#!\n#v [PoliticalMovement.GetCivilWar.GetProgress|1%]#! de progrès total[ConcatIfNeitherEmpty('\n', AddLocalizationIf(PoliticalMovement.IsInsurrectionary, 'POLITICAL_MOVEMENT_REVOLUTION_CLOCK_CHECKPOINT'))][ConcatIfNeitherEmpty('\n', AddLocalizationIf(PoliticalMovement.IsInsurrectionary, 'POLITICAL_MOVEMENT_REVOLUTION_PROGRESS_AT_CHECKPOINT'))]\n$TOOLTIP_DELIMITER$\nS’il atteint #v 100 %#!, une [concept_civil_war|l] éclatera.\n\n[PoliticalMovement.GetCivilWar.GetMaxProgressDesc]"
 UPRISING_PROGRESS_TOOLTIP_STATE_ENTRY: "$TAB$$VALUE|%0v$ de risque pour [STATE.GetName]"
 UPRISING_PROGRESS_TOOLTIP_STATE_ENTRY_GUARANTEED: "$TAB$[STATE.GetName]"
 UPRISING_PROGRESS_TOOLTIP_STATE_ENTRY_UNIT: "$VALUE|v$ $ICON$"
 UPRISING_PROGRESS_TOOLTIP_NUM_UNITS: "Soutien de $ARMY_UNITS|v$@battalions! et $NAVY_UNITS|v$@flotillas!"
 UPRISING_PROGRESS_TOOLTIP_CIVIL_WAR_CONSCRIPTION_RATE: "Pourra lever $NUM_UNITS|v$@conscripts! supplémentaires en raison du taux de [Concept('concept_conscription_center','$concept_conscription$')|l] de $CONSCRIPTION_RATE|=v%$ de soutien populaire et du [concept_clout|l] des [Concept('concept_interest_group', '$concept_interest_groups$')|l] [Concept('concept_insurrection','$concept_insurrectionary$s')|l]"
 CIVIL_WAR_MAX_PROGRESS_BREAKDOWN: "Le progrès maximal est de #v $TOTAL_MAX|%0$#! en raison de : #indent_newline:3 \n$POLITICAL_MOVEMENT_RADICALISM_WITH_LABEL$"
 CIVIL_WAR_MAX_UNSUPPORTED_PROGRESS: "Cette révolution ne peut pas progresser au-delà de [Multiply_CFixedPoint('(CFixedPoint)$PROGRESS_LIMIT$','(CFixedPoint)100')|0v] en raison du [concept_political_movement|l] qui manque de soutien de la part d’un [concept_interest_group|l]."
 CIVIL_WAR_PROGRESS_AT_MAX_PROGRESS: "#header Progrès hebdomadaire\n$TOOLTIP_DELIMITER$\nLa [concept_revolution|l] est au progrès maximal actuel de #tooltippable #tooltip:$BREAKDOWN_TAG$ [Multiply_CFixedPoint('(CFixedPoint)$MAX_PROGRESS$','(CFixedPoint)100')|0]#!#!"
 CIVIL_WAR_PROGRESS_ABOVE_MAX_PROGRESS: "#header Progrès hebdomadaire\n$TOOLTIP_DELIMITER$\nLa [concept_revolution|l] est au-delà du progrès maximal de #tooltippable #tooltip:$BREAKDOWN_TAG$ [Multiply_CFixedPoint('(CFixedPoint)$MAX_PROGRESS$','(CFixedPoint)100')|0]#!#!"
 CIVIL_WAR_PROGRESS_AT_CHECKPOINT_TOOLTIP: "#header Progression de la [concept_revolution|l]#!\n$PROGRESS|=%-1$ jusqu’au prochain point de contrôle\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 CIVIL_WAR_PROGRESS_AT_CHECKPOINT_FROM_RADICALISM: "#v $PROGRESS|=%-1$#! en raison du [Concept( 'concept_radical', '$concept_radicalism$' )|l]"
 CIVIL_WAR_PROGRESS_AT_CHECKPOINT_NEAR_CAP: "\nCe [Concept('concept_political_movement', '$concept_political_movement_short$')|l] ne peut pas progresser au-delà de $MAX_PROGRESS|%0v$ (actuellement à $PROGRESS|1%v$) et la progression jusqu’au prochain point de contrôle est donc réduite à $MAX_DELTA|=%-1$"
 REVOLUTIONS_UPRISING_HEADER_LOYALIST: "S’oppose [CivilWar.GetUprisingCountry.GetAltNameNoFormatting('Au')][CivilWar.GetUprisingCountry.GetName] !"
 REVOLUTIONS_UPRISING_HEADER_REBEL: "S’oppose [CivilWar.GetOriginCountry.GetAltNameNoFormatting('Au')][CivilWar.GetOriginCountry.GetName] !"
 REVOLUTIONS_IG_LIST_HEADER: "#title [Concept('concept_interest_group', '$concept_interest_groups$')] insurrectionnels :#!"
 REVOLUTIONS_IG_LIST_HEADER_TOOLTIP: "Les [Concept('concept_interest_group', '$concept_interest_groups$')|l] insurrectionnels dans le pays"
 BATTALIONS_STILL_FIGHTING: "@battalions! Bataillons"
 BATTALIONS_FIGHTING_HISTORY: "@battalions! Historique des combats des bataillons"
 MANPOWER_FIGHTING_HISTORY: "Hommes aptes au combat"
 SECESSION_UPRISING_HEADER: "#N #BOLD [CivilWar.GetUprisingCountry.GetAltNameNoFormatting('Le')|U][CivilWar.GetUprisingCountry.GetName] a fait sécession avec nous !#!#!"
 SECESSION_UPRISING_HEADER_LOYALIST: "Nous combattons les traîtres [CivilWar.GetUprisingCountry.GetAltNameNoFormatting('En')][CivilWar.GetUprisingCountry.GetName] !"
 SECESSION_UPRISING_HEADER_REBEL: "Nous combattons les tyrans [CivilWar.GetOriginCountry.GetAltNameNoFormatting('En')][CivilWar.GetOriginCountry.GetName] !"
 ADD_TO_GOVERNMENT: "Ajouter au gouvernement"
 REMOVE_FROM_GOVERNMENT: "Retirer du gouvernement"
 LEGITIMACY_CHANGE_SWITCH_TOOLTIP: "Cela se traduirait par un changement de [concept_legitimacy|l] de #variable $VAL|+=0$#! (actuellement #variable [GetPlayer.GetGovernmentLegitimacy]#!)\n$TOOLTIP_DELIMITER$\nLa légitimité du gouvernement ainsi obtenu ressemblerait à :\n$DESC$"
 TOOLTIP_REFORM_GOVERNMENT: "#HEADER $REFORM_GOVERNMENT$#!\n[ReformGovernment.GetConfirmDesc][ConcatIfNeitherEmpty('\n', AddLocalizationIf(LessThan_int32(ReformGovernment.GetPredictedLegitimacy, '(int32)25'), 'ILLEGITIMATE_GOVERNMENT_WARNING_REFORM'))]"
 ILLEGITIMATE_GOVERNMENT_WARNING_REFORM: "@warning! Cela entraînerait un [ReformGovernment.GetPredictedLegitimacyLevel.GetNameNoFormatting|l], ce qui signifie qu’aucune [concept_law|l] ne pourra être [Concept('concept_enactment_of_laws','$concept_enactment_of_laws_enacted$e')|l] sans un [concept_political_movement|l]"
 ILLEGITIMATE_GOVERNMENT_WARNING: "@warning! Il s’agit d’un [Country.GetGovernmentLegitimacyLevel.GetNameNoFormatting|l], ce qui signifie qu’aucune [concept_law|l] ne pourra être [Concept('concept_enactment_of_laws','$concept_enactment_of_laws_enacted$e')|l] sans un [concept_political_movement|l]"
 ADD_TO_GOVERNMENT_SHORT: "Ajouter"
 REMOVE_FROM_GOVERNMENT_SHORT: "Retirer"
 FORM_GOV_DATE_INVALID: "Nous ne pouvons pas encore changer le statut de gouvernement de #variable $IG$#! jusqu’au #BOLD #V $DATE$#!#!\n"
 FORM_GOV_IG_NOT_IN_GOVERNMENT: "Pas [concept_in_government|l]"
 FORM_GOV_REVOLUTIONARY_COUNTRY: "Les [Concept('concept_interest_group', '$concept_interest_groups$')|l] révolutionnaires ne peuvent être retirés dans un pays révolutionnaire"
 FORM_GOV_IG_ALREADY_IN_GOVERNMENT: "Déjà [concept_in_government|l]"
 FORM_GOV_IG_IS_MARGINAL: "Ne peuvent pas être promus au pouvoir tant qu’ils sont [Concept('concept_marginalized', 'marginalisés')|l]"
 FORM_GOV_IG_IS_ANGRY: "Ne peuvent pas être promus au pouvoir tant que l’[concept_approval|l] est $ig_approval_angry$"
 FORM_GOV_IG_IS_INSURRECTIONARY: "Ne peuvent pas être promus au pouvoir parce qu’ils sont insurrectionnels"
 FORM_GOV_IG_IS_SUPPRESSED: "Ne peuvent être promus au pouvoir tant qu’ils sont réprimés"
 FORM_GOV_GOVERNMENT_TOO_SMALL: "Votre gouvernement doit contenir au moins un [concept_interest_group|l]"
 FORM_GOV_MISSING_PARTY_IG: "Il manque à votre gouvernement [InterestGroup.GetName], qui fait partie de [Party.GetName] [Party.GetMembersSummary]."
 FORM_GOV_NO_CHANGE: "Il n’y a aucun changement à l’actuel [concept_government|l]."
 FORM_GOV_EMPTY: "Le gouvernement doit contenir au moins un [concept_interest_group|l]."
 FORM_GOV_RECENT_REGIME_CHANGE: "Nous avons récemment eu un changement de régime forcé."
 FORM_GOV_IG_WANTS_TO_JOIN_PARTY: "$IG_NAME$ veut rejoindre $PARTY_NAME$"
 FORM_GOV_CIVIL_WAR_COUNTRY: "Les pays nés d’une [concept_civil_war|l] ne peuvent pas réformer leur [concept_government|l] tant qu’une [concept_civil_war|l] est en cours"
 MEMBERS: "Membres"
 RULER_JOIN_IG_SHORT: "Rejoindre"
 RULER_JOIN_IG_LONG: "Faire adhérer le [concept_ruler|l] à un [concept_interest_group|l]"
 RULER_LEGITEMACY_NO_CHANGE_TOOLTIP: "Cela n’entraînerait pas un changement de [concept_legitimacy|l] (actuellement #variable [GetPlayer.GetGovernmentLegitimacy]#!)"
 RULER_LEGITEMACY_CHANGE_TOOLTIP: "Cela entraînerait un changement de [concept_legitimacy|l] de #variable $VAL|+=0$#! (actuellement #variable [GetPlayer.GetGovernmentLegitimacy]#!)"
 TOOLTIP_RULER_JOIN_IG_DESC: "\n$TOOLTIP_DELIMITER$\nFaire adhérer votre [concept_ruler|l] à ce [concept_interest_group|l] pour promouvoir ses idéologies\n\nCela va grandement irriter son [concept_interest_group|l] actuel et nous ne pourrons plus modifier le [concept_interest_group|l] du [concept_ruler|l] pendant [GetDefine( 'NPolitics', 'RULER_CHANGE_IG_COOLDOWN_YEARS' )|v] ans#!"
 TOOLTIP_RULER_JOIN_IG: "#HEADER $IG_RIGHT_CLICK_MENU_RULER_JOIN_IG$#!\n[InterestGroup.GetRulerJoinGovDesc]"
 SUPPRESS_SHORT: "$concept_suppress$"
 SUPPRESS_NOT_SHORT: "Cesser de [concept_suppress|l]"
 SUPPRESSED: "[Concept('concept_suppress', '$concept_suppressed$')]"
 BOLSTER_SHORT: "$concept_bolster$"
 BOLSTER_NOT_SHORT: "Cesser de [concept_bolster|l]"
 BOLSTERED: "[Concept('concept_bolster','$concept_bolstered$')]"
 TOOLTIP_SUPPRESS: "#header $SUPPRESS_SHORT$ le [PoliticalMovement.GetName|l]#!\n$SUPPRESSION_EFFECTS$[SelectLocalization(StringIsEmpty(GetDesc(PoliticalMovement.ToggleSuppression)), '', '\n\n')][GetDesc(PoliticalMovement.ToggleSuppression)]"
 TOOLTIP_SUPPRESS_NOT: "#header $SUPPRESS_NOT_SHORT$ le [PoliticalMovement.GetName|l]#!\n[GetDesc(PoliticalMovement.ToggleSuppression)]"
 TOOLTIP_BOLSTER: "#header $BOLSTER_SHORT$ le [PoliticalMovement.GetName|l]#!\n$PROMOTION_EFFECTS$[SelectLocalization(StringIsEmpty(GetDesc(PoliticalMovement.ToggleBolstering)), '', '\n\n')][GetDesc(PoliticalMovement.ToggleBolstering)]"
 TOOLTIP_BOLSTER_NOT: "#header $BOLSTER_NOT_SHORT$ le [PoliticalMovement.GetName|l]#!\n[GetDesc(PoliticalMovement.ToggleBolstering)]"
 TOOLTIP_SUPPRESSED: "#header $SUPPRESSED$#!\n$TOOLTIP_DELIMITER$\n$SUPPRESSION_EFFECTS$"
 TOOLTIP_BOLSTERED: "#header $BOLSTERED$#!\n$TOOLTIP_DELIMITER$\n$PROMOTION_EFFECTS$"
 SUPPRESSION_EFFECTS: "[PoliticalMovement.GetCountry.GetModifier.GetValueWithBreakdownFor('country_suppression_attraction_factor')] $country_suppression_attraction_factor$[ConcatIfNeitherEmpty('\n', PoliticalMovement.GetSuppressionEffectDesc)]\n\n#title Coût :#! [PoliticalMovement.GetCountry.GetSuppressionCostDesc] chaque semaine"
 PROMOTION_EFFECTS: "[PoliticalMovement.GetCountry.GetModifier.GetValueWithBreakdownFor('country_bolster_attraction_factor')] $country_bolster_attraction_factor$[ConcatIfNeitherEmpty('\n', PoliticalMovement.GetBolsteringEffectDesc)]\n\n#title Coût :#! [PoliticalMovement.GetCountry.GetBolsteringCostDesc] chaque semaine"
 SUPPRESSION_COST: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VAL|v0$#!#! d’[concept_authority|l]@aut!"
 SUPPRESSION_COST_TOOLTIP: "#header Coût pour [concept_suppress|l] : $VAL|v0$ d’[concept_authority|l] @aut!#!\n$TOOLTIP_DELIMITER$\nBase : $BASE|v0$@aut!\n$BREAKDOWN$"
 BOLSTER_COST: "#tooltippable #tooltip:$TOOLTIP_TAG$ $VAL|v0$#!#! d’[concept_authority|l]@aut!"
 BOLSTER_COST_TOOLTIP: "#header Coût pour [concept_bolster|l] : $VAL|v0$ d’[concept_authority|l] @aut!#!\n$TOOLTIP_DELIMITER$\nBase : $BASE|v0$@aut!\n$BREAKDOWN$"
 PROMOTE_COMMANDER: "Promouvoir"
 CHANGE_RANK_CANNOT_PROMOTE: "[Character.GetFullName] a déjà le rang le plus élevé ([Character.GetRankName|l]) et ne peut pas être promu."
 CHANGE_RANK_CANNOT_PROMOTE_RULER: "[Character.GetFullName] est le [Character.GetPrimaryRoleTitle|l] [Character.GetCountry.GetAltNameNoFormatting('Du')][Character.GetCountry.GetName] et ne peut pas être promu[Character.GetCustom('FR_E')] au-delà de [Character.GetRankName|l]"
 DESIGNATE_STRATEGIC_OBJECTIVE_IMPOSSIBLE_STATE: "[State.GetNameNoFormatting] n’est pas un [concept_front|l] ennemi [Country.GetAltAdjectiveNoFormatting('MS')|l] et n’appartient pas [Country.GetAltNameNoFormatting('Au')][Country.GetNameNoFormatting]"
 SUPPRESS_MOVEMENT_IS_PROMOTED: "Le [concept_political_movement|l] est [Concept('concept_bolster','$concept_bolstered$')|l]"
 SUPPRESS_MOVEMENT_INSUFFICIENT_AUT: "$AUTHORITY$ disponible insuffisante, $REQVAL|1v$ requis "
 SUPPRESS_MOVEMENT_NO_SUPPRESSION_POWER: "Pas de capacité juridique pour [concept_suppress|l] des [Concept('concept_political_movement', '$concept_political_movements$')|l]"
 PROMOTE_MOVEMENT_IS_SUPPRESSED: "Le [concept_political_movement|l] est [Concept('concept_suppress','$concept_suppressed$')|l]"
 PROMOTE_MOVEMENT_INSUFFICIENT_AUT: "$AUTHORITY$ disponible insuffisante, $REQVAL|1v$ requis"
 PROMOTE_MOVEMENT_NO_PROMOTION_POWER: "Pas de capacité juridique pour [concept_bolster|l] des [Concept('concept_political_movement', '$concept_political_movements$')|l]"
 IG_IS_IN_GOVERNMENT: "[concept_in_government] : #variable [GetDefine( 'NPolitics', 'IG_IN_GOVERNMENT_APPROVAL' )|+=]#!"
 IG_IS_IN_OPPOSITION: "[concept_in_opposition] : #variable [GetDefine( 'NPolitics', 'IG_IN_OPPOSITION_APPROVAL' )|+=]#!"
 IG_POWERFUL_IS_IN_OPPOSITION: "[concept_powerful] et [concept_in_opposition|l] : #variable [GetDefine( 'NPolitics', 'IG_POWERFUL_IN_OPPOSITION_APPROVAL' )|+=]#!"
 IG_INSURRECTIONARY_IN_GOVERNMENT: "Les [Concept('concept_interest_group', '$concept_interest_groups$')|l] [Concept('concept_insurrection','$concept_insurrectionary$s')|l] [concept_in_government|l] ont une [concept_approval|l] maximale"
 IG_LAW_APPROVAL_CAPPED: "[concept_approval] totale de #B $TOTAL|+=$#! (plafonnée à partir de la valeur réelle de #B $UNCAPPED|+=$#!) en raison de :"
 IG_LAW_APPROVAL: "[concept_approval] totale de #B $TOTAL|+=$#! en raison de :"
 IG_LOYALISTS_APPROVAL: "#v $POL_STR|0%$#! de la [concept_political_strength|l] du [concept_interest_group|l] est [concept_loyalist|l] : #v $APPROVAL|=+$#!"
 IG_RADICALS_APPROVAL: "#v $POL_STR|0%$#! de la [concept_political_strength|l] du [concept_interest_group|l] est [Concept('concept_radical', 'radicale')|l] : #v $APPROVAL|=+$#!"
 IG_ACTIVE_LAWS_HEADER: "#title Lois actives#!"
 IG_LAW_CHANGES_HEADER: "#title Changement de loi#!"
 IG_OTHER_FACTORS_HEADER: "#title Autres facteurs#!"
 IG_LOBBY_APPEASEMENT: "$VALUE|=+$ en raison de l’apaisement du lobby [POLITICAL_LOBBY.GetName]"
 IG_APPROVAL_FROM_APPEASEMENT: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|=+$#!#! en raison de l’[concept_political_lobby_appeasement|l] des [Concept('concept_political_lobby','$concept_political_lobbies$')|l]"
 IG_LOBBY_APPEASEMENT_NUM_LOBBIES_MULTIPLIER: "Multiplié par #v x$MULTIPLIER$#! car ils font partie des $NUM_LOBBIES|v$ [Concept('concept_political_lobby','$concept_political_lobbies$')|l]"
 IS_SUPPRESSED_ATTRACTION: "[Concept('concept_suppress','$concept_suppressed$')] : #variable $VAL|+=%0$#!"
 IS_BOLSTERED_ATTRACTION: "[Concept('concept_bolster','$concept_bolstered$')] : #variable $VAL|+=%0$#!"
 PEOPLE_ABROAD_TOOLTIP: "#BOLD #V Population non incorporée#!#!\n$TOOLTIP_DELIMITER$\n$ABROAD_POP_CONCEPT$"
 INTEREST_GROUP_TITLE: "#title [concept_interest_group]#!"
 LAW_TITLE: "#title Loi#!"
 CLOUT_TITLE: "#title Poids politique#!"
 SP_TITLE: "#title Points de force de l’armée#!"
 SP_NAVAL_TITLE: "#title Points de force de la marine#!"
 REVOLUTION_TITLE: "#title Révolution !#!"
 REVOLUTION_CAPITAL_STATE_PROGRESS: "Provinces détenues de la capitale de l’État : "
 REVOLUTION_CAPITAL_TAKE_DESC: "Lorsque la révolution détient toutes les provinces de l’État de la capitale, elle entame un compte à rebours vers la victoire.\n#variable [RevolutionaryFaction.GetCountry.GetAltNameNoFormatting('Le')|U][RevolutionaryFaction.GetCountry.GetName]#! détient #variable [RevolutionaryFaction.GetCapitalControl]#! provinces, les révoltés en détiennent #variable [RevolutionaryFaction.GetRevolutionCapitalControl]#!"
 REVOLUTION_VICTORY_DESC: "Lorsque les révoltés détiendront toutes les provinces de la capitale, cette barre commencera à se remplir. Lorsqu’elle sera pleine, les révoltés gagneront et imposeront toutes leurs demandes."
 REVOLUTION_SURRENDER_DESC: "Cette barre représente le nombre de points de force encore disponibles dans les commandements qui se battent pour la révolution. Si les points de force restants tombent en dessous de [GetDefineCountryRevolutionarySurrenderCutoff|1%] des points de force que la faction avait lorsque la révolution a éclaté, elle se rendra."
 REVOLUTION_VICTORY_DETAILS: "Si les rebelles gagnent, ils imposeront ce qui suit :\n[RevolutionaryFaction.GetVictoryEffectDesc]"
 COUNTRY_NAME: "[ConcatIfNeitherEmpty('$PREFIX$',' ')]$NAME$"
 REVOLUTION_COUNTRY_NAME: "[ConcatIfNeitherEmpty('$PREFIX$',' ')]$NAME$ révolutionnaire"
 SECESSION_COUNTRY_NAME: "Soulèvement ($NAME$)"
 COUNTRY_ADJECTIVE: "[ConcatIfNeitherEmpty('$PREFIX$',' ')]$ADJECTIVE$"
 REVOLUTION_COUNTRY_ADJECTIVE: "[ConcatIfNeitherEmpty('$PREFIX$',' ')]$ADJECTIVE$ révolutionnaire"
 SECESSION_COUNTRY_ADJECTIVE: "Soulèvement ($NAME$)"
 COMPANY_COUNTRY_NAME: "$NAME$"
 SECESSION_NO_REVOLT_TAG: "Bloqué"
 SECESSION_NO_REVOLT_TAG_TOOLTIP: "Cette [concept_secession|l] n’a pas d’identité nationale sous laquelle se rallier, et ne peut donc pas faire sécession."
 WAR_GOAL_WORTH: "#header [concept_war_goal]#!\nCet [concept_war_goal|l] coûte #BOLD [WarGoal.GetWorth]#! de score de guerre [WarGoal.GetInitiator.GetAltNameNoFormatting('Au')][WarGoal.GetInitiator.GetName]. Vous pouvez présenter des [Concept('concept_war_goal', '$concept_war_goals$')|l] d’une valeur égale à votre score de guerre moins le leur."
 WAR_START_TITLE: "La guerre avec #variable [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] #! a éclaté !"
 WAR_START_TITLE_NOPLAYER: "La guerre entre #variable $ATTACKER$#! et #variable $DEFENDER$#! a éclaté !"
 WAR_START_DESC: "Le coup diplomatique #variable $PLAY_NAME$ #! en #variable $WHERE$ #! a provoqué une guerre entre #bold vous#! et #bold $MAIN_ENEMY$#!."
 WAR_START_DESC_NOPLAYER: "Le coup diplomatique $PLAY_NAME$ en $WHERE$ a provoqué une guerre entre #bold $FIRST$#! et #bold $SECOND$#!."
 REGIONS_TITLE: "#title Régions#!"
 TOOLTIP_RADICALISM: "#header Radicalisme#!\n$TOOLTIP_DELIMITER$\n[INTEREST_GROUP.GetActiveIncidents]\n"
 NEXT_RADICALISM_INCIDENT: "Causera un incident de radicalisme dans :\n#variable [INTEREST_GROUP.GetNextIncident]#! dans #variable ~[INTEREST_GROUP.GetWeeksUntilNextIncident]#! semaines ([INTEREST_GROUP.GetRadicalism|%1] de progression)"
 TOOLTIP_STATE_RADICALISM: "#header Radicalisme#!\n$TOOLTIP_DELIMITER$\n[STATE.GetActiveRadicalismIncidents]\n"
 RADICALISM_IN_STATE: "#BOLD #V Radicalisme#!#! en #BOLD #V $STATE$#!#!\n$TOOLTIP_DELIMITER$\n"
 RADICALISM_GROUPS_IN_STATE_HEADER: "Les [Concept('concept_interest_group', '$concept_interest_groups$')|l] suivants causeront un incident de radicalisme :"
 RADICALISM_GROUPS_IN_STATE_ITEM: "#variable [INTEREST_GROUP.GetName]#! dans #variable ~[INTEREST_GROUP.GetWeeksUntilNextIncident]#! semaines ([INTEREST_GROUP.GetRadicalism|%1] de progression)"
 RADICALISM_INCIDENT_START_EFFECTS_HEADER: "#title Effets de début :#!"
 RADICALISM_INCIDENT_EFFECT_GROUPS_HEADER: "#title Groupes d’effets :#!"
 RADICALISM_INCIDENT_END_EFFECTS_HEADER: "#title Effets de fin :#!"
 RADICALISM_INCIDENT_DEMAND_HEADER: "#title Demande :#!"
 BUILDING_OPTION_CHANGE: "Changer"
 BUILDING_OPTION_CHANGE_TOOLTIP: "#header Changer de bâtiment#!\nChanger le bâtiment #variable [BuildingType.GetBuildingGroupName]#! dans cet État pour #variable [BuildingType.GetName]#!"
 CHANGE_BUILDING_NEW: "#bold Autre bâtiment#!"
 CHANGE_BUILDING_CURRENT: "#bold Bâtiment actuel#!"
 CHANGE_BUILDING_HEADER: "#BOLD [Building.GetBuildingGroupName] en [Building.GetState.GetName]#!"
 BUILDING_CHANGE_WRONG_TYPE: "#N Les bâtiments [BUILDING.GetBuildingGroupName] ne peuvent pas être modifiés de cette façon#!"
 BUILDING_CHANGE_NO_ALTERNATIVES: "#N Il n’y a pas d’autres bâtiments [BUILDING.GetBuildingGroupName] à changer dans cet État#!"
 BUILDING_PANEL_EXPAND: "Agrandir"
 BUILDING_PANEL_DOWNSIZE: "Réduire"
 BUILDING_PANEL_CHANGE: "Changer"
 CANNOT_DOWNSIZE_NOT_DOWNSIZEABLE: "#N Le type de bâtiment ne peut pas être réduit#!"
 CANNOT_DOWNSIZE_BUILDING_PROTECTED: "Ce [concept_building|l] est protégé contre la réduction de taille en raison de :\n$DETAILS$"
 CANNOT_DOWNSIZE_UNDER_CONSTRUCTION: "#N Le bâtiment ne peut pas être réduit pendant son agrandissement#!"
 CANNOT_DOWNSIZE_INVALID_BUILDING: "#N Bâtiment invalide#!"
 CANNOT_DOWNSIZE_NO_OWNERSHIP: "#N Le bâtiment ne peut pas être réduit car aucun niveau n’a été acquis#!"
 CANNOT_DOWNSIZE_REVOLUTION: "#N Réduction impossible en raison de la [concept_revolution|l] imminente#!"
 CANNOT_DOWNSIZE_SECESSION: "#N Réduction impossible en raison du mouvement [Concept('concept_secession','sécessionniste')] grandissant#!"
 CANNOT_DISBAND_REVOLUTION: "#N Dissolution impossible en raison de la [concept_revolution|l] imminente#!"
 CANNOT_DISBAND_SECESSION: "#N Dissolution impossible en raison du mouvement [Concept('concept_secession','sécessionniste')] grandissant#!"
 BUILDING_DOWNSIZE_TOOLTIP: "#header $BUILDING_PANEL_DOWNSIZE$#!\nRéduire la taille de [Building.GetName] en [Building.GetState.GetName] à #v $NEW_LEVEL$#!"
 BUILDING_DOWNSIZE_TOOLTIP_HEADER: "#bold $BUILDING_PANEL_DOWNSIZE$#!"
 BUILDING_CHANGE_TOOLTIP: "#header Changer de bâtiment#!\nChanger le bâtiment #variable [BUILDING.GetBuildingGroupName]#! dans cet État"
 BUILDING_CHANGE_CAN_SWITCH_TO: "#bold Autres bâtiments :#!"
 RADICALIZATION_CHANGES_DOWNSIZE: "@warning! Réduire ce [concept_building|l] conduira à la [Concept('concept_radical', '$concept_radicalization$')|l] d’une partie de la [concept_workforce|l] si cela entraîne le licenciement d’employés"
 BUILDING_PROD_METH_ALREADY_ACTIVE: "Cette [concept_production_method|l] est déjà active"
 BUILDING_PROD_METH_ALREADY_ACTIVE_BULK: "Cette [concept_production_method|l] est déjà active dans tous les bâtiments"
 BUILDING_DETAILS_PRODUCED_MODIFIER_TOOLTIP: "#header [ModifierEntry.GetName]#!\n[ModifierEntry.GetDesc]\n$TOOLTIP_DELIMITER$\n[ModifierEntry.GetBreakdown]"
 TOOLTIP_NEW_PRODUCTION_METHOD: "#header Nouvelle méthode de production disponible#!\n$TOOLTIP_DELIMITER$\nUne méthode de production nouvellement recherchée peut être activée sur ce bâtiment."
 POLITICAL_ACTION_REFORM_DESC: "mettre en œuvre #variable $REFORM_GROUP$ - $REFORM$#!"
 POLITICAL_ACTION_REFORM_PAST_TENSE_DESC: "A mis en œuvre #variable $REFORM_GROUP$ - $REFORM$#!"
 POLITICAL_ACTION_TAX_DESC: "définir les impôts pour la #variable $STRATA$#! à #variable $VALUE|%$#!"
 POLITICAL_ACTION_TAX_PAST_TENSE_DESC: "A défini les impôts pour la #variable $STRATA$#! à #variable $VALUE|%$#!"
 POLITICAL_ACTION_BUILDING_DESC: "construire #variable $BUILDING_TYPE$ de taille $LEVEL$#!"
 POLITICAL_ACTION_BUILDING_PAST_TENSE_DESC: "A construit #variable $BUILDING_TYPE$ de taille $LEVEL$#!"
 POLITICAL_ACTION_DIPLOMATIC_PLAY_DESC: "jouer un [concept_diplomatic_play|l] visant à $PLAY_TYPE|l$ contre $AGAINST$"
 POLITICAL_ACTION_DIPLOMATIC_PLAY_PAST_TENSE_DESC: "A joué un [concept_diplomatic_play|l] visant à $PLAY_TYPE|vl$ contre $AGAINST|v$"
 POLITICAL_ACTION_EXPAND_MARKET_DESC: "étendre la couverture de votre marché"
 POLITICAL_ACTION_EXPAND_MARKET_PAST_TENSE_DESC: "A étendu la couverture de votre marché"
 INTERACTION_NOT_ALLOWED_FOR: "Cette action n’est pas autorisée pour [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName]"
 CANNOT_AFFORD_LAW: "Vous ne pouvez pas dépenser #variable $VAL$#!@aut!"
 LAW_HAS_NOT_PASSED_COOLDOWN: "Vous devez attendre jusqu’au #variable $DATE$#! avant de pouvoir apporter des modifications à votre $TYPE$."
 LACKING_TECHNOLOGY_GLOBAL_SINGLE: "La technologie $TECHNOLOGY$ n’a pas encore été inventée"
 LACKING_TECHNOLOGY_GLOBAL_MULTI: "L’une de ces technologies doit avoir été inventée"
 LACKING_TECHNOLOGY_SINGLE: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] doit avoir inventé la technologie [Technology.GetName]"
 LACKING_TECHNOLOGY_MULTI: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] doit avoir inventé l’une de ces technologies :\n$BREAKDOWN$"
 LACKING_TECHNOLOGY_MULTI_ENTRY: "[Technology.GetName]"
 LACKING_IDENTITY_SINGLE: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetNameNoFormatting] [Country.GetAltNameNoFormatting('AOnt')] le [concept_power_bloc_identity|l] [PowerBlocIdentity.GetName]"
 LACKING_IDENTITY_MULTI: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetNameNoFormatting] [Country.GetAltNameNoFormatting('AOnt')] un de ces piliers :\n$BREAKDOWN$"
 LACKING_IDENTITY_MULTI_ENTRY: "[PowerBlocIdentity.GetName]"
 LACKING_PRINCIPLE_SINGLE: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetNameNoFormatting] [Country.GetAltNameNoFormatting('AOnt')] le [concept_power_bloc_principle|l] [PowerBlocPrinciple.GetName]"
 LACKING_PRINCIPLE_MULTI: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetNameNoFormatting] [Country.GetAltNameNoFormatting('AOnt')] un de ces principes :\n$BREAKDOWN$"
 LACKING_PRINCIPLE_MULTI_ENTRY: "[PowerBlocPrinciple.GetName]"
 LACKING_UNLOCKING_LAW_SINGLE: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] doit avoir promulgué $LAW$"
 LACKING_UNLOCKING_LAW_MULTI: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] doit avoir promulgué l’une de ces lois :"
 LACKING_UNLOCKING_LAW_MULTI_WITH_BREAKDOWN: "$LACKING_UNLOCKING_LAW_MULTI$\n$BREAKDOWN$"
 LACKING_UNLOCKING_LAW_MULTI_ENTRY: "[Law.GetFullName]"
 LACKING_UNLOCKING_STATE_RELIGION_SINGLE: "[GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName] [GetPlayer.GetAltNameNoFormatting('AOnt')] [Religion.GetName|l] comme [concept_religion|l] d’État"
 LACKING_UNLOCKING_STATE_RELIGION_MULTI: "[GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName] [GetPlayer.GetAltNameNoFormatting('AOnt')] l’une d’elles comme [concept_religion|l] d’État :"
 HAS_DISALLOWING_STATE_RELIGION_SINGLE: "[GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName] peut ne pas avoir [Religion.GetName|l] comme [concept_religion|l] d’État"
 HAS_DISALLOWING_STATE_RELIGION_MULTI: "[GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName] peut ne pas avoir l’une d’elles comme [concept_religion|l] d’État :"
 HAS_DISALLOWING_LAW_SINGLE: "Vous n’avez pas le droit d’avoir adopté $LAW|l$"
 HAS_DISALLOWING_LAW_MULTI: "Vous n’avez pas le droit de promulguer une de ces lois :"
 LACKING_PRODUCTION_METHOD_SINGLE: "La méthode $PRODUCTION_METHOD|l$ est active dans le bâtiment"
 LACKING_PRODUCTION_METHOD_MULTI: "L’une de ces méthodes est active dans le bâtiment :"
 LACKING_PRODUCTION_METHOD_BULK: "@warning! $COUNT|v$ $concept_states$ ont des méthodes de production incompatibles"
 LAW_DISALLOWED_BY_LAW_SINGLE: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] ne doit pas avoir adopté $LAW$"
 LAW_DISALLOWED_BY_LAW_MULTI: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] ne doit pas avoir adopté une de ces lois :"
 REQUIRES_ACCESS_TO_GOODS: "L’État a accès au [Goods.GetName|l]"
 REQUIRES_ACCESS_TO_GOODS_BULK: "@warning! $COUNT|v$ $concept_states$ n’ont pas accès aux biens requis"
 DIPLOMATIC_ACTION_INSTANT: "[concept_instant_diplomatic_action]"
 DIPLOMATIC_ACTION_ONGOING: "[concept_ongoing_diplomatic_action]"
 DIPLOMATIC_ACTION_PACT: "[concept_diplomatic_pact]"
 DIPLOMATIC_ACTION_HEADER: "[SelectLocalization(DiplomaticAction.IsActivePact, 'DIPLOMATIC_ACTION_ACTIVE_HEADER', 'DIPLOMATIC_ACTION_NON_ACTIVE_HEADER')]"
 DIPLOMATIC_ACTION_NON_ACTIVE_HEADER: "#header #tooltippable #tooltip:[DiplomaticAction.GetTooltipTag],DIPLOMATIC_ACTION_DESC [DiplomaticAction.GetType.GetName]#!#!#!"
 DIPLOMATIC_ACTION_ACTIVE_HEADER: "#header [DiplomaticAction.GetBreakName]#!"
 DIPLOMATIC_ACTION_SECOND_HEADER: "[AddLocalizationIf(DiplomaticAction.IsActivePact, Concatenate('$BREAK$', ' '))][SelectLocalization(DiplomaticAction.GetType.IsInstantDiplomaticAction, 'DIPLOMATIC_ACTION_INSTANT', 'DIPLOMATIC_ACTION_ACTIVE_PACT_OR_ONGOING_ACTION')] avec [DiplomaticAction.GetSecondCountry.GetAltNameNoFormatting('Le')][DiplomaticAction.GetSecondCountry.GetName]"
 DIPLOMATIC_ACTION_ACTIVE_PACT_OR_ONGOING_ACTION: "[SelectLocalization(DiplomaticAction.GetType.IsOngoingDiplomaticPact, 'DIPLOMATIC_ACTION_PACT', 'DIPLOMATIC_ACTION_ONGOING')][AddLocalizationIf(DiplomaticAction.IsActivePact, 'DIPLOMATIC_ACTION_ACTIVE_PACT_NAME')]"
 DIPLOMATIC_ACTION_ACTIVE_PACT_NAME: " ([DiplomaticAction.GetName])"
 BREAK: "Rompre"
 DIPLOMATIC_ACTION_DESC: "[DiplomaticAction.GetDesc]"
 DIPLOMATIC_ACTION_TOOLTIP: "[DiplomaticAction.GetTooltip]"
 DIPLOMATIC_PROPOSAL_TITLE: "[Proposal.GetDiplomaticAction.GetProposalNotificationName]"
 DIPLOMATIC_PROPOSAL_DESC: "[ConcatIfNeitherEmpty(Proposal.GetDiplomaticAction.GetMaintenanceCostForAcceptingCountryDesc, '\n\n')][Proposal.GetDiplomaticAction.GetProposalNotificationDesc]\n\n[Proposal.GetDiplomaticAction.GetActionDesc]"
 DIPLOMATIC_PROPOSAL_OFFER_OBLIGATION_DESC: "$DIPLOMATIC_PROPOSAL_DESC$\n\n$THEY_OFFER_OBLIGATION$"
 DIPLOMATIC_PROPOSAL_CALL_IN_OBLIGATION_DESC: "$DIPLOMATIC_PROPOSAL_DESC$\n\n$THEY_CALL_IN_OBLIGATION_SHORT$"
 DIPLOMATIC_PROPOSAL_BREAK_TITLE: "[Proposal.GetDiplomaticAction.GetProposalNotificationBreakName]"
 DIPLOMATIC_PROPOSAL_BREAK_DESC: "[Proposal.GetDiplomaticAction.GetProposalNotificationBreakDesc]\n\n[Proposal.GetDiplomaticAction.GetActionDesc]"
 DIPLOMATIC_ACTION_MODIFIERS: "[DiplomaticAction.GetModifierDesc]"
 DIPLOMATIC_ACTION_MODIFIER_HEADER: "#title Ajoute des modificateurs pour [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] :#!"
 DIPLOMATIC_ACTION_MODIFIER_HEADER_ACTIVE: "#title Modificateurs pour [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] :#!"
 DIPLOMATIC_ACTION_MODIFIER_HEADER_BREAK: "#title Supprime des modificateurs pour [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] :#!"
 DIPLOMATIC_ACTION_LOBBY_MEMBER_MODIFIER_HEADER: "#title Membres de la catégorie concernée $LOBBY_CATEGORY$ :#!"
 DIPLOMATIC_ACTION_POPUP_MAINTENANCE_COST: "Cela nous coûtera $COST$ à maintenir"
 DIPLOMATIC_ACTION_POPUP_MAINTENANCE_COST_BREAK: "Cela ne nous coûtera plus $COST$ à maintenir"
 DIPLOMATIC_ACTION_ON_ENACT: "#title Effets :#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_BREAK: "#title Si nous brisons ce [concept_diplomatic_pact|l] :#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_END: "#title Si nous mettons fin à cette [concept_ongoing_diplomatic_action|l] :#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_ACCEPT: "#title En cas d’accord :#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_DECLINE: "#title En cas de refus :#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_DAILY: "#title Chaque jour tant qu’elle est active :#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_WEEKLY: "#title Chaque semaine tant qu’elle est active :#!\n$DESC$"
 DIPLOMATIC_ACTION_ON_MONTHLY: "#title Chaque mois tant qu’elle est active :#!\n$DESC$"
 DIPLOMATIC_ACTION_INCOME_TRANSFER: "• Transférerait #tooltip:$BREAKDOWN_TAG$ $MONEY|Kv$@money!#!#!#tooltippable  [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName] [TARGET_COUNTRY.GetAltNameNoFormatting('Au')][TARGET_COUNTRY.GetName] chaque semaine"
 DIPLOMATIC_ACTION_INCOME_TRANSFER_ACTIVE: "• Transfère #tooltip:$BREAKDOWN_TAG$ $MONEY|Kv$@money!#!#!#tooltippable  [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName] [TARGET_COUNTRY.GetAltNameNoFormatting('Au')][TARGET_COUNTRY.GetName] chaque semaine"
 DIPLOMATIC_ACTION_INCOME_TRANSFER_BREAK: "• Cesserait de transférer $MONEY|Kv$@money! [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName] [TARGET_COUNTRY.GetAltNameNoFormatting('Au')][TARGET_COUNTRY.GetName] chaque semaine"
 DIPLOMATIC_ACTION_INCOME_TRANSFER_TO_POPS: "• Transférerait $MONEY|Kv$@money! [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName] aux [Concept('concept_pop', '$concept_pops$')|l] [TARGET_COUNTRY.GetAltNameNoFormatting('Du')][TARGET_COUNTRY.GetName] chaque semaine"
 DIPLOMATIC_ACTION_INCOME_TRANSFER_TO_POPS_ACTIVE: "• Transfère $MONEY|Kv$@money! [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName] aux [Concept('concept_pop', '$concept_pops$')|l] [TARGET_COUNTRY.GetAltNameNoFormatting('Du')][TARGET_COUNTRY.GetName] chaque semaine"
 DIPLOMATIC_ACTION_INCOME_TRANSFER_TO_POPS_BREAK: "• Cesserait de transférer $MONEY|Kv$@money! [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName] aux [Concept('concept_pop', '$concept_pops$')|l] [TARGET_COUNTRY.GetAltNameNoFormatting('Du')][TARGET_COUNTRY.GetName] chaque semaine"
 DIPLOMATIC_ACTION_NEGATIVE_INCOME_TRANSFER: "• Réduirait les paiements [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName] [TARGET_COUNTRY.GetAltNameNoFormatting('Au')][TARGET_COUNTRY.GetName] de #tooltippable #tooltip:$BREAKDOWN_TAG$ $MONEY|Kv$@money!#!#! chaque semaine"
 DIPLOMATIC_ACTION_NEGATIVE_INCOME_TRANSFER_ACTIVE: "• Réduit les paiements [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName] [TARGET_COUNTRY.GetAltNameNoFormatting('Au')][TARGET_COUNTRY.GetName] de #tooltippable #tooltip:$BREAKDOWN_TAG$ $MONEY|Kv$@money!#!#! chaque semaine"
 DIPLOMATIC_ACTION_NEGATIVE_INCOME_TRANSFER_BREAK: "• Cesserait de réduire les paiements [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName] [TARGET_COUNTRY.GetAltNameNoFormatting('Au')][TARGET_COUNTRY.GetName] de $MONEY|Kv$@money! chaque semaine"
 DIPLOMATIC_ACTION_NEGATIVE_INCOME_TRANSFER_TO_POPS: "• Réduirait les paiements [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName] aux [Concept('concept_pop', '$concept_pops$')|l] [TARGET_COUNTRY.GetAltNameNoFormatting('Du')][TARGET_COUNTRY.GetName] de $MONEY|Kv$@money! chaque semaine"
 DIPLOMATIC_ACTION_NEGATIVE_INCOME_TRANSFER_TO_POPS_ACTIVE: "• Réduit les paiements [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName] aux [Concept('concept_pop', '$concept_pops$')|l] [TARGET_COUNTRY.GetAltNameNoFormatting('Du')][TARGET_COUNTRY.GetName] de $MONEY|Kv$@money! chaque semaine"
 DIPLOMATIC_ACTION_NEGATIVE_INCOME_TRANSFER_TO_POPS_BREAK: "• Cesserait de réduire les paiements [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName] aux [Concept('concept_pop', '$concept_pops$')|l] [TARGET_COUNTRY.GetAltNameNoFormatting('Du')][TARGET_COUNTRY.GetName] de $MONEY|Kv$@money! chaque semaine"
 DIPLOMATIC_ACTION_RIVALRY: "• Être en [concept_rivalry|l] avec [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName] donne les avantages suivants :\n$DESC$"
 DIPLOMATIC_ACTION_RIVALRY_ACTIVE: "• Notre [concept_rivalry|l] avec [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName] donne les avantages suivants :\n$DESC$"
 DIPLOMATIC_ACTION_RIVALRY_BREAK: "• Met un terme à la [concept_rivalry|l] avec [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_EMBARGO: "• Établirait un [concept_embargo|l] contre [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_EMBARGO_ACTIVE: "• Maintient un [concept_embargo|l] contre [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_EMBARGO_BREAK: "• Met un terme à l’[concept_embargo|l] contre [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_TECH_SPREAD: "• Faciliterait la [concept_technology_spread|l] entre [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_TECH_SPREAD_ACTIVE: "• Facilite la [concept_technology_spread|l] entre [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_TECH_SPREAD_BREAK: "• Cesse de faciliter la [concept_technology_spread|l] entre [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_ALLIANCE: "• Crée une [concept_alliance|l] entre [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_ALLIANCE_ACTIVE: "• Maintient une [concept_alliance|l] entre [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_ALLIANCE_BREAK: "• Rompt l’[concept_alliance|l] entre [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_DEFENSIVE_PACT: "• Crée un [concept_defensive_pact|l] entre [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_DEFENSIVE_PACT_ACTIVE: "• Maintient un [concept_defensive_pact|l] entre [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_DEFENSIVE_PACT_BREAK: "• Rompt le [concept_defensive_pact|l] entre [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_GUARANTEE_INDEPENDENCE: "• Établit une [Concept('concept_guarantee_independence','$concept_guarantee_of_independence$')|l] [COUNTRY.GetAltAdjective('FS')|l] envers [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_GUARANTEE_INDEPENDENCE_ACTIVE: "• Maintient une [Concept('concept_guarantee_independence','$concept_guarantee_of_independence$')|l] [COUNTRY.GetAltAdjective('FS')|l] envers [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_GUARANTEE_INDEPENDENCE_BREAK: "• Supprime la [Concept('concept_guarantee_independence','$concept_guarantee_of_independence$')|l] [COUNTRY.GetAltAdjective('FS')|l] envers [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_TRADE_AGREEMENT: "• Crée un [concept_trade_privilege|l] entre [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_TRADE_AGREEMENT_ACTIVE: "• Maintient un [concept_trade_privilege|l] entre [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_TRADE_AGREEMENT_BREAK: "• Supprime le [concept_trade_privilege|l] entre [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_FOREIGN_INVESTMENT_RIGHTS: "• [TARGET_COUNTRY.GetAltNameNoFormatting('Le')|U][TARGET_COUNTRY.GetName] accorder[TARGET_COUNTRY.GetAltNameNoFormatting('AOnt')] des [concept_foreign_investment_rights|l] [COUNTRY.GetAltNameNoFormatting('Au')][COUNTRY.GetName]"
 DIPLOMATIC_ACTION_FOREIGN_INVESTMENT_RIGHTS_ACTIVE: "• [TARGET_COUNTRY.GetAltNameNoFormatting('Le')|U][TARGET_COUNTRY.GetName] accord[TARGET_COUNTRY.GetAltNameNoFormatting('EEnt')] des [concept_foreign_investment_rights|l] [COUNTRY.GetAltNameNoFormatting('Au')][COUNTRY.GetName]"
 DIPLOMATIC_ACTION_FOREIGN_INVESTMENT_RIGHTS_BREAK: "• Met un terme aux [concept_foreign_investment_rights|l] accordés par [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName] [COUNTRY.GetAltNameNoFormatting('Au')][COUNTRY.GetName]"
 DIPLOMATIC_ACTION_MUTUAL_FOREIGN_INVESTMENT_RIGHTS: "• [COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName] s'accorderont des [concept_foreign_investment_rights|l] mutuels"
 DIPLOMATIC_ACTION_MUTUAL_FOREIGN_INVESTMENT_RIGHTS_ACTIVE: "• [COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName] s'accordent des [concept_foreign_investment_rights|l] mutuels"
 DIPLOMATIC_ACTION_MUTUAL_FOREIGN_INVESTMENT_RIGHTS_BREAK: "• Met un terme aux [concept_foreign_investment_rights|l] mutuels entre [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_SUBJECT_RELATION: "• Crée une relation de [concept_subject|l] de type $SUBJECT_TYPE$ entre [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName], avec [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] en tant que suzerain"
 DIPLOMATIC_ACTION_SUBJECT_RELATION_ACTIVE: "• Maintient une relation de [concept_subject|l] de type $SUBJECT_TYPE$ entre [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_SUBJECT_RELATION_BREAK: "• Met un terme à la relation de [concept_subject|l] de type $SUBJECT_TYPE$ entre [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] et [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 DIPLOMATIC_ACTION_RELATIONS_CHANGE_POS_EFFECT: "• Améliore les [concept_relations|l] de #g +1#! tous les $DAYS|v$ jours$MAXDESC$"
 DIPLOMATIC_ACTION_RELATIONS_CHANGE_NEG_EFFECT: "• Détériore les [concept_relations|l] de #r -1#! tous les $DAYS|v$ jours$MINDESC$"
 DIPLOMATIC_ACTION_RELATIONS_CHANGE_POS_BREAK_EFFECT: "• N’améliorerait plus les [concept_relations|l] de #g +1#! tous les $DAYS|v$ jours$MAXDESC$"
 DIPLOMATIC_ACTION_RELATIONS_CHANGE_NEG_BREAK_EFFECT: "• Ne détériorerait plus les [concept_relations|l] de #r -1#! tous les $DAYS|v$ jours$MINDESC$"
 DIPLOMATIC_ACTION_EXEMPT_FROM_SERVICE: "• Exempterait [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName] de participer aux [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')|l] [COUNTRY.GetAltAdjective('MP')|l]"
 DIPLOMATIC_ACTION_EXEMPT_FROM_SERVICE_ACTIVE: "• Exempte [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName] de participer aux [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')|l] [COUNTRY.GetAltAdjective('MP')|l]"
 DIPLOMATIC_ACTION_EXEMPT_FROM_SERVICE_BREAK: "• N’exempte plus [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName] de participer aux [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')|l] [COUNTRY.GetAltAdjective('MP')|l]"
 DIPLOMATIC_ACTION_MARKET_CONTROL: "• Accorderait [COUNTRY.GetAltNameNoFormatting('Au')][COUNTRY.GetName] le contrôle de son propre [concept_market|l]"
 DIPLOMATIC_ACTION_MARKET_CONTROL_ACTIVE: "• Accorde [COUNTRY.GetAltNameNoFormatting('Au')][COUNTRY.GetName] le contrôle de son propre [concept_market|l]"
 DIPLOMATIC_ACTION_MARKET_CONTROL_BREAK: "• Renvoie [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] sur le [concept_market|l] du [concept_overlord|l]"
 DIPLOMATIC_ACTION_AUTO_SUPPORT: "• [COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] soutiendr[COUNTRY.GetAltNameNoFormatting('AOnt')] automatiquement [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName] dans les [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')|l] $LIST$"
 DIPLOMATIC_ACTION_AUTO_SUPPORT_ACTIVE: "• [COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] soutient automatiquement [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName] dans les [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')|l] $LIST$"
 DIPLOMATIC_ACTION_AUTO_SUPPORT_BREAK: "• [COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] ne soutiendr[COUNTRY.GetAltNameNoFormatting('AOnt')] plus automatiquement [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName] dans les [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')|l] $LIST$"
 THEY_OFFER_OBLIGATION: "Ce pays nous propose d’avoir une [concept_obligation|l] envers nous si nous acceptons."
 THEY_CALL_IN_OBLIGATION_SHORT: "Ce pays fait appel à notre [concept_obligation|l], donc rejeter son offre aurait des conséquences diplomatiques négatives pour nous."
 THEY_CALL_IN_OBLIGATION: "@warning! Ce pays fait appel à notre [concept_obligation|l]. Nier l’[concept_obligation|l] aurait les conséquences suivantes pour nous :\n$REPUDIATE_OBLIGATION_EFFECTS$"
 WE_NOW_OWE_OBLIGATION: "Nous avons désormais une [concept_obligation|l] envers ce pays."
 THEY_USED_OBLIGATION: "Ce pays a fait appel à une [concept_obligation|l] pour nous forcer à accepter."
 REPUDIATE_OBLIGATION_EFFECTS: "- [concept_relations|l] fortement réduites avec le [concept_country|l] dont l’[concept_obligation|l] a été niée\n- [concept_relations|l] réduites avec tous les autres pays envers lesquels nous avons une [concept_obligation|l]\n- [concept_prestige|l] réduit, ralentissement du déclin de l’[concept_infamy|l] et méfiance généralisée envers les [Concept('concept_obligation', '$concept_obligations$')|l] de notre part pendant une période de #v 5#! ans\n"
 repudiated_obligation: "Obligation niée"
 TRADE_DEFICIT_SURPLUS: "Déficit/Excédent commercial"
 TRADE_DEFICIT_SURPLUS_VALUE: "[Market.GetTradeSurplus|=v%0]"
 TRADE_SURPLUS_TOOLTIP: "[Market.GetTradeSurplusBreakdown]"
 TRADE_SURPLUS_EXPORTS_BREAKDOWN_DESC: "#header Valeur des [Concept('concept_trade','$concept_exports$')|l]#!\n$VALUE|Kv=$@money! sur le $MARKET_NAME$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 TRADE_SURPLUS_IMPORTS_BREAKDOWN_DESC: "#header Valeur des [Concept('concept_trade','$concept_imports$')|l]#!\n$VALUE|Kv=$@money! sur le $MARKET_NAME$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 TRADE_SURPLUS_BREAKDOWN_DESC: "#header $TRADE_DEFICIT_SURPLUS$#!\n[Market.GetTradeSurplus|=v%0] sur le $MARKET_NAME$\n$TOOLTIP_DELIMITER$\n#tooltippable;tooltip:$EXPORTS_BREAKDOWN_TAG$ @money!$EXPORTS_VALUE|Kv$#! en [Concept('concept_trade','$concept_exports$')|l]\n#tooltippable;tooltip:$IMPORTS_BREAKDOWN_TAG$ $IMPORTS_VALUE|Kv$#!@money! en [Concept('concept_trade','$concept_imports$')|l]\n\n@information! Le déficit/L’excédent commercial est calculé en divisant la valeur totale des exportations par la valeur totale des importations"
 TRADE_SURPLUS_EXPORTS_ENTRY: "$VALUE|Kv=$@money! de $AMOUNT|v0D$ [Goods.GetName|l][Nbsp][Goods.GetTextIcon]"
 TRADE_SURPLUS_IMPORTS_ENTRY: "$VALUE|Kv=$@money! de $AMOUNT|v0D$ [Goods.GetName|l][Nbsp][Goods.GetTextIcon]"
 proposal_break_pact_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakName]"
 proposal_break_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakDesc]"
 proposal_break_pact_tooltip: "#title $proposal_break_pact_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_break_pact_desc$"
 proposal_break_pact_owe_obligation_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakName]"
 proposal_break_pact_owe_obligation_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakDesc]\n\n$THEY_OFFER_OBLIGATION$"
 proposal_break_pact_owe_obligation_tooltip: "#header $proposal_break_pact_owe_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_break_pact_owe_obligation_desc$"
 proposal_break_pact_call_in_obligation_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakName]"
 proposal_break_pact_call_in_obligation_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakDesc]\n\n$THEY_CALL_IN_OBLIGATION$"
 proposal_break_pact_call_in_obligation_tooltip: "#header $proposal_break_pact_call_in_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_break_pact_call_in_obligation_desc$"
 proposal_diplomatic_action_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationName]"
 proposal_diplomatic_action_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationDesc]"
 proposal_diplomatic_action_tooltip: "#header $proposal_diplomatic_action_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_diplomatic_action_desc$"
 proposal_treaty_name: "[SCOPE.GetRootScope.GetTreaty.GetNameNoFormatting]"
 proposal_treaty_desc: "[concept_binding_period] : [SCOPE.GetRootScope.GetTreaty.GetBindingPeriodFormatted]\n\n#title Effets :#!#indent_newline:3 [ConcatIfNeitherEmpty('\n', SCOPE.GetRootScope.GetTreaty.GetEffectsDesc)][ConcatIfNeitherEmpty('\n', SCOPE.GetRootScope.GetTreaty.GetDirectedEffectsDesc(SCOPE.GetRootScope.GetTreaty.GetFirstCountry.Self))][ConcatIfNeitherEmpty('\n', SCOPE.GetRootScope.GetTreaty.GetDirectedEffectsDesc(SCOPE.GetRootScope.GetTreaty.GetSecondCountry.Self))][ConcatIfNeitherEmpty('\n', SCOPE.GetRootScope.GetTreaty.GetRelationsEffectDesc)][ConcatIfNeitherEmpty('\n', SCOPE.GetRootScope.GetTreaty.GetMutualModifierDesc)][ConcatIfNeitherEmpty('\n', SCOPE.GetRootScope.GetTreaty.GetSourceModifierDesc)]#![ConcatIfNeitherEmpty('\n', SCOPE.GetRootScope.GetTreaty.GetTargetModifierDesc)]"
 proposal_treaty_tooltip: "#header $proposal_treaty_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_treaty_desc$"
 proposal_diplomatic_action_owe_obligation_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationName]"
 proposal_diplomatic_action_owe_obligation_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationDesc]\n\n$THEY_OFFER_OBLIGATION$"
 proposal_diplomatic_action_owe_obligation_tooltip: "#header $proposal_diplomatic_action_owe_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_diplomatic_action_owe_obligation_desc$"
 proposal_diplomatic_action_call_in_obligation_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationName]"
 proposal_diplomatic_action_call_in_obligation_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationDesc]\n\n$THEY_CALL_IN_OBLIGATION$"
 proposal_diplomatic_action_call_in_obligation_tooltip: "#header $proposal_diplomatic_action_call_in_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_diplomatic_action_call_in_obligation_desc$"
 proposal_sway_offer_tooltip: "#header $proposal_sway_offer_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_sway_offer_desc$"
 proposal_sway_offer_name: "Tenter d’influencer"
 proposal_sway_offer_desc: "[SCOPE.sC('actor').GetAltNameNoFormatting('Le')|U]#variable [SCOPE.sC('actor').GetName]#! tente de nous faire passer dans son camp dans son [concept_diplomatic_play|l] contre [SCOPE.sC('target').GetAltNameNoFormatting('Le')]#variable [SCOPE.sC('target').GetName]#!."
 proposal_reverse_sway_offer_tooltip: "#header $proposal_reverse_sway_offer_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_reverse_sway_offer_desc$"
 proposal_reverse_sway_offer_name: "Offre de soutien"
 proposal_reverse_sway_offer_desc: "#variable [SCOPE.sC('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sC('actor').GetName]#! nous propose son soutien pour le [concept_diplomatic_play|l] contre #variable [SCOPE.sC('target').GetAltNameNoFormatting('Le')][SCOPE.sC('target').GetName]#!."
 proposal_diplomatic_demand_tooltip: "#header $proposal_diplomatic_demand_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_diplomatic_demand_desc$"
 proposal_diplomatic_demand_name: "[concept_diplomatic_demand]"
 proposal_diplomatic_demand_desc: "[SCOPE.sC('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sC('actor').GetName] exige « [SCOPE.GetRootScope.GetDiplomaticDemand.GetDemandedWarGoal.GetName] » de nous."
 notification_diplomatic_action_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationName]"
 notification_diplomatic_action_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationDesc]"
 notification_diplomatic_action_notification_tooltip: "#header $notification_diplomatic_action_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_action_notification_desc$"
 notification_diplomatic_action_used_obligation_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationName]"
 notification_diplomatic_action_used_obligation_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationDesc]\n$THEY_USED_OBLIGATION$"
 notification_diplomatic_action_used_obligation_notification_tooltip: "#header $notification_diplomatic_action_used_obligation_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_action_used_obligation_notification_desc$"
 notification_diplomatic_proposal_accepted_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalAcceptedName]"
 notification_diplomatic_proposal_accepted_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalAcceptedDesc]"
 notification_diplomatic_proposal_accepted_tooltip: "#header $notification_diplomatic_proposal_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_accepted_desc$"
 notification_diplomatic_proposal_accepted_owe_obligation_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalAcceptedName]"
 notification_diplomatic_proposal_accepted_owe_obligation_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalAcceptedDesc]\n$WE_NOW_OWE_OBLIGATION$"
 notification_diplomatic_proposal_accepted_owe_obligation_tooltip: "#header $notification_diplomatic_proposal_accepted_owe_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_accepted_owe_obligation_desc$"
 notification_diplomatic_proposal_declined_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalDeclinedName]"
 notification_diplomatic_proposal_declined_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalDeclinedDesc]"
 notification_diplomatic_proposal_declined_tooltip: "#header $notification_diplomatic_proposal_declined_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_declined_desc$"
 notification_diplomatic_action_overlord_decrease_autonomy_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetAltNameNoFormatting('Le')|U][SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetName] [SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetAltNameNoFormatting('AOnt')] modifié [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetAltNameNoFormatting('Le')][SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetName] en sujet de type [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetSubjectType.GetName]"
 notification_diplomatic_action_overlord_decrease_autonomy_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetAltNameNoFormatting('Le')|U][SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetName] [SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetAltNameNoFormatting('AOnt')] diminué l’[concept_autonomy|l] [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetSubjectType.GetHigherAutonomySubjectType(SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry).GetAltNameNoFormatting('Du')][SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetSubjectType.GetHigherAutonomySubjectType(SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry).GetName] et en [SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetAltNameNoFormatting('AOnt')] fait un sujet de type [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetSubjectType.GetName]"
 notification_diplomatic_action_overlord_decrease_autonomy_notification_tooltip: "#header $notification_overlord_decrease_autonomy_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_overlord_decrease_autonomy_notification_desc$"
 notification_diplomatic_action_overlord_increase_autonomy_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetAltNameNoFormatting('Le')|U][SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetName] [SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetAltNameNoFormatting('AOnt')] modifié [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetAltNameNoFormatting('Le')][SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetName] en sujet de type [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetSubjectType.GetName]"
 notification_diplomatic_action_overlord_increase_autonomy_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetAltNameNoFormatting('Le')|U][SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetName] [SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetAltNameNoFormatting('AOnt')] augmenté l’[concept_autonomy|l] [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetSubjectType.GetHigherAutonomySubjectType(SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry).GetAltNameNoFormatting('Du')][SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetSubjectType.GetLowerAutonomySubjectType(SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry).GetName] et en [SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetAltNameNoFormatting('AOnt')] fait un sujet de type [SCOPE.GetRootScope.GetDiplomaticAction.GetSecondCountry.GetSubjectType.GetName]"
 notification_diplomatic_action_overlord_increase_autonomy_notification_tooltip: "#header $notification_diplomatic_action_overlord_increase_autonomy_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_action_overlord_increase_autonomy_notification_desc$"
 notification_diplomatic_action_subject_increase_own_autonomy_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetAltNameNoFormatting('Le')|U][SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetName] [SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetAltNameNoFormatting('EstSont')] maintenant un sujet de type [SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetSubjectType.GetName]"
 notification_diplomatic_action_subject_increase_own_autonomy_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetAltNameNoFormatting('Le')|U][SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetName] a augmenté son [concept_autonomy|l] de [SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetSubjectType.GetLowerAutonomySubjectType(SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry).GetName] pour devenir un sujet de type [SCOPE.GetRootScope.GetDiplomaticAction.GetFirstCountry.GetSubjectType.GetName]"
 notification_diplomatic_action_subject_increase_own_autonomy_notification_tooltip: "#header $notification_subject_increase_autonomy_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_subject_increase_autonomy_notification_desc$"
 notification_diplomatic_action_break_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationBreakName]"
 notification_diplomatic_action_break_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationBreakDesc]"
 notification_diplomatic_action_break_notification_tooltip: "#header $notification_diplomatic_action_break_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_action_break_notification_desc$"
 notification_diplomatic_action_break_used_obligation_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationBreakName]"
 notification_diplomatic_action_break_used_obligation_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationBreakDesc]\n$THEY_USED_OBLIGATION$"
 notification_diplomatic_action_break_used_obligation_notification_tooltip: "#header $notification_diplomatic_action_break_used_obligation_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_action_break_used_obligation_notification_desc$"
 notification_diplomatic_proposal_break_accepted_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakAcceptedName]"
 notification_diplomatic_proposal_break_accepted_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakAcceptedDesc]"
 notification_diplomatic_proposal_break_accepted_tooltip: "#header $notification_diplomatic_proposal_break_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_break_accepted_desc$"
 notification_diplomatic_proposal_break_accepted_owe_obligation_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakAcceptedName]"
 notification_diplomatic_proposal_break_accepted_owe_obligation_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakAcceptedDesc]\n$WE_NOW_OWE_OBLIGATION$"
 notification_diplomatic_proposal_break_accepted_owe_obligation_tooltip: "#header $notification_diplomatic_proposal_break_accepted_owe_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_break_accepted_owe_obligation_desc$"
 notification_diplomatic_proposal_break_declined_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakDeclinedName]"
 notification_diplomatic_proposal_break_declined_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakDeclinedDesc]"
 notification_diplomatic_proposal_break_declined_tooltip: "#header $notification_diplomatic_proposal_break_declined_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_break_declined_desc$"
 notification_diplomatic_proposal_third_party_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyName]"
 notification_diplomatic_proposal_third_party_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyDesc]"
 notification_diplomatic_proposal_third_party_notification_tooltip: "#header $notification_diplomatic_proposal_third_party_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_notification_desc$"
 notification_diplomatic_proposal_third_party_break_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakName]"
 notification_diplomatic_proposal_third_party_break_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakDesc]"
 notification_diplomatic_proposal_third_party_break_notification_tooltip: "#header $notification_diplomatic_proposal_third_party_break_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_break_notification_desc$"
 notification_diplomatic_proposal_third_party_accepted_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyAcceptedName]"
 notification_diplomatic_proposal_third_party_accepted_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyAcceptedDesc]"
 notification_diplomatic_proposal_third_party_accepted_tooltip: "#header $notification_diplomatic_proposal_third_party_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_accepted_desc$"
 notification_diplomatic_proposal_third_party_declined_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyDeclinedName]"
 notification_diplomatic_proposal_third_party_declined_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyDeclinedDesc]"
 notification_diplomatic_proposal_third_party_declined_tooltip: "#header $notification_diplomatic_proposal_third_party_declined_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_declined_desc$"
 notification_diplomatic_proposal_third_party_break_accepted_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakAcceptedName]"
 notification_diplomatic_proposal_third_party_break_accepted_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakAcceptedDesc]"
 notification_diplomatic_proposal_third_party_break_accepted_tooltip: "#header $notification_diplomatic_proposal_third_party_break_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_break_accepted_desc$"
 notification_diplomatic_proposal_third_party_break_declined_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakDeclinedName]"
 notification_diplomatic_proposal_third_party_break_declined_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakDeclinedDesc]"
 notification_diplomatic_proposal_third_party_break_declined_tooltip: "#header $notification_diplomatic_proposal_third_party_break_declined_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_break_declined_desc$"
 notification_diplomatic_pact_auto_break_notification_name: "[SCOPE.GetRootScope.GetDiplomaticPact.GetName] rompu"
 notification_diplomatic_pact_auto_break_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetName] avec [AddTextIf(SCOPE.GetRootScope.GetDiplomaticPact.IsFirstCountry(GetPlayer), SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName)][AddTextIf(SCOPE.GetRootScope.GetDiplomaticPact.IsSecondCountry(GetPlayer), SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName)] ne peut plus être maintenu car les conditions suivantes ne sont plus respectées :\n[SCOPE.GetRootScope.GetDiplomaticPact.GetAutoBreakReasonDesc]"
 notification_diplomatic_pact_auto_break_notification_tooltip: "#header $notification_diplomatic_pact_auto_break_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_pact_auto_break_notification_desc$"
 notification_diplomatic_pact_third_party_auto_break_notification_name: "[SCOPE.GetRootScope.GetDiplomaticPact.GetName] rompu"
 notification_diplomatic_pact_third_party_auto_break_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetName] entre [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltNameNoFormatting('Le')][SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName] et [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltNameNoFormatting('Le')][SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] ne peut plus être maintenu car les conditions suivantes ne sont plus respectées :\n[SCOPE.GetRootScope.GetDiplomaticPact.GetAutoBreakReasonDesc]"
 notification_diplomatic_pact_third_party_auto_break_notification_tooltip: "#header $notification_diplomatic_pact_third_party_auto_break_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_pact_third_party_auto_break_notification_desc$"
 notification_character_died_notification_name: "[SCOPE.GetRootScope.GetCharacter.GetFullName] ([SCOPE.GetRootScope.GetCharacter.GetPrimaryRoleName|l]) est mort[SCOPE.GetRootScope.GetCharacter.GetCustom('FR_E')]"
 notification_character_died_notification_desc: "L’ancien [SCOPE.GetRootScope.GetCharacter.GetPrimaryRoleName|l], [SCOPE.GetRootScope.GetCharacter.GetFullName], est mort."
 notification_character_died_notification_tooltip: "$notification_character_died_notification_name$\n$notification_character_died_notification_desc$"
 notification_character_new_formation_notification_name: "[SCOPE.GetRootScope.GetCharacter.GetFullName] ([SCOPE.GetRootScope.GetCharacter.GetPrimaryRoleName|l]) a une nouvelle [concept_military_formation|l]"
 notification_character_new_formation_notification_desc: "[SCOPE.GetRootScope.GetCharacter.GetFullName] appartient maintenant à [AccessScopeReference(SCOPE.GetRootScope).AccessCharacter.GetMilitaryFormation.GetName]"
 notification_character_new_formation_notification_tooltip: "$notification_character_new_formation_notification_name$\n$notification_character_new_formation_notification_desc$"
 notification_character_died_war_office_notification_name: "$notification_character_died_notification_name$"
 notification_character_died_war_office_notification_desc: "Notre personnage [SCOPE.GetRootScope.GetCharacter.GetFullName] est mort dans le bureau de la guerre"
 notification_character_died_war_office_notification_tooltip: "$notification_character_died_war_office_notification_name$\n$notification_character_died_war_office_notification_desc$"
 notification_agitator_spawned_name: "Un [concept_agitator|l] apparaît !"
 notification_agitator_spawned_desc: "[SCOPE.sCha('character').GetAgitatorSpawnedNotificationText]"
 notification_agitator_spawned_tooltip: "$notification_agitator_spawned_name$\n$notification_agitator_spawned_desc$"
 notification_acquired_technology_notification_name: "Découverte : [SCOPE.sT('technology').GetName|l]"
 notification_acquired_technology_notification_desc: "Nous avons découvert : [SCOPE.sT('technology').GetName|l]"
 notification_acquired_technology_notification_tooltip: "$notification_acquired_technology_notification_name$\n$notification_acquired_technology_notification_desc$"
 notification_spreading_technology_notification_name: "Diffusion de [SCOPE.sT('technology').GetName|l]"
 notification_spreading_technology_notification_desc: "La technologie [SCOPE.sT('technology').GetName|l] est parvenue jusqu’à nous"
 notification_spreading_technology_notification_tooltip: "$notification_spreading_technology_notification_name$\n$notification_spreading_technology_notification_desc$"
 notification_price_report_name: "Rapport mensuel des prix du [SCOPE.GetRootScope.GetCountry.GetCapital.GetMarket.GetName|l]"
 notification_price_report_desc: "[SCOPE.GetRootScope.GetCountry.GetPriceReportDesc]"
 notification_price_report_tooltip: "$notification_price_report_name$\n$notification_price_report_desc$"
 notification_law_changed_notification_name: "Loi promulguée : [SCOPE.GetRootScope.GetLaw.GetName|l]"
 notification_law_changed_notification_desc: "Nous avons terminé la promulgation de la loi [SCOPE.GetRootScope.GetLaw.GetName|l]"
 notification_law_changed_notification_tooltip: "$notification_law_changed_notification_name$\n$notification_law_changed_notification_desc$"
 notification_claim_added_notification_name: "[SCOPE.sStateRegion('region').GetName] : [Concept('concept_claim','$concept_claim$')|l] [SCOPE.sC('actor').GetAltNameNoFormatting('Du')][SCOPE.sC('actor').GetName]"
 notification_claim_added_notification_desc: "La région [SCOPE.sStateRegion('region').GetName] est dorénavant [Concept('concept_claim','revendiquée')] par [SCOPE.sC('actor').GetAltNameNoFormatting('Le')][SCOPE.sC('actor').GetName]"
 notification_claim_added_notification_tooltip: "$notification_claim_added_notification_name$\n$notification_claim_added_notification_desc$"
 notification_institution_investment_increased_name: "[SCOPE.GetRootScope.GetInstitution.GetName] : investissement accru"
 notification_institution_investment_increased_desc: "Investissement accru dans l’institution [SCOPE.GetRootScope.GetInstitution.GetName|l] jusqu’au niveau [SCOPE.GetRootScope.GetInstitution.GetInvestmentLevel|v]"
 notification_institution_investment_increased_tooltip: "$notification_institution_investment_increased_name$\n$notification_institution_investment_increased_desc$\n\n#i Effet :#!\n[SCOPE.GetRootScope.GetInstitution.GetModifier.GetDesc]"
 notification_institution_investment_decreased_name: "[SCOPE.GetRootScope.GetInstitution.GetName] : investissement réduit"
 notification_institution_investment_decreased_desc: "Investissement réduit dans l’institution [SCOPE.GetRootScope.GetInstitution.GetName|l] au niveau [SCOPE.GetRootScope.GetInstitution.GetInvestmentLevel|v]"
 notification_institution_investment_decreased_tooltip: "$notification_institution_investment_decreased_name$\n$notification_institution_investment_decreased_desc$\n\n#i Effet :#!\n[SCOPE.GetRootScope.GetInstitution.GetModifier.GetDesc]"
 notification_rank_changed_notification_name: "Rang de puissance modifié"
 notification_rank_changed_notification_desc: "Nous sommes maintenant [SCOPE.sC('actor').GetRank|vl]"
 notification_rank_changed_notification_tooltip: "$notification_rank_changed_notification_name$\n$notification_rank_changed_notification_desc$"
 notification_heir_born_notification_name: "Hériti[SCOPE.GetRootScope.GetCharacter.GetCustom('FR_ErEre')] né[SCOPE.GetRootScope.GetCharacter.GetCustom('FR_E')]"
 notification_heir_born_notification_desc: "[SCOPE.GetRootScope.GetCharacter.GetFullName], [concept_heir|l] du trône [SCOPE.GetRootScope.GetCharacter.GetCountry.GetAltNameNoFormatting('Du')][SCOPE.GetRootScope.GetCharacter.GetCountry.GetName], est né[SCOPE.GetRootScope.GetCharacter.GetCustom('FR_E')]"
 notification_heir_born_notification_tooltip: "$notification_heir_born_notification_name$\n$notification_heir_born_notification_desc$"
 notification_cobelligerent_in_default_notification_name: "Co-belligérant en défaut"
 notification_cobelligerent_in_default_notification_desc: "[SCOPE.sC('in_default_country').GetAltNameNoFormatting('Le')|U][SCOPE.sC('in_default_country').GetName] est en [concept_default|l]. Ce pays sera plus enclin à capituler ou à accepter la paix."
 notification_cobelligerent_in_default_notification_tooltip: "$notification_cobelligerent_in_default_notification_name$\n$notification_cobelligerent_in_default_notification_desc$"
 notification_country_nationalized_building_name: "Bâtiment nationalisé en [SCOPE.GetRootScope.GetBuilding.GetState.GetCountry.GetAltNameNoFormatting('En')][SCOPE.GetRootScope.GetBuilding.GetState.GetCountry.GetName]"
 notification_country_nationalized_building_desc: "[SCOPE.GetRootScope.GetBuilding.GetState.GetCountry.GetAltNameNoFormatting('Le')|U][SCOPE.GetRootScope.GetBuilding.GetState.GetCountry.GetName] a [Concept('concept_nationalize','$concept_nationalized$')|l] le bâtiment [SCOPE.GetRootScope.GetBuilding.GetName] en [SCOPE.GetRootScope.GetBuilding.GetState.GetName], versant une compensation de #v [SCOPE.GetValue('number')|D]@money!#! en échange\n\nSes actions ont réduit nos relations mutuelles de [SCOPE.GetValue('relations')|=+0]"
 notification_country_nationalized_building_tooltip: "$notification_nationalized_building_notification_name$\n$notification_nationalized_building_notification_desc$"
 notification_country_nationalized_building_no_compensation_name: "Bâtiment nationalisé [SCOPE.GetRootScope.GetBuilding.GetState.GetCountry.GetAltNameNoFormatting('En')][SCOPE.GetRootScope.GetBuilding.GetState.GetCountry.GetName]"
 notification_country_nationalized_building_no_compensation_desc: "[SCOPE.GetRootScope.GetBuilding.GetState.GetCountry.GetAltNameNoFormatting('Le')|U][SCOPE.GetRootScope.GetBuilding.GetState.GetCountry.GetName] a [Concept('concept_nationalize','$concept_nationalized$')|l] le bâtiment [SCOPE.GetRootScope.GetBuilding.GetName] en [SCOPE.GetRootScope.GetBuilding.GetState.GetName] sans verser de compensation monétaire\n\nSes actions ont réduit nos relations mutuelles de [SCOPE.GetValue('relations')|=+0]"
 notification_country_nationalized_building_no_compensation_tooltip: "$notification_nationalized_building_notification_name$\n$notification_nationalized_building_notification_desc$"
 notification_fleet_defeated_name: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] défaite"
 notification_fleet_defeated_desc: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] doit retourner au [SCOPE.sHQ('hq').GetName]."
 notification_fleet_defeated_tooltip: "$notification_fleet_defeated_notification_name$\n$notification_fleet_defeated_notification_desc$"
 notification_fleet_repaired_name: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] réparée"
 notification_fleet_repaired_desc: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] a été entièrement réparée."
 notification_fleet_repaired_tooltip: "$notification_fleet_repaired_notification_name$\n$notification_fleet_repaired_notification_desc$"
 notification_enemy_in_default_notification_name: "Ennemi en défaut"
 notification_enemy_in_default_notification_desc: "[SCOPE.sC('in_default_country').GetAltNameNoFormatting('Le')|U][SCOPE.sC('in_default_country').GetName] est en [concept_default|l]. Ce pays sera plus enclin à capituler ou à accepter la paix."
 notification_enemy_in_default_notification_tooltip: "$notification_enemy_in_default_notification_name$\n$notification_enemy_in_default_notification_desc$"
 notification_formation_could_not_find_other_formation_to_automatically_merge_into_name: "La formation [SCOPE.GetRootScope.GetMilitaryFormation.GetName] n’a pas pu trouver d’autre [concept_military_formation|l] avec laquelle fusionner"
 notification_formation_could_not_find_other_formation_to_automatically_merge_into_desc: "La formation [SCOPE.GetRootScope.GetMilitaryFormation.GetName] n’a pas pu trouver d’autre [concept_military_formation|l] avec laquelle fusionner, elle reste donc stationnée au [SCOPE.sHQ('hq').GetName]"
 notification_formation_could_not_find_other_formation_to_automatically_merge_into_tooltip: "$notification_formation_could_not_find_other_formation_to_automatically_merge_into_name$\n$notification_formation_could_not_find_other_formation_to_automatically_merge_into_desc$"
 COMMANDER_COMBAT_UNIT_HEADER: "[CHARACTER.GetFullName] :"
 HQ_TROOP_ALLOCATION_CHANGE_HEADER: "Changements de troupes du [HQ.GetNameNoFlag] :"
 HQ_TROOP_ALLOCATION_CHANGE_COMMANDER: "[CHARACTER.GetFullName] :"
 HQ_TROOP_ALLOCATION_CHANGE_ENTRY: "[Hq.GetCombatUnitsIcon] #v $VALUE|+=$#! de [BUILDING.GetName] en [State.GetName]"
 HQ_TROOP_ALLOCATION_CHANGE_UNIT_TYPE: "$ICON_STR$ #tooltippable #tooltip:$BREAKDOWN$ $VALUE|+=$#!#! bataillons de $UNIT_TYPE_NAME|l$"
 MILITARY_PANEL_GENERALS: "#ITALIC Généraux#!"
 MILITARY_PANEL_ADMIRALS: "#ITALIC Amiraux#!"
 HQ_PANEL_HOME_STATISTICS: "#title Statistiques#!"
 HQ_PANEL_TOTAL_HEADER: "#title Actuellement à [Hq.GetNameNoFlag]#!"
 HQ_MAP_MARKER_TOOLTIP: "#header [Hq.GetName]#!"
 FRONT_SUPPLIED_BY_HQ_ITEM: "$TAB$#v $NUM$#!@battalions! vers le [Front.GetName|l]\n"
 CAN_TRAIN_NO_BARRACKS: "#N Vous n’avez pas de $BUILDING_NAMES$.#!"
 CAN_TRAIN_NO_BARRACKS_OR: "ou"
 CAN_TRAIN_MAXIMUM_SOLDIERS: "#N Vous avez atteint le maximum de votre soldat#!"
 CAN_TRAIN_REACHED_TARGET: "#N Vous avez atteint votre objectif de points de force#!"
 CAN_TRAIN_NO_BUDGET: "#N Votre budget actuel n’est plus suffisant pour former des troupes#!"
 CONDITIONS_TOOLTIP: "\n#title Conditions :#!\n$CONDITIONS$"
 MODIFIERS_TOOLTIP: "#header [InterestGroupModifier.GetName]#!\n$TOOLTIP_DELIMITER$\n[InterestGroupModifier.GetDesc]\n\nTemps restant : [InterestGroupModifier.GetRemainingDays]"
 STATE_INDUSTRY_OUTPUT_MULT: "TEST"
 STATE_INDUSTRY_OUTPUT_MULT_desc: "TESTING_DESC"
 TECHNOLOGY_PLACE_IN_QUEUE: "#header [Technology.GetName]#!\n#v ##[Technology.GetResearchQueuePosition(GetPlayer.Self)]#!dans la file d’attente\nRecherche estimée en [Technology.PredictTimeLeftInQueueDesc(GetPlayer.Self)]"
 ELECTION_RESULTS_TITLE: "#BOLD Résultats des élections <2>#!"
 TOTAL_VOTES_TITLE: "#title Total des votes#!"
 LOCATION_TITLE: "#title Lieu#!"
 COUNTRY_TITLE: "#title Pays#!"
 TOTAL_POLITICAL_STRENGTH_TITLE: "#title [concept_political_strength] totale#!"
 TOTAL_CAPITAL_GAIN_TITLE: "#title Gain d’[concept_authority|l]#!"
 POPULATION_TITLE: "#title Population#!"
 WORKING_ADULTS_TITLE: "#title Main-d’œuvre#!"
 WORKING_ADULTS_INCOME_TITLE: "#title Revenu de la main-d’œuvre#!"
 DEPENDENTS_TITLE: "#title Personnes à charge#!"
 DEPENDENTS_INCOME_TITLE: "#title Revenu des personnes à charge#!"
 VOTES_TITLE: "#title Votes#!"
 CULTURE_TITLE: "#title [concept_culture]#!"
 RELIGION_TITLE: "#title [concept_religion]#!"
 MAJORITY_RELIGION_TITLE: "Religion majoritaire"
 POL_STR_TITLE: "[concept_political_strength]"
 POLITICAL_STRENGTH_TITLE: "#title [concept_political_strength]#!"
 TOTAL_CAPITAL_GAIN_DESC: "#title Gain d’[concept_authority|l]#!"
 TIME_REMAINING: "Temps restant : #BOLD [GetPlayer.GetGovernmentData.GetTimeRemainingElection] jours#!"
 CHANGE_GOVERNMENT_BUTTON: "Former le gouvernement : (#BOLD [GetPlayer.GetGovernmentData.GetCost] @aut!#!)"
 FORM_GOVERNMENT: "Former le gouvernement"
 NAME_OF_GOVERNMENT_TYPE: "[concept_government_type]"
 CHANGE_GOVERNMENT_TOOLTIP: "#header Changer les [Concept('concept_interest_group', '$concept_interest_groups$')|l] au pouvoir#!\n$TOOLTIP_DELIMITER$\nCela remplacera vos groupes d’intérêt au pouvoir par ceux sélectionnés."
 VERY_GOOD_IDEA: "#title $VERY_GOOD_IDEA_NAME$#!"
 #(>[GetGoodThreshold|+2])#!"
 VERY_BAD_IDEA: "#title $VERY_BAD_IDEA_NAME$#!"
 #(<[GetVeryBadThreshold|+2])#!"
 GOOD_IDEA: "#title $GOOD_IDEA_NAME$#!"
 #(>[GetBadThreshold|+2] && <[GetGoodThreshold|+2])#!"
 BAD_IDEA: "#title $BAD_IDEA_NAME$#!"
 #(>[GetVeryBadThreshold|+2] && <[GetBadThreshold|+2])#!"
 VERY_GOOD_IDEA_NAME: "Veut absolument"
 VERY_BAD_IDEA_NAME: "S’oppose vivement à"
 GOOD_IDEA_NAME: "Veut"
 BAD_IDEA_NAME: "S’oppose à"
 NEUTRAL_IDEA_NAME: "Ambivalent sur"
 VERY_GOOD_IDEA_TOOLTIP: "#bold #P Veut absolument#!#! ceci"
 VERY_BAD_IDEA_TOOLTIP: "#bold #N S’oppose vivement#!#! à ceci"
 GOOD_IDEA_TOOLTIP: "#bold #P Veut#!#! ceci"
 BAD_IDEA_TOOLTIP: "#bold #N S’oppose#!#! à ceci"
 NEUTRAL_IDEA_TOOLTIP: "est #header indifférent#! envers ceci"
 EVENT_NO_TIME_LIMIT: "Pas de limite de temps"
 EVENT_WINDOW_EVENT_LOCATION: "[SelectLocalization(Or(EventWindow.GetEvent.HasCategory('enactment'), EventWindow.GetEvent.HasCategory('revolution')), 'EVENT_WINDOW_CATEGORY_SUBTITLE', 'EVENT_WINDOW_SUBTITLE')]"
 EVENT_WINDOW_SUBTITLE: "Événement en [EventWindow.AccessEvent.GetState.GetName]"
 EVENT_WINDOW_CATEGORY_SUBTITLE: "[AddLocalizationIf(EventWindow.GetEvent.HasCategory('enactment'), 'EVENT_WINDOW_CATEGORY_ENACTMENT_SUBTITLE')][AddLocalizationIf(EventWindow.GetEvent.HasCategory('revolution'), 'EVENT_WINDOW_CATEGORY_REVOLUTION_SUBTITLE')]"
 EVENT_WINDOW_CATEGORY_ENACTMENT_SUBTITLE: "[AddLocalizationIf(GetPlayer.GetLawBeingEnacted.HasEnactmentLastCheckpoint, Concatenate(GetPlayer.GetLawBeingEnacted.GetEnactmentLastCheckpointResult, ' '))]Événement pour la [Concept('concept_enactment_of_laws','$concept_enactment_of_laws_enactment$')|l] de [GetPlayer.GetLawBeingEnacted.GetName]"
 EVENT_WINDOW_CATEGORY_REVOLUTION_SUBTITLE: "$REVOLUTION_EVENT_TOOLTIP$"
 test.pink_elephant_tooltip: "Jours restants : [EVENT.GetRemainingDays]"
 test.election_tooltip: "Les résultats des élections sont connus !"
 test.pre.election_tooltip: "#BOLD Élection dans [GetPlayer.GetGovernmentData.GetTimeRemainingPreElection] jours#!\nNombre actuel de votes :"
 test.acquired_technology_tooltip: "Nouvelle technologie acquise !"
 PEOPLE_ABROAD_TITLE: "#title Population non incorporée#!"
 POLITICALLY_UNALIGNED_TITLE: "#title [Concept('concept_politically_unaligned_aligned', '$concept_politically_unaligned$')]#!"
 POLITICALLY_UNALIGNED_TITLE_NO_FORMATTING: "#title Politiquement non aligné#!" #Don't turn this into a concept, it will break some IG tooltips
 TRAIT_INACTIVE: "(Inactif)"
 politically_unaligned_POPULATION: "Population [Concept('concept_politically_unaligned_aligned', 'politiquement non alignée')|l] : [Country.GetInactivePopulation|kv]"
 POLITICALLY_UNALIGNED_POPULATION_TOOLTIP: "#header Population [Concept('concept_politically_unaligned_aligned', 'politiquement non alignée')|l]#!\nTotal : [GetPlayer.GetInactivePopulation|kv]\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetInactivePopulationDesc]"
 POLITICALLY_INVOLVED_POPULATION_TOOLTIP: "#header Population [Concept('concept_politically_unaligned_aligned', 'politiquement alignée')|l]#!\nTotal : [GetPlayer.GetPoliticallyInvolvedPopulation|kv]\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetPoliticallyInvolvedPopulationDesc]"
 POLITICAL_STRENGTH_SUBTITLE: "#title [concept_political_strength]#!"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN_DESC: "[BUILDING.GetExpansionLevelDesc]"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN_URBAN_CAPACITY: "Niveau d’[concept_urbanization|l] de #v [STATE.GetUrbanization]#!"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN_TOOLTIP: "[Building.GetExpansionLevelBreakdown]"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN: "Le niveau maximum de [BUILDING.GetName|l] de $MAXIMUM|v$ s’explique par :\n$TAB$$EXPLANATION$"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN_ARABLE_LAND: "[concept_arable_land] disponible en [STATE.GetName] : $AVAILABLE_ARABLE_LAND|v$"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN_LAND_SHARE: "Potentiel total en [STATE_REGION.GetName] : $MAX_IN_STATE_REGION|v$\n$TAB$Part des terres détenues par [STATE.GetName] en [STATE_REGION.GetName] : $LAND_SHARE|v1%$"
 BUILDING_EXPANSION_LEVEL_BREAKDOWN_UNCAPPED: "[BUILDING.GetName] n’a pas de niveau maximal"
 BUILDING_HAS_INVALID_LEVELS_IN_QUEUE: "Ce bâtiment a des niveaux invalides dans la [concept_construction_queue|l]."
 CONSTRUCTION: "Construction"
 CHANGE_SPEED_NOT_HOST_OR_LOCAL: "#N Seul l’hôte est autorisé à modifier la vitesse du jeu#!"
 INCREASE_SPEED_ALREADY_MAX: "#N Impossible d’augmenter davantage la vitesse du jeu#!"
 DECREASE_SPEED_ALREADY_MIN: "#N Impossible de réduire davantage la vitesse du jeu#!"
 INCREASE_SPEED_TOOLTIP: "Augmenter la vitesse de jeu"
 DECREASE_SPEED_TOOLTIP: "Diminuer la vitesse du jeu"
 GAME_PAUSED: "Le jeu est en pause. #instruction Cliquez#! pour reprendre"
 GAME_RUNNING: "Le jeu laisse le temps s’écouler. #instruction Cliquez#! pour mettre en pause"
 TOGGLE_PAUSE_NOT_HOST_OR_LOCAL: "#N Seul l’hôte est autorisé à mettre en pause#!"
 PAUSED_BY_PLAYER_MP: "Mis en pause par #v [TimeKeeper.GetPausedBy]#!"
 PAUSED_BY_UNPAUSE_ONLY_ME: "Vous seul pouvez quitter la pause pendant encore [TimeKeeper.GetTimeAnyoneUnpause] secondes"
 PAUSED_BY_UNPAUSE_ONLY_PAUSED_BY: "Seul #v [TimeKeeper.GetPausedBy]#! peut quitter la pause pendant encore [TimeKeeper.GetTimeAnyoneUnpause] secondes"
 PAUSED_BY_UNPAUSE_ANYONE: "Tout le monde peut quitter la pause"
 ESTABLISH_COLONY_BUILDING_TOOLTIP: "#variable [BUILDING_TYPE.GetName]#!"
 STATE_COLONY_ACTIVE_INTEREST: "La prochaine croissance de la colonie devrait avoir lieu le #variable [State.GetColonyGrowthDateDesc]#!\n\nLa progression augmente chaque jour de #variable [State.GetDailyColonyProgress|%]#! en raison de : \n[State.GetColonyGrowthModifierDesc]"
 STATE_COLONY_TOOLTIP_INACTIVE_INTEREST: "\n#R Impossible de progresser davantage en absence d’[concept_active_interest|l] de [STATE.GetOwner.GetName] pour [State.GetStateRegion.GetStrategicRegion.GetName]#!"
 STATE_COLONY_TOOLTIP: "#header [concept_colony] [State.GetOwner.GetAltAdjective('FS')|l]#!\n[SelectLocalization(State.IsCompanyColony, 'COMPANY_ESTABLISHING_COLONY', 'COUNTRY_ESTABLISHING_COLONY')]\n[GetPlayer.GetTensionTooltip( State.GetNextColonyProvince.GetState.GetOwner )][ConcatIfNeitherEmpty('\n', AddLocalizationIf( GreaterThan_int32(GetPlayer.GetTensionWith( State.GetNextColonyProvince.GetState.GetOwner), '(int32)50'), 'TENSIONS_ARE_HIGH'))]\n$TOOLTIP_DELIMITER$\nProgression vers l’obtention d’une province supplémentaire : #variable [State.GetColonyProgress|%]#!\n[SelectLocalization( State.IsColonyProgressBlockedByInactiveInterest, 'STATE_COLONY_TOOLTIP_INACTIVE_INTEREST', 'STATE_COLONY_ACTIVE_INTEREST' )]"
 TENSIONS_ARE_HIGH: "@warning! Les [Concept('concept_tension', '$concept_tensions$')|l] sont élevées"
 COUNTRY_ESTABLISHING_COLONY: "#header Établissement d’une [concept_colony|l] [State.GetOwner.GetAltAdjective('FS')|l] en [State.GetName]#!"
 COMPANY_ESTABLISHING_COLONY: "#header Établissement d’une [concept_colony|l] [State.GetOwner.GetAltAdjective('FS')|l] en [State.GetName] par [State.GetColonyCompany.GetName]#!"
 MARKET_CAPITAL_CONCEPT: "[concept_market_capital]"
 MARKET_CAPITAL: "#title [concept_market_capital]#!\n[Market.GetMarketCapital.GetName]"
 MOVE_CAPITAL_FORBIDDEN_WHILE_IN_ACTIVE_DIPLO_PLAY: "#N Impossible de déplacer la capitale en étant impliqué dans un [concept_diplomatic_play|l]#!"
 MOVE_MARKET_CAPITAL_FORBIDDEN_WHILE_IN_ACTIVE_DIPLO_PLAY: "#N Impossible de déplacer la [concept_market_capital|l] en étant impliqué dans un [concept_diplomatic_play|l]#!"
 MOVE_CAPITAL_FORBIDDEN_WHILE_AT_WAR: "#N Impossible de déplacer la capitale en étant en [concept_war|l]#!"
 MOVE_MARKET_CAPITAL_FORBIDDEN_WHILE_AT_WAR: "#N Impossible de déplacer la [concept_market_capital|l] en étant en [concept_war|l]#!"
 MOVE_CAPITAL_ALREADY_MOVED_RECENTLY: "#N Nous avons récemment changé notre [concept_capital_state] et ne pourrons plus le changer avant le $DATE|v$#!"
 MOVE_CAPITAL_IS_ALREADY_CAPITAL: "#N [STATE.GetName] est déjà notre [concept_capital_state]#!"
 MOVE_CAPITAL_NOT_INCORPORATED: "#N Seul un [concept_incorporated_state] peut devenir l’[concept_capital_state]#!"
 MOVE_CAPITAL_NOT_CULTURAL_HOMELAND: "#N Seule une [concept_homeland|l] de l’une de vos [concept_primary_cultures|l] peut devenir l’[concept_capital_state]#!"
 MOVE_MARKET_CAPITAL_ALREADY_MOVED_RECENTLY: "#N Nous avons récemment changé notre [Concept('concept_market_capital', 'capitale de marché')|l] et ne pourrons plus la changer avant le $DATE|v$#!"
 MOVE_MARKET_CAPITAL_IS_ALREADY_CAPITAL: "#N [STATE.GetName] est déjà notre [Concept('concept_market_capital', 'capitale de marché')|l]#!"
 MOVE_MARKET_CAPITAL_NOT_INCORPORATED: "#N Seul un [concept_incorporated_state] peut devenir la [concept_market_capital|l]#!"
 MOVE_MARKET_CAPITAL_NOT_MARKET_OWNER: "#N Nous faisons partie du [concept_market|l] d’un autre [concept_country|l] et ne pouvons pas déplacer la [concept_market_capital|l]#!"
 INCORPORATE_STATE_NO_NEIGHBOUR: "Peut seulement incorporer un État voisin d’un État déjà incorporé"
 INCORPORATE_STATE_COLONY_NOT_FINISHED: "Ne peut pas incorporer une [concept_colony|l] alors qu’elle est encore en croissance"
 INCORPORATE_STATE_ALREADY_INCORPORATED: "Déjà incorporé"
 INCORPORATE_STATE_ALREADY_INCORPORATING: "Déjà en train d’incorporer"
 INCORPORATE_STATE_HAS_DIPLOMATIC_PLAY_IN_REGION: "Une [concept_decentralized_nation|l] a un [concept_diplomatic_play|l] actif dans cette [concept_state_region|l]"
 INCORPORATE_STATE_HAS_TRUCE_IN_REGION: "Impossible d’incorporer une [concept_colony|l] tout en faisant une trêve et sans avoir des [concept_colonization_rights|l] avec la [concept_decentralized_nation|l] de cette [concept_state_region|l]"
 INCORPORATE_STATE_CANNOT_INCORPORATE_TREATY_PORT: "Impossible d’incorporer un [concept_treaty_port|l]"
 INCORPORATE_STATE_INCORPORATION_DISALLOWED: "Ne peut être incorporé en raison de :#!\n$TAB$[State.GetModifier.GetDescFor('state_disallow_incorporation_bool')]"
 INCORPORATE_STATE_NOT_ENOUGH_BUREAUCRACY: "@warning! Le coût d’[Concept('concept_incorporated_state', '$concept_incorporating$')|l] de $STATE_NAME$ entraînerait un déficit (@bur!$PROJECTED_TOTAL|v+1$)"
 incorporate_state: "Incorporer l’État"
 incorporate_state_tooltip: "#header $incorporate_state$#!\n$TOOLTIP_DELIMITER$\n[concept_incorporated_state_desc]"
 REVOLUTIONARY_PARTY_CANNOT_JOIN_GOVERNMENT: "Au moins un groupe d’intérêt de [Party.GetName] [Party.GetMembersSummary] soutient une révolution en cours"
 SUPPRESSED_PARTY_CANNOT_JOIN_GOVERNMENT: "Au moins un groupe d’intérêt de [Party.GetName] [Party.GetMembersSummary] est [Concept('concept_suppress','$concept_suppressed$')|l]"
 UNINCORPORATE_STATE_TOOLTIP: "Cliquez pour annuler l’incorporation"
 ESTABLISH_COLONY_STATE_NOT_VALID: "La cible n’est pas un [concept_state] valide."
 ESTABLISH_COLONY_REVOLUTIONARY: "Les États révolutionnaires ne peuvent pas [Concept('concept_colony','$concept_colonize$')|l] d’États avant la fin de la guerre civile."
 ESTABLISH_COLONY_NO_INTEREST: "Nous devons avoir un [concept_interest|l] pour $REGION|v$ pour y [Concept('concept_colony','$concept_colonize$')|l]."
 ESTABLISH_COLONY_TYPE_NOT_VALID: "Le type de [concept_colony|l] n’est pas valide."
 ESTABLISH_COLONY_TARGET_COUNTRY_NOT_VALID: "Il n’y a pas de cibles valables pour la [Concept('concept_colony','$concept_colonization$')|l] dans l’[concept_state]."
 ESTABLISH_COLONY_ALREADY_HAS_COLONY: "Nous avons déjà une [concept_colony|l] ici !"
 ESTABLISH_COLONY_ALREADY_HAS_TREATY_PORT: "Nous avons déjà un [concept_treaty_port|l] ici !"
 ESTABLISH_COLONY_OUT_OF_RANGE: "Nous ne pouvons pas atteindre cet [concept_state]"
 ESTABLISH_COLONY_CANNOT_AFFORD_MAINTENANCE: "Nous ne pouvons pas nous permettre le coût de maintenance de $NEXTCOST|v$ @bur!/mois !\nVous n’avez que $CURRENTINCOME|v$ @bur!/mois disponible."
 ESTABLISH_COLONY_INTEREST_MARKER_INSUFFICIENT: "Notre [concept_interest|l] est insuffisant !"
 ESTABLISH_COLONY_BAD_RANK: "Les [Concept('concept_country','$concept_countries$')|l] de [concept_rank|l] [COUNTRY.GetRank|l] ne peuvent pas établir de [Concept('concept_colony','$concept_colonies$')|l]"
 ESTABLISH_COLONY_NO_COLONIAL_GROWTH: "Nous ne produisons aucune [concept_colonial_growth|l]"
 ESTABLISH_COLONY_TRUCE_BLOCKED: "La [Concept('concept_colony','$concept_colonization$')|l] n'est pas autorisée ici tant que nous avons une trêve avec les autochtones"
 ESTABLISH_COLONY_DIPLO_PLAY_BLOCKED: "La [Concept('concept_colony','$concept_colonization$')|l] n'est pas autorisée ici tant qu’un [concept_diplomatic_play|l] ou une [concept_war|l] est en cours dans un [concept_country|l] de la [concept_state_region|l]"
 ESTABLISH_COLONY_MISSING_TECH: "Nous n’avons pas la [concept_technology|l] requise #variable '$TECH$'#!"
 ESTABLISH_COLONY_FOREIGN_CLAIMS: "Impossible de coloniser cette [concept_state_region|l] car les [Concept('concept_country', '$concept_countries$')|l] suivants ont des [Concept('concept_claim', '$concept_claims$')|l] et y ont des [Concept('concept_interest', '$concept_interests$')|l] : $LIST$"
 ESTABLISH_COLONY_NON_COLONIZATION_AGREEMENT: "Un [concept_treaty|l] nous interdit de coloniser la [concept_strategic_region|l] $REGION|v$."
 ESTABLISH_COLONY_PORT_COST: "Établir une [concept_colony|l] ici coûte $COST|vD$@money! et construit un [GetBuildingType('building_port').GetName|l] de niveau [GetDefine('NEconomy','ESTABLISH_COLONY_PORT_LEVEL')|v0]"
 ESTABLISH_COLONY_COMMAND_COASTAL_PORT_COST_CONFIRMATION: "Voulez-vous payer $COST|vD$@money! pour [Concept('concept_colony','$concept_colonize$')|l] [StateRegion.GetName] et construire un [GetBuildingType('building_port').GetName|l] ici ?[ConcatIfNeitherEmpty('\n\n', '$INVESTMENT_DESC$')]"
 ESTABLISH_COLONY_COMMAND_COST_PAID_BY_INVESTMENT: "$COST_INVESTMENT|vD$@money! du coût est payé à l’aide du [concept_investment_pool|l]"
 CANCEL_COLONY_TOOLTIP: "Annuler la [Concept('concept_colony','$concept_colonization$')|l]"
 CANCEL_COLONY_NO_COLONY: "#N Nous n’avons pas de [concept_colony|l] ici !#!"
 CANCEL_COLONY_INCORPORATED: "#N Nous ne pouvons pas annuler la colonisation d’un [concept_incorporated_state] !#!"
 CANCEL_COLONY_HAS_DIPLO_PLAY: "#N Impossible de supprimer une [concept_colony|l] alors qu’elle fait partie d’un [concept_diplomatic_play|l] en cours#!"
 CANCEL_COLONY_TARGET_COUNTRY_NOT_VALID: "#N Il n’y a aucune cible valable qui pourrait nous prendre la [concept_colony|l]#!"
 CANCEL_COLONY_COMPANY_CHARTER: "#N Impossible de supprimer une [concept_colony|l] alors qu’elle fait partie d’une charte accordée à la compagnie [COMPANY.GetName]#!"
 COLONIZATION_PAUSED: "[Concept('concept_colony','$concept_colonization$')] suspendue"
 COLONIZATION_IS_OCCUPIED_IN_WAR: "[State.GetName] est [Concept('concept_occupation','$concept_occupied$')|l]"
 COLONIZATION_ISOLATED_FROM_MARKET: "[State.GetName] est [Concept('concept_isolated_state','$concept_isolated_state_short$')|l] de son [concept_market|l]"
 COLONIZATION_STOPPED_ACTIVE_DIPLOMATIC_PLAY: "La [Concept('concept_colony','$concept_colonization$')|l] est en attente en raison d'un [concept_native_uprising|l] en cours"
 COLONIZATION_STOPPED_TRUCE: "La [Concept('concept_colony','$concept_colonization$')|l] est en attente tant que nous avons une trêve avec les autochtones"
 COLONIZATION_STOPPED_NON_COLONIZATION_AGREEMENT: "Un [concept_treaty|l] nous interdit de coloniser la [concept_strategic_region|l] $REGION|v$."
 CANNOT_ESTABLISH_COLONY_HOVER: "#header #N Impossible de coloniser [STATE_REGION.GetName]#!#!"
 CANNOT_ESTABLISH_COLONY_NOT_A_STATE_REGION: "#header #N Vous ne pouvez pas coloniser ceci#!#!"
 ESTABLISH_COLONY_HOVER: "#header Coloniser [STATE_REGION.GetName]#!"
 REMOVE_COLONY_TOOLTIP: "#header Supprimer la colonie de [StateRegion.GetName]"
 REMOVE_COLONY_CONFIRM: "#header Souhaitez-vous annuler la [Concept('concept_colony', 'colonisation')] en [STATE.GetName] ?#!\n\nVous perdrez tous les progrès réalisés dans cet État, y compris les provinces déjà colonisées.\n[STATE.GetColonyProvinceProgressDesc]\nProgression vers l’obtention d’une province supplémentaire : #tooltippable #tooltip:[STATE.GetTooltipTag],STATE_COLONY_TOOLTIP [STATE.GetColonyProgress|%]#!#!"
 STATE_PROVINCES_COLONIZED: "#variable $CURRENT$#!/#variable $TOTAL$#! provinces [Concept('concept_colony', '$concept_colonized$es')|l]"
 HAS_NO_INTEREST_MARKER: "#N Cette région n’a pas d’[concept_interest|l]#!"
 HAS_INTEREST_MARKER: "#N Cette région contient déjà un [concept_interest|l]#!"
 NO_STATE_ADJACENT_REGION: "#N Ne possède aucun État limitrophe de cette région#!"
 LACKING_DIPLO_CAPITAL: "#N $VALUE|0$@inf! requis#!"
 RIVAL_RULES_NOT_MET: "#N Conditions de rivalité non remplies !"
 SET_INTEREST_MARKER: "#header Définir l’[concept_interest|l] de niveau $LEVEL$#!"
 IM_RANK_UNDER_MIN: "#N Impossible de rétrograder un [concept_interest|l] de niveau $LEVEL$#!"
 IM_RANK_OVER_MAX: "#N Impossible de promouvoir un [concept_interest|l] de niveau $LEVEL$#!"
 IM_COUNTRY_RANK_TOO_LOW: "#N Le rang du pays doit être au moins $RANK|l$ pour le faire#!"
 INTERESTS: "[Concept('concept_interest', '$concept_interests$')]"
 DECLARE_INTEREST_ALREADY_HAS_INTEREST: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] [Country.GetAltNameNoFormatting('AOnt')] déjà un [concept_interest|l] pour [StrategicRegion.GetName]"
 DECLARE_INTEREST_TOO_MANY_DECLARED_INTERESTS: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] ne peut plus déclarer d’[concept_interest|l]"
 DECLARE_INTEREST_ADD_TOOLTIP: "#header [Concept('concept_declared_interest','$concept_declare_interest$')] pour [StrategicRegion.GetName]#!\n$TOOLTIP_DELIMITER$\nAjouter un [concept_declared_interest|l] pour [StrategicRegion.GetName]\nNous utilisons actuellement [GetPlayer.GetNumDeclaredInterests|v] de nos #tooltippable #tooltip:[GetPlayer.GetTooltipTag],MAX_DECLARED_INTERESTS_TOOLTIP [GetPlayer.CalcMaxNumDeclaredInterests|v]#!#! [Concept('concept_declared_interest','$concept_declared_interests$')|l]"
 DECLARE_INTEREST_REMOVE_TOOLTIP: "#header [Concept('concept_declared_interest','$concept_declare_interest$')] pour [StrategicRegion.GetName]#!\n$TOOLTIP_DELIMITER$\nRetirer notre [concept_declared_interest|l] pour [StrategicRegion.GetName]\nNous utilisons actuellement [GetPlayer.GetNumDeclaredInterests|v] de nos #tooltippable #tooltip:[GetPlayer.GetTooltipTag],MAX_DECLARED_INTERESTS_TOOLTIP [GetPlayer.CalcMaxNumDeclaredInterests|v]#!#! [Concept('concept_declared_interest','$concept_declared_interests$')|l]"
 DECLARE_INTEREST_NOT_COASTAL_NOT_ADJACENT: "[StrategicRegion.GetName] n’est ni côtier ni limitrophe d’un de nos [Concept('concept_interest', '$concept_interests$')|l] naturels"
 DECLARE_INTEREST_COASTAL_BUT_NO_COAST: "[StrategicRegion.GetName] n’est pas limitrophe d’un de nos [Concept('concept_interest', '$concept_interests$')|l] naturels et nous ne disposons pas d’une côte"
 ACTOR_COUNTRY_NOT_VALID: "Pays de l’acteur non valide."
 TARGET_COUNTRY_NOT_VALID: "#N Pays cible non valide.#!"
 TARGET_STATE_NOT_VALID: "#N État cible non valide.#!"
 TARGET_STRATEGIC_REGION_NOT_VALID: "#N [concept_strategic_region] non valide.#!"
 NO_ACTIVE_RESEARCH: "Aucune recherche en cours"
 ACTIVE_RESEARCH: "Recherches en cours"
 PASSIVELY_SPREADING_TECHS: "[concept_technology_spread]"
 REMAINING_RESEARCH_QUEUE: "#v +[GetDataModelSize(AccessPlayer.GetResearchQueueBottom)]#!"
 START_RESEARCH_COMMANDS: "\n#instruction Cliquez pour commencer à rechercher la technologie [Technology.GetName|l] immédiatement\n$SHORTCUT_KEY_MOD_shift$Cliquez pour l’ajouter à la file d’attente pour la recherche#!"
 START_RESEARCH_COMMANDS_IN_QUEUE: "\n#instruction Cliquez pour commencer à rechercher la technologie [Technology.GetName|l] immédiatement#!"
 RESEARCH_TECHNOLOGY_BUTTON: "Commencer une nouvelle recherche ([AccessPlayer.AccessNumResearchableTechnologies|v])"
 REPLACE_TECHNOLOGY_BUTTON: "Remplacer la recherche ([AccessPlayer.AccessNumResearchableTechnologies|v])"
 RESEARCH_TECHNOLOGY_BUTTON_TOOLTIP: "#header Sélectionnez une nouvelle recherche#!\nIl y a [AccessPlayer.AccessNumResearchableTechnologies|v] technologies que vous pouvez rechercher"
 INNOVATION_DESCRIPTION: "Innovation hebdomadaire : #v [Country.GetWeeklyInnovation|+0]@innovation!#!"
 INNOVATION_TOOLTIP: "#header [concept_innovation]#!\n[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] génère #v [Country.GetWeeklyInnovation|+2]@innovation!#! d’[concept_innovation|l] chaque semaine :\n[Country.GetWeeklyInnovationDesc]\n\nUn maximum de [Country.GetWeeklyMaxInnovation|v2]@innovation! d’[concept_innovation|l] peuvent être investis dans la recherche en cours chaque semaine :\n[Country.GetWeeklyMaxInnovationDesc]\n\nToute [concept_innovation|l] qui n’est pas dépensée en raison de plafonds d’investissement ou de l’absence de recherche en cours augmentera le taux de [concept_technology_spread|l] de notre pays"
 TECHNOLOGY_SPREAD_RATE_DESCRIPTION: "[concept_technology_spread] : #v [Country.GetWeeklyTechnologySpreadDesc]#!"
 TECHNOLOGY_SPREAD_RATE_TOOLTIP: "#header [concept_technology_spread]#!\n$TECHNOLOGY_SPREAD_RATE_BREAKDOWN$[ConcatIfNeitherEmpty('\n\n',Country.GetCurrentlySpreadingTechsDesc)]"
 TECHNOLOGY_SPREAD_RATE_BREAKDOWN: "[Country.GetWeeklyTechnologySpreadBreakdown]"
 CURRENTLY_SPREADING_TECHS: "#header Technologies en cours de diffusion#!\n$BREAKDOWN$"
 TECH_SPREAD_ENTRY: "$PROGRESS|%0v$ - [Technology.GetName] ([Technology.GetCategoryName])"
 TECHNOLOGY_TYPE_DESCRIPTION: "#b [Technology.GetEra.GetNumber]#!"
 TECHNOLOGY_INVENTED_IN: "Inventé en #BOLD [Technology.GetOrigin.GetName]#!"
 TECHNOLOGY_IN_QUEUE: "Fin prévue dans #v [Technology.PredictTimeLeftInQueueDesc(GetPlayer.Self)]#! (Position dans la file d’attente : #v [Technology.GetResearchQueuePosition(GetPlayer.Self)]#!)"
 TECHNOLOGY_TOOLTIP_COST: "#title Coût :#! #tooltippable #tooltip:TECHNOLOGY_COST [TECHNOLOGY.GetCost( GetPlayer.Self )|0vk]@innovation!#!#! d’innovation ([TECHNOLOGY.PredictTimeLeftDesc( GetPlayer.Self )] à rechercher)"
 TECHNOLOGY_TOOLTIP_MODIFIERS_LABEL: "#title Modificateurs#!"
 TECHNOLOGY_TOOLTIP_ADOPTION_EFFECTS_LABEL: "#title Effets d’adoption#!"
 TECHNOLOGY_TOOLTIP_SPREAD_EFFECTS_LABEL: "#title Effets de propagation#!"
 TECHNOLOGY_TOOLTIP_UNLOCKS_LABEL: "#title Déverrouillées#!"
 TECHNOLOGY_TOOLTIP_LORE: "#lore $LORE$#!"
 COMMON_KNOWLEDGE: "Connaissances communes"
 RESEARCHABLE_TITLE: "#title Recherchable#!"
 NUM_URBAN_BUILDINGS: "#header Bâtiments urbains#!\nIl y a au total #variable [StatesPanel.GetNumUrbanLevels]#! niveaux de bâtiments urbains en [State.GetName]"
 NUM_RESOURCE_BUILDINGS: "#header Bâtiments de ressources#!\nIl y a au total #variable [StatesPanel.GetNumResourceLevels]#! niveaux de bâtiments de ressources en [State.GetName]"
 NUM_AGRICULTURE_BUILDINGS: "#header Bâtiments agricoles#!\nIl y a au total #variable [StatesPanel.GetNumAgricultureLevels]#! niveaux de bâtiments agricoles en [State.GetName]"
 NUM_DEVELOPMENT_BUILDINGS: "#header Bâtiments de développement#!\nIl y a au total #variable [StatesPanel.GetNumDevelopmentLevels]#! niveaux de bâtiments de développement en [State.GetName]"
 TECHNOLOGY_PROGRESS_FORMAT_NO_SPREAD: "#P $FIXED_TECH_PROGRESS|0$#!"
 TECHNOLOGY_PROGRESS_FORMAT_WITH_SPREAD: "#v $MIN_TECH_PROGRESS|0+$ - $MAX_TECH_PROGRESS|0+$#!"
 TECHNOLOGY_SPREAD_FORMAT: "#v $MIN_TECH_SPREAD|0+$ - $MAX_TECH_SPREAD|0+$#!"
 TECHNOLOGY_NO_SPREAD_FORMAT: "#v $TECH_SPREAD|0+$#!"
 TECHNOLOGY_PROGRESS_WEEKS_MIN_MAX: "$MIN_TIME$ - $MAX_TIME$"
 TREATY_ENFORCED_ON_COUNTRY_CANNOT_WITHDRAW: "Ce traité est appliqué [Country.GetAltNameNoFormatting('En')][Country.GetName], et ne peut pas être retiré."
 TREATY_ENFORCED_ON_COUNTRY_CANNOT_RENEGOTIATE: "Ce traité est appliqué [Country.GetAltNameNoFormatting('En')][Country.GetName], et ne peut pas être renégocié."
 TREATY_PROPOSAL_ALREADY_PENDING_WITH_COUNTRY: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] réfléchit déjà à une proposition de traité de notre part."
 TREATY_PROPOSAL_NO_BINDING_PERIOD: "Ajouter une [concept_binding_period|l]"
 BUILD_URBAN_BUILDING: "Construire un nouveau bâtiment urbain\nCette action a #v [StatesPanel.AccessState.GetNumConstructableUrbanBuildings|+]#! cibles valides"
 STATE_GDP: "PIB : #variable [State.GetGDPContributionPercentage|%1]#!"
 STATE_TAX: "Impôt : #variable [State.GetTaxationRevenue|+=K]#!"
 NUM_RURAL_BUILDINGS: "#header Bâtiments ruraux#!\nIl y a au total #variable [StatesPanel.GetNumRuralLevels]#! niveaux de bâtiments ruraux en [State.GetName]"
 NUM_RURAL_BUILDINGS_OVERVIEW: "#header Bâtiments ruraux#!\nIl y a au total #variable [StatesPanel.GetNumRuralLevels]#! niveaux de bâtiments ruraux en [State.GetName]"
 NUM_POPS: "#header Population#!\nIl y a au total [State.GetPopulationSize|Kv] de personnes vivant en [State.GetName]"
 NUM_SOL: "#header [concept_sol]#! en [State.GetName]\nMoyenne actuelle : [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetAverageStandardOfLivingAll)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_SOL_ALL [State.GetAverageStandardOfLivingAll|1v]#!#!)\n$TOOLTIP_DELIMITER$\n$EXPECTED_SOL_SHORT$ moyen : [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingAll)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_EXPECTED_SOL_ALL [State.GetExpectedStandardOfLivingAll|v1]#!#!)\n[State.GetPopulationRatioBelowExpectedStandardOfLiving|%v1] des [Concept('concept_pop', '$concept_pops$')|l] ont un [concept_sol|l] inférieur à $EXPECTED_SOL_SHORT$"
 STATE_SOL_ALL: "#header [concept_sol] moyen pour tous les [Concept('concept_pop', '$concept_pops$')|l] en [State.GetName]#!\n#v [State.GetFormattedStandardOfLivingLabelAll] ([State.GetFormattedStandardOfLivingAll]#!)\n$TOOLTIP_DELIMITER$\n[State.GetAdditionalSOLFactorsDescAll]"
 STATE_SOL_POOR: "#header [concept_sol] moyen pour la $FR_lower$ en [State.GetName]#!\n#v [State.GetFormattedStandardOfLivingLabelPoor] ([State.GetFormattedStandardOfLivingPoor]#!)\n$TOOLTIP_DELIMITER$\n[State.GetAdditionalSOLFactorsDescPoor]"
 STATE_SOL_MIDDLE: "#header [concept_sol] moyen pour la $FR_middle$ en [State.GetName]#!\n#v [State.GetFormattedStandardOfLivingLabelMiddle] ([State.GetFormattedStandardOfLivingMiddle]#!)\n$TOOLTIP_DELIMITER$\n[State.GetAdditionalSOLFactorsDescMiddle]"
 STATE_SOL_RICH: "#header [concept_sol] moyen pour la $FR_upper$ en [State.GetName]#!\n#v [State.GetFormattedStandardOfLivingLabelRich] ([State.GetFormattedStandardOfLivingRich]#!)\n$TOOLTIP_DELIMITER$\n[State.GetAdditionalSOLFactorsDescRich]"
 STATE_EXPECTED_SOL_ALL: "#header [concept_expected_sol] moyen pour tous les [Concept('concept_pop', '$concept_pops$')|l] en [State.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingAll)] ([State.GetExpectedStandardOfLivingAll|1]#!)\n$TOOLTIP_DELIMITER$\n[State.GetExpectedSOLFactorsDescAll]"
 STATE_EXPECTED_SOL_POOR: "#header [concept_expected_sol] moyen pour la $FR_lower$ en [State.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingPoor)] ([State.GetExpectedStandardOfLivingPoor|1]#!)\n$TOOLTIP_DELIMITER$\n[State.GetExpectedSOLFactorsDescPoor]"
 STATE_EXPECTED_SOL_MIDDLE: "#header [concept_expected_sol] moyen pour la $FR_middle$ en [State.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingMiddle)] ([State.GetExpectedStandardOfLivingMiddle|1]#!)\n$TOOLTIP_DELIMITER$\n[State.GetExpectedSOLFactorsDescMiddle]"
 STATE_EXPECTED_SOL_RICH: "#header [concept_expected_sol] moyen pour la $FR_upper$ en [State.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingRich)] ([State.GetExpectedStandardOfLivingRich|1]#!)\n$TOOLTIP_DELIMITER$\n[State.GetExpectedSOLFactorsDescRich]"
 PRESTIGE_GOODS_VARIANT: "[Goods.GetName] [Goods.GetTextIcon] est une variante des [Concept('concept_prestige_good', '$concept_prestige_goods$')|l] de [Goods.GetBaseGoods.GetName] [Goods.GetBaseGoods.GetTextIcon]"
 WE_NOW_HAVE_LAW: "#bold Nous avons maintenant [PlayerMessageItem.GetLaw.GetName] !#!"
 GAINED_MODS: "#title Gagné en passant à la loi [PlayerMessageItem.GetLaw.GetName] :#!"
 LOST_MODS: "#title Perdu en changeant la loi [PlayerMessageItem.GetPrevLaw.GetName] :#!"
 ENACT_APPROVAL_CHANGES: "#title L’approbation du [concept_interest_group|l] change en raison de la promulgation de la loi [PlayerMessageItem.GetLaw.GetName]#!"
 ABOLISH_APPROVAL_CHANGES: "#title L’approbation du [concept_interest_group|l] change en raison de l’abolition de la loi [PlayerMessageItem.GetPrevLaw.GetName]#!"
 LAW_LORE: "#lore #bold [PlayerMessageItem.GetLaw.GetName]#!\n[PlayerMessageItem.GetLaw.GetFlavor]#!"
 LAW_LORE_HEADER: "#b [PlayerMessageItem.GetLaw.GetFlavor]#!"
 PREVIOUS_LAW_POPUP_HEADER: "Modifié à partir de [PlayerMessageItem.GetPrevLaw.GetName]"
 INVALID_ERA: "Époque invalide"
 TECHNOLOGY_PROGRESS: "#v [Technology.GetProgress(GetPlayer.Self)|D]#! / #maximum [Technology.GetCost(GetPlayer.Self)|D]#!@innovation!"
 TECHNOLOGY_COST: "[Technology.GetCostDesc(GetPlayer.Self)]"
 TECHNOLOGY_COST_DESC: "#header Coût de la technologie [Technology.GetName|l] : $COST|0$@innovation!#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 TECHNOLOGY_COST_DETAILS: "Coût de base pour l'[Concept('concept_technology_era', '$concept_technology_era_short$')] : $VAL|0v$@innovation!"
 TECHNOLOGY_COST_PENALTY: "Pénalité d'anticipation de $VAL|0-$@innovation! en raison de :\n$DESC$"
 RESEARCH_PENALTY_BASE: "$VAL|v0$ en raison de la valeur de base"
 RESEARCH_PENALTY_UNRESEARCHED_TECHS: "#n x#!$VAL|0-$ en raison des [Concept('concept_technology', '$concept_technologies$')|l] non étudiées pendant les ères antérieures :\n$DESC$"
 RESEARCH_PENALTY_UNRESEARCHED_TECHS_ONE_ENTRY: "#n x#!$VAL|0-$ en raison du nombre de [Concept('concept_technology', '$concept_technologies$')|l] non étudiées pendant #v l'ère [Era.GetNumber]#!"
 RESEARCH_PENALTY_UNRESEARCHED_TECHS_ENTRY: "$TAB$$TAB$$VAL|0-=$ en raison des $NUM|v$ [Concept('concept_technology', '$concept_technologies$')|l] de #v l'ère [Era.GetNumber]#!"
 TECHNOLOGY_PROGRESS_GAIN: "#v #tooltippable #tooltip:[Technology.GetTooltipTag],TECHNOLOGY_GAIN_BREAKDOWN [GetPlayer.GetWeeklyTechnologyProgressDescForTech(Technology.Self)]#!#!#!"
 TECHNOLOGY_PROGRESS_TIME_LEFT: "[Technology.GetTimeLeftDesc( GetPlayer.Self )] restants"
 TECHNOLOGY_PROGRESS_WITH_GAIN: "$TECHNOLOGY_PROGRESS$ ($TECHNOLOGY_PROGRESS_GAIN$)"
 TECHNOLOGY_PROGRESS_WITH_GAIN_AND_TIME_LEFT: "$TECHNOLOGY_PROGRESS_WITH_GAIN$ ($TECHNOLOGY_PROGRESS_TIME_LEFT$)"
 NO_TECH_IN_RESEARCH_QUEUE: "Pas de [Concept('concept_technology', '$concept_technologies$')|l] en file d’attente"
 RESEARCH_QUEUE: "File d’attente pour la recherche"
 ADD_TO_TECH_QUEUE: "Ajouter la technologie [Technology.GetName|l] à la file d’attente pour la recherche"
 REMOVE_TECH_FROM_QUEUE: "Retirer la technologie [Technology.GetName|l] de la file d’attente pour la recherche"
 HOW_TO_ADD_TO_RESEARCH_QUEUE: "Ajoutez des [Concept('concept_technology', '$concept_technologies$')|l] à la file d’attente pour la recherche avec SHIFT + en cliquant sur une technologie disponible, ou en cliquant sur le #b +#! situé à côté de la technologie."
 TECH_QUEUE_BUTTON_NUMBER: "#b [Add_int32('(int32)1', Add_int32(GetDataModelSize(AccessPlayer.GetResearchQueueTop), GetDataModelSize(AccessPlayer.GetResearchQueueBottom)))]#!"
 TECHNOLOGY_SPREAD_TOOLTIP: "#header [concept_technology_spread]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetWeeklyTechnologySpreadForTechDesc(Technology.Self)]"
 TECHNOLOGY_GAIN_BREAKDOWN: "#header Progrès technologique#!\nDe la vitesse de recherche en [Technology.GetCategoryName|l] : #tooltippable #tooltip:[Technology.GetTooltipTag]|[GetPlayer.GetTooltipTag],RESEARCH_SPEED_TOOLTIP #v [GetPlayer.GetWeeklyResearchSpeed|=+1]#!#!#!\nDe la [concept_technology_spread|l] : #tooltippable #tooltip:[Technology.GetTooltipTag],TECHNOLOGY_SPREAD_TOOLTIP [GetPlayer.GetWeeklyTechnologySpreadForTechDesc(Technology.Self)]#!#!"
 RESEARCH_SPEED_TOOLTIP: "[Country.GetWeeklyResearchSpeedDesc]"
 BASE_WEEKLY_TECH_SPREAD: "[concept_technology_spread] hebdomadaire de base : #v $VALUE|+2$#!"
 RANDOMIZED_WEEKLY_TECH_SPREAD: "Cela se traduit par une [concept_technology_spread|l] entre #P $MIN|1$#! et #P $MAX|1$#! d’[concept_innovation|l]@innovation! investis chaque semaine dans les [Concept('concept_technology', '$concept_technologies$')|l] qui se propagent jusqu’à nous."
 TECH_SPREAD_FROM_NEIGHBOR: "[concept_technology_spread] de $COUNTRY|v$ : #v $VALUE|+=2$#! (voisin)"
 TECH_SPREAD_FROM_PACT: "[concept_technology_spread] de $COUNTRY|v$ : #v $VALUE|+=2$#! ($PACT$)"
 TECH_SPREAD_MAX_CAP: "[concept_technology_spread] plafonnée à #v $VALUE|+2$#!/semaine"
 test.acquired_technology.t: "[ROOT.GetCountry.GetAltNameNoFormatting('Le')|U][ROOT.GetCountry.GetName] [ROOT.GetCountry.GetAltNameNoFormatting('AOnt')] acquis [ROOT.GetTechnology.GetName|l] !"
 test.acquired_technology.d: "TODO Description"
 test.acquired_technology.f: "TODO Flavor"
 SHOW_MORE: "#header Afficher plus#!"
 SHOW_LESS: "#header Afficher moins#!"
 BATTLE_SIZE_BASE_TOTAL_BATTALIONS_ON_FRONT: "$concept_battalions$ totaux sur le [concept_front|l]"
 BATTLE_SIZE_NUMERIC_ADVANTAGE: "Avantage numérique sur le [concept_front|l]"
 BATTLE_SIZE_TERRAIN_INFRASTRUCTRE: "Limitée par le [concept_terrain|l] et l’[concept_infrastructure|l]\n$TAB$[concept_combat_width|l] pour [SCOPE.sProvince('province').GetTerrainName|l] : [SCOPE.sProvince('province').GetTerrainCombatWidth|v1%]\n$TAB$$concept_infrastructure$ de [SCOPE.sProvince('province').GetState.GetName] : [SCOPE.sProvince('province').GetState.GetInfrastructure|v0]"
 BATTLE_SIZE_MAX_AMOUNT_REACHED: "Nombre maximal de bataillons atteint"
 BATTLE_SIZE_MIN_AMOUNT_REACHED: "Minimum requis pour avancer"
 BATTLE_SIZE_FRONT_SIZE: "De la longueur du front"
 BATTLE_SIZE_CONCENTRATION_ACROSS_LENGTH_OF_FRONT: "Faible concentration de bataillons sur toute la largeur du [concept_front|l]"
 NAVAL_BATTLE_SIZE_ADMIRAL_SHARE: "Part des [Concept('concept_flotilla','$concept_flotillas$')|l] disponibles pour l’[concept_admiral|l] dans cette [concept_military_formation|l]"
 NAVAL_BATTLE_SIZE_UNIT_RATIO_TO_ENEMY: "Ajustement au nombre de flottilles ennemies"
 NAVAL_BATTLE_SIZE_UNIT_NOT_IN_BATTLE: "Nombre de flottilles disponibles pour la [concept_battle|l]"
 JOURNAL_ENTRY_TOOLTIP: "[SelectLocalization(Not(StringIsEmpty(JournalEntry.GetStatusDesc)), 'JOURNAL_ENTRY_STATUS', '' )][SelectLocalization(StringIsEmpty(JournalEntry.GetStatusDesc), 'JOURNAL_ENTRY_TOOLTIP_WITH_LINE', JournalEntry.GetTooltip )]"
 JOURNAL_ENTRY_STATUS: "[JournalEntry.GetStatusDesc]\n\n"
 JOURNAL_ENTRY_TOOLTIP_WITH_LINE: "[JournalEntry.GetTooltip]"
 JOURNAL_ENTRY_ACTIVATION_HEADER: "#title S’activera si :\n#!"
 JOURNAL_ENTRY_COMPLETION_HEADER: "#title Se terminera si :\n#!"
 JOURNAL_ENTRY_FAILURE_HEADER: "#title Échouera si :\n#!"
 JOURNAL_ENTRY_INVALIDATION_HEADER: "#title Deviendra invalide si :\n#!"
 JOURNAL_ENTRY_TIMEOUT: "#title Expirera dans #v $TIMELEFT_STRING$#!#!"
 JOURNAL_ENTRY_WITH_GROUP: "[concept_journal_entry]\n[JournalEntry.GetType.GetGroup.GetName]"
 DIPLO_PLAY_SET_POSITION: "Déplacer"
 DIPLOMATIC_PLAY_CONFIRMATION_HEADER: "#header Exiger : [DiplomaticPlayType.GetWarGoalType.GetName]#!"
 SUPPORT_TARGET_DIPLOMATIC_PLAY_TOOLTIP: "Soutenir inconditionnellement #v [DiplomaticPlay.GetTarget.GetAltNameNoFormatting('Le')][DiplomaticPlay.GetTarget.GetName]#! lors de ce [concept_diplomatic_play|l].[ConcatIfNeitherEmpty('\n\n', DiplomaticPlay.GetSupportTargetValidTooltip(GetPlayer))]"
 SUPPORT_TARGET_DIPLOMATIC_PLAY_OPPOSING_SUBJECTS: "@warning! Vous avez des sujets qui soutiennent le camp adverse dans ce coup. Ils seront obligés de devenir neutres et subiront donc une pénalité d’opinion de #r #bold [GetDefine('NDiplomacy','RELATION_PENALTY_OVERLORD_KICK_BACKER_SUBJECT')]#!#! envers vous#!"
 SUPPORT_INITIATOR_DIPLOMATIC_PLAY_TOOLTIP: "Soutenir inconditionnellement #v [DiplomaticPlay.GetInitiator.GetAltNameNoFormatting('Le')][DiplomaticPlay.GetInitiator.GetName]#! lors de ce [concept_diplomatic_play|l].[ConcatIfNeitherEmpty('\n\n', DiplomaticPlay.GetSupportInitiatorValidTooltip(GetPlayer))]"
 LEAN_TOWARDS_TARGET_DIPLOMATIC_PLAY_TOOLTIP: "Adopter une #b position de rapprochement#! avec [DiplomaticPlay.GetTarget.GetAltNameNoFormatting('Le')]#v [DiplomaticPlay.GetTarget.GetName]#! dans ce [concept_diplomatic_play|l].\n\n[DiplomaticPlay.GetLeanTowardsTargetValidTooltip(GetPlayer)]"
 LEAN_TOWARDS_INITIATOR_DIPLOMATIC_PLAY_TOOLTIP: "Adopter une #b position de rapprochement#! avec [DiplomaticPlay.GetInitiator.GetAltNameNoFormatting('Le')]#v [DiplomaticPlay.GetInitiator.GetName]#! dans ce [concept_diplomatic_play|l].\n\n[DiplomaticPlay.GetLeanTowardsInitiatorValidTooltip(GetPlayer)]"
 BE_ON_THE_FENCE_DIPLOMATIC_PLAY_TOOLTIP: "Adopter une #b position neutre#! dans ce [concept_diplomatic_play|l].\n\n[DiplomaticPlay.GetBeOnTheFenceValidTooltip(GetPlayer)]"
 YIELD_DIPLOMATIC_PLAY_TOOLTIP: "#HEADER Céder#! dans ce [concept_diplomatic_play|l][ConcatIfNeitherEmpty('\n\n', DiplomaticPlay.GetYieldValidTooltip(GetPlayer))]"
 DECLARE_NEUTRALITY_DIPLOMATIC_PLAY_TOOLTIP: "Déclarez-vous neutre dans ce [concept_diplomatic_play|l][ConcatIfNeitherEmpty(DiplomaticPlay.GetDeclareNeutralityValidTooltip(GetPlayer),'\n\n')]"
 DIPLOMATIC_PLAY_INITIATOR_TOOLTIP: "[DiplomaticPlay.GetInitiator.GetAltNameNoFormatting('Le')|U]#variable [DiplomaticPlay.GetInitiator.GetName]#! est l’initiateur de ce [concept_diplomatic_play|l]"
 DIPLOMATIC_PLAY_DESCRIPTION_TOOLTIP: "Ce [concept_diplomatic_play|l] consiste à forcer [DiplomaticPlay.GetTarget.GetAltNameNoFormatting('Le')]#variable [DiplomaticPlay.GetTarget.GetName]#! à #variable [DiplomaticPlay.GetDiplomaticPlayType.GetName|l]#!"
 DIPLOMATIC_PLAY_INTEREST_MARKER_TOOLTIP: "[DiplomaticPlay.GetTarget.GetAltNameNoFormatting('Le')|U]#variable [DiplomaticPlay.GetTarget.GetName]#! a un [concept_interest|l] de niveau #variable [DiplomaticPlay.GetInterestMarker(DiplomaticPlay.GetTarget).GetInterestStatus]#! dans la [concept_strategic_region|l] de ce [concept_diplomatic_play|l]"
 DIPLOMATIC_PLAY_SUPPORTS_TOOLTIP: "#variable [Country.GetAltNameNoFormatting('Le')|U][Country.GetName]#! soutient ceci"
 DIPLOMATIC_PLAY_OPPOSES_TOOLTIP: "#variable [Country.GetAltNameNoFormatting('Le')|U][Country.GetName]#! s’oppose à ceci"
 DIPLOMATIC_PLAY_UNDECIDED_TOOLTIP: "#variable [Country.GetAltNameNoFormatting('Le')|U][Country.GetName]#! est indécis"
 DIPLOMATIC_PLAY_SWITCH_COUNTRY_TOOLTIP: "Jouer en tant que [DiplomaticPlay.GetInitiator.GetName|v]\n$TOOLTIP_DELIMITER$\n[DiplomaticPlay.GetSwitchSideBreakdown][ConcatIfNeitherEmpty( GetDesc( DiplomaticPlay.SwitchSide( GetPlayer )), '\n\n' )]"
 DIPLOMATIC_PLAY_SWITCH_COUNTRY_BREAKDOWN_CURRENT_GOVERNMENT: "Gouvernement actuel :"
 DIPLO_PLAY_TAKE_SIDE_CURRENT_BACKER_CONFIRM: "Renoncer à soutenir [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] ? Tous les [Concept('concept_war_goal', '$concept_war_goals$')|l] ou les [Concept('concept_obligation', '$concept_obligations$')|l] qu’ils nous ont promis seront perdus et nos [concept_relations|l] avec eux seront réduites de #variable #N [GetDefine('NDiplomacy', 'DIPLOMATIC_PLAY_ABANDON_SUPPORT_RELATIONS_IMPACT')]#!#!."
 DIPLO_PLAY_TAKE_SIDE_CIVIL_WAR_AGAINST_SUBJECT: "[TARGET_COUNTRY.GetAltNameNoFormatting('Le')|U][TARGET_COUNTRY.GetName] remplacer[TARGET_COUNTRY.GetAltNameNoFormatting('AOnt')] [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] en tant que [concept_subject|l] une fois que la [concept_war|l] aura commencé."
 DIPLO_PLAY_TAKE_SIDE_CIVIL_WAR_AGAINST_POWER_BLOC_MEMBER: "[TARGET_COUNTRY.GetAltNameNoFormatting('Le')|U][TARGET_COUNTRY.GetName] remplacer[TARGET_COUNTRY.GetAltNameNoFormatting('AOnt')] [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] en tant que membre de votre [concept_power_bloc|l] une fois que la [concept_war|l] aura commencé."
 DIPLOMATIC_PLAY_ESCALATION: "[DiplomaticPlay.GetPhaseName|v]"
 DIPLOMATIC_PLAY_ESCALATION_TOOLTIP: "#header Escalade#!\nPhase : [DiplomaticPlay.GetPhaseName|v]\nValeur : #variable [DiplomaticPlay.GetEscalation]#!"
 DIPLOMATIC_PLAY_SUPPORTS: "#header Soutient#!"
 DIPLOMATIC_PLAY_OPPOSES: "#header S’oppose à#!"
 DIPLOMATIC_PLAY_UNDECIDED: "#header Indécis#!"
 DIPLOMATIC_PLAY_NAME: "[concept_diplomatic_play] en [DiplomaticPlay.GetStrategicRegion.GetName]"
 DIPLOMATIC_PLAY_SWITCH_COUNTRY: "Changer de camp"
 DIPLOMATIC_PLAY_OUTLINER_TOOLTIP: "#header [concept_diplomatic_play] en [DiplomaticPlay.GetStrategicRegion.GetName]#!\n$TOOLTIP_DELIMITER$\n$DIPLO_PLAY_INITIATOR$ : [DiplomaticPlay.GetInitiator.GetName]\n$DIPLO_PLAY_TARGET$ : [DiplomaticPlay.GetTarget.GetName]"
 COUNTRY_STRENGTH_POINT_ARMY_TOOLTIP: "Point de force total de l’armée\n#variable [Country.GetStrengthPointArmy]#!\n\nEfficacité : #variable [Country.GetCombatEffectivenessArmy|2]#!\nTaux de renforcement (non mis en œuvre) : #variable [Country.GetReinforcementRateArmy]#!\nCapacité en points de force des casernes disponibles : #variable [Country.GetBarracksStrengthPointCapacityArmy] points de force#!"
 COUNTRY_STRENGTH_POINT_NAVY_TOOLTIP: "Point de force total de la marine\n#variable [Country.GetStrengthPointNavy]#!\n\nTaux d’élimination : #variable [Country.GetKillRateNavy]#!\nTaux de renforcement : #variable [Country.GetReinforcementRateNavy]#!\nCapacité en points de force des casernes disponibles : #variable [Country.GetBarracksStrengthPointCapacityNavy] points de force#!"
 NATIONAL_RESERVE_TOOLTIP: "#HEADER Réserve nationale#!\n$TOOLTIP_DELIMITER$\n[concept_gold_reserves_desc]"
 INTEREST_GROUP: "[concept_interest_group]"
 INCREASE: "augmenter"
 DECREASE: "diminuer"
 NO_PREVIOUS_ELECTION: "Aucune [concept_election|l] précédente"
 ADMIRAL_REPAIRING_DATE: "[Character.GetFullName] a récemment perdu une bataille navale et n’est pas disponible"
 ADMIRAL_REPAIRING_DATE_TOOLTIP: "#header Réparation#!\n[Character.GetFullName] a récemment perdu une bataille navale et n’est pas disponible"
 NO_ORDERS: "Pas d’ordre"
 IN_RESERVE: "En réserve"
 CURRENT: "Actuel"
 START_OF_BATTLE: "Début de bataille"
 END_OF_BATTLE: "Fin de la bataille"
 UNDER_COMMAND: "Sous commandement"
 BORROWED: "Empruntées"
 DETAILS: "Détails"
 YOU: "(Vous)"
 ENEMY: "(Ennemi)"
 COMBAT_UNIT_NOT_MOBILIZED: "Inactif (non [Concept('concept_mobilize_battalion','$concept_mobilize_battalion_mobilized$')|l])"
 COMBAT_UNIT_NOT_UNDER_DIRECT_COMMAND: "Inactif (au combat mais pas sous commandement direct)"
 BATTLE_IN: "Bataille en $STATE_REGION_NAME$"
 BATTLE_NEAR: "Bataille près de $CITY_NAME$"
 BATTLE_FOR: "Bataille pour $CITY_NAME$"
 MILITARY_LENS_CHARACTER_TOOLTIP: "#HEADER $NAME$ #!"
 TOOLTIPPABLE_FORMAT: "#tooltippable #tooltip:$TOOLTIP_TAG$ $STRING$#!#!"
 BATTLE_STATUS_OVERVIEW: "#header [Battle.GetName]#!\n$TOOLTIP_DELIMITER$\nAvance : [Battle.GetAttacker.GetName] (@unit_offense! [Battle.GetOffenseRaw|v0])\nDéfend : [Battle.GetDefender.GetName] (@unit_defense! [Battle.GetDefenseRaw|v0])"
 BATTLE_DAYS_DURATION: "La bataille a duré [Battle.GetDurationInDaysRaw] jours, entre\n[Battle.GetStartDate|v] et [Battle.GetEndDate|v]."
 BATTLE_STATUS_INCONCLUSIVE: "Cette bataille entre [Battle.GetAttacker.GetAltNameNoFormatting('Le')][Battle.GetAttacker.GetName] et [Battle.GetDefender.GetAltNameNoFormatting('Le')][Battle.GetDefender.GetName] s’est terminée de manière non concluante.\n$BATTLE_DAYS_DURATION$"
 BATTLE_STATUS_CONCLUDED: "#header [Battle.GetName]#!\nVainqueur : [Battle.GetWinner.GetName][AddTextIf(GreaterThan_CFixedPoint(Battle.GetOccupationWonRaw,'(CFixedPoint)0'),Concatenate('\n$BATTLE_STATUS_OCCUPATION_WON_LABEL$',Battle.GetOccupationWon))]\n\n$BATTLE_DAYS_DURATION$"
 BATTLE_STATE_VICTORY_SCORE_FORMAT: "$VALUE|0v$"
 BATTLE_STATE_OCCUPATION_FORMAT: "$VALUE|%0v$"
 BATTLE_STATUS_OCCUPATION_WON_LABEL: "Occupation remportée :"
 BATTLE_STATUS_OCCUPATION_WON_TOOLTIP: "#header Occupation totale remportée#!\n[Battle.GetWinner.GetAltNameNoFormatting('Le')|U][Battle.GetWinner.GetName] a remporté [Battle.GetOccupationWonRaw|%0v] d’[concept_occupation|l] au cours de la bataille [Battle.GetName]\n$TOOLTIP_DELIMITER$\nScore de victoire : [Battle.GetVictoryScore]\n\nCela a entraîné :\n$BREAKDOWN$"
 BATTLE_STATE_OCCUPATION_ENTRY_GAINED: "$VALUE_MAYBE_BREAKDOWN$ d’occupation remportée en [Battle.GetState.GetName]"
 BATTLE_STATE_OCCUPATION_ENTRY_CLEARED: "$VALUE_MAYBE_BREAKDOWN$ d’occupation chassée de [Battle.GetState.GetName]"
 BATTLE_SCORE_SCRIPT_VALUE_FORMAT: "$NEUTRAL_SCRIPT_VALUE_FORMAT$"
 BATTLE_VICTORY_BASE: "Base"
 BATTLE_VICTORY_UNIT_OCCUPATION_MULT: "Modificateur d’occupation de l’État par l’unité"
 VICTORY_SCORE_TOOLTIP: "#header Score de victoire de la [Battle.GetName] #!\nVainqueur : [Battle_GetWinner.GetAltNam('Le')][Battle.GetWinner.GetName] $STRING$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 OCCUPATION_COST_TOOLTIP: "#header Coût d’occupation#!\n[Battle.GetState.GetName] : $COST|0v$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 OCCUPATION_COST_SCRIPT_VALUE_FORMAT: "$NEUTRAL_SCRIPT_VALUE_FORMAT$"
 OCCUPATION_COST_FROM_POPULATION: "[SCOPE.GetRootScope.GetState.GetPopulationSize|Dv] [Concept('concept_pop','$concept_population$')|l]"
 OCCUPATION_COST_FROM_NUM_HAZARDOUS_PROVINCES: "[SCOPE.ScriptValue('provinces_with_hazardous_terrain')|0v] [Concept('concept_province','$concept_provinces$')|l] [GetLabel('label_hazardous').GetName|v] en [SCOPE.GetRootScope.GetState.GetName]"
 OCCUPATION_COST_FROM_NUM_FORESTED_PROVINCES: "[SCOPE.ScriptValue('provinces_with_forested_terrain')|0v] [Concept('concept_province','$concept_provinces$')|l] [GetLabel('label_forested').GetName|v] en [SCOPE.GetRootScope.GetState.GetName]"
 OCCUPATION_COST_FROM_NUM_ELEVATED_PROVINCES: "[SCOPE.ScriptValue('provinces_with_elevated_terrain')|0v] [Concept('concept_province','$concept_provinces$')|l] [GetLabel('label_elevated').GetName|v] en [SCOPE.GetRootScope.GetState.GetName]"
 OCCUPATION_COST_FROM_INFRASTRUCTURE_USAGE: "L’[concept_infrastructure_usage|l] [SCOPE.GetRootScope.GetState.GetInfrastructureUsage|0v] [concept_infrastructure_usage] compense les difficultés du [concept_terrain|l]"
 OCCUPATION_COST_FROM_CONCENTRATION_OF_BATTALIONS: "[SCOPE.GetRootScope.GetState.GetTheater(SCOPE.GetRootScope.GetState.GetController.Self).GetAltNameNoFormatting('Le')|U][SCOPE.GetRootScope.GetState.GetTheater(SCOPE.GetRootScope.GetState.GetController.Self).GetName] [SCOPE.GetRootScope.GetState.GetTheater(SCOPE.GetRootScope.GetState.GetController.Self).GetAltNameNoFormatting('AOnt')] [SCOPE.GetRootScope.GetState.GetTheater(SCOPE.GetRootScope.GetState.GetController.Self).GetNumMobilizedUnitsInTheater|0v] [Concept('concept_mobilize_battalion','$concept_mobilize_battalions_mobilized$')] @battalions! en défense dans [SCOPE.GetRootScope.GetState.GetTheater(SCOPE.GetRootScope.GetState.GetController.Self).GetNumProvinces|0v] [Concept('concept_province','$concept_provinces$')|l]"
 OCCUPATION_COST_MAX_VALUE_REACHED: "Coût maximal atteint"
 OCCUPATION_COST_MIN_VALUE_REACHED: "Coût minimal atteint"
 TOOLTIP_STATE_OCCUPATION_PIESLICE: "#header [concept_occupation] en [State.GetName]#!\n[OccupationPiechartData.GetCountry.GetName] [SelectLocalization(ObjectsEqual(State.AccessOwner, OccupationPiechartData.GetCountry), 'IS_STILL_IN_CONTROL_OF', 'OCCUPIES')] [OccupationPiechartData.GetOccupationFraction|v0%] de [State.GetName]"
 OCCUPIES: "occupe"
 IS_STILL_IN_CONTROL_OF: "contrôle toujours"
 MILITARY_FORMATION_MANPOWER_TOOLTIP: "#header [concept_manpower]#!\n[MilitaryFormation.GetCurrentManpower|vK] / #maximum [MilitaryFormation.GetMaxManpower|vK]#!@manpower! en [concept_manpower|l]"
 BATTLE_UNITS_AT_START_TOOLTIP: "#header Nombre initial d’[Concept('concept_unit','$concept_units$')|l]#!\n[Select_CString( Battle.IsNavalBattle, Concept('concept_flotilla','$concept_flotillas$'), Concept('concept_battalion','$concept_battalions$') )] : $VALUE|v$$UNIT_ICON$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 BATTLE_INITIAL_WANTED_UNITS: "$UNIT_ICON$ #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v$#!#! [Select_CString( Battle.IsNavalBattle, Concept('concept_flotilla','$concept_flotillas$'), Concept('concept_battalion','$concept_battalions$') )] requises au début de la bataille"
 BATTLE_BATTALIONS_BREAKDOWN_HEADER: "$VALUE|v$ $UNIT_ICON$ [Select_CString( Battle.IsNavalBattle, Concept('concept_flotilla','$concept_flotillas$'), Concept('concept_battalion','$concept_battalions$') )]"
 BATTLE_BATTALIONS_BREAKDOWN_HEADER_ATTACKER_START_OF_BATTLE: "[ConcatIfNeitherEmpty( Battle.GetAttackerNumWantedUnitsDesc, '\n' )]Avec $BATTLE_BATTALIONS_BREAKDOWN_HEADER$ en attaque au début de la bataille"
 BATTLE_BATTALIONS_BREAKDOWN_HEADER_DEFENDER_START_OF_BATTLE: "[ConcatIfNeitherEmpty( Battle.GetDefenderNumWantedUnitsDesc, '\n' )]Avec $BATTLE_BATTALIONS_BREAKDOWN_HEADER$ en défense au début de la bataille"
 BATTLE_BATTALIONS_BREAKDOWN_HEADER_ATTACKER: "$BATTLE_BATTALIONS_BREAKDOWN_HEADER$ en attaque avec un [Concept('concept_manpower','effectif')] de [Battle.CalcCurrentAttackerManpower|*1v]@manpower!"
 BATTLE_BATTALIONS_BREAKDOWN_HEADER_DEFENDER: "$BATTLE_BATTALIONS_BREAKDOWN_HEADER$ en défense avec un [Concept('concept_manpower','effectif')] de [Battle.CalcCurrentDefenderManpower|*1v]@manpower!"
 BATTLE_BATTALIONS_BREAKDOWN_DIRECTLY_COMMANDED: "$VALUE|v$ $UNIT_ICON$ sous le commandement direct de [Character.GetFullName]"
 BATTLE_BATTALIONS_BREAKDOWN_BY_GENERAL: "$VALUE|v$ $UNIT_ICON$ emprunté de [Character.GetFullName]"
 BATTLE_BATTALIONS_BREAKDOWN_BY_FORMATION: "$VALUE|v$ $UNIT_ICON$ emprunté de [MilitaryFormation.GetName]"
 BATTLE_ATTACKER_CURRENT_MORALE_TOOLTIP: "Le moral des attaquants est actuellement de #[GetMoraleColorString( Battle.CalcCurrentAttackerMorale )] [Battle.CalcCurrentAttackerMorale|0%]#!"
 BATTLE_DEFENDER_CURRENT_MORALE_TOOLTIP: "Le moral des défenseurs est actuellement de #[GetMoraleColorString( Battle.CalcCurrentDefenderMorale )] [Battle.CalcCurrentDefenderMorale|0%]#!"
 BATTLE_ATTACKER_INITIAL_MORALE_TOOLTIP: "Le moral initial des attaquants était de #[GetMoraleColorString( Battle.GetInitialAttackerMorale )] [Battle.GetInitialAttackerMorale|0%]#!"
 BATTLE_DEFENDER_INITIAL_MORALE_TOOLTIP: "Le moral initial des défenseurs était de #[GetMoraleColorString( Battle.GetInitialDefenderMorale )] [Battle.GetInitialDefenderMorale|0%]#!"
 BATTLE_ATTACKER_ENDING_MORALE_TOOLTIP: "Le moral des attaquants à la fin était de #[GetMoraleColorString( Battle.GetEndingAttackerMorale )] [Battle.GetEndingAttackerMorale|0%]#!"
 BATTLE_DEFENDER_ENDING_MORALE_TOOLTIP: "Le moral des défenseurs à la fin était de #[GetMoraleColorString( Battle.GetEndingDefenderMorale )] [Battle.GetEndingDefenderMorale|0%]#!"
 BATTLE_BATTALION_GROUP_AVERAGE_MORALE: "Le moral moyen des unités est de #[GetMoraleColorString( BattleBuildingEntry.GetAverageMorale )] [BattleBuildingEntry.GetAverageMorale|0%]#!"
 BATTLE_NONALLY_VICTORY: "[Battle.GetWinner.GetAltNameNoFormatting('Le')|U][Battle.GetWinner.GetName] [Battle.GetWinner.GetAltNameNoFormatting('AOnt')] gagné !"
 BATTLE_ALLY_VICTORY: "Votre allié, [Battle.GetWinner.GetAltNameNoFormatting('Le')][Battle.GetWinner.GetName], a gagné !"
 BATTLE_ALLY_DEFEAT: "Votre allié, [Battle.GetLoser.GetAltNameNoFormatting('Le')][Battle.GetLoser.GetName], a perdu !"
 BATTLE_INCONCLUSIVE_OUTCOME: "Un résultat indécis !"
 BATTLE_CAPTURING_COUNTRY: "[Battle.GetCapturingCountry.GetAltNameNoFormatting('Le')|U][Battle.GetCapturingCountry.GetName] a capturé [Battle.GetNumCapturedProvinces|v] provinces"
 BATTLE_COUNTRY_DEFEAT: "[Battle.GetLoosingProvincesCountry.GetAltNameNoFormatting('Le')|U][Battle.GetLoosingProvincesCountry.GetName] a perdu [Battle.GetNumCapturedProvinces|v] provinces"
 DEAD_TOOLTIP_ATTACKER: "Le camp [Battle.GetAttacker.GetAltAdjective('MS')|l] a [Battle.GetAttackerTotalDead|0v] [concept_dead|l]"
 DEAD_TOOLTIP_DEFENDER: "Le camp [Battle.GetDefender.GetAltAdjective('MS')|l] a [Battle.GetDefenderTotalDead|0v] [concept_dead|l]"
 WOUNDED_TOOLTIP_ATTACKER: "Le camp [Battle.GetAttacker.GetAltAdjective('MS')|l] a [Battle.GetAttackerTotalWounded|0v] [concept_wounded|l]"
 WOUNDED_TOOLTIP_DEFENDER: "Le camp [Battle.GetDefender.GetAltAdjective('MS')|l] a [Battle.GetDefenderTotalWounded|0v] [concept_wounded|l]"
 DEMORALIZED_TOOLTIP_ATTACKER: "Le camp [Battle.GetAttacker.GetAltAdjective('MS')|l] a [Battle.GetAttackerTotalDemoralized|0v] soldats [concept_morale_demoralized|l]s"
 DEMORALIZED_TOOLTIP_DEFENDER: "Le camp [Battle.GetDefender.GetAdjective|l] a [Battle.GetDefenderTotalDemoralized|0v] soldats [concept_morale_demoralized|l]s"
 BATTLE_MODIFIER_UNDER_COMMAND_HEADER: "Les unités sous commandement direct bénéficient des avantages suivants :\n$TOOLTIP_DELIMITER$\n"
 BATTLE_MODIFIER_TOOLTIP_ATTACKER: "[Battle.GetAttackerUnderCommandBreakdown]"
 BATTLE_MODIFIER_TOOLTIP_DEFENDER: "[Battle.GetDefenderUnderCommandBreakdown]"
 BATTLE_BORROWED_TOOLTIP: "Les unités empruntées ne sont pas affectées par les modificateurs du [concept_commander|l]"
 MISSING_CHARACTER: "#N Aucun personnage n’est affecté à ce commandement#!"
 DETACHMENTS: "#title Détachements#!"
 STATE_TT_WORLD_MARKET_ACCESS: "[concept_world_market_access] : [State.GetWorldMarketAccess|v0%]"
 STATE_TT_TRADE_CAPACITY: "[concept_trade_capacity] : utilise [State.GetTradeCapacityUsage|v] de [State.GetTradeCapacity|v]"
 NOT_CONNECTED_TO_THE_WORLD_MARKET: "Ne commerce pas sur le [concept_world_market|l] (pas de [GetBuildingType('building_trade_center').GetName]|l)"
 EXPORTING_TO_TITLE: "#title Exportation vers :#!"
 IMPORTING_FROM_TITLE: "#title Importation de :#!"
 MARKET_STATUS_MARKET_CAPITAL: "Dans le [MARKET.GetName|l] ([Concept('concept_market_capital','$concept_market_capital_short$')])\n$MARKET_STATUS_CONNECTION_INFO$"
 MARKET_STATUS_CONNECTED_STATE: "Dans le [MARKET.GetName|l]\n$MARKET_STATUS_CONNECTION_INFO$"
 MARKET_STATUS_ISOLATED: "Fait partie du [MARKET.GetName|l] ([concept_isolated_state|l])"
 MARKET_STATUS_CONNECTION_INFO: "[concept_infrastructure] : [State.GetInfrastructureBalance|0+=][AddLocalizationIf(LessThan_CFixedPoint(State.GetMarketAccess, '(CFixedPoint)1'),'MARKET_STATUS_CONNECTION_INFO_LOW_ACCESS')]"
 MARKET_STATUS_CONNECTION_INFO_LOW_ACCESS: "\n@warning! Faible [concept_market_access|l] : #variable [State.GetMarketAccess|%0v]#!"
 MARKET_ACCESS_DESC_HEADER: "[concept_market_access] en [State.GetName] : $MARKET_ACCESS|%0v$\n$TOOLTIP_DELIMITER$\n"
 MARKET_ACCESS_DESC_BASE_MIN: "Parce que l’[concept_infrastructure|l] est de #b 0#!, l’[concept_market_access|l] de base est de #P $MARKET_ACCESS|%0v$#!"
 MARKET_ACCESS_DESC_BASE_MAX: "Parce que l’[concept_infrastructure_usage|l] est inférieure ou égale à l’[concept_infrastructure|l] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_INFRASTRUCTURE_DESC [State.GetInfrastructureBalance|0+=]#!#!), l’[concept_market_access|l] de base est de #P $MARKET_ACCESS|%0v$#!"
 MARKET_ACCESS_DESC_BASE: "@warning! Parce que l’[concept_infrastructure_usage|l] est supérieure à l’[concept_infrastructure|l] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_INFRASTRUCTURE_DESC [State.GetInfrastructureBalance|0+=]#!#!), l’[concept_market_access|l] de base est réduit à #N $MARKET_ACCESS|%0v$#!"
 MARKET_ACCESS_DESC_CONNECTED_LAND: "Relié au [State.GetMarket.GetName|l] par voie terrestre"
 MARKET_ACCESS_DESC_CONNECTED_OVERSEAS: "Relié au [State.GetMarket.GetName|l] par les ports de [ShippingLane.GetBeginState.GetName] et [ShippingLane.GetEndState.GetName] au plein [concept_market_access|l] de base de #P $MARKET_ACCESS|%0v$#!"
 MARKET_ACCESS_DESC_CONNECTED_OVERSEAS_INEFFICIENT: "Relié au [State.GetMarket.GetName|l] via la [concept_shipping_lane|l] [ShippingLane.GetCountry.GetAltAdjectiveNoFormatting('FS')|l] par les ports de [ShippingLane.GetBeginState.GetName] et [ShippingLane.GetEndState.GetName], un [concept_market_access|l] réduit à #N $MARKET_ACCESS|%0v$#! en raison de la faible [concept_shipping_lane_effectiveness|l]"
 MARKET_ACCESS_DESC_DISCONNECTED_OVERSEAS: "Impossible de se relier au [State.GetMarket.GetName|l] par voie terrestre ou par ports"
 MARKET_ACCESS_DESC_NO_EXIT_PORT: "Impossible de rejoindre le [State.GetMarket.GetName|l] par la terre, et il n’y a pas de port en [State.GetName]"
 MARKET_ACCESS_DESC_NO_ENTRY_PORT: "Impossible de rejoindre le [State.GetMarket.GetName|l] par la terre, et le port situé en [State.GetName] n’a aucun autre port pour établir une connexion portuaire sur le [State.GetMarket.GetName|l]"
 MARKET_PANEL_DETAILS_TAB_LABEL: "Biens"
 MARKET_PANEL_DETAILS_TAB_LABEL_BOLD: "#bold $MARKET_PANEL_DETAILS_TAB_LABEL$#!"
 MARKET_PANEL_STATES_TAB_LABEL: "Membres"
 MARKET_PANEL_STATES_TAB_LABEL_BOLD: "#bold $MARKET_PANEL_STATES_TAB_LABEL$#!"
 MARKET_PANEL_FOOD_SECURITY_TAB_LABEL: "Sécurité alimentaire"
 MARKET_PANEL_GOODS_PRICE_GOLD: "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=o]#!"
 MARKET_PANEL_GOODS_PRICE: "[Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=v]"
 MARKET_PANEL_GOODS_PRICE_BLUE: "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=u]#!"
 GOODS_LOCAL_PRICE_GOLD: "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetStatePrice)|%0=o]#!"
 GOODS_LOCAL_PRICE: "[Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetStatePrice)|%0=v]"
 GOODS_LOCAL_PRICE_BLUE: "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetStatePrice)|%0=u]#!"
 MARKET_PANEL_BALANCE_GOLD: "#v [FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance)|o=D]#!"
 MARKET_PANEL_BALANCE: "[FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance)|=Dv]"
 MARKET_PANEL_BALANCE_BLUE: "#v [FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance)|u=D]#!"
 GOODS_LOCAL_PRICE_PANEL_BALANCE_GOLD: "#v [FixedPointToInt(Goods.GetStateProductionConsumptionDiff)|o=D]#!"
 GOODS_LOCAL_PRICE_PANEL_BALANCE: "[FixedPointToInt(Goods.GetStateProductionConsumptionDiff)|=Dv]"
 GOODS_LOCAL_PRICE_PANEL_BALANCE_BLUE: "#v [FixedPointToInt(Goods.GetStateProductionConsumptionDiff)|u=D]#!"
 WORLD_MARKET_PANEL_BALANCE_GOLD: "#v [FixedPointToInt(Goods.GetWorldMarketExportsAndImportsBalance)|o=D]#!"
 WORLD_MARKET_PANEL_BALANCE: "[FixedPointToInt(Goods.GetWorldMarketExportsAndImportsBalance)|=Dv]"
 WORLD_MARKET_PANEL_BALANCE_BLUE: "#v [FixedPointToInt(Goods.GetWorldMarketExportsAndImportsBalance)|u=D]#!"
 WORLD_MARKET_PANEL_GOODS_PRICE_GOLD: "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetWorldMarketBasePrice)|%0=o]#!"
 WORLD_MARKET_PANEL_GOODS_PRICE: "[Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetWorldMarketBasePrice)|%0=v]"
 WORLD_MARKET_PANEL_GOODS_PRICE_BLUE: "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetWorldMarketBasePrice)|%0=u]#!"
 BUILDING_AVERAGE_WAGE: "#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_AVERAGE_WAGE [Building.GetAverageAnnualWage|Dv]#!#!@money! de [concept_average_wage|l]"
 BUILDING_AVERAGE_WAGE_FLIPPED: "[concept_average_wage] : #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_AVERAGE_WAGE [Building.GetAverageAnnualWage|Dv]@money!#!#! "
 TOOLTIP_BUILDING_AVERAGE_WAGE: "#header [concept_average_wage] de [Building.GetName] : [Building.GetAverageAnnualWage|Dv]@money!#![AddLocalizationIf(Building.IsSubsidized,'INCLUDED_WAGE_SUBSIDIES')]\n$TOOLTIP_DELIMITER$\n[Building.GetAverageAnnualWageBreakdown]"
 INCLUDED_WAGE_SUBSIDIES: "\nInclue [Building.GetAverageAnnualWageSubsidies|Dv]@money! en raison de [concept_subsidies|l]"
 POPTYPE_AVG_ANNUAL_WAGE_ENTRY: "#tooltippable #tooltip:[Building.GetTooltipTag]|[PopType.GetTooltipTag],TOOLTIP_BUILDING_POPTYPE_AVERAGE_WAGE $WAGE|Dv$@money!#!#! - [PopType.GetName] ([Building.GetNumEmployeesOfType(PopType.Self)|vD])"
 TOOLTIP_BUILDING_POPTYPE_AVERAGE_WAGE: "#header [PopType.GetName] de [Building.GetName]#!\n[concept_average_wage] : [Building.GetAverageAnnualWageForPopType(PopType.Self)|Dv]@money!\n$TOOLTIP_DELIMITER$\n[Building.GetAverageAnnualWageBreakdownForPopType(PopType.Self)]"
 POP_AVG_ANNUAL_WAGE_ENTRY: "$WAGE|Dv$@money! - [Pop.GetCulture.GetName] [Pop.GetReligion.GetName] ([Pop.GetNumWorkforce|vD])"
 NON_LOCAL_GOODS: "Pas [Concept('concept_good_production','$concept_good_produced$')] ou [Concept('concept_good_consumption','$concept_good_consumed$')|l] dans [State.GetName]"
 STARVATION_HEADER: "Famine"
 FOOD_SECURITY_SPECIFIC_COUNTRY: "[FoodSecurityFilter.GetSelectedCountry.GetName]"
 FOOD_SECURITY_SPECIFIC_STATE: "[FoodSecurityFilter.GetSelectedState.GetName] [FoodSecurityFilter.GetSelectedState.GetCountry.GetFlagTextIcon]"
 FOOD_SECURITY_COUNTRY_FILTER_LABEL: "[SelectLocalization(FoodSecurityFilter.HasSpecificCountry, 'FOOD_SECURITY_SPECIFIC_COUNTRY', 'FOOD_SECURITY_FILTER_ALL_COUNTRIES')][AddLocalizationIf(ObjectsEqual(GetPlayer.Self, FoodSecurityFilter.GetSelectedCountry.Self),' (You)')]"
 FOOD_SECURITY_COUNTRY_FILTER_TOOLTIP: "Filtrer les [Concept('concept_country','$concept_countries$')|l] du [MARKET.GetName|l] [Market.GetOwner.GetFlagTextIcon]"
 FOOD_SECURITY_STATE_FILTER_LABEL: "[SelectLocalization(FoodSecurityFilter.HasSpecificState, 'FOOD_SECURITY_SPECIFIC_STATE', 'FOOD_SECURITY_FILTER_ALL_STATES')]"
 FOOD_SECURITY_STATE_FILTER_TOOLTIP: "Filtrer les [Concept('concept_state','$concept_states$')] du [MARKET.GetName|l] [Market.GetOwner.GetFlagTextIcon]"
 FOOD_SECURITY_FILTER_ALL_STATES: "Tous les [Concept('concept_state','$concept_states$')]"
 FOOD_SECURITY_FILTER_ALL_COUNTRIES: "Tous les [Concept('concept_country','$concept_countries$')|l]"
 SHOW_STARVATION_MAP_MODE: "Afficher la [concept_starvation|l] sur la carte"
 SHOW_HARVEST_CONDITIONS_MAP_MODE: "Afficher les [Concept('concept_harvest_condition','$concept_harvest_conditions$')|l] sur la carte"
 MARKET_COUNTRIES_FILTER_TITLE: "Sélectionner un [concept_country|l] pour filtrer"
 MARKET_STATES_FILTER_TITLE: "Sélectionner un [concept_state] pour filtrer"
 NO_ONGOING_FAMINES: "Aucune [concept_famine|l] en cours"
 HAS_ONGOING_FAMINES: "[Concept('concept_famine','$concept_famines$')] en cours dans [FoodSecurity.GetNumStatesWithFamineFormatted] [Concept('concept_state','$concept_states$')]"
 NUM_STATES_WITH_FAMINE_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL$#!#!"
 FOOD_SECURITY_GOODS_ITEM_HAS_SHORTAGE_IN_STATE: "@goods_shortage! [Goods.GetShortageRatioInState|0%v]"
 FOOD_SECURITY_GOODS_ITEM_HAS_SHORTAGE_IN_MARKET: "@goods_shortage! [Goods.GetShortageRatioInMarket|0%v]"
 FOOD_SECURITY_GOODS_ITEM_NO_SHORTAGE: "Aucune pénurie"
 FOOD_SECURITY_POPULATION_NUMBER: "#v 999K#! [Concept('concept_pop', '$concept_pops$')|l]"
 GOODS_MARKET_PRICE_HEADER_SHORT: "[Concept('concept_market_price', '$concept_market_price_short$')]"
 BASIC_FOOD_POP_NEED_HEADER: "Besoin du groupe social en denrées de base"
 BASIC_FOOD_GOODS_CONTRIBUTION_BAR_CHART_HEADER: "[Concept('concept_good', '$concept_goods$')] par rapport aux [Concept('concept_pop_needs','$concept_pop_need$')|l] en [GetPopNeed('popneed_basic_food').GetName|l]"
 BASIC_FOOD_GOODS_LIST_HEADER: "Les [GetPopNeed('popneed_basic_food').GetName|l][ConcatIfNeitherEmpty(' ', AddLocalizationIf(GoodsList.HasStateContext, 'POP_NEED_IN_STATE'))] se composent des [Concept('concept_good', '$concept_goods$')|l] suivants qui sont [Concept('concept_goods_substitution', 'substituables')|l]"
 POP_NEED_IN_STATE: "en [GoodsList.GetState.GetName] [GoodsList.GetState.GetCountry.GetFlagTextIcon]"
 POP_NEEDS_GOOD_BAR_CHART_ITEM_TOOLTIP: "#header [Goods.GetName]#!\n[GoodsList.GetPopConsumptionRatio(Goods.Self)|0%v] des [Concept('concept_pop_needs','$concept_pop_need_short$')|l] en [GetPopNeed('popneed_basic_food').GetName|l] sont satisfaits par le bien [Goods.GetName|l] sur le [Goods.GetMarket.GetName|l], [SelectLocalization(FoodSecurityFilter.HasSpecificState, 'FOOD_SECURITY_SPECIFIC_STATE', 'FOOD_SECURITY_FILTER_ALL_STATES')][ConcatIfNeitherEmpty(', ', SelectLocalization(FoodSecurityFilter.HasSpecificCountry, 'FOOD_SECURITY_SPECIFIC_COUNTRY',  AddLocalizationIf(Not(FoodSecurityFilter.HasSpecificState), 'FOOD_SECURITY_FILTER_ALL_COUNTRIES')))]\n$TOOLTIP_DELIMITER$\n[concept_market_price] : @money![Goods.GetMarketPrice|0v] [Goods.GetCompareIconAgainstBasePrice( Goods.GetMarketPrice )] ([Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=-])"
 FOOD_SECURITY_HARVEST_CONDITION_TOOLTIP: "#header [HarvestConditionType.GetName]#!\n[HarvestConditionList.GetNumStatesWithType(HarvestConditionType.Self)|v] [Concept('concept_state','$concept_states$')] affectés\n$TOOLTIP_DELIMITER$\n[HarvestConditionList.GetStatesBreakdown(HarvestConditionType.Self)]"
 BALANCE_TOOLTIP: "#header Solde hebdomadaire de [Building.GetBalance|D+=]#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$\n\nLe solde de @money!#v [Building.GetBalance|D+=]#! s’explique par :#indent_newline:3 \n$BUILDING_BALANCE_BREAKDOWN$#!"
 BALANCE_DESC: "[Building.GetBalanceDesc]"
 BUILDING_BALANCE_BREAKDOWN: "#v Revenu hebdomadaire : [Building.GetLastRevenue|D+=]#! @money!\n#v Dépenses hebdomadaires : [Negate_CFixedPoint(Building.GetTotalExpenses)|+=D] @money!#!"
 BUILDING_BALANCE_PROFIT: "#v $VALUE|D+$@money!#! du solde positif et du retrait des réserves vont à :\n$BREAKDOWN$"
 BUILDING_BALANCE_PROFIT_WASTE: "Profit gaspillé :\n$BREAKDOWN$"
 BUILDING_BALANCE_LOSS: "#v $VALUE|D-$@money!#! pour couvrir le faible solde proviennent de :\n$BREAKDOWN$"
 BALANCE_INVESTMENT: "[concept_reinvestment] : #v $VAL|D$@money!#!"
 BALANCE_CASH_DEPOSIT: "[concept_cash_reserves] : #v $VAL|D$@money!#!"
 BALANCE_SHAREHOLDER_DIVIDENDS: "[concept_dividends] de la [concept_workforce|l] : #v @money!#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|D$#!#!#!"
 BALANCE_GOVERNMENT_DIVIDENDS: "[concept_government_dividends] : #v $VAL|D$#!"
 BALANCE_OTHER_BUILDING_DIVIDENDS: "[concept_dividends] aux autres [Concept('concept_building', '$concept_buildings$')|l] : #v $VAL|D$#!"
 BALANCE_DIVIDENDS_TAX: "[concept_budget_dividends_taxes] : #v $VAL|D$@money!#!"
 BALANCE_CASH_WITHDRAW: "[concept_cash_reserves] : #v $VAL|D-$@money!#!"
 BALANCE_SHAREHOLDER_LOSSES: "Poches de la [concept_workforce|l] : #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|D-$@money!#!#!#!"
 BALANCE_OTHER_BUILDING_LOSSES: "Détenteurs de [concept_ownership_share|l] dans d’autres [Concept('concept_building', '$concept_buildings$')|l] : #v $VAL|D-$#!"
 BALANCE_GOVERNMENT_LOSSES: "Le [concept_treasury] : #v $VAL|D-$#!"
 BALANCE_SUBSISTENCE_WASTE: "Gaspillage du [concept_subsistence_building|l] : #v $VAL|D-$@money!#!"
 BALANCE_DIVIDENDS_TAX_WASTE: "[concept_tax_waste] : #v $VAL|D-$@money!#!"
 SHAREHOLDER_BALANCE: "$VAL|Dv$@money! - [Pop.GetName|l] ($SHARE|%1$)"
 BUILDING_BUDGET: "Budget : #BOLD [Building.GetLastIncome|1]@money!#!"
 BUILDING_TAXES: "Impôts hebdomadaires :"
 TOOLTIP_BUILDING_TAXES_TOOLTIP: "#header Impôts hebdomadaires#!\nTotal : [Building.GetTaxationRevenue|D+=]@money!\n$TOOLTIP_DELIMITER$\n[Building.GetTaxationRevenueTooltip]\n\n[concept_taxes_desc]"
 UNINCORPORATED_STATE_NO_TAX: "Les bâtiments des [Concept('concept_unincorporated_state', '$concept_unincorporated_states$')] ne payent aucun impôt sur le revenu\n"
 BUILDING_TYPE_NO_TAX: "Ce type de [concept_building|l] ne paie pas d’impôts\n"
 INCOME_TAX: "[concept_budget_income_taxes] : #tooltippable #tooltip:[GetRawTextTooltipTag('$INCOME_TAX_BREAKDOWN$')] #variable $VAL|D+$@money!#!#!#!"
 INCOME_TAX_BREAKDOWN: "#header Impôts sur le revenu#!\nTotal : $VAL|D+=$@money!\n$TOOLTIP_DELIMITER$\nTaux d’imposition :\n$BREAKDOWN$"
 INCOME_TAX_ENTRY: "$ENTRY_TYPE$ : $VAL|vD$@money!\n$BREAKDOWN$"
 POLL_TAX: "[concept_budget_poll_taxes] : #tooltippable #tooltip:[GetRawTextTooltipTag('$POLL_TAX_BREAKDOWN$')] #variable $VAL|D+$@money!#!#!#!"
 POLL_TAX_BREAKDOWN: "#header Capitation#!\nTotal : $VAL|D+=$@money!\n$TOOLTIP_DELIMITER$\nTaux d’imposition :\n$BREAKDOWN$"
 POLL_TAX_ENTRY: "$ENTRY_TYPE$ : $VAL|vD$@money!\n$BREAKDOWN$"
 DIVIDENDS_TAX: "[concept_budget_dividends_taxes] : $VAL|D+$@money!"
 BUILDING_TAX_MODIFIER: "Modificateur de l’impôt de construction : #variable $VAL|%0+$#!"
 MAINTAINING: "Maintenir @arrow_none!"
 HIRING: "Agrandir @arrow_up_up!"
 DOWNSIZING: "Économiser @arrow_down_down!"
 EARNINGS_BREAKDOWN: "#header Gains#!\nValeur : [Building.GetEarnings|vD=]@money!\n$TOOLTIP_DELIMITER$\nRecettes : #BOLD #V [Building.GetLastRevenue|D+=]@money!#!#![Building.GetLastMaterialExpensesDesc][Building.GetLastSlaveUpkeepDesc]"
 WORKFORCE: "#title Main-d’œuvre#!"
 SORTED_BY: "Trié par #BOLD salaire moyen#!"
 SORTED_BY_POPULATION: "Trié par #BOLD population#!"
 WARS_LABEL: "#title Guerres#!"
 WARS: "[Concept('concept_war','$concept_wars$')]"
 NO_WARS: "Pas de [concept_war|l]"
 ACTIVE_DIPLOMATIC_PLAYS: "[Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')] actifs"
 NO_ACTIVE_DIPLOMATIC_PLAYS: "Pas de [concept_diplomatic_play|l]"
 DIPLOMATIC_PLAYS_AND_WARS: "$concept_wars$ et coups diplomatiques"
 ONGOING_DIPLOMATIC_ACTIONS_CONCEPT: "[Concept('concept_ongoing_diplomatic_action', '$concept_ongoing_diplomatic_actions$')]"
 NO_WARS_OR_DIPLOMATIC_PLAYS: "Aucune [concept_war|l] ni aucun [concept_diplomatic_play|l] en cours"
 DIPLOMATIC_ACTION_NAME: "[DiplomaticAction.GetNameNoFormatting]"
 DIPLOMATIC_ACTION_ACTIVE_AND_NON_ACTIVE_NAME: "[DiplomaticAction.GetNameWithContext]"
 DIPLOMATIC_ACTION_BREAK_NAME: "[DiplomaticAction.GetBreakName]"
 DIPLO_ACTIONS: "[Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')] ciblant [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 NO_DIPLO_ACTIONS: "Pas d’[concept_diplomatic_action|l] possible"
 NO_OVERLORD_ACTIONS: "Aucune [concept_overlord_action|l] possible"
 NO_SUBJECT_ACTIONS: "Aucune [concept_subject_action|l] possible"
 NO_BLOC_LEADER_ACTIONS: "Aucune [concept_bloc_leader_action|l] possible"
 NO_BLOC_MEMBER_ACTIONS: "Aucune [concept_bloc_member_action|l] possible"
 NO_DIPLO_PLAYS: "Pas de [concept_diplomatic_play|l] possible"
 NO_ACTIVE_DIPLOMACY: "Pas de diplomatie active"
 DIPLOMATIC_DEMANDS_TARGETING_COUNTRY: "[Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')] envers [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 UNAVAILABLE_DIPLOMATIC_DEMANDS_TARGETING_COUNTRY: "$concept_diplomatic_demands_short$ indisponibles"
 UNAVAILABLE_DIPLOMATIC_DEMANDS_TARGETING_STATE: "$concept_diplomatic_demands_short$ indisponibles envers les $concept_states$"
 NO_DIPLOMATIC_DEMANDS_TARGETING_COUNTRY: "Aucune [concept_diplomatic_demand|l] disponible"
 NO_DIPLOMATIC_DEMANDS_TARGETING_STATE: "Aucune [concept_diplomatic_demand|l] disponible"
 DIPLOMATIC_STATUS_HEADER: "#title Statut diplomatique#!"
 TRUCES: "Trêves"
 OBLIGATIONS_OWED_FROM: "Obligation due par"
 OBLIGATIONS_OWED_TO: "A une obligation envers"
 INTEREST_MARKERS: "#title [Concept('concept_interest', '$concept_interests$')]#!"
 OH_DEER: "« #italic Il y a#! #bold [ErrorDeer.NumberOrErrors|v]#! #italic erreur(s) !#! »"
 ERROR_DEER_SLOW_TICK_OPERATIONS: "#header Slow Tick Operations#!"
 NOT_AVAILABLE: "N/A"
 SOL_SHORT: "[Concept('concept_sol', '$SOL_SHORT_TEXT$')]"
 SOL_SHORT_TEXT: "NdV"
 TRUCE_WITH: "[concept_truce] avec [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 TRUCE_TOOLTIP: "#header [concept_truce] avec [Country.GetAltNameNoFormatting('Le')][Country.GetName]#!\n$TOOLTIP_DELIMITER$\nLa trêve dure jusqu’au #variable [Truce.GetFirstTruceDate]#!"
 BATTLE_LOSSES_ATTACKER_STATS: "Pertes de l’armée attaquante : #v [Negate_int32(Battle.GetAttackerLostUnits)|+=]#!"
 BATTLE_LOSSES_DEFENDER_STATS: "Pertes de l’armée défenseuse : #v [Negate_int32(Battle.GetDefenderLostUnits)|+=]#!"
 THEATER: "Théâtre"
 show_supply_areas_lens_option: "Afficher les zones d’approvisionnement"
 show_supply_areas_lens_option_tooltip: "Afficher les zones d’approvisionnement"
 planned_advance: "Progression planifiée"
 rapid_advance: "Progression rapide"
 dispersed: "Dispersé"
 defensive: "Défensif"
 TITLE_MAIN_OBJECTIVE: "#title Objectif principal#!"
 STOCKPILE_CURRENT_TOOLTIP: "#header Stock#!\n$TOOLTIP_DELIMITER$\n$STOCKPILE_MAXIMUM_TOOLTIP$"
 STOCKPILE_MAXIMUM_TOOLTIP: "#title Modificateurs de stock :#!\n[Stockpile.GetCapacityBreakdown]\n\n$STRATEGIC_GOODS_STOCKPILE_CONCEPT$"
 PACKAGE_TOOLTIP: ""
 STRATEGIC_GOODS_STOCKPILE_CONCEPT: "#concept Combien de caisses de munitions se trouvent actuellement dans le stock / Combien de caisses de munitions peuvent se trouver dans le stock au maximum.#!"
 OBJ_STANCE_TOOLTIP: "#header Position de l’objectif : #![AreaOfOperation.GetAOStance(GetPlayer)]"
 OBJ_STANCE_DETACHMENT_TOOLTIP: "#header Position de l’objectif : #![MilitaryCommandDetachment.GetAOStance]"
 occupation_lens_option: "Occupation"
 occupation_lens_option_tooltip: "#header Occupation#!"
 power_projection_lens_option: "Projection de puissance"
 power_projection_lens_option_tooltip: "#header Projection de puissance#!"
 no_power_projection: "Supprimer la projection de puissance"
 create_army_lens_option: "Créer une armée"
 create_army_lens_option_tooltip: "#header Créer une armée#!"
 create_fleet_lens_option: "Créer une flotte"
 create_fleet_lens_option_tooltip: "#header Créer une flotte#!"
 HAS_NO_POWER_PROJECTION: "#N Il n’y a pas de projection de puissance dans cet État#!"
 HAS_POWER_PROJECTION: "#N Il y a une projection de puissance en cours dans cet État#!"
 ALREADY_HAS_POWER_PROJECTION: "#N Ce commandement a déjà $LEVEL$#!"
 COMMAND_NOT_ADJACENT_TO_STRATEGIC_REGION: "#N Ce commandement n’est pas adjacent à cette région stratégique#!"
 COMMAND_NOT_IN_STRATEGIC_REGION: "#N Ce commandement n’est pas dans cette région stratégique#!"
 establish_presence: "Établir une présence"
 project_power: "Projeter de la puissance"
 project_great_power: "Projeter de la grande puissance"
 presence: "Présence"
 power: "Puissance"
 no_power: "Aucune puissance"
 RANK_HEADER: "#header Rang de puissance#!"
 RANK_TOOLTIP_NEXT: "Si le prestige [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName] devient au moins [COUNTRY.GetPrestigeForNextRank|v], son rang augmentera à [COUNTRY.GetNextRank|vl]"
 RANK_TOOLTIP_PREV: "Si le prestige [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName] passe en dessous de [COUNTRY.GetPrestigeToMaintainRank|v] pendant un temps prolongé, son rang diminuera à [COUNTRY.GetPreviousRank|vl]"
 RANK_TOOLTIP_MAX_SUBJECT: "@information! [COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] ne peut pas atteindre un rang supérieur à $HIGHEST_RANK|vl$ en étant le [concept_subject|l] [Country.GetOverlord.GetAltNameNoFormatting('Du')][Country.GetOverlord.GetName]. Cela limite ce pays à une place de score maximale de #v $HIGHEST_POSITION$e#! au monde"
 RANK_TOOLTIP_MAX_COUNTRY_TYPE: "@information! [COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] ne peut pas atteindre un rang supérieur à $HIGHEST_RANK|v$ en raison de son statut de $COUNTRY_TYPE|vl$. Cela limite ce pays à une place de score maximale de #v $HIGHEST_POSITION$e#! au monde"
 COUNTRY_RANK_TOOLTIP: "#header [concept_rank]#!\n$TOOLTIP_DELIMITER$\n[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] [COUNTRY.GetAltNameNoFormatting('AOnt')] actuellement le rang de #variable [COUNTRY.GetRank|l]#! et [COUNTRY.GetAltNameNoFormatting('EstSont')] #variable [COUNTRY.GetCountryScorePositionDesc]e#! mondial en score global.\n\n[concept_prestige] : #tooltippable #tooltip:[COUNTRY.GetTooltipTag],COUNTRY_PRESTIGE_BREAKDOWN [COUNTRY.GetPrestige|v]@prestige!#!#!"
 COUNTRY_PRESTIGE_BREAKDOWN: "#header [concept_prestige] [Country.GetAltNameNoFormatting('Du')][Country.GetName]#!\nActuel : [Country.GetPrestige|v]@prestige!\n$TOOLTIP_DELIMITER$\n[Country.GetPrestigeDesc]"
 OBSERVER_RANK_TOOLTIP: "#header [concept_rank]#!\n#v 0#!$OBSERVER_NO_COUNTRY_SELECTED$"
 POWER_BLOC_RANK_TOOLTIP: "#header [concept_power_bloc_rank]#!\n$TOOLTIP_DELIMITER$\nLe bloc $POWER_BLOC_NAME$ est actuellement #variable $POWER_BLOC_RANK_FORMATTED$#! de tous les [Concept('concept_power_bloc', '$concept_power_blocs$')|l] en raison de son [concept_prestige|l] total de #v #tooltippable #tooltip:$POWER_BLOC_TOOLTIP_TAG$,POWER_BLOC_PRESTIGE_BREAKDOWN $POWER_BLOC_TOTAL_PRESTIGE$@prestige!#!#!#!"
 POWER_BLOC_PRESTIGE_BREAKDOWN: "#header [concept_prestige] du bloc [PowerBloc.GetName]#!\nTotal : [PowerBloc.GetTotalPrestige|v]@prestige!\n$TOOLTIP_DELIMITER$\n[PowerBloc.GetPrestigeDesc]"
 POWER_BLOC_PRESTIGE_BREAKDOWN_COUNTRY_ITEM: "[COUNTRY.GetName] : #tooltippable #tooltip:[COUNTRY.GetTooltipTag],COUNTRY_PRESTIGE_BREAKDOWN [COUNTRY.GetPrestige|v]@prestige!#!#!"
 POWER_BLOC_MEMBER_COUNTRY_NAME_AND_PRESTIGE: "[Country.GetName] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_PRESTIGE_BREAKDOWN [Country.GetPrestige|v]@prestige!#!#![AddLocalizationIf(Country.IsPowerStruggling, 'POWER_BLOC_POWER_STRUGGLE_WARNING')])"
 POWER_BLOC_POWER_STRUGGLE_WARNING: "#tooltip:[Country.GetTooltipTag],COUNTRY_POWER_BLOC_POWER_STRUGGLE_STATUS @warning!#!"
 HOMELAND_MAP_MARKER_TOOLTIP: "Le peuple [HomelandMarker.GetCulture.GetName] considère [State.GetName] comme sa [concept_homeland|l].\nPropriétaire : [State.GetOwner.GetName]"
 CURRENT_RANK_INFO: "Obtenir le statut de #variable [COUNTRY.GetNextRank]#! requiert #variable #bold [COUNTRY.GetPrestigeForNextRank]#!#! de [concept_prestige|l].\n\nSon [concept_prestige|l] de #variable #bold [COUNTRY.GetPrestige]#!#! s’explique par :\n[COUNTRY.GetPrestigeDesc]\n\nSi le [concept_prestige|l] tombe en-dessous de #v [COUNTRY.GetPrestigeForCurrentRank]#!, le pays perdra son statut de #v [COUNTRY.GetRank|l]#!."
 CURRENT_RANK_INFO_LOWERCASE: "Obtenir le statut de #variable [Country.GetNextRank]#! requiert #variable #bold [Country.GetPrestigeForNextRank]#!#! de [concept_prestige|l].\n\nSon [concept_prestige|l] de #variable #bold [Country.GetPrestige]#!#! s’explique par :\n[Country.GetPrestigeDesc]\n\nSi le [concept_prestige|l] tombe en-dessous de #v [Country.GetPrestigeForCurrentRank]#!, le pays perdra son statut de #v [Country.GetRank|l]#!."
 AGENDAS_TITLE: "\n#title Ordre du jour :#!"
 COST: "Coût : #variable $VALUE$#! $TYPE$"
 COST_MONEY: "Coût : #variable $VALUE|K$#! @money!"
 COST_CREDIT: "Coût : #variable $VALUE|K$#! @money! de crédit"
 AUTHORITY: "[concept_authority] @aut!"
 BUREAUCRACY: "[concept_bureaucracy] @bur!"
 INFLUENCE: "[concept_influence] @inf!"
 VERY_STRONGLY_AGAINST_PROGRESS: "#N #bold Très fortement contre#!#!"
 STRONGLY_AGAINST_PROGRESS: "#N #bold Fortement contre#!#!"
 AGAINST_PROGRESS: "#N #bold Contre#!#!"
 FOR_PROGRESS: "#P #bold Pour#!#!"
 STRONGLY_FOR_PROGRESS: "#P #bold Fortement pour#!#!"
 VERY_STRONGLY_FOR_PROGRESS: "#P #bold Très fortement pour#!#!"
 DURATION: "Durée"
 STARTING_DIPLO_PLAYS: "Commence des [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')|l]"
 MODIFIER_LABEL: ""
 MODIFIERS_HEADER: "#title Modificateurs#!"
 MODIFIERS_ATTACKER_HEADER: "#title Modificateurs d’attaquant#!"
 MODIFIERS_DEFENDER_HEADER: "#title Modificateurs de défenseur#!"
 CASUALTIES_ATTACKER_HEADER: "#title Pertes des attaquants#!"
 CASUALTIES_DEFENDER_HEADER: "#title Pertes des défenseurs#!"
 CASUALTY_ENTRY_HEADER: "[CultureCasualtyStatistics.GetCulture.GetName|vD]"
 CASUALTY_ENTRY_DEAD: "Morts : [CultureCasualtyStatistics.GetDead|vD]"
 CASUALTY_ENTRY_WOUNDED: "Blessés : [CultureCasualtyStatistics.GetWounded|vD]"
 CASUALTY_ENTRY_TOOLTIP: "[CultureCasualtyStatistics.GetDead|v] morts et [CultureCasualtyStatistics.GetWounded|v] blessés de [Concept('concept_pop', '$concept_pops$')|l] [CultureCasualtyStatistics.GetCulture.GetName] dans ce camp de la bataille"
 BATTLE_STARTING_ATTACKER_STATS: "Armée attaquante au début de la bataille :\n@battalions![Battle.GetStartingAttackerUnits|v] bataillons\n@manpower![Battle.GetStartingAttackerManpower|v] hommes"
 BATTLE_END_ATTACKER_STATS: "Armée attaquante à la fin de la bataille :\n@battalions![Battle.GetFinalAttackerUnits|v] bataillons\n@manpower![Battle.GetFinalAttackerManpower|v] hommes"
 BATTLE_STARTING_DEFENDER_STATS: "Armée défenseuse au début de la bataille :\n@battalions![Battle.GetStartingDefenderUnits|v] bataillons\n@manpower![Battle.GetStartingDefenderManpower|v] hommes"
 BATTLE_END_DEFENDER_STATS: "Armée défenseuse à la fin de la bataille :\n@battalions![Battle.GetFinalDefenderUnits|v] bataillons\n@manpower![Battle.GetFinalDefenderManpower|v] hommes"
 OFFER_OBLIGATION: "Proposer une [concept_obligation|l]"
 CALL_IN_OBLIGATION: "Faire appel à une [concept_obligation|l]"
 SWAY_TYPE_CALL_ALLY: "Appeler un [concept_ally|l]"
 SWAY_TYPE_BECOME_SUBJECT: "Devenir un [concept_subject|l]"
 SWAY_TYPE_TRANSFER_SUBJECT: "Transférer des [Concept('concept_subject', '$concept_subjects$')|l]"
 SWAY_TYPE_TRANSFER_STATE: "Transférer des [Concept('concept_state', '$concept_states$')|l]"
 SWAY_TYPE_DIPLOMATIC_PACT: "[Concept('concept_diplomatic_pact','$concept_diplomatic_pacts$')]"
 SWAY_OFFER_TRANSFER_SUBJECT: "Transférer [COUNTRY_THIRD_PARTY.GetAltNameNoFormatting('Le')][COUNTRY_THIRD_PARTY.GetName]"
 SWAY_OFFER_BECOME_SUBJECT: "Devenir #v $SUBJECT_TYPE$#!"
 SWAY_OFFER_TRANSFER_STATE: "Transférer [STATE.GetName]"
 SWAY_OFFER_WARGOAL_TYPE: "Influencer en proposant : [WarGoalType.GetName]"
 REVERSE_SWAY_OFFER_WARGOAL_TYPE: "Demander : [WarGoalType.GetName]"
 REVERSE_SWAY_OFFER_OBLIGATION: "Demander une [concept_obligation|l]"
 REVERSE_SWAY_CALL_IN_OBLIGATION: "Demander de faire appel à une [concept_obligation|l]"
 SWAY_OFFER_TYPE: "Influencer en proposant : [SwayOfferType.GetName]"
 REVERSE_SWAY_OFFER_TYPE: "Demander : [SwayOfferType.GetName]"
 SWAY_OFFER_NAME: "Influencer en proposant : $NAME|v$"
 REVERSE_SWAY_OFFER_NAME: "Demander : $NAME|v$"
 DIPLO_PLAY_PREFERENCE_ON_THE_FENCE: "Aucune préférence pour l’un ou l’autre camp"
 DIPLO_PLAY_STRONG_PREFERENCE_INITIATOR: "Préférence pour [DiplomaticPlay.GetInitiator.GetAltNameNoFormatting('Le')][DiplomaticPlay.GetInitiator.GetName]"
 DIPLO_PLAY_STRONG_PREFERENCE_TARGET: "Préférence pour [DiplomaticPlay.GetTarget.GetAltNameNoFormatting('Le')][DiplomaticPlay.GetTarget.GetName]"
 DIPLO_PLAY_PREFERENCE_INITIATOR: "Petite préférence pour [DiplomaticPlay.GetInitiator.GetAltNameNoFormatting('Le')][DiplomaticPlay.GetInitiator.GetName]"
 DIPLO_PLAY_PREFERENCE_TARGET: "Petite préférence pour [DiplomaticPlay.GetTarget.GetAltNameNoFormatting('Le')][DiplomaticPlay.GetTarget.GetName]"
 DIPLO_PLAY_PREFERENCE_FOR_COUNTRY_DESC: "#header Préférence [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName] pour [COUNTRY_THIRD_PARTY.GetAltNameNoFormatting('Le')][COUNTRY_THIRD_PARTY.GetName]#!\n$DETAILS$"
 DIPLO_PLAY_PREFERENCE_TOOLTIP: "#header Préférences de soutien [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName]#!\n$TOOLTIP_DELIMITER$\nTendance à soutenir [INITIATOR_COUNTRY.GetAltNameNoFormatting('Le')][INITIATOR_COUNTRY.GetName] : #tooltippable #tooltip:$INITIATOR_BREAKDOWN_TAG$ $INITIATOR_SCORE|v$#!#!\nTendance à soutenir [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName] : #tooltippable #tooltip:$TARGET_BREAKDOWN_TAG$ $TARGET_SCORE|v$#!#!"
 DIPLO_PLAY_PREFERENCE_DESC: "Préférence relative [COUNTRY.GetAltAdjective('FS')|l] pour [ALLY_COUNTRY.GetAltNameNoFormatting('Le')][ALLY_COUNTRY.GetName] : $SCORE|+=$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 DIPLO_PLAY_PREFERENCE_BREAKDOWN: "Préférence pour soutenir [ALLY_COUNTRY.GetAltNameNoFormatting('Le')][ALLY_COUNTRY.GetName] : #v $ALLY_SCORE|+=$#!#indent_newline:3 \n$ALLY_BREAKDOWN$\n#!\nPréférence pour soutenir [ENEMY_COUNTRY.GetAltNameNoFormatting('Le')][ENEMY_COUNTRY.GetName] : #v $ENEMY_SCORE|+=$#!#indent_newline:3 \n$ENEMY_BREAKDOWN$#!\n\n[concept_neutrality] : #v $NEUTRALITY_SCORE$#! #indent_newline:3 \n$NEUTRALITY_BREAKDOWN$#!\n\n@information! La préférence relative est calculée à partir de la préférence [COUNTRY.GetAltAdjective('FS')|l] pour soutenir [ALLY_COUNTRY.GetAltNameNoFormatting('Le')][ALLY_COUNTRY.GetName] #b moins#! soit la préférence du pays pour soutenir [ENEMY_COUNTRY.GetAltNameNoFormatting('Le')][ENEMY_COUNTRY.GetName] soit le score de [concept_neutrality|l] du pays, en fonction du résultat le plus bas"
 DIPLO_PLAY_CANNOT_SUPPORT_COUNTRY: "#header Préférence [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName] pour [COUNTRY_THIRD_PARTY.GetAltNameNoFormatting('Le')][COUNTRY_THIRD_PARTY.GetName]#!\n$TOOLTIP_DELIMITER$\n[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] ne peut pas soutenir [COUNTRY_THIRD_PARTY.GetAltNameNoFormatting('Le')][COUNTRY_THIRD_PARTY.GetName] en raison de :\n$ERRORS$"
 DIPLO_PLAY_NEUTRALITY_ALREADY_COMMITTED: "La [concept_neutrality|l] est toujours de #n 0#! quand un [concept_country|l] est déjà engagé dans un camp"
 DIPLO_PLAY_PREFERENCE_DESC_NESTED_TOOLTIPS: "Préférence relative [COUNTRY.GetAltAdjective('FS')|l] pour [ALLY_COUNTRY.GetAltNameNoFormatting('Le')][ALLY_COUNTRY.GetName] : #tooltippable #tooltip:$BREAKDOWN_TAG$ $SCORE|+=$#!#!"
 DIPLO_PLAY_PREFERENCE_BREAKDOWN_NESTED_TOOLTIPS: "#header Préférence relative [COUNTRY.GetAltAdjective('FS')|l] pour [ALLY_COUNTRY.GetAltNameNoFormatting('Le')][ALLY_COUNTRY.GetName] : $SCORE|+=$#!\n$TOOLTIP_DELIMITER$\nPréférence pour soutenir [ALLY_COUNTRY.GetAltNameNoFormatting('Le')][ALLY_COUNTRY.GetName] : #tooltippable #tooltip:$ALLY_BREAKDOWN_TAG$ $ALLY_SCORE|v$#!#!\nPréférence pour soutenir [ENEMY_COUNTRY.GetAltNameNoFormatting('Le')][ENEMY_COUNTRY.GetName] : #tooltippable #tooltip:$ENEMY_BREAKDOWN_TAG$ $ENEMY_SCORE|v$#!#!\n[concept_neutrality] : #tooltippable #tooltip:$NEUTRALITY_BREAKDOWN_TAG$ $NEUTRALITY_SCORE|v$#!#!\n\n@information! La préférence relative est calculée à partir de la préférence [COUNTRY.GetAltAdjective('FS')|l] pour soutenir [ALLY_COUNTRY.GetAltNameNoFormatting('Le')][ALLY_COUNTRY.GetName] moins soit la préférence du pays pour soutenir [ENEMY_COUNTRY.GetAltNameNoFormatting('Le')][ENEMY_COUNTRY.GetName] soit le score de [concept_neutrality|l] du pays, en fonction du résultat le plus bas"
 CALL_ALLY_DECLINED_BROKEN_PACTS_DESC: "Si nous refusons, nous romprons ces [Concept('concept_diplomatic_pact', '$concept_diplomatic_pacts_short$')|l] avec eux :\n#v $LIST$#!"
 SWAY_OFFER_TITLE: "Tentative d’influence"
 REVERSE_SWAY_OFFER_TITLE: "Offre de soutien"
 SWAY_OFFER_TITLE_SELECTOR: "[SelectLocalization( Proposal.GetDiplomaticPlay.GetIncomingSway(Proposal.GetActor.Self, Proposal.GetRecipient.Self).IsReverseSway, 'REVERSE_SWAY_OFFER_TITLE', 'SWAY_OFFER_TITLE' )]"
 SWAY_OFFER_WARGOAL_DESC: "[COUNTRY.GetAltName('Le')|U][COUNTRY.GetName] nous propos[COUNTRY.GetAltNameNoFormatting('EEnt')] l’[concept_war_goal|l] #variable [WarGoal.GetName]#!, si nous les soutenons dans le [concept_diplomatic_play|l] en cours contre [ENEMY_COUNTRY.GetAltName('Le')][ENEMY_COUNTRY.GetName]."
 SWAY_OFFER_OBLIGATION_DESC: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] propos[COUNTRY.GetAltNameNoFormatting('EEnt')] de nous devoir une [concept_obligation|l] si nous les soutenons dans leur [concept_diplomatic_play|l] en cours contre [ENEMY_COUNTRY.GetAltNameNoFormatting('Le')][ENEMY_COUNTRY.GetName]."
 SWAY_OFFER_CALL_IN_OBLIGATION_DESC: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] demand[COUNTRY.GetAltNameNoFormatting('EEnt')] notre soutien dans le [concept_diplomatic_play|l] en cours contre [ENEMY_COUNTRY.GetAltNameNoFormatting('Le')][ENEMY_COUNTRY.GetName].\n\n$THEY_CALL_IN_OBLIGATION$"
 SWAY_OFFER_CALL_ALLY_DESC: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] nous appell[COUNTRY.GetAltNameNoFormatting('EEnt')] en tant qu’[Concept('concept_ally', 'alliés')|l] dans le [concept_diplomatic_play|l] en cours contre [ENEMY_COUNTRY.GetAltNameNoFormatting('Le')][ENEMY_COUNTRY.GetName]\n\nSi nous acceptons, nous pourrons ajouter un [concept_war_goal|l] pour nous-mêmes en tant qu’[concept_secondary_demand|l][ConcatIfNeitherEmpty('\n\n',GetPlayer.GetPactsBrokenFromCallToArmsDeclinedDesc(COUNTRY.Self))]"
 SWAY_OFFER_BECOME_SUBJECT_DESC: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] propos[COUNTRY.GetAltNameNoFormatting('EEnt')] de devenir notre $SUBJECT_TYPE|v$ si nous les soutenons dans leur [concept_diplomatic_play|l] en cours contre [ENEMY_COUNTRY.GetAltNameNoFormatting('Le')][ENEMY_COUNTRY.GetName]."
 SWAY_OFFER_TRANSFER_SUBJECT_DESC: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] propos[COUNTRY.GetAltNameNoFormatting('EEnt')] de transférer leur [concept_subject|l], [COUNTRY_THIRD_PARTY.GetAltNameNoFormatting('Le')][COUNTRY_THIRD_PARTY.GetName], si nous les soutenons dans leur [concept_diplomatic_play|l] en cours contre [ENEMY_COUNTRY.GetAltNameNoFormatting('Le')][ENEMY_COUNTRY.GetName]."
 SWAY_OFFER_TRANSFER_STATE_DESC: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] propos[COUNTRY.GetAltNameNoFormatting('EEnt')] de nous transférer leur [concept_subject|l], [COUNTRY_THIRD_PARTY.GetAltNameNoFormatting('Le')][COUNTRY_THIRD_PARTY.GetName], si nous les soutenons dans leur [concept_diplomatic_play|l] en cours contre [ENEMY_COUNTRY.GetAltNameNoFormatting('Le')][ENEMY_COUNTRY.GetName]."
 SWAY_OFFER_DIPLOMATIC_PACT_DESC: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] nous propos[COUNTRY.GetAltNameNoFormatting('EEnt')] un(e) [DIPLOMATIC_ACTION_TYPE.GetName] si nous les soutenons dans leur [concept_diplomatic_play|l] en cours contre [ENEMY_COUNTRY.GetAltNameNoFormatting('Le')][ENEMY_COUNTRY.GetName]."
 REVERSE_SWAY_OFFER_WARGOAL_DESC: "[COUNTRY.GetAltName('Le')|U][COUNTRY.GetName] nous propos[COUNTRY.GetAltNameNoFormatting('EEnt')] leur soutien dans le [concept_diplomatic_play|l] en cours contre [ENEMY_COUNTRY.GetAltName('Le')][ENEMY_COUNTRY.GetName], en échange de cet [concept_war_goal|l] : #variable [WarGoal.GetName]#!."
 REVERSE_SWAY_OFFER_OBLIGATION_DESC: "[COUNTRY.GetAltName('Le')|U][COUNTRY.GetName] nous propos[COUNTRY.GetAltNameNoFormatting('EEnt')] leur soutien dans le [concept_diplomatic_play|l] en cours contre [ENEMY_COUNTRY.GetAltName('Le')][ENEMY_COUNTRY.GetName], en échange d’une [concept_obligation|l] envers eux."
 REVERSE_SWAY_OFFER_CALL_IN_OBLIGATION_DESC: "[COUNTRY.GetAltName('Le')|U][COUNTRY.GetName] nous propos[COUNTRY.GetAltNameNoFormatting('EEnt')] leur soutien dans le [concept_diplomatic_play|l] en cours contre [ENEMY_COUNTRY.GetAltName('Le')][ENEMY_COUNTRY.GetName], en échange de l’annulation de leur [concept_obligation|l] envers nous."
 REVERSE_SWAY_OFFER_BECOME_SUBJECT_DESC: "[COUNTRY.GetAltName('Le')|U][COUNTRY.GetName] nous propos[COUNTRY.GetAltNameNoFormatting('EEnt')] leur soutien dans le [concept_diplomatic_play|l] en cours contre [ENEMY_COUNTRY.GetAltName('Le')][ENEMY_COUNTRY.GetName], si nous devenons leur $SUBJECT_TYPE|v$."
 REVERSE_SWAY_OFFER_TRANSFER_SUBJECT_DESC: "[COUNTRY.GetAltName('Le')|U][COUNTRY.GetName] nous propos[COUNTRY.GetAltNameNoFormatting('EEnt')] leur soutien dans le [concept_diplomatic_play|l] en cours contre [ENEMY_COUNTRY.GetAltName('Le')][ENEMY_COUNTRY.GetName], en échange du transfert de notre [concept_subject|l], [COUNTRY_THIRD_PARTY.Custom('Le')][COUNTRY_THIRD_PARTY.GetName]."
 REVERSE_SWAY_OFFER_TRANSFER_STATE_DESC: "[COUNTRY.GetAltName('Le')|U][COUNTRY.GetName] nous propos[COUNTRY.GetAltNameNoFormatting('EEnt')] leur soutien dans le [concept_diplomatic_play|l] en cours contre [ENEMY_COUNTRY.GetAltName('Le')][ENEMY_COUNTRY.GetName], en échange du transfert de notre [concept_state|l] de [STATE.GetName]."
 REVERSE_SWAY_OFFER_DIPLOMATIC_PACT_DESC: "[COUNTRY.GetAltName('Le')|U][COUNTRY.GetName] nous propos[COUNTRY.GetAltNameNoFormatting('EEnt')] leur soutien dans le [concept_diplomatic_play|l] en cours contre [ENEMY_COUNTRY.GetAltName('Le')][ENEMY_COUNTRY.GetName], en échange d’une [DIPLOMATIC_ACTION_TYPE.GetName]."
 DIPLOMATIC_DEMAND_PROPOSAL_DESC: "[COUNTRY.GetAltName('Le')|U][COUNTRY.GetName] exig[COUNTRY.GetAltNameNoFormatting('EEnt')] « [WAR_GOAL.GetName] » de notre part. En acceptant, nous céderons l’[concept_war_goal|l] demandé et aurons une [concept_truce|l] pendant #v 5#! ans.\n\n@warning! Si nous refusons, ils engageront un [concept_diplomatic_play|l] contre nous, qui pourrait dégénérer en [concept_war|l]."
 DIPLOMATIC_DEMAND_LENS_DESC: "#header [concept_diplomatic_demand] : [DIPLOMATIC_PLAY_TYPE.GetName|v]#!\n$TOOLTIP_DELIMITER$\nExiger un [concept_war_goal|l] « [DIPLOMATIC_PLAY_TYPE.GetName|v] » d’un autre [concept_country|l]. S’il accepte, l'[concept_war_goal|l] choisi sera cédé et une trêve débutera. S’il refuse, un [concept_diplomatic_play|l], dont vous serez l’[concept_initiator] débutera.\n\n@information! Vous pouvez également décider de lancer le [concept_diplomatic_play|l] immédiatement, afin d’imposer des exigences supplémentaires à votre cible."
 SWAY_NEITHER_PRIMARY_PARTICIPANT: "Aucun des [concept_country|l] n’est le participant principal de ce [concept_diplomatic_play|l]"
 SWAY_SUBJECT_ENEMY: "#b Impossible#! d’[concept_sway|l] notre [concept_subject|l] qui s’oppose à nous"
 SWAY_OVERLORD_ENEMY: "#b Impossible#! d’[concept_sway|l] notre [concept_overlord|l] qui s’oppose à nous"
 ALREADY_HAS_SWAY_IN_THIS_COUNTRY: "Nous essayons déjà d’influencer ce pays."
 ALREADY_SWAYING_COUNTRY: "Nous tentons déjà d’[concept_sway] ou d’[concept_offer_support|l] à un autre [concept_country|l]."
 ALREADY_BEING_SWAYED: "Nous sommes actuellement la cible d’une [Concept('concept_sway', 'influence')] ou d’une [Concept('concept_offer_support', '$concept_offer_of_support$')|l] d’un autre [concept_country|l]."
 RECENTLY_DECLINED_SWAY: "[COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] a récemment rejeté une [Concept('concept_sway', 'influence')] ou une [Concept('concept_offer_support','$concept_offer_of_support$')] de notre part, nous pourrons réessayer le #v $DATE$#!"
 ALREADY_OWES_OBLIGATION_TO: "Nous avons déjà une [concept_obligation|l] envers [COUNTRY.GetAltNameNoFormatting('Le')]#variable [COUNTRY.GetName]#!."
 ADD_WARGOAL_PANEL_HEADER: "#BOLD Ajouter un [concept_war_goal|l]#!"
 ADD_WARGOAL_NOT_ALLOWED: "Ce [concept_diplomatic_play|l] ne permet pas d’ajouter des objectifs de guerre supplémentaires."
 ADD_WARGOAL_TOOLTIP: "#header Ajouter un [concept_war_goal|l]#!\n[DiplomaticPlay.GetCountryCanAddWarGoalDesc(GetPlayer)]"
 CLICK_TO_ADD_WARGOAL: "#instruction Cliquez pour ouvrir la liste d’[concept_war_goal|l]#!"
 WARGOAL_TRUST_COST: "Coût de confiance : #BOLD #N [WarGoalType.GetTrustCost]#!#!"
 TOOLTIP_WARGOAL_TRUST_COST: "Le montant de confiance déduit lors de l’ajout de cet [concept_war_goal|l]"
 ADD_WARGOAL_NOT_PARTICIPANT: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] ne fait pas partie de ce [concept_diplomatic_play|l]"
 ADD_WARGOAL_NOT_PRIMARY_PARTICIPANT: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] n’est pas un participant principal de ce [concept_diplomatic_play|l] et ne l’a pas rejoint via l’action $SWAY_TYPE_CALL_ALLY$"
 SIDE_NOT_VALID_IN_DIPLOMATIC_PLAY: "Aucun camp valide à rejoindre"
 ADD_WARGOAL_NOT_ENOUGH_TRUST: "$COST$ de confiance requis pour ajouter cet [concept_war_goal|l]"
 ADD_WARGOAL_TARGET_NOT_IN_REGION: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] n’est pas présent en #variable $REGION$#!"
 ADD_WARGOAL_ALREADY_EXISTS: "Cet [concept_war_goal|l] fait déjà partie de la [concept_war|l]"
 ADD_WARGOAL_NOT_ENOUGH_MANEUVERS: "Nous avons besoin d’au moins $COST|v$ [Concept('concept_maneuver', '$concept_maneuvers$')|l] pour cette action"
 ADD_WARGOAL_NO_MANEUVERS_REMAINING: "Pas de [Concept('concept_maneuver', '$concept_maneuvers$')|l] restantes pour ce camp du [concept_diplomatic_play|l]"
 ADD_WARGOAL_ON_ALLY: "Impossible d’ajouter un [concept_war_goal|l] à un [concept_ally|l]"
 ADD_WARGOAL_WAR_HAS_STARTED: "La guerre a déjà commencé"
 ADD_WARGOAL_ALLY_TOO_COSTLY: "Les partisans d’un [concept_diplomatic_play|l] ne peuvent ajouter que des [Concept('concept_war_goal', '$concept_war_goals$')|l] qui coûtent [GetDefine('NDiplomacy','ALLY_WARGOAL_MAX_MANEUVERS_COST')] [Concept('concept_maneuver', '$concept_maneuvers$')|l] ou moins"
 ADD_WARGOAL_ALREADY_ADDED_WARGOAL: "A déjà ajouté un [concept_war_goal|l]"
 ADD_WARGOAL_NOT_ON_A_SIDE: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] n’[COUNTRY.GetAltNameNoFormatting('AOnt')] pas encore choisi un camp dans le [concept_diplomatic_play|l]"
 JOIN_DIPLO_PLAY_COUNTRY_ALREADY_SWAYED: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] [COUNTRY.GetAltNameNoFormatting('AOnt')] déjà une offre d’influence acceptée"
 CANNOT_REVERSE_SWAY_CALL_ALLY: "$CALL_ALLY$ ne peut pas être utilisé comme [concept_offer_support|l]"
 CANNOT_CALL_ALLY_NON_ALLY: "$CALL_ALLY$ ne peut être utilisé qu’avec vos [Concept('concept_ally', '$concept_allies$')|l]"
 COUNTRY_ALREADY_SUBJECT: "[COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] est déjà [concept_subject|l]"
 NOT_VALID_SUBJECT_TYPE: "#v $SUBJECT_TYPE$#! n’est pas un type de [concept_subject|l] convenable pour cette interaction."
 STATE_IS_CAPITAL: "[STATE.GetName] est l’[concept_capital_state|l]"
 NOT_VALID_DIPLOMATIC_ACTION: "« [DIPLOMATIC_ACTION.GetName] » ne convient pas pour cette interaction"
 ALREADY_ACTIVE_PACT: "Vous avez déjà un [concept_diplomatic_pact|l] en cours pour « [DIPLOMATIC_ACTION.GetName] »"
 COUNTRY_MUST_BE_SUBJECT: "[COUNTRY_THIRD_PARTY.GetAltNameNoFormatting('Le')|U][COUNTRY_THIRD_PARTY.GetName] est déjà [concept_subject|l] [COUNTRY.GetAltNameNoFormatting('Du')][COUNTRY.GetName]"
 WARGOAL_MUST_BE_INDEPENDENT: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] ne doit pas être un [concept_subject|l]"
 ALREADY_PROMISED_SWAY: "[COUNTRY.GetName] a déjà promis cette [Concept('concept_sway', 'influence')] à un autre [concept_country|l]"
 SWAY_OFFER_NOT_VALID_FOR_SUBJECT: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] ne peut être [Concept('concept_sway','$concept_swayed$')|l] contre son [concept_overlord|l] qu’avec un [concept_war_goal|l] #v $war_goal_independence_type_name$#! ou #v $war_goal_increase_autonomy_type_name$#!, et uniquement si son [concept_liberty_desire|l] est assez élevé"
 WARGOAL_NOT_POWER_BLOC_LEADER: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] doit être le chef d’un [concept_power_bloc|l]"
 WARGOAL_NOT_IN_POWER_BLOC_LED_BY: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] doit appartenir à un [concept_power_bloc|l] dirigé par [TARGET_COUNTRY.GetAltNameNoFormatting('Le')][TARGET_COUNTRY.GetName]"
 NUM_BUILDINGS_WITH_PROD_METHOD_ACTIVE: "[ProductionMethod.GetNumOfBuildingsUsingThis(GetPlayer.Self)|v] [Concept('concept_building', '$concept_buildings$')|l] ont actuellement [ProductionMethod.GetName] d’actif :\n[ProductionMethod.GetBuildingTypesUsingThisDesc(GetPlayer.Self)]"
 BUILDING_TYPE_USING_PM_ENTRY: "[BuildingType.GetName] : #variable $NUM$#!"
 ACTIVE_PRODUCTION_METHODS_PRODUCING: "[Concept('concept_production_method', '$concept_production_methods$')] produisant [Goods.GetCustom('FR_Goods_Du')][Goods.GetName|l] [Goods.GetTextIcon] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName]"
 ACTIVE_PRODUCTION_METHODS_CONSUMING: "[Concept('concept_production_method', '$concept_production_methods$')] consommant [Goods.GetCustom('FR_Goods_Du')][Goods.GetName|l] [Goods.GetTextIcon] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName]"
 INACTIVE_PRODUCTION_METHODS: "Non actif"
 PRODUCTION_METHOD_ITEM: "#variable [ProductionMethod.GetName]#!"
 BUILDING_TYPE_BULK_CHANGE_TOOLTIP: "[BuildingBrowserBuildingTypeItem.GetBulkChangeTooltip( ProductionMethodGroup.Self )][ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(IsDataModelEmpty(BuildingBrowserBuildingTypeItem.GetBuildingsInCountry), 'CANNOT_BULK_CHANGE_NOT_OWNED'))]"
 CANNOT_BULK_CHANGE_NOT_OWNED: "@red_cross! Vous ne détenez aucun [BuildingBrowserBuildingTypeItem.GetBuildingType.GetName]"
 PARTIES_TITLE: "#title Partis#!"
 COLONIZABLE_NO_POWER_PROJECTION: "#N Les nations colonisables ne peuvent pas projeter de la puissance#!"
 MARKET_CONTROLLER_TOOLTIP: "[concept_market_owner_desc]"
 MILITARY_THEATER: "[concept_theater]"
 STRATEGIC_REGION_MARKER_ADD_IM: "#header Ajouter un [concept_interest|l]#!\nChoisissez une mission régionale de #bold projection de puissance#! afin d’utiliser vos points de force militaire pour projeter votre puissance en #variable [StrategicRegion.GetName]#!\n\n[concept_power_projection_desc]"
 STRATEGIC_REGION_MARKER_START_DP: "#header Commencer un [concept_diplomatic_play|l]#!\nVous avez un #variable intérêt#! en #variable [StrategicRegion.GetName]#!, ce qui signifie que vous pouvez y faire un [concept_diplomatic_play|l]"
 TOOLTIP_INTEREST_GROUP: "#header [InterestGroup.GetName]#!\n$TOOLTIP_DELIMITER$\nIdéologie du chef : [InterestGroup.GetLeaderIdeologyDesc|l]\nIdéologies : [InterestGroup.GetIdeologyDesc]\n\nPoids politique : [InterestGroup.GetClout|%1v]\nPopulation : #variable [InterestGroup.GetPopulation|*]#!\n\n#lore [InterestGroup.GetDesc]#!\n"
 INTEREST_GROUP_NAME_WITH_CLOUT_VALUE: "[InterestGroup.GetNameNoIcon] (#v #tooltippable #tooltip:[InterestGroup.GetTooltipTag],IG_CLOUT_BREAKDOWN,IGCloutTooltip [InterestGroup.GetClout|%1]#!#!#!)"
 TOOLTIP_ENACT_LAW_NAME: "#header Promulguer [LawType.GetName|l]#!"
 TOOLTIP_ENACT_LAW_CURRENT_LAW_NAME: "[concept_law] actuelle : [Law.GetActiveGroupLaw.GetName]"
 TOOLTIP_CANCEL_LAW: "#header Cesser d’adopter [Law.GetName]#!\nVous perdrez tout progrès."
 TOOLTIP_CANCEL_LAW_DISALLOWED: "#header Impossible de cesser la promulgation de la loi [Law.GetName]#!"
 TOOLTIP_CANCEL_LAW_COOLDOWN: "@warning! Vous ne pourrez pas essayer à nouveau de promulguer la loi [Law.GetName] pendant #v [GetDefine('NPolitics','LAW_ENACTMENT_COOLDOWN_DAYS')|0] jours#!."
 TOOLTIP_CANCEL_LAW_POLITICAL_MOVEMENT_EFFECT: "@warning! Le [concept_political_movement|l] pour [PoliticalMovement.GetName|l] sera furieux, ce qui entraînera :\n[GetStaticModifier('supported_law_cancelled').GetDesc]"
 LAW_CANCEL_ENACTMENT_EFFECT_ON_MOVEMENT_ACTIVISM_HEADER: "#title Annuler l’effet de la promulgation sur le [concept_activism|l] :#!"
 TEMPORARY_APPROVAL_FROM_LAW_CHANGE_TITLE: "#title Modifications temporaires de l’[concept_approval|l] à partir de l’[Concept('concept_endorse_oppose', '$concept_endorsement$')|l] :#!"
 PREDICT_APPROVAL_WHILE_ENACT: "$TEMPORARY_APPROVAL_FROM_LAW_CHANGE_TITLE$\n$BREAKDOWN$"
 CLICK_TO_OPEN_LAW_GROUP: "#instruction Cliquez pour voir le [concept_law_group|l]#!"
 COMMAND_CONFIRMATION_START_IMPOSING_LAW: "#b Imposer#! [Law.GetName] [Law.GetCountry.GetAltNameNoFormatting('Au')][Law.GetCountry.GetName] ?\n\n$LAW_ENACTMENT_IMPOSITION_OUTCOME_BREAKDOWN$"
 LAW_ENACTMENT_IMPOSITION_OUTCOME_BREAKDOWN: "Dans #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP [Law.GetCheckpointRemainingDays|v]#!#! jours, l’une des situations suivantes se produira :\n$IMPOSITION_OUTCOME_SUCCESS$\n$IMPOSITION_OUTCOME_ADVANCE$\n$IMPOSITION_OUTCOME_DEBATE$\n$IMPOSITION_OUTCOME_STALL$"
 INTERST_GROUP_APPROVAL_CHANGE_BREAKDOWN_TOOLTIP: "#header Modifications de l’[concept_approval|l] pour le groupe d’intérêt [InterestGroup.GetName]#!\n#v [InterestGroup.GetApprovalValueDeltaFromEnactment(Law.GetLawType.Self)|=+]#! si la loi [Law.GetName|l] est [Concept('concept_enactment_of_laws', '$concept_enactment_of_laws_enacted$e')|l]\nL’[concept_approval|l] du groupe d’intérêt [InterestGroup.GetName] devrait changer de #v [InterestGroup.GetApprovalValue|+]#! à #v [InterestGroup.GetApprovalValueIfEnacted(Law.GetLawType.Self)|+]#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(InterestGroup.WillRadicalizeIfEnacted(Law.GetLawType.Self), 'WILL_RADICALIZE_IG'))]\n$TOOLTIP_DELIMITER$\nCeci s’explique par la différence d’[Concept('concept_endorse_oppose', '$concept_endorsement$')|l] ou d’[Concept('concept_endorse_oppose', '$concept_opposition$')|l] de la part du groupe d’intérêt [InterestGroup.GetName] pour la [concept_law|l] active [Law.GetActiveGroupLaw.GetName] ([InterestGroup.GetLawStanceLabel(Law.GetActiveGroupLaw.GetLawType.Self)]) et la loi [Law.GetName|l] ([InterestGroup.GetLawStanceLabel(Law.GetLawType.Self)])[ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(InterestGroup.IsLeaderInfluencingEnactment(Law.GetLawType.Self), 'INTEREST_GROUP_LEADER_ENDORSEMENT'))]\n\n[InterestGroup.GetApprovalValueDecayIfEnactedDesc(Law.GetLawType.Self)]"
 INTEREST_GROUP_LEADER_ENDORSEMENT: "La position du groupe d’intérêt [InterestGroup.GetName] ([InterestGroup.GetLawStanceLabel(Law.GetLawType.Self)]) à l’égard de la loi [Law.GetName|l] est affectée par l’[concept_ideology|l] prônée par [InterestGroup.GetLeader.GetFirstName] ([concept_leader]) : [InterestGroup.GetLeader.GetIdeology.GetName]"
 WILL_RADICALIZE_IG: "@warning! Cela conduira à la [Concept('concept_radical', '$concept_radicalization$')|l] du groupe [InterestGroup.GetName]"
 IMPOSITION_OUTCOME_SUCCESS: "[Concept('concept_enactment_success', '$concept_enactment_success_short$')] : #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN [Law.GetCheckpointSuccessWithImpositionChance|v%1]#!#!"
 IMPOSITION_OUTCOME_ADVANCE: "[Concept('concept_enactment_advance', '$concept_enactment_advance_short$')] : #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_ADVANCE_CHANCE_BREAKDOWN [Law.GetCheckpointAdvanceWithImpositionChance|v%1]#!#!"
 IMPOSITION_OUTCOME_DEBATE: "[Concept('concept_enactment_debate', '$concept_enactment_debate_short$')] : #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_DEBATE_CHANCE_BREAKDOWN [Law.GetCheckpointDebateWithImpositionChance|v%1]#!#!"
 IMPOSITION_OUTCOME_STALL: "[Concept('concept_enactment_stall', '$concept_enactment_stall_short$')] : #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_STALL_CHANCE_BREAKDOWN [Law.GetCheckpointStallWithImpositionChance|v%1]#!#!"
 IMPOSITION_SUCCESS_CHANCE_BREAKDOWN: "#header Chances de [Concept( 'concept_enactment_success', '$concept_enactment_success_short$' )|l]#!\nActuellement : [Law.GetCheckpointSuccessWithImpositionChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointSuccessWithImpositionBreakdown)), 'IMPOSITION_SUCCESS_CHANCE_BREAKDOWN_DUE_TO')]"
 IMPOSITION_SUCCESS_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title Ceci s’explique par :#!\n[Law.GetCheckpointSuccessWithImpositionBreakdown]"
 IMPOSITION_ADVANCE_CHANCE_BREAKDOWN: "#header Chances d’[Concept( 'concept_enactment_advance', '$concept_enactment_advance_short$' )|l]#!\nActuellement : [Law.GetCheckpointAdvanceWithImpositionChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointAdvanceWithImpositionBreakdown)), 'IMPOSITION_ADVANCE_CHANCE_BREAKDOWN_DUE_TO')]"
 IMPOSITION_ADVANCE_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title Ceci s’explique par :#!\n[Law.GetCheckpointAdvanceWithImpositionBreakdown]"
 IMPOSITION_DEBATE_CHANCE_BREAKDOWN: "#header Chances de [Concept( 'concept_enactment_debate', '$concept_enactment_debate_short$' )|l]#!\nActuellement : [Law.GetCheckpointDebateWithImpositionChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointDebateWithImpositionBreakdown)), 'IMPOSITION_DEBATE_CHANCE_BREAKDOWN_DUE_TO')]"
 IMPOSITION_DEBATE_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title Ceci s’explique par :#!\n[Law.GetCheckpointDebateWithImpositionBreakdown]"
 IMPOSITION_STALL_CHANCE_BREAKDOWN: "#header Chances de [Concept('concept_enactment_stall', '$concept_enactment_stall_short$')|l]#!\nActuellement : [Law.GetCheckpointStallWithImpositionChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointStallWithImpositionBreakdown)), 'IMPOSITION_STALL_CHANCE_BREAKDOWN_DUE_TO')]"
 IMPOSITION_STALL_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title Ceci s’explique par :#!\n[Law.GetCheckpointStallWithImpositionBreakdown]"
 COMMAND_CONFIRMATION_CANCEL_LAW_ENACTMENT: "[Law.GetCancelTooltip]"
 LAW_ENACTMENT_PROGRESS_TOPBAR: "[SelectLocalization( GetPlayer.IsEnactingLaw, 'ENACTING_LAW', 'NOT_ENACTING_LAW' )]\n[GetPlayer.GetLawEnactmentProgressDesc]"
 ENACTING_LAW: "[GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName] [GetPlayer.GetAltNameNoFormatting('EstSont')] en train d’adopter #variable [GetPlayer.GetLawBeingEnacted.GetName]#!"
 NOT_ENACTING_LAW: "[GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName] n’est pas activement en train d’adopter une nouvelle [concept_law|l]."
 LAW_ENACTMENT_PHASE_LABEL: "Phase #v [Law.GetEnactmentPhase]/3#!"
 LAW_ENACTMENT_SETBACKS_LABEL: "[Concept('concept_enactment_setback', '$concept_enactment_setbacks_short$')] :"
 LAW_ENACTMENT_ATTEMPT_TOO_SOON: "Une tentative de promulgation de [Law.GetName] a été fait trop récemment. Attendez $TIME_REMAINING$ avant une nouvelle tentative."
 LAW_ENACTMENT_PROGRESS: "#header [Concept('concept_enactment_of_laws', '$concept_enactment_of_laws_enacting$')] de la loi [Law.GetName|l]#!\n[Concept('concept_enactment_phase','$concept_enactment_phase_short$')] : [Law.GetCountry.GetCustom(Law.GetCurrentEnactmentPhaseKey)|v] (#v [Add_int32('(int32)1', Law.GetEnactmentPhase)]/[GetDefine('NPolitics','LAW_ENACTMENT_MAX_PHASES')]#!)\n$LAW_ENACTMENT_SETBACKS_LABEL$ [Law.GetEnactmentSetbackCount|-]/[Law.GetCountry.GetMaxLawEnactmentSetbacks|-]\n[SelectLocalization(EqualTo_CFixedPoint(Law.GetCountry.GetModifier.GetValueFor('country_cannot_enact_laws_bool'), '(CFixedPoint)0'), 'LAW_ENACTMENT_PROGRESS_NOT_STALLED', 'LAW_ENACTMENT_PROGRESS_STALLED')][ConcatIfNeitherEmpty('\n\n', Law.PredictLegitimacyChangeToEnactDesc)]\n$TOOLTIP_DELIMITER$\n$LAW_ENACTMENT_OUTCOME_BREAKDOWN$[AddLocalizationIf(Law.HasEnactmentLastCheckpoint,'LAW_ENACTMENT_LAST_CHECKPOINT')]"
 LAW_ENACTMENT_PROGRESS_NOT_STALLED: "[SelectLocalization(EqualTo_int32(Add_int32('(int32)1', Law.GetEnactmentPhase), GetDefine('NPolitics','LAW_ENACTMENT_MAX_PHASES')), 'LAW_ENACTMENT_PROGRESS_LAST_PHASE', 'LAW_ENACTMENT_PROGRESS_PHASES')]"
 LAW_ENACTMENT_PROGRESS_PHASES: "#v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN [Law.GetCheckpointSuccessChance|+%0]#!#!#! de chances de passer à la phase [Law.GetCountry.GetCustom(Law.GetNextEnactmentPhaseKey)|v] le #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP [Law.GetCheckpointEndDate.GetString]#!#!"
 LAW_ENACTMENT_PROGRESS_LAST_PHASE: "#v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN [Law.GetCheckpointSuccessChance|+%0]#!#!#! de chances de faire passer la [concept_law|l] le #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP [Law.GetCheckpointEndDate.GetString]#!#!"
 LAW_ENACTMENT_PROGRESS_STALLED: "$LAW_ENACTMENT_STALLED_WARNING$#indent_newline:2 \n$LAW_ENACTMENT_STALL_BREAKDOWN$#!"
 LAW_ENACTMENT_LAST_CHECKPOINT: "Résultat du dernier point de contrôle du [Law.GetEnactmentLastCheckpointDate.GetString] : [Law.GetEnactmentLastCheckpointResult|v]"
 LAW_ENACTMENT_OUTCOME_BREAKDOWN: "Dans #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP [Law.GetCheckpointRemainingDays|v]#!#! jours, l'une des situations suivantes se produira :\n$OUTCOME_SUCCESS$\n$OUTCOME_ADVANCE$\n$OUTCOME_DEBATE$\n$OUTCOME_STALL$[AddTextIf(Law.HasEnactmentLastCheckpoint,'\n\n')]"
 LAW_ENACTMENT_EFFECT_ON_MOVEMENT_ACTIVISM_HEADER: "#title Effet de la promulgation sur le [concept_activism|l] :#!"
 LAW_ENACTMENT_AFFECTED_MOVEMENTS_ADDITIONAL: "et #v [GetDataModelSize(DataModelSkipFirst(Law.GetAffectedMovementsFromStartEnact, '(int32)5'))]#! de plus..."
 LAW_ENACTMENT_AFFECTED_MOVEMENT_TOOLTIP: "#header [Concept('concept_activism', '$concept_activism_short$')] suite à la [Concept('concept_enactment_of_laws','$concept_enactment_of_laws_enacting$')|l] de la loi [Law.GetName]#!\n[SelectLocalization(GreaterThanOrEqualTo_CFixedPoint(Law.GetRadicalismEffectOnMovementFromStartEnact(PoliticalMovement.Self), '(CFixedPoint)0.5'), 'ACTIVISM_RED_ICON', 'ACTIVISM_ICON')] [Law.GetRadicalismEffectOnMovementFromStartEnact( PoliticalMovement.Self )|-=0%] pour le [PoliticalMovement.GetName|l]\n$TOOLTIP_DELIMITER$\n[SelectLocalization(EqualTo_CFixedPoint(Law.GetRadicalismDriftTargetOnMovementFromStartEnact( PoliticalMovement.Self ), PoliticalMovement.GetTargetRadicalism), 'LAW_ENACTMENT_AFFECTED_MOVEMENT_SAME_RADICALISM_DRIFT', 'LAW_ENACTMENT_AFFECTED_MOVEMENT_DIFFERENT_RADICALISM_DRIFT')]"
 LAW_ENACTMENT_AFFECTED_MOVEMENT_SAME_RADICALISM_DRIFT: "Pendant la promulgation et si cette [concept_law|l] est promulguée, le militantisme actuel prévu pour le [PoliticalMovement.GetName|l] de #b [LabelingHelper.GetLabelForRadicalism(PoliticalMovement.GetTargetRadicalism)]#! (#tooltippable #tooltip:[PoliticalMovement.GetTooltipTag],POLITICAL_MOVEMENT_RADICALISM_BREAKDOWN [SelectLocalization(GreaterThanOrEqualTo_CFixedPoint(PoliticalMovement.GetTargetRadicalism, '(CFixedPoint)1'), 'POLITICAL_MOVEMENT_TARGET_RADICALISM_WITHOUT_LABEL_RED', 'POLITICAL_MOVEMENT_TARGET_RADICALISM_WITHOUT_LABEL')]#!#!) restera le même"
 LAW_ENACTMENT_AFFECTED_MOVEMENT_DIFFERENT_RADICALISM_DRIFT: "Pendant la promulgation et si cette [concept_law|l] est promulguée, le militantisme actuel prévu pour le [PoliticalMovement.GetName|l] de #b [LabelingHelper.GetLabelForRadicalism(PoliticalMovement.GetTargetRadicalism)]#! (#tooltippable #tooltip:[PoliticalMovement.GetTooltipTag],POLITICAL_MOVEMENT_RADICALISM_BREAKDOWN [SelectLocalization(GreaterThanOrEqualTo_CFixedPoint(PoliticalMovement.GetTargetRadicalism, '(CFixedPoint)1'), 'POLITICAL_MOVEMENT_TARGET_RADICALISM_WITHOUT_LABEL_RED', 'POLITICAL_MOVEMENT_TARGET_RADICALISM_WITHOUT_LABEL')]#!#!) passera à [LabelingHelper.GetLabelForRadicalism(Law.GetRadicalismDriftTargetOnMovementFromStartEnact( PoliticalMovement.Self ))] (#v [Law.GetRadicalismDriftTargetOnMovementFromStartEnact( PoliticalMovement.Self )|0%]#!)"
 CANCEL_LAW_ENACTMENT_AFFECTED_MOVEMENT_TOOLTIP: "#header [Concept('concept_activism', '$concept_activism_short$')] suite à l’annulation de la [Concept('concept_enactment_of_laws','$concept_enactment_of_laws_enacting$')|l] de la loi [Law.GetName]#!\n[SelectLocalization(GreaterThanOrEqualTo_CFixedPoint(Law.GetRadicalismEffectOnMovementFromCancelEnact(PoliticalMovement.Self), '(CFixedPoint)0.5'), 'ACTIVISM_RED_ICON', 'ACTIVISM_ICON')] [Law.GetRadicalismEffectOnMovementFromCancelEnact( PoliticalMovement.Self )|-=0%] pour le [PoliticalMovement.GetName|l]\n$TOOLTIP_DELIMITER$\n[SelectLocalization(EqualTo_CFixedPoint(Law.GetRadicalismDriftTargetOnMovementFromCancelEnact( PoliticalMovement.Self ), PoliticalMovement.GetTargetRadicalism), 'CANCEL_LAW_ENACTMENT_AFFECTED_MOVEMENT_SAME_RADICALISM_DRIFT', 'CANCEL_LAW_ENACTMENT_AFFECTED_MOVEMENT_DIFFERENT_RADICALISM_DRIFT')]"
 CANCEL_LAW_ENACTMENT_AFFECTED_MOVEMENT_SAME_RADICALISM_DRIFT: "Si la promulgation de cette [concept_law|l] est annulée, le militantisme actuel prévu pour le [PoliticalMovement.GetName|l] de #b [LabelingHelper.GetLabelForRadicalism(PoliticalMovement.GetTargetRadicalism)]#! (#tooltippable #tooltip:[PoliticalMovement.GetTooltipTag],POLITICAL_MOVEMENT_RADICALISM_BREAKDOWN [SelectLocalization(GreaterThanOrEqualTo_CFixedPoint(PoliticalMovement.GetTargetRadicalism, '(CFixedPoint)1'), 'POLITICAL_MOVEMENT_TARGET_RADICALISM_WITHOUT_LABEL_RED', 'POLITICAL_MOVEMENT_TARGET_RADICALISM_WITHOUT_LABEL')]#!#!) restera le même"
 CANCEL_LAW_ENACTMENT_AFFECTED_MOVEMENT_DIFFERENT_RADICALISM_DRIFT: "Si la promulgation de cette [concept_law|l] est annulée, le militantisme actuel prévu pour le [PoliticalMovement.GetName|l] de #b [LabelingHelper.GetLabelForRadicalism(PoliticalMovement.GetTargetRadicalism)]#! (#tooltippable #tooltip:[PoliticalMovement.GetTooltipTag],POLITICAL_MOVEMENT_RADICALISM_BREAKDOWN [SelectLocalization(GreaterThanOrEqualTo_CFixedPoint(PoliticalMovement.GetTargetRadicalism, '(CFixedPoint)1'), 'POLITICAL_MOVEMENT_TARGET_RADICALISM_WITHOUT_LABEL_RED', 'POLITICAL_MOVEMENT_TARGET_RADICALISM_WITHOUT_LABEL')]#!#!) passera à [LabelingHelper.GetLabelForRadicalism(Law.GetRadicalismDriftTargetOnMovementFromCancelEnact( PoliticalMovement.Self ))] (#v [Law.GetRadicalismDriftTargetOnMovementFromCancelEnact( PoliticalMovement.Self )|0%]#!)"
 LAW_ENACTMENT_STALLED_WARNING: "#r La promulgation de la loi est actuellement au point mort !#!"
 LAW_ENACTMENT_STALL_BREAKDOWN: "[Law.GetCountry.GetModifier.GetDescFor('country_cannot_enact_laws_bool')]"
 LAW_ENACTMENT_STALL_BREAKDOWN_FULL: "[Law.GetCountry.GetModifier.GetTooltipFor('country_cannot_enact_laws_bool')]"
 LAW_ENACTMENT_MIN_TOTAL_DAYS: "Nombre de jours minimum : [GetDefine('NPolitics','LAW_ENACTMENT_MIN_TOTAL_DAYS')|v^2]"
 LAW_NEXT_CHECKPOINT_TIME: "Dans [Law.GetCheckpointRemainingDays|v] jours ([Law.GetCheckpointEndDateString])"
 LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP: "#header Délai de promulgation de la loi#!\n[Law.GetCheckpointTotalDays|v] jours entre les points de contrôle\n$TOOLTIP_DELIMITER$\nJours de base pour [Law.GetName] : [Law.GetCheckpointBaseDays|v]\n[Law.GetCheckpointTotalDaysBreakdown]"
 LAW_NEXT_CHECKPOINT_TIME_DESC: "Le prochain point de contrôle pour la promulgation de la loi aura lieu dans [Law.GetCheckpointRemainingDays|v] jours ([Law.GetCheckpointEndDateString])\n\n[Law.GetCheckpointTotalDays|v] jours entre les points de contrôle\n$TOOLTIP_DELIMITER$\nJours de base pour [Law.GetName] : [Law.GetCheckpointBaseDays|v]\n[Law.GetCheckpointTotalDaysBreakdown]"
 LAW_NEXT_CHECKPOINT_OUTCOME_CHANCES_DESC: "$NEXT_CHECKPOINT$\n$TAB$$OUTCOME_SUCCESS$\n$TAB$$OUTCOME_ADVANCE$\n$TAB$$OUTCOME_DEBATE$\n$TAB$$OUTCOME_STALL$"
 LAW_NEXT_CHECKPOINT_OUTCOME_CHANCES_DESC_NO_DATE: "$NEXT_CHECKPOINT_NO_DATE$\n$TAB$$OUTCOME_SUCCESS$\n$TAB$$OUTCOME_ADVANCE$\n$TAB$$OUTCOME_DEBATE$\n$TAB$$OUTCOME_STALL$"
 LAW_NEXT_CHECKPOINT_OUTCOME_CHANCES_DESC_NO_NESTING: "$NEXT_CHECKPOINT_NO_NESTING$\n$TAB$$OUTCOME_SUCCESS$\n$TAB$$OUTCOME_ADVANCE$\n$TAB$$OUTCOME_DEBATE$\n$TAB$$OUTCOME_STALL$"
 NEXT_CHECKPOINT: "Au prochain point de contrôle, le #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP #v [Law.GetCheckpointEndDateString]#!#!#!, l’une des situations suivantes se produira :"
 NEXT_CHECKPOINT_SHORT_WITH_LABEL: "[Law.GetCheckpointRemainingDays|v] jours jusqu’au prochain point de contrôle (#tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP #v [Law.GetCheckpointEndDateString]#!#!#!)"
 NEXT_CHECKPOINT_NO_DATE: "Au prochain point de contrôle, l’un des événements suivants se produira :"
 NEXT_CHECKPOINT_SHORT: "#tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_DESC #v [Law.GetCheckpointEndDateString]#!#!#! :"
 NEXT_CHECKPOINT_IS: "Le prochain point de contrôle est : #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_DESC #v [Law.GetCheckpointEndDateString]#!#!#!"
 NEXT_CHECKPOINT_NO_NESTING: "Au prochain point de contrôle, le #v [Law.GetCheckpointEndDateString]#!, l’une des situations suivantes se produira :"
 OUTCOME_SUCCESS: "[Concept('concept_enactment_success', '$concept_enactment_success_short$')] : #v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN [Law.GetCheckpointSuccessChance|+%0]#!#!#!"
 OUTCOME_SUCCESS_SHORT: "[Concept('concept_enactment_success', '$concept_enactment_success_short$')] : #v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN [Law.GetCheckpointSuccessChance|+%0]#!#!#!"
 OUTCOME_ADVANCE: "[Concept('concept_enactment_advance', '$concept_enactment_advance_short$')] : #v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_ADVANCE_CHANCE_BREAKDOWN [Law.GetCheckpointAdvanceChance|v%0]#!#!#!"
 OUTCOME_DEBATE: "[Concept('concept_enactment_debate', '$concept_enactment_debate_short$')] : #v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_DEBATE_CHANCE_BREAKDOWN [Law.GetCheckpointDebateChance|v%0]#!#!#!"
 OUTCOME_STALL: "[Concept('concept_enactment_stall', '$concept_enactment_stall_short$')] : #v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_STALL_CHANCE_BREAKDOWN [Law.GetCheckpointStallChance|-%0]#!#!#!"
 LAST_CHECKPOINT_RESULT_SUCCESS: "[Concept( 'concept_enactment_success', '$concept_enactment_success_short$' )]"
 LAST_CHECKPOINT_RESULT_ADVANCE: "[Concept( 'concept_enactment_advance', '$concept_enactment_advance_short$' )]"
 LAST_CHECKPOINT_RESULT_DEBATE: "[Concept( 'concept_enactment_debate', '$concept_enactment_debate_short$' )]"
 LAST_CHECKPOINT_RESULT_STALL: "[Concept( 'concept_enactment_stall', '$concept_enactment_stall_short$' )]"
 CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN: "#header Chances de [Concept( 'concept_enactment_success', '$concept_enactment_success_short$' )|l]#!\nActuellement : [Law.GetCheckpointSuccessChance|v%1][SelectLocalization(StringIsEmpty(Law.GetCheckpointSuccessBreakdown), 'CHECKPOINT_SUCCESS_CHANCE_NO_SUCCESS', 'CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN_DUE_TO')]"
 CHECKPOINT_SUCCESS_CHANCE_NO_SUCCESS: "\n$TOOLTIP_DELIMITER$\n#title Aucun [concept_interest_group|l] [concept_in_government|l] n’[Concept('concept_endorse_oppose','$concept_endorses$')|l] cette [concept_law|l], ni ne soutient de [concept_political_movement|l]#!"
 CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title Ceci s’explique par :#!\n[Law.GetCheckpointSuccessBreakdown]"
 CHECKPOINT_ADVANCE_CHANCE_BREAKDOWN: "#header Chances d’[Concept( 'concept_enactment_advance', '$concept_enactment_advance_short$' )|l]#!\nActuellement : [Law.GetCheckpointAdvanceChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointAdvanceBreakdown)), 'CHECKPOINT_ADVANCE_CHANCE_BREAKDOWN_DUE_TO')]"
 CHECKPOINT_ADVANCE_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title Ceci s’explique par :#!\n[Law.GetCheckpointAdvanceBreakdown]"
 CHECKPOINT_DEBATE_CHANCE_BREAKDOWN: "#header Chances de [Concept( 'concept_enactment_debate', '$concept_enactment_debate_short$' )|l]#!\nActuellement : [Law.GetCheckpointDebateChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointDebateBreakdown)), 'CHECKPOINT_DEBATE_CHANCE_BREAKDOWN_DUE_TO')]"
 CHECKPOINT_DEBATE_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title Ceci s’explique par :#!\n[Law.GetCheckpointDebateBreakdown]"
 CHECKPOINT_STALL_CHANCE_BREAKDOWN: "#header Chances de [Concept('concept_enactment_stall', '$concept_enactment_stall_short$')|l]#!\nActuellement : [Law.GetCheckpointStallChance|v%1][AddLocalizationIf(Not(StringIsEmpty(Law.GetCheckpointStallBreakdown)), 'CHECKPOINT_STALL_CHANCE_BREAKDOWN_DUE_TO')]"
 CHECKPOINT_STALL_CHANCE_BREAKDOWN_DUE_TO: "\n$TOOLTIP_DELIMITER$\n#title Ceci s’explique par :#!\n[Law.GetCheckpointStallBreakdown]"
 ENACTMENT_SUPPORTING_IGS_BREAKDOWN_HEADER: "Des [Concept('concept_interest_group', '$concept_interest_groups$')|l] [concept_in_government|l] ayant donné leur [Concept('concept_endorse_oppose','approbation')] :"
 ENACTMENT_SUPPORTING_IGS_BREAKDOWN_ITEM: "$TAB$[InterestGroup.GetName] : [InterestGroup.GetClout|=v%1]"
 ENACTMENT_OPPOSING_IGS_BREAKDOWN_HEADER: "Des [Concept('concept_interest_group', '$concept_interest_groups$')|l] en opposition ayant une faible [concept_approval|l] :"
 ENACTMENT_OPPOSING_IGS_BREAKDOWN_ITEM: "$TAB$[InterestGroup.GetName] : $VALUE|=v%1$ (#v x$MULTIPLIER|1$#! de $APPROVAL_RATING$)"
 ENACTMENT_STALL_MULT_BREAKDOWN: "La probabilité de blocage est modifiée de $MULTIPLIER|=+$ en raison de :\n$DETAILS$"
 ENACTMENT_SUPPORTING_MOVEMENTS_BREAKDOWN_HEADER: "Des [Concept('concept_political_movement', '$concept_political_movements$')|l] en soutien :"
 ENACTMENT_SUPPORTING_MOVEMENTS_BREAKDOWN_ITEM: "$TAB$[PoliticalMovement.GetName] : $EFFECT|=v%1$"
 ENACTMENT_RULER_BREAKDOWN_ITEM: "[Character.GetFullName] a l’[concept_ideology|l] [Ideology.GetName|l] : $VALUE|=v%1$"
 ENACTMENT_LAW_COMMITMENT_BREAKDOWN_ITEM: "$law_commitment$ dans le traité [TREATY.GetName] : $VALUE|=v%1$"
 ENACTMENT_OPPOSING_MOVEMENTS_BREAKDOWN_HEADER: "Des [Concept('concept_political_movement', '$concept_political_movements$')|l] en opposition :"
 ENACTMENT_OPPOSING_MOVEMENTS_BREAKDOWN_ITEM: "$TAB$[PoliticalMovement.GetName] : $EFFECT|=v%1$"
 ENACTMENT_PAST_CHECKPOINTS_HEADER: "Des points de contrôle précédents :"
 ENACTMENT_DEBATE_CHANCE_EFFECTS_BREAKDOWN: "La probabilité de [concept_enactment_debate|l] de $DEBATE_CHANCE|v%1$ aboutit à :\n$TAB$$DESC$"
 ENACTMENT_FACTOR_ENTRY: "[concept_end_of_discussion_factor] : x$VAL|v2$"
 ENACTMENT_BREAKDOWNS_BASE_CHANCE_ENTRY: "Base : $VAL|v%1$"
 ENACTMENT_BASE_SUCCESS_CHANCE_ENTRY: "[concept_base_success_chance] : $VAL|=v%1$"
 ENACTMENT_SUCCESS_CHANCE_ENTRY: "Probabilité de [concept_enactment_success|l] : $VAL|=v%1$"
 ENACTMENT_ADVANCE_CHANCE_ENTRY: "Probabilité de l’[concept_enactment_advance|l] : $VAL|=v%1$"
 ENACTMENT_ADVANCE_FACTOR_ENTRY: "[concept_advance_factor] : x$VAL|v2$"
 ENACTMENT_STALL_CHANCE_ENTRY: "Probabilité de [concept_enactment_stall|l] : $VAL|=v%1$"
 ENACTMENT_FASTENACT_IS_ACTIVE: "fastenact est actif"
 ENACTMENT_EVENT_DESCRIPTION: "Ceci est un événement de promulgation de loi. Il a #italic probablement#! été déclenché par le dernier point de contrôle pour la promulgation de la loi [Law.GetName]. Le résultat du point de contrôle datant du [Law.GetEnactmentLastCheckpointDate.GetString] était : [Law.GetEnactmentLastCheckpointResult]."
 IMPORTS_TA: "Avantage des import."
 EXPORTS_TA: "Avantage des export."
 LAWS_WITH_GVT_SUPPORT: "Lois avec le soutien du gouvernement ou de mouvement"
 LAWS_WITHOUT_GVT_SUPPORT: "Lois sans soutien du gouvernement ou de mouvement"
 CHEAPEST_LAWS_HEADER: "$LAWS_WITH_GVT_SUPPORT$ ([GetDataModelSize(AccessPlayer.AccessLawsWithGovernmentOrMovementSupport)|v])"
 LAWS_WITHOUT_SUPPORT: "$LAWS_WITHOUT_GVT_SUPPORT$ ([GetDataModelSize(AccessPlayer.AccessLawsWithoutGovernmentOrMovementSupport)|v])"
 CHEAPEST_LAWS_HEADER_REFORM: "$LAWS_WITH_GVT_SUPPORT$ ([GetDataModelSize(ReformGovernment.GetPredictedLawsWithGovernmentOrMovementSupport)|v])"
 LAWS_WITHOUT_SUPPORT_REFORM: "$LAWS_WITHOUT_GVT_SUPPORT$ ([GetDataModelSize(ReformGovernment.GetPredictedLawsWithoutGovernmentOrMovementSupport)|v])"
 LAWS_HAS_CHANGED: "Changera !"
 CHEAPEST_LAWS_IG_HEADER: "#bold Les lois que [InterestGroup.GetName] veut faire passer#!"
 PREDICTED_LAWS_WITH_GVT_SUPPORT: "$LAWS_WITH_GVT_SUPPORT$ ($PREDICTION$)"
 PREDICTED_LAWS_WITHOUT_GVT_SUPPORT: "$LAWS_WITHOUT_GVT_SUPPORT$ ($PREDICTION$)"
 TOOLTIP_CHANGE_FROM_LAW: "#header Changer la [concept_law|l] [LawGroup.GetName|l]#!\nVous avez #variable [LawGroup.GetNumEnactable|+]#! alternatives disponibles à [LawGroup.GetName|l] parmi [Law.GetName|l]"
 TOOLTIP_CHANGE_FROM_LAW_CURRENTLY_ENACTING: "#header Changer la [concept_law|l] [LawGroup.GetName|l]#!\nVous promulguez actuellement [GetPlayer.GetLawBeingEnacted.GetName|l] de [GetPlayer.GetLawBeingEnacted.GetGroup.GetName|l]\nSi vous ne le faisiez pas, vous auriez #variable [LawGroup.GetNumPotentialEnactable|+]#! alternatives à [LawGroup.GetName|l] parmi [Law.GetName|l]"
 PREDICT_LEGITIMACY_TO_ENACT: "La promulgation de cette [concept_law|l] changerait la [concept_legitimacy|l] du [concept_government|l] de #variable $VAL|=+0$#!"
 LAW_BEING_ENACTED: "En cours d’adoption"
 ENACTING_TO_LAW: "Promulgue [GetPlayer.GetLawBeingEnacted.GetName|l]"
 LAW_NO_EFFECT: "#italic Aucun effet#!\n"
 ENACT: "Promulguer"
 ENACT_LAW: "#b Promulguer#! avec #v #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN [Law.GetCheckpointSuccessChance|+0%]#!#!#! de chances de [Concept( 'concept_enactment_success', '$concept_enactment_success_short$' )|l] et #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_STALL_CHANCE_BREAKDOWN [Law.GetCheckpointStallChance|v0%]#!#! de chances de [Concept('concept_enactment_stall', '$concept_enactment_stall_short$')|l] au premier point de contrôle"
 ENACT_LAW_CHANCES_HEADER: "#title Au premier point de contrôle :#!"
 ENACT_LAW_SUCCESS_CHANCE: "@green_checkmark! #v [Law.GetCheckpointSuccessChance|+0%]#!"
 ENACT_LAW_STALL_CHANCE: "@red_cross! #v [Law.GetCheckpointStallChance|-0%]#!"
 SUCCESS_CHANCE_SHORT_CONCEPT: "[Concept( 'concept_enactment_success', '$concept_enactment_success_short$' )]"
 STALL_CHANCE_SHORT_CONCEPT: "[Concept( 'concept_enactment_stall', '$concept_enactment_stall_short$' )]"
 REENACT_LAW: "Promulguer à nouveau"
 CHANGE_FROM_LAW: "Changer"
 LAW_CANNOT_ENACT_TRIGGER_DESC: "Pour promulguer cette loi, vous devez remplir les conditions suivantes :\n$REASON$\n"
 LAW_WOULD_CAUSE_STABILITY_DROP_DESC: "La promulgation de cette [concept_law|l] entraînerait une pénalité de stabilité de #BOLD #N -$VAL|0%$#!#!\n$REASON$\n"
 CHANGE_LAW_HEADER: "#BOLD $concept_law_group$#!"
 LAW_GROUP_DOES_NOT_APPLY_TO_COUNTRY: "Le [concept_law_group|l] for [Law.GetName] ([Law.GetGroupName]) ne s’applique pas [Law.GetCountry.GetAltNameNoFormatting('Au')][Law.GetCountry.GetName]"
 LAW_ALREADY_ENACTED: "[Law.GetName] a déjà été promulguée"
 LAW_ALREADY_ENACTING: "[Law.GetCountry.GetAltNameNoFormatting('Le')|U][Law.GetCountry.GetName] [Law.GetCountry.GetAltNameNoFormatting('EstSont')] déjà en train de promulguer [Law.GetName|l], les progrès réalisés jusqu’à présent sont de #variable [Law.GetCheckpointProgress|%1]#!"
 LAW_IS_CIVIL_WAR: "#N Impossible de le faire pendant la guerre civile !#!"
 LAW_CANNOT_ENACT: "[LAW.GetCountry.GetAltNameNoFormatting('Le')|U][LAW.GetCountry.GetName] [Law.GetCountry.GetAltNameNoFormatting('EstSont')] dans l’incapacité de promulguer des [Concept('concept_law','$concept_laws$')|l]#indent_newline:4 \n[LAW.GetCountry.GetModifier.GetDescFor('country_cannot_enact_laws_bool')]#!"
 LAW_CANNOT_CANCEL_ENACTMENT: "[LAW.GetCountry.GetAltNameNoFormatting('Le')|U][LAW.GetCountry.GetName] [Law.GetCountry.GetAltNameNoFormatting('EstSont')] dans l’incapacité d’annuler la promulgation des [Concept('concept_law','$concept_laws$')|l]#indent_newline:4 \n[LAW.GetCountry.GetModifier.GetDescFor('country_cannot_cancel_law_enactment_bool')]#!"
 LAW_MUST_HAVE_POLITICAL_MOVEMENT: "[LAW.GetCountry.GetAltNameNoFormatting('Le')|U][LAW.GetCountry.GetName] ne peut promulguer [Concept('concept_law','$concept_laws$')|l] qu’avec le soutien d’un [concept_political_movement|l]#indent_newline:4 \n[LAW.GetCountry.GetModifier.GetDescFor('country_must_have_movement_to_enact_laws_bool')]#!"
 CHARACTER_WOULD_START_MOVEMENT: "#header [Character.GetFullNameWithTitle]#!\n$AGITATOR_POLITICAL_MOVEMENT_PREDICTION_INVITE_START$, qui @approves! [Concept('concept_endorse_oppose','$concept_endorses$')|l] [Law.GetName]"
 CHARACTER_WOULD_JOIN_MOVEMENT: "#header [Character.GetFullNameWithTitle]#!\n$AGITATOR_POLITICAL_MOVEMENT_PREDICTION_INVITE_JOIN$, qui @approves! [Concept('concept_endorse_oppose','$concept_endorses$')|l] [Law.GetName]"
 YOU_MUST_HAVE: "Vous #bold devez#! avoir "
 YOU_CANNOT_HAVE: "Vous #bold ne pouvez pas#! avoir "
 ENACTED: " promulgué"
 OR_WITH_SPACE: " $OR$ "
 TOOLTIP_NUM_INVITEABLE_EXILES: "#header Inviter des militants exilés#!\nIl y a #variable [GetExilePool.GetNumInviteableExiles]#! militants exilés qui peuvent être invités [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName]"
 DIPLOMACY: "Diplomatie"
 BUTTON_DIPLOMATIC_OVERVIEW: "#header Diplomatie#!"
 BUTTON_JOURNAL: "#header Journal#!"
 BUTTON_BUILDINGS: "#header Bâtiments#!"
 BUTTON_DECISIONS: "#header Décisions#!"
 LAW_ABOLITION_COST: "Coût de l’abolition : #variable $VAL$@aut!#!"
 LAW_ABOLITION_BASECOST: "Coût de base : #variable $VAL$#!"
 LAW_ABOLITION_PREMIUM: "Prime à la résistance du gouvernement : #N #bold +$VAL$#!#!"
 SWITCHING_TO: "Réforme en cours :"
 ACTIVE_LAWS_TITLE: "#title [Concept('concept_law', '$concept_laws$')]#!"
 ACTIVE_INSTITUTIONS_TITLE: "#title Institutions#!"
 REFORM: "Réforme"
 max_tariffs: "Droits de douane maximum"
 high_tariffs: "Droits de douane élevés"
 low_tariffs: "Droits de douane faibles"
 no_tariffs_or_subventions: "Aucun droit de douane ni subvention"
 low_subventions: "Subventions faibles"
 high_subventions: "Subventions élevées"
 max_subventions: "Subventions maximum"
 expense_level_very_low: "Très bas"
 expense_level_low: "Bas"
 expense_level_medium: "Moyen"
 expense_level_high: "Haut"
 expense_level_very_high: "Très élevé"
 government_wages_very_low: "[concept_budget_government_wages] très bas"
 government_wages_low: "[concept_budget_government_wages] bas"
 government_wages_medium: "[concept_budget_government_wages] moyens"
 government_wages_high: "[concept_budget_government_wages] hauts"
 government_wages_very_high: "[concept_budget_government_wages] très élevés"
 military_wages_very_low: "[concept_budget_military_wages] très bas"
 military_wages_low: "[concept_budget_military_wages] bas"
 military_wages_medium: "[concept_budget_military_wages] moyens"
 military_wages_high: "[concept_budget_military_wages] hauts"
 military_wages_very_high: "[concept_budget_military_wages] très élevés"
 tax_level_very_low: "Très bas"
 tax_level_low: "Bas"
 tax_level_medium: "Moyen"
 tax_level_high: "Haut"
 tax_level_very_high: "Très élevé"
 tax_modifier_very_low: "[concept_budget_income_taxes] très bas"
 tax_modifier_low: "[concept_budget_income_taxes] bas"
 tax_modifier_medium: "[concept_budget_income_taxes] moyens"
 tax_modifier_high: "[concept_budget_income_taxes] élevés"
 tax_modifier_very_high: "[concept_budget_income_taxes] très élevés"
 EFFECTS_FOR_TAX_LEVELS: "Niveaux d’[Concept('concept_taxes','$concept_taxation$')|l] :#indent_newline:3 \n$BREAKDOWN$#!"
 EFFECTS_FOR_CURRENT_TAX_LEVEL: "#variable $LEVEL$#! $TAX_OR_EXPENSE_LEVEL_CURRENT$#indent_newline:3 \n$BREAKDOWN$#!"
 EFFECTS_FOR_OTHER_TAX_LEVEL_TITLE: "#variable $LEVEL$ niveau d’[Concept('concept_taxes','$concept_taxation$')|l]#!\nAvec la [concept_law|l] $LAW$"
 EFFECTS_FOR_OTHER_TAX_LEVEL: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $LEVEL$#!#!#!"
 INCOME_TAX_LEVEL_TITLE: "#title Impôts sur le revenu#!"
 CONSUMPTION_TAX_LEVEL_TITLE: "#title Impôts de consommation#!"
 PREDICTED_TAX_LEVEL_REVENUE: "Recettes prévues : $VALUE|Kv$@money!"
 CURRENT_TAX_LEVEL_REVENUE: "Recettes actuelles : $VALUE|Kv$@money!"
 PREDICTED_TAX_LEVEL_DELTA: "Modification des recettes par rapport au niveau d’imposition actuel : #variable $DELTA_INCOME|+=D$@money!#!"
 PREDICTED_TAX_LAW_DELTA: "Modification des recettes par rapport à la loi fiscale actuelle : #variable $DELTA_INCOME|+=D$@money!#!"
 TAX_LEVEL_HEADER: "#variable Impôt $TAX_LEVEL|l$#!"
 TAX_LEVEL_TAX_LAW: "Loi fiscale : [LawType.GetName]"
 TAX_LEVEL_NO_TAX_LAW: "Loi fiscale : aucune"
 TAXED_GOODS: "[Concept('concept_good', '$concept_goods$')] actuellement soumis à l’impôt : $GOODSDESC$"
 TAX_OR_EXPENSE_LEVEL_EFFECTS_HEADER: "#header Effets :#!"
 TAX_OR_EXPENSE_LEVEL_CURRENT: "#i #b (Niveau actuel)#!#!"
 GOVERNMENT_WAGES_LEVEL: "$GOVERNMENT_WAGES_LEVEL_HEADER$ $CURRENT$\n$TOOLTIP_DELIMITER$\n$TAX_OR_EXPENSE_LEVEL_EFFECTS_HEADER$"
 GOVERNMENT_WAGES_LEVEL_TITLE: "#title Salaires gouvernementaux#!"
 GOVERNMENT_WAGES_LEVEL_HEADER: "#variable Salaires gouvernementaux $EXPENSE_LEVEL|l$#!"
 GOVERNMENT_WAGES_WEEKLY_EXPENSES_CURRENT: "Le salaire gouvernemental annuel moyen de $CURRENT_AVERAGE_ANNUAL_WAGE|v2$@money! coûte $CURRENT_WEEKLY_EXPENSES|vD$@money! par semaine"
 GOVERNMENT_WAGES_WEEKLY_EXPENSES_NEW: "Le changer de #variable $WAGE_CHANGE_MULT|-=%0$#! à $NEW_AVERAGE_ANNUAL_WAGE|v2$@money! $CHANGETYPE$ait les coûts de #variable $DELTA_EXPENSES|-=D$@money!#! à $NEW_WEEKLY_EXPENSES|vD$@money!"
 MILITARY_WAGES_LEVEL: "$MILITARY_WAGES_LEVEL_HEADER$ $CURRENT$\n$TOOLTIP_DELIMITER$\n$TAX_OR_EXPENSE_LEVEL_EFFECTS_HEADER$"
 MILITARY_WAGES_LEVEL_TITLE: "#title Salaires militaires#!"
 MILITARY_WAGES_LEVEL_HEADER: "#variable Salaires militaires $EXPENSE_LEVEL|l$#!"
 MILITARY_WAGES_WEEKLY_EXPENSES_CURRENT: "Le salaire militaire annuel moyen de $CURRENT_AVERAGE_ANNUAL_WAGE|v2$@money! coûte $CURRENT_WEEKLY_EXPENSES|vD$@money! par semaine"
 MILITARY_WAGES_WEEKLY_EXPENSES_NEW: "Le changer de #variable $WAGE_CHANGE_MULT|-=%0$#! à $NEW_AVERAGE_ANNUAL_WAGE|v2$@money! $CHANGETYPE$ait les coûts de #variable $DELTA_EXPENSES|-=D$@money!#! à $NEW_WEEKLY_EXPENSES|vD$@money!"
 EFFECTS_ON_ACCEPTANCE_law_ethnostate: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Les groupes sociaux ayant une faible valeur d’acceptation n’auront pas une vie facile, tandis que ceux ayant un statut supérieur prospéreront davantage#!#!"
 EFFECTS_ON_ACCEPTANCE_law_national_supremacy: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Les groupes sociaux ayant un faible statut d’acceptation sont malmenés, tandis que ceux ayant un statut supérieur sont plus susceptibles d'accepter la politique du gouvernement#!#!"
 EFFECTS_ON_ACCEPTANCE_law_racial_segregation: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Conséquences modérées pour les groupes sociaux ayant une faible valeur d’acceptation#!#!"
 EFFECTS_ON_ACCEPTANCE_law_cultural_exclusion: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Le quotidien des groupes sociaux ayant le plus faible statut d’acceptation n’est pas facile, mais supportable#!#!"
 EFFECTS_ON_ACCEPTANCE_law_multicultural: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Les groupes sociaux mèneront une vie similaire avec peu de conséquences négatives, même s’ils ne sont pas aussi acceptés#!#!"
 WELFARE_PAYMENTS_BREAKDOWN: "#tooltip_header Prestations d’aide sociale#!\nTotal : #v #N -[GetPlayer.GetWelfarePaymentsExpenses|D-]@money!"
 NO_TARIFFS: "Aucun [concept_good|l] n’est soumis à des [concept_tariffs|l]"
 NO_TARIFFS_SINGLE_GOOD: "Pas de [concept_tariffs|l] ni de [concept_subventions|l] de $DIRECTION$ pour [Goods.GetCustom('FR_Goods_Le')][Goods.GetName|l]"
 PREDICTED_TARIFFS_SUBVENTIONS_GOODS_ENTRY: "$VALUE|Kv$@money! pour [GOODS.Custom('FR_Goods_Le')][GOODS.GetName] [GOODS.GetTextIcon]"
 PREDICTED_TARIFF_RATE: "$VALUE|%1v$ de taux de droits de douane moyen (#v x$MULTIPLIER$#! pour $TARIFF_LEVEL|v$)"
 PREDICTED_SUBVENTION_RATE: "$VALUE|%1v$ de taux de subventions moyen (#v x$MULTIPLIER$#! pour $TARIFF_LEVEL|v$)"
 PREDICTED_TARIFF_LEVEL_REVENUE: "$VALUE|K+$@money! de recettes prévues"
 PREDICTED_TARIFF_LEVEL_COST: "$VALUE|K-$@money! de coûts prévus"
 PREDICTED_TARIFF_LEVEL_NO_REVENUE_OR_COST: "Pas de recettes ni de coûts prévus"
 PREDICTED_TARIFF_LEVEL_DELTA: "$DELTA_INCOME|+=D$@money! de changement dans les recettes par rapport au niveau actuel"
 PREDICTED_TARIFF_LAW_DELTA: "$DELTA_INCOME|+=D$@money! de changement dans les recettes par rapport à la loi actuelle"
 PREDICTED_SUBVENTION_LAW_DELTA: "$DELTA_COST|-=D$@money! de changement dans les coûts par rapport à la loi actuelle"
 TARIFF_LEVEL_HEADER: " #header $TARIFF_LEVEL$ pour $DIRECTION$#!"
 TARIFF_LEVEL_TARIFF_LAW: "Politique commerciale : [LawType.GetName|l]"
 TARIFF_LEVEL_NO_TARIFF_LAW: "Politique commerciale : aucune"
 SET_TARIFF_LEVEL_ALREADY_ACTIVE: "[concept_tariffs]/[concept_subventions] déjà définis à $LEVEL|v$"
 SET_TARIFF_LEVEL_NOT_ALLOWED: "Notre politique commerciale ou les traités signés ne nous permettent pas de définir à $LEVEL|v$"
 SET_TARIFF_LEVEL_NOT_MARKET_OWNER: "Seul le [concept_market_owner|l] peut déterminer les niveaux des [Concept('concept_tariffs','$concept_tariff$')|l]"
 TARIFF_LEVEL_MULTIPLIER_EFFECT: "#v x$MULTIPLIER$#! de $LEVEL|v$"
 TREATY_PORT_NO_TARIFFS_OR_SUBVENTIONS: "Les [concept_tariffs|l] et les [concept_subventions|l] ne s’appliquent pas aux [Concept('concept_treaty_port','$concept_treaty_ports$')|l]"
 SET_TARIFF_LEVEL_ON_COOLDOWN: "Les [concept_tariffs|l] et les [concept_subventions|l] ne pourront pas être modifiés avant $DATE|v$"
 LOCAL_PRICES: "Prix locaux"
 LAW_FROM_TO: "[GetPlayer.GetActiveLawFromGroup(Law.GetGroup.GetKey).GetName] à [Law.GetName|l]"
 GROW_INSTITUTION: "#header Augmenter le niveau d’investissement de [INSTITUTION.GetName]#!"
 SHRINK_INSTITUTION: "#header Diminuer le niveau d’investissement de [INSTITUTION.GetName]#!"
 INSTITUTION_CHANGE_TITLE: "#bold Effet du niveau $LEVEL|vl$ :#!"
 CANCEL_INSTITUTION_SIZE_CHANGE_TOOLTIP: "Annuler l’augmentation du niveau d’investissement de l’institution"
 LAW_INSTITUTION_TOOLTIP: "#header [Law.GetInstitutionType.GetName]#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 INSTITUTION_TYPE_EFFECT_PER_LEVEL: "#b Effet par niveau de [INSTITUTION_TYPE.GetName|l] :#!\n$BREAKDOWN$"
 LAW_INSTITUTION_EFFECT_PER_LEVEL: "#b Effet par niveau de [Law.GetName|l] :#!\n$BREAKDOWN$"
 INSTITUTION_PROVIDING_LAWS: "[concept_law] $LAW_LIST|l$"
 DISABLES_INSTITUTION: "Désactive l’[concept_institution|l] [INSTITUTION.GetName|l]"
 PROVIDES_INSTITUTION_TYPE: "Active l’[concept_institution|l] [INSTITUTION_TYPE.GetName|l]\nCoût supplémentaire en $BUREAUCRACY$ : $COST|=v1$"
 PROVIDES_INSTITUTION: "Active l’[concept_institution|l] [INSTITUTION.GetName|l]"
 INSTITUTION_TYPE_NEW_EFFECT: "[LawType.GetName] fournirait [INSTITUTION_TYPE.GetName] (niveau #v 1#!) avec :\n$EFFECTS$"
 INSTITUTION_NEW_EFFECT: "[LawType.GetName] fournirait [INSTITUTION.GetName] (niveau [Institution.GetInvestmentLevel|v]) avec :\n$EFFECTS$"
 INSTITUTION_SAME_EFFECT: "[LawType.GetName] fournit [Institution.GetName] (niveau [Institution.GetInvestmentLevel|v]) avec :\n$EFFECTS$"
 COUNTRY_CANNOT_AFFORD_NEW_INSTITUTION_TYPE: "@red_cross! [Law.GetCountry.GetAltNameNoFormatting('Le')|U][Law.GetCountry.GetName] ne dispose pas de #v [Multiply_CFixedPoint(GetPlayer.GetInstitutionInvestmentBureaucracyFactor,'(CFixedPoint)-1')] @bur!#! en [concept_bureaucracy|l] pour financer une nouvelle [concept_institution|l] [INSTITUTION_TYPE.GetName|l]"
 INVESTMENT_CURRENT_LEVEL: "C’est le [concept_investment_level|l] actuel."
 INVESTMENT_TOO_LOW: "Vous ne pouvez pas réduire votre niveau d’investissement dans cette institution en dessous de son niveau minimum de $MIN|v$."
 INVESTMENT_TOO_HIGH: "Vous ne pouvez pas augmenter votre niveau d’investissement dans cette institution au-delà de son niveau maximum de $MAX|v$.\n\nLe niveau maximal de cette institution s’explique par :\n$BREAKDOWN$"
 INVESTMENT_EXCEEDS_INCOME: "Vous ne disposez pas des #v $BUR_REQ|0$ @bur!#! points de [concept_bureaucracy|l] requis pour ce niveau d’investissement."
 INVESTMENT_WEEKLY_COST_CHANGE: "Changement de coût hebdomadaire : #variable $COSTCHANGE|1=$@bur!#!"
 LAW_DOES_NOT_SUPPORT_INVESTMENT: "Cette loi n’a pas de [Concept('concept_investment_level', '$concept_investment_levels$')|l]"
 ON_RESEARCHED: "#title En cas de recherche :#!"
 ON_ENACT: "#title En cas de promulgation :#!"
 ON_REVOKE: "#title En cas de révocation :#!"
 ON_REVOKE_ACTIVE: "#title Lorsque la loi $LAW|l$ en vigueur sera révoquée#!"
 THIS_IS_DUE_TO: "#title L’effet total de cette loi s’explique par :#!"
 LAW_EFFECT: "#bold Effet(s) :#!"
 LAW_EFFECT_FOR_LEVEL: "#bold Effet(s) pour le [concept_investment_level|l] #variable $LEVEL$#! :#!"
 BASE_LAW_EFFECT: "#bold Effet(s) de base :#!"
 FOR_EACH_LAW_INVESTMENT_LEVEL: "#bold Effet(s) par [concept_investment_level|l] :#!"
 LAW_EFFECT_FOR_CURRENT_INVESTMENT_LEVEL: "#bold Vous obtenez actuellement les résultats suivants pour le [concept_investment_level|l] #variable $LEVEL$#! :#!"
 LAW_EFFECT_FOR_TARGET_INVESTMENT_LEVEL: "#bold Vous obtiendrez les résultats suivants pour le [concept_investment_level|l] #variable $LEVEL$#! :#!"
 LAW_ALLOWED_BUILDING_GROUPS_FROM_INVESTMENT_POOL: "Le [concept_investment_pool|l] peut être utilisé pour construire "
 CULTURE_ACCEPT_RULE_CHANGE: "Une ou plusieurs [Concept('concept_culture','$concept_cultures$')|l] seront [Concept('concept_accepted_culture','$concept_accepted_culture_short$es')|l] en fonction de :\n" #this loc string is likely to be cut, see C++ code that uses it
 RELIGION_ACCEPT_RULE_CHANGE: "Une ou plusieurs [Concept('concept_religion','$concept_religions$')|l] seront [Concept('concept_accepted_religion','$concept_accepted_religion_short$es')|l] en fonction de :\n" #this loc string is likely to be cut, see C++ code that uses it
 ONE_OR_MANY_CULTURES: "Culture(s)"
 ONE_OR_MANY_RELIGIONS: "Religion(s)"
 MARKET_TITLE: "#title Marché#!"
 UNITS_PRODUCED_TITLE: "#title Unités produites#!"
 PRICE_TITLE: "#title Prix#!"
 IMPORTED: "Importé"
 EXPORTED: "Exporté"
 ARMY_STOCKPILE: "Stock de l’armée"
 NAVY_STOCKPILE: "Stock de la marine"
 CHARACTER_NAME_FORMAT: "$FIRST$ $LAST$"
 CHARACTER_NAME_WITH_TITLE_FORMAT: "$TITLE$ $FIRST$ $LAST$"
 TO_MARKET: "Vers le [MARKET.GetName|l]"
 FROM_MARKET: "Depuis le [MARKET.GetName|l]"
 CHARACTER_PANEL_SUBTITLE: "[SelectLocalization( Character.IsInExilePool, 'CHARACTER_PANEL_SUBTITLE_EXILE', 'CHARACTER_PANEL_SUBTITLE_GENERAL_AT_FRONT' )]"
 CHARACTER_PANEL_SUBTITLE_EXILE: "[Character.GetPrimaryRoleName] [Concept('concept_exile', '$concept_in_exile$')|l]"
 CHARACTER_PANEL_SUBTITLE_GENERAL_AT_FRONT: "[SelectLocalization( And( Not( Character.IsInExilePool ), And( Character.IsGeneral, Character.IsAtFront ) ), 'CHARACTER_PANEL_SUBTITLE_GENERAL_AT_FRONT_YES' , 'CHARACTER_PANEL_SUBTITLE_ADMIRAL_RAIDING_SEA_REGION') ]"
 CHARACTER_PANEL_SUBTITLE_GENERAL_AT_FRONT_YES: "[Character.GetPrimaryRoleTitle] au [Character.GetFront.GetName|l]"
 CHARACTER_PANEL_SUBTITLE_ADMIRAL_RAIDING_SEA_REGION: "[SelectLocalization( And(Not( Character.IsInExilePool ), And(Character.IsAdmiral, Character.GetOrderType.IsRaidConvoys) ), 'CHARACTER_PANEL_SUBTITLE_ADMIRAL_RAIDING_SEA_REGION_YES' , 'CHARACTER_PANEL_SUBTITLE_OTHER') ]"
 CHARACTER_PANEL_SUBTITLE_ADMIRAL_RAIDING_SEA_REGION_YES: "[Character.GetPrimaryRoleTitle]"
 CHARACTER_PANEL_SUBTITLE_OTHER: "[SelectLocalization(Character.IsRuler, Concept('concept_ruler', Character.GetPrimaryRoleTitle), Character.GetPrimaryRoleName)] [SelectLocalization(Character.IsRuler, Character.GetCountry.GetAltNameNoFormatting('Du'),Character.GetCountry.GetAltNameNoFormatting('En'))][Character.GetCountry.GetName]"
 INSUFFICIENT_AUT: "Vous avez besoin de #variable #N $VAL$#!#! en $AUTHORITY$ mais n’avez que #variable $CURRENT$#!"
 INSUFFICIENT_BUR: "Vous avez besoin de #variable #N $VAL$#!#! en $BUREAUCRACY$ mais n’avez que #variable $CURRENT$#!"
 INSUFFICIENT_DIP: "Vous avez besoin de #variable #N $VAL$#!#! en $INFLUENCE$ mais n’avez que #variable $CURRENT$#!"
 GDP: "[concept_gdp]"
 GDP_SHORT: "[Concept('concept_gdp', '$concept_gdp_short$')]"
 TOOLTIP_GDP: "Le [concept_gdp|l] est basé sur la [concept_good_production|l] de biens et leurs prix sur le marché"
 GDP_OWNED_BY_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|%1v$#!#!"
 GDP_OWNED_BY_ENTRY: "$VALUE|%2v$ (@money!$PRODUCED|Dv$) en [State.GetName]"
 GDP_OWNED_BY_TOOLTIP_NONE: "#header $OTHER_COUNTRY$ ne possède aucune partie du [concept_gdp] [Country.GetAltAdjective('MS')|l]#!"
 GDP_OWNED_BY_TOOLTIP: "#header [concept_gdp] [Country.GetAltAdjective('MS')|l] détenu par $OTHER_COUNTRY$#!\nValeur : $VALUE|%1v$\n$TOOLTIP_DELIMITER$\n[Concept('concept_state','$concept_states$')] qui contribuent le plus :\n$BREAKDOWN$"
 GDP_OWNED_BY_STATE_TOOLTIP_NONE: "#header $OTHER_COUNTRY$ ne possède aucune partie du [concept_gdp] en [State.GetName]#!"
 GDP_OWNED_BY_STATE_TOOLTIP: "#header [concept_gdp] en [State.GetName] détenu par $OTHER_COUNTRY$#!\nValeur : $VALUE|%1v$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 GDP_OWNED_BY_STATE_ENTRY_THIS: "$VALUE|%2v$ ($PRODUCED|Dv$@money!) par [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 GDP_OWNED_BY_STATE_ENTRY_NOT_THIS: "#italic $GDP_OWNED_BY_STATE_ENTRY_THIS$#!"
 GOV_EXP_SHORT: "[Concept('concept_government_expenses', '$concept_government_expenses_short$')]"
 CREDIT: "[concept_credit]"
 CREDIT_TOOLTIP: "#header Plafond de crédit : #N $CREDIT|Dv$@money!#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$\n\n[concept_credit_desc]"
 CREDIT_DETAIL_BASE: "Base : #N $BASE|Dv$@money!#!"
 CREDIT_DETAIL: "[BUILDING_TYPE.GetName] : #N $RESERVES|Dv$@money!#!"
 GOLD_RESERVE_LIMIT: "Plafond des réserves d’or : #N $LIMIT|Dv$@money!#![ConcatIfNeitherEmpty('\n','$MODIFIER$')]\n\n[concept_gold_reserves_desc]"
 RESERVES: "Réserves :"
 PRINCIPAL: "[concept_principal] :"
 TOOLTIP_PRINCIPAL: "#header [concept_principal]#!\n$TOOLTIP_DELIMITER$\n[concept_principal_desc]"
 REMAINING_CREDIT: "[concept_credit] restant :"
 NO_MODIFIER_DATA_COLLECTED: "Aucune donnée sur les modificateurs n’a été collectée, la répartition des modificateurs n’est pas stockée dans la sauvegarde afin de réduire la taille de la sauvegarde, essayez d’exécuter le jeu un certain temps pour obtenir une répartition correcte."
 DOMESTIC_LOANS: "#title [concept_loans]#!"
 TOOLTIP_DOMESTIC_LOANS: "#header [concept_loans]#!\n$TOOLTIP_DELIMITER$\n[concept_loans_desc]"
 INTEREST_RATE: "Taux d’intérêt : #variable [GetPlayer.GetYearlyInterestRate|1%]#!"
 TOOLTIP_INTEREST_RATE: "#header Taux d’intérêt#!\nLa semaine dernière, vous avez payé #variable [GetPlayer.GetInterestPayment|1]#!@money! en intérêts à un taux d’intérêt annuel de #variable [GetPlayer.GetYearlyInterestRate|2%]#!\n$TOOLTIP_DELIMITER$\n"
 TOOLTIP_INTEREST_RATE_ADD: "#BOLD #V Modificateurs de taux d’intérêt additifs#!#!"
 TOOLTIP_INTEREST_RATE_PER_LOAN: "#BOLD #V Modificateurs de taux d’intérêt par prêt#!#!"
 TOOLTIP_INTEREST_RATE_MULT: "#BOLD #V Modificateurs de taux d’intérêt multiplicatifs#!#!"
 TOOLTIP_INTEREST_RATE_GOVERNMENT_OWNED_DEBT: "Multiplié par #v x$MULTIPLIER$#! en raison des [Concept('concept_building','$concept_buildings$')|l] nationalisés"
 TAKE_LOAN: "Emprunter #variable [GetPlayer.GetLoanIncrement|1*]@money!#!"
 TOOK_LOAN: "A contracté un prêt intérieur"
 TOOLTIP_TAKE_LOAN: "#header Emprunter#!\n$TOOLTIP_DELIMITER$\nEmprunter #variable $AMOUNT$@money!#! auprès de sources nationales.\nCela augmentera votre capital et votre taux d’intérêt\n\n"
 TAKE_LOAN_NOT_ENOUGH_CREDIT: "#N Vous n’avez pas assez de crédit pour contracter un autre prêt !#!"
 TAKE_LOAN_NEGATIVE_CASHFLOW: "#N Vos dépenses prévues pour la semaine prochaine sont supérieures à votre trésorerie actuelle !#!"
 TAKE_LOAN_NOT_ENOUGH_POWER: "#N Vous ne disposez pas d’un capital de puissance suffisant pour contracter un prêt !#!"
 PAY_BACK_LOAN: "Rembourser #variable $AMOUNT|1*$@money!#!"
 PAID_BACK_LOAN: "A remboursé un prêt intérieur"
 TOOLTIP_PAY_BACK_LOAN: "#header Rembourser le prêt#!\n$TOOLTIP_DELIMITER$\nRembourser #variable $AMOUNT$@money!#! de nos prêts intérieurs.\nCela diminuera notre capital et notre taux d’intérêt\n\n"
 PAY_BACK_LOAN_NOT_ENOUGH_MONEY: "#N Vous n’avez pas assez d’argent pour rembourser vos prêts !#!"
 PAY_BACK_LOAN_NO_LOANS: "#N Vous n’avez aucun prêt à rembourser !#!"
 PAY_BACK_LOAN_NOT_ENOUGH_POWER: "#N Vous n’avez pas assez de capital de puissance pour rembourser les prêts !#!"
 PAY_BACK_SEVERAL_LOANS: "Rembourser #variable $AMOUNT$@money!#!"
 PAID_BACK_SEVERAL_LOANS: "Remboursement de plusieurs prêts intérieurs"
 TOOLTIP_PAY_BACK_SEVERAL_LOANS: "#header Rembourser tous les prêts#!\n$TOOLTIP_DELIMITER$\nRembourser #variable $AMOUNT$@money!#!.\nCela réduira notre capital et notre taux d’intérêt\n\n"
 NAVAL_MISSION_NOT_HOSTILE: "#N L’État ciblé n’appartient pas à une nation avec laquelle vous êtes en guerre !#!"
 NAVAL_MISSION_NO_COASTLINE: "#N L’État ciblé n’est pas un État côtier !#!"
 NAVAL_MISSION_NO_PORT: "#N L’État ciblé n’a pas de ports !#!"
 NAVAL_INVASION_NO_BEACHHEAD: "#N L’État ciblé n’a pas de province où nous pouvons créer une tête de pont !#!"
 BLOCKADE_MISSION_NOT_AT_WAR: "#N On ne peut bloquer les ports que lorsqu’on est en guerre !#!"
 TIMED_MODIFIERS: "[Concept('concept_timed_modifier', '$concept_timed_modifiers$')]"
 maintain: "Maintenir"
 maintain_desc: "Le personnage maintient une présence navale ici et peut saisir les occasions d’interception ou d’esquive qui se présentent."
 evade: "Esquiver"
 evade_desc: "Le personnage doit échapper aux flottes ennemies, en coulant les navires des flottilles de ravitaillement comme il le peut sans révéler sa position."
 bulwark: "Escorte"
 bulwark_desc: "Le personnage escorte des flottilles de ravitaillement amies pour les protéger et fait ainsi des dégâts minimes aux forces ennemies."
 CASUALTIES_DUE_TO_ATTRITION_TOOLTIP: "#header Pertes dues à l’attrition#!\nDe la désertion : #variable $SPIRIT_SP|+=3$#! PF au dernier calcul\nDe la concentration inférieure : #variable $CONCENTRATION_SP|+=3$#! PF au dernier calcul"
 AGITATORS_IN_QUEUE: "#v [GetDataModelSize(PoliticalMovement.GetBottomSupportingCharacters)|=]#!"
 AGITATORS_IN_QUEUE_DESC_ENTRY: "[CHARACTER.GetFullName] - [LabelingHelper.GetLabelForSupport(PoliticalMovement.GetCharacterSupport(CHARACTER.Self))] (#tooltippable #tooltip:[GetRawTextTooltipTag(PoliticalMovement.GetCharacterSupportDesc(CHARACTER.Self))] [PoliticalMovement.GetCharacterSupport(CHARACTER.Self)|v0]#!)#!"
 outliner_title_wars: "#outliner_header Guerres#!"
 outliner_title_diplo_plays: "#outliner_header Coups diplomatiques#!"
 outliner_title_situations: "#outliner_header Événements#!"
 outliner_title_commanders: "#outliner_header Commandants#!"
 outliner_title_formations: "#outliner_header Formations#!"
 outliner_title_politicians: "#outliner_header Politiciens#!"
 outliner_title_countries: "#outliner_header Pays#!"
 outliner_title_unrecognized_countries: "#outliner_header Pays non reconnus#!"
 outliner_title_generals: "#outliner_header Généraux#!"
 outliner_title_admirals: "#outliner_header Amiraux#!"
 outliner_title_army: "#outliner_header Armée#!  (#tooltip:[GetPlayer.GetTooltipTag],PANEL_MILITARY_ARMY_OVERVIEW_TOOLTIP #variable @battalions![GetPlayer.GetBattalions|0]#!#!)"
 outliner_title_navy: "#outliner_header Marine#!  (#tooltip:[GetPlayer.GetTooltipTag],PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP #variable @navy_SP![GetPlayer.GetWarships|0]#!#!)"
 outliner_title_agitators: "#outliner_header Militants#!"
 outliner_title_companies: "#outliner_header Compagnies#!"
 outliner_title_interest_groups: "#outliner_header Groupes d’intérêt#!"
 outliner_title_marginalized_interest_groups: "#outliner_header Groupes marginalisés#!"
 outliner_title_markets: "#outliner_header Marchés#!"
 outliner_title_isolated_states: "#outliner_header États isolés#!"
 outliner_title_colonies: "#outliner_header Colonies#!"
 outliner_title_states: "#outliner_header États#!"
 outliner_title_unincorporated_states: "#outliner_header Territoire non incorporé#!"
 outliner_title_players: "#outliner_header Joueurs#!"
 outliner_title_market: "#outliner_header [OutlinerEntry.AccessScope.AccessMarket.GetNameNoFormatting]#!"
 outliner_title_goods: "#outliner_header Biens#!"
 outliner_title_staple: "#outliner_header Biens essentiels#!"
 outliner_title_industrial: "#outliner_header Biens industriels#!"
 outliner_title_luxury: "#outliner_header Biens de luxe#!"
 outliner_title_military: "#outliner_header Biens militaires#!"
 outliner_title_buildings: "#outliner_header Bâtiments#!"
 outliner_title_building_type: "#outliner_header [OutlinerEntry.AccessScope.AccessBuildingType.GetNameNoFormatting]#!"
 outliner_title_political_lobbies: "#outliner_header Lobbies politiques#!"
 outliner_title_non_revolutionary_political_movements: "#outliner_header Mouvements politiques#!"
 outliner_title_treaties: "#outliner_header Traités#!"
 ADD_ANYTHING_TO_OUTLINER: "#title Vous pouvez épingler plus de choses ici !#!"
 POLITICS_PANEL_HEADER: "Politique"
 LAW_CATEGORIES_HEADER: "Catégories juridiques#!"
 POLITICS_PANEL_HEADER_CHANGE_CONSTITUTION: "#BOLD Modifier la [concept_law|l]#!"
 POLITICS_PANEL_HEADER_CHANGE_LAW: "#BOLD Modifier la loi#!"
 EXILE_POOL_INTEREST_GROUP_FILTER: "[SelectLocalization(GetExilePool.IsInterestGroupFilteredToShowOnly(InterestGroup.Self), 'EXILE_POOL_INTEREST_GROUP_FILTER_RESET', 'EXILE_POOL_INTEREST_GROUP_FILTER_SHOW_ONLY')]\n[SelectLocalization(GetExilePool.IsInterestGroupFiltered(InterestGroup.Self), 'EXILE_POOL_INTEREST_GROUP_FILTER_SHOW', 'EXILE_POOL_INTEREST_GROUP_FILTER_HIDE')]"
 EXILE_POOL_INTEREST_GROUP_FILTER_SHOW_ONLY: "#instruction Cliquez#! pour afficher uniquement les [Concept('concept_agitator','$concept_agitators$')|l] [Concept('concept_exile','$concept_exiles$')|l] soutenant le groupe d’intérêt [InterestGroup.GetName]"
 EXILE_POOL_INTEREST_GROUP_FILTER_RESET: "#instruction Cliquez#! pour réinitialiser les filtres"
 EXILE_POOL_INTEREST_GROUP_FILTER_SHOW: "#instruction $SHORTCUT_KEY_MOD_shift$Cliquez#! pour afficher les [Concept('concept_agitator','$concept_agitators$')|l] [Concept('concept_exile','$concept_exiles$')|l] soutenant le groupe d’intérêt [InterestGroup.GetName]"
 EXILE_POOL_INTEREST_GROUP_FILTER_HIDE: "#instruction $SHORTCUT_KEY_MOD_shift$Cliquez#! pour masquer les [Concept('concept_agitator','$concept_agitators$')|l] [Concept('concept_exile','$concept_exiles$')|l] soutenant le groupe d’intérêt [InterestGroup.GetName]"
 NO_EXILED_AGITATORS: "Aucun [concept_agitator|l] [Concept('concept_exile','$concept_exiled$')] dans les [Concept('concept_interest_group','$concept_interest_groups$')|l] sélectionnés"
 ENACT_NEW_LAW: "Promulguer une loi"
 ABOLISH: "Abolir"
 NO_MARKET_SHORTAGES: "Aucune [concept_shortage|l] de biens du marché"
 NARROW_VICTORY: "Victoire de justesse dans la $BATTLE_NAME$"
 NARROW_LOSS: "Défaite imprévue dans la $BATTLE_NAME$"
 NORMAL_VICTORY: "Victoire sur le champ de bataille dans la $BATTLE_NAME$"
 NORMAL_LOSS: "Défaite sur le champ de bataille dans la $BATTLE_NAME$"
 HEROIC_VICTORY: "Victoire héroïque dans la $BATTLE_NAME$"
 HEROIC_LOSS: "Défaite humiliante dans la $BATTLE_NAME$"
 YEARLYGROWTH: "Croissance annuelle nette : #variable $NETGROWTHRATE|%=+1$#!"
 YEARLYBIRTHS: "Naissances annuelles : #variable $VAL|+0$#! (Taux de natalité annuel : #tooltippable #tooltip:$BREAKDOWN_TAG$ $BIRTHRATE|%1=+$#!#!)"
 BIRTHS_FROM_SOL: "Du [concept_sol|l] : #variable $VAL|+=0$#!"
 YEARLYDEATHS: "Décès annuels : #variable $VAL|-0$#! (mortalité annuelle : #tooltippable #tooltip:$BREAKDOWN_TAG$ $MORTALITY|%1=-$#!#!)"
 DEATHS_FROM_SOL: "Du [concept_sol|l] : #variable $VAL|-=0$#!"
 CURRENTLITERACY: "Individus alphabétisés de la population totale d’un [concept_pop|l] : $VAL|1*v$\nTaux d’alphabétisation : $RATE|%2v$ $TRENDARROW$"
 POP_ASSIMILATION: "#header [concept_assimilation] mensuelle à la culture [CULTURE.GetName|l] : $TOTAL_ASSIMILATED_POPS|v0$#!\n$TOOLTIP_DELIMITER$\nBase : $BASE_ASSIMILATED_POPS|v0$\n$TAB$$POPULATION$ : [Pop.GetTotalSize|Dv]\n$TAB$Taux d’assimilation de base : $BASE_RATE|v3%$[ConcatIfNeitherEmpty('\n','$MODIFIER_DESC$')]\nPuisque les [Pop.GetName|l] ont une [concept_acceptance|l] suffisamment élevée, vivent dans un [concept_incorporated_state] et ne considèrent pas [Pop.GetState.GetName] comme une [concept_homeland|l], ils s’assimilent à la culture [CULTURE.GetName] car il s’agit de la culture la mieux acceptée avec laquelle ils partagent un [concept_cultural_heritage_trait|l]."
 POP_CONVERSION: "#header [concept_conversion] mensuelle à la religion [RELIGION.GetName|l] : $TOTAL_CONVERTED_POPS|v0$#!\n$TOOLTIP_DELIMITER$\nBase : $BASE_CONVERTED_POPS|v0$\n$TAB$$POPULATION$ : [Pop.GetTotalSize|Dv]\n$TAB$Taux de conversion de base : $BASE_RATE|v3%$[ConcatIfNeitherEmpty('\n','$MODIFIER_DESC$')]\nLa religion [RELIGION.GetName|l] est choisie car elle est la [concept_religion|l] la plus acceptée en [Pop.GetState.GetName]"
 POP_ASSIMILATION_RADICALS: "Le taux d’assimilation de base est multiplié par $FACTOR|2v$ en raison des $RADICALS_FRACTION|v%$ de [Concept('concept_radical', '$concept_radicals$')|l]\n"
 POP_ASSIMILATION_MIN: "Assimilation minimale de $MIN|v$\n"
 POP_CONVERSION_RADICALS: "Le taux de conversion de base est multiplié par $MULT|2v$ en raison des $RADICALS_FRACTION|v%$ de [Concept('concept_radical', '$concept_radicals$')|l]\n"
 POP_CONVERSION_UNINCORPORATED: "Le taux de conversion de base est multiplié par $MULT|2v$ dans les [Concept('concept_unincorporated_state','$concept_unincorporated_states$')]\n"
 POP_CONVERSION_MIN: "Conversion minimale de $MIN|v$\n"
 EDUCATION_ACCESS_HEADER: "[concept_education_access] : #tooltippable #tooltip:$TAG$,EDUCATION_ACCESS_DETAILS_TOOLTIP $VAL|2%$#!#!"
 EDUCATION_ACCESS_DETAILS: "#header [concept_education_access]#!\nAccès à l’éducation : [POP.GetEducationAccess|2%v]\nRichesse : [POP.GetCurrentWealth|v]\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 EDUCATION_ACCESS_UNIVERSAL: "Du niveau d’éducation de #b $INSTITUTE_LEVEL|v$#! : #b $VALUE|=+2%$#!"
 EDUCATION_ACCESS_DETAILS_TOOLTIP: "[Pop.GetEducationAccessDetailsDesc]"
 EDUCATION_ACCESS_FROM_WEALTH: "Du niveau de [concept_wealth|l] de $WEALTH|v$ : #b $TOTAL|=+2%$#!\n#P #b $PER_LEVEL|%|2$#!#! pour chaque niveau de [concept_wealth|l] :"
 EDUCATION_ACCESS_POP_TYPE: "De la [concept_profession|l] des [POP.GetPopType.GetName|l] : #b $VALUE|=+%2$#!"
 INSTITUTION_FROM_EACH_LEVEL: "chaque niveau de $INSTITUTION_TYPE$ (#b $INSTITUTE_LEVEL|v$#!)"
 INSTITUTION_PER_LEVEL: "par niveau de $INSTITUTION_TYPE$ (#b $INSTITUTE_LEVEL|v$#!)"
 STATE_POTENTIAL_QUALIFICATIONS: "#header [concept_pop_qualifications] potentiellement employables en [State.GetName]#!\n$STATE_QUALIFICATIONS_SUMMARY$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 INSUFFICIENT_QUALIFICATIONS_TO_FILL_POSITIONS: "@red_cross! $POSITIONS|vD$ [POP_TYPE.GetName] nécessaires au plein emploi, seulement $QUALIFICATIONS|vD$ disponibles"
 #[State.GetPotentialQualificationsDesc]
 STATE_QUALIFICATIONS_SUMMARY: "[SelectLocalization(State.HasInsufficientQualificationsForAvailablePositions, '$INSUFFICIENT_QUALIFICATIONS$', '$SUFFICIENT_QUALIFICATIONS$')]"
 INSUFFICIENT_QUALIFICATIONS: "@red_cross! Ne possède pas les qualifications potentiellement employables pour pourvoir tous les postes vacants actuels"
 SUFFICIENT_QUALIFICATIONS: "@green_checkmark! Possède les qualifications potentiellement employables pour pourvoir tous les postes vacants actuels"
 STATE_POTENTIAL_QUALIFICATIONS_ENTRY: "#tooltippable #tooltip:[State.GetTooltipTag]|[PopType.GetTooltipTag],STATE_POTENTIAL_POPTYPE_QUALIFICATIONS $POTENTIAL_QUALIFICATIONS|vD$#!#! [PopType.GetName] ($POTENTIAL_QUALIFICATIONS_CHANGE|=vD$ / mois)"
 STATE_POTENTIAL_POPTYPE_QUALIFICATIONS: "[State.GetPotentialQualificationsBreakdown(PopType.Self)]"
 STATE_POTENTIAL_QUALIFICATIONS_BREAKDOWN: "#header [PopType.GetName] potentiellement employable en [State.GetName] : [State.GetPotentialQualifications(PopType.Self)|vD]#!\nChangement mensuel : $TOTAL_QUALIFICATIONS_CHANGE|=vD$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 STATE_POTENTIAL_QUALIFICATIONS_BREAKDOWN_ENTRY: "$EMPLOYABLE_QUALIFICATIONS|vD$ [Pop.GetName|l] [AddTextIf( Not(Pop.IsEmployed), '$concept_unemployed$')|l] [AddTextIf( Pop.IsEmployed, Concatenate('dans ', Pop.GetBuilding.GetName))] (#tooltippable #tooltip:[Pop.GetTooltipTag]|[PopType.GetTooltipTag],POP_POPTYPE_QUALIFICATIONS_CHANGE $QUALIFICATIONS_CHANGE|=vD$#!#! / mois)"
 POP_POPTYPE_QUALIFICATIONS_CHANGE: "[Pop.GetQualificationsChangeDesc(PopType.Self)]"
 POP_QUALIFICATIONS_ENTRY: "[PopType.GetName] : $QUALIFICATIONS|vD$ (#tooltippable #tooltip:$TAG$|[PopType.GetTooltipTag],POP_POPTYPE_QUALIFICATIONS_CHANGE $CHANGEVAL|+=D$#!#! / mois)"
 QUALIFICATIONS_CHANGE_POPTYPE_TOOLTIP: "#header Qualifications des [PopType.GetName]#!\n $CURRENT_WORKFORCE|vD$ [Concept('concept_individual', '$concept_individuals$')|l] actuellement\n #v $MONTHLY_CHANGE|=+D$#! chaque mois\n$TOOLTIP_DELIMITER$\n #v $MONTHLY_CHANGE|=+D$#! [PopType.GetName|l] chaque mois en raison de : #indent_newline:3 \n#v $BASE_VALUE|=+D$#! de valeur de base\n$BREAKDOWN$#!\n\n[PopType.GetQualificationsGrowthDesc]"
 WORKFORCE_FACTOR_DESC: "Multiplicateur #v ×$FACTOR|2$#! de l’influence de la [concept_workforce|l] (@population! #v $SIZE|D$#!)"
 QUALIFICATIONS_LOWER_BOUND: "(Plafonné à #b $VALUE|vD$ @population!#!#!)"
 QUALIFICATIONS_UPPER_BOUND: "(Plafonné à #b $VALUE|vD$ @population!#!#!)"
 QUEUE_CONSTRUCTION_POINTS_SUMMARY: "[LabelingHelper.GetFormattedDays(Multiply_int32(Country.EstimatedConstructionQueueDuration, '(int32)7'))]"
 QUEUE_CONSTRUCTION_POINTS_SUMMARY_TOOLTIP: "#header Temps de construction estimé#!\n[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] [COUNTRY.GetAltNameNoFormatting('AOnt')] environ [LabelingHelper.GetFormattedDays(Multiply_int32(Country.EstimatedConstructionQueueDuration, '(int32)7'))] restant dans la [concept_construction_queue|l]\n$TOOLTIP_DELIMITER$\n[LabelingHelper.GetFormattedDays(Multiply_int32(Country.EstimatedConstructionQueueDuration, '(int32)7'))] dans la file d'attente des [Concept('concept_government_construction', '$concept_government_constructions$')|l]\n[LabelingHelper.GetFormattedDays(Multiply_int32(Country.EstimatedPrivateConstructionQueueDuration, '(int32)7'))] dans la file d'attente des [Concept('concept_private_construction', '$concept_private_constructions$')|l]"
 NUM_PRIVATE_CONSTRUCTION_TOOLTIP: "#header [Concept('concept_private_construction', '$concept_private_constructions$')]#!\nIl y a [Country.GetNumPrivateConstructionsInQueue|v] [Concept('concept_private_construction', '$concept_private_constructions$')|l] dans la [concept_construction_queue|l] [Country.GetAltAdjective('FS')|l]"
 NUM_GOVERNMENT_CONSTRUCTION_TOOLTIP: "#header [Concept('concept_government_construction', '$concept_government_constructions$')]#!\nIl y a [Country.GetNumGovernmentConstructionsInQueue|v] [Concept('concept_government_construction', '$concept_government_constructions$')|l] dans la [concept_construction_queue|l] [Country.GetAltAdjective('FS')|l]"
 QUALIFICATIONS_LITERACY_FACTOR: "du [concept_literacy|l] [Pop.GetLiteracyRate|v0%]"
 QUALIFICATIONS_WEALTH_FACTOR: "de la [concept_wealth|l] [Pop.GetCurrentWealth|v0]"
 QUALIFICATIONS_FAVORED_TYPE: "d’être des [Pop.GetPopType.GetName|l]"
 QUALIFICATIONS_INSUFFICIENT_LITERACY_DECAY: "du [concept_literacy|l] insuffisant ([Pop.GetLiteracyRate|v0%])"
 QUALIFICATIONS_INSUFFICIENT_WEALTH_DECAY: "de la [concept_wealth|l] insuffisante ([Pop.GetCurrentWealth|v0])"
 QUALIFICATIONS_PEASANTS_UNDER_SERFDOM: "d’être des [Pop.GetPopType.GetName|l] en [GetLawType('law_serfdom').GetName|l]"
 QUALIFICATIONS_CLERGYMEN_UNDER_TOTAL_SEPARATION: "d’être des [Pop.GetPopType.GetName|l] sous une [GetLawType('law_total_separation').GetName|l]"
 QUALIFICATIONS_DEPLOYED_SERVICEMEN: "d’être des [Pop.GetPopType.GetName|l] envoyés en guerre"
 POTENTIALS_CULTURAL_RELIGIOUS_ACCEPTANCE: "de l’[concept_acceptance|l] élevée de la [concept_religion|l]"
 QUALIFICATIONS_CULTURAL_DISCRIMINATION: "de la faible [concept_acceptance|l] de la [concept_culture|l]"
 POTENTIALS_RELIGIOUS_DISCRIMINATION: "de la faible [concept_acceptance|l] de la [concept_religion|l]"
 QUALIFICATIONS_OFFICERS_PEASANT_LEVIES: "des [GetLawType('law_peasant_levies').GetName|l]"
 QUALIFICATIONS_OFFICERS_PEASANT_LEVIES_DESC: "La plupart des [concept_pop_qualifications|l] des [GetPopType('officers').GetName|l] sont issues des [GetPopType('aristocrats').GetName|l]"
 GROWTH_TITLE: "#title Croissance#!"
 LITERACY_TITLE: "#title [concept_literacy]#!"
 INCOME_TITLE: "#title Revenu#!"
 EXPENSES_TITLE: "#title Dépenses#!"
 PRIMARY_IG_TITLE: "#title [Concept('concept_interest_group','$concept_interest_groups$')]#!"
 IG_TITLE: "#title GI#!"
 POP_TYPE_INFORMATION: "[Pop.GetPopType.GetName] [Pop.GetState.GetOwner.GetAltNameNoFormatting('En')][Pop.GetState.GetOwner.GetName]"
 GOODS_IN_COUNTRY: "[Goods.GetName] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName]"
 GUIDE_ME: "Guidez-moi"
 #TUTORIAL_CANNOT_START: "Cannot start lesson while another tutorial lesson is active"
 TELL_ME_HOW: "Dites-moi comment"
 TELL_ME_WHY: "Dites-moi pourquoi"
 RADICALS_TITLE: "$concept_radicals$"
 LOYALISTS_TITLE: "$concept_loyalists$"
 RELATIONS_TITLE: "#title Relation#!"
 TOWARDS_THEM_TITLE: "#title Nous @arrow_right! Eux#!"
 TOWARDS_US_TITLE: "#title Eux @arrow_right! Nous#!"
 OUR_COUNTRY_TEXT: "Nous jouons [Country.GetAltNameNoFormatting('Le')]#variable [Country.GetName]#!"
 RELATION_WITH: "Nos relations sont #BOLD [Country.GetRelationsWithDesc( GetPlayer )]#! ([Country.GetRelationsWith(GetPlayer)|+])"
 CANNOT_MOVE_COMMANDER_NON_FRIENDLY_HQ: "#N [Hq.GetName] n’est pas un [concept_hq] détenu ou allié#!"
 MOVE_COMMANDER_ALREADY_THERE_TOOLTIP: "#N [Character.GetFullName] est déjà à [Hq.GetName]#!"
 ADD_GENERAL_ROLE: "Accorder le commandement"
 REMOVE_GENERAL_ROLE: "Retirer le commandement"
 ADD_GENERAL_ROLE_DESC: "#header $ADD_GENERAL_ROLE$#!\n$TOOLTIP_DELIMITER$\nPermettre à [CHARACTER.GetFullName] de devenir un [concept_general|l] et commander une armée en plus de ses fonctions actuelles[ConcatIfNeitherEmpty( '\n', '$COMMAND_DESC$' )]"
 REMOVE_GENERAL_ROLE_DESC: "#header $REMOVE_GENERAL_ROLE$#!\n$TOOLTIP_DELIMITER$\nRetirer à [CHARACTER.GetFullName] son commandement en tant que [concept_general|l][ConcatIfNeitherEmpty( '\n', '$COMMAND_DESC$' )]"
 MAP_INTERACTION_MOVE_COMMANDER_DESC: "Sélectionnez le quartier général où [Character.GetFullName] doit se déplacer"
 MAP_INTERACTION_MOVE_COMMANDER_PERFORMED: "[Character.GetFullName] déplacé[Character.GetCustom('FR_E')]"
 MAP_INTERACTION_RESET_PRODUCTION_METHODS_STATE_DESC: "Réinitialiser les méthodes de production aux normes nationales"
 MAP_INTERACTION_RESET_PRODUCTION_METHODS_STATE_SELECT: "#header Réinitialiser les méthodes de production#!\nLes ajustements suivants seront effectués en [State.GetName] :\n\n$LIST$"
 RESET_PRODUCTION_METHODS_BUILDING: "#header Réinitialiser les méthodes de production#!\n[ConcatIfNeitherEmpty(AddLocalizationIf(Not(IsValid(Building.ResetProductionMethodsToStandard)), 'RESET_PM_NOT_VALID'), '\n\n')]Cela réinitialiserait les [Concept('concept_production_method','$concept_production_methods$')|l] pour $NAME$ en [State.GetName] pour correspondre à vos normes nationales les plus courantes. Les ajustements suivants seront effectués :\n\n$LIST$"
 RESET_PRODUCTION_METHODS_BUILDING_TYPE: "#header Réinitialiser les méthodes de production#!\n[ConcatIfNeitherEmpty(AddLocalizationIf(Not(IsValid($BUILDING_TYPE$.ResetProductionMethodsToStandard)), 'RESET_PM_NOT_VALID'), '\n\n')]Toutes les [Concept('concept_production_method','$concept_production_methods$')|l] pour tout $NAME$ [Country.GetAltNameNoFormatting('En')][Country.GetName] seront réinitialisées pour correspondre à vos normes nationales les plus courantes. Les ajustements suivants seront effectués :\n\n$LIST$"
 RESET_PM_NOT_VALID: "@red_cross! Il n’y a aucune [concept_production_method|l] à réinitialiser"
 RESET_PM_BUILDING: "Réinitialiser les méthodes de production en [Building.GetState.GetName]"
 RESET_PM_BUILDING_TYPE: "Réinitialiser les méthodes de production [Country.GetAltNameNoFormatting('En')][Country.GetName]"
 MAP_INTERACTION_RESET_PRODUCTION_METHODS_STATE_PERFORMED: "$concept_production_methods$ alignées"
 RESET_PRODUCTION_METHODS_ALL_BUILDINGS_STANDARD: "Toutes les [Concept('concept_production_method','$concept_production_methods$')|l] sont déjà alignées sur la norme nationale"
 RESET_PRODUCTION_METHOD_TOOLTIP_LIST_ENTRY: "[Building.GetName] : $ACTIVE_METHOD$ @arrow_right! $STANDARD_METHOD$"
 RESET_PRODUCTION_METHOD_TOOLTIP_LIST_ENTRY_WITH_STATE_NAME: "[Building.GetName] en [Building.GetState.GetName] : $ACTIVE_METHOD$ @arrow_right! $STANDARD_METHOD$"
 notification_peace_agreement_signed_war_leader_tooltip: "#header $notification_peace_agreement_signed_war_leader_name$#!\n$TOOLTIP_DELIMITER$\n$notification_peace_agreement_signed_war_leader_desc$"
 notification_peace_agreement_signed_war_leader_name: "Paix avec [SCOPE.sC('recipient').GetAltNameNoFormatting('Le')][SCOPE.sC('recipient').GetName]"
 notification_peace_agreement_signed_war_leader_desc: "Nous avons signé un accord de paix avec [SCOPE.sC('recipient').GetAltNameNoFormatting('Le')]#variable [SCOPE.sC('recipient').GetName]#!, ce qui met fin à nos hostilités."
 notification_peace_agreement_signed_war_participant_tooltip: "#header $notification_peace_agreement_signed_war_participant_name$#!\n$TOOLTIP_DELIMITER$\n$notification_peace_agreement_signed_war_participant_desc$"
 notification_peace_agreement_signed_war_participant_name: "Paix entre [SCOPE.sC('actor').GetAltNameNoFormatting('Le')][SCOPE.sC('actor').GetName] et [SCOPE.sC('target').GetAltNameNoFormatting('Le')][SCOPE.sC('target').GetName]"
 notification_peace_agreement_signed_war_participant_desc: "[SCOPE.sC('actor').GetAltNameNoFormatting('Le')|U]#variable [SCOPE.sC('actor').GetName]#! a signé un accord de paix avec le #variable [SCOPE.sC('target').GetName]#!, ce qui met fin à leurs hostilités."
 notification_peace_agreement_signed_non_participant_tooltip: "#header $notification_peace_agreement_signed_non_participant_name$#!\n$TOOLTIP_DELIMITER$\n$notification_peace_agreement_signed_non_participant_desc$"
 notification_peace_agreement_signed_non_participant_name: "Paix entre [SCOPE.sC('actor').GetAltNameNoFormatting('Le')][SCOPE.sC('actor').GetName] et [SCOPE.sC('target').GetAltNameNoFormatting('Le')][SCOPE.sC('target').GetName]"
 notification_peace_agreement_signed_non_participant_desc: "[SCOPE.sC('actor').GetAltNameNoFormatting('Le')|U]#variable [SCOPE.sC('actor').GetName]#! a signé un accord de paix avec le #variable [SCOPE.sC('target').GetName]#!, ce qui met fin à leurs hostilités."
 notification_self_capitulated_tooltip: "#header $notification_self_capitulated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_self_capitulated_desc$"
 notification_self_capitulated_name: "Notre pays capitule"
 notification_self_capitulated_desc: "Notre pays a capitulé. Tous les objectifs de guerre nous visant ont été appliqués."
 notification_enemy_capitulated_tooltip: "#header $notification_enemy_capitulated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_enemy_capitulated_desc$"
 notification_enemy_capitulated_name: "[SCOPE.sC('target').GetAltNameNoFormatting('Le')|U]#variable [SCOPE.sC('target').GetName]#! capitule"
 notification_enemy_capitulated_desc: "Notre ennemi, [SCOPE.sC('target').GetAltNameNoFormatting('Le')]#variable [SCOPE.sC('target').GetName]#!, a capitulé. Tous les objectifs de guerre les visant ont été appliqués."
 notification_ally_capitulated_tooltip: "#header $notification_ally_capitulated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ally_capitulated_desc$"
 notification_ally_capitulated_name: "[SCOPE.sC('target').GetAltNameNoFormatting('Le')|U]#variable [SCOPE.sC('target').GetName]#! capitule"
 notification_ally_capitulated_desc: "Notre allié, [SCOPE.sC('target').GetAltNameNoFormatting('Le')]#variable [SCOPE.sC('target').GetName]#!, a capitulé. Tous les objectifs de guerre les visant ont été appliqués."
 notification_diplo_play_start_notification_tooltip: "#header $notification_diplo_play_start_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_start_notification_desc$"
 notification_diplo_play_start_notification_name: "[concept_diplomatic_play] [SCOPE.sC('actor').GetAltAdjective('MS')|l] contre nous"
 notification_diplo_play_start_notification_desc: "[SCOPE.sC('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sC('actor').GetName] [SCOPE.sC('actor').GetAltNameNoFormatting('AOnt')] commencé un [concept_diplomatic_play|l] [SCOPE.GetRootScope.GetDiplomaticPlay.GetDiplomaticPlayType.GetName|b] contre nous."
 notification_diplo_play_start_third_party_notification_tooltip: "#header $notification_diplo_play_start_third_party_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_start_third_party_notification_desc$"
 notification_diplo_play_start_third_party_notification_name: "[SCOPE.GetRootScope.GetDiplomaticPlay.GetDiplomaticPlayType.GetName|b] [SCOPE.sC('actor').GetFlagTextIcon] en [SCOPE.GetRootScope.GetDiplomaticPlay.GetStrategicRegion.GetName]"
 notification_diplo_play_start_third_party_notification_desc: "[SCOPE.sC('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sC('actor').GetName] [SCOPE.sC('actor').GetAltNameNoFormatting('AOnt')] commencé un [concept_diplomatic_play|l] [SCOPE.GetRootScope.GetDiplomaticPlay.GetDiplomaticPlayType.GetName|b] contre [SCOPE.sC('target').GetAltNameNoFormatting('Le')][SCOPE.sC('target').GetName]."
 notification_diplo_play_back_down_notification_tooltip: "#header $notification_diplo_play_back_down_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_back_down_notification_desc$"
 notification_diplo_play_back_down_notification_name: "[SCOPE.sC('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sC('actor').GetName] renonce"
 notification_diplo_play_back_down_notification_desc: "[SCOPE.sC('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sC('actor').GetName] [SCOPE.sC('actor').GetAltNameNoFormatting('AOnt')] renoncé dans notre [concept_diplomatic_play|l], en nous cédant l’objectif de guerre principal."
 notification_diplo_play_back_down_involved_notification_tooltip: "#header $notification_diplo_play_back_down_involved_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_back_down_involved_notification_desc$"
 notification_diplo_play_back_down_involved_notification_name: "[SCOPE.sC('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sC('actor').GetName] renonce"
 notification_diplo_play_back_down_involved_notification_desc: "[SCOPE.sC('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sC('actor').GetName] [SCOPE.sC('actor').GetAltNameNoFormatting('AOnt')] renoncé dans notre [concept_diplomatic_play|l] contre [SCOPE.sC('target').GetAltNameNoFormatting('Le')][SCOPE.sC('target').GetName]."
 notification_diplo_play_join_side_notification_tooltip: "#header $notification_diplo_play_join_side_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_join_side_notification_desc$"
 notification_diplo_play_join_side_notification_name: "[SCOPE.sC('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sC('actor').GetName] soutient [SCOPE.sC('target').GetAltNameNoFormatting('Le')][SCOPE.sC('target').GetName]"
 notification_diplo_play_join_side_notification_desc: "[SCOPE.sC('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sC('actor').GetName] soutient [SCOPE.sC('target').GetAltNameNoFormatting('Le')][SCOPE.sC('target').GetName] dans le [concept_diplomatic_play|l] contre [SCOPE.sC('recipient').GetAltNameNoFormatting('Le')][SCOPE.sC('recipient').GetName]."
 notification_diplo_play_abandon_side_notification_tooltip: "#header $notification_diplo_play_abandon_side_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_abandon_side_notification_desc$"
 notification_diplo_play_abandon_side_notification_name: "[SCOPE.sC('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sC('actor').GetName] ne soutient plus [SCOPE.sC('target').GetAltNameNoFormatting('Le')][SCOPE.sC('target').GetName]"
 notification_diplo_play_abandon_side_notification_desc: "[SCOPE.sC('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sC('actor').GetName] ne soutient plus [SCOPE.sC('target').GetAltNameNoFormatting('Le')][SCOPE.sC('target').GetName] dans le [concept_diplomatic_play|l] contre [SCOPE.sC('recipient').GetAltNameNoFormatting('Le')][SCOPE.sC('recipient').GetName]."
 notification_diplo_play_war_start_third_party_notification_tooltip: "#header $notification_diplo_play_war_start_third_party_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_war_start_third_party_notification_desc$"
 notification_diplo_play_war_start_third_party_notification_name: "Guerre entre [SCOPE.sC('actor').GetAltNameNoFormatting('Le')][SCOPE.sC('actor').GetName] et [SCOPE.sC('target').GetAltNameNoFormatting('Le')][SCOPE.sC('target').GetName]"
 notification_diplo_play_war_start_third_party_notification_desc: "La guerre a éclaté entre [SCOPE.sC('actor').GetAltNameNoFormatting('Le')][SCOPE.sC('actor').GetName] et [SCOPE.sC('target').GetAltNameNoFormatting('Le')][SCOPE.sC('target').GetName]."
 notification_diplo_play_subject_released_notification_tooltip: "#header $notification_diplo_play_subject_released_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_subject_released_notification_desc$"
 notification_diplo_play_subject_released_notification_name: "[SCOPE.sC('target').GetAltNameNoFormatting('Le')|U][SCOPE.sC('target').GetName] se libère"
 notification_diplo_play_subject_released_notification_desc: "En raison de l’échec [SCOPE.sC('actor').GetAltNameNoFormatting('Du')][SCOPE.sC('actor').GetName] à protéger son sujet [SCOPE.sC('target').GetAltNameNoFormatting('Le')][SCOPE.sC('target').GetName], leur pacte est désormais nul et non avenu."
 notification_diplo_play_subject_released_overlord_notification_tooltip: "#header $notification_diplo_play_subject_released_overlord_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_subject_released_overlord_notification_desc$"
 notification_diplo_play_subject_released_overlord_notification_name: "[SCOPE.sC('target').GetAltNameNoFormatting('Le')|U][SCOPE.sC('target').GetName] se libère"
 notification_diplo_play_subject_released_overlord_notification_desc: "En raison de notre incapacité à protéger notre sujet [SCOPE.sC('target').GetAltNameNoFormatting('Le')][SCOPE.sC('target').GetName], il est devenu indépendant."
 notification_diplo_play_declare_neutrality_notification_tooltip: "#header $notification_diplo_play_declare_neutrality_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_declare_neutrality_notification_desc$"
 notification_diplo_play_declare_neutrality_notification_name: "[SCOPE.sC('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sC('actor').GetName] déclare sa neutralité"
 notification_diplo_play_declare_neutrality_notification_desc: "[SCOPE.sC('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sC('actor').GetName] s’est déclaré neutre dans le [concept_diplomatic_play|l] entre [SCOPE.sC('initiator').GetAltNameNoFormatting('Le')][SCOPE.sC('initiator').GetName] et [SCOPE.sC('target').GetAltNameNoFormatting('Le')][SCOPE.sC('target').GetName]."
 notification_resource_discovered_tooltip: "#header $notification_resource_discovered_name$#!\n$TOOLTIP_DELIMITER$\n$notification_resource_discovered_desc$"
 notification_resource_discovered_name: "[SCOPE.sBT('target').GetDiscoveredResourceName] découvert en [SCOPE.GetRootScope.GetStateRegion.GetName]"
 notification_resource_discovered_desc: "[SCOPE.sBT('target').GetDiscoveredResourceName] a été découvert en [SCOPE.GetRootScope.GetStateRegion.GetName]. La [concept_state_region|l] peut désormais accueillir d’autres [SCOPE.sBT('target').GetName|l]."
 notification_resource_depleted_tooltip: "#header $notification_resource_depleted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_resource_depleted_desc$"
 notification_resource_depleted_name: "[SCOPE.sBT('target').GetDiscoveredResourceName] épuisé en [SCOPE.GetRootScope.GetStateRegion.GetName]"
 notification_resource_depleted_desc: "La ressource [SCOPE.sBT('target').GetDiscoveredResourceName] a été épuisée en [SCOPE.GetRootScope.GetStateRegion.GetName]. La [concept_state_region|l] peut désormais accueillir moins de [SCOPE.sBT('target').GetName|l]."
 notification_new_culture_obsession_tooltip: "#header $notification_new_culture_obsession_name$#!\n$TOOLTIP_DELIMITER$\n$notification_new_culture_obsession_desc$"
 notification_new_culture_obsession_name: "Culture [SCOPE.GetRootScope.GetCulture.GetName|l] obsédée par [SCOPE.sG('goods').GetCustom('FR_Goods_Le')][SCOPE.sG('goods').GetName|l]"
 notification_new_culture_obsession_desc: "La culture [SCOPE.GetRootScope.GetCulture.GetName|l] est devenue obsédée par [SCOPE.sG('goods').GetCustom('FR_Goods_Le')][SCOPE.sG('goods').GetName|l]."
 notification_commander_order_invalidated_tooltip: "#header $notification_commander_order_invalidated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_commander_order_invalidated_desc$"
 notification_commander_order_invalidated_name: "Nouvel ordre de commandant"
 notification_commander_order_invalidated_desc: "Ordre de [SCOPE.GetRootScope.GetCharacter.GetFullName] : [SCOPE.sCOT('target').GetName|l] (précédemment : [SCOPE.sCOT('actor').GetName|l])"
 notification_migration_target_created_tooltip: "#header $notification_migration_target_created_name$#!\n$TOOLTIP_DELIMITER$\n$notification_migration_target_created_desc$"
 notification_migration_target_created_name: "Immigration de masse de personnes de culture [SCOPE.GetRootScope.GetState.GetMassMigrationCulture.GetName|l]"
 notification_migration_target_created_desc: "Un grand nombre de personnes de culture [SCOPE.GetRootScope.GetState.GetMassMigrationCulture.GetName|l] ont migré [SCOPE.sC('country').GetAltNameNoFormatting('Du')][SCOPE.sC('country').GetName] vers [SCOPE.GetRootScope.GetState.GetName] et les [Concept('concept_state', '$concept_states$')] voisins."
 notification_migration_target_created_other_tooltip: "#header $notification_migration_target_created_other_name$#!\n$TOOLTIP_DELIMITER$\n$notification_migration_target_created_other_desc$"
 notification_migration_target_created_other_name: "Émigration de masse de personnes de culture [SCOPE.GetRootScope.GetState.GetMassMigrationCulture.GetName|l]"
 notification_migration_target_created_other_desc: "Un grand nombre de personnes de culture [SCOPE.GetRootScope.GetState.GetMassMigrationCulture.GetName|l] ont migré de notre [concept_country|l] vers [SCOPE.GetRootScope.GetState.GetName] et les [Concept('concept_state', '$concept_states$')] voisins."
 notification_country_swayed_tooltip: "#header $notification_country_swayed_name$#!\n$TOOLTIP_DELIMITER$\n$notification_country_swayed_desc$"
 notification_country_swayed_name: "Pays influencé : [SCOPE.sC('recipient').GetName]"
 notification_country_swayed_desc: "[SCOPE.sC('recipient').GetAltNameNoFormatting('Le')|U][SCOPE.sC('recipient').GetName], sous influence, [SCOPE.sC('recipient').GetAltNameNoFormatting('AOnt')] rallié [SCOPE.sC('actor').GetAltNameNoFormatting('Le')][SCOPE.sC('actor').GetName] dans le [concept_diplomatic_play|l] contre [SCOPE.sC('target').GetAltNameNoFormatting('Le')][SCOPE.sC('target').GetName]"
 notification_sway_offer_accepted_tooltip: "#header $notification_sway_offer_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_sway_offer_accepted_desc$"
 notification_sway_offer_accepted_name: "Pays influencé : [SCOPE.sC('recipient').GetName]"
 notification_sway_offer_accepted_desc: "[SCOPE.sC('recipient').GetAltNameNoFormatting('Le')|U][SCOPE.sC('recipient').GetName], sous influence, se ralli[SCOPE.sC('recipient').GetAltNameNoFormatting('EEnt')] à nous dans le [concept_diplomatic_play|l] contre [SCOPE.sC('target').GetAltNameNoFormatting('Le')][SCOPE.sC('target').GetName]"
 notification_reverse_sway_offer_accepted_tooltip: "#header $notification_reverse_sway_offer_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_reverse_sway_offer_accepted_desc$"
 notification_reverse_sway_offer_accepted_name: "[SCOPE.sC('recipient').GetAltNameNoFormatting('Le')][SCOPE.sC('recipient').GetName] [SCOPE.sC('recipient').GetAltNameNoFormatting('AOnt')] accepté notre soutien"
 notification_reverse_sway_offer_accepted_desc: "[SCOPE.sC('recipient').GetAltNameNoFormatting('Le')|U][SCOPE.sC('recipient').GetName] [SCOPE.sC('recipient').GetAltNameNoFormatting('AOnt')] accepté notre [Concept('concept_offer_support','$concept_offer_of_support$')|l] dans le [concept_diplomatic_play|l] contre [SCOPE.sC('target').GetAltNameNoFormatting('Le')][SCOPE.sC('target').GetName]"
 notification_sway_offer_rejected_tooltip: "#header $notification_sway_offer_rejected_name$#!\n$TOOLTIP_DELIMITER$\n$notification_sway_offer_rejected_desc$"
 notification_sway_offer_rejected_name: "Échec de la tentative d’influencer [SCOPE.sC('recipient').GetAltNameNoFormatting('Le')][SCOPE.sC('recipient').GetName]"
 notification_sway_offer_rejected_desc: "[SCOPE.sC('recipient').GetAltNameNoFormatting('Le')|U][SCOPE.sC('recipient').GetName] [SCOPE.sCountry('recipient').GetAltNameNoFormatting('AOnt')] refusé de se rallier à notre camp dans le [concept_diplomatic_play|l] contre [SCOPE.sC('target').GetAltNameNoFormatting('Le')][SCOPE.sC('target').GetName]"
 notification_reverse_sway_offer_rejected_tooltip: "#header $notification_reverse_sway_offer_rejected_name$#!\n$TOOLTIP_DELIMITER$\n$notification_reverse_sway_offer_rejected_desc$"
 notification_reverse_sway_offer_rejected_name: "[SCOPE.sC('recipient').GetAltNameNoFormatting('Le')][SCOPE.sC('recipient').GetName] [SCOPE.sC('recipient').GetAltNameNoFormatting('AOnt')] rejeté notre [Concept('concept_offer_support','$concept_offer_of_support$')|l]"
 notification_reverse_sway_offer_rejected_desc: "[SCOPE.sC('recipient').GetAltNameNoFormatting('Le')|U][SCOPE.sC('recipient').GetName] [SCOPE.sC('recipient').GetAltNameNoFormatting('AOnt')] rejeté notre [Concept('concept_offer_support','$concept_offer_of_support$')|l] dans le [concept_diplomatic_play|l] contre [SCOPE.sC('target').GetAltNameNoFormatting('Le')][SCOPE.sC('target').GetName]"
 notification_diplomatic_demand_accepted_tooltip: "#header $notification_diplomatic_demand_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_demand_accepted_desc$"
 notification_diplomatic_demand_accepted_name: "[SCOPE.sC('recipient').GetAltNameNoFomatting('Le')][SCOPE.sC('recipient').GetName] cèd[SCOPE.sC('recipient').GetAltNameNoFomatting('EEnt')] aux exigences"
 notification_diplomatic_demand_accepted_desc: "[SCOPE.sC('recipient').GetAltNameNoFomatting('Le')][SCOPE.sC('recipient').GetName] [SCOPE.sC('recipient').GetAltNameNoFomatting('AOnt')] accepté l’[concept_diplomatic_demand] de « [SCOPE.GetRootScope.GetDiplomaticDemand.GetDemandedWarGoal.GetName] » [SCOPE.sC('actor').GetAltNameNoFomatting('Du')][SCOPE.sC('actor').GetName]"
 notification_diplomatic_demand_rejected_tooltip: "#header $notification_diplomatic_demand_rejected_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_demand_rejected_desc$"
 notification_diplomatic_demand_rejected_name: "[SCOPE.sC('recipient').GetAltNameNoFomatting('Le')][SCOPE.sC('recipient').GetName] rejett[SCOPE.sC('recipient').GetAltNameNoFomatting('EEnt')] les exigences"
 notification_diplomatic_demand_rejected_desc: "[SCOPE.sC('recipient').GetAltNameNoFomatting('Le')][SCOPE.sC('recipient').GetName] [SCOPE.sC('recipient').GetAltNameNoFomatting('AOnt')] refusé notre [concept_diplomatic_demand|l] de « [SCOPE.GetRootScope.GetDiplomaticDemand.GetDemandedWarGoal.GetName] », déclenchant un [concept_diplomatic_play|l]"
 notification_interest_activated_tooltip: "#header $notification_interest_activated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_activated_desc$"
 notification_interest_activated_name: "[concept_interest] pour [SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName] activé"
 notification_interest_activated_desc: "Nous aurons désormais la possibilité de participer à tous les [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')|l] ou de faire de la diplomatie avec les [Concept('concept_country', '$concept_countries$')|l] dans la région [SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName]."
 notification_interest_deactivated_tooltip: "#header $notification_interest_deactivated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_deactivated_desc$"
 notification_interest_deactivated_name: "[concept_interest] pour [SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName] retiré"
 notification_interest_deactivated_desc: "Nous n’aurons peut-être plus la possibilité de participer à tous les [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')|l] ou de faire de la diplomatie avec les [Concept('concept_country', '$concept_countries$')|l] dans la région [SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName]."
 notification_interest_activated_third_party_tooltip: "#header $notification_interest_activated_third_party_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_activated_third_party_desc$"
 notification_interest_activated_third_party_name: "Liens diplomatiques avec [SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')][SCOPE.sCountry('actor').GetName]"
 notification_interest_activated_third_party_desc: "Puisque [SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')][SCOPE.sCountry('actor').GetName] est en train d’établir un [concept_interest|l] pour [SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName], nous pouvons désormais mener une action diplomatique avec eux."
 notification_interest_deactivated_third_party_tooltip: "#header $notification_interest_deactivated_third_party_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_deactivated_third_party_desc$"
 notification_interest_deactivated_third_party_name: "Liens diplomatiques perdus avec [SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')][SCOPE.sCountry('actor').GetName]"
 notification_interest_deactivated_third_party_desc: "Puisque [SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')][SCOPE.sCountry('actor').GetName] est en train de perdre son [concept_interest|l] pour [SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName], nous ne pouvons plus mener d’action diplomatique avec eux."
 notification_colony_created_tooltip: "#header $notification_colony_created_name$#!\n$TOOLTIP_DELIMITER$\n$notification_colony_created_desc$"
 notification_colony_created_name: "Colonisation [SCOPE.sCountry('actor').GetAltAdjective('FS')|l] de [SCOPE.GetRootScope.GetState.GetStateRegion.GetName]"
 notification_colony_created_desc: "[SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sCountry('actor').GetName] [SCOPE.sCountry('actor').GetAltNameNoFormatting('AOnt')] établi la [concept_colony|l] de [SCOPE.GetRootScope.GetState.GetName]."
 notification_colony_complete_tooltip: "#header $notification_colony_complete_name$#!\n$TOOLTIP_DELIMITER$\n$notification_colony_complete_desc$"
 notification_colony_complete_name: "Colonisation de [SCOPE.GetRootScope.GetState.GetStateRegion.GetName] achevée"
 notification_colony_complete_desc: "Notre colonisation de [SCOPE.GetRootScope.GetState.GetName] est terminée. La [concept_colony|l] est maintenant un [concept_state]."
 notification_colony_complete_third_party_tooltip: "#header $notification_colony_complete_third_party_name$#!\n$TOOLTIP_DELIMITER$\n$notification_colony_complete_third_party_desc$"
 notification_colony_complete_third_party_name: "Colonisation [SCOPE.sCountry('actor').GetAltAdjective('FS')|l] de [SCOPE.GetRootScope.GetState.GetStateRegion.GetName] achevée"
 notification_colony_complete_third_party_desc: "La colonisation [SCOPE.sCountry('actor').GetAltAdjective('FS')|l] de [SCOPE.GetRootScope.GetState.GetName] est terminée. La [concept_colony|l] est maintenant un [concept_state]."
 notification_company_prestige_goods_production_activated_tooltip: "#header $notification_company_prestige_goods_production_activated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_company_prestige_goods_production_activated_desc$"
 notification_company_prestige_goods_production_activated_name: "[SCOPE.GetRootScope.GetCompany.GetName] commence à produire des marchandises de prestige"
 notification_company_prestige_goods_production_activated_desc: "[SCOPE.GetRootScope.GetCompany.GetName] produira désormais [SCOPE.GetRootScope.GetCompany.GetProducedPrestigeGoodsDesc]"
 notification_company_prosperity_bonus_activated_tooltip: "#header $notification_company_prosperity_bonus_activated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_company_prosperity_bonus_activated_desc$"
 notification_company_prosperity_bonus_activated_name: "Bonus de prospérité activé pour [SCOPE.GetRootScope.GetCompany.GetName]"
 notification_company_prosperity_bonus_activated_desc: "Cela est dû à sa [concept_prosperity|l] qui atteint [GetDefine('NEconomy','COMPANY_PROSPERITY_BONUS_ACTIVATION_THRESHOLD')|v0]\n\n#title Effets#!\n[SCOPE.GetRootScope.GetCompany.GetCompanyType.GetProsperityModifier.GetDesc]"
 notification_company_prosperity_bonus_deactivated_tooltip: "#header $notification_company_prosperity_bonus_deactivated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_company_prosperity_bonus_deactivated_desc$"
 notification_company_prosperity_bonus_deactivated_name: "Bonus de prospérité désactivé pour [SCOPE.GetRootScope.GetCompany.GetName]"
 notification_company_prosperity_bonus_deactivated_desc: "Cela est dû à sa [concept_prosperity|l] qui est inférieure à [GetDefine('NEconomy','COMPANY_PROSPERITY_BONUS_DEACTIVATION_THRESHOLD')|v0]\n\n#title Effets (ne sont plus fournis)#!\n[SCOPE.GetRootScope.GetCompany.GetCompanyType.GetProsperityModifier.GetDesc]"
 notification_ig_trait_activated_tooltip: "#header $notification_ig_trait_activated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_trait_activated_desc$"
 notification_ig_trait_activated_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] - [SCOPE.sInterestGroupTrait('target').GetName(SCOPE.GetRootScope.GetInterestGroup.Self)] activé"
 notification_ig_trait_activated_desc: "Cela est dû à son [concept_approval|l] de [SCOPE.GetRootScope.GetInterestGroup.GetApprovalRating] (#tooltippable #tooltip:[SCOPE.GetRootScope.GetInterestGroup.GetTooltipTag],IG_APPROVAL_BREAKDOWN [SCOPE.GetRootScope.GetInterestGroup.GetApprovalValue|=+]#!#!)\n\n#title Effets#!\n[SCOPE.sInterestGroupTrait('target').GetModifiersDesc(SCOPE.GetRootScope.GetInterestGroup.Self)]"
 notification_ig_became_influential_tooltip: "#header $notification_ig_became_influential_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_became_influential_desc$"
 notification_ig_became_influential_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] est désormais [concept_influential|l]"
 notification_ig_became_influential_desc: "[SCOPE.GetRootScope.GetInterestGroup.GetName] était [concept_marginalized|l] et est maintenant [concept_influential|l]."
 notification_ig_became_powerful_tooltip: "#header $notification_ig_became_powerful_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_became_powerful_desc$"
 notification_ig_became_powerful_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] est désormais [concept_powerful|l]"
 notification_ig_became_powerful_desc: "[SCOPE.GetRootScope.GetInterestGroup.GetName] était [concept_influential|l] et est maintenant [concept_powerful|l]."
 notification_ig_no_longer_powerful_tooltip: "#header $notification_ig_no_longer_powerful_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_no_longer_powerful_desc$"
 notification_ig_no_longer_powerful_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] n’est plus [concept_powerful|l]"
 notification_ig_no_longer_powerful_desc: "[SCOPE.GetRootScope.GetInterestGroup.GetName] était [concept_powerful|l] et est maintenant [concept_influential|l]."
 notification_ig_no_longer_influential_tooltip: "#header $notification_ig_no_longer_influential_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_no_longer_influential_desc$"
 notification_ig_no_longer_influential_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] n’est plus [concept_influential|l]"
 notification_ig_no_longer_influential_desc: "[SCOPE.GetRootScope.GetInterestGroup.GetName] était [concept_influential|l] et est maintenant [concept_marginalized|l]."
 notification_ig_trait_deactivated_tooltip: "#header $notification_ig_trait_deactivated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_trait_deactivated_desc$"
 notification_ig_trait_deactivated_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] - [SCOPE.sInterestGroupTrait('target').GetName(SCOPE.GetRootScope.GetInterestGroup.Self)] désactivé"
 notification_ig_trait_deactivated_desc: "Cela est dû à son [concept_approval|l] de [SCOPE.GetRootScope.GetInterestGroup.GetApprovalRating] (#tooltippable #tooltip:[SCOPE.GetRootScope.GetInterestGroup.GetTooltipTag],IG_APPROVAL_BREAKDOWN [SCOPE.GetRootScope.GetInterestGroup.GetApprovalValue|=+]#!#!)\n\n#title Effets (ne sont plus fournis)#!\n[SCOPE.sInterestGroupTrait('target').GetModifiersDesc(SCOPE.GetRootScope.GetInterestGroup.Self)]"
 notification_ig_movement_left_marginal_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] - [SCOPE.sPoliticalMovement('political_movement').GetName] quitté"
 notification_ig_movement_left_marginal_desc: "Cela est dû au fait que le groupe d’intérêt devient marginal"
 notification_ig_movement_left_marginal_tooltip: "#header $notification_ig_movement_left_marginal_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_movement_left_marginal_desc$"
 notification_ig_movement_left_in_government_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] - [SCOPE.sPoliticalMovement('political_movement').GetName] quitté"
 notification_ig_movement_left_in_government_desc: "Cela est dû au fait que le groupe d’intérêt fait partie du gouvernement"
 notification_ig_movement_left_in_government_tooltip: "#header $notification_ig_movement_left_in_government_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_movement_left_in_government_desc$"
 notification_ig_movement_left_happy_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] - [SCOPE.sPoliticalMovement('political_movement').GetName] quitté"
 notification_ig_movement_left_happy_desc: "Cela est dû à leur [concept_approval|l] de [SCOPE.GetRootScope.GetInterestGroup.GetApprovalRating] (#tooltippable #tooltip:[SCOPE.GetRootScope.GetInterestGroup.GetTooltipTag],IG_APPROVAL_BREAKDOWN [SCOPE.GetRootScope.GetInterestGroup.GetApprovalValue|=+]#!#!)"
 notification_ig_movement_left_happy_tooltip: "#header $notification_ig_movement_left_happy_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_movement_left_happy_desc$"
 notification_parties_activated_name: "Partis nouvellement formés"
 notification_parties_activated_desc: "Nouveaux partis formés dans notre pays : [SCOPE.GetRootScope.GetCountry.GetRecentPartiesDesc]"
 notification_parties_activated_tooltip: "#header $notification_parties_activated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_parties_activated_desc$"
 RECENT_PARTIES_ITEM: "[Party.GetName]"
 RECENT_PARTIES_DESC: "$PARTIES_LIST$"
 notification_ig_resigned_government_tooltip: "#header $notification_ig_resigned_government_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_resigned_government_desc$"
 notification_ig_resigned_government_name: "Démission du [concept_government|l]"
 notification_ig_resigned_government_desc: "[SCOPE.GetRootScope.GetInterestGroup.GetName] a démissionné du [concept_government|l] en raison de son [concept_approval|l] qui l’a mis $ig_approval_angry$"
 notification_violate_sovereignty_third_party_joins_name: "[SCOPE.sC('third_party_country').GetAltNameNoFormatting('Le')|U][SCOPE.sC('third_party_country').GetName] aid[SCOPE.sC('third_party_country').GetAltNameNoFormatting('EEnt')] [SCOPE.sC('target_country').GetAltNameNoFormatting('Le')][SCOPE.sC('target_country').GetName]"
 notification_violate_sovereignty_third_party_joins_desc: "[SCOPE.sC('third_party_country').GetAltNameNoFormatting('Le')|U][SCOPE.sC('third_party_country').GetName] aid[SCOPE.sC('third_party_country').GetAltNameNoFormatting('EEnt')] [SCOPE.sC('target_country').GetAltNameNoFormatting('Le')][SCOPE.sC('target_country').GetName] dont la souveraineté a été violée par [SCOPE.sC('initiator').GetAltNameNoFormatting('Le')][SCOPE.sC('initiator').GetName]."
 SUBSIDIZED_YES: "$SUBSIDIZED_YES_HEADER$[ConcatIfNeitherEmpty('\n\n', Building.GetSubsidiesDesc)]\n\n[SelectLocalization(IsValid( Building.ToggleSubsidies ), 'REVOKE_SUBSIDIES_POSSIBLE', GetDesc(Building.ToggleSubsidies))]"
 SUBSIDIZED_YES_HEADER: "#header [Concept('concept_subsidies', '$concept_subsidized$')]#!\n$TOOLTIP_DELIMITER$\nCe [concept_building|l] est subventionné et coûte #N #bold [Building.GetSubsidies|D]#!#!@money! / semaine"
 REVOKE_SUBSIDIES_POSSIBLE: "#instruction Cliquez pour arrêter de le subventionner#!"
 SUBSIDIES_MANDATED_BY_MODIFIER: "$MODIFIERNAME$#indent_newline:3 \n$DESCRIPTION$#!"
 SUBSIDIZED_NO: "$SUBSIDIZED_NO_HEADER$\n\n[SelectLocalization(IsValid( Building.ToggleSubsidies ), 'SUBSIDIZE_POSSIBLE', GetDesc(Building.ToggleSubsidies))]"
 SUBSIDIZED_NO_HEADER: "#header Non [Concept('concept_subsidies', '$concept_subsidized$')|l]#!\n$TOOLTIP_DELIMITER$\nCe [concept_building|l] n’est pas subventionné"
 SUBSIDIZE_POSSIBLE: "#instruction Cliquez pour le subventionner#!"
 NOT_PERMITTED_TO_SUBSIDIZE_BUILDING_GROUP: "Subventionner ce [concept_building|l] n’est pas autorisé dans notre pays. Ceci est généralement déterminé par les [Concept('concept_law', '$concept_laws$')|l] économiques."
 CANNOT_SUBSIDIZE_GOVERNMENT_BUILDINGS: "Les [Concept('concept_government_building', '$concept_government_buildings$')|l] ne peuvent pas être subventionnés."
 CANNOT_SUBSIDIZE_SUBSISTENCE_BUILDINGS: "Les [Concept('concept_subsistence_building', '$concept_subsistence_buildings$')|l] ne peuvent pas être subventionnés."
 CANNOT_SUBSIDIZE_OWNS_OTHER_BUILDINGS: "Les [Concept('concept_building','$concept_buildings$')|l] qui tirent toutes leurs [concept_revenue|l] d'autres [Concept('concept_building','$concept_buildings$')|l] ne peuvent pas être subventionnés."
 SUBSIDIZED_ALL_YES: "Tous les [Concept('concept_building','$concept_buildings$')|l] nationaux de cette [Concept('concept_building','$concept_building_industry$')|l] sont [Concept('concept_subsidies', '$concept_subsidized$s')|l].\n\n#instruction Cliquez pour supprimer toutes les subventions nationales.#!"
 SUBSIDIZED_ALL_NO: "Aucun des [Concept('concept_building','$concept_buildings$')|l] nationaux de cette [Concept('concept_building','$concept_building_industry$')|l] n’est [Concept('concept_subsidies', '$concept_subsidized$')|l].\n\n#instruction Cliquez pour subventionner tous les [Concept('concept_building','$concept_buildings$')|l] nationaux.#!"
 SUBSIDIZED_ALL_MIXED: "Certains des [Concept('concept_building','$concept_buildings$')|l] nationaux de cette [Concept('concept_building','$concept_building_industry$')|l] sont [Concept('concept_subsidies', '$concept_subsidized$s')|l].\n\n#instruction Cliquez pour subventionner tous les [Concept('concept_building','$concept_buildings$')|l] nationaux.#!"
 AUTO_EXPAND_ALL_YES: "#header Agrandissement automatique#!\nTous les [Concept('concept_building','$concept_buildings$')|l] de cette [Concept('concept_building','$concept_building_industry$')|l] s’agrandissent automatiquement.\n\n#instruction Cliquez pour supprimer tous les agrandissements automatiques.#!"
 AUTO_EXPAND_ALL_NO: "#header Pas d’agrandissement automatique#!\nAucun des [Concept('concept_building','$concept_buildings$')|l] de cette [Concept('concept_building','$concept_building_industry$')|l] ne s’agrandit automatiquement.\n\n#instruction Cliquez pour agrandir automatiquement tous les [Concept('concept_building','$concept_buildings$')|l].#!"
 AUTO_EXPAND_ALL_MIXED: "#header Certains agrandissements automatiques#!\nCertains des [Concept('concept_building','$concept_buildings$')|l] de cette [Concept('concept_building','$concept_building_industry$')|l] s’agrandissent automatiquement.\n\n#instruction Cliquez pour agrandir automatiquement tous les [Concept('concept_building','$concept_buildings$')|l].#!"
 DISALLOWED_PRIVATIZATION_ERROR: "@red_cross! Toute [Concept('concept_privatize', '$concept_privatization$')|l] est #r interdite#!"
 FORCED_PRIVATIZATION_ERROR: "@red_cross! Tous les bâtiments [BuildingType.GetName|l] sont contraints d’être [Concept('concept_privatize', 'privatisés')]"
 REMOVE_PRIVATIZATION_EFFECT: "• Retire les droits de construction exclusifs de [BuildingType.GetName|l] aux [Concept('concept_pop', '$concept_pops$')|l] qui composent la [concept_workforce|l] du [concept_building|l] lui-même, ou la main-d’œuvre des $MANOR_HOUSES_GC_LINK$ ou des $FINANCIAL_DISTRICTS_GC_LINK$ (principalement les $ARISTOCRATS_GC_LINK$ et les $CAPITALISTS_GC_LINK$)"
 ADD_PRIVATIZATION_EFFECT: "• Donne les droits de construction exclusifs de [BuildingType.GetName|l] aux [Concept('concept_pop', '$concept_pops$')|l] qui composent la [concept_workforce|l] du [concept_building|l] lui-même, ou la main-d’œuvre des $MANOR_HOUSES_GC_LINK$ ou des $FINANCIAL_DISTRICTS_GC_LINK$ (principalement les $ARISTOCRATS_GC_LINK$ et les $CAPITALISTS_GC_LINK$)"
 REMOVE_COUNTRY_MONOPOLIZATION_EFFECT: "• Retire les droits de construction exclusifs [BuildingType.GetMonopolyCountryIn(GetPlayer.Self).GetAltAdjectiveNoFlag('MP')|l] de [BuildingType.GetName|l]"
 ADD_COUNTRY_MONOPOLIZATION_EFFECT: "• Donne [GetPlayer.GetAltNameNoFormatting('Au')][GetPlayer.GetName] les droits de construction exclusifs de [BuildingType.GetName|l], ce qui fait des [Concept('concept_building_level','$concept_building_levels$')|l] une [concept_nationally_owned|l] exclusivement"
 PRIVATIZATION_ALL_YES: "#header Supprimer toute [Concept('concept_privatize', '$concept_privatization$')|l]#!\n$TOOLTIP_DELIMITER$\n$REMOVE_PRIVATIZATION_EFFECT$\n\n$PRIVATIZATION_ALL_ACTIVE$"
 PRIVATIZATION_ALL_NO: "#header [concept_privatize] cette [Concept('concept_building','$concept_building_industry$')|l]#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(IsValid( BuildingBrowserBuildingTypeItem.ToggleAllPrivatization)), 'PRIVATIZATION_ALL_INVALID'))]\n$TOOLTIP_DELIMITER$\n$ADD_PRIVATIZATION_EFFECT$\n\nAucun [concept_building|l] de type [BuildingType.GetName] n’est actuellement [Concept('concept_privatize', '$concept_privatized$')|l]"
 PRIVATIZATION_ALL_MIXED_DEACTIVATE_ALL: "#header Supprimer toute [Concept('concept_privatize', '$concept_privatization$')|l]#!\n$TOOLTIP_DELIMITER$\n$REMOVE_PRIVATIZATION_EFFECT$\n$PRIVATIZATION_MIXED_ACTIVE$"
 PRIVATIZATION_ALL_MIXED_ACTIVATE_ALL: "#header [concept_privatize] cette [Concept('concept_building','$concept_building_industry$')|l]#!\n$TOOLTIP_DELIMITER$\n$ADD_PRIVATIZATION_EFFECT$\n\nCertains [Concept('concept_building','$concept_buildings$')|l] de type [BuildingType.GetName] sont déjà [Concept('concept_privatize', 'privatisés')]"
 PRIVATIZATION_ALL_INVALID: "@red_cross! Aucun [concept_building|l] de type [BuildingType.GetName] ne peut être [Concept('concept_privatize', '$concept_privatized$')|l][ConcatIfNeitherEmpty('\n', GetDesc(BuildingBrowserBuildingTypeItem.ToggleAllPrivatization))]"
 PRIVATIZATION_ALL_ACTIVE: "Tous les [Concept('concept_building','$concept_buildings$')|l] de type [BuildingType.GetName] sont actuellement [Concept('concept_privatize', 'privatisés')]"
 PRIVATIZATION_MIXED_ACTIVE: "Certains [Concept('concept_building','$concept_buildings$')|l] de type [BuildingType.GetName] sont déjà [Concept('concept_privatize', 'privatisés')]"
 COUNTRY_MONOPOLIZE_TOOLTIP_DEACTIVATE: "#header Retirer le [concept_country_monopoly|l]#![ConcatIfNeitherEmpty('\n', GetDesc(BuildingType.ToggleMonopoly))]\n$TOOLTIP_DELIMITER$\n$REMOVE_COUNTRY_MONOPOLIZATION_EFFECT$[ConcatIfNeitherEmpty('\n', BuildingType.GetToggleMonopolyEffectDesc)]\n\n$COUNTRY_MONOPOLIZE_TOOLTIP_ACTIVE$"
 COUNTRY_MONOPOLIZE_TOOLTIP_ACTIVATE: "#header [Concept('concept_country_monopoly', '$concept_country_monopolize$')] cette [Concept('concept_building','$concept_building_industry$')|l]#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(BuildingBrowserBuildingTypeItem.HasAllForcedPrivatization, 'FORCED_PRIVATIZATION_ERROR'))][ConcatIfNeitherEmpty('\n', GetDesc(BuildingType.ToggleMonopoly))]\n$TOOLTIP_DELIMITER$\n$ADD_COUNTRY_MONOPOLIZATION_EFFECT$[ConcatIfNeitherEmpty('\n', BuildingType.GetToggleMonopolyEffectDesc)]"
 COUNTRY_MONOPOLIZE_TOOLTIP_ACTIVE: "Tous les [Concept('concept_building','$concept_buildings$')|l] de type [BuildingType.GetName] sont actuellement [Concept('concept_country_monopoly', 'monopolisés')] par [BuildingType.GetMonopolyCountryIn(GetPlayer.Self).GetName]"
 COUNTRY_MONOPOLIZE_TOOLTIP_NONE_ACTIVE: "Aucun [concept_building|l] de type [BuildingType.GetName] n’est actuellement [Concept('concept_monopoly', '$concept_monopolized$')|l] ou [Concept('concept_privatize', '$concept_privatized$')|l]"
 SUBSIDIES_TOOLTIP: "[concept_subsidies] salariales requises : #v $VAL|-0$@money!#!\n$TAB$[Concept('concept_building_wage', '$concept_building_wages$')] nécessaires pour maintenir le plein emploi : #v $SUB_VAL|0$@money!#!\n$TAB$Capacité de $NAME|l$ à payer : #v $REG_VAL|0+$@money!#!\n\nSubvention pour les biens entrants requise #v $BALANCE_VAL|-0$@money!#!"
 PRIVATIZE_OR_MONOPOLIZE_RIGHT_CLICK_MENU_TITLE: "[Concept('concept_country_monopoly', '$concept_country_monopolize_short$')] ou [concept_privatize|l] [BuildingType.GetName]"
 BUILDING_RIGHT_CLICK_MENU_TITLE: "[Building.GetName]"
 BUILDING_ACTIONS_RIGHT_CLICK_MENU_TITLE: "Actions disponibles pour [Building.GetName] en [State.GetName]"
 SHOW_BUILDING_ACTIONS: "Afficher les actions pour [Building.GetName] en [Building.GetState.GetName][ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(ObjectsEqual(Building.GetState.GetOwner.Self, GetPlayer.Self)), 'BUILDING_NOT_OWNED_BY_PLAYER'))]"
 BUILDING_NOT_OWNED_BY_PLAYER: "@red_cross! Ce [concept_building|l] n’est pas situé [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName] $YOU$"
 BUILDING_RIGHT_CLICK_MENU_SUBTITLE: "en [State.GetName]"
 BUILDING_RIGHT_CLICK_MENU_EXPAND: "Agrandir en [State.GetName]"
 BUILDING_RIGHT_CLICK_MENU_EXPAND_FOREIGN: "Agrandir en [State.GetName] [State.GetCountry.GetFlagTextIcon]"
 BUILDING_RIGHT_CLICK_MENU_DOWNSIZE: "Réduire"
 BUILDING_RIGHT_CLICK_MENU_CANCEL_CONSTRUCTION: "Annuler l’agrandissement"
 BUILDING_RIGHT_CLICK_MENU_SUBSIDIZE_ON: "Subventionner"
 BUILDING_RIGHT_CLICK_MENU_SUBSIDIZE_OFF: "Révoquer la subvention"
 BUILDING_RIGHT_CLICK_MENU_AUTOEXPAND_ON: "Auto-agrandissement"
 BUILDING_RIGHT_CLICK_MENU_AUTOEXPAND_OFF: "Arrêter l’auto-agrandissement"
 CANCEL_CONSTRUCTION_TOOLTIP: "#header $BUILDING_RIGHT_CLICK_MENU_CANCEL_CONSTRUCTION$#!\nAnnuler l’agrandissement en cours de ce bâtiment."
 CANCEL_CONSTRUCTION_MODIFIERS_INSTRUCTIONS: "#instruction Cliquez pour annuler 1 niveau#!\n#instruction $SHORTCUT_KEY_MOD_shift$Cliquez pour annuler $SHIFT_NUM_LEVELS$ niveaux#!\n#instruction $SHORTCUT_KEY_MOD_ctrl$Cliquez pour annuler $CTRL_NUM_LEVELS$ niveaux#!"
 IG_RIGHT_CLICK_MENU_TITLE: "[InterestGroup.GetName]"
 IG_RIGHT_CLICK_MENU_ADD_GOV: "Ajouter au gouvernement"
 IG_RIGHT_CLICK_MENU_REM_GOV: "Retirer du gouvernement"
 RIGHT_CLICK_MENU_SUPPRESS: "$SUPPRESS_SHORT$"
 RIGHT_CLICK_MENU_SUPPRESS_NOT: "$SUPPRESS_NOT_SHORT$"
 RIGHT_CLICK_MENU_BOLSTER: "$BOLSTER_SHORT$"
 RIGHT_CLICK_MENU_BOLSTER_NOT: "$BOLSTER_NOT_SHORT$"
 IG_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(InterestGroup.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 COUNTRY_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(Country.IsPinnedInOutliner, 'UNPIN_COUNTRY_IN_OUTLINER', 'PIN_COUNTRY_IN_OUTLINER')]"
 POLITICAL_MOVEMENT_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(PoliticalMovement.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 DIPLOMATIC_PLAY_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(DiplomaticPlay.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 CHARACTER_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(Character.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 STATE_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(State.IsPinnedInOutliner, 'UNPIN_STATE_IN_OUTLINER', 'PIN_STATE_IN_OUTLINER')]"
 MARKET_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(Market.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 GOODS_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(Goods.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 MILITARY_FORMATION_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(MilitaryFormation.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
 PIN_IN_OUTLINER: "Épingler au tableau de bord"
 UNPIN_IN_OUTLINER: "Détacher du tableau de bord"
 PIN_COUNTRY_IN_OUTLINER: "Épingler [Country.GetAltNameNoFormatting('Le')][Country.GetName] au tableau de bord"
 UNPIN_COUNTRY_IN_OUTLINER: "Détacher [Country.GetAltNameNoFormatting('Le')][Country.GetName] du tableau de bord"
 PIN_STATE_IN_OUTLINER: "Épingler [State.GetName] au tableau de bord"
 UNPIN_STATE_IN_OUTLINER: "Détacher [State.GetName] du tableau de bord"
 SELECT_ORDER_RIGHT_CLICK_MENU_TITLE: "Sélectionner l’[concept_order|l] pour [Character.GetFullName]"
 CHARACTER_RIGHT_CLICK_MENU_TITLE: "[Character.GetFullName]"
 CHARACTER_RIGHT_CLICK_MENU_SUBTITLE: "[Character.GetRoleTitle]"
 CHARACTER_RIGHT_CLICK_MENU_INFORMATION: "Informations"
 CHARACTER_RIGHT_CLICK_MENU_PROMOTE_COMMANDER: "Promouvoir"
 CHARACTER_RIGHT_CLICK_MENU_SPLIT_INTO_OWN_FORMATION: "Diviser la formation"
 DECREE_RIGHT_CLICK_MENU_TITLE: "[Decree.GetName] en [Decree.GetState.GetName]"
 DECREE_RIGHT_CLICK_MENU_REMOVE: "Annuler"
 SET_DEFAULT_UNIT_TYPE_RIGHT_CLICK_MENU_TITLE: "Définir le [concept_combat_unit_type|l] par défaut"
 STATE_RIGHT_CLICK_MENU_DECLARE_INTEREST: "Déclarer avoir un intérêt"
 STATE_RIGHT_CLICK_MENU_REVOKE_INTEREST: "Révoquer l’intérêt"
 STATE_RIGHT_CLICK_MENU_REVOKE_INTEREST_TOOLTIP: "Révoquer notre intérêt pour [State.GetStateRegion.GetStrategicRegion.GetName]"
 STATE_RIGHT_CLICK_MENU_DECLARE_INTEREST_TOOLTIP: "Déclarer avoir un intérêt pour [State.GetStateRegion.GetStrategicRegion.GetName]"
 DECREE_DUPLICATE_ROAD_MAINTENANCE: "Aucun autre pays n’a établi $decree_road_maintenance$ dans la [concept_state_region|l]"
 MARKET_RIGHT_CLICK_MENU_TITLE: "[Market.GetName]"
 MARKET_RIGHT_CLICK_MENU_MANAGE_MARKET: "Gérer le marché"
 MANAGE_MARKET: "Gérer"
 STATE_RIGHT_CLICK_MENU_TITLE: "[Country.GetName]"
 STATE_RIGHT_CLICK_MENU_SUBTITLE: "[State.GetName]"
 STATE_RIGHT_CLICK_MENU_COUNTRY_TITLE: "#header [Country.GetNameNoFlag]#! (pays)"
 STATE_RIGHT_CLICK_MENU_STATE_TITLE: "#header [State.GetName]#! (État)"
 MARKET_RIGHT_CLICK_MENU_MARKET_TITLE: "#header [State.GetMarket.GetName]#! (marché)"
 STATE_RIGHT_CLICK_MENU_STRATEGIC_REGION_TITLE: "#header [State.GetStateRegion.GetStrategicRegion.GetName]#! ([concept_strategic_region|l])"
 STATE_RIGHT_CLICK_MENU_SUBJECT_ACTIONS: "[Concept('concept_subject_action', '$concept_subject_actions$')]"
 STATE_RIGHT_CLICK_MENU_SUBJECT_ACTIONS_TOOLTIP: "Afficher les [Concept('concept_subject_action', '$concept_subject_actions$')|l] potentielles"
 STATE_RIGHT_CLICK_MENU_OVERLORD_ACTIONS: "[Concept('concept_overlord_action', '$concept_overlord_actions$')]"
 STATE_RIGHT_CLICK_MENU_OVERLORD_ACTIONS_TOOLTIP: "Afficher les [Concept('concept_overlord_action', '$concept_overlord_actions$')|l] potentielles"
 STATE_RIGHT_CLICK_MENU_BLOC_MEMBER_ACTIONS: "[Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')]"
 STATE_RIGHT_CLICK_MENU_BLOC_MEMBER_ACTIONS_TOOLTIP: "Afficher les [Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')|l] potentielles"
 STATE_RIGHT_CLICK_MENU_DIPLOMACY: "Accéder à la diplomatie"
 STATE_RIGHT_CLICK_MENU_COUNTRY_INFORMATION: "Informations"
 STATE_RIGHT_CLICK_MENU_COLONIZE: "Coloniser"
 STATE_RIGHT_CLICK_MENU_CREATE_MARKET: "Créer un marché"
 STATE_RIGHT_CLICK_MENU_INCORPORATE: "$INCORPORATE$"
 STATE_RIGHT_CLICK_MENU_CANCEL_INCORPORATION: "Annuler l’incorporation ([State.GetIncorporationProgress|v%0] achevés)"
 SUBJECT_ACTIONS_BUTTON_TOOLTIP: "#header Afficher les [Concept('concept_subject_action', '$concept_subject_actions$')|l] avec [Country.GetAltNameNoFormatting('Le')][Country.GetName]#!\n#v [GetDataModelSize(Country.GetAvailableSubjectDiploActions)|+]#! actions disponibles"
 OVERLORD_ACTIONS_BUTTON_TOOLTIP: "#header Afficher les [Concept('concept_overlord_action', '$concept_overlord_actions$')|l] avec [Country.GetAltNameNoFormatting('Le')][Country.GetName]#!\n#v [GetDataModelSize(Country.GetAvailableOverlordDiploActions)|+]#! actions disponibles"
 BLOC_ACTIONS_BUTTON_TOOLTIP: "#header Afficher les [Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')|l] avec [Country.GetAltNameNoFormatting('Le')][Country.GetName]#!\n#v [GetDataModelSize(Country.GetAvailablePowerBlocMemberDiploActions)|+]#! actions disponibles"
 BLOC_LEADER_ACTIONS_BUTTON_TOOLTIP: "#header Afficher les [Concept('concept_bloc_leader_action', '$concept_bloc_leader_actions$')|l] avec [Country.GetAltNameNoFormatting('Le')][Country.GetName]#!\n#v [GetDataModelSize(Country.GetAvailablePowerBlocLeaderDiploActions)|+]#! actions disponibles"
 IMPOSE_LAWS_IN_SUBJECT: "Imposer des [Concept('concept_law', '$concept_laws$')|l] [Country.GetAltNameNoFormatting('En')][Country.GetName]"
 SUBJECT_COUNTRY_NAME_HEADER_TOOLTIP: "Trier par nom de [concept_country|l]"
 SUBJECT_LIBERTY_DESIRE_HEADER_TOOLTIP: "Trier par [concept_liberty_desire|l]"
 SUBJECT_RANK_HEADER_TOOLTIP: "Trier par [concept_rank|l]"
 BY_SUBJECT_TYPE: "Par type de sujet"
 POWER_BLOC_COUNTRY_NAME_HEADER_TOOLTIP: "Trier par nom de [concept_country|l]"
 POWER_BLOC_LIBERTY_DESIRE_HEADER_TOOLTIP: "Trier par [concept_power_bloc_leverage|l]"
 POWER_BLOC_RANK_HEADER_TOOLTIP: "Trier par [concept_rank|l]"
 POTENTIAL_SUBJECT_ACTIONS: "[Concept('concept_subject_action', '$concept_subject_actions$')] potentielles"
 POTENTIAL_SUBJECT_ACTIONS_TOOLTIP: "Afficher les [Concept('concept_subject_action', '$concept_subject_actions$')|l] potentielles"
 POTENTIAL_OVERLORD_ACTIONS: "[Concept('concept_overlord_action', '$concept_overlord_actions$')] potentielles"
 POTENTIAL_OVERLORD_ACTIONS_TOOLTIP: "Afficher les [Concept('concept_overlord_action', '$concept_overlord_actions$')|l] potentielles"
 POTENTIAL_BLOC_ACTIONS: "[Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')] potentielles"
 POTENTIAL_BLOC_ACTIONS_TOOLTIP: "Afficher les [Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')|l] potentielles"
 POTENTIAL_BLOC_LEADER_ACTIONS: "[Concept('concept_bloc_leader_action', '$concept_bloc_leader_actions$')] potentielles"
 POTENTIAL_BLOC_LEADER_ACTIONS_TOOLTIP: "Afficher les [Concept('concept_bloc_leader_action', '$concept_bloc_leader_actions$')|l] potentielles"
 POTENTIAL_DIPLOMATIC_ACTIONS: "[Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')] potentielles"
 POTENTIAL_DIPLOMATIC_ACTIONS_TOOLTIP: "Afficher les [Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')|l] potentielles"
 POTENTIAL_DIPLOMATIC_DEMANDS: "[Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')] potentielles"
 POTENTIAL_DIPLOMATIC_DEMANDS_TOOLTIP: "Afficher les [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')|l] potentielles"
 POTENTIAL_DIPLOMATIC_DEMANDS_TARGETING_STATES: "[Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')] potentielles envers les [Concept('concept_state', '$concept_states$')] [Country.GetAltNameNoFormatting('En')][Country.GetName]"
 POTENTIAL_DIPLOMATIC_DEMANDS_TARGETING_STATES_TOOLTIP: "Afficher les [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')|l] potentielles envers les [Concept('concept_state', '$concept_states$')] [Country.GetAltNameNoFormatting('En')][Country.GetName]"
 POTENTIAL_DIPLOMATIC_DEMANDS_TARGETING_SPECIFIC_STATE_TOOLTIP: "Afficher les [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')|l] potentielles envers [State.GetName]"
 AVAILABLE_SUBJECT_ACTIONS: "[Concept('concept_subject_action', '$concept_subject_actions$')] disponibles"
 AVAILABLE_SUBJECT_ACTIONS_TOOLTIP: "Afficher les [Concept('concept_subject_action', '$concept_subject_actions$')|l] disponibles"
 AVAILABLE_OVERLORD_ACTIONS: "[Concept('concept_overlord_action', '$concept_overlord_actions$')] disponibles"
 AVAILABLE_OVERLORD_ACTIONS_TOOLTIP: "Afficher les [Concept('concept_overlord_action', '$concept_overlord_actions$')|l] disponibles"
 AVAILABLE_BLOC_ACTIONS: "[Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')] disponibles"
 AVAILABLE_BLOC_ACTIONS_TOOLTIP: "Afficher les [Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')|l] disponibles"
 AVAILABLE_BLOC_LEADER_ACTIONS: "[Concept('concept_bloc_leader_action', '$concept_bloc_leader_actions$')] disponibles"
 AVAILABLE_BLOC_LEADER_ACTIONS_TOOLTIP: "Afficher les [Concept('concept_bloc_leader_action', '$concept_bloc_leader_actions$')|l] disponibles"
 SUBJECT_ACTIONS: "$concept_subject_actions$"
 OVERLORD_ACTIONS: "$concept_overlord_actions$"
 BLOC_MEMBER_ACTIONS: "$concept_bloc_member_actions$"
 BLOC_LEADER_ACTIONS: "$concept_bloc_leader_actions$"
 DIPLOMATIC_ACTIONS_TEXT: "$concept_diplomatic_actions$"
 DIPLOMATIC_DEMANDS_TEXT: "$concept_diplomatic_demands$"
 DIPLOMATIC_DEMANDS_TARGETING_STATES_TEXT: "$concept_diplomatic_demands$ envers les $concept_states$"
 DIPLOMATIC_DEMANDS_IN_STATE_TEXT: "$concept_diplomatic_demands$ envers [State.GetName]"
 NO_DIPLO_DEMANDS: "Aucune [concept_diplomatic_demand|l] possible"
 NO_STATES_IN_COUNTRY: "Aucun [concept_state] [Country.GetAltNameNoFormatting('En')][Country.GetName]"
 YOUR_LIBERTY_DESIRE: "Votre [concept_liberty_desire|l] en tant que [GetPlayer.GetSubjectTypeName]"
 YOUR_OVERLORD: "Votre [concept_overlord|l]"
 COUNTRY_OVERLORD: "[concept_overlord] [Country.GetAltNameNoFormatting('Du')][Country.GetName]"
 COUNTRY_DIPLOMACY_TAB_LIBERTY_DESIRE: "[concept_liberty_desire] [Country.GetAltNameNoFormatting('Du')][Country.GetName] en tant que [Country.GetSubjectTypeName]"
 DIPLOMATIC_ACTIONS_CONCEPT: "[Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')]"
 DIPLOMATIC_DEMANDS_CONCEPT: "[Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')]"
 COUNTRY_RIGHT_CLICK_MENU_DIPLOMATIC_ACTIONS_TOOLTIP: "Afficher les [Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')|l] potentielles [Country.GetAltNameNoFormatting('En')][Country.GetName]"
 COUNTRY_RIGHT_CLICK_MENU_DIPLOMATIC_DEMANDS_TOOLTIP: "Afficher les [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')|l] potentielles [Country.GetAltNameNoFormatting('En')][Country.GetName]"
 COUNTRY_RIGHT_CLICK_MENU_STATE_DIPLOMATIC_DEMANDS_TOOLTIP: "Afficher les [Concept('concept_diplomatic_demand', '$concept_diplomatic_demands$')|l] en [State.GetName]"
 COUNTRY_RIGHT_CLICK_MENU_ACTIVE_TREATIES_TOOLTIP: "Afficher les [Concept('concept_treaty', '$concept_treaties$')|l] actifs avec [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 ACTIVE_TREATIES: "Vos [Concept('concept_treaty', '$concept_treaties$')|l] avec [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 ACTIVE_TREATIES_OUTLINER_HEADER: "#v $concept_treaties$#!"
 DECREES_CONCEPT: "[Concept('concept_decree','$concept_decrees$')]"
 DECREES_IN_STATE: "Afficher les [Concept('concept_decree','$concept_decrees$')|l] en [State.GetName]"
 COMPANY_CHARTERS_TITLE: "[Concept('concept_company_charter','$concept_company_charters$')]"
 BUILD_URBAN_BUILDINGS: "Construire des bâtiments urbains"
 ADD_CONSUMPTION_TAX: "Ajouter l’impôt de consommation"
 ADD_CONSUMPTION_TAX_ENTRY: "[Goods.GetNameNoFormatting]"
 ADD_CONSUMPTION_TAX_ENTRY_COST: "@money!#v [Goods.CalcPotentialConsumptionTaxAmount(GetPlayer)|+=D]#! ( @aut! [Multiply_CFixedPoint(Goods.CalcConsumptionTaxAuthorityCost(GetPlayer),'(CFixedPoint)-1')|0+])"
 BUDGET_CONSUMPTION_TAX_TOOLTIP: "#header [concept_consumption_tax] sur [Goods.GetCustom('FR_Goods_Le')][Goods.GetName|l]#!\nCoût actuel : @aut! [Multiply_CFixedPoint(Goods.CalcConsumptionTaxAuthorityCost(GetPlayer),'(CFixedPoint)-1')|0+]\nRecettes actuelles : #v [Goods.CalcConsumptionTaxAmount(GetPlayer)|+K]#!"
 GOODS_ADD_REMOVE_CONSUMPTION_TAX_TOOLTIP: "#header [SelectLocalization(GreaterThan_CFixedPoint(Goods.CalcConsumptionTaxAmount(GetPlayer), '(CFixedPoint)0'), 'Supprimer', 'Ajouter')] un [concept_consumption_tax|l] sur [Goods.GetCustom('FR_Goods_Le')][Goods.GetName|l]#!\n$TOOLTIP_DELIMITER$\nRecettes actuelles : #v [Goods.CalcConsumptionTaxAmount(GetPlayer)|+K]#!"
 COUNTRY_RIGHT_CLICK_MENU_OBSERVE: "[SelectLocalization(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, Country.Self), 'COUNTRY_RIGHT_CLICK_MENU_STOP_OBSERVING', 'COUNTRY_RIGHT_CLICK_MENU_START_OBSERVING')]"
 COUNTRY_RIGHT_CLICK_MENU_START_OBSERVING: "Observer [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 COUNTRY_RIGHT_CLICK_MENU_STOP_OBSERVING: "Cesser d’observer [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 COUNTRY_RIGHT_CLICK_MENU_OBSERVE_TOOLTIP: "[SelectLocalization(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, Country.Self), 'COUNTRY_RIGHT_CLICK_MENU_STOP_OBSERVE_TOOLTIP', 'COUNTRY_RIGHT_CLICK_MENU_START_OBSERVE_TOOLTIP')]"
 COUNTRY_RIGHT_CLICK_MENU_START_OBSERVE_TOOLTIP: "Commencer à observer ce pays"
 COUNTRY_RIGHT_CLICK_MENU_STOP_OBSERVE_TOOLTIP: "Cesser d’observer ce pays"
 OBSERVER_NO_COUNTRY_SELECTED: "\n$TOOLTIP_DELIMITER$\n@red_cross! Aucun pays sélectionné"
 OBSERVER_NO_COUNTRY_SELECTED_TOOLTIP: "#header Vous êtes en mode observateur !#!\n$TOOLTIP_DELIMITER$\n@red_cross! Aucun pays sélectionné à observer"
 OVERLORD_TYPE: "Type de suzerain"
 OVERLORD_TYPE_VALUE: "[SelectLocalization(SubjectType.AcceptsAnyOverlordType, 'OVERLORD_TYPE_ANY', 'RECOGNIZED_OR_UNRECOGNIZED')]"
 OVERLORD_TYPE_ANY: "Tout"
 RECOGNIZED_OR_UNRECOGNIZED: "[SelectLocalization(SubjectType.AcceptsOnlyRecognizedOverlordType, 'RECOGNIZED_CONCEPT', 'UNRECOGNIZED_CONCEPT')]"
 RECOGNIZED_CONCEPT: "[Concept('concept_recognized_power', '$concept_recognized_power_short$')]"
 UNRECOGNIZED_CONCEPT: "[Concept('concept_unrecognized_power','$concept_unrecognized_power_short$')]"
 SUBJECT_TYPE_AUTONOMOUS_HEADER_TOOLTIP: "#header Autonome#!\nSi le [concept_subject_type|l] est autonome, ce [concept_subject|l] pourra lui-même rejoindre ou initier des [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')|l]"
 SUBJECT_TYPE_DECREASED_AUTONOMY_HEADER_TOOLTIP: "#header Autonomie réduite#!\n[concept_subject_type] que le [concept_subject|l] deviendrait si son [concept_autonomy|l] était #b réduite#!. S’il possède déjà l’autonomie minimum, le sujet sera annexé."
 SUBJECT_TYPE_INCREASED_AUTONOMY_HEADER_TOOLTIP: "#header Autonomie accrue#!\n[concept_subject_type] que le [concept_subject|l] deviendrait si son [concept_autonomy|l] était #b accrue#!. S’il possède déjà l’autonomie maximum, le sujet obtiendra son indépendance."
 SUBJECT_TYPE_UNIFICATION_HEADER_TOOLTIP: "#header $concept_unification$#!\nSi le [concept_subject_type|l] soutiendra son [concept_overlord|l] dans un processus d’[concept_unification|l] ou de [concept_nation_formation|l]"
 SUBJECT_TYPE_INCOME_TRANSFER_HEADER_TOOLTIP: "#header Transfert de revenus vers le [concept_overlord|l]#!\nLa plupart des [Concept('concept_subject_type', '$concept_subject_types$')|l] reversent une partie de leurs [concept_taxes|l], de leur [concept_budget_minting|l], et autres recettes gouvernementales à leur suzerain, mais #b pas#! leurs [concept_tariffs|l], transferts du [concept_investment_pool|l], ni les recettes liées à leur [concept_diplomatic_pact|l]."
 SUBJECT_TYPE_CONVOY_CONTRIBUTION_HEADER_TOOLTIP: "#header Contribution des [concept_convoys|l]@convoys! au [concept_overlord|l]#!\nLes [Concept('concept_subject', '$concept_subjects$')|l] versent un pourcentage de leurs convois@convoys! à leur suzerain car il est à la tête de leur [concept_market|l]."
 SUBJECT_TYPE_OVERLORD_TYPE_HEADER_TOOLTIP: "#header Type de [concept_overlord|l]#!\nCertains [Concept('concept_subject_type', '$concept_subject_types$')|l] ne sont possibles que pour des suzerains de puissances reconnues, tandis que d’autres ne sont possibles que pour des suzerains de puissances non reconnues. Toutefois, d’autres sont possibles pour des suzerains de puissances reconnues et non reconnues."
 SUBJECT_TYPE_AUTONOMOUS_TOOLTIP: "@green_checkmark! #header Autonome#!\nUn sujet de type [SubjectType.GetName] peut lui-même initier et rejoindre des [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')|l]"
 SUBJECT_TYPE_AUTONOMOUS_NOT_TOOLTIP: "@red_cross! #header Non autonome#!\nUn sujet de type [SubjectType.GetName] ne peut pas initier ni rejoindre lui-même des [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')|l]"
 SUBJECT_TYPE_ANNEX_TOOLTIP: "#header Annexion#!\nDiminuer l’[concept_autonomy|l] d’un sujet de type [SubjectType.GetName] entraînera son #b annexion#!"
 SUBJECT_TYPE_INDEPENDENCE_TOOLTIP: "#header Indépendance#!\nAugmenter l’[concept_autonomy|l] d’un sujet de type [SubjectType.GetName] entraînera son #b indépendance#!"
 SUBJECT_TYPE_DECREASED_AUTONOMY_TOOLTIP: "#header [SubjectType.GetLowerAutonomySubjectType(GetPlayer.Self).GetName]#!\nDiminuer l’[concept_autonomy|l] d’un sujet de type [SubjectType.GetName] ferait de ce [concept_country|l] un sujet de type [SubjectType.GetLowerAutonomySubjectType(GetPlayer.Self).GetName]"
 SUBJECT_TYPE_INCREASED_AUTONOMY_TOOLTIP: "#header [SubjectType.GetHigherAutonomySubjectType(GetPlayer.Self).GetName]#!\nAugmenter l’[concept_autonomy|l] d’un sujet de type [SubjectType.GetName] ferait de ce [concept_country|l] un sujet de type [SubjectType.GetHigherAutonomySubjectType(GetPlayer.Self).GetName]"
 SUBJECT_TYPE_UNIFIES_TOOLTIP: "@green_checkmark! Un sujet de type [SubjectType.GetName] soutiendra son [concept_overlord|l] pendant l’[concept_unification|l] ou la [concept_nation_formation|l], à l’issue de laquelle ce [concept_subject|l] sera annexé."
 SUBJECT_TYPE_UNIFIES_NOT_TOOLTIP: "@red_cross! Un sujet de type [SubjectType.GetName] ne soutiendra pas son [concept_overlord|l] pendant l’[concept_unification|l] ou la [concept_nation_formation|l], à l’issue de laquelle ce [concept_subject|l] ne sera pas annexé."
 SUBJECT_TYPE_INCOME_TRANSFER_TOOLTIP: "#header Transfert de revenus vers le [concept_overlord|l]#!\n[SubjectType.GetIncomeTransfer|v%0]@money! des revenus d’un sujet de type [SubjectType.GetName]\n$TOOLTIP_DELIMITER$\nUn sujet de type [SubjectType.GetName] reverse [SubjectType.GetIncomeTransfer|v%0]@money! de ses [concept_taxes|l], de son [concept_budget_minting|l], et autres recettes gouvernementales à son suzerain, mais #b pas#! ses [concept_tariffs|l], transferts du [concept_investment_pool|l], ni les recettes liées à son [concept_diplomatic_pact|l]."
 SUBJECT_TYPE_CONVOY_CONTRIBUTION_TOOLTIP: "#header Contribution des [concept_convoys|l] au [concept_overlord|l]#!\n[SubjectType.GetDiplomaticActionType.GetSecondModifier.GetValueFor('country_convoy_contribution_to_market_owner_add')|v%0] des convois @convoys! d’un sujet de type [SubjectType.GetName]\n$TOOLTIP_DELIMITER$\nUn sujet de type [SubjectType.GetName] fournit [SubjectType.GetDiplomaticActionType.GetSecondModifier.GetValueFor('country_convoy_contribution_to_market_owner_add')|v%0] de ses convois @convoys! à son suzerain car il est [concept_market_owner|l]."
 SUBJECT_OR_OVERLORD_ACTIONS_RIGHT_CLICK_MENU_TITLE: "[SelectLocalization(Country.IsSubjectOf(GetPlayer.Self), 'OVERLORD_ACTIONS_RIGHT_CLICK_MENU_TITLE', 'SUBJECT_ACTIONS_RIGHT_CLICK_MENU_TITLE')]"
 SUBJECT_ACTIONS_RIGHT_CLICK_MENU_TITLE: "[Concept('concept_subject_action', '$concept_subject_actions$')] avec [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 OVERLORD_ACTIONS_RIGHT_CLICK_MENU_TITLE: "[Concept('concept_overlord_action', '$concept_overlord_actions$')] avec [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 BLOC_ACTIONS_RIGHT_CLICK_MENU_TITLE: "[Concept('concept_bloc_member_action', '$concept_bloc_member_actions$')] avec [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 BLOC_LEADER_ACTIONS_RIGHT_CLICK_MENU_TITLE: "[Concept('concept_bloc_leader_action', '$concept_bloc_leader_actions$')] avec [Country.GetAltNameNoFormatting('Le')][Country.GetName]"
 NO_AVAILABLE_ACTIONS: "Aucune action disponible"
 NO_AVAILABLE_STATES: "Aucun [concept_state] disponible"
 PLAYER_CAN_NOT_DECREASE_OWN_AUTONOMY_TOOLTIP: "#header Diminution de l’[concept_autonomy|l] pour obtenir un sujet de type [SubjectType.GetLowerAutonomySubjectType(GetPlayer.Self).GetName]#!\n@red_cross! Seul le [concept_overlord|l] peut effectuer cette action"
 SUBJECT_CAN_NOT_DECREASE_OWN_AUTONOMY_TOOLTIP: "#header Diminution de l’[concept_autonomy|l] pour obtenir un sujet de type [SubjectType.GetLowerAutonomySubjectType(Country.Self).GetName]#!\n@red_cross! Seul le [concept_overlord|l] peut effectuer cette action"
 SUBJECT_CAN_NOT_DECREASE_OWN_AUTONOMY_ANNEX_TOOLTIP: "#header Diminution de l’[concept_autonomy|l] jusqu’à l’annexion#!\n@red_cross! Seul le [concept_overlord|l] peut effectuer cette action"
 OTHER_COUNTRY_CAN_NOT_INCREASE_AUTONOMY_SUBJECT_TO_INDEPENDENCE_TOOLTIP: "#header Augmentation de l’[concept_autonomy|l] jusqu’à l’indépendance#!\n@red_cross! Seuls le [concept_overlord|l] et le [concept_subject|l] peuvent effectuer cette action"
 OTHER_COUNTRY_CAN_NOT_INCREASE_SUBJECT_AUTONOMY_TOOLTIP: "#header Augmentation de l’[concept_autonomy|l] pour obtenir un sujet de type [SubjectType.GetHigherAutonomySubjectType(Country.Self).GetName]#!\n@red_cross! Seuls le [concept_overlord|l] et le [concept_subject|l] peuvent effectuer cette action"
 OVERLORD: "$concept_overlord$"
 ACTIVE_PACTS: "[Concept('concept_diplomatic_pact', '$concept_diplomatic_pacts_short$')]"
 GOODS_RIGHT_CLICK_MENU_TITLE: "[Goods.GetName] [Goods.GetTextIcon]"
 GOODS_IN_MARKET_RIGHT_CLICK_MENU_TITLE: "[Goods.GetName] [Goods.GetTextIcon] sur le [Goods.GetMarket.GetName|l]"
 MAP_INTERACTION_SHOW_SUPPLY_AREAS_DESC: "Cliquez sur un État pour afficher sa zone d’approvisionnement"
 MAP_INTERACTION_SHOW_SUPPLY_AREAS_PERFORMED: "La zone d’approvisionnement est affichée"
 MAP_INTERACTION_SHOW_SUPPLY_AREAS_TOOLTIP_HEADER: "Cette zone d’approvisionnement se compose des théâtres suivants pour [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] :"
 MAP_INTERACTION_SHOW_SUPPLY_AREAS_TOOLTIP_ITEM: "#variable [THEATER.GetName]#! (#variable [THEATER.GetOwner.GetName]#!)"
 MAP_INTERACTION_SHOW_SUPPLY_AREAS_TOOLTIP_NONE: "[COUNTRY.GetAltNameNoFormatting('Le')|U][COUNTRY.GetName] n’[COUNTRY.GetAltNameNoFormatting('AOnt')] pas de zone d’approvisionnement ici."
 MAP_LIST_PANEL_TITLE: "[SelectLocalization( MapListPanelManager.HasCurrentInteraction, '', 'Registre de ')][GetSelectedMapModeName]"
 MAP_LIST_PANEL_BUTTON_SHOW_MAP_LIST_PANEL: "Afficher la liste de #v [GetSelectedMapModeName]#!\nMasquer le #v volet d’information#!"
 MAP_LIST_PANEL_BUTTON_SHOW_INFORMATION_PANEL: "Afficher le #v volet d’information#!\nMasquer la liste de #v [GetSelectedMapModeName]#!"
 MAP_MODE_ATTITUDE: "Afficher l’[concept_attitude|l] sur la carte"
 MAP_MODE_RELATIONS: "Afficher les [concept_relations|l] sur la carte"
 MAP_MODE_INFAMY: "Afficher l’[concept_infamy|l] sur la carte"
 MAP_MODE_POTENTIALS: "Afficher les [Concept('concept_resource_potential','$concept_resource_potentials_short$')|l] sur la carte"
 MAP_MODE_PRODUCTION: "Afficher la [concept_good_production|l] sur la carte"
 MAP_MODE_CONSUMPTION: "Afficher la [concept_good_consumption|l] sur la carte"
 MAP_MODE_LOCAL_PRICES: "Afficher les [Concept('concept_local_price','$concept_local_prices$')|l] sur la carte"
 PANEL_MAP_MODES_TITLE: "Modes de carte correspondants à [MapModeList.GetContextName]"
 SORT_BY_RANK: "Trier par [concept_rank|l]"
 SORT_BY_MARKET_GOODS: "Trier par [concept_good|l]"
 SORT_BY_IMPORTS: "Trier par importations"
 SORT_BY_EXPORTS: "Trier par exportations"
 SORT_BY_SELL_ORDERS: "Trier par [concept_sell_orders|l]"
 SORT_BY_BUY_ORDERS: "Trier par [concept_buy_orders|l]"
 SORT_BY_PRODUCTION: "Trier par [concept_good_production|l]"
 SORT_BY_CONSUMPTION: "Trier par [concept_good_consumption|l]"
 SORT_BY_BALANCE_TOOLTIP: "Trier par solde. Le nombre que vous obtenez lorsque vous soustrayez les [concept_buy_orders|l] des [concept_sell_orders|l]."
 SORT_BY_COUNTRY: "Trier par nom de [concept_country|l]"
 SORT_BY_MAREKT_PRICE: "Trier selon le [concept_market_price|l]"
 SORT_BY_AMOUNT_CONSUMED: "Trier selon la quantité de [Concept('concept_good', '$concept_goods$')|l] [Concept('concept_good_consumption', '$concept_good_consumed$s')|l]"
 SORT_BY_BUDGET_EXPENDITURE: "Trier selon le pourcentage du budget du [concept_pop|l] dépensé pour chaque [concept_good|l]"
 SORT_BY_BUILDING: "Trier par [concept_building|l]"
 SORT_BY_STATE: "Trier par [concept_state]"
 SORT_BY_STATE_TRAITS: "Trier par #b traits d’État#!"
 SORT_BY_OWNERSHIP: "Trier par #b propriété#!"
 SORT_BY_OWNED_LEVELS: "Trier par nombre de [Concept('concept_building_level', '$concept_building_levels_short$')|l] possédés"
 SORT_BY_PRODUCTION_METHODS: "Trier par [concept_production_method|l]"
 SORT_BY_NUMBER_OF_EMPLOYED: "Trier par nombre d’[Concept('concept_employment' ,'$concept_employed$s')|l]"
 SORT_BY_NUMBER_OF_EMPLOYED_PERCENT: "Trier par taux d’[concept_employment|l]"
 SORT_BY_CASH_RESERVES: "Trier par [concept_cash_reserves|l]"
 SORT_BY_CASH_RESERVES_PERCENT: "Trier par pourcentage de [concept_cash_reserves|l]"
 SORT_BY_BUILDING_PRODUCTIVITY: "Trier par [concept_productivity|l]"
 SORT_BY_BUILDING_INTERACTIONS: "Trier par #b interactions disponibles#!"
 SORT_BY_POPULATION: "Trier par [Concept('concept_pop','$concept_population$')|l]"
 SORT_BY_POP_TYPE: "Trier par [concept_profession|l]"
 SORT_BY_ACCEPTANCE: "Trier par [concept_acceptance_status|l]"
 SORT_BY_CULTURE: "Trier par [concept_culture|l]"
 SORT_BY_RELIGION: "Trier par [concept_religion|l]"
 SORT_BY_RADICALS: "Trier par [Concept('concept_radical','$concept_radicals$')|l]"
 SORT_BY_LOYALISTS: "Trier par [Concept('concept_loyalist','$concept_loyalists$')|l]"
 SORT_BY_SOL: "Trier par [concept_sol|l]"
 SORT_BY_POLITICAL_STRENGTH: "Trier par [concept_political_strength|l]"
 SORT_BY_INTEREST_GROUP: "Trier par [concept_interest_group|l]"
 SORT_BY_LITERACY: "Trier par [concept_literacy|l]"
 SORT_BY_JOB_SATISFACTION: "Trier par [concept_job_satisfaction|l]"
 SORT_BY_NEEDS: "Trier par [concept_pop_needs|l]"
 SORT_BY_NAME: "Trier par nom"
 SORT_BY_BUILDING_NAME: "Trier par nom de [concept_building|l]"
 SORT_BY_BUILDING_SIZE: "Trier par taille de [concept_building|l] ([Concept('concept_building_level','$concept_building_levels$')|l])"
 SORT_BY_BUILDING_TYPE: "Trier par #b type#! de bâtiment"
 SORT_BY_INTENSITY: "Trier par [concept_harvest_condition_intensity|l]"
 SORT_BY_DURATION: "Trier par temps restant"
 SORT_BY_AFFECTED_STATES: "Trier par nombre d’[Concept('concept_state','$concept_states$')] affectés"
 SORT_BY_FAMINE: "Trier par [Concept('concept_pop','$concept_population$')|l] [Concept('concept_starvation','$concept_starving$e')|l] dans les [Concept('concept_state','$concept_states$')] qui souffrent actuellement de la [concept_famine|l]"
 SORT_BY_MILD_STARVATION: "Trier par [Concept('concept_pop','$concept_population$')|l] souffrant de [Concept('concept_starvation','$concept_mild_starvation$')|l]"
 SORT_BY_SEVERE_STARVATION: "Trier par [Concept('concept_pop','$concept_population$')|l] souffrant de [Concept('concept_starvation','$concept_severe_starvation$')|l]"
 MAP_MODE_ATTITUDE_COUNTRY: "Afficher l’[concept_attitude|l] envers [Country.GetYouOrCountryName] sur la carte"
 MAP_MODE_RELATIONS_COUNTRY: "Afficher les [concept_relations|l] avec [Country.GetYouOrCountryName] sur la carte"
 DEFAULT_MAP_LIST_PANEL_STATUS_HEADER: "Statut"
 DEFAULT_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Statut#!\n$TOOLTIP_DELIMITER$\n#concept La disponibilité de cette interaction sur chaque entrée.\n\n@map_list_plus! : vous pouvez sélectionner ceci.\n@map_list_plus_and_checkmark! : vous pouvez le sélectionner et vous le faites déjà ici.\n@map_list_checkmark! : vous le faites déjà ici et vous pouvez le désélectionner.\n@map_list_lock! : vous le faites déjà ici, mais vous ne pouvez pas le désélectionner.\n@map_list_cross! : vous ne pouvez pas sélectionner ceci.#!"
 DEFAULT_MAP_LIST_PANEL_TITLE_HEADER: "Titre"
 DEFAULT_MAP_LIST_PANEL_TITLE_HEADER_TOOLTIP: "#header Titre#!\n$TOOLTIP_DELIMITER$\n#concept Le titre de cette option.#!"
 BUILDING_MAP_LIST_PANEL_AVAILABLE_LABOR_HEADER: "[Concept('concept_jobseeker', '$concept_jobseekers$')]"
 BUILDING_MAP_LIST_PANEL_AVAILABLE_LABOR_HEADER_TOOLTIP: "#header [Concept('concept_jobseeker', '$concept_jobseekers$')]#!\n$TOOLTIP_DELIMITER$\n$concept_jobseeker_desc$"
 BUILDING_MAP_LIST_PANEL_INFRASTRUCTURE_HEADER: "Infrastructures"
 BUILDING_MAP_LIST_PANEL_INFRASTRUCTURE_HEADER_TOOLTIP: "#header Total des infrastructures#!\n$TOOLTIP_DELIMITER$\nNombre d’[Concept('concept_infrastructure','infrastructures')] disponibles dans l’État"
 BUILDING_MAP_LIST_PANEL_STATUS_HEADER: "Statut"
 BUILDING_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Statut#!\n$TOOLTIP_DELIMITER$\n#concept La possibilité d’agrandir ce [concept_building|l] dans chaque [concept_state].\n\n@map_list_plus! : vous pouvez sélectionner ceci.\n@map_list_plus_and_checkmark! : vous pouvez le sélectionner et vous le faites déjà ici.\n@map_list_checkmark! : vous le faites déjà ici et vous pouvez le désélectionner.\n@map_list_lock! : vous le faites déjà ici, mais vous ne pouvez pas le désélectionner.\n@map_list_cross! : vous ne pouvez pas sélectionner ceci.#!"
 BUILDING_MAP_LIST_PANEL_STATE_HEADER: "État"
 BUILDING_MAP_LIST_PANEL_STATE_HEADER_TOOLTIP: "#header [concept_state]#!\n$TOOLTIP_DELIMITER$\n#concept L’État où le [concept_building|l] sera construit.#!"
 BUILDING_MAP_LIST_PANEL_EFFICIENCY_HEADER: "Eff."
 BUILDING_MAP_LIST_PANEL_EFFICIENCY_HEADER_TOOLTIP: "#header Efficacité de la [concept_construction|l]@construction!#!\n$TOOLTIP_DELIMITER$\n#concept L’efficacité de la construction @construction! là où le [concept_building|l] sera construit. Une valeur positive réduit la quantité de [concept_construction|l] @construction! requise par semaine et vice versa.#!"
 BUILDING_MAP_LIST_PANEL_PEASANTS_HEADER: "Paysans"
 BUILDING_MAP_LIST_PANEL_PEASANTS_HEADER_TOOLTIP: "#header Paysans#!"
 BUILDING_MAP_LIST_PANEL_CONSTRUCTION_HEADER: "@construction!"
 BUILDING_MAP_LIST_PANEL_CONSTRUCTION_HEADER_TOOLTIP: "#header [concept_construction]@construction!#!\n$TOOLTIP_DELIMITER$\n#concept La quantité totale de construction @construction! nécessaire pour compléter le [concept_building|l].#!"
 BUILDING_MAP_LIST_PANEL_STATUS_BUILD: "Construire"
 BUILDING_MAP_LIST_PANEL_STATUS_EXPAND: "Agrandir"
 BUILDING_MAP_LIST_PANEL_EFFICIENCY_TOOLTIP: "#header Efficacité de la [concept_construction|l] en $NAME$ : $VAL|v%1$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 CONSTRUCTION_EFFICIENCY_MINIMUM_DESC: "@information! L’efficacité de [concept_construction|l] ne peut être inférieure à [GetDefine('NEconomy', 'MIN_CONSTRUCTION_EFFICIENCY')|v%0]"
 GOODS_CANNOT_BE_TRADED_DUE_TO_TREATY: "@red_cross! Le [Goods.GetMarket.GetName|l] ne peut pas [Concept('concept_trade','échanger')|l] [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l] sur le [concept_world_market|l] en raison d’un [concept_treaty|l]"
 COUNTRY_YOU: "vous"
 COUNTRY_OTHER: "[Country.GetName]"
 COUNTRY_LABEL_YOU: "C'est vous"
 COUNTRY_LABEL_YOUR: "Votre"
 COUNTRY_LABEL_RIVAL: "[Concept('concept_rivalry','$concept_rival$')]"
 COUNTRY_LABEL_MUTUAL_RIVAL: "[Concept('concept_rivalry','$concept_rival$')] (mutuel)"
 COUNTRY_LABEL_RIVALING: "[Country.GetYouOrCountryName] [Concept('concept_rivalry','$concept_rival$')|l]"
 COUNTRY_LABEL_OVERLORD: "[concept_overlord] ([SubjectType.GetName])"
 COUNTRY_LABEL_SUBJECT: "[concept_subject] ([Country.GetSubjectTypeName])"
 COUNTRY_LABEL_SUBJECT_OF_SUBJECT: "[concept_subject] indirect ([Country.GetSubjectTypeName] [Country.GetOverlord.GetAltNameNoFormatting('Du')][Country.GetOverlord.GetName])"
 COUNTRY_LABEL_DIPLO_PLAY_ALLY: "Allié dans [DiplomaticPlay.GetName]"
 COUNTRY_LABEL_DIPLO_PLAY_ENEMY: "Ennemi dans [DiplomaticPlay.GetName]"
 COUNTRY_LABEL_WAR_ALLY: "Co-belligérant pendant la guerre [War.GetName]"
 COUNTRY_LABEL_WAR_ENEMY: "Ennemi pendant la guerre [War.GetName]"
 COUNTRY_LABEL_TRUCE_WITH: "A une [concept_truce|l] avec [COUNTRY.GetYouOrCountryName] (jusqu’au #v [COUNTRY.GetTruceDate(TARGET_COUNTRY.Self)]#!)"
 COUNTRY_LABEL_OWES_OBLIGATION_TO: "A une [concept_obligation|l] envers [COUNTRY.GetYouOrCountryName] (jusqu'au #v [COUNTRY.GetObligationToExpirationDate(TARGET_COUNTRY.Self)]#!)"
 COUNTRY_LABEL_IS_OWED_OBLIGATION: "[COUNTRY.GetYouOrCountryName] a une [concept_obligation|l] à son égard (jusqu'au #v [COUNTRY.GetObligationFromExpirationDate(TARGET_COUNTRY.Self)]#!)"
 COUNTRY_HAS_TRADE_AGREEMENT: "A un [concept_trade_privilege|l] avec [Country.GetYouOrCountryName]"
 COUNTRY_HAS_DEFENSIVE_PACT: "A un [concept_defensive_pact|l] avec [Country.GetYouOrCountryName]"
 COUNTRY_HAS_ALLIANCE: "A une [concept_alliance|l] avec [Country.GetYouOrCountryName]"
 COUNTRY_LABEL_NEIGHBOUR_LAND: "Voisin"
 COUNTRY_LABEL_NEIGHBOUR_SEA: "Voisin (par la mer)"
 COUNTRY_LABEL_POWER_BLOC_LEADER: "[concept_power_bloc_leader]"
 COUNTRY_LABEL_POWER_BLOC_JUNIOR: "Membre junior du [concept_power_bloc|l]"
 COUNTRY_LABEL_POWER_BLOC_MEMBER: "[concept_power_bloc_member]"
 GOVERNMENT_IG_DESC_ITEM: "[InterestGroup.GetTextIcon]"
 BUILDING_MAP_LIST_PANEL_PROFIT_IMPACT_HEADER: "[SelectLocalization(Or(ObjectsEqual(MapListBuildingPanel.GetBuildingType, GetBuildingType('building_government_administration').Self), ObjectsEqual(MapListBuildingPanel.GetBuildingType, GetBuildingType('building_construction_sector').Self)), 'BUILDING_UPKEEP_HEADER', 'BUILDING_EARNINGS_HEADER')]"
 BUILDING_UPKEEP_HEADER: "Entretien"
 BUILDING_EARNINGS_HEADER: "Recettes"
 BUILDING_MAP_LIST_PANEL_PROFIT_IMPACT_TOOLTIP: "#header Prévisions de [SelectLocalization(Or(ObjectsEqual(MapListBuildingPanel.GetBuildingType, GetBuildingType('building_government_administration').Self), ObjectsEqual(MapListBuildingPanel.GetBuildingType, GetBuildingType('building_construction_sector').Self)), 'BUILDING_UPKEEP_HEADER', 'BUILDING_EARNINGS_HEADER')] après l'agrandissement#!\n(hors [Concept('concept_building_wage','$concept_building_wages$')|l])\n$TOOLTIP_DELIMITER$\nUne prévision de l'impact de l'agrandissement de ce bâtiment sur ses [SelectLocalization(Or(ObjectsEqual(MapListBuildingPanel.GetBuildingType, GetBuildingType('building_government_administration').Self), ObjectsEqual(MapListBuildingPanel.GetBuildingType, GetBuildingType('building_construction_sector').Self)), 'BUILDING_UPKEEP_HEADER', 'BUILDING_EARNINGS_HEADER')] hebdomadaires."
 COLONY_MAP_LIST_PANEL_STATUS_HEADER: "Statut"
 COLONY_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Statut#!\n$TOOLTIP_DELIMITER$\n#concept La disponibilité de coloniser chaque [concept_state_region|l].\n\n@map_list_plus! : vous pouvez sélectionner ceci.\n@map_list_plus_and_checkmark! : vous pouvez le sélectionner et vous le faites déjà ici.\n@map_list_checkmark! : vous le faites déjà ici et vous pouvez le désélectionner.\n@map_list_lock! : vous le faites déjà ici, mais vous ne pouvez pas le désélectionner.\n@map_list_cross! : vous ne pouvez pas sélectionner ceci.#!"
 COLONY_MAP_LIST_PANEL_REGION_HEADER: "Région stratégique"
 COLONY_MAP_LIST_PANEL_REGION_HEADER_TOOLTIP: "#header [concept_strategic_region]#!\n$TOOLTIP_DELIMITER$\n#concept $concept_strategic_region$ cible.#!"
 COLONY_MAP_LIST_PANEL_STATE_HEADER: "Région étatique"
 COLONY_MAP_LIST_PANEL_STATE_HEADER_TOOLTIP: "#header [concept_state_region]#!\n$TOOLTIP_DELIMITER$\n#concept $concept_state_region$ cible.#!"
 COLONY_MAP_LIST_PANEL_STATE_TRAITS_HEADER: "Traits d'État"
 COLONY_MAP_LIST_PANEL_STATE_TRAITS_HEADER_TOOLTIP: "#header Traits d'État#!\n$TOOLTIP_DELIMITER$\n#concept Traits de l'État cible.#!"
 STATE_TRAITS_TITLE: "Traits d’État :"
 DIPLO_ACTION_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Statut#!\n$TOOLTIP_DELIMITER$\n#concept La disponibilité de cette [concept_diplomatic_action|l] dans chaque [concept_country|l].\n\n@map_list_plus! : vous pouvez sélectionner ceci.\n@map_list_plus_and_checkmark! : vous pouvez le sélectionner et vous le faites déjà ici.\n@map_list_checkmark! : vous le faites déjà ici et vous pouvez le désélectionner.\n@map_list_lock! : vous le faites déjà ici, mais vous ne pouvez pas le désélectionner.\n@map_list_cross! : vous ne pouvez pas sélectionner ceci.#!"
 DIPLO_ACTION_LIST_PANEL_STATUS_HEADER: "Pays"
 DIPLO_ACTION_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header [concept_country]#!"
 DIPLO_ACTION_LIST_PANEL_STATUS_RIVALRY_GAINS: "Gains"
 DIPLO_ACTION_LIST_PANEL_STATUS_RIVALRY_GAINS_TOOLTIP: "Avantage de déclarer une rivalité avec un autre [concept_country|l]"
 DIPLO_ACTION_LIST_PANEL_STATUS_SEND: "Envoyer"
 DIPLO_ACTION_LIST_PANEL_STATUS_NOT_POSSIBLE: "Indisponible"
 DECREE_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Statut#!\n$TOOLTIP_DELIMITER$\n#concept La disponibilité de ce [concept_decree|l] dans chaque [concept_state].\n\n@map_list_plus! : vous pouvez sélectionner ceci.\n@map_list_plus_and_checkmark! : vous pouvez le sélectionner et vous le faites déjà ici.\n@map_list_checkmark! : vous le faites déjà ici et vous pouvez le désélectionner.\n@map_list_lock! : vous le faites déjà ici, mais vous ne pouvez pas le désélectionner.\n@map_list_cross! : vous ne pouvez pas sélectionner ceci.#!"
 DECREE_LIST_PANEL_STATE_HEADER: "État"
 DECREE_LIST_PANEL_STATE_HEADER_TOOLTIP: "#header [concept_state]#!"
 DECREE_LIST_PANEL_COST_HEADER: "Coût"
 DECREE_LIST_PANEL_COST_HEADER_TOOLTIP: "#header Coût pour continuer à maintenir ce décret#!"
 MILITARY_FORMATION_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Statut#!\n$TOOLTIP_DELIMITER$\n#concept La possibilité d’envoi de cette [concept_military_formation|l] vers chaque destination.\n\n@map_list_plus! : vous pouvez envoyer cette formation ici.\n@map_list_checkmark! : la formation est déjà envoyée ici et vous pouvez annuler cette action.\n@map_list_lock! : la formation est déjà envoyée ici, mais vous ne pouvez #b pas#! annuler cette action.\n@map_list_cross! : vous ne pouvez #b pas#! envoyer cette formation ici.#!"
 MILITARY_FORMATION_LIST_PANEL_DESTINATION_HEADER: "Destination"
 MILITARY_FORMATION_LIST_PANEL_DESTINATION_HEADER_TOOLTIP: "#header Destination#!\n$TOOLTIP_DELIMITER$\nC’est ici que se rendra la [concept_military_formation|l]. Si elle ne s’y trouve pas déjà, elle commencera à s’y rendre."
 MILITARY_FORMATION_LIST_PANEL_UNITS_HEADER: "Unités"
 MILITARY_FORMATION_LIST_PANEL_UNITS_HEADER_TOOLTIP: "Le nombre d’unités présentes sur le [concept_front|l]."
 MILITARY_FORMATION_LIST_PANEL_ADVANTAGE_HEADER: "Avantage"
 MILITARY_FORMATION_LIST_PANEL_ADVANTAGE_HEADER_TOOLTIP: "Avantage et désavantage du [concept_front|l]"
 MILITARY_FORMATION_LIST_PANEL_TRAVEL_TIME_HEADER: "Temps de trajet"
 MILITARY_FORMATION_LIST_PANEL_TRAVEL_TIME_HEADER_TOOLTIP: "#header Temps de trajet#!\n$TOOLTIP_DELIMITER$\nDurée (en jours) nécessaire à la [concept_military_formation|l] pour atteindre la destination spécifiée, compte tenu de sa position actuelle."
 MAP_LIST_MILITARY_FORMATION_TRAVEL_TIME: "[SelectLocalization( MapListOption.GetMilitaryFormationData.CanTravelTo, 'MAP_LIST_MILITARY_FORMATION_TRAVEL_TIME_DAYS', 'MAP_LIST_MILITARY_FORMATION_TRAVEL_TIME_NO_PATH' )]"
 MAP_LIST_MILITARY_FORMATION_TRAVEL_TIME_DAYS: "[MapListOption.GetMilitaryFormationData.GetTravelDays|v] jours"
 MAP_LIST_MILITARY_FORMATION_TRAVEL_TIME_NO_PATH: "Aucun accès"
 MAP_LIST_MILITARY_FORMATION_UNITS: "[Front.GetPlayerSideNumUnitsAtFront|0v] + [Front.GetPlayerSideNumUnitsTraveling|0v] @battalions!"
 NOT_PLAYER_MARKET_CONSUMPTION_TAXES: "@red_cross! Impossible de définir des [Concept('concept_consumption_tax','$concept_consumption_taxes$')|l] sur [Goods.GetCustom('FR_Goods_Le')][Goods.GetName|l] sur le [Goods.GetMarket.GetName|l] puisque vous ne faites pas partie de ce [concept_market|l]"
 NOT_PLAYER_MARKET_PRIORITY: "@red_cross! Impossible de définir une priorité sur [Goods.GetCustom('FR_Goods_Le')][Goods.GetName|l] sur le [Goods.GetMarket.GetName|l] puisque vous ne faites pas partie de ce [concept_market|l]"
 CURRENT_GOODS_FILTERS: "[SelectLocalization(And(MarketPanel.IsSelected('staple'), MarketPanel.IsSelected('military')), 'ALL_GOODS', 'SELECTED_FILTER')]"
 SELECTED_FILTER: "[AddTextIf(MarketPanel.IsSelected('staple'), '$STAPLE_FILTER_NAME$')][AddTextIf(MarketPanel.IsSelected('industrial'), '$INDUSTRIAL_FILTER_NAME$')][AddTextIf(MarketPanel.IsSelected('military'), '$MILITARY_FILTER_NAME$')][AddTextIf(MarketPanel.IsSelected('luxury'), '$LUXURY_FILTER_NAME$')]"
 WORLD_MARKET_CURRENT_GOODS_FILTERS: "[SelectLocalization(And(WorldMarketPanel.IsSelected('staple'), WorldMarketPanel.IsSelected('military')), 'ALL_GOODS', 'WORLD_MARKET_SELECTED_FILTER')]"
 WORLD_MARKET_SELECTED_FILTER: "[AddTextIf(WorldMarketPanel.IsSelected('staple'), '$STAPLE_FILTER_NAME$')][AddTextIf(WorldMarketPanel.IsSelected('industrial'), '$INDUSTRIAL_FILTER_NAME$')][AddTextIf(WorldMarketPanel.IsSelected('military'), '$MILITARY_FILTER_NAME$')][AddTextIf(WorldMarketPanel.IsSelected('luxury'), '$LUXURY_FILTER_NAME$')]"
 MARKET_TRADE_VALUES: "[MakeLineIf(NotZero_CFixedPoint(Market.GetExportedAmountToMarket(Goods.GetMarket, Goods.Self)), 'MARKET_EXPORTS_TO_MARKET')][MakeLineIf(NotZero_CFixedPoint(Market.GetImportedAmountFromMarket(Goods.GetMarket, Goods.Self)), 'MARKET_IMPORTS_FROM_MARKET')][MakeLineIf(NotZero_CFixedPoint(Market.GetExportedAmount(Goods.Self)), 'MARKET_EXPORTS_TO_WORLD_MARKET')][MakeLineIf(NotZero_CFixedPoint(Market.GetImportedAmount(Goods.Self)), 'MARKET_IMPORTS_FROM_WORLD_MARKET')]"
 MARKET_EXPORTS_TO_MARKET: "@market_sell_orders! [Concept('concept_trade','Exportation')] vers le [Goods.GetMarket.GetName|l] [Goods.GetMarket.GetOwner.GetFlagTextIcon] : [Goods.GetName|l] [Goods.GetTextIcon] ([Market.GetExportedAmountToMarket(Goods.GetMarket, Goods.Self)|v0])"
 MARKET_IMPORTS_FROM_MARKET: "@market_buy_orders! [Concept('concept_trade','Importation')] depuis le [Goods.GetMarket.GetName|l] [Goods.GetMarket.GetOwner.GetFlagTextIcon] : [Goods.GetName] [Goods.GetTextIcon] ([Market.GetImportedAmountFromMarket(Goods.GetMarket, Goods.Self)|v0])"
 MARKET_EXPORTS_TO_WORLD_MARKET: "@market_exports! [Concept('concept_trade','Exportation')] vers le [concept_world_market|l] : [Goods.GetName] [Goods.GetTextIcon] ([Market.GetExportedAmount(Goods.Self)|v0])"
 MARKET_IMPORTS_FROM_WORLD_MARKET: "@market_imports! [Concept('concept_trade','Importation')] depuis le [concept_world_market|l] : [Goods.GetName] [Goods.GetTextIcon] ([Market.GetImportedAmount(Goods.Self)|v0])"
 ACCEPTED_CULTURALLY: "Culture acceptée"
 DISCRIMINATED_CULTURALLY: "Culture discriminée"
 ACCEPTED_RELIGIOUSLY: "Religion acceptée"
 DISCRIMINATED_RELIGIOUSLY: "Religion discriminée"
 IS_EMPLOYED: "Employés uniquement"
 IS_UNEMPLOYED: "Sans-emploi uniquement"
 LIVES_IN_INCORPORATED_STATE: "Habite dans un État incorporé"
 DOES_NOT_LIVE_IN_INCORPORATED_STATE: "Habite dans un État non incorporé"
 BUTTON_POP_BROWSER: "#header $POP_BROWSER$#!"
 POP_BROWSER: "[AddLocalizationIf(Not(Country.IsLocalPlayer), Concatenate(Country.GetAdjective, ' '))]Données du recensement"
 LOYALTY: "Loyauté"
 HAS_LOYALISTS: "A des loyalistes"
 HAS_RADICALS: "A des radicaux"
 POP_GROWTH: "Croissance du groupe social"
 IS_GROWING: "Augmente"
 IS_SHRINKING: "Diminue"
 CHARTS: "Graphiques"
 LITERACY: "[concept_literacy]"
 NEEDS: "Besoins"
 RELIGION_PIECHART_HEADER: "[concept_religion]"
 CULTURE_PIECHART_HEADER: "[concept_culture]"
 POP_TYPE: "$concept_profession$"
 DISCRIMINATION_CULTURAL: "Discrimination (culturelle)"
 DISCRIMINATION_RELIGIOUS: "Discrimination (religieuse)"
 EMPLOYMENT: "Emploi"
 FILTERED_BUILDINGS: "$concept_buildings$ filtrés"
 INCORPORATION: "Incorporation"
 STATE_PIECHART_HEADER: "[concept_state]"
 FILTERED_COUNTRY_OWNERSHIP_PIECHART: "#header #todo PRCAL-32931 ShareHolder.GetName AddTextIf(ShareHolder.GetCountry.IsLocalPlayer, '(you)')#!#!\n#todo BuildingBrowserPanel.GetFilteredOwnershipByShareholder(Shareholder.Self)|%v#! des [Concept('concept_ownership_share','$concept_ownership_shares$')|l] sont détenues par #todo ShareHolder.GetName AddTextIf(ShareHolder.GetCountry.IsLocalPlayer, '(you)')#!.\n\nCorrespond aux filtres actuels."
 FILTERED_OWNERSHIP_DISTRIBUTION_PIECHART: "#header #todo PRCAL-32931 Country.GetName AddTextIf(Country.IsLocalPlayer, '(vous)')#!#!\n#todo BuildingBrowserPanel.GetFilteredDistributionPercentageInCountry(Country.Self)|%v#! des [Concept('concept_ownership_share','$concept_ownership_shares$')|l] des [Concept('concept_building','$concept_buildings$')|l] appartenant [GetPlayer.GetAltNameNoFormatting('Au')][GetPlayer.GetName] se trouvent en #todo Country.GetName#!.\n\nCorrespond aux filtres actuels."
 FILTERED_POP_TYPE_PIECHART: "#header [PopType.GetName]#!\n[PopBrowserPanel.GetFilteredTotalSizeForPopType(PopType.Self)|Dv] [Concept('concept_pop', '$concept_pops$')|l] de type [PopType.GetName] correspondent aux filtres actuels"
 FILTERED_RELIGION_PIECHART: "#header [Religion.GetName]#!\n[PopBrowserPanel.GetFilteredTotalSizeForReligion(Religion.Self)|Dv] [Concept('concept_pop', '$concept_pops$')|l] de religion [Religion.GetName|l] correspondent aux filtres actuels"
 FILTERED_CULTURE_PIECHART: "#header [Culture.GetName]#!\n[PopBrowserPanel.GetFilteredTotalSizeForCulture(Culture.Self)|Dv] [Concept('concept_pop', '$concept_pops$')|l] de culture [Culture.GetName] correspondent aux filtres actuels"
 FILTERED_STATE_PIECHART: "#header [State.GetName]#!\n[PopBrowserPanel.GetFilteredTotalSizeForState(State.Self)|Dv] [Concept('concept_pop', '$concept_pops$')|l] de [State.GetName] correspondent aux filtres actuels"
 POP_TYPE_POL_STR_PIECHART: "#header [PopType.GetName]#!\nLes groupes sociaux de type [PopType.GetName] correspondant aux filtres actuels ont une [concept_political_strength|l] totale de [PopBrowserPanel.GetFilteredPolStrForPopType(PopType.Self)|Dv]"
 NO_STATES: "Aucun État"
 NO_POPS_MATCHES_THE_CURRENT_FILTER: "Aucun [Concept('concept_pop', '$concept_pop$')|l] ne correspond aux filtres actuels"
 POP_BROWSER_POP_SOL: "[Pop.GetFormattedStandardOfLivingLabel|v] ([Pop.GetFormattedStandardOfLiving|v]) $WEALTH_GROWING_OR_SHRINKING$"
 WEALTH_GROWING_OR_SHRINKING: "[AddTextIf(GreaterThan_CFixedPoint(Pop.GetWealthProgression, '(CFixedPoint)0'), '@arrow_up!')][AddTextIf(LessThan_CFixedPoint(Pop.GetWealthProgression, '(CFixedPoint)0'), '@arrow_down!')]"
 POP_BROWSER_LITERACY: "[Pop.GetLiteracyRate|%1v] $LITERACY_GROWING_OR_SHRINKING$"
 LITERACY_GROWING_OR_SHRINKING: "[AddTextIf(GreaterThan_CFixedPoint(Pop.GetEducationAccess, Pop.GetLiteracyRate), '@arrow_up!')][AddTextIf(LessThan_CFixedPoint(Pop.GetEducationAccess, Pop.GetLiteracyRate), '@arrow_down!')]"
 POP_BROWSER_JOB_SATISFACTION: "[Pop.GetCurrentJobSatisfaction|0+=] $JOB_SATISFACTION_GROWING_OR_SHRINKING$"
 JOB_SATISFACTION_GROWING_OR_SHRINKING: "[AddTextIf(LessThan_CFixedPoint(Pop.GetCurrentJobSatisfaction, Pop.GetNextJobSatisfaction), '@arrow_up!')][AddTextIf(GreaterThan_CFixedPoint(Pop.GetCurrentJobSatisfaction, Pop.GetNextJobSatisfaction), '@arrow_down!')]"
 WEALTH_PROGRESSION: "Richesse"
 SOL_IS_GROWING: "En hausse"
 SOL_IS_SHRINKING: "En baisse"
 STANDARD_OF_LIVING: "Niveau de vie"
 IS_ABOVE_EXPECTED_SOL: "Supérieur au niveau de vie attendu"
 IS_BELOW_EXPECTED_SOL: "Inférieur au niveau de vie attendu"
 IS_BELOW_EXPECTED_SOL_MIDDLE: "En dessous du niveau de vie attendu pour la [concept_middle_strata|l]"
 POP_SIZE: "Taille"
 IS_TEN_OR_LARGER: "Au moins #b 10#! [Concept('concept_individual','$concept_individuals$')|l]"
 IS_A_HUNDRED_OR_LARGER: "Au moins #b 100#! [Concept('concept_individual','$concept_individuals$')|l]"
 IS_A_THOUSAND_OR_LARGER: "Au moins #b 1 000#! [Concept('concept_individual','$concept_individuals$')|l]"
 JOB_SATISFACTION: "Satisfaction professionnelle"
 IS_JOBSEEKER: "Est demandeur d’emploi"
 IS_NOT_JOBSEEKER: "Est satisfait"
 ALL_GOODS: "Tous les biens"
 STAPLE_FILTER_NAME: "Biens essentiels"
 INDUSTRIAL_FILTER_NAME: "Biens industriels"
 MILITARY_FILTER_NAME: "Biens militaires"
 LUXURY_FILTER_NAME: "Biens de luxe"
 ALL: "Tout"
 YOUR: "Les vôtres"
 GROUPED_BY_GOODS: ", regroupées par biens"
 GROUPED_BY_COUNTRY: ", regroupées par pays"
 FILTER_GOODS: "Filtrer les biens"
 GROUP: "Groupe"
 FILTER_BY_OWNER: "Filtrer par propriétaire"
 BY_GOODS: "Par biens"
 BY_COUNTRY: "Par pays"
 ONLY_YOURS: "À vous uniquement"
 EMBARGO: "Embargo"
 TRADE_AGREEMENT: "Accord commercial"
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Statut#!\n$TOOLTIP_DELIMITER$\n#concept La possibilité d’activer le [concept_conscription_center|l] dans chaque [concept_state].\n\n@map_list_plus! : vous pouvez sélectionner ceci.\n@map_list_plus_and_checkmark! : vous pouvez le sélectionner et vous le faites déjà ici.\n@map_list_checkmark! : vous le faites déjà ici et vous pouvez le désélectionner.\n@map_list_lock! : vous le faites déjà ici, mais vous ne pouvez pas le désélectionner.\n@map_list_cross! : vous ne pouvez pas sélectionner ceci.#!"
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_STATE_HEADER: "État"
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_STATE_HEADER_TOOLTIP: "#header État#!\n$TOOLTIP_DELIMITER$\nL’[concept_state] dans lequel le [concept_conscription_center|l] sera actif."
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_SIZE_TOOLTIP: "#header Taille#!\n$TOOLTIP_DELIMITER$\nLa taille du [concept_conscription_center|l]."
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_UNITS: "Unités"
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_UNITS_TOOLTIP: "#header Unités#!\n$TOOLTIP_DELIMITER$\nLe nombre d’unités qui seront enrôlées par le [concept_conscription_center|l]."
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_STATE_LIMIT_HEADER: "Limite de l’$concept_state$"
 ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_STATE_LIMIT_HEADER_TOOLTIP: "#header [concept_conscription_limit]#!\n$TOOLTIP_DELIMITER$\nLe nombre maximum de [Concept('concept_conscript_battalion','$concept_conscript_battalions$')|l] que cet [concept_state] peut actuellement recruter."
 COUNTRY_MOBILIZATION_SWAY_PANEL: "[Concept('concept_mobilize_army','$concept_mobilize_army_mobilization$')] : #v [Country.GetMobilizationRatio|0%]#!"
 RECRUIT_COMMANDERS_CHARACTERS_POPUP: "Commandera $DESC$"
 COLONY_MAP_MARKER_DAYS_LEFT: "[SelectLocalization( GreaterThan_int32(GetPlayer.GetTensionWith( State.GetNextColonyProvince.GetState.GetOwner), '(int32)50'), '@warning! ', '')]#bold [State.GetColonyProgressAsDays]#! jours"
 BUILDING_MAP_MARKER_WEEKS_LEFT: "#bold [Building.GetConstructionRemainingWeeksDesc]#!"
 MARKET_ACCESS_WITH_WARNING: "[SelectLocalization( LessThan_CFixedPoint(State.GetMarketAccess, '(CFixedPoint)1'), '@warning!', '')] #v [State.GetMarketAccess|%0]#!"
 CLOUT_GRAPH_TITLE: "#title [concept_clout]#!"
 VOTES_GRAPH_TITLE: "#title [Concept('concept_votes', 'Scrutins')] actuels#!"
 INTEREST_GROUPS_IN_GOVERNMENT: "[concept_in_government]\n[AccessPlayer.GetGovernmentInterestGroupsDesc]"
 INTEREST_GROUPS_IN_OPPOSITION: "[concept_in_opposition]\n[AccessPlayer.GetOppositionInterestGroupsDesc]"
 MARGINALIZED_INTEREST_GROUPS: "[concept_marginalized]\n[AccessPlayer.GetMarginalInterestGroupsDesc]"
 INTEREST_GROUP_NAME_WITH_CLOUT: "[InterestGroup.GetNameNoIcon] (#v #tooltippable #tooltip:[InterestGroup.GetTooltipTag],IG_CLOUT_BREAKDOWN,IGCloutTooltip [InterestGroup.GetClout|%1]#!#!#!)"
 CHARACTER_NAME_WITH_POPULARITY: "[Character.GetFullName] #tooltippable #tooltip:[Character.GetTooltipTag],POPULARITY_BREAKDOWN [LabelingHelper.GetLabelForPopularityCFixedPoint(Character.GetPopularity)] (#v [Character.GetPopularity|0]#!#!#!)"
 IG_AGITATORS: "[Concept( 'concept_agitator', '$concept_agitators$' )]"
 AGITATOR: "[concept_agitator]"
 NO_AGITATORS: "Aucun militant"
 NO_AGITATOR_IN_MOVEMENT: "Aucun [concept_agitator|l] partisan"
 IG_LOBBIES: "[Concept('concept_political_lobby','$concept_political_lobbies$')]"
 AVAILABLE_AGITATOR_SLOTS: "Potentiel pour #tooltippable #tooltip:[GetRawTextTooltipTag(Country.GetModifier.GetTooltipFor('country_agitator_slots_add'))] [Country.GetEmptyAgitatorSlots|v]#!#! [SelectLocalization(EqualTo_int32(Country.GetEmptyAgitatorSlots, '(int32)1'), 'AGITATOR', 'IG_AGITATORS')]"
 NO_AVAILABLE_AGITATOR_SLOTS: "Tous les emplacements « [concept_agitator] » sont occupés"
 CANNOT_SUPPORT_AGITATORS: "Impossible de soutenir des [Concept('concept_agitator', '$concept_agitators$')|l]"
 CANNOT_SUPPORT_AGITATORS_TOOLTIP: "#r Impossible de soutenir des [Concept('concept_agitator', '$concept_agitators$')|l]#!\n@red_cross! Les pays [Concept('concept_revolution', '$concept_revolutionary$s')|l] ne peuvent pas avoir de militants"
 EXILED_AGITATORS: "Militants exilés"
 LOYALISTS_AND_RADICALS: "Loyalistes et radicaux"
 LOYALISTS_AND_RADICALS_IN_COUNTRY: "[Concept('concept_loyalist', '$concept_loyalists$')] et [Concept('concept_radical', '$concept_radicals$')|l] [Country.GetAltNameNoFormatting('En')][Country.GetName]"
 LOYALISTS_AND_RADICALS_IN_INTEREST_GROUP: "[Concept('concept_loyalist', '$concept_loyalists$')] et [Concept('concept_radical', '$concept_radicals$')|l] dans le groupe d’intérêt [InterestGroup.GetName]"
 AGITATORS: "Militants"
 INVITE: "Inviter"
 AGITATOR_START_POLITICAL_MOVEMENT: "Lancera un [PoliticalMovementType.GetName]"
 AGITATOR_JOIN_POLITICAL_MOVEMENT: "Rejoindra le [PoliticalMovement.GetNameNoIcon|l]"
 AGITATOR_NO_POLITICAL_MOVEMENT: "Ne commencera pas ou ne rejoindra pas un [concept_political_movement|l]"
 ELECTION_PANEL_ACTIVE_CAMPAIGN_TITLE: "Campagne de [Election.GetNextElectionYearRaw]"
 ELECTION_PANEL_ELECTION_RESULT_TITLE: "Résultats des élections de [Election.GetLastElectionYearRaw]"
 ELECTION_PANEL_HEADER_LINE_ONE: "[Election.GetTitle]"
 ELECTION_PANEL_HEADER_LINE_TWO: "[concept_election] en [Election.GetCountryName]"
 IG_VOTERS_TITLE: "Électeurs :"
 TOTAL_VOTERS: "Nombre total d’électeurs"
 DATE_OF_ELECTION: "Date de l’[concept_election|l]"
 ELECTION_DATE: "$DATE$ (dans $NUM_DAYS$ jours)"
 ELECTION_DATE_ONE_DAY: "$DATE$ (dans un jour)"
 ELECTION_DATE_LESS_THAN_ONE_DAY: "$DATE$ (moins d’un jour)"
 PARTIES: "[Concept('concept_party', '$concept_parties$')]"
 LAST_ELECTION_RESULTS: "Résultats de la dernière [concept_election|l] : [Election.GetLastElectionDateDesc]"
 PARTY_AFFILIATION: "Affiliation à un parti"
 WILL_JOIN_PARTY: "#v [InterestGroup.GetWillJoinPartyDesc]#!"
 PROJECTED_VOTES_TITLE: "Prévisions de vote :"
 PROJECTED_VOTES: "$SHARE|%0v$"
 PROJECTED_VOTES_TOOLTIP: "#header Prévisions de vote#!\n$PROJECTED_PARTY_POL_STR_FROM_VOTES$\n$TOOLTIP_DELIMITER$\n$PARTY_POL_STR_FROM_VOTES$"
 PARTY_POL_STR_FROM_VOTES: "Lors des dernières élections, ils ont obtenu [Party.GetCurrentVotingPowerShare|%0v] des [concept_votes|l]\nCela confère [SelectLocalization(Party.GetCountry.IsInElectionCampaignPeriod, 'CURRENTLY', '')]à ses membres [Party.GetCurrentVotingPower|Kv] de [concept_political_strength|l]"
 PROJECTED_PARTY_POL_STR_FROM_VOTES: "[Party.GetName] devrait obtenir [Party.GetProjectedVotesDesc] des [concept_votes|l]\nCela leur donnerait [Party.GetCurrentPollVotingPower|Kv] de [concept_political_strength|l] en raison des votes, ce qui est #v [Party.GetCurrentPollVotingPowerDifference|K+=]#! par rapport au résultat des dernières élections"
 CURRENTLY: "actuellement "
 PARTY_TOOLTIP_PROJECTED_PARTY_POL_STR_FROM_VOTES: "#title Élection en cours#!\n[concept_momentum] : #tooltippable #tooltip:[Party.GetTooltipTag],MOMENTUM_TOOLTIP [Party.GetMomentum|v%0]#!#!\n$PROJECTED_PARTY_POL_STR_FROM_VOTES$\n$TOOLTIP_DELIMITER$\n#title Dernière élection#!\n"
 MOMENTUM_TOOLTIP: "[Party.GetMomentumDesc]"
 PARTY_AFFILIATION_TOOLTIP: "#header Affiliation de [InterestGroup.GetName] avec [Party.GetName] [Party.GetMembersSummary] : #v $SCORE|=+0$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 PRICE_DIFFERENCE: "Différence de prix"
 STATE_TO_MARKET_PRICE_DIFF_TOOLTIP: "#header Différence de prix#!\nLe bien [Goods.GetName] [Goods.GetTextIcon] coûte [Goods.GetStateToMarketPriceDiff|%0=-] en [Goods.GetState.GetName] par rapport à son prix sur le [Goods.GetMarket.GetName|l]"
 CULTURE_IN_STATE_ITEM: "[STATE.GetPopulationForCulture( CULTURE.Self )|vD] [CULTURE.GetName] ([STATE.GetPolStrForCulture( CULTURE.Self )|vD] [concept_political_strength|l])"
 CULTURE_IN_STATE_FORMAT: "#header Cultures en [STATE.GetName]#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 RELIGION_IN_STATE_ITEM: "[STATE.GetPopulationForReligion( RELIGION.Self )|vD] [RELIGION.GetName] ([STATE.GetPolStrForReligion( RELIGION.Self )|vD] [concept_political_strength|l])"
 RELIGION_IN_STATE_FORMAT: "#header Religions en [STATE.GetName]#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 IG_IN_STATE_ITEM: "$VAL|vD$ - [INTEREST_GROUP.GetName]"
 IGS_IN_STATE_FORMAT: "#header [concept_political_strength] de [STATE.GetName]#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
 TECHNOLOGY: "Technologie"
 TOOLTIP_REQUIREMENTS_ANY: "#title Nécessite l’un des éléments suivants :#!"
 TOOLTIP_REQUIREMENTS_ALL: "#title Nécessite tous les éléments suivants :#!"
 TECHNOLOGY_RESEARCHED: "#i Déjà recherché#!"
 TOOLTIP_UNLOCKS: "#title Déverrouille#!"
 TOOLTIP_UNLOCK_PRODUCTION_METHOD: "Déverrouille $PRODUCTION_METHOD|l$ ([concept_production_method|l]) pour $BUILDING_TYPE|l$"
 TOOLTIP_DISALLOW_PRODUCTION_METHOD: "Verrouille $PRODUCTION_METHOD|l$ ([concept_production_method|l]) pour $BUILDING_TYPE|l$"
 TOOLTIP_UNLOCK_BUILDING_TYPE: "Déverrouille $BUILDING_TYPE|l$ ([concept_building|l])"
 TOOLTIP_UNLOCK_COMBAT_UNIT_TYPE: "Déverrouille $COMBAT_UNIT_TYPE$ ([concept_unit|l])"
 TOOLTIP_UNLOCK_MOBILIZATION_OPTION: "Déverrouille $MOBILIZATION_OPTION$ ([concept_mobilization_option|l])"
 TOOLTIP_UNLOCK_COMPANY_TYPE: "Déverrouille [CompanyType.GetName] ([concept_company|l])"
 TOOLTIP_UNLOCK_STATE_TRAIT_COLONIZATION: "Permet l’établissement de [Concept('concept_colony','$concept_colonies$')|l] dans les [Concept('concept_state', '$concept_states$')] avec [STATE_TRAIT.GetName|l]"
 TOOLTIP_DISABLE_STATE_TRAIT: "Supprime tous les effets de [STATE_TRAIT.GetName|l] dans les [Concept('concept_colony','$concept_colonies$')|l] de vos [Concept('concept_state', '$concept_states$')]"
 TOOLTIP_UNLOCK_LAW_TYPE: "Déverrouille $LAW|l$"
 TOOLTIP_UNLOCK_PARTY: "Déverrouille $PARTY|l$"
 TOOLTIP_UNLOCK_DECREE: "Déverrouille [DECREE_TYPE.GetName|l] ([concept_decree|l])"
 TOOLTIP_UNLOCK_DIPLOMATIC_ACTION: "Déverrouille [DIPLOMATIC_ACTION_TYPE.GetName|l] ([concept_diplomatic_action|l])"
 TOOLTIP_UNLOCK_TECH_TYPE: "Mène à $TECH_TYPE|l$ ([concept_technology|l])"
 TOOLTIP_DISALLOW_LAW_TYPE: "Verrouille $LAW|l$"
 TOOLTIP_UNLOCKED_BY_LAW_TYPE: "Déverrouillé par $LAW|l$"
 TOOLTIP_DISALLOWED_BY_LAW_TYPE: "Verrouillé par $LAW|l$"
 TOOLTIP_UNLOCKED_BY_TECHNOLOGY: "$TECHNOLOGY$"
 TOOLTIP_UNLOCKED_BY_PRINCIPLE: "$PRINCIPLE$"
 TOOLTIP_UNLOCKED_BY_IDENTITY: "[POWER_BLOC_IDENTITY.GetName]"
 TOOLTIP_UNLOCKS_NO_BREAKDOWN: "$UNLOCKED_DESC$"
 TOOLTIP_UNLOCKS_WITH_BREAKDOWN: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Déverrouille $UNLOCKED_CATEGORIES_LIST$#!#!"
 TOOLTIP_UNLOCK_LAW_SINGLE: "une nouvelle [concept_law|l]"
 TOOLTIP_UNLOCK_LAW_MANY: "plusieurs nouvelles [Concept('concept_law', '$concept_laws$')|l]"
 TOOLTIP_UNLOCK_PM_SINGLE: "une nouvelle [concept_production_method|l]"
 TOOLTIP_UNLOCK_PM_MANY: "plusieurs nouvelles [Concept('concept_production_method', '$concept_production_methods$')|l]"
 TOOLTIP_UNLOCK_DECREE_SINGLE: "un nouveau [concept_decree|l]"
 TOOLTIP_UNLOCK_DECREE_MANY: "plusieurs nouveaux [Concept('concept_decree', '$concept_decrees$')|l]"
 TOOLTIP_DISALLOWS_NO_BREAKDOWN: "$DISALLOWED_DESC$"
 TOOLTIP_DISALLOWS_WITH_BREAKDOWN: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Verrouille $DISALLOWED_CATEGORIES_LIST$#!#!"
 TOOLTIP_DISALLOW_PM_SINGLE: "une [concept_production_method|l]"
 TOOLTIP_DISALLOW_PM_MANY: "plusieurs [Concept('concept_production_method', '$concept_production_methods$')|l]"
 STANDARD_PM_LIST_ITEM: "\n$PRODUCTION_METHOD$"
 STANDARD_PMS_DESC: "#header Réinitialiser aux [Concept('concept_production_method', '$concept_production_methods$')|l] standards#!$LIST$"
 CURRENTLY_ACTIVE_LAW: "#b Loi active#!"
 CURRENTLY_ACTIVE_LAW_IN_LAWGROUP: "Loi [Law.GetGroup.GetName|l] actuellement active"
 LAW_CURRENTLY_BEING_ENACTED: "#b Essaye de promulguer ceci#!"
 CURRENT_LAW_BEING_ENACTED: "#b Promulgation de la loi#!"
 NO_LAW_IN_THIS_LAWGROUP_IS_BEING_ENACTED: "Aucune [concept_law|l] du groupe de [LawGroup.GetName|l] n’est en cours de promulgation"
 ACTIVE_LAW: "@green_checkmark! Fait partie de nos [Concept('concept_law', '$concept_laws$')|l]"
 ACTIVE_LAW_COUNTRY: "@green_checkmark! Fait partie des [Concept('concept_law', '$concept_laws$')|l] [Country.GetAltAdjectiveNoFlag('FP')|l]"
 BEING_ENACTED_LAW: "#v En cours d’adoption#!"
 INACTIVE_LAW: "@red_cross! Ne fait #b pas#! partie de nos [Concept('concept_law', '$concept_laws$')|l]"
 INACTIVE_LAW_COUNTRY: "@red_cross! Ne fait #b pas#! partie des [Concept('concept_law', '$concept_laws$')|l] [Country.GetAltAdjectiveNoFlag('FP')|l]"
 LAW_FULL_NAME: "$LAW_TYPE$ ($LAW_TYPE_TYPE|l$) de $LAW_GROUP|l$"
 LAW_TYPE_TYPE_DESC_LAW: "[concept_law]"
 LAW_TYPE_TYPE_DESC_INSTITUTION: "Institution"
 ARTICLE_LAW_LABEL: "[concept_law] : [Article.GetLaw.GetName]"
 ARTICLE_DRAFT_LAW_LABEL: "[concept_law] : [ArticleDraft.GetLawType.GetName]"
 LAW_BEING_ENACTED_DESC: "En cours de [Concept('concept_enactment_of_laws', 'promulgation')] [Law.GetCountry.GetAltNameNoFormatting('En')][Law.GetCountry.GetName] (prochain point de contrôle dans #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_DESC [Law.GetCheckpointRemainingDays|v] jours#!#!)\n\n[Concept('concept_enactment_phase','$concept_enactment_phase_short$')] : [Law.GetCountry.GetCustom(Law.GetCurrentEnactmentPhaseKey)|v] (#v [Add_int32('(int32)1', Law.GetEnactmentPhase)]/[GetDefine('NPolitics','LAW_ENACTMENT_MAX_PHASES')]#!)\n$LAW_ENACTMENT_SETBACKS_LABEL$ [Law.GetEnactmentSetbackCount|-]/[Law.GetCountry.GetMaxLawEnactmentSetbacks|-]\n[SelectLocalization(EqualTo_CFixedPoint(Law.GetCountry.GetModifier.GetValueFor('country_cannot_enact_laws_bool'), '(CFixedPoint)0'), 'LAW_ENACTMENT_PROGRESS_NOT_STALLED', 'LAW_ENACTMENT_PROGRESS_STALLED')][ConcatIfNeitherEmpty('\n\n', Law.PredictLegitimacyChangeToEnactDesc)]"
 LAW_BEING_ENACTED_PANEL_DESC: "En cours de [Concept('concept_enactment_of_laws', 'promulgation')] [Law.GetCountry.GetAltNameNoFormatting('En')][Law.GetCountry.GetName] (prochain point de contrôle dans #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_DESC [Law.GetCheckpointRemainingDays|v] jours#!#!)[ConcatIfNeitherEmpty('\n\n', Law.PredictLegitimacyChangeToEnactDesc)]"
 IG_NAME_AND_CLOUT: "[InterestGroup.GetName] (#v [InterestGroup.GetClout|%1]#!)"
 LAW_LIMITED_TO_FRONTIER_COLONIZATION: "La colonisation est limitée par la [concept_law|l] aux [Concept('concept_state', '$concept_states$')] reliés à l’[concept_capital_state] par voie terrestre ou par une voie maritime très limitée"
 MESSAGE_SETTINGS: "Paramètres des messages"
 MESSAGE_SETTINGS_NOTIFICATION_TYPES: "Types de notifications"
 MESSAGE_SETTINGS_DIPLOMATICALLY_INTERESTING: "Pays intéressants"
 MESSAGE_SETTINGS_NOTIFICATIONS_LOG: "Journal des notifications"
 MESSAGE_SETTINGS_SORT_NOTIFICATION_TYPE: "Type de notification"
 MESSAGE_SETTINGS_SORT_APPEARANCE: "Apparence"
 MESSAGE_SETTINGS_SORT_PAUSE: "Pause ?"
 MESSAGE_SETTINGS_ALERTS_BUTTON_LABEL: "Nombre du bouton « Situation actuelle »"
 MESSAGE_SETTINGS_ALERTS: "Actions et alertes importantes"
 MESSAGE_SETTINGS_SORT_ALERT_NAME: "Nom de l’alerte"
 ALERT_SETTINGS_NAME_ALERT: "Alerte"
 ALERT_SETTINGS_NAME_IMPORTANT_ACTION: "Action importante"
 ALERT_SETTINGS_NAME_ANGRY_IMPORTANT_ACTION: "Action importante rouge"
 ALERT_SETTINGS_NAME_ALERT_WITH_CONCEPT: "[concept_alert_settings_alert]"
 ALERT_SETTINGS_NAME_IMPORTANT_ACTION_WITH_CONCEPT: "[concept_alert_settings_important_action]"
 ALERT_SETTINGS_NAME_ANGRY_IMPORTANT_ACTION_WITH_CONCEPT: "[concept_alert_settings_angry_important_action]"
 ALERT_SETTINGS_NAME_NONE_WITH_CONCEPT: "[concept_alert_settings_none]"
 MESSAGE_SETTINGS_INTERESTING_ALWAYS: "Toujours afficher"
 MESSAGE_SETTINGS_INTERESTING_ALWAYS_TOOLTIP: "#header Toujours afficher#!\nToutes les notifications [InterestingCountryItem.GetCountry.GetAltNameNoFormatting('Du')][InterestingCountryItem.GetCountry.GetName] seront toujours affichées."
 MESSAGE_SETTINGS_INTERESTING_AUTOMATIC: "Pertinence diplomatique"
 MESSAGE_SETTINGS_INTERESTING_AUTOMATIC_TOOLTIP: "#header Pertinence diplomatique#!\nLes notifications [InterestingCountryItem.GetCountry.GetAltNameNoFormatting('Du')][InterestingCountryItem.GetCountry.GetName] ne seront affichées que si elles vous concernent."
 MESSAGE_SETTINGS_INTERESTING_NEVER: "Ne jamais afficher"
 MESSAGE_SETTINGS_INTERESTING_NEVER_TOOLTIP: "#header Ne jamais afficher#!\nLes notifications [InterestingCountryItem.GetCountry.GetAltNameNoFormatting('Du')][InterestingCountryItem.GetCountry.GetName] ne seront jamais affichées."
 CURRENT_SITUATION_LABEL_TOTAL: "Total"
 CURRENT_SITUATION_LABEL_UNREAD: "Non lues"
 CURRENT_SITUATION_TOTAL_TOOLTIP: "[SelectLocalization(Not(MessageSettingsWindow.IsCurrentSituationLabelTotal), 'CURRENT_SITUATION_SELECT_TOTAL_TOOLTIP', 'CURRENT_SITUATION_CURRENTLY_SELECTED_TOTAL_TOOLTIP')]\nC’est le paramètre #b par défaut#!\n$TOOLTIP_DELIMITER$\n$CURRENT_SITUATION_TOTAL_DESC$"
 CURRENT_SITUATION_SELECT_TOTAL_TOOLTIP: "#header Sélectionner un total#!"
 CURRENT_SITUATION_CURRENTLY_SELECTED_TOTAL_TOOLTIP: "#header Sélectionner un total#! #i (actuellement sélectionné)#!"
 CURRENT_SITUATION_TOTAL_DESC: "Affiche toujours le nombre total d’[Concept('concept_alert_settings_important_action', '$concept_alert_settings_important_actions$')|l] dans le menu Situation actuelle."
 CURRENT_SITUATION_UNREAD_TOOLTIP: "[SelectLocalization(MessageSettingsWindow.IsCurrentSituationLabelTotal, 'CURRENT_SITUATION_SELECT_UNREAD_TOOLTIP', 'CURRENT_SITUATION_CURRENTLY_SELECTED_UNREAD_TOOLTIP')]\n$TOOLTIP_DELIMITER$\n$CURRENT_SITUATION_UNREAD_DESC$"
 CURRENT_SITUATION_SELECT_UNREAD_TOOLTIP: "#header Sélectionner une alerte non lue#!"
 CURRENT_SITUATION_CURRENTLY_SELECTED_UNREAD_TOOLTIP: "#header Sélectionner une alerte non lue#! #i (actuellement sélectionnée)#!"
 CURRENT_SITUATION_UNREAD_DESC: "Affiche le nombre d’[Concept('concept_alert_settings_important_action', '$concept_alert_settings_important_actions$')|l] non lues dans le menu Situation actuelle."
 THEME: "Thème"
 THEME_SELECTOR: "Sélecteur de thème"
 ASSETS: "Actifs"
 DAY_AND_NIGHT_SETTINGS: "Cycle jour et nuit"
 GO_TO_STORE: "Aller sur la page du magasin #header [Dlc.GetName]#!"
 RELEVANT_DLC_HEADER: "DLC correspondant"
 RELEVANT_DLC_TOOLTIP: "#header [Dlc.GetName]#!\n[SelectLocalization(Dlc.IsVerified, SelectLocalization(Dlc.IsEnabled, 'DLC_ENABLED', 'DLC_NOT_ENABLED'), 'DLC_NOT_OWNED')]\n$TOOLTIP_DELIMITER$\n[Dlc.GetThemeBreakdown]"
 THEME_CATEGORY_TOOLTIP: "#header [ThemeCategory.GetName]#!\n[ThemeCategory.GetDesc]"
 ASSET_CATEGORY_TOOLTIP: "$THEME_CATEGORY_TOOLTIP$"
 ASSET_TOOLTIP: "#header [Theme.GetName]#! [SelectLocalization(Theme.IsSelected, 'ASSET_ENABLED', 'ASSET_DISABLED')]\n[Theme.GetDesc]\n\nFait partie de [Theme.GetRequiredDlc.GetName]\n[ConcatIfNeitherEmpty('\n', SelectLocalization(Theme.GetRequiredDlc.IsVerified, SelectLocalization(Theme.GetRequiredDlc.IsEnabled, 'DLC_ENABLED', 'DLC_NOT_ENABLED'), 'DLC_NOT_OWNED'))]"
 THEME_TOOLTIP: "#header [Theme.GetName]#! [AddLocalizationIf(Theme.IsSelected, SelectLocalization(Theme.CanBeSelected, 'CURRENT_THEME', 'CURRENT_THEME_DISABLED'))]\n[Theme.GetDesc]\n\n[SelectLocalization(Theme.HasDlcRequirement, 'THEME_IN_DLC_TOOLTIP', 'THEME_NOT_IN_DLC_TOOLTIP')][ConcatIfNeitherEmpty('\n\n', Theme.GetCanBeSelectedDesc)]"
 THEME_IN_DLC_TOOLTIP: "Fait partie de #v [Theme.GetRequiredDlc.GetName]#! [ConcatIfNeitherEmpty('\n', SelectLocalization(Theme.GetRequiredDlc.IsVerified, SelectLocalization(Theme.GetRequiredDlc.IsEnabled, 'DLC_ENABLED', 'DLC_NOT_ENABLED'), 'DLC_NOT_OWNED'))]."
 THEME_NOT_IN_DLC_TOOLTIP: "Fait partie du jeu de base."
 NEW_THEMES_AVAILABLE: "#header Nouveaux thèmes disponibles#!"
 THEME_ISSUES: "#header Certains thèmes posent problème#!\nIls seront remplacés par le thème par défaut"
 CURRENT_THEME: "#instruction En cours#!"
 CURRENT_THEME_DISABLED: "#instruction #strikethrough En cours#!#!"
 ASSET_ENABLED: "#g Activés#!"
 ASSET_DISABLED: "#r Désactivés#!"
 peace_agreement_notification_group: "Accord de paix"
 acquired_technology_notification_group: "Technologie acquise"
 diplomatic_proposal_declined_notification_group: "Proposition diplomatique refusée"
 peace_agreement_signed_non_participant_notification_group: "Accord de paix signé non participant"
 capitulated_notification_group: "Capitulation"
 diplo_play_war_start_notification_group: "Début de la guerre du coup diplomatique"
 law_changed_notification_group: "Loi modifiée"
 law_notification_group: "Progression de la loi"
 resource_discovery_notification_group: "Découverte de ressources"
 diplomatic_demand_notification_group: "Exigences diplomatiques"
 claims_notification_group: "Revendications"
 institution_investment_notification_group: "Investissement institutionnel"
 country_rank_changed_notification_group: "Rang du pays modifié"
 diplomatic_action_notification_group: "Action diplomatique"
 diplomatic_proposal_accepted_notification_group: "Proposition diplomatique acceptée"
 migration_target_created_notification_group: "Cible de migration créée"
 migration_target_created_other_notification_group: "Cible de migration créée (autre)"
 diplo_play_start_notification_group: "Début du coup diplomatique"
 diplo_play_back_down_notification_group: "Renonciation au coup diplomatique"
 diplo_play_back_down_involved_notification_group: "Renonciation au coup diplomatique (impliqué)"
 diplo_play_join_side_notification_group: "Camp du coup diplomatique rejoint"
 diplo_play_abandon_side_notification_group: "Camp du coup diplomatique abandonné"
 colony_notification_group: "Colonie"
 parties_activated_notification_group: "Partis activés"
 country_revolution_notification_group: "Révolution du pays"
 country_secession_notification_group: "Sécession du pays"
 election_results_notification_group: "Résultats des élections"
 enactment_failed_group: "Échec de la promulgation de la loi"
 harvest_condition_important_notification_group: "Conditions de récolte (important)"
 harvest_condition_notification_group: "Conditions de récolte"
 journal_entry_completed_notification_group: "Entrée de journal achevée"
 native_uprising_notification_group: "Soulèvement autochtone"
 spreading_technology_notification_group: "Diffusion de la technologie"
 heir_born_notification_group: "Héritier né"
 new_ruler_notification_group: "Nouveau dirigeant"
 character_died_notification_group: "Personnage décédé"
 character_new_formation_notification_group: "Nouvelle formation pour le commandant"
 character_exiled_notification_group: "Personnage exilé"
 agitator_spawned_notification_group: "Militant apparu"
 diplomatic_action_break_notification_group: "Action diplomatique rompue"
 diplomatic_proposal_break_notification_group: "Proposition diplomatique rompue"
 diplomatic_proposal_third_party_notification_group: "Proposition diplomatique (tierce partie)"
 diplomatic_pact_notification_group: "Pacte diplomatique"
 diplomatic_pact_third_party_notification_group: "Pacte diplomatique (tierce partie)"
 diplo_play_start_third_party_notification_group: "Début du coup diplomatique (tierce partie)"
 diplo_play_declare_neutrality_notification_group: "Déclaration de neutralité dans le coup diplomatique"
 diplo_play_war_start_third_party_notification_group: "Début de guerre du coup diplomatique (tierce partie)"
 diplo_play_subject_notification_group: "Sujet du coup diplomatique"
 country_swayed_notification_group: "Pays influencé"
 sway_offer_notification_group: "Proposition d’influence"
 interest_notification_group: "Intérêt"
 interest_third_party_notification_group: "Intérêt (tierce partie)"
 colony_third_party_notification_group: "Colonie (tierce partie)"
 company_prestige_goods_notification_group: "Marchandises de prestige de la compagnie"
 company_prosperity_bonus_notification_group: "Bonus de prospérité de la compagnie"
 ig_trait_notification_group: "Trait de groupe d’intérêt"
 ig_influence_level_notification_group: "Niveau d’influence du groupe d’intérêt"
 ig_movement_left_notification_group: "Mouvement quitté par le groupe d’intérêt"
 ig_resigned_government_notification_group: "Groupe d’intérêt a quitté le gouvernement"
 new_culture_obsession_notification_group: "Nouvelle obsession culturelle"
 commander_order_invalidated_notification_group: "Ordre du commandant invalidé"
 commander_moved_to_other_front_notification_group: "Commandant changé de front"
 country_mobilization_notification_group: "Mobilisation du pays"
 country_conscription_notification_group: "Conscription du pays"
 wargoal_notification_group: "Objectif de guerre"
 commander_move_notification_group: "Déplacement du commandant"
 invasion_notification_group: "$concept_invasion$"
 convoy_raiders_intercepted_notification_group: "Attaquants de convoi interceptés"
 journal_entry_activation_notification_group: "Activation de l’entrée du journal"
 political_movement_notification_group: "Mouvement politique"
 country_owes_obligation_notification_group: "Obligation due au pays"
 country_owed_obligation_notification_group: "Obligation due par le pays"
 obligation_expired_notification_group: "Obligation expirée"
 unification_candidate_notification_group: "Candidat à l’unification"
 unification_support_notification_group: "Soutien à l’unification"
 shipping_lane_formation_destination_invalidated_notification_group: "Destination de la formation invalidée"
 ig_leader_memento_mori_notification_group: "Mort du chef du groupe d’intérêt"
 convoys_raided_notification_group: "Convois attaqués"
 price_report_notification_group: "Rapport de prix"
 building_built_notification_group: "Bâtiment construit"
 building_expanded_notification_group: "Bâtiment agrandi"
 political_lobby_created_notification_group: "Lobby politique créé"
 political_lobby_disbanded_notification_group: "Lobby politique dissous"
 foreign_political_lobby_created_notification_group: "Lobby politique étranger créé"
 foreign_political_lobby_disbanded_notification_group: "Lobby politique étranger dissous"
 interest_group_joins_lobby_group: "Le groupe d’intérêt rejoint le lobby"
 interest_group_leaves_lobby_group: "Le groupe d’intérêt quitte le lobby"
 war_participant_in_default_notification_group: "Participant à la guerre en défaut"
 formation_travel_notification_group: "Déplacement de la formation"
 formation_could_not_find_other_formation_to_automatically_merge_into_notification_group: "Aucune formation avec laquelle fusionner"
 fleet_notification_group: "Flotte"
 country_nationalized_building_group: "Bâtiment nationalisé dans le pays"
 on_impose_law_notification_group: "Loi imposée"
 power_bloc_principles_notification_group: "$concept_power_bloc_principles$"
 treaty_entered_into_force_notification_group: "Traité en vigueur"
 country_withdrawn_from_treaty_notification_group: "Retrait d’un pays du traité"
 treaty_proposal_declined_notification_group: "Proposition de traité refusée"
 treaty_dissolved_notification_group: "Traité rompu"
 POP_TYPE_SUPPORT_TITLE: "#b Soutien des [Concept('concept_interest_group','$concept_interest_groups$')|l] [PopType.GetName|l] [Country.GetAltNameNoFormatting('En')][Country.GetName] :#!"
 POP_TYPE_SUPPORT_SINGLE: "[INTEREST_GROUP.GetName] : $SUPPORT_PERCENTAGE|%1v$"
 POP_TYPE_SUPPORT_SINGLE_FORMAT: "$TAB$$POP_TYPE_SUPPORT_SINGLE$"
 POP_TYPE_SUPPORT_FORMAT: "$POP_TYPE_SUPPORT_TITLE$\n$BODY$"
 POP_TYPE_SUPPORT_NONE: "Les [PopType.GetName|l] [Country.GetAltNameNoFormatting('En')][Country.GetName] ne soutiennent aucun groupe d’intérêt"
 POP_TYPE_SUPPORTED_BY_OTHER_HEADER: "#header Autres [Concept('concept_interest_group', '$concept_interest_groups$')|l] soutenus#!\n$TOOLTIP_DELIMITER$"
 POP_TYPE_SUPPORTED_BY_OTHER: "$TAB$Autres groupes d’intérêt : #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $OTHER_PERCENTAGE|%1v$#!#!"
 POP_TYPE_IN_PLAYER_COUNTRY: "#b [PopType.GetName] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName]#! :\nPopulation : [PopType.GetPopulation(GetPlayer.Self)|kv]\n[concept_political_strength] : [PopType.GetPolStr(GetPlayer.Self)|kv]\n\n[PopType.GetStrataBreakdownInCountry(GetPlayer.Self)]\n\n[PopType.GetInterestGroupSupportDesc( GetPlayer.Self )]"
 POP_TYPE_IN_BUILDING: "#b [PopType.GetName] [Building.GetState.GetCountry.GetAltNameNoFormatting('En')][Building.GetState.GetCountry.GetName]#! :\n$TAB$$TAB$[Concept('concept_pop','Population')] : [PopType.GetPopulation(Building.GetState.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_workforce] : [PopType.GetWorkforce(Building.GetState.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_dependents] : [PopType.GetDependents(Building.GetState.GetCountry)|kv]\n$TAB$$TAB$[concept_political_strength] : [PopType.GetPolStr(Building.GetState.GetCountry)|kv]\n\n[PopType.GetStrataBreakdownInCountry(Building.GetState.GetCountry)][SelectLocalization(Building.GetState.GetCountry.IsPlayer, 'POP_TYPE_IN_BUILDING_SUPPORT', '')]"
 POP_TYPE_IN_BUILDING_SUPPORT: "\n\n[PopType.GetInterestGroupSupportDesc( Building.GetState.GetCountry )]"
 POP_TYPE_IN_BUILDING_HEADER: "[PopListItem.GetWorkingAdultsPopSize|vD] [PopType.GetNameNoIcon] dans [Building.GetName]"
 POP_TYPE_IN_STATE: "#b [PopType.GetName] [State.GetCountry.GetAltNameNoFormatting('En')][State.GetCountry.GetName]#! :\n$TAB$$TAB$Population : [PopType.GetPopulation(State.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_workforce] : [PopType.GetWorkforce(State.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_dependents] : [PopType.GetDependents(State.GetCountry)|kv]\n$TAB$$TAB$[concept_political_strength] : [PopType.GetPolStr(State.GetCountry)|kv]\n\n[PopType.GetStrataBreakdownInCountry(State.GetCountry)][SelectLocalization(State.GetCountry.IsPlayer, 'POP_TYPE_IN_STATE_SUPPORT', '')]"
 POP_TYPE_IN_STATE_SUPPORT: "\n\n[PopType.GetInterestGroupSupportDesc( State.GetCountry )]"
 POP_TYPE_IN_STATE_HEADER: "[PopListItem.GetTotalPopSize|vD] [PopType.GetNameNoIcon|l] en [State.GetName]"
 POP_TYPE_IN_CULTURE: "[SelectLocalization(GreaterThan_int64(Culture.GetPopulation(GetPlayer.Self), '(int64)0'), 'POP_TYPE_IN_CULTURE_PLAYER_POPULATION', 'POP_TYPE_IN_CULTURE_NO_PLAYER_POPULATION')]"
 POP_TYPE_IN_CULTURE_NO_PLAYER_POPULATION: "Il n’y a pas de [Concept('concept_pop','$concept_pops$')|l] de culture [Culture.GetName|l] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName]"
 POP_TYPE_IN_CULTURE_PLAYER_POPULATION: "#b [Concept('concept_pop','$concept_pops$')] de culture [Culture.GetName] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName] :#!\n$TAB$$TAB$Population : [Culture.GetPopulation(GetPlayer.Self)|kv]\n$TAB$$TAB$[concept_political_strength] : [Culture.GetPolStr(GetPlayer.Self)|kv]\n\n[PopType.GetStrataBreakdownInCountry(GetPlayer.Self)]"
 POP_TYPE_IN_CULTURE_HEADER: "[PopListItem.GetTotalPopSize|vD] [PopType.GetNameNoIcon] [Culture.GetName|l]"
 POP_TYPE_IN_RELIGION: "[SelectLocalization(GreaterThan_int64(Religion.GetPopulation(GetPlayer.Self), '(int64)0'), 'POP_TYPE_IN_RELIGION_PLAYER_POPULATION', 'POP_TYPE_IN_RELIGION_NO_PLAYER_POPULATION')]"
 POP_TYPE_IN_RELIGION_NO_PLAYER_POPULATION: "Il n’y a pas de [Concept('concept_pop','$concept_pops$')|l] de religion [Religion.GetName] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName]"
 POP_TYPE_IN_RELIGION_PLAYER_POPULATION: "#b [Concept('concept_pop','$concept_pops$')] de religion [Religion.GetName] [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName] :#!\n$TAB$$TAB$Population : [Religion.GetPopulation(GetPlayer.Self)|kv]\n$TAB$$TAB$[concept_political_strength] : [Religion.GetPolStr(GetPlayer.Self)|kv]\n\n[PopType.GetStrataBreakdownInCountry(GetPlayer.Self)]"
 POP_TYPE_IN_RELIGION_HEADER: "[PopListItem.GetTotalPopSize|vD] [PopType.GetNameNoIcon] [Religion.GetName|l]"
 POP_TYPE_IN_IG: "#b [PopType.GetName] [InterestGroup.GetCountry.GetAltNameNoFormatting('En')][InterestGroup.GetCountry.GetName]#! :\n$TAB$$TAB$Population : [PopType.GetPopulation(InterestGroup.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_workforce] : [PopType.GetWorkforce(InterestGroup.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_dependents] : [PopType.GetDependents(InterestGroup.GetCountry)|kv]\n$TAB$$TAB$[concept_political_strength] : [PopType.GetPolStr(InterestGroup.GetCountry)|kv]\n\n[PopType.GetStrataBreakdownInCountry(InterestGroup.GetCountry)][SelectLocalization(InterestGroup.GetCountry.IsPlayer, 'POP_TYPE_IN_IG_SUPPORT', '')]"
 POP_TYPE_IN_IG_SUPPORT: "\n\n[PopType.GetInterestGroupSupportDesc( InterestGroup.GetCountry )]"
 POP_TYPE_IN_IG_HEADER: "[PopListItem.GetTotalPopSize|vD] [PopType.GetNameNoIcon] soutiennent [InterestGroup.GetNameNoIcon]"
 POP_TYPE_TOOLTIP_SLAVES_AS_LABOR: "\n\n#italic Certains [Concept('concept_building', '$concept_buildings$')|l] emploient des [PopType.GetNameNoIcon|l] pour remplacer une autre [concept_profession|l].#!"
 YOU_HAVE_RESEARCHED_THIS: "#italic Vous avez recherché cette technologie#!"
 CURRENTLY_BEING_RESEARCHED: "Actuellement en cours de recherche : $TECHNOLOGY_PROGRESS_WITH_GAIN$"
 LENS_ACTION_NUMBER: "[LensOption.GetText|v]\n[GetDescriptiveText(LensOption.GetMapInteraction)]\nCette action a #v [LensOption.GetNumberOfSelections|+]#! cibles valides"
 BUILDING_ACTION_NUMBER: "#header Construire [BuildingType.GetName|v]#!\nSélectionnez dans quel [concept_state] construire [BuildingType.GetName|v]\nPeut être construit dans #v [BuildingType.GetNumAvailableStatesForBuilding|+]#! [Concept('concept_state', '$concept_states$')]"
 IS_ACTIVE: "$TEXT$ (#P actif#!)"
 IS_INACTIVE: "$TEXT$ (inactif)"
 PRODUCTION_METHOD_OPTIONS: "Vous avez #bold #P [ProductionMethodGroup.GetNumAvailableOptions(Building.AccessSelf)]#!#! options pour [ProductionMethodGroup.GetName|l]"
 PRODUCTION_METHOD_OPTIONS_BULK: "Vous avez #bold #P [ProductionMethodGroup.GetNumAvailableOptionsForBuildingType(BuildingProductionMethodsEntry.GetBuildingType)]#!#! options pour [ProductionMethodGroup.GetName|l]"
 FRONT_DESC_LAND_FORMAT: "[FRONT.GetName]"
 PEACE_ACCEPTANCE_YES: "#bold #P +1000#!#!"
 PEACE_ACCEPTANCE_SCORE: "$VAL|=+$"
 WAR_SUPPORT: "[concept_war_support]"
 ACCEPTANCE: "Acceptation"
 INSTITUTION_NAME_AND_LEVEL: "[Institution.GetName] (niveau [Institution.GetInvestmentLevel])"
 EXPAND_BUILDING_TYPE: "Agrandir #BOLD [BuildingType.GetNameNoFormatting]#!"
 YEARLY_AVERAGE_EARNINGS_PER_EMPLOYEE: "Salaire annuel moyen / employé"
 SOCIETY: "Société"
 OTHER: "Autre"
 OTHER_TITLE_COLON: "#title Autre :#!"
 TAB_1: "#header Onglet 1#!"
 TAB_2: "#header Onglet 2#!"
 TAB_3: "#header Onglet 3#!"
 TAB_4: "#header Onglet 4#!"
 TAB_5: "#header Onglet 5#!"
 GO_TO_DETAILS: "#header Aller à l’écran Détails#!"
 CONSTRUCTION_POINTS: "$POINTS|0v$@construction! de [concept_construction|l]"
 CONSTRUCTION_DURATION: "$WEEKS$ semaines"
 CONSTRUCTION_DURATION_UNKNOWN: "Inconnu"
 CONSTRUCTION_DURATION_PAUSED: "En pause"
 CONSTRUCTION_CAMP: "Camp de construction"
 MOVE_UP: "#header Monter dans la [concept_construction_queue|l]#!\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty( GetDesc( ConstructionQueueElement.MoveUp ), '\n\n' )]#I Cliquez pour monter dans la file d’attente#!\n#I Alt-clic pour mettre tout en haut#!"
 MOVE_DOWN: "#header Descendre dans la [concept_construction_queue|l]#!\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty( GetDesc( ConstructionQueueElement.MoveDown ), '\n\n' )]#I Cliquez pour descendre dans la file d’attente#!\n#I Alt-clic pour mettre tout en bas#!"
 CANCEL_CONSTRUCTION: "Annuler la construction"
 CONSTRUCTION_QUEUE_FOREIGN_GOVERNMENT_CONSTRUCTION_TT: "[concept_government_construction] [ConstructionQueueElement.GetInvestorCountry.GetAltAdjective('FS')|l]"
 PLAYED_BY_PLAYER_DESC: "Joué par #v $PLAYER$#!"
 PLAYED_BY_AI_DESC: "Joué par l’IA"
 OBSERVED_BY_PLAYER_DESC: "Observé par #v $PLAYER$#!"
 PLAYERS: "Joueurs"
 NO_COLONY_GROWTH: "Le pays ne produit aucune [concept_colonial_growth|l]"
 COLONY_GROWTH_DESC: "[concept_colonial_growth] par [concept_colony|l] générée par [COUNTRY.GetAltNameNoFormatting('Le')][COUNTRY.GetName] : #tooltippable #tooltip:[COUNTRY.GetTooltipTag],COLONY_GROWTH_DETAIL_TIT $VALUE|%v$#!#!\n"
 MAX_COLONY_GROWTH_CLAMPED: "Croissance maximale par jour : #variable $MAX|%$#!"
 COLONY_GROWTH_DETAIL_TIT: "[Country.GetColonialGrowthDetails]"
 COLONY_GROWTH_DETAIL_DESC: "#header [concept_colonial_growth] [COUNTRY.GetAltNameNoFormatting('En')][COUNTRY.GetName]#!\n$VALUE|%v$ par jour par [concept_colony|l]\n$TOOLTIP_DELIMITER$\n#indent_newline:3 En raison de :\n$TOTAL_INCORPORATED_POPULATION|Dv$ de [Concept('concept_pop','$concept_population$')|l] [Concept('concept_incorporated_state', '$concept_incorporated$e')|l]\n[COUNTRY.GetActiveLawFromGroup('lawgroup_colonization').GetName]\n[COUNTRY.GetActiveLawFromGroup('lawgroup_colonization').GetInstitution.GetName] de niveau [COUNTRY.GetActiveLawFromGroup('lawgroup_colonization').GetInstitution.GetInvestmentLevel|v]#!\n\nLa croissance est répartie entre #variable $NUM_COLONIES$#! colonies."
 COLONY_GROWTH_COLONIZATION_RIGHTS: "[concept_colonial_growth] multipliée par $MULT|1v$ en raison des [concept_colonization_rights|l]"
 COLONY_GROWTH_COMPANY_COLONIZATION: "[concept_colonial_growth] multipliée par $MULT|1v$ en raison de la charte de compagnie qui a colonisé l’État"
 COLONY_GROWTH_REGION_SIZE: "[concept_colonial_growth] multipliée par $MULT|1v$ en raison des $NUM_PROVINCES|v$ [Concept('concept_province','$concept_provinces$')|l] en [StateRegion.GetName]"
 COLONY_GROWTH_POPULATION_SIZE: "[concept_colonial_growth] multipliée par $MULT|1v$ en raison de la [Concept('concept_pop','$concept_population$')|l] de $POPULATION|Dv$ dans les [Concept('concept_state','$concept_states$')] pertinents en [StateRegion.GetName]"
 MOBILIZED_BATTALIONS_WITH_GENERAL_FULL_COUNT: "Avec des [Concept('concept_general', '$concept_generals$')|l] : $TOTAL|v$@battalions!"
 MOBILIZED_BATTALIONS_WITH_GENERAL_NOT_FULL_COUNT: "Avec des [Concept('concept_general', '$concept_generals$')|l] : $FULLY_MOBILIZED|v$/$TOTAL|v$@battalions!"
 TOTAL_FLOTILLAS: "Flottilles totales"
 MILITARY_FORMATIONS_ARMY_HEADER: "[Concept('concept_army', '$concept_armies$')] ([GetDataModelSize( Country.GetMilitaryFormationsArmy )|v0])"
 MILITARY_FORMATIONS_FLEET_HEADER: "[Concept('concept_fleet', '$concept_fleets$')] ([GetDataModelSize( Country.GetMilitaryFormationsFleet )|v0])"
 CANAL_WRONG_STATE_REGION: "#N Ne peut être construit qu’en [STATE_REGION.GetName]#!"
 BULK_RAISE_CONSCRIPTS: "Lever des [Concept('concept_conscript_battalion','$concept_conscript_battalions_short$')|l] @conscripts!"
 MOBILIZE_ARMY: "Mobiliser"
 MOBILIZE_ARMY_TOOLTIP: "#header $concept_mobilize_army$#!\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty( GetDesc( MilitaryFormation.Mobilize ), '\n\n' )]$concept_mobilize_army_desc$[ConcatIfNeitherEmpty('\n\nEstimation du coût / semaine :\n', MilitaryFormation.GetEstimatedMobilizationCostDesc)]"
 CANNOT_MOBILIZE_ARMY_DEMOBILIZING: "[MilitaryFormation.GetDemobilizationStatus]"
 ARMY_IS_DEMOBILIZING: "[SelectLocalization(MilitaryFormation.IsTraveling,'ARMY_IS_DEMOBILIZING_IN_TRANSIT','ARMY_IS_DEMOBILIZING_NOT_IN_TRANSIT')] en cours de démobilisation ($DAYS_LEFT|v0$ jours)."
 ARMY_IS_DEMOBILIZING_IN_TRANSIT: "[MilitaryFormation.GetName] est sur le chemin du retour. À son arrivée, elle sera"
 ARMY_IS_DEMOBILIZING_NOT_IN_TRANSIT: "[MilitaryFormation.GetName] est encore"
 DEMOBILIZE_ARMY: "Démobiliser"
 DEMOBILIZE_ARMY_TOOLTIP: "#header $concept_mobilize_army_demobilize$#!\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty( GetDesc( MilitaryFormation.Demobilize ), '\n\n' )]$concept_mobilize_army_desc$"
 MOBILIZE_ARMY_COST: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $COST|K-=$@money!#!#!"
 MOBILIZE_ARMY_GOODS_COST_ENTRY: "$GOODS$ : @money! #v $COST|-D$#!"
 MOBILIZE_SELECTED_ARMIES_TOOLTIP: "#header [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilize$')] [GetNumSelectedArmies|v] [Concept('concept_army', '$concept_armies$')|l] sélectionnées#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(GreaterThan_int32(GetNumSelectedArmiesWithMobilizationActive, '(int32)0'), 'X_ARMIES_ALREADY_MOBILIZED'))]\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(AddLocalizationIf(GreaterThan_int32(GetNumSelectedArmiesWithMobilizationBlocked, '(int32)0'), 'X_ARMIES_UNABLE_TO_MOBILIZE'), '\n\n')][ConcatIfNeitherEmpty(GetDesc(MobilizeSelectedArmies), '\n\n')]$concept_mobilize_army_desc$"
 X_ARMIES_ALREADY_MOBILIZED: "[GetNumSelectedArmiesWithMobilizationActive|v] [Concept('concept_army', '$concept_armies$')|l] sont déjà [Concept('concept_mobilize_army', 'mobilisées')] ou en cours de mobilisation"
 X_ARMIES_UNABLE_TO_MOBILIZE: "[GetNumSelectedArmiesWithMobilizationBlocked|v] [Concept('concept_army', '$concept_armies$')|l] ne peuvent pas se [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilize$')|l]"
 DEMOBILIZE_SELECTED_ARMIES_TOOLTIP: "#header [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')] [GetNumSelectedArmies|v] [Concept('concept_army', '$concept_armies$')|l] sélectionnées#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(GreaterThan_int32(GetNumSelectedArmiesWithDemobilizationActive, '(int32)0'), 'X_ARMIES_ALREADY_DEMOBILIZED'))]\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(AddLocalizationIf(GreaterThan_int32(GetNumSelectedArmiesWithDemobilizationBlocked, '(int32)0'), 'X_ARMIES_UNABLE_TO_DEMOBILIZE'), '\n\n')][ConcatIfNeitherEmpty(GetDesc(DemobilizeSelectedArmies), '\n\n')]$concept_mobilize_army_desc$"
 X_ARMIES_ALREADY_DEMOBILIZED: "[GetNumSelectedArmiesWithDemobilizationActive|v] [Concept('concept_army', '$concept_armies$')|l] sont déjà [Concept('concept_mobilize_army', 'démobilisées')] ou en cours de démobilisation"
 X_ARMIES_UNABLE_TO_DEMOBILIZE: "[GetNumSelectedArmiesWithDemobilizationBlocked|v] [Concept('concept_army', '$concept_armies$')|l] ne peuvent pas se [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')|l]"
 GENERAL_BUSY_NAVAL_INVASION: "[Character.GetFirstName] participe actuellement à une #v invasion navale#!"
 COMMANDER_BUSY_BATTLE: "[Character.GetFirstName] participe actuellement à une [concept_battle|l]"
 CANNOT_MOBILIZE_ARMIES_NO_DIPLO_PLAY: "Le [concept_country|l] doit faire partie d’un [concept_diplomatic_play|l]"
 CANNOT_MOBILIZE_ARMY_NOT_AN_ARMY: "Seules les [Concept('concept_army', '$concept_armies$')|l] peuvent être [Concept('concept_mobilize_army', 'mobilisées')]"
 CANNOT_MOBILIZE_ARMY_ALREADY_MOBILIZED: "[MilitaryFormation.GetName] est déjà [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$e')]"
 CANNOT_MOBILIZE_ARMY_OCCUPIED: "Le [HQ.GetName] n’est pas sous notre contrôle"
 CANNOT_MOBILIZE_ARMY_NO_BATTALIONS: "[MilitaryFormation.GetName] n’a pas de [Concept('concept_battalion','$concept_battalions$')|l]@battalions! à [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilize$')|l]"
 CANNOT_MOBILIZE_ARMY_NO_ARMY: "Pas d’[concept_army|l] à [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilize$')|l] dans le [concept_country|l]"
 CANNOT_MOBILIZE_ARMY_ALL_COMMANDERS_BUSY: "Tous les commandants de cette armée sont [concept_busy|l]s"
 CANNOT_MOBILIZE_ARMIES_ALREADY_MOBILIZED: "Toutes les [Concept('concept_army', '$concept_armies$')|l] sont déjà [Concept('concept_mobilize_army', 'mobilisées')]"
 CANNOT_MOBILIZE_ALL_ARMIES_DEMOBILIZING: "Toutes les [Concept('concept_army', '$concept_armies$')|l] sont encore en cours de démobilisation"
 CANNOT_DEMOBILIZE_ARMIES_ALREADY_DEMOBILIZED: "Toutes les [Concept('concept_army', '$concept_armies$')|l] déjà [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilized$es')|l]"
 CANNOT_DEMOBILIZE_ARMY_INVOLVED_IN_NAVAL_INVASION: "Impossible de [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')|l] la formation [MilitaryFormation.GetName] car elle est impliquée dans une [concept_invasion|l]"
 CANNOT_DEMOBILIZE_ARMY_NO_ARMY: "Aucune [concept_army|l] dans le [concept_country|l] à [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilize$')|l]"
 BUILDING_MOBILIZED_BATTALIONS_TOOLTIP: "#header #v [Building.GetNumberOfFullyMobilizedBattalions]#! / [Building.GetNumberOfCombatUnits] [concept_fully_mobilized_battalions|l] de [Building.GetState.GetName]#!\n$TOOLTIP_DELIMITER$\n#v [Building.GetNumberOfFullyMobilizedBattalions]#! [Concept('concept_battalion','$concept_battalions$')|l] sont [Concept('concept_mobilize_battalion','$concept_mobilize_battalion_mobilized$s')|l] sur un total de #v [Building.GetNumberOfCombatUnits]#! du bâtiment [Building.GetName|l] en [Building.GetState.GetName]"
 GENERAL_TRAVELING: "Voyage"
 GENERAL_TRAVEL_DAY: "jour"
 GENERAL_TRAVEL_DAYS: "jours"
 TRAVEL_TIME_LABEL: "#v $DAYS$ j#!"
 FORMATION_TRAVELING: "Voyage"
 FORMATION_TRAVELING_FRONT_PANEL: "$FORMATION_TRAVELING$ (#v [MilitaryFormation.GetTravelDaysLeft] jours#!)"
 FORMATION_TRAVELING_TOOLTIP_LESS_THAN_ONE_DAY: "[MilitaryFormation.GetName|v] arrivera en [Front.GetName] dans moins de #v 1 jour#!."
 ACTIVATE_CONSCRIPTION_CENTER: "Activer le centre d’enrôlement"
 ACTIVATE_CONSCRIPTION_CENTER_TOOLTIP: "#header Activer le [concept_conscription_center|l]#!\n$TOOLTIP_DELIMITER$\nTaille : [Building.GetExpansionLevel|v]\nCapacité de l’unité : [Building.GetCombatUnitCapacityDesc]"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTERS_NO_LAW: "Le [concept_country|l] doit avoir une loi sur la conscription"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTERS_NO_DIPLO_PLAY: "Le [concept_country|l] doit faire partie d’un [concept_diplomatic_play|l]"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTER_NO_CONSCRIPTION_CENTER: "Population civile insuffisante en [State.GetName] pour lever des [Concept('concept_conscript_battalion', '$concept_conscript_battalions$')|l]"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTER_OCCUPIED: "[State.GetName] est occupé par l’ennemi"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTER_ALREADY_ACTIVE: "[State.GetName] est déjà [Concept('concept_conscription_center', 'enrôlé')]"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTERS_NO_CONSCRIPTION_CENTER: "Vous n’avez pas de [Concept('concept_conscription_center', '$concept_conscription_center$')|l] disponible"
 CANNOT_ACTIVATE_CONSCRIPTION_CENTERS_ALREADY_ACTIVE: "Tous les [Concept('concept_conscription_center', '$concept_conscription_centers$')|l] déjà actifs"
 CONSCRIPTION_COST_WITH_BREAKDOWN: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $COST|K+=$@money!#!#!"
 CONSCRIPTION_COST_NO_BREAKDOWN: "$COST|K+=$@money!"
 CONSCRIPTION_COST_ITEM: "[Building.GetName] en [Building.GetState.GetName] : #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $COST|K+=$@money!#!#!"
 CANNOT_ACTIVATE_CONSCRIPTION_MAX_NUM: "[State.GetName] a une [concept_conscription_limit|l] de $MAX_CONSCRIPTS|v$@conscripts!"
 RAISE_CONSCRIPTS_COMMAND_DESC: "$ERRORS$"
 RAISE_CONSCRIPTS_COMMAND_FORMATION_ERRORS: "La formation [MilitaryFormation.GetName] ne peut pas lever de [Concept('concept_conscript_battalion','$concept_conscript_battalions_short$')|l][AddTextIf(Not(StringIsEmpty('$ERRORS$')), '\n #indent_newline:3 $ERRORS$#!')]"
 RAISE_CONSCRIPTS_ALREADY_RAISED: "A déjà levé les [Concept('concept_conscript_battalion','$concept_conscript_battalions$')|l]"
 RAISE_CONSCRIPTS_NOT_MOBILIZED: "Seules les [Concept('concept_military_formation','$concept_military_formations$')|l] [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilized$es')|l] peuvent lever des [Concept('concept_conscript_battalion','$concept_conscript_battalions$')|l]"
 RAISE_CONSCRIPTS_IN_SELECTED_ARMIES_TOOLTIP: "#header Lever des [Concept('concept_conscript_battalion','$concept_conscript_battalions$')|l] pour les [GetNumSelectedFormations|v] [Concept('concept_army', '$concept_armies$')] sélectionnées#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(GreaterThan_int32(GetNumSelectedArmiesWithRaiseConscriptsActive, '(int32)0'), 'CONSCRIPTS_ALREADY_RAISED_IN_X_ARMIES'))]\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(AddLocalizationIf(GreaterThan_int32(GetNumSelectedArmiesWithRaiseConscriptsBlocked, '(int32)0'), 'UNABLE_TO_RAISE_CONSCRIPTS_IN_X_ARMIES'), '\n\n')][ConcatIfNeitherEmpty(GetDesc(RaiseConscriptsInSelectedArmies), '\n\n')]Les [Concept('concept_conscript_battalion','$concept_conscript_battalions_short$')|l] resteront actifs jusqu’à ce que leur [concept_army|l] soit [Concept('concept_mobilize_army', '$concept_mobilize_army_demobilized$e')|l]"
 CONSCRIPTS_ALREADY_RAISED_IN_X_ARMIES: "Des bataillons de [Concept('concept_conscript_battalion','$concept_conscript_battalions_short$')|l] sont déjà levés pour [GetNumSelectedArmiesWithRaiseConscriptsActive|v] [Concept('concept_army', '$concept_armies$')|l]"
 UNABLE_TO_RAISE_CONSCRIPTS_IN_X_ARMIES: "Impossible de lever des bataillons de [Concept('concept_conscript_battalion','$concept_conscript_battalions_short$')|l] pour [GetNumSelectedArmiesWithRaiseConscriptsBlocked|v] [Concept('concept_army', '$concept_armies$')|l]"
 MILITARY_FORMATION_SET_STRATEGIC_OBJECTIVE: "Affecter un objectif stratégique"
 MILITARY_FORMATION_SET_STRATEGIC_OBJECTIVE_TOOLTIP: "#header Affecter un [concept_strategic_objective|l]#!\n[SelectLocalization(MilitaryFormation.GetStrategicObjective.IsValid, 'ACTIVE_STRATEGIC_OBJECTIVE', 'NO_STRATEGIC_OBJECTIVE_ACTIVE')]"
 NO_STRATEGIC_OBJECTIVE_ACTIVE: "Aucun actif actuellement\n$TOOLTIP_DELIMITER$\nSélectionnez un [concept_state] comme objectif stratégique pour la formation [MilitaryFormation.GetName]\n[MilitaryFormation.GetNumStrategicObjectiveSelections|+] $concept_states$ disponibles"
 ACTIVE_STRATEGIC_OBJECTIVE: "A [MilitaryFormation.GetStrategicObjective.GetName] [MilitaryFormation.GetStrategicObjective.GetCountry.GetFlagTextIcon] comme objectif stratégique\n$TOOLTIP_DELIMITER$\nCliquez pour modifier ou supprimer l’[concept_state] en tant qu’objectif\n[MilitaryFormation.GetNumStrategicObjectiveSelections|+] autres $concept_states$ disponibles"
 STATE_SET_STRATEGIC_OBJECTIVE: "Affecter l’[concept_strategic_objective|l]"
 STATE_SET_STRATEGIC_OBJECTIVE_TOOLTIP: "#header Affecter [State.GetName] comme [concept_strategic_objective|l] pour vos [Concept('concept_military_formation','$concept_military_formations$')|l]#!\n$TOOLTIP_DELIMITER$\n[GetSelectedFormationsList]\n\n$concept_strategic_objective_desc$"
 STATE_CANCEL_STRATEGIC_OBJECTIVE: "Annuler l’[concept_strategic_objective|l]"
 STATE_CANCEL_STRATEGIC_OBJECTIVE_TOOLTIP: "#header Annuler l’[concept_strategic_objective|l] en [State.GetName] pour vos [Concept('concept_military_formation','$concept_military_formations$')|l]#!\n$TOOLTIP_DELIMITER$\n[GetSelectedFormationsList]\n\n$concept_strategic_objective_desc$"
 SELECTED_STRATEGIC_OBJECTIVE: "A [MilitaryFormation.GetStrategicObjective.GetName] [MilitaryFormation.GetStrategicObjective.GetCountry.GetFlagTextIcon] comme [concept_strategic_objective|l]"
 PLAN_INVASION_RIGHT_CLICK_TOOLTIP: "#title #v Planifier une [concept_invasion|l] en [State.GetName]#!#!\n$TOOLTIP_DELIMITER$\n$plan_invasion_lens_option_tooltip$[ConcatIfNeitherEmpty('\n\n', '$ERRORS$')]"
 activate_conscription_centers_lens_option: "Recruter des conscrits"
 activate_conscription_centers_lens_option_tooltip: "#header Recruter des conscrits#!\n$TOOLTIP_DELIMITER$\nChoisir les [Concept('concept_state', '$concept_states$')] dont vous souhaitez activer le [concept_conscription_center|l]"
 recruit_generals_lens_option: "Recruter des généraux"
 recruit_generals_lens_option_tooltip: "Recruter des généraux pour un [concept_hq]."
 recruit_admirals_lens_option: "Recruter des amiraux"
 recruit_admirals_lens_option_tooltip: "Recruter des amiraux pour un [concept_hq]."
 plan_invasion_lens_option: "Planifier une invasion"
 plan_invasion_lens_option_tooltip: "Commencer à planifier une invasion"
 EVENT_HIGHLIGHTED_OPTION: "Cette option est disponible car :"
 EVENT_HIGHLIGHTED_OPTION_NOT: "Cette option n’est pas disponible car :"
 notification_country_mobilization_name: "[SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sCountry('actor').GetName] commence la [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilization$')|l]"
 notification_country_mobilization_desc: "Notre [SelectLocalization( SCOPE.sDiplomaticPlay('diplomatic_play').AreOnSameSide( GetPlayer, SCOPE.sCountry('actor') ), 'allié', 'ennemi' )], [SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')][SCOPE.sCountry('actor').GetName], commence à [Concept('concept_mobilize_army', '$concept_mobilize_army_mobilize$')|l] ses [Concept('concept_general', '$concept_generals$')|l]."
 notification_country_mobilization_tooltip: "#header $notification_country_mobilization_name$#!\n$notification_country_mobilization_desc$"
 notification_country_conscription_name: "[SCOPE.sCountry('actor').GetName] : [Concept('concept_conscription_center', '$concept_conscription_center_conscription$')|l] débutée"
 notification_country_conscription_desc: "Notre [SelectLocalization( SCOPE.sDiplomaticPlay('diplomatic_play').AreOnSameSide( GetPlayer , SCOPE.sCountry('actor') ), 'allié', 'ennemi' )], [SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')][SCOPE.sCountry('actor').GetName], commence à activer ses [Concept('concept_conscription_center', '$concept_conscription_centers$')|l]."
 notification_country_conscription_tooltip: "#header $notification_country_conscription_name$#!\n$notification_country_conscription_desc$"
 notification_country_revolution_name: "[concept_revolution] !"
 notification_country_revolution_desc: "C’est la [concept_revolution|l] !"
 notification_country_revolution_tooltip: "#header $notification_country_revolution_name$#!\n$notification_country_revolution_desc$"
 notification_country_secession_name: "[concept_secession] !"
 notification_country_secession_desc: "[CivilWar.GetUprisingCountry.GetAltNameNoFormatting('Le')|U][CivilWar.GetUprisingCountry.GetName] a fait sécession !"
 notification_country_secession_tooltip: "#header $notification_country_secession_name$#!\n$notification_country_secession_desc$"
 notification_wargoal_added_name: "[concept_war_goal] ajouté !"
 notification_wargoal_added_desc: "Un [concept_war_goal|l] a été ajouté pour [SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')][SCOPE.sCountry('actor').GetName]."
 notification_wargoal_added_tooltip: "#header $notification_wargoal_added_name$#!\n$notification_wargoal_added_desc$"
 notification_wargoal_removed_name: "[concept_war_goal] retiré !"
 notification_wargoal_removed_desc: "Un [concept_war_goal|l] pour [SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')][SCOPE.sCountry('actor').GetName] a été retiré."
 notification_wargoal_removed_tooltip: "#header $notification_wargoal_removed_name$#!\n$notification_wargoal_removed_desc$"
 notification_election_results_name: "[concept_election] !"
 notification_election_results_desc: "Les résultats de l’[concept_election|l] [SCOPE.GetRootScope.GetCountry.GetAltNameNoFormatting('En')][SCOPE.GetRootScope.GetCountry.GetName] sont connus !\n[SCOPE.GetRootScope.GetCountry.GetLastElectionResultsTooltip]"
 notification_election_results_tooltip: "#header $notification_election_results_name$#!\n$notification_election_results_desc$"
 notification_invasion_failed_name: "Échec de l’[concept_invasion|l]"
 notification_invasion_failed_desc: "L’invasion de [SCOPE.GetRootScope.GetInvasion.GetTargetState.GetNameWithCountryFlag] a #n échoué#!. Les [Concept('concept_military_formation','$concept_military_formations$')|l] impliquées retournent à leur [Concept('concept_hq', 'QG')] le plus proche."
 notification_invasion_failed_tooltip: "#header $notification_invasion_failed_name$#!\n$notification_invasion_failed_desc$"
 notification_invasion_succeeded_name: "[concept_invasion] réussie"
 notification_invasion_succeeded_desc: "L’invasion de [SCOPE.GetRootScope.GetInvasion.GetTargetState.GetNameWithCountryFlag] a été #g couronnée de succès#! et nous avons pu [SelectLocalization(SCOPE.GetRootScope.GetInvasion.IsNavalInvasion, 'nous emparer d’une tête de pont', 'nous emparer d’un bastion')]."
 notification_invasion_succeeded_tooltip: "#header $notification_invasion_succeeded_name$#!\n$notification_invasion_succeeded_desc$"
 notification_invasion_started_against_us_name: "[concept_invasion] [SCOPE.GetRootScope.GetInvasion.GetInvaderCountry.GetAltAdjective('FS')|l] contre nous"
 notification_invasion_started_against_us_desc: "[SCOPE.GetRootScope.GetInvasion.GetInvaderCountry.GetAltNameNoFormatting('Le')|U][SCOPE.GetRootScope.GetInvasion.GetInvaderCountry.GetName] a lancé une invasion [SCOPE.GetRootScope.GetInvasion.GetTargetState.GetAltNameNoFormatting('En')][SCOPE.GetRootScope.GetInvasion.GetTargetState.GetName]."
 notification_invasion_started_against_us_tooltip: "#header $notification_invasion_started_against_us_name$#!\n$notification_invasion_started_against_us_desc$"
 notification_invasion_started_name: "[concept_invasion] [SCOPE.GetRootScope.GetInvasion.GetInvaderCountry.GetAltAdjective('FS')|l]"
 notification_invasion_started_desc: "[SCOPE.GetRootScope.GetInvasion.GetInvaderCountry.GetAltNameNoFormatting('Le')|U][SCOPE.GetRootScope.GetInvasion.GetInvaderCountry.GetName] a lancé une invasion [SCOPE.GetRootScope.GetInvasion.GetTargetState.GetAltNameNoFormatting('En')][SCOPE.GetRootScope.GetInvasion.GetTargetState.GetNameWithCountryFlag]."
 notification_invasion_started_tooltip: "#header $notification_invasion_started_name$#!\n$notification_invasion_started_desc$"
 notification_our_convoy_raiders_intercepted_name: "Nos pilleurs de convois interceptés"
 notification_our_convoy_raiders_intercepted_desc: "[SCOPE.sCharacter( 'defender_commander' ).GetFullName] a été intercepté[SCOPE.sCharacter( 'defender_commander' ).GetCustom('FR_E')] par l’[concept_admiral|l] ennemi [SCOPE.sCharacter( 'attacker_commander' ).GetFullName] lors d’une [Concept('concept_raid_convoys', '$concept_convoy_raiding$')|l] en [SCOPE.sStrategicRegion( 'region' ).GetName]."
 notification_our_convoy_raiders_intercepted_tooltip: "#header $notification_our_convoy_raiders_intercepted_name$#!\n$notification_our_convoy_raiders_intercepted_desc$"
 notification_enemy_convoy_raiders_intercepted_name: "Pilleurs de convois ennemis interceptés"
 notification_enemy_convoy_raiders_intercepted_desc: "[SCOPE.sCharacter( 'attacker_commander' ).GetFullName] a été intercepté[SCOPE.sCharacter( 'attacker_commander' ).GetCustom('FR_E')] par l’[concept_admiral|l] ennemi [SCOPE.sCharacter( 'defender_commander' ).GetFullName] lors d’une [Concept('concept_raid_convoys', '$concept_convoy_raiding$')|l] en [SCOPE.sStrategicRegion( 'region' ).GetName]."
 notification_enemy_convoy_raiders_intercepted_tooltip: "#header $notification_enemy_convoy_raiders_intercepted_name$#!\n$notification_enemy_convoy_raiders_intercepted_desc$"
 notification_journal_entry_activated_name: "Nouvelle [concept_journal_entry|l] : [SCOPE.GetRootScope.GetJournalEntry.GetName]"
 notification_journal_entry_activated_desc: "Entrée ajoutée au journal : [SCOPE.GetRootScope.GetJournalEntry.GetName]"
 notification_journal_entry_activated_tooltip: "#header $notification_journal_entry_activated_name$#!\n$notification_journal_entry_activated_desc$"
 notification_journal_entry_deactivated_name: "[SCOPE.GetRootScope.GetJournalEntry.GetName] fermé"
 notification_journal_entry_deactivated_desc: "Entrée supprimée du journal : [SCOPE.GetRootScope.GetJournalEntry.GetName]"
 notification_journal_entry_deactivated_tooltip: "#header $notification_journal_entry_deactivated_name$#!\n$notification_journal_entry_deactivated_desc$"
 notification_journal_entry_completed_name: "[SCOPE.GetRootScope.GetJournalEntry.GetName] achevé"
 notification_journal_entry_completed_desc: "[SCOPE.GetRootScope.GetJournalEntry.GetName] : achèvement réussi"
 notification_journal_entry_completed_tooltip: "#header $notification_journal_entry_completed_name$#!\n$notification_journal_entry_completed_desc$"
 notification_enactment_failed_name: "Échec de la promulgation de la loi"
 notification_enactment_failed_desc: "Votre corps législatif n'a pas réussi à promulguer la loi [SCOPE.GetRootScope.GetCountry.GetLawBeingEnacted.GetName]."
 notification_enactment_failed_tooltip: "#header $notification_enactment_failed_name$#!\n$notification_enactment_failed_desc$"
 notification_harvest_condition_started_in_country_name: "[concept_harvest_condition] commencée [SCOPE.GetRootScope.GetCountry.GetAltNameNoFormatting('En')][SCOPE.GetRootScope.GetCountry.GetName]"
 notification_harvest_condition_started_in_country_desc: "Condition de récolte [SCOPE.sHCA('area').GetType.GetName] ([SCOPE.sHCA('area').GetRemainingDurationLabel]) commencée en [SCOPE.sS('state').GetName] [SCOPE.sS('state').GetCountry.GetFlagTextIcon], affectant [SCOPE.GetValue('num_states')|0v] de vos [Concept('concept_state', '$concept_states$')] avec une [Concept('concept_harvest_condition_intensity', '$concept_harvest_condition_intensity_short$')|l] de [SCOPE.GetValue('intensity')|1v]."
 notification_harvest_condition_started_in_country_tooltip: "#header $notification_harvest_condition_started_in_country_name$#!\n$notification_harvest_condition_started_in_country_desc$"
 notification_harvest_condition_started_in_country_important_name: "$notification_harvest_condition_started_in_country_name$"
 notification_harvest_condition_started_in_country_important_desc: "$notification_harvest_condition_started_in_country_desc$"
 notification_harvest_condition_started_in_country_important_tooltip: "$notification_harvest_condition_started_in_country_tooltip$"
 notification_harvest_condition_started_in_market_name: "[concept_harvest_condition] commencée en [SCOPE.GetRootScope.GetMarket.GetName] [SCOPE.GetRootScope.GetMarket.GetOwner.GetFlagTextIcon]"
 notification_harvest_condition_started_in_market_desc: "Condition de récolte [SCOPE.sHCA('area').GetType.GetName] ([SCOPE.sHCA('area').GetRemainingDurationLabel]) commencée en [SCOPE.sS('state').GetName] [SCOPE.sS('state').GetCountry.GetFlagTextIcon], affectant [SCOPE.GetValue('num_states')|0v] [Concept('concept_state', '$concept_states$')] sur le marché avec une [Concept('concept_harvest_condition_intensity', '$concept_harvest_condition_intensity_short$')|l] de [SCOPE.GetValue('intensity')|1v]."
 notification_harvest_condition_started_in_market_tooltip: "#header $notification_harvest_condition_started_in_market_name$#!\n$notification_harvest_condition_started_in_market_desc$"
 notification_new_ruler_name: "[SCOPE.GetRootScope.GetCharacter.GetFirstName|v] est désormais notre [SCOPE.GetRootScope.GetCharacter.GetPrimaryRoleTitle|l]"
 notification_new_ruler_desc: "Le règne de [SCOPE.sCharacter( 'previous' ).GetFullName] en tant que [concept_ruler|l] est révolu. [SCOPE.GetRootScope.GetCharacter.GetFullName] est désormais le [Concept('concept_ruler', SCOPE.GetRootScope.GetCharacter.GetPrimaryRoleTitle)|l] du [SCOPE.GetRootScope.GetCharacter.GetCountry.GetName]"
 notification_new_ruler_tooltip: "#header $notification_ruler_changed_name$#!\n$notification_ruler_changed_desc$"
 notification_native_uprising_notification_name: "Soulèvement [SCOPE.sCountry('actor').GetAltNameNoFormatting('Du')][SCOPE.sCountry('actor').GetName]"
 notification_native_uprising_notification_desc: "[SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sCountry('actor').GetName] [SCOPE.sCountry('actor').GetAltNameNoFormatting('AOnt')] provoqué un [concept_native_uprising|l] contre nous !"
 notification_native_uprising_notification_tooltip: "#header $notification_native_uprising_notification_name$#!\n$notification_native_uprising_notification_desc$"
 notification_political_movement_formed_name: "[concept_political_movement] pour [SCOPE.GetRootScope.GetPoliticalMovement.GetName|l]"
 notification_political_movement_formed_desc: "Un [concept_political_movement|l] poussant à faire [SCOPE.GetRootScope.GetPoliticalMovement.GetName|l] s’est formé. Son [Concept('concept_political_movement_support', '$concept_political_movement_support_short$')|l] est de [SCOPE.GetRootScope.GetPoliticalMovement.GetSupport|v%0] et son [Concept('concept_activism', '$concept_activism_short$')|l] est de [SCOPE.GetRootScope.GetPoliticalMovement.GetRadicalism|v%0]."
 notification_political_movement_formed_tooltip: "#header $notification_political_movement_formed_name$#!\n$notification_political_movement_formed_desc$"
 notification_political_movement_disbanded_name: "[concept_political_movement] dissous"
 notification_political_movement_disbanded_desc: "Le [concept_political_movement|l] pour [SCOPE.GetRootScope.GetPoliticalMovement.GetName|l] est dissous"
 notification_political_movement_disbanded_tooltip: "#header $notification_political_movement_disbanded_name$#!\n$notification_political_movement_disbanded_desc$"
 notification_obligation_owed_to_us_expired_name: "Expiration de l’[concept_obligation|l] [SCOPE.sCountry('target_country').GetAltAdjectiveNoFormatting('FS')|l]"
 notification_obligation_owed_to_us_expired_desc: "L’[concept_obligation|l] envers nous [SCOPE.sCountry('target_country').GetAltNameNoFormatting('Du')][SCOPE.sCountry('target_country').GetName] a expiré"
 notification_obligation_owed_to_us_expired_tooltip: "#header $notification_obligation_owed_to_us_expired_name$#!\n$notification_obligation_owed_to_us_expired_desc$"
 notification_obligation_owed_by_us_expired_name: "Expiration de notre [concept_obligation|l]"
 notification_obligation_owed_by_us_expired_desc: "Notre [concept_obligation|l] envers [SCOPE.sCountry('target_country').GetAltNameNoFormatting('Le')][SCOPE.sCountry('target_country').GetName] a expiré"
 notification_obligation_owed_by_us_expired_tooltip: "#header $notification_obligation_owed_by_us_expired_name$#!\n$notification_obligation_owed_by_us_expired_desc$"
 notification_country_owes_obligation_tooltip: "#header $notification_country_owes_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$notification_country_owes_obligation_desc$"
 notification_country_owes_obligation_name: "[concept_obligation] envers [SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')][SCOPE.sCountry('actor').GetName]"
 notification_country_owes_obligation_desc: "Nous avons une [concept_obligation|l] envers [SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')][SCOPE.sCountry('actor').GetName]"
 notification_country_owed_obligation_tooltip: "#header $notification_country_owed_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$notification_country_owed_obligation_desc$"
 notification_country_owed_obligation_name: "[concept_obligation] de la part [SCOPE.sCountry('recipient').GetAltNameNoFormatting('Du')][SCOPE.sCountry('recipient').GetName]"
 notification_country_owed_obligation_desc: "[SCOPE.sCountry('recipient').GetAltNameNoFormatting('Le')|U][SCOPE.sCountry('recipient').GetName] [SCOPE.sCountry('recipient').GetAltNameNoFormatting('AOnt')] une [concept_obligation|l] envers nous"
 notification_country_owes_obligation_removed_tooltip: "#header $notification_country_owes_obligation_removed_name$#!\n$TOOLTIP_DELIMITER$\n$notification_country_owes_obligation_removed_desc$"
 notification_country_owes_obligation_removed_name: "[concept_obligation] envers [SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')][SCOPE.sCountry('actor').GetName] supprimée"
 notification_country_owes_obligation_removed_desc: "Nous n’avons plus d’[concept_obligation|l] envers [SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')][SCOPE.sCountry('actor').GetName]"
 notification_country_owed_obligation_removed_tooltip: "#header $notification_country_owed_obligation_removed_name$#!\n$TOOLTIP_DELIMITER$\n$notification_country_owed_obligation_removed_desc$"
 notification_country_owed_obligation_removed_name: "[concept_obligation] de la part [SCOPE.sCountry('recipient').GetAltNameNoFormatting('Du')][SCOPE.sCountry('recipient').GetName] supprimée"
 notification_country_owed_obligation_removed_desc: "[SCOPE.sCountry('recipient').GetAltNameNoFormatting('Le')|U][SCOPE.sCountry('recipient').GetName] n’[SCOPE.sCountry('recipient').GetAltNameNoFormatting('AOnt')] plus d’[concept_obligation|l] envers nous"
 notification_unification_candidate_added_name: "[SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sCountry('actor').GetName] devient un [concept_unification_candidate|l]"
 notification_unification_candidate_added_desc: "[SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sCountry('actor').GetName] [SCOPE.sCountry('actor').GetAltNameNoFormatting('EstSont')] maintenant un [concept_unification_candidate|l] pour [SCOPE.sCountryFormation('country_formation').GetName] qui peut bénéficier d’un soutien de [Concept('concept_country', '$concept_countries$')|l] [SCOPE.sCountryFormation('country_formation').GetAltAdjective('MP')|l] de moindre importance"
 notification_unification_candidate_added_tooltip: "#header $notification_unification_candidate_added_name$#!\n$notification_unification_candidate_added_desc$"
 notification_unification_candidate_removed_name: "[SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sCountry('actor').GetName] n’est plus un [concept_unification_candidate|l]"
 notification_unification_candidate_removed_desc: "[SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sCountry('actor').GetName] n’est plus un [concept_unification_candidate|l] pour [SCOPE.sCountryFormation('country_formation').GetName]"
 notification_unification_candidate_removed_tooltip: "#header $notification_unification_candidate_removed_name$#!\n$notification_unification_candidate_removed_desc$"
 notification_start_supporting_unification_name: "[SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sCountry('actor').GetName] soutient [SCOPE.sCountry('recipient').GetAltNameNoFormatting('Le')][SCOPE.sCountry('recipient').GetName]"
 notification_start_supporting_unification_desc: "[SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sCountry('actor').GetName] soutient désormais [SCOPE.sCountry('recipient').GetAltNameNoFormatting('Le')][SCOPE.sCountry('recipient').GetName] en tant que [concept_unification_candidate|l] pour [SCOPE.sCountryFormation('country_formation').GetName]"
 notification_start_supporting_unification_tooltip: "#header $notification_start_supporting_unification_name$#!\n$notification_start_supporting_unification_desc$"
 notification_stop_supporting_unification_name: "[SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sCountry('actor').GetName] cesse de soutenir [SCOPE.sCountry('recipient').GetAltNameNoFormatting('Le')][SCOPE.sCountry('recipient').GetName]"
 notification_stop_supporting_unification_desc: "[SCOPE.sCountry('actor').GetAltNameNoFormatting('Le')|U][SCOPE.sCountry('actor').GetName] ne soutient plus [SCOPE.sCountry('recipient').GetAltNameNoFormatting('Le')][SCOPE.sCountry('recipient').GetName] en tant que [concept_unification_candidate|l] pour [SCOPE.sCountryFormation('country_formation').GetName]"
 notification_stop_supporting_unification_tooltip: "#header $notification_stop_supporting_unification_name$#!\n$notification_stop_supporting_unification_desc$"
 notification_shipping_lane_formation_destination_invalidated_name: "Nouvelle destination de formation"
 notification_shipping_lane_formation_destination_invalidated_desc: "La formation [SCOPE.GetRootScope.GetMilitaryFormation.GetName] stationne dans le [AccessScopeReference(SCOPE.GetRootScope).AccessMilitaryFormation.GetHomeHQ.GetName] car la destination précédente était inaccessible"
 notification_shipping_lane_formation_destination_invalidated_tooltip: "#header $notification_shipping_lane_formation_destination_invalidated_name$#!\n$notification_shipping_lane_formation_destination_invalidated_desc$"
 notification_enemy_convoys_raided_name: "#v [SCOPE.sStrategicRegion('region').GetLastConvoyRaidingDamageBy(SCOPE.GetRootScope.GetCountry.Self)]#! [concept_convoys|l] ennemis ont coulé"
 notification_enemy_convoys_raided_desc: "Nos pilleurs de convois ont détruit #v [SCOPE.sStrategicRegion('region').GetLastConvoyRaidingDamageBy(SCOPE.GetRootScope.GetCountry.Self)]#! #tooltippable #tooltip:[GetRawTextTooltipTag(SCOPE.sStrategicRegion('region').GetLastConvoyRaidingTargetCountriesByAttackerDesc(SCOPE.GetRootScope.GetCountry.Self))] #!#! [concept_convoys|l] ennemis en [SCOPE.sStrategicRegion('region').GetName].\n\n[SCOPE.sStrategicRegion('region').GetLastConvoyRaidingDamageEnemyReductionDesc(SCOPE.GetRootScope.GetCountry.Self)]"
 notification_enemy_convoys_raided_tooltip: "#header $notification_enemy_convoys_raided_name$#!\n$notification_enemy_convoys_raided_desc$"
 notification_our_convoys_raided_name: "#v [SCOPE.sStrategicRegion('region').GetLastConvoyRaidingDamageTo(SCOPE.GetRootScope.GetCountry.Self)]#! de nos [concept_convoys|l] ont coulé"
 notification_our_convoys_raided_desc: "#tooltippable #tooltip:[GetRawTextTooltipTag(SCOPE.sStrategicRegion('region').GetLastConvoyRaidingCountriesToTargetDesc(SCOPE.GetRootScope.GetCountry.Self))] Des pilleurs de convois ennemis#!#! ont détruit #v [SCOPE.sStrategicRegion('region').GetLastConvoyRaidingDamageTo(SCOPE.GetRootScope.GetCountry.Self)]#! de nos [concept_convoys|l] en [SCOPE.sStrategicRegion('region').GetName].\n\n[SCOPE.sStrategicRegion('region').GetLastConvoyRaidingDamageReductionDesc(SCOPE.GetRootScope.GetCountry.Self)]"
 notification_our_convoys_raided_tooltip: "#header $notification_our_convoys_raided_name$#!\n$notification_our_convoys_raided_desc$"
 notification_formation_exiled_name: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] en [Concept('concept_exiled_army','$concept_exiled_army_exile$')|l]"
 notification_formation_exiled_desc: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] est en [Concept('concept_exiled_army','$concept_exiled_army_exile$')|l], et avance vers [SCOPE.GetRootScope.GetMilitaryFormation.GetTargetHQ.GetName]."
 notification_formation_exiled_tooltip: "#header $notification_formation_exiled_name$#!\n$notification_formation_exiled_desc$"
 notification_formation_returned_name: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] est revenu d’[Concept('concept_exiled_army','$concept_exiled_army_exile$')|l]"
 notification_formation_returned_desc: "[SCOPE.GetRootScope.GetMilitaryFormation.GetName] est arrivé en [SCOPE.GetRootScope.GetMilitaryFormation.GetStateAtPosition.GetNameWithCountryFlag]."
 notification_formation_returned_tooltip: "#header $notification_formation_returned_name$#!\n$notification_formation_returned_desc$"
 notification_formation_travel_to_front_cancelled_name: "La [concept_military_formation|l] ne peut pas atteindre le [concept_front|l]"
 notification_formation_travel_to_front_cancelled_desc: "La formation [SCOPE.GetRootScope.GetMilitaryFormation.GetName] ne peut pas atteindre le [SCOPE.sFront('front').GetName]."
 notification_formation_travel_to_front_cancelled_tooltip: "#header $notification_formation_travel_to_front_cancelled_name$#!\n$notification_formation_travel_to_front_cancelled_desc$"
 notification_formation_travel_station_in_hq_cancelled_name: "La [concept_military_formation|l] ne peut pas atteindre le [concept_hq]"
 notification_formation_travel_station_in_hq_cancelled_desc: "La formation [SCOPE.GetRootScope.GetMilitaryFormation.GetName] ne peut pas atteindre le [SCOPE.sHQ('hq').GetName]."
 notification_formation_travel_station_in_hq_cancelled_tooltip: "#header $notification_formation_travel_station_in_hq_cancelled_name$#!\n$notification_formation_travel_station_in_hq_cancelled_desc$"
 notification_formation_travel_deploy_to_sea_node_cancelled_name: "La [concept_military_formation|l] ne peut pas atteindre le [concept_sea_node|l]"
 notification_formation_travel_deploy_to_sea_node_cancelled_desc: "La formation [SCOPE.GetRootScope.GetMilitaryFormation.GetName] ne peut pas atteindre la [SCOPE.sProvince('province').GetName]."
 notification_formation_travel_deploy_to_sea_node_cancelled_tooltip: "#header $notification_formation_travel_deploy_to_sea_node_cancelled_name$#!\n$notification_formation_travel_deploy_to_sea_node_cancelled_desc$"
 notification_formation_travel_track_formation_cancelled_name: "La [concept_military_formation|l] ne peut plus en suivre une autre"
 notification_formation_travel_track_formation_cancelled_desc: "La formation [SCOPE.GetRootScope.GetMilitaryFormation.GetName] ne peut plus suivre la formation [SCOPE.sMilitaryFormation('formation').GetName]."
 notification_formation_travel_track_formation_cancelled_tooltip: "#header $notification_formation_travel_track_formation_cancelled_name$#!\n$notification_formation_travel_track_formation_cancelled_desc$"
 notification_political_lobby_created_from_catalyst_name: "Formation d'un [concept_political_lobby|l]"
 notification_political_lobby_created_from_catalyst_desc: "Le lobby [SCOPE.sPoliticalLobby('political_lobby').GetName|v] s'est formé à la suite de [SCOPE.sDiplomaticCatalyst('diplomatic_catalyst').GetDesc]\n\nLe nouveau [Concept('concept_political_lobby','$concept_political_lobby_short$')|l] se compose de [SCOPE.sPoliticalLobby('political_lobby').GetMembersDesc]"
 notification_political_lobby_created_from_catalyst_tooltip: "#header $notification_political_lobby_created_from_catalyst_name$#!\n$notification_political_lobby_created_from_catalyst_desc$"
 notification_political_lobby_created_name: "Formation d'un [concept_political_lobby|l]"
 notification_political_lobby_created_desc: "Le [concept_political_lobby|l] [SCOPE.sPoliticalLobby('political_lobby').GetName|v] s’est formé\n\nLe nouveau [Concept('concept_political_lobby','$concept_political_lobby_short$')|l] se compose de [SCOPE.sPoliticalLobby('political_lobby').GetMembersDesc]"
 notification_political_lobby_created_tooltip: "#header $notification_political_lobby_created_name$#!\n$notification_political_lobby_created_desc$"
 notification_political_lobby_disbanded_name: "Dissolution d'un [concept_political_lobby|l]"
 notification_political_lobby_disbanded_desc: "Le lobby [SCOPE.sPoliticalLobby('political_lobby').GetName|v] est dissous"
 notification_political_lobby_disbanded_tooltip: "#header $notification_political_lobby_disbanded_name$#!\n$TOOLTIP_DELIMITER$\n$notification_political_lobby_disbanded_desc$"
 notification_political_lobby_disbanded_with_reason_name: "Dissolution d'un [concept_political_lobby|l]"
 notification_political_lobby_disbanded_with_reason_desc: "Le lobby [SCOPE.sPoliticalLobby('political_lobby').GetName|v] est dissous car les conditions suivantes ne sont plus respectées :\n[SCOPE.sPoliticalLobby('political_lobby').GetDisbandReasonDesc]"
 notification_political_lobby_disbanded_with_reason_tooltip: "#header $notification_political_lobby_disbanded_name$#!\n$TOOLTIP_DELIMITER$\n$notification_political_lobby_disbanded_desc$"
 notification_foreign_political_lobby_created_from_catalyst_name: "Formation d’un [concept_political_lobby|l] étranger"
 notification_foreign_political_lobby_created_from_catalyst_desc: "Le lobby [SCOPE.sPoliticalLobby('political_lobby').GetName|v] s’est formé [SCOPE.sPoliticalLobby('political_lobby').GetCountry.GetAltNameNoFormatting('En')][SCOPE.sPoliticalLobby('political_lobby').GetCountry.GetName] car [SCOPE.sDiplomaticCatalyst('diplomatic_catalyst').GetDesc]\n\nLe nouveau [Concept('concept_political_lobby','$concept_political_lobby_short$')|l] se compose de [SCOPE.sPoliticalLobby('political_lobby').GetMembersDesc]"
 notification_foreign_political_lobby_created_from_catalyst_tooltip: "#header $notification_foreign_political_lobby_created_from_catalyst_name$#!\n$notification_foreign_political_lobby_created_from_catalyst_desc$"
 notification_foreign_political_lobby_created_name: "Formation d'un [concept_political_lobby|l] étranger"
 notification_foreign_political_lobby_created_desc: "Le lobby [SCOPE.sPoliticalLobby('political_lobby').GetName|v] s’est formé [SCOPE.sPoliticalLobby('political_lobby').GetCountry.GetAltNameNoFormatting('En')][SCOPE.sPoliticalLobby('political_lobby').GetCountry.GetName]\n\nLe nouveau [Concept('concept_political_lobby','$concept_political_lobby_short$')|l] se compose de [SCOPE.sPoliticalLobby('political_lobby').GetMembersDesc]"
 notification_foreign_political_lobby_created_tooltip: "#header $notification_foreign_political_lobby_created_name$#!\n$notification_foreign_political_lobby_created_desc$"
 notification_foreign_political_lobby_disbanded_name: "Dissolution d'un [concept_political_lobby|l] étranger"
 notification_foreign_political_lobby_disbanded_desc: "Le lobby [SCOPE.sPoliticalLobby('political_lobby').GetName|v] [SCOPE.sPoliticalLobby('political_lobby').GetCountry.GetAltNameNoFormatting('En')][SCOPE.sPoliticalLobby('political_lobby').GetCountry.GetName] est dissous"
 notification_foreign_political_lobby_disbanded_tooltip: "#header $notification_foreign_political_lobby_disbanded_name$#!\n$TOOLTIP_DELIMITER$\n$notification_foreign_political_lobby_disbanded_desc$"
 notification_foreign_political_lobby_disbanded_with_reason_name: "Dissolution d’un [concept_political_lobby|l] étranger"
 notification_foreign_political_lobby_disbanded_with_reason_desc: "Le lobby [SCOPE.sPoliticalLobby('political_lobby').GetName|v] [SCOPE.sPoliticalLobby('political_lobby').GetCountry.GetAltNameNoFormatting('En')][SCOPE.sPoliticalLobby('political_lobby').GetCountry.GetName] est dissous car les conditions suivantes ne sont plus respectées :\n[SCOPE.sPoliticalLobby('political_lobby').GetDisbandReasonDesc]"
 notification_foreign_political_lobby_disbanded_with_reason_tooltip: "#header $notification_foreign_political_lobby_disbanded_with_reason_name$#!\n$TOOLTIP_DELIMITER$\n$notification_foreign_political_lobby_disbanded_with_reason_desc$"
 notification_interest_group_joins_lobby_name: "Le [concept_interest_group|l] rejoint le [concept_political_lobby|l]"
 notification_interest_group_joins_lobby_desc: "Le groupe [SCOPE.gsInterestGroup('interest_group').GetName|v] a rejoint le lobby [SCOPE.sPoliticalLobby('political_lobby').GetName|v]"
 notification_interest_group_joins_lobby_tooltip: "#header $notification_interest_group_joins_lobby_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_group_joins_lobby_desc$"
 notification_interest_group_leaves_lobby_name: "Le [concept_interest_group|l] quitte le [concept_political_lobby|l]"
 notification_interest_group_leaves_lobby_desc: "Le groupe [SCOPE.gsInterestGroup('interest_group').GetName|v] a quitté le lobby [SCOPE.sPoliticalLobby('political_lobby').GetName|v]"
 notification_interest_group_leaves_lobby_tooltip: "#header $notification_interest_group_leaves_lobby_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_group_leaves_lobby_desc$"
 notification_country_attitude_improved_name: "Amélioration de l’attitude [SCOPE.GetRootScope.GetCountry.GetAltAdjectiveNoFormatting('FS')|l]"
 notification_country_attitude_improved_desc: "L’[concept_attitude|l] [SCOPE.GetRootScope.GetCountry.GetAltNameNoFormatting('Du')][SCOPE.GetRootScope.GetCountry.GetName] envers nous s’est #p améliorée#! et est maintenant [SCOPE.GetRootScope.GetCountry.GetAttitudeTowards(GetPlayer).GetName] (précédemment : [SCOPE.GetRootScope.GetCountry.GetPreviousAttitudeTowards(GetPlayer).GetName])\n\nCela se produit car [SCOPE.sDiplomaticCatalyst('diplomatic_catalyst').GetDesc]"
 notification_country_attitude_improved_tooltip: "#header $notification_country_attitude_improved_name$#!\n$notification_country_attitude_improved_desc$"
 country_attitude_changed_group: "Changement de l’attitude du pays"
 notification_country_attitude_changed_name: "Changement de l’attitude [SCOPE.GetRootScope.GetCountry.GetAltAdjectiveNoFormatting('FS')|l]"
 notification_country_attitude_changed_desc: "L’[concept_attitude|l] [SCOPE.GetRootScope.GetCountry.GetAltNameNoFormatting('Du')][SCOPE.GetRootScope.GetCountry.GetName] envers nous a changé et est maintenant [SCOPE.GetRootScope.GetCountry.GetAttitudeTowards(GetPlayer).GetName] (précédemment : [SCOPE.GetRootScope.GetCountry.GetPreviousAttitudeTowards(GetPlayer).GetName])\n\nCela se produit car [SCOPE.sDiplomaticCatalyst('diplomatic_catalyst').GetDesc]"
 notification_country_attitude_changed_tooltip: "#header $notification_country_attitude_changed_name$#!\n$notification_country_attitude_changed_desc$"
 notification_country_attitude_worsened_name: "Dégradation de l’attitude [SCOPE.GetRootScope.GetCountry.GetAltAdjectiveNoFormatting('FS')|l]"
 notification_country_attitude_worsened_desc: "L’[concept_attitude|l] [SCOPE.GetRootScope.GetCountry.GetAltNameNoFormatting('Du')][SCOPE.GetRootScope.GetCountry.GetName] envers nous s’est #n dégradée#! et est maintenant [SCOPE.GetRootScope.GetCountry.GetAttitudeTowards(GetPlayer).GetName] (précédemment : [SCOPE.GetRootScope.GetCountry.GetPreviousAttitudeTowards(GetPlayer).GetName])\n\nCela se produit car [SCOPE.sDiplomaticCatalyst('diplomatic_catalyst').GetDesc]"
 notification_country_attitude_worsened_tooltip: "#header $notification_country_attitude_worsened_name$#!\n$notification_country_attitude_worsened_desc$"
 notification_treaty_entered_into_force_name: "[SCOPE.GetRootScope.GetTreaty.GetName] en vigueur"
 notification_treaty_entered_into_force_desc: "[SCOPE.GetRootScope.GetTreaty.GetName] est en vigueur avec une période d’engagement de [SCOPE.GetRootScope.GetTreaty.GetBindingPeriodFormatted]"
 notification_treaty_entered_into_force_tooltip: "#header $notification_treaty_entered_into_force_name$#!\n$notification_treaty_entered_into_force_desc$"
 notification_country_withdrawn_from_treaty_name: "[SCOPE.sCountry('withdrawing_country').GetAltNameNoFormatting('Le')|U][SCOPE.sCountry('withdrawing_country').GetName] se retire du traité ([SCOPE.GetRootScope.GetTreaty.GetName])"
 notification_country_withdrawn_from_treaty_desc: "[SCOPE.sCountry('withdrawing_country').GetAltNameNoFormatting('Le')|U][SCOPE.sCountry('withdrawing_country').GetName] s’est retiré du traité ([SCOPE.GetRootScope.GetTreaty.GetName])"
 notification_country_withdrawn_from_treaty_tooltip: "#header $notification_country_withdrawn_from_treaty_name$#!\n$notification_country_withdrawn_from_treaty_desc$"
 notification_country_broke_treaty_name: "[SCOPE.sCountry('withdrawing_country').GetAltNameNoFormatting('Le')|U][SCOPE.sCountry('withdrawing_country').GetName] rompt le traité ([SCOPE.GetRootScope.GetTreaty.GetName])"
 notification_country_broke_treaty_desc: "[SCOPE.sCountry('withdrawing_country').GetAltNameNoFormatting('Le')|U][SCOPE.sCountry('withdrawing_country').GetName] a rompu le traité [SCOPE.GetRootScope.GetTreaty.GetName] en violant la période d’engagement"
 notification_country_broke_treaty_tooltip: "#header $notification_country_broke_treaty_name$#!\n$notification_country_broke_treaty_desc$"
 notification_treaty_proposal_declined_name: "Proposition de traité ([SCOPE.GetRootScope.GetTreaty.GetName]) refusée"
 notification_treaty_proposal_declined_desc: "Notre proposition de traité ([SCOPE.GetRootScope.GetTreaty.GetName]) a été refusée"
 notification_treaty_proposal_declined_tooltip: "#header $notification_treaty_proposal_declined_name$#!\n$notification_treaty_proposal_declined_desc$"
 notification_treaty_dissolved_name: "Traité ([SCOPE.GetRootScope.GetTreaty.GetName]) rompu"
 notification_treaty_dissolved_desc: "Le traité ([SCOPE.GetRootScope.GetTreaty.GetName]) a été rompu"
 notification_treaty_dissolved_tooltip: "#header $notification_treaty_dissolved_name$#!\n$notification_treaty_dissolved_desc$"
 notification_treaty_broken_name: "Traité [SCOPE.GetRootScope.GetTreaty.GetName] rompu"
 notification_treaty_broken_desc: "Le traité [SCOPE.GetRootScope.GetTreaty.GetName] a été rompu avant la fin de la période d’engagement"
 notification_treaty_broken_tooltip: "#header $notification_treaty_broken_name$#!\n$notification_treaty_broken_desc$"
 CONVOY_DAMAGE_REDUCTION_NONE: "Aucune flotte d’escorte n’a pu réduire les pertes des [concept_convoys|l]."
 CONVOY_DAMAGE_REDUCTION_DESC: "Les flottes d’escorte ont réussi à éviter la perte de $AMOUNT|v$ [concept_convoys|l] supplémentaires. Au total, les navires ennemis de pillage de convois auraient pu détruire $MAX|v$ de nos convois dans le nœud maritime."
 CONVOY_RAID_ATTACKER_COUNTRY_LIST: "Pilleurs :\n$BREAKDOWN$"
 CONVOY_RAID_TARGET_COUNTRY_LIST: "Pillés :\n$BREAKDOWN$"
 CONVOY_RAID_VALUE_FROM_UNITS: "$TAB$$TAB$$VALUE|v$ des unités de combat"
 CONVOY_RAID_VALUE_FROM_CHARACTER_TRAIT: "$TAB$$TAB$$VALUE|%0=v$ du trait de personnage [CharacterTrait.GetName]"
 CONVOY_RAID_VALUE_FROM_ADMIRAL_ORDER: "$TAB$$TAB$$VALUE|%0=v$ de l’ordre de commandant [CommanderOrderType.GetName]$SEA_PRESENCE_DESC$"
 CONVOY_RAID_SEA_PRESENCE_DESC: " compte tenu de la présence maritime de la flotte qui s’élève à $VALUE|%0v$"
 CONVOY_RAID_ADMIRAL_VALUE: "$TAB$$VALUE|v$ de [Character.GetFullName] en raison de :\n$BREAKDOWN$"
 CONVOY_RAID_COUNTRY_ENTRY: "$TAB$[Country.GetName]"
 CONVOY_RAID_ATTACK_DESC: "#bold Puissance d’attaque de convois#!\n$BREAKDOWN$"
 CONVOY_RAID_COUNTRY_ATTACK_ENTRY: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] a une puissance d’attaque de convois de $VALUE|0v$ en raison de :\n$BREAKDOWN$"
 CONVOY_RAID_COUNTRY_SHARED_ATTACK_ENTRY: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] a une puissance d’attaque de convois de $VALUE|0v$ dans la guerre actuelle, soit $PERC|%0v$ du total de $TOTAL|v$ :\n$BREAKDOWN$"
 CONVOY_RAID_DEFENSE_DESC: "#bold Défense de convois#!\n$BREAKDOWN$"
 CONVOY_RAID_COUNTRY_DEFENSE_ENTRY: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] a une défense de convois de $VALUE|0v$ en raison de :\n$BREAKDOWN$"
 CONVOY_RAID_COUNTRY_SHARED_DEFENSE_ENTRY: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] a une défense de convois de $VALUE|0v$ dans la guerre actuelle, soit $PERC|%0v$ du total de $TOTAL|v$ :\n$BREAKDOWN$"
 CONVOY_RAID_TARGET_ENTRY: "[Country.GetName] : puissance d’attaque de convois de #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v$#!#! ciblant $NUM|v$ convois"
 CONVOY_RAID_DEFENSE_ENTRY: "[Country.GetName] : défense de convois de #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v$#!#! protégeant $PERC|%0v$ de ses convois"
 CONVOY_RAID_DAMAGE_ENTRY: "[Country.GetName] : $MIN|v$ - $MAX|v$ convois détruits"
 CONVOY_RAIDS_DESC: "#bold Pillage de convois#!\nCibles :\n$TARGETS_BREAKDOWN$[ConcatIfNeitherEmpty('\n\nDéfense :\n','$DEFENSE_BREAKDOWN$')]\n\nDans la situation actuelle, le prochain pillage de convois entraînerait les pertes suivantes :\n$DAMAGE_BREAKDOWN$\n\nLe prochain pillage de convois dans ce nœud maritime aura lieu dans #v $DAYS$#! jours"
 HOUR_NIGHT: "Nuit"
 HOUR_MORNING: "Matin"
 HOUR_AFTERNOON: "Après-midi"
 HOUR_EVENING: "Soir"
 DAY_MONDAY: "Lundi"
 DAY_TUESDAY: "Mardi"
 DAY_WEDNESDAY: "Mercredi"
 DAY_THURSDAY: "Jeudi"
 DAY_FRIDAY: "Vendredi"
 DAY_SATURDAY: "Samedi"
 DAY_SUNDAY: "Dimanche"
 TOOLTIP_TYPE_CONSTITUTION_LAW: "[concept_law]"
 TOOLTIP_TYPE_LAW_GROUP: "Groupe de loi"
 TOOLTIP_TYPE_LAW_TYPE: "Type de loi"
 TOOLTIP_TYPE_MARKET: "[concept_market]"
 TOOLTIP_TYPE_DECREE_TYPE: "[concept_decree]"
 TOOLTIP_TYPE_SUBJECT_TYPE: "[concept_subject_type]"
 TOOLTIP_TYPE_INSTITUTION: "[concept_institution]"
 TOOLTIP_TYPE_INSTITUTION_TYPE: "Type d’institution"
 TOOLTIP_TYPE_INTEREST_GROUP: "[concept_interest_group]"
 TOOLTIP_TYPE_PARTY: "[concept_party]"
 TOOLTIP_TYPE_IDEOLOGY: "[concept_ideology]"
 TOOLTIP_TYPE_GAME_CONCEPT_TYPE: "Concept du jeu"
 TOOLTIP_TYPE_GOODS: "[SelectLocalization(Goods.IsPrestigeGoods,'TOOLTIP_TYPE_PRESTIGE_GOODS','TOOLTIP_TYPE_REGULAR_GOODS')]"
 TOOLTIP_TYPE_PRESTIGE_GOODS: "[concept_prestige_good]"
 TOOLTIP_TYPE_REGULAR_GOODS: "[SelectLocalization(Goods.IsLocal,'LOCAL_GOOD',SelectLocalization(Goods.IsTradeable, 'GOODS', 'NON_TRADEABLE_GOODS'))]"
 TOOLTIP_TYPE_PROFESSION: "[concept_profession]"
 TOOLTIP_TYPE_POP: "[concept_pop]"
 TOOLTIP_TYPE_COUNTRY: "[concept_country]"
 TOOLTIP_TYPE_CULTURE: "[concept_culture]"
 TOOLTIP_TYPE_CULTURAL_COMMUNITY: "[concept_cultural_community]"
 TOOLTIP_TYPE_RELIGION: "[concept_religion]"
 TOOLTIP_TYPE_CULTURAL_TRAIT: "[concept_cultural_trait]"
 TOOLTIP_TYPE_STATE: "[SelectLocalization(State.IsSplitState, 'TOOLTIP_TYPE_STATE_SPLIT', 'TOOLTIP_TYPE_STATE_REGULAR' )]"
 TOOLTIP_TYPE_STATE_REGULAR: "[concept_state]"
 TOOLTIP_TYPE_STATE_SPLIT: "[concept_split_state] en [State.GetStateRegion.GetName]"
 TOOLTIP_TYPE_STATE_REGION: "[concept_state_region]"
 TOOLTIP_TYPE_BUILDING: "[Building.GetBuildingType.GetBuildingKindDesc(Building.GetOwner.Self)]"
 TOOLTIP_TYPE_BUILDING_TYPE: "[BuildingType.GetBuildingKindDesc(GetPlayer.Self)]"
 TOOLTIP_TYPE_CHARACTER: "[concept_character]"
 TOOLTIP_TYPE_CHARACTER_TRAIT: "Trait"
 TOOLTIP_TYPE_COMMANDER_RANK: "Rang de commandant"
 TOOLTIP_TYPE_PRODUCTION_METHOD: "[concept_production_method]"
 TOOLTIP_TYPE_TECHNOLOGY: "Technologie"
 TOOLTIP_TYPE_INTEREST_GROUP_TRAIT: "Trait de groupe d’intérêt"
 TOOLTIP_TYPE_STRATEGIC_REGION: "[concept_strategic_region]"
 TOOLTIP_TYPE_WAR: "[concept_war]"
 TOOLTIP_TYPE_WAR_GOAL: "[concept_war_goal][ConcatIfNeitherEmpty('\n', AddLocalizationIf(WarGoal.HoldsArticle, 'TOOLTIP_TYPE_ARTICLE'))]"
 TOOLTIP_TYPE_ARTICLE: "[concept_article]"
 TOOLTIP_TYPE_CANAL_TYPE: "Type de canal"
 TOOLTIP_TYPE_POLITICAL_MOVEMENT_TYPE: "Type de mouvement politique"
 TOOLTIP_TYPE_OBJECTIVE_TYPE: "Type d’objectif"
 TOOLTIP_TYPE_OBJECTIVE: "Objectif"
 TOOLTIP_TYPE_LEGITIMACY_LEVEL: "Niveau de [concept_legitimacy|l]"
 TOOLTIP_TYPE_ACCEPTANCE_STATUS: "[concept_acceptance_status]"
 TOOLTIP_TYPE_FRONT: "[concept_front]"
 TOOLTIP_TYPE_POLITICAL_MOVEMENT: "[concept_political_movement]"
 TOOLTIP_TYPE_TREATY_ARTICLE_TYPE: "Type d’article du traité"
 NON_TRADEABLE_GOODS: "[Concept('concept_good', '$NON_TRADEABLE_GOODS_FULL$')]"
 GOODS: "[concept_good]"
 NON_TRADEABLE_GOODS_FULL: "Biens non échangeables"
 GOOD_CAN_BE_PRODUCED_BY: "#title Peut être produit par#!"
 GOOD_CAN_BE_USED_BY: "#title Peut être utilisé par#!"
 DECISIONS: "Décisions"
 JOURNAL: "Journal"
 TOOLTIP_SLAVE_STATE: "#header État esclavagiste#!\nLes bâtiments de [State.GetName] utilisent des [GetPopType('slaves').GetName|l] ou ont la possibilité de les utiliser."
 SLAVE_STATE: "État esclavagiste"
 SLAVE_IMPORT: "Importation d’esclaves"
 SLAVE_EXPORT: "Exportation d’esclaves"
 SLAVE_IMPORT_MARKER_DESC: "Cet État importe actuellement des esclaves de [STATE.GetName]."
 SLAVE_EXPORT_MARKER_DESC: "Cet État exporte actuellement des esclaves vers les États suivants : "
 SLAVE_EXPORT_MARKER_DESC_ITEM: "[STATE.GetName]"
 TOOLTIP_STATE_SLAVE_IMPORT_STATES: "[STATE.GetName] a importé #variable $AMOUNT|K+$#! esclaves de $STATES_LIST$ au total la semaine dernière"
 TOOLTIP_STATE_SLAVE_EXPORT_STATES: "[STATE.GetName] a exporté #variable $AMOUNT|K+$#! esclaves vers $STATES_LIST$ au total la semaine dernière"
 NICOLAS_TEST: "TESTING"
 NO_UNPRESSED_WAR_GOALS: "Aucun [concept_war_goal|l] non appuyé"
 NO_PRESSED_WAR_GOALS: "Aucun [concept_war_goal|l] appuyé"
 GAME_CHECKSUM_CHANGED_FROM_SAVE_FILE: "@warning_icon!#X Somme de contrôle invalide pour les Succès#!\nCette sauvegarde était valable pour les Succès sur une somme de contrôle différente, donc son chargement les désactivera."
 MODIFIER_CONSCRIPTION_RATE_ADD_ADDITIONAL_INFO: "@battalions!$NUM_BATTALIONS|v$ [Concept('concept_battalion', '$concept_battalions$')|l] peuvent être [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$s')|l]"
 DEFAULT_HQ_NAME: "[Concept('concept_hq', 'QG')] [HQ.GetStrategicRegion.GetNameNoFormatting] [HQ.GetCountry.GetFlagTextIcon]"
 DEFAULT_HQ_NAME_NO_FLAG: "[Concept('concept_hq', 'QG')] de [HQ.GetStrategicRegion.GetNameNoFormatting]"
 DEFAULT_HQ_NAME_NO_FLAG_NO_CONCEPT: "[HQ.GetStrategicRegion.GetNameNoFormatting]"
 NO_GENERALS: "Pas de [Concept('concept_general', '$concept_generals$')|l]"
 NO_ADMIRALS: "Pas d’[Concept('concept_admiral', '$concept_admirals$')|l]"
 RESET_TECH_TREE_VIEW: "Réinitialiser"
 BUILDING_KIND_GOVERNMENT: "[concept_government_building]"
 BUILDING_KIND_MILITARY: "[concept_military_building]"
 BUILDING_KIND_SUBSISTENCE: "[concept_subsistence_building]"
 BUILDING_KIND_URBAN_CENTER: "[GetBuildingType('building_urban_center').GetName]"
 BUILDING_KIND_USES_GOVERNMENT_SLAVES: "Utilise des [concept_budget_government_slaves|l][SelectLocalization( ObjectsEqual(Country.Self, GetPlayer.Self), '', 'IN_COUNTRY' )]"
 BUILDING_KIND_USES_MILITARY_SLAVES: "Utilise des [concept_budget_military_slaves|l][SelectLocalization( ObjectsEqual(Country.Self, GetPlayer.Self), '', 'IN_COUNTRY' )]"
 BUILDING_KIND_USES_SLAVES: "Utilise les [POP_TYPE.GetName|l] comme [TARGET_POP_TYPE.GetName|l][SelectLocalization( ObjectsEqual(Country.Self, GetPlayer.Self), '', 'IN_COUNTRY' )]"
 BUILDING_KIND_NON_GOVERNMENT: "[concept_building]"
 IN_COUNTRY: " [Country.GetAltNameNoFormatting('En')][Country.GetName]"
 BUILDING_STATUS_ESTABLISHED: "Ce bâtiment a été établi le [BUILDING.GetEstablishmentDate]"
 BUILDING_STATUS_UNDER_CONSTRUCTION: "Ce bâtiment est actuellement en construction"
 BUILDING_STATUS_EXPANDING: "Ce bâtiment est en train d’être agrandi"
 BUILDING_STATUS_QUEUED_UNDER_CONSTRUCTION: "Ce bâtiment est en attente de construction"
 BUILDING_STATUS_QUEUED_EXPANDING: "Ce bâtiment est sur file d’attente pour un agrandissement"
 BUILDING_STATUS_NOT_ACTIVE: "Ce bâtiment est actuellement inactif"
 BUILDING_IS_DRAFTING_IMPL: "[Concept('concept_conscript_battalion', '$concept_conscript_battalion_drafting$')|l] ([Building.GetEmploymentPercentage|%0v])"
 CONSCRIPTION_CENTER_IS_DRAFTING: "Ce [concept_conscription_center|l] $BUILDING_IS_DRAFTING_IMPL$."
 MORE_ITEMS: " ... et $COUNT$ autres"
 MORE_ITEMS_TOOLTIPPABLE: "#tooltippable #tooltip:$TAG$ ... et $COUNT$ autres#!#!"
 ### DIPLOMATIC PLAY / WAR POPUP
 DEMANDS: "Demandes"
 WARGOALS: "[Concept('concept_war_goal','$concept_war_goals$')]"
 PRIMARY_WARGOALS: "[Concept('concept_primary_demand','$concept_primary_demands$')]"
 NO_PRIMARY_WARGOALS: "Aucune exigence principale"
 SECONDARY_WARGOALS: "[Concept('concept_secondary_demand','$concept_secondary_demands$')]"
 NO_SECONDARY_WARGOALS: "Aucune exigence secondaire"
 OBLIGATIONS: "[Concept('concept_obligation','$concept_obligations$')]"
 NO_WARGOAL: "Pas d’[concept_war_goal|l]"
 CAN_REVERSE_SWAY_INITIATOR_TOOLTIP: "@approves! [GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName|l] [GetPlayer.GetAltNameNoFormatting('AOnt')] au moins une [Concept('concept_offer_support','$concept_offer_of_support$')] que [DiplomaticPlay.GetInitiator.GetAltNameNoFormatting('Le')][DiplomaticPlay.GetInitiator.GetName] accepterait"
 CANNOT_REVERSE_SWAY_INITIATOR_TOOLTIP: "@disapproves! [GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName|l] n’[GetPlayer.GetAltNameNoFormatting('AOnt')] aucune [Concept('concept_offer_support','$concept_offer_of_support$')|l] que [DiplomaticPlay.GetInitiator.GetAltNameNoFormatting('Le')][DiplomaticPlay.GetInitiator.GetName] accepterait"
 CAN_REVERSE_SWAY_TARGET_TOOLTIP: "@approves! [GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName|l] [GetPlayer.GetAltNameNoFormatting('AOnt')] au moins une [Concept('concept_offer_support','$concept_offer_of_support$')] que [DiplomaticPlay.GetTarget.GetAltNameNoFormatting('Le')][DiplomaticPlay.GetTarget.GetName] accepterait"
 CANNOT_REVERSE_SWAY_TARGET_TOOLTIP: "@disapproves! [GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName|l] n’[GetPlayer.GetAltNameNoFormatting('AOnt')] aucune [Concept('concept_offer_support','$concept_offer_of_support$')|l] que [DiplomaticPlay.GetTarget.GetAltNameNoFormatting('Le')][DiplomaticPlay.GetTarget.GetName] accepterait"
 SWAY_COUNTRY_TOOLTIP: "[DiplomaticPlay.GetCanSwayCountryDesc(GetPlayer.Self, Country.Self)]\n\n@battalions! #v #tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_ARMY_OVERVIEW_TOOLTIP [Country.GetBattalions|0]#!#!#! [Concept('concept_battalion', '$concept_battalions$')] (#v [Country.GetMobilizationRatio|0%]#! @mobilization! [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$')])\n@flotillas! #v #tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP [Country.GetWarships]#!#!#! [Concept('concept_flotilla', '$concept_flotillas$')]"
 CAN_SWAY_COUNTRY_TOOLTIP: "@approves! [GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName|l] [GetPlayer.GetAltNameNoFormatting('AOnt')] au moins un moyen d’[concept_sway|l] que [Country.GetAltNameNoFormatting('Le')][Country.GetName] accepterait"
 CANNOT_SWAY_COUNTRY_TOOLTIP: "@disapproves! [GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName|l] n’[GetPlayer.GetAltNameNoFormatting('AOnt')] pas de moyen d’[concept_sway|l] que [Country.GetAltNameNoFormatting('Le')][Country.GetName] accepterait"
 SWAY_PANEL_CAN_SWAY_TOOLTIP: "@approves! [GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName|l] [GetPlayer.GetAltNameNoFormatting('AOnt')] au moins un moyen d’[concept_sway|l] que [SwayCountryPanel.GetCountry.GetAltNameNoFormatting('Le')][SwayCountryPanel.GetCountry.GetName] accepterait"
 SWAY_PANEL_CANNOT_SWAY_TOOLTIP: "@disapproves! [GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName|l] n’[GetPlayer.GetAltNameNoFormatting('AOnt')] pas de moyen d’[concept_sway|l] que [SwayCountryPanel.GetCountry.GetAltNameNoFormatting('Le')][SwayCountryPanel.GetCountry.GetName] accepterait"
 SWAY_PANEL_CAN_REVERSE_SWAY_TOOLTIP: "@approves! [GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName|l] [GetPlayer.GetAltNameNoFormatting('AOnt')] au moins une [Concept('concept_offer_support','$concept_offer_of_support$')|l] que [SwayCountryPanel.GetCountry.GetAltNameNoFormatting('Le')][SwayCountryPanel.GetCountry.GetName] accepterait"
 SWAY_PANEL_CANNOT_REVERSE_SWAY_TOOLTIP: "@disapproves! [GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName|l] n’[GetPlayer.GetAltNameNoFormatting('AOnt')] aucune [Concept('concept_offer_support','$concept_offer_of_support$')|l] que [SwayCountryPanel.GetCountry.GetAltNameNoFormatting('Le')][SwayCountryPanel.GetCountry.GetName] accepterait"
 SWAY_PANEL_CAN_SWAY_TOOLTIP_WARGOAL: "@approves! [GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName|l] [GetPlayer.GetAltNameNoFormatting('AOnt')] au moins un moyen d’[concept_sway|l] pour #b [WarGoalType.GetName]#! que [SwayCountryPanel.GetCountry.GetAltNameNoFormatting('Le')][SwayCountryPanel.GetCountry.GetName] accepterait"
 SWAY_PANEL_CANNOT_SWAY_TOOLTIP_WARGOAL: "@disapproves! [GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName|l] n’[GetPlayer.GetAltNameNoFormatting('AOnt')] pas de moyen d’[concept_sway|l] pour #b [WarGoalType.GetName]#! que [SwayCountryPanel.GetCountry.GetAltNameNoFormatting('Le')][SwayCountryPanel.GetCountry.GetName] accepterait"
 SWAY_PANEL_CAN_REVERSE_SWAY_TOOLTIP_WARGOAL: "@approves! [GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName|l] [GetPlayer.GetAltNameNoFormatting('AOnt')] au moins une [Concept('concept_offer_support','$concept_offer_of_support$')|l] pour #b [WarGoalType.GetName]#! que [SwayCountryPanel.GetCountry.GetAltNameNoFormatting('Le')][SwayCountryPanel.GetCountry.GetName] accepterait"
 SWAY_PANEL_CANNOT_REVERSE_SWAY_TOOLTIP_WARGOAL: "@disapproves! [GetPlayer.GetAltNameNoFormatting('Le')|U][GetPlayer.GetName|l] n’[GetPlayer.GetAltNameNoFormatting('AOnt')] aucune [Concept('concept_offer_support','$concept_offer_of_support$')|l] pour #b [WarGoalType.GetName]#! que [SwayCountryPanel.GetCountry.GetAltNameNoFormatting('Le')][SwayCountryPanel.GetCountry.GetName] accepterait"
 SWAY_PANEL_CAN_SWAY_TOOLTIP_SELECTOR: "[SelectLocalization(SwayCountryPanel.IsReverseSway, 'SWAY_PANEL_CAN_REVERSE_SWAY_TOOLTIP', 'SWAY_PANEL_CAN_SWAY_TOOLTIP')]"
 SWAY_PANEL_CANNOT_SWAY_TOOLTIP_SELECTOR: "[SelectLocalization(SwayCountryPanel.IsReverseSway, 'SWAY_PANEL_CANNOT_REVERSE_SWAY_TOOLTIP', 'SWAY_PANEL_CANNOT_SWAY_TOOLTIP')]"
 HAS_NO_COUNTRIES_YOU_CAN_SWAY_TOOLTIP: "Vous ne pouvez influencer aucun pays"
 HAS_COUNTRIES_YOU_CAN_SWAY_TOOLTIP: "Vous pouvez [concept_sway|l] [DiplomaticPlay.GetNumberOfPossibleSwayCountriesFormatted( GetPlayer.Self )] pays."
 HAS_COUNTRIES_YOU_CAN_SWAY_TOOLTIP_NUMBER_BREAKDOWN: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v$#!#!"
 DIPLO_PLAY_NO_SUPPORTS: "Aucun pays en soutien"
 DIPLO_PLAY_OVERVIEW: "Vue d’ensemble"
 DIPLO_PLAY_INVOLVED_COUNTRIES: "[SelectLocalization(DiplomaticPlay.IsTargetOrInitiator(GetMetaPlayer.GetPlayedOrObservedCountry), 'DIPLO_PLAY_SWAY_COUNTRIES', 'DIPLO_PLAY_ALLEGIANCES')]"
 DIPLO_PLAY_SWAY_COUNTRIES: "Pays influencés"
 DIPLO_PLAY_ALLEGIANCES: "Allégeances"
 DIPLO_PLAY_POTENTIAL_FRONTS: "Fronts potentiels"
 POTENTIAL_FRONTS: "[Concept('concept_front', '$concept_fronts$')] potentiels"
 NO_POTENTIAL_FRONTS: "Actuellement pas de [Concept('concept_front', '$concept_fronts$')|l] potentiels"
 DIPLO_PLAY_ON_THE_FENCE: "Reste neutre"
 DIPLO_PLAY_ON_THE_FENCE_TOOLTIP: "#header Reste neutre#!"
 DIPLO_PLAY_SUPPORTS: "Soutient"
 DIPLO_PLAY_SUPPORTS_TARGET_TOOLTIP: "#header Soutient [DiplomaticPlay.GetTarget.GetAltNameNoFormatting('Le')][DiplomaticPlay.GetTarget.GetName]#!"
 DIPLO_PLAY_SUPPORTS_INITIATOR_TOOLTIP: "#header Soutient [DiplomaticPlay.GetInitiator.GetAltNameNoFormatting('Le')][DiplomaticPlay.GetInitiator.GetName]#!"
 DIPLO_PLAY_LEANING_TARGET_TOOLTIP: "#header Se rapproche [DiplomaticPlay.GetTarget.GetAltNameNoFormatting('Du')][DiplomaticPlay.GetTarget.GetName]#!"
 DIPLO_PLAY_LEANING_INITIATOR_TOOLTIP: "#header Se rapproche [DiplomaticPlay.GetInitiator.GetAltNameNoFormatting('Du')][DiplomaticPlay.GetInitiator.GetName]#!"
 DIPLO_PLAY_LEANING_TARGET_BUTTON_TOOLTIP: "#header Se rapprocher [DiplomaticPlay.GetTarget.GetAltNameNoFormatting('Du')][DiplomaticPlay.GetTarget.GetName] lors de ce [concept_diplomatic_play|l]#!\n[ConcatIfNeitherEmpty(AddLocalizationIf(DiplomaticPlay.IsTargetLeaning( GetPlayer.Self ), 'IS_ALREADY_LEANING_TARGET'), '\n\n')]Cela indique [DiplomaticPlay.GetTarget.GetAltNameNoFormatting('Au')][DiplomaticPlay.GetTarget.GetName] que vous pouvez être [Concept('concept_sway','$concept_swayed$')|l] en sa faveur."
 DIPLO_PLAY_LEANING_INITIATOR_BUTTON_TOOLTIP: "#header Se rapprocher [DiplomaticPlay.GetInitiator.GetAltNameNoFormatting('Du')][DiplomaticPlay.GetInitiator.GetName] lors de ce [concept_diplomatic_play|l]#!\n[ConcatIfNeitherEmpty(AddLocalizationIf(DiplomaticPlay.IsInitiatorLeaning( GetPlayer.Self ), 'IS_ALREADY_LEANING_INITIATOR'), '\n\n')]Cela indique [DiplomaticPlay.GetInitiator.GetAltNameNoFormatting('Au')][DiplomaticPlay.GetInitiator.GetName] que vous pouvez être [Concept('concept_sway','$concept_swayed$')|l] en sa faveur."
 IS_ALREADY_LEANING_TARGET: "@red_cross! Vous vous rapprochez déjà [DiplomaticPlay.GetTarget.GetAltNameNoFormatting('Du')][DiplomaticPlay.GetTarget.GetName]"
 IS_ALREADY_LEANING_INITIATOR: "@red_cross! Vous vous rapprochez déjà [DiplomaticPlay.GetInitiator.GetAltNameNoFormatting('Du')][DiplomaticPlay.GetInitiator.GetName]"
 DIPLO_PLAY_LEANING_TARGET: "Se rapproche de [DiplomaticPlay.GetTarget.GetFlagTextIcon]"
 DIPLO_PLAY_LEANING_INITIATOR: "Se rapproche de [DiplomaticPlay.GetInitiator.GetFlagTextIcon]"
 DIPLO_PLAY_LEANING_TARGET_COUNTRY_TOOLTIP: "#header [Country.GetAltNameNoFormatting('Le')|U][Country.GetName] se rapproch[COUNTRY.GetAltNameNoFormatting('EEnt')] [DiplomaticPlay.GetTarget.GetAltNameNoFormatting('Du')][DiplomaticPlay.GetTarget.GetName]#!\nCela signifie que ce pays peut être [Concept('concept_sway','$concept_swayed$')|l] par [DiplomaticPlay.GetTarget.GetAltNameNoFormatting('Le')][DiplomaticPlay.GetTarget.GetName] ou peut rejoindre son camp si le [concept_diplomatic_play|l] monte d’un cran"
 DIPLO_PLAY_LEANING_INITIATOR_COUNTRY_TOOLTIP: "#header [Country.GetAltNameNoFormatting('Le')|U][Country.GetName] se rapproch[COUNTRY.GetAltNameNoFormatting('EEnt')] [DiplomaticPlay.GetInitiator.GetAltNameNoFormatting('Du')][DiplomaticPlay.GetInitiator.GetName]#!\nCela signifie que ce pays peut être [Concept('concept_sway','$concept_swayed$')|l] par [DiplomaticPlay.GetInitiator.GetAltNameNoFormatting('Le')][DiplomaticPlay.GetInitiator.GetName] ou peut rejoindre son camp si le [concept_diplomatic_play|l] monte d’un cran."
 DIPLO_PLAY_INITIATOR: "[concept_initiator]"
 DIPLO_PLAY_TARGET: "[concept_target]"
 DIPLO_PLAY_YOU: "(Vous)"
 DIPLO_PLAY_TOTAL_MOBILIZED: "Total mobilisé"
 DIPLO_PLAY_CLICK_TO_SWAY: "#instruction Cliquez sur @approves!/@disapproves! pour voir les options pour [concept_sway|l] chaque [concept_country|l]#!"
 DIPLO_PLAY_CANNOT_SWAY: "Vous pouvez seulement [concept_sway|l] pendant la phase des manœuvres diplomatiques"
 DIPLO_PLAY_CLICK_TO_SET_STANCE: "[SelectLocalization(DiplomaticPlay.IsInvolved(GetMetaPlayer.GetPlayedOrObservedCountry), 'DIPLO_PLAY_CLICK_STANCES', 'DIPLO_PLAY_STANCES')]"
 DIPLO_PLAY_CLICK_STANCES: "#instruction Cliquez pour définir votre position#!"
 DIPLO_PLAY_STANCES: "#bold Positions actuelles#!"
 BELLIGERENTS: "Belligérants"
 TO_ARMS: "Aux armes !"
 DIPLO_PLAY_MANEUVERS_TARGET: "[DiplomaticPlay.GetNumTargetManeuversRemaining|v]"
 DIPLO_PLAY_MANEUVERS_INITIATOR: "[DiplomaticPlay.GetNumInitiatorManeuversRemaining|v]"
 SUPPORT_WITHOUT_CONDITION: "Soutenir inconditionnellement"
 DIPLO_PLAY_TOTAL_FLOTILLAS_BREAKDOWN: "#header [Concept('concept_flotilla', '$concept_flotillas$')] pour le camp [COUNTRY.GetAltAdjective('MS')|l]#!\n[DiplomaticPlay.GetTotalNumWarshipsForSide( Country.Self )|v]@flotillas! en tout\n$TOOLTIP_DELIMITER$\n[DiplomaticPlay.GetTotalNumWarshipsForSideBreakdown( Country.Self )]"
 DIPLO_PLAY_TOTAL_MOBILIZED_BATTALIONS_BREAKDOWN: "#header [Concept('concept_battalion', '$concept_battalions$')] [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$')|l] pour le camp [COUNTRY.GetAltAdjective('MS')|l]#!\n#v [DiplomaticPlay.GetTotalNumMobilizedBattalionsForSide( Country.Self )]#!@battalions! en tout\n$TOOLTIP_DELIMITER$\n[DiplomaticPlay.GetTotalNumMobilizedBattalionsForSideBreakdown( Country.Self )]"
 DIPLO_PLAY_COUNTRY_BATTALIONS_BREAKDOWN: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] [Country.GetAltNameNoFormatting('AOnt')] #v [Country.GetBattalions]#! [Concept('concept_battalion', '$concept_battalions$')|l]@battalions! (#v [Country.GetMobilizationRatio|0%]#! @mobilization! [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$s')|l])"
 DIPLO_PLAY_COUNTRY_FLOTILLAS_BREAKDOWN: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] [Country.GetAltNameNoFormatting('AOnt')] [Country.GetWarships|v]@flotillas! [Concept('concept_flotilla', '$concept_flotillas$')|l]"
 GOODS_INPUT_REQUIRED_FOR_NO_PENALTY: "Au moins [GetDefine('NEconomy', 'GOODS_SHORTAGE_PENALTY_THRESHOLD')|v%0] [concept_buy_orders|l] pour [Goods.GetName|l] [Goods.GetTextIcon] doivent être satisfaits pour éviter une pénalité de production."
 GOODS_INPUT_SHORTAGE_OUTPUT_PENALTY: "La pénalité actuelle est de [Building.GetInputShortagePenalty|%v0] et évoluera au fil du temps vers une pénalité de [Building.CalcInputGoodsShortageTargetPenalty|%v0]."
 GOODS_INPUT_SHORTAGE_MAX_TOOLTIP: "#header [Concept('concept_shortage','$concept_input_goods_shortage$')|l] de [Building.GetName]#!\nIl n’y a pas d’[concept_sell_orders|l] disponibles pour [Goods.GetName|l] [Goods.GetTextIcon] en [Building.GetState.GetStateRegion.GetName], entraînant une pénalité sur toutes les productions de ce [concept_building|l].\n\n$GOODS_INPUT_SHORTAGE_OUTPUT_PENALTY$\n\n$GOODS_INPUT_REQUIRED_FOR_NO_PENALTY$"
 GOODS_INPUT_SHORTAGE_TOOLTIP: "#header [Concept('concept_shortage','$concept_input_goods_shortage$')|l] dans [Building.GetName|l]#!\nIl y a juste assez d’[concept_sell_orders|l] pour [Goods.GetName|l] [Goods.GetTextIcon] disponibles en [Building.GetState.GetName] pour satisfaire [Building.GetState.CalcSupplyToDemandRatio(Goods.Self)|%v] des [concept_buy_orders|l], entraînant une pénalité sur toutes les productions de ce [concept_building|l].\n\n$GOODS_INPUT_SHORTAGE_OUTPUT_PENALTY$\n\n$GOODS_INPUT_REQUIRED_FOR_NO_PENALTY$\n\n$alert_market_goods_shortage_alert_hint_data_version$"
 GOODS_OUTPUT_PENALTY_TOOLTIP: "#header [Concept('concept_shortage','$concept_input_goods_shortage$')|l] de [Building.GetName]#!\nLa pénurie en [Building.GetGoodsShortageListDesc] entraîne une pénalité sur toutes les productions de ce [concept_building|l].\n\n$GOODS_INPUT_SHORTAGE_OUTPUT_PENALTY$"
 GOODS_OUTPUT_PENALTY_LINGERING_TOOLTIP: "#header [Concept('concept_shortage','$concept_input_goods_shortage$')|l] dans [Building.GetName]#!\nLes pénuries antérieures de [Concept('concept_good', '$concept_goods$')|l] entrants ont entraîné une pénalité persistante sur toutes les productions de ce [concept_building|l].\n\nLa pénalité actuelle est de [Building.GetInputShortagePenalty|%v0], mais elle disparaîtra avec le temps."
 GOODS_SHORTAGE_STATE_DESC_INTERNAL: "@warning! [Goods.GetState.GetName] a une [concept_shortage|l] [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l]"
 GOODS_SHORTAGE_STATE_DESC: "[SelectLocalization( Goods.GetState.IsValid, 'GOODS_SHORTAGE_STATE_DESC_INTERNAL', '' )]"
 GOODS_SHORTAGE_MARKET_DESC: "@warning! Le [Goods.GetMarket.GetName|l] a une [concept_shortage|l] [Goods.GetCustom('FR_Goods_De')][Goods.GetName|l]"
 GOODS_SHORTAGE_TOOLTIP: "[Goods.GetGoodsShortageDesc]\n\n$alert_market_goods_shortage_alert_hint_data_version$"
 GOODS_SHORTAGE_SHORT_CONCEPT: "[concept_shortage]"
 SINGLE_GOODS_OR_EMPLOYMENT_MORE: "de plus"
 SINGLE_GOODS_OR_EMPLOYMENT_LESS: "de moins"
 UNSCALED_MODIFIERS_COLON: "#title Modificateurs non gradués :#!"
 PER_LEVEL_MODIFIERS_COLON: "#title Modificateurs par niveau :#!"
 TOTAL_MODIFIERS_COLON: "#title Modificateurs totaux :#!"
 INCREASED_EMPLOYMENT_COLON: "#title Augmentation de l’emploi :#!"
 DECREASED_EMPLOYMENT_COLON: "#title Diminution de l’emploi :#!"
 PM_TIMED_MODIFIERS: "#title Modificateurs temporaires :#!\n$BREAKDOWN$"
 PM_TIMED_MODIFIER_FORMAT: "#tooltippable #tooltip:$DESCRIPTION_TAG$ $NAME$#!#!"
 SINGLE_GOODS_AMOUNT_PRODUCTION_TOTAL: "#v $TOTAL_AMOUNT|D=+$#! au total"
 SINGLE_GOODS_AMOUNT_PRODUCTION_PER_LEVEL: "#v $PER_LEVEL_AMOUNT|=+D$#! par niveau"
 SINGLE_GOODS_AMOUNT_CONSUMPTION_TOTAL: "#v $TOTAL_AMOUNT|D=-$#! au total"
 SINGLE_GOODS_AMOUNT_CONSUMPTION_PER_LEVEL: "#v $PER_LEVEL_AMOUNT|=-D$#! par niveau"
 SINGLE_GOODS_DELTA_PRODUCTION_TOTAL: "#v $TOTAL_DELTA|=+D$#! $MORE_OR_LESS$ au total"
 SINGLE_GOODS_DELTA_PRODUCTION_PER_LEVEL: "#v $PER_LEVEL_DELTA|=+D$#! $MORE_OR_LESS$ par niveau"
 SINGLE_GOODS_DELTA_CONSUMPTION_TOTAL: "#v $TOTAL_DELTA|=-D$#! $MORE_OR_LESS$ au total"
 SINGLE_GOODS_DELTA_CONSUMPTION_PER_LEVEL: "#v $PER_LEVEL_DELTA|=-D$#! $MORE_OR_LESS$ par niveau"
 SINGLE_GOODS_MARKET_PRICE: "$PRICE|1v$@money! $PRICE_ICON$ sur le [Market.GetName|l]"
 SINGLE_GOODS_STATE_PRICE: "$PRICE|1v$@money! $PRICE_ICON$ en [State.GetName]"
 SINGLE_GOODS_STATE_PRICE_TOOLTIPPABLE: "(#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ $PRICE|1v$@money!#!#! $PRICE_ICON$)"
 SINGLE_GOODS_MARKET_PRICE_RANGE: "$MIN_PRICE|1v$@money! $MIN_PRICE_ICON$ - $MAX_PRICE|1v$@money! $MAX_PRICE_ICON$ dans $NUM_MARKETS$ [Concept('concept_market', '$concept_markets$')|l]"
 SINGLE_GOODS_STATE_PRICE_RANGE: "$MIN_PRICE|1v$@money! $MIN_PRICE_ICON$ - $MAX_PRICE|1v$@money! $MAX_PRICE_ICON$ dans $NUM_STATES$ [Concept('concept_state', '$concept_states$')]"
 SINGLE_GOODS_STATE_PRICE_RANGE_TOOLTIPPABLE: "#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ $MIN_PRICE|1v$@money!#!#! $MIN_PRICE_ICON$ - #tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ $MAX_PRICE|1v$@money!#!#! $MAX_PRICE_ICON$ dans $NUM_STATES$ [Concept('concept_state', '$concept_states$')]"
 GOODS_PRICE_DELTA_SUBSTITUTION_DISCLAIMER: "@information! Certains changements de prix prévus peuvent ne pas prendre pleinement effet avant que la [concept_goods_substitution|l] n’ait eu lieu"
 SINGLE_GOODS_MARKET_PRICE_WITH_DELTA: "$PRICE|1v$@money! $PRICE_ICON$ @arrow_right! $AFTER_PRICE|1v$@money! $AFTER_PRICE_ICON$ sur le [Market.GetName|l]"
 SINGLE_GOODS_STATE_PRICE_WITH_DELTA: "$PRICE|1v$@money! $PRICE_ICON$ @arrow_right! $AFTER_PRICE|1v$@money! $AFTER_PRICE_ICON$ en [State.GetName]"
 SINGLE_GOODS_STATE_PRICE_TOOLTIPPABLE_WITH_DELTA: "(#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ $PRICE|1v$@money!#!#! $PRICE_ICON$) @arrow_right! (#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ $AFTER_PRICE|1v$@money!#!#! $AFTER_PRICE_ICON$)"
 SINGLE_GOODS_MARKET_PRICE_RANGE_WITH_DELTA: "($MIN_PRICE|1v$@money! $MIN_PRICE_ICON$ - $MAX_PRICE|1v$@money! $MAX_PRICE_ICON$) @arrow_right! ($MIN_AFTER_PRICE|1v$@money! $MIN_AFTER_PRICE_ICON$ - $MAX_AFTER_PRICE|1v$@money! $MAX_AFTER_PRICE_ICON$) sur $NUM_MARKETS$ [Concept('concept_market', '$concept_markets$')|l]"
 SINGLE_GOODS_STATE_PRICE_RANGE_WITH_DELTA: "($MIN_PRICE|1v$@money! $MIN_PRICE_ICON$ - $MAX_PRICE|1v$@money! $MAX_PRICE_ICON$) @arrow_right! ($MIN_AFTER_PRICE|1v$@money! $MIN_AFTER_PRICE_ICON$ - $MAX_AFTER_PRICE|1v$@money! $MAX_AFTER_PRICE_ICON$) dans $NUM_STATES$ [Concept('concept_state', '$concept_states$')]"
 SINGLE_GOODS_STATE_PRICE_RANGE_TOOLTIPPABLE_WITH_DELTA: "(#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ $MIN_PRICE|1v$@money!#!#! $MIN_PRICE_ICON$ - #tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ $MAX_PRICE|1v$@money!#!#! $MAX_PRICE_ICON$) @arrow_right! (#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ $MIN_AFTER_PRICE|1v$@money!#!#! $MIN_AFTER_PRICE_ICON$ - #tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ $MAX_AFTER_PRICE|1v$@money!#!#! $MAX_AFTER_PRICE_ICON$) dans $NUM_STATES$ [Concept('concept_state', '$concept_states$')]"
 SINGLE_POP_EMPLOYMENT_CHANGE_FORMAT: "[PopType.GetName] : [SelectLocalization(StringIsEmpty('$DELTA$'), '$AMOUNT$', '$DELTA$')]"
 SINGLE_POP_EMPLOYMENT_CHANGE_SLAVES_ROLE: "[POP_TYPE.GetName] ou [TARGET_POP_TYPE.GetName] : [SelectLocalization(StringIsEmpty('$DELTA$'), '$AMOUNT$', '$DELTA$')]"
 SINGLE_POP_EMPLOYMENT_CHANGE_FROM_BASE_TOTAL: "$TOTAL_CHANGE|=+D$ au total"
 SINGLE_POP_EMPLOYMENT_CHANGE_FROM_BASE_PER_LEVEL: "$PER_LEVEL_CHANGE|=+D$ par niveau"
 SINGLE_POP_EMPLOYMENT_DELTA_TOTAL: "$TOTAL_DELTA|=+D$ $MORE_OR_LESS$ au total"
 SINGLE_POP_EMPLOYMENT_DELTA_PER_LEVEL: "$PER_LEVEL_DELTA|=+D$ $MORE_OR_LESS$ par niveau"
 SINGLE_GOODS_FORMAT: "[Goods.GetName] [Goods.GetTextIcon] : [SelectLocalization(StringIsEmpty('$DELTA$'), '$AMOUNT$', '$DELTA$')] $SINGLE_GOODS_PRICE_BREAKDOWN$"
 SINGLE_GOODS_FORMAT_WITH_SHORTAGE: "[Goods.GetName] [Goods.GetTextIcon] : [SelectLocalization(StringIsEmpty('$DELTA$'), '$AMOUNT$', '$DELTA$')] $SINGLE_GOODS_PRICE_BREAKDOWN$ - [Concept('concept_shortage','$concept_input_goods_shortage$')]@goods_shortage!"
 SINGLE_GOODS_STATE_PRICE_TOOLTIP: "#header Prix [Goods.GetCustom('FR_Goods_Du')][Goods.GetName|l]#!\n$GOODS_STATE_PRICE$[ConcatIfNeitherEmpty('\n', '$GOODS_MARKET_PRICE$')]"
 STATE_HAS_INPUT_SHORTAGES: "#header [Concept('concept_shortage','$concept_input_goods_shortage$')]#!\n[State.GetName] possède [State.GetNumBuildingsAffectedByGoodsShortage|v] [Concept('concept_building', '$concept_buildings$')|l] touchés par une pénurie de biens entrants"
 SELECT_OBJECTIVE_MAIN_TITLE: "Sélectionnez un objectif de partie"
 SELECT_OBJECTIVE_TITLE: "Objectifs"
 SELECT_OBJECTIVE_TAG_TITLE: "Pays recommandés"
 START_GAME_NO_OBJECTIVE_NO_TAG: "Jouer sans objectif et accéder à la sélection du pays"
 START_GAME_CHOSEN_OBJECTIVE_NO_TAG: "Commencer la partie\n#instruction Sélectionnez un pays#!"
 START_GAME_CHOSEN_OBJECTIVE_CHOSEN_TAG: "Commencer la partie"
 NO_OBJECTIVE: "Vous n’avez pas d’objectif"
 OBJECTIVE_UNAVAILABLE_LACK_OF_DLC: "Cet objectif n’est pas disponible car vous n’avez aucun des DLC suivants :\n$DLCS_WITH_FEATURE$"
 SANDBOX: "Bac à sable"
 SELECT_ANY_COUNTRY: "Sélectionnez n’importe quel pays"
 START_GAME: "Commencer la partie"
 HAS_SELECTED_COUNTRY_TOOLTIP: "Un [concept_country|l] a déjà été sélectionné"
 NO_SELECTED_COUNTRY_TOOLTIP: "Aucun [concept_country|l] n’a encore été sélectionné"
 START_ANY_COUNTRY_TOOLTIP: "Commencez une nouvelle partie et choisissez n’importe quel [concept_country|l] sur la carte[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(GameSetup.GetSelectedObjective.IsAvailableForAllCountries), 'CANNOT_START_AS_ANY_COUNTRY'))]"
 CANNOT_START_AS_ANY_COUNTRY: "@red_cross! [GameSetup.GetSelectedObjective.GetName] disponible uniquement avec les [Concept('concept_country', '$concept_countries$')|l] recommandés"
 START_GAME_TOOLTIP: "Commencez une nouvelle partie en tant que #variable [CountryDefinition.GetName]#!"
 SELECTABLE_COUNTRY_TOOLTIP: "#header [Country.GetName]#!\n$DATA_COUNTRY_NAME_TOOLTIP$\n\n#instruction Cliquez pour choisir [Country.GetAltNameNoFormatting('Le')][Country.GetName] comme pays#!"
 RIGHT_CLICK_TO_OPEN_CONTEXT_MENU: "@rightclick! #instruction #bold Clic droit#!#! pour #b ouvrir le menu contextuel#!"
 NULL_OBJ: "#todo NULL_OBJ#!"
 NULL_OBJ_ADJ: "#todo NULL_OBJ_ADJ#!"
 NULL_OBJ_DESC: "#todo NULL_OBJ_DESC#!"
 NULL_OBJ_TOOLTIP: "#todo NULL_OBJ_TOOLTIP#!"
 color_blind_mode_deuteranopia: "Deutéranopie"
 color_blind_mode_protanopia: "Protanopie"
 color_blind_mode_tritanopia: "Tritanopie"
 CANNOT_START_MULTIPLE_TUTORIALS: "Vous devez fermer votre leçon actuelle avant d’en commencer une autre"
 EMPTY_STATE: "Rien à faire ici !"
 AUTO_EXPAND: "Auto-agrandissement"
 CANCEL_AUTO_EXPAND: "Annuler l’auto-agrandissement"
 AUTOEXPANDING_YES_HEADER: "#header Annuler l’agrandissement automatique#!\n$TOOLTIP_DELIMITER$\n#title Ce [concept_building|l] s’agrandit automatiquement lorsque ces conditions sont remplies :#!"
 AUTOEXPANDING_YES_INSTRUCTION: "#instruction Cliquez pour annuler l’agrandissement automatique#!"
 AUTOEXPANDING_NO_HEADER: "#header Agrandissement automatique#!\n$TOOLTIP_DELIMITER$\n#title Ce [concept_building|l] s’agrandira automatiquement lorsque ces conditions seront remplies :#!"
 AUTOEXPANDING_NO_INSTRUCTION: "#instruction Cliquez pour programmer l’agrandissement automatique#!"
 AUTOEXPAND_BUILDING_TOOLTIP: "[SelectLocalization(Building.IsAutoExpanding,'AUTOEXPANDING_YES_HEADER','AUTOEXPANDING_NO_HEADER')]\n$TRIGGER$\n\n[SelectLocalization(Building.IsAutoExpanding,'AUTOEXPANDING_YES_INSTRUCTION','AUTOEXPANDING_NO_INSTRUCTION')]"
 TOGGLE_AUTOEXPAND_INVALID_BUILDING_TYPE: "Auto-agrandissement impossible pour [BuildingType.GetName]"
 AUTOEXPAND_BUILDING_ICON_TOOLTIP: "[SelectLocalization(Building.IsAutoExpanding,'IS_AUTOEXPANDING','IS_NOT_AUTOEXPANDING')]\n$TOOLTIP_DELIMITER$\n[Building.GetAutoExpandTriggers]"
 AUTOEXPAND_BUILDING_TRIGGERS: "#title [Building.GetName] en [Building.GetState.GetName] s’agrandit automatiquement lorsque ces conditions sont remplies :#! #indent_newline:3 \n$TRIGGER$"
 IS_AUTOEXPANDING: "#header Auto-agrandissement#!"
 IS_NOT_AUTOEXPANDING: "#header Pas d’auto-agrandissement#!"
 NO_URBAN_BUILDINGS: "Il n’y a pas de bâtiments urbains"
 NO_RURAL_BUILDINGS: "Il n’y a pas de bâtiments ruraux"
 NO_DEVELOPMENT_BUILDINGS: "Il n’y a pas de bâtiments de développement"
 NO_URBAN_BUILDINGS_HINT: "@information! Les bâtiments urbains peuvent être construits via l’aperçu du bâtiment ou le volet de l’État"
 NO_RURAL_BUILDINGS_HINT: "@information! Les bâtiments ruraux peuvent être construits via l’aperçu du bâtiment ou le volet de l’État"
 NO_DEVELOPMENT_BUILDINGS_HINT: "@information! Les bâtiments de développement peuvent être construits via l’aperçu du bâtiment ou le volet de l’État"
 STATE_BUILDING_TAB_LOCAL_GOODS_INFO: "[SelectLocalization(Goods.HasGoodsShortage, '@goods_shortage!', '')][Goods.GetStatePrice|v0]@money! [Goods.GetTextIcon] [Goods.GetCompareIconAgainstBasePriceNoFormatting( Goods.GetStatePrice )] (#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetStatePrice)|%0=-]#!)"
 AVAILABLE_BUILDINGS: "Bâtiments disponibles à construire"
 EXPANDABLE_BUILDINGS: "Bâtiments disponibles à agrandir"
 AVAILABLE_URBAN_BUILDINGS: "Bâtiments urbains potentiels"
 AVAILABLE_RURAL_BUILDINGS: "Bâtiments ruraux potentiels"
 AVAILABLE_DEVELOPMENT_BUILDINGS: "Bâtiments de développement potentiels"
 PREFERENCE_PREDICTION: "Prédiction"
 PREFERENCE_LABEL: "[SelectLocalization(DiplomaticPlayConfirmation.PredictHasPreferenceForInitiator(Country.Self), 'PREFERENCE_INITIATOR', '')][SelectLocalization(DiplomaticPlayConfirmation.PredictHasPreferenceForTarget(Country.Self), 'PREFERENCE_TARGET', '')]"
 PREFERENCE_INITIATOR: "[DiplomaticPlayConfirmation.GetInitiatorCountry.GetFlagTextIcon]"
 PREFERENCE_TARGET: "[DiplomaticPlayConfirmation.GetTargetCountry.GetFlagTextIcon]"
 DIPLO_PLAY_SUPPORT_INITIATOR: "[DiplomaticPlayConfirmation.GetInitiatorCountry.GetFlagTextIcon]"
 DIPLO_PLAY_SUPPORT_INITIATOR_LABEL: "[SelectLocalization(DiplomaticPlayConfirmation.CanJoinInitiator(Country.Self), 'CAN_SUPPORT_INITIATOR', 'CANNOT_SUPPORT')]"
 CAN_SUPPORT_INITIATOR: "[DiplomaticPlayConfirmation.PredictInitiatorPreferenceScoreFormatted(Country.Self)]"
 DIPLO_PLAY_SUPPORT_TARGET_LABEL: "[SelectLocalization(DiplomaticPlayConfirmation.CanJoinTarget(Country.Self), 'CAN_SUPPORT_TARGET', 'CANNOT_SUPPORT')]"
 CAN_SUPPORT_TARGET: "[DiplomaticPlayConfirmation.PredictTargetPreferenceScoreFormatted(Country.Self)]"
 PREDICT_PREFERENCE_SCORE_POSITIVE: "#positive_value $VALUE|+=$#!"
 PREDICT_PREFERENCE_SCORE_NEGATIVE: "#negative_value $VALUE|+=$#!"
 PREDICT_PREFERENCE_SCORE_NEUTRAL: "#v $VALUE|=$#!"
 CANNOT_SUPPORT: "#title N/A#!"
 OUR_SIDE: "Notre camp"
 ENEMY_SIDE: "Camp ennemi"
 DIPLO_PLAY_SUPPORT_TARGET: "[DiplomaticPlayConfirmation.GetTargetCountry.GetFlagTextIcon]"
 URBAN_BUILDINGS_IN_COUNTRY: "Bâtiments urbains [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName]"
 RURAL_BUILDINGS_IN_COUNTRY: "Bâtiments ruraux [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName]"
 DEVELOPMENT_BUILDINGS_IN_COUNTRY: "Bâtiments de développement [GetPlayer.GetAltNameNoFormatting('En')][GetPlayer.GetName]"
 GRAPH_NOT_INITIALIZED: "Aucune donnée historique"
 #GetPlayer can be used to access the dead player country as long as the game over screen is still available
 GAME_OVER_TITLE: "Fin de la partie"
 GAME_OVER_TITLE_COUNTRY: "L’époque [GetPlayer.GetAltNameNoFormatting('Du')][GetPlayer.GetName] a pris fin le [GameOverScreen.GetGameOverDateString]."
 GAME_OVER_TITLE_COUNTRY_END_OF_CAMPAIGN: "Félicitations ! Le [GameOverScreen.GetGameOverDateString], [GetPlayer.GetAltNameNoFormatting('Le')][GetPlayer.GetName] [GetPlayer.GetAltNameNoFormatting('AOnt')] atteint avec succès la fin de la campagne."
 GAME_OVER_ANNEXED: "Vous avez été annexé !"
 GAME_OVER_SUMMARY: "Vous jouiez en tant que [GetPlayer.GetAltNameNoFormatting('Le')][GetPlayer.GetName]."
 GAME_OVER_CONTINUE_AS_OBSERVER: "Continuer en tant qu’[Concept('concept_observer_mode','$concept_observer$')|l]"
 GAME_OVER_GO_TO_LOBBY: "[SelectLocalization( GameHasMultiplePlayers, 'FRONTEND_GOTO_LOBBY', 'CONTINUE_PLAYING' )]"
 CONTINUE_PLAYING: "Continuer à jouer"
 MODIFIER_DESC_BOOL: "$NAME$ ($DESC$)"
 VALUE_CALCULATOR_BASE_ENTRY: "$VALUE|v$ de la valeur de base"
 VALUE_CALCULATOR_BASE_ENTRY_WITH_DESCRIPTION: "#tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE|v$#!#! de la valeur de base"
 VALUE_CALCULATOR_ADD_ENTRY: "$VALUE|v=$ de $TITLE$"
 VALUE_CALCULATOR_ADD_ENTRY_WITH_DESCRIPTION: "#tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE|v=$#!#! de $TITLE$"
 VALUE_CALCULATOR_MULT_ENTRY: "$VALUE|v%=$ de $TITLE$"
 VALUE_CALCULATOR_MULT_ENTRY_WITH_DESCRIPTION: "#tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE|v%=$#!#! de $TITLE$"
 VALUE_CALCULATOR_FACTOR_ENTRY: "Multiplié par x$VALUE|v$ de $TITLE$"
 VALUE_CALCULATOR_FACTOR_ENTRY_WITH_DESCRIPTION: "Multiplié par x#tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE|v$#!#! de $TITLE$"
 VALUE_CALCULATOR_LOWER_BOUND_ENTRY: "Limité à un #b minimum#! de $VALUE|v$ de $TITLE$"
 VALUE_CALCULATOR_LOWER_BOUND_ENTRY_WITH_DESCRIPTION: "Limité à un #b minimum#! de #tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE|v$#!#! de $TITLE$"
 VALUE_CALCULATOR_UPPER_BOUND_ENTRY: "Limité à un #b maximum#! de $VALUE|v$ de $TITLE$"
 VALUE_CALCULATOR_UPPER_BOUND_ENTRY_WITH_DESCRIPTION: "Limité à un #b maximum#! de #tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE|v$#!#! de $TITLE$"
 VALUE_CALCULATOR_VALUE_WITH_BREAKDOWN: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v$#!#!"
 VALUE_CALCULATOR_VALUE_FROM_STATIC_MODIFIER: "$VALUE$ en raison de $TITLE$"
 VALUE_CALCULATOR_UPPER_BOUND_ENTRY_NO_TITLE: "Limité à un #b maximum#! de $VALUE|v0$"
 VALUE_CALCULATOR_UPPER_BOUND_ENTRY_PERCENT_NO_TITLE: "Limité à un maximum de $VALUE|%v0$"
 RECRUIT_GENERAL_BUTTON: "Recruter un général"
 RECRUIT_ADMIRAL_BUTTON: "Recruter un amiral"
 LOAD_GAME_VERSION: "Version : [SaveGameItem.GetVersionName]"
 LOAD_GAME_DIFFERENT_VERSION: "@warning! #X Version différente#!"
 LOAD_GAME_DIFFERENT_VERSION_TT: "Cette sauvegarde a été créée avec une version différente de #y Victoria 3#! ($LOAD_GAME_VERSION$)."
 LOAD_MISSING_ITEMS_TT: "[SaveGameItem.GetIncompatibilityTooltip]"
 LOAD_GAME_DIFFERENT_VERSION_CONFIRM: "$LOAD_GAME_DIFFERENT_VERSION_TT$\n\nVoulez-vous vraiment charger cette partie ?"
 LOAD_GAME_MISSING_MODS_CONFIRM: "$LOAD_MISSING_ITEMS_TT$\n\nLe chargement de cette sauvegarde peut entraîner des bogues ou des plantages.\n\nVoulez-vous vraiment continuer ?"
 LOAD_GAME_CONFIRM: "Voulez-vous vraiment continuer ?"
 LOAD_INGAME_BUTTON_DISABLED_NOSAVES: "Vous n’avez aucune partie sauvegardée"
 LOAD_INGAME_BUTTON_DISABLED: "Chargement des sauvegardes désactivé"
 OUTDATED_MOD_ENTRY: "• $MOD_NAME$ (compatible avec $MOD_VERSION$)"
 OUTDATED_MODS_ALERT_EXIT_GAME: "$QUIT$"
 OUTDATED_MODS_ALERT_IGNORE: "@warning! Ignorer"
 BUILDING_GENERAL_INFO_HEADER: "#title Informations générales#! :"
 BUILDING_TYPE_PORT_GENERAL_INFO: "Construire un [GetBuildingType('building_port').GetName|l] peut relier l’[concept_state] dans lequel il est construit à un [concept_market|l]"
 BUILDING_PORT_GENERAL_INFO_BUILT_AND_CONNECTS: "Ce [GetBuildingType('building_port').GetName|l] en [STATE.GetName] ou d’autres le relie au [MARKET.GetName|l]"
 BUILDING_PORT_GENERAL_INFO_NOT_BUILT_WILL_CONNECT: "Construire un [GetBuildingType('building_port').GetName] en [STATE.GetName] le reliera au [MARKET.GetName|l]"
 MONTHLY_PRICE_REPORT: "Rapport mensuel des prix"
 STATE_GDP_STATUS_CONDENSED: "#variable [State.GetGDPContribution|K]@money!#! (#variable [State.GetGDPContributionPercentage|%0]#!)"
 STATE_POPULATION_STATUS_CONDENSED: "[State.GetPopulationSize|Kv] [GetArrowIcon_int64( State.GetPopTotalChange )]"
 SOL_CONDENSED: "[LabelingHelper.GetLabelForStandardOfLivingNoIconCFixedPointFormatFromExpected(State.GetAverageStandardOfLivingAll,State.GetExpectedStandardOfLivingAll)|v] ([State.GetFormattedStandardOfLivingAll|v])"
 STATE_TURMOIL_CONDENSED: "#b [State.CalcTurmoil|%1-]#!"
 STATE_DEVASTATION_CONDENSED: "#b [State.GetStateRegion.GetDevastationLevel|%R1]#!"
 STATE_INFRASTRUCTURE_CONDENSED: "[SelectLocalization(GreaterThan_CFixedPoint(State.GetInfrastructureUsage,State.GetInfrastructure), 'WARNING', '')]Utilise #tooltippable #tooltip:[State.GetTooltipTag],STATE_INFRASTRUCTURE_USAGE_TOOLTIP [State.GetInfrastructureUsage|0v]#!#! sur #tooltippable #tooltip:[State.GetTooltipTag],STATE_INFRASTRUCTURE_TOOLTIP [State.GetInfrastructure|0v]#!#!"
 STATE_TAX_CAPACITY_CONDENSED: "[AddLocalizationIf(GreaterThan_CFixedPoint(State.CalcTaxCapacityUsage,State.CalcTaxCapacity), 'WARNING')]Utilise #tooltippable #tooltip:[State.GetTooltipTag],STATE_TAX_CAPACITY_USAGE_TOOLTIP [State.CalcTaxCapacityUsage|0v]#!#! sur #tooltippable #tooltip:[State.GetTooltipTag],STATE_TAX_CAPACITY_TOOLTIP [State.CalcTaxCapacity|0v]#!#! [AddLocalizationIf(GreaterThan_CFixedPoint(State.CalcTaxCapacityUsage, State.CalcTaxCapacity), 'STATE_TAX_CAPACITY_INSUFFICIENT')]"
 STATE_MARKET_CAPITAL_STATUS_CONDENSED: "[State.GetMarket.GetName]\n[State.GetMarketAccess|%v0]"
 CASUALTY_DEBUG_CASUALTIES_HEADER: "Pertes subies :"
 CASUALTY_DEBUG_CASUALTIES_NONE: "Il n’y a pas eu de pertes"
 CASUALTY_DEBUG_ATTRITION_CASUALTY_UNIT: "#variable $DATE$#! : morts : $DEAD|v$, blessés : $WOUNDED|v$, total : $TOTAL|v$ (attrition)"
 CASUALTY_DEBUG_BATTLE_CASUALTY_UNIT: "#variable $DATE$#! : morts : $DEAD|v$, blessés : $WOUNDED|v$, total : $TOTAL|v$ (bataille de $BATTLE_NAME$)"
 CASUALTY_DEBUG_ATTRITION_CASUALTY_BUILDING: "#variable $DATE$#! : $UNIT_NAME$ morts : $DEAD|v$, blessés : $WOUNDED|v$, total : $TOTAL|v$ (attrition)"
 CASUALTY_DEBUG_BATTLE_CASUALTY_BUILDING: "#variable $DATE$#! : $UNIT_NAME$ morts : $DEAD|v$, blessés : $WOUNDED|v$, total : $TOTAL|v$ (bataille de $BATTLE_NAME$)"
 COMBAT_UNIT_DEFENSE_BREAKDOWN: "#header [concept_defense]#!\nLa [concept_defense|l] de @unit_defense!#v [CombatUnit.GetDefenseRaw]#! s’explique par :\n[CombatUnit.GetDefenseBreakdown]"
 COMBAT_UNIT_OFFENSE_BREAKDOWN: "#header [concept_offense]#!\nL’[concept_offense|l] de @unit_offense!#v [CombatUnit.GetOffenseRaw]#! s’explique par :\n[CombatUnit.GetOffenseBreakdown]"
 COMBAT_UNIT_MANPOWER_BREAKDOWN: "#header [concept_manpower]#!\n[CombatUnit.GetManpowerTooltip]"
 COMBAT_UNIT_MANPOWER: "#v [CombatUnit.GetManpowerRaw]#! @manpower!"
 COMBAT_UNIT_VETERANCY_EFFECT: "#bold Effet(s) :#!"
 COMBAT_UNIT_VETERANCY_TOOLTIP: "#header [concept_veterancy_level]#!\nActuel : #v [CombatUnit.GetCurrentVeterancyLevelName]#!\n#v [CombatUnit.GetCurrentExperienceTowardsNextLevel]#! / [CombatUnit.GetNeededExperienceForNextLevel] en [concept_unit_experience|l]\n[CombatUnit.GetCurrentVeterancyLevelEffect]\n$TOOLTIP_DELIMITER$\nChaque semaine, cette unité gagne de l’expérience. Elle gagnera :\n[CombatUnit.GetExperienceGainDescription]"
 #COMBAT_UNIT_VETERANCY_TOOLTIP: "#header [concept_veterancy_level]#!\nCurrent: #v [CombatUnit.GetCurrentVeterancyLevelName]#!\n$TOOLTIP_DELIMITER$\n#v [CombatUnit.GetCurrentExperienceTowardsNextLevel]#!/[CombatUnit.GetNeededExperienceForNextLevel] [concept_unit_experience]\n[CombatUnit.GetExperienceGainDescription]"
 COMBAT_UNIT_AT_MAX_LEVEL: "L’unité a atteint son niveau de vétérance maximal"
 COMBAT_UNIT_TOOLTIP: "#header [CombatUnit.GetName]#!\nDe [CombatUnit.GetBuilding.GetName] en [CombatUnit.GetBuilding.GetState.GetName][ConcatIfNeitherEmpty('\n', AddLocalizationIf(CombatUnit.IsArmyUnit, 'COMBAT_UNIT_TOOLTIP_MOBILIZED_STATUS'))]\n$TOOLTIP_DELIMITER$\n[CombatUnit.GetManpowerFormatted] en [concept_manpower|l]\n[CombatUnit.GetMorale] en [concept_morale|l]\n\n[CombatUnit.GetOffenseFormatted] en [concept_offense|l]\n[CombatUnit.GetDefenseFormatted] en [concept_defense|l]"
 COMBAT_UNIT_TOOLTIP_MOBILIZED_STATUS: "[SelectLocalization(Or(CombatUnit.IsMobilizing, CombatUnit.IsFullyMobilized), SelectLocalization(CombatUnit.IsFullyMobilized, 'COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZED', 'COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZING'), 'COMBAT_UNIT_MOBILIZATION_STATUS_DEMOBILIZED')]"
 POP_SIZE_TITLE: "[Concept('concept_pop','$concept_population$')]"
 PIN_CHARACTER: "Épingler [Character.GetFullName] au tableau de bord"
 UNPIN_CHARACTER: "Détacher [Character.GetFullName] du tableau de bord"
 PIN_DIPLOMATIC_PLAY: "Épingler [DiplomaticPlay.GetName] au tableau de bord"
 UNPIN_DIPLOMATIC_PLAY: "Détacher [DiplomaticPlay.GetName] du tableau de bord"
 PIN_POLITICAL_MOVEMENT: "Épingler [PoliticalMovement.GetName] au tableau de bord"
 UNPIN_POLITICAL_MOVEMENT: "Détacher [PoliticalMovement.GetName] du tableau de bord"
 PIN_POLITICAL_LOBBY: "Épingler [PoliticalLobby.GetName] au tableau de bord"
 UNPIN_POLITICAL_LOBBY: "Détacher [PoliticalLobby.GetName] du tableau de bord"
 PIN_COUNTRY: "Épingler [Country.GetAltNameNoFormatting('Le')|U][Country.GetName] au tableau de bord"
 UNPIN_COUNTRY: "Détacher [Country.GetAltNameNoFormatting('Le')][Country.GetName] du tableau de bord"
 PIN_IG: "Épingler [InterestGroup.GetName] au tableau de bord"
 UNPIN_IG: "Détacher [InterestGroup.GetName] du tableau de bord"
 PIN_JOURNAL_ENTRY: "Épingler [JournalEntry.GetName] au tableau de bord"
 UNPIN_JOURNAL_ENTRY: "Détacher [JournalEntry.GetName] du tableau de bord"
 PIN_MARKET: "Épingler [Market.GetName] au tableau de bord"
 UNPIN_MARKET: "Détacher [Market.GetName] du tableau de bord"
 PIN_STATE: "Épingler [State.GetName] au tableau de bord"
 UNPIN_STATE: "Détacher [State.GetName] du tableau de bord"
 PIN_BUILDING: "Épingler [BuildingDetailsPanel.AccessBuilding.GetName] au tableau de bord"
 UNPIN_BUILDING: "Détacher [BuildingDetailsPanel.AccessBuilding.GetName] du tableau de bord"
 PIN_COMPANY: "Épingler [Company.GetCompanyType.GetName] au tableau de bord"
 UNPIN_COMPANY: "Détacher [Company.GetCompanyType.GetName] du tableau de bord"
 PIN_TREATY: "Épingler [Treaty.GetName] au tableau de bord"
 UNPIN_TREATY: "Détacher [Treaty.GetName] du tableau de bord"
 RADICALISM_PASSIVE: "#b Passif#!"
 RADICALISM_AGITATING: "#b Activiste#!"
 RADICALISM_PROTESTING: "#N Manifestant#!"
 RADICALISM_MILITANT: "#N Militant#!"
 SUPPORT_MARGINAL: "#b Marginal#!"
 SUPPORT_RELEVANT: "#b Suffisant#!"
 SUPPORT_SIGNIFICANT: "#b Important#!"
 SUPPORT_DOMINANT: "#N Indéfectible#!"
 SUPPORT_UNIVERSAL: "#N Inconditionnel#!"
 LABEL_VALUE_RANGE: "$LABEL$ ([Multiply_CFixedPoint('(CFixedPoint)$MIN$','(CFixedPoint)100')|0]-$MAX|0%$)"
 FEED: "Flux"
 TOAST: "Toast"
 POPUP: "Pop-up"
 MESSAGE_SETTINGS_FEED: "[concept_message_settings_feed]"
 MESSAGE_SETTINGS_TOAST: "[concept_message_settings_toast]"
 MESSAGE_SETTINGS_POPUP: "[concept_message_settings_popup]"
 MESSAGE_SETTINGS_NONE: "[concept_message_settings_none]"
 MESSAGE_SETTINGS_DEFAULT: "Défaut"
 JOURNAL_ENTRY_POSSIBLE_ACTIONS: "[JournalEntry.GetNumPossibleScriptedButtons|v] action[SelectLocalization(GreaterThan_int32(JournalEntry.GetNumPossibleScriptedButtons, '(int32)1'), 's', '')] possible[SelectLocalization(GreaterThan_int32(JournalEntry.GetNumPossibleScriptedButtons, '(int32)1'), 's', '')]"
 BEHAVIOR: "Comportement"
 RANKING_FORMAT: "#tooltippable #tooltip:$LEADERBOARD$ #v $RANKING$e#!#!#!"
 GDP_LEADERBOARD_HEADER: "#header PIB#!"
 GDP_PER_CAPITA_LEADERBOARD_HEADER: "#header PIB par habitant#!"
 SOL_LEADERBOARD_HEADER: "#header Niveau de vie#!"
 POPULATION_LEADERBOARD_HEADER: "#header Population#!"
 INCORPORATED_LITERACY_LEADERBOARD_HEADER: "#header Alphabétisation dans les États incorporés#!"
 TOTAL_LITERACY_LEADERBOARD_HEADER: "#header Alphabétisation dans tous les États#!"
 BATTALIONS_LEADERBOARD_HEADER: "#header Bataillons#!"
 FLOTTILAS_LEADERBOARD_HEADER: "#header Flottilles#!"
 GDP_LEADERBOARD_ITEM: "\n$RANK$. @money!$VAL|vD$ - $COUNTRY$"
 SOL_LEADERBOARD_ITEM: "\n$RANK$. $VAL|vD$ - $COUNTRY$"
 POPULATION_LEADERBOARD_ITEM: "\n$RANK$. $VAL|vD$ - $COUNTRY$"
 INCORPORATED_LITERACY_LEADERBOARD_ITEM: "\n$RANK$. $VAL|v1%$ - $COUNTRY$"
 TOTAL_LITERACY_LEADERBOARD_ITEM: "\n$RANK$. $VAL|v1%$ - $COUNTRY$"
 BATTALIONS_LEADERBOARD_ITEM: "\n$RANK$. $VAL|vD$ @battalions! - $COUNTRY$"
 FLOTILLAS_LEADERBOARD_ITEM: "\n$RANK$. $VAL|vD$ @flotillas! - $COUNTRY$"
 COMMANDER_RANK_LOC_KEY: "[Concept('concept_commander_rank','$concept_commander_rank_short$')] "
 EDIT: "Modifier"
 CUSTOMIZE_NAME_AND_EMBLEM: "Personnalisation du nom et de l’emblème"
 CUSTOMIZE: "Personnaliser"
 CUSTOMIZE_WITH_ICON: "@edit! Personnaliser"
 CHANGE_NAME: "Changer le nom"
 CUSTOMISE_MILITARY_FORMATION: "Personnaliser la formation"
 UNIT_NAMES: "Noms des unités"
 BASE_ON: "Baser sur"
 FORMATION_NAME: "Nom de la formation"
 CHOOSE_FORMATION_FLAG: "Motif du drapeau"
 CHOOSE_FORMATION_FLAG_COLOUR: "Couleur du drapeau"
 MILITARY_FORMATION_INVALID_NAME: "Nom incorrect :\n$DESC$"
 MILITARY_FORMATION_INVALID: "Formation incorrecte"
 MILITARY_FORMATION_NOT_YOURS: "Le joueur ne possède pas cette formation."
 CHARACTER_INVALID: "Caractère incorrect"
 COMPANY_INVALID_NAME: "Nom incorrect :\n$DESC$"
 COMPANY_INVALID: "Compagnie invalide"
 COMPANY_NOT_YOURS: "Le joueur ne possède pas cette compagnie."
 CUSTOMIZE_STATE_NAMES: "Personnaliser le nom de l’État et de ses centres"
 CUSTOMIZE_STATE: "Personnaliser le nom"
 STATE_NAME: "État"
 CITY_NAME: "Capitale de l’État"
 PORT_NAME: "Ville portuaire"
 FARM_NAME: "Ville agricole"
 MINE_NAME: "Ville minière"
 WOOD_NAME: "Ville forestière"
 SUPPORT_INITIATOR: "Soutenir [DiplomaticPlay.GetInitiator.GetName]"
 REVERSE_SWAY_INITIATOR: "Offrir du soutien à [DiplomaticPlay.GetInitiator.GetName] ([SelectLocalization(DiplomaticPlay.WouldAcceptAnySway( GetPlayer.Self, DiplomaticPlay.GetInitiator ), 'CAN_SWAY_ICON', 'CAN_NOT_SWAY_ICON')])"
 SUPPORT_TARGET: "Soutenir [DiplomaticPlay.GetTarget.GetName]"
 REVERSE_SWAY_TARGET: "Offrir du soutien à [DiplomaticPlay.GetTarget.GetName] ([SelectLocalization(DiplomaticPlay.WouldAcceptAnySway( GetPlayer.Self, DiplomaticPlay.GetTarget ), 'CAN_SWAY_ICON', 'CAN_NOT_SWAY_ICON')])"
 CAN_SWAY_ICON: "@approves!"
 CAN_NOT_SWAY_ICON: "@disapproves!"
 SCRIPTED_BUTTON_IS_ON_COOLDOWN_DESC: "@red_cross! Plus disponible jusqu’au [Date.GetString|v]"
 SCRIPTED_BUTTON_IS_ON_COOLDOWN_ERROR: "Plus disponible jusqu’au [Date.GetString|v]"
 SCRIPTED_ACTION_TOOLTIP: "#header [ScriptedButton.GetName]#! [AddLocalizationIf(ScriptedButton.IsSelected, 'SCRIPTED_ACTION_TOOLTIP_IS_SELECTED')][ConcatIfNeitherEmpty('\n', ScriptedButton.GetDesc)]\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty(ScriptedButton.GetPossibleDesc, '\n\n')]#title Effets :#!\n[ScriptedButton.GetEffectDesc]"
 SCRIPTED_ACTION_TOOLTIP_IS_SELECTED: "#i (Sélectionné)#!"
 PROGRESS_BAR_BREAKDOWN: "#header Progression de $Name$#!\n[AddTextIf(NotEqualTo_CFixedPoint('(CFixedPoint)$TOTAL_VALUE$','(CFixedPoint)0'), '$TOTAL_VALUE|+=1$ de progression mensuelle moyenne\n$TOOLTIP_DELIMITER$\nCeci s’explique par :' )][AddTextIf(Not(StringIsEmpty('$WEEKLY_DESC$')), '\n#title $WEEKLY_VALUE|+=1$ de changement hebdomadaire en raison de :#! #indent_newline:3 \n $WEEKLY_DESC$#!\n')][AddTextIf(Not(StringIsEmpty('$MONTHLY_DESC$')), '\n#title $MONTHLY_VALUE|+=1$ de changement mensuel en raison de :#! #indent_newline:3 \n $MONTHLY_DESC$#!\n')][AddTextIf(Not(StringIsEmpty('$YEARLY_DESC$')), '\n#title $YEARLY_VALUE|+=1$ de changement annuel en raison de :#! #indent_newline:3 \n $YEARLY_DESC$#!\n')]"
 PROGRESS_BAR_BREAKDOWN_NEGATIVE: "#header Progression de $Name$#!\n[AddTextIf(NotEqualTo_CFixedPoint('(CFixedPoint)$TOTAL_VALUE$','(CFixedPoint)0'), '$TOTAL_VALUE|-=1$ de progression mensuelle moyenne\n$TOOLTIP_DELIMITER$\nCeci s’explique par :' )][AddTextIf(Not(StringIsEmpty('$WEEKLY_DESC$')), '\n#title $WEEKLY_VALUE|-=1$ de changement hebdomadaire en raison de :#! #indent_newline:3 \n $WEEKLY_DESC$#!\n')][AddTextIf(Not(StringIsEmpty('$MONTHLY_DESC$')), '\n#title $MONTHLY_VALUE|-=1$ de changement mensuel en raison de :#! #indent_newline:3 \n $MONTHLY_DESC$#!\n')][AddTextIf(Not(StringIsEmpty('$YEARLY_DESC$')), '\n#title $YEARLY_VALUE|-=1$ de changement annuel en raison de :#! #indent_newline:3 \n $YEARLY_DESC$#!\n')]"
 PROGRESS_BAR_VALUE_FORMAT_WEEKLY: "$VALUE|+=1$ de $KEY$"
 PROGRESS_BAR_VALUE_FORMAT_MONTHLY: "$VALUE|+=1$ de $KEY$"
 PROGRESS_BAR_VALUE_FORMAT_YEARLY: "$VALUE|+=1$ de $KEY$"
 PROGRESS_BAR_VALUE_FORMAT_WEEKLY_NEGATIVE: "$VALUE|-=1$ car $KEY$"
 PROGRESS_BAR_VALUE_FORMAT_MONTHLY_NEGATIVE: "$VALUE|-=1$ car $KEY$"
 PROGRESS_BAR_VALUE_FORMAT_YEARLY_NEGATIVE: "$VALUE|-=1$ car $KEY$"
 DIPLO_PLAY_COUNTRY_WARSHIPS_BREAKDOWN: "[Country.GetAltNameNoFormatting('Le')|U][Country.GetName] [Country.GetAltNameNoFormatting('AOnt')] [Country.GetWarships|v]@flotillas! [Concept('concept_flotilla', '$concept_flotillas$')|l]"
 DEPLOY_MILITARY_FORMATION_TO_FRONT_TEXT: "Déployer sur un [concept_front|l]"
 DEPLOY_MILITARY_FORMATION_TO_FRONT_TOOLTIP: "#header Déployer sur un [concept_front|l]#!\n[SelectLocalization(MilitaryFormation.IsMobilized, 'MILITARY_FORMATION_TOOLTIP_IS_MOBILIZED', 'MILITARY_FORMATION_TOOLTIP_IS_NOT_MOBILIZED')]$MILITARY_FORMATION_GENERIC_ERRORS$[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.CanDeployToFront), 'NO_VALID_OPTIONS_FOR_DEPLOY_TO_FRONT'))]\n\n@information! Ceci détermine la position de la formation [MilitaryFormation.GetName], tandis que vous pouvez modifier les [Concept('concept_order', '$concept_orders$')|l] des [Concept('concept_general', '$concept_generals$')|l] affectés"
 MILITARY_FORMATION_TOOLTIP_IS_MOBILIZED: "@green_checkmark_box! La formation [MilitaryFormation.GetName] est [Concept('concept_mobilize_army','mobilisée')]"
 MILITARY_FORMATION_TOOLTIP_IS_NOT_MOBILIZED: "@simple_box! La formation [MilitaryFormation.GetName] est [Concept('concept_mobilize_army','mobilisée')]"
 DEPLOY_MILITARY_FORMATION_TO_SEA_NODE_TOOLTIP: "#header Déployer dans un [concept_sea_node|l]#![ConcatIfNeitherEmpty('\n\n', AddLocalizationIf(MilitaryFormation.IsFullyDefeated, 'FORMATION_FULLY_DEFEATED'))]$MILITARY_FORMATION_GENERIC_ERRORS$[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.CanStation), 'NO_VALID_OPTIONS_FOR_DEPLOY_TO_SEA_NODE'))]\n\n@information! Ceci détermine la position de la formation [MilitaryFormation.GetName], tandis que vous pouvez modifier les [Concept('concept_order', '$concept_orders$')|l] des [Concept('concept_admiral', '$concept_admirals$')|l] affectés"
 DEPLOY_MILITARY_FORMATION_TO_SEA_NODE_LABEL: "Déployer dans un [concept_sea_node|l]"
 STATION_MILITARY_FORMATION_TOOLTIP: "#header Stationner dans un [concept_hq]#![ConcatIfNeitherEmpty('\n', AddLocalizationIf(MilitaryFormation.IsFullyDefeated, 'FORMATION_FULLY_DEFEATED'))]$MILITARY_FORMATION_GENERIC_ERRORS$[ConcatIfNeitherEmpty('\n', AddLocalizationIf(Not(MilitaryFormation.CanStation), 'NO_VALID_OPTIONS_FOR_STATION'))]"
 MILITARY_FORMATION_GENERIC_ERRORS: "[ConcatIfNeitherEmpty('\n', AddLocalizationIf(MilitaryFormation.IsExiled, 'MILITARY_FORMATION_EXILED_ERROR'))][ConcatIfNeitherEmpty('\n', AddLocalizationIf(MilitaryFormation.HasInvasion, 'HAS_NAVAL_INVASION_ERROR'))][ConcatIfNeitherEmpty('\n', AddLocalizationIf(EqualTo_int32(MilitaryFormation.GetNumCombatUnits, '(int32)0'), 'HAS_NO_UNITS_ERROR'))]"
 STATION_MILITARY_FORMATION_LABEL: "Stationner dans un [concept_hq]"
 MILITARY_FORMATION_EXILED_ERROR: "@simple_box! $REPOSITION_MILITARY_FORMATION_EXILED$"
 MILITARY_FORMATION_INVADE_LABEL: "Planifier une [concept_invasion|l]"
 HAS_NAVAL_INVASION_ERROR: "@red_cross! [MilitaryFormation.GetName] est impliquée dans l’[MilitaryFormation.GetInvasion.GetName|l]"
 HAS_NO_UNITS_ERROR: "@red_cross! [MilitaryFormation.GetName] n’a pas d’[Concept('concept_unit','$concept_units_short$')|l]"
 SINGULAR_BATTLE: "[concept_battle|l]"
 MULTIPLE_BATTLES: "[Concept('concept_battle','$concept_battles$')|l]"
 NO_VALID_OPTIONS_FOR_STATION: "@red_cross! [MilitaryFormation.GetName] n’a pas d’alternatives valables pour l’action #b Stationner dans un QG#!"
 NO_VALID_OPTIONS_FOR_DEPLOY_TO_FRONT: "@red_cross! [MilitaryFormation.GetName] n’a pas d’alternatives valables pour l’action #b Déployer sur un front#!"
 NO_VALID_OPTIONS_FOR_DEPLOY_TO_SEA_NODE: "@red_cross! [MilitaryFormation.GetName] n’a pas d’alternatives valables pour l’action #b Déployer dans un nœud maritime#!"
 MILITARY_FORMATION_INVASION_TOOLTIP: "#header Planifier l’invasion d’un [concept_state] ennemi#![ConcatIfNeitherEmpty('\n', MilitaryFormation.GetInvasionTooltip)]"
 REHOME_MILITARY_FORMATION_TOOLTIP: "Définir le [concept_hq] d’origine de la formation [MilitaryFormation.GetName] à un autre $concept_hq$"
 REHOME_MILITARY_FORMATION_LABEL: "Replacer dans un [concept_hq]"
 MAP_INTERACTION_DEPLOY_MILITARY_FORMATION_TO_FRONT_DESC: "Déployer $FORMATION_NAME$ sur un [concept_front|l]"
 MAP_INTERACTION_DEPLOY_MILITARY_FORMATION_TO_FRONT_PERFORMED: "$FORMATION_NAME$ a été déployée au [concept_front|l]"
 MAP_INTERACTION_DEPLOY_MILITARY_FORMATION_TO_SEA_NODE_DESC: "Déployer $FORMATION_NAME$ dans un [concept_sea_node|l]"
 MAP_INTERACTION_DEPLOY_MILITARY_FORMATION_TO_SEA_NODE_PERFORMED: "$FORMATION_NAME$ a été déployée dans un [concept_sea_node|l]"
 MAP_INTERACTION_STATION_MILITARY_FORMATION_DESC: "Stationner $FORMATION_NAME$ dans un [concept_hq|l]"
 MAP_INTERACTION_STATION_MILITARY_FORMATION_PERFORMED: "$FORMATION_NAME$ stationnée"
 MAP_INTERACTION_REHOME_MILITARY_FORMATION_DESC: "Placer $FORMATION_NAME$ dans un [concept_hq]"
 MAP_INTERACTION_REHOME_MILITARY_FORMATION_PERFORMED: "$FORMATION_NAME$ replacé"
 PRODUCTION_METHOD_CONFIRMATION_TITLE: "Changer pour [ProductionMethod.GetName]"
 PRODUCTION_METHOD_CONFIRMATION_DESC: "Si vous changez pour [ProductionMethod.GetName], les [Concept( 'concept_building', '$concept_buildings$' )|l] de type [BuildingType.GetName] suivants auront une très faible [concept_productivity|l] :\n\n[ProductionMethodConfirmationPopup.GetLowProductivityBreakdown]"
 PRODUCTION_METHOD_CONFIRMATION_LOW_PRODUCTIVITY_ENTRY: "[BUILDING.GetState.GetName] : #N $VALUE$#!"
 PRODUCTION_METHOD_CONFIRMATION_CONTINUE: "$CONTINUE$"
 PRODUCTION_METHOD_CONFIRMATION_CONTINUE_TOOLTIP: "Changer les [ProductionMethodConfirmationPopup.GetTotalBuildingCount|v] [Concept( 'concept_building', '$concept_buildings$' )|l] de type [BuildingType.GetName] en [ProductionMethod.GetName]"
 PRODUCTION_METHOD_CONFIRMATION_EXEMPT: "Exempt"
 PRODUCTION_METHOD_CONFIRMATION_EXEMPT_TOOLTIP: "Changer uniquement [Subtract_int32( ProductionMethodConfirmationPopup.GetTotalBuildingCount, ProductionMethodConfirmationPopup.GetExemptedBuildingCount )|v] [Concept( 'concept_building', '$concept_buildings$' )|l] de type [BuildingType.GetName] en [ProductionMethod.GetName]\n(Les [ProductionMethodConfirmationPopup.GetExemptedBuildingCount|v] bâtiments listés ci-dessus seront inchangés)"
 PRODUCTION_METHOD_CONFIRMATION_CANCEL: "$CANCEL$"
 TREATY_FALLBACK_NAME: "$ENTRY_INTO_FORCE_DATE$ : Accord de $SIGNING_LOCATION$ entre [FIRST_COUNTRY.GetAltNameNoFormatting('Le')][FIRST_COUNTRY.GetName] et [SECOND_COUNTRY.GetAltNameNoFormatting('Le')][SECOND_COUNTRY.GetName]"
 TREATY_DRAFT_FALLBACK_NAME: "Délibération entre [FIRST_COUNTRY.GetAltNameNoFormatting('Le')][FIRST_COUNTRY.GetNameNoFormatting] et [SECOND_COUNTRY.GetAltNameNoFormatting('Le')][SECOND_COUNTRY.GetNameNoFormatting]"
 RANDOMIZE_TREATY_NAME: "Nom aléatoire pour le [concept_treaty|l]"
