l_french:
 CHARACTER_INTERACTION_HEADER: "#header [CharacterInteraction.GetName]#!\n$TOOLTIP_DELIMITER$\n"
 CHARACTER_INTERACTION_ERRORS: "[AddTextIf(And(Not(CharacterInteraction.ShouldShowRequirements), Not(StringIsEmpty(CharacterInteraction.GetCommandDesc(Character.Self)))), Concatenate(Localize('CHARACTER_INTERACTION_ERRORS_IMPL'), '\n\n'))]"
 CHARACTER_INTERACTION_ERRORS_IMPL: "#title Conditions requises :#!\n[CharacterInteraction.GetCommandDesc(Character.Self)]"
 CHARACTER_INTERACTION_REQUIREMENTS: "[AddTextIf(And(CharacterInteraction.ShouldShowRequirements, Not(StringIsEmpty(CharacterInteraction.GetRequirements(Character.Self)))), Concatenate(Localize('CHARACTER_INTERACTION_REQUIREMENTS_IMPL'), '\n\n'))]"
 CHARACTER_INTERACTION_REQUIREMENTS_IMPL: "#title Conditions requises :#!\n[CharacterInteraction.GetRequirements(Character.Self)][AddTextIf(CharacterInteraction.IsOnCooldown(Character.Self), Concatenate('\n\n@red_cross! ', CharacterInteraction.GetCooldownDesc(Character.Self)))]"
 CHARACTER_INTERACTION_COOLDOWN_DURATION_INFO: "[AddLocalizationIf(Not(StringIsEmpty(CharacterInteraction.GetCooldownDuration(Character.Self))), 'CHARACTER_INTERACTION_COOLDOWN_DURATION_INFO_IMPL')]"
 CHARACTER_INTERACTION_COOLDOWN_DURATION_INFO_IMPL: "@information! Cette action ne peut être effectuée qu'une fois toutes les [CharacterInteraction.GetCooldownDuration(Character.Self)]\n\n"
 CHARACTER_INTERACTION_INFO: "[ConcatIfNeitherEmpty(CharacterInteraction.GetInfo, '\n\n')]"
 CHARACTER_INTERACTION_EFFECTS: "#title Effets :#!\n[Select_CString(Not(StringIsEmpty(CharacterInteraction.GetEffects(Character.Self))), CharacterInteraction.GetEffects(Character.Self), Localize('CHARACTER_INTERACTION_NO_EFFECT'))]"
 CHARACTER_INTERACTION_NO_EFFECT: "#italic Aucun effet#!"
 CHARACTER_INTERACTION_DESC: "[AddTextIf(Not(StringIsEmpty(CharacterInteraction.GetDesc)), Concatenate('\n\n', CharacterInteraction.GetDesc))]"
 CHARACTER_INTERACTION_TOOLTIP: "$CHARACTER_INTERACTION_HEADER$$CHARACTER_INTERACTION_ERRORS$$CHARACTER_INTERACTION_REQUIREMENTS$$CHARACTER_INTERACTION_COOLDOWN_DURATION_INFO$$CHARACTER_INTERACTION_INFO$$CHARACTER_INTERACTION_EFFECTS$$CHARACTER_INTERACTION_DESC$"
 CHARACTER_INTERACTION_CONFIRMATION: "$CHARACTER_INTERACTION_TOOLTIP$\n\nConfirmer ?"
 CHARACTER_INTERACTION_ON_COOLDOWN: "[CharacterInteraction.GetName|v] n’est plus disponible jusqu’au [Date.GetString|v]"
 CHARACTER_INTERACTION_NAME: "[CharacterInteraction.GetName][AddLocalizationIf(CharacterInteraction.IsOnCooldown(Character.Self), 'INTERACTION_COOLDOWN')]"
 INTERACTION_COOLDOWN: " ([CharacterInteraction.GetCooldownRemaining(Character.Self)])"
 grant_command_to_ruler: "Accorder le commandement"
 remove_command_from_ruler: "Retirer le commandement"
 retire_commander: "Mettre le commandant à la retraite"
 retire_commander_info: "Si vous lui retirez son commandement, [Character.GetFullName] perdra son rôle de [concept_general|l] et cessera d’affecter le [concept_clout|l] du groupe [Character.GetInterestGroup.GetName] grâce à son [concept_commander_rank|l]"
 #Exile Interactions
 exile_character: "Exiler un dissident"
 exile_character_info: "Si vous l’[Concept( 'concept_exile', 'exilez' )], [Character.GetFullName] quittera [Character.GetCountry.GetAltNameNoFormatting('Le')][Character.GetCountry.GetName], et pourra être recruté[Character.GetCustom('FR_E')] par d’autres [Concept('concept_country', '$concept_countries$')|l] en tant que [concept_agitator|l][Character.GetCustom('FR_E')]"
 exile_dissident_tt: "[Character.GetFullName] sera envoyé[Character.GetCustom('FR_E')] [Concept('concept_exile', '$concept_in_exile$')|l]"
 invite_exile: "Inviter un exilé"
 invite_exile_start_join_movement_effect: "[SelectLocalization(Character.PredictMovementToJoin(GetPlayer.Self).IsValid, 'invite_exile_join_movement', 'invite_exile_do_not_join_movement')]"
 invite_exile_do_not_join_movement: "[SelectLocalization(Character.PredictMovementTypeToStart(GetPlayer.Self).IsValid, 'invite_exile_start_movement', 'invite_exile_no_movement')]"
 invite_exile_start_movement: "Lancera un [Character.PredictMovementTypeToStart(GetPlayer.Self).GetName|l]"
 invite_exile_join_movement: "Rejoindra le [Character.PredictMovementToJoin(GetPlayer.Self).GetName|l]"
 invite_exile_no_movement: "Ne commencera pas ou ne rejoindra pas un [concept_political_movement|l]"
 invite_exile_info: "[Concept( 'concept_character_role', '$concept_character_roles$' )] : #v [Character.GetAllRoleNames]#!\n[concept_interest_group] : [Character.GetInterestGroup.GetName]\n[concept_ideology] : [Character.GetIdeology.GetName]\n[concept_popularity] : #v #tooltip:[Character.GetTooltipTag],POPULARITY_BREAKDOWN [LabelingHelper.GetLabelForPopularityCFixedPoint(Character.GetPopularity)]#!#! (#v #tooltippable #tooltip:[Character.GetTooltipTag],POPULARITY_BREAKDOWN [Character.GetPopularity|0]#!#!#!)\n\nLa popularité du [concept_agitator|l] affectera le soutien accordé au mouvement politique que le militant commencera ou rejoindra"
 invite_exile_devout_tt: "Les [Concept('concept_character', '$concept_characters$')|l] croyants doivent avoir notre [concept_state_religion|l]"
 invite_exile_state_religion_tt: "Tant que nous avons la [concept_law|l] sur la religion d’État, les personnages doivent avoir notre [concept_state_religion|l]"
 adopt_random_antigovernment_ideology_tt: "Ce [concept_character|l] adoptera une [concept_ideology|l] opposée à notre gouvernement."
 notification_exile_notification_name: "[SCOPE.sCharacter('exile_scope').GetFullName] a été exilé[SCOPE.sCharacter('exile_scope').GetCustom('FR_E')] loin [SCOPE.sCountry('exiling_country_scope').GetAltNameNoFormatting('Du')][SCOPE.sCountry('exiling_country_scope').GetName]."
 notification_exile_notification_desc: "[SCOPE.sCharacter('exile_scope').GetFullName] a été envoyé[SCOPE.sCharacter('exile_scope').GetCustom('FR_E')] [Concept('concept_exile', '$concept_in_exile$')|l] par [SCOPE.sCountry('exiling_country_scope').GetAltNameNoFormatting('Le')][SCOPE.sCountry('exiling_country_scope').GetName]."
 notification_exile_notification_tooltip: "#header $notification_exile_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_exile_notification_desc$"
 #Agitator Interactions
 grant_leadership_to_agitator: "Accorder la direction"
 grant_leadership_to_agitator_info: "[concept_ideology] : [Character.GetIdeology.GetName]\n[concept_popularity] : #v #tooltip:[Character.GetTooltipTag],POPULARITY_BREAKDOWN [LabelingHelper.GetLabelForPopularityCFixedPoint(Character.GetPopularity)]#!#! (#v #tooltippable #tooltip:[Character.GetTooltipTag],POPULARITY_BREAKDOWN [Character.GetPopularity|0]#!#!#!)\n\nSi vous lui accordez la direction, l’idéologie de [Character.GetFullName] sera ajoutée au groupe [Character.GetInterestGroup.GetName] et sa popularité affectera l’[concept_interest_group_attraction|l]"
 make_agitator_ig_leader_tt: "Devient le [concept_leader|l] du groupe [Character.GetInterestGroup.GetName]"
 grant_command_to_agitator: "Accorder le commandement"
 grant_command_to_agitator_info: "Si vous lui accordez le commandement, [Character.GetFullName] restera un[Character.GetCustom('FR_E')] [concept_agitator|l][Character.GetCustom('FR_E')] avec la possibilité de diriger des armées en tant que [concept_general|l], dont le [concept_commander_rank|l] affectera le [concept_clout|l] du groupe [Character.GetInterestGroup.GetName]"
 #Monarch interactions
 marry_ruler_or_heir: "Recherche mariage royal"
 marry_ruler_or_heir_info: "En plus d’augmenter potentiellement sa [concept_popularity|l], un mariage royal permettra d’améliorer les [concept_relations|l] entre [Character.GetCountry.GetAltNameNoFormatting('Le')][Character.GetCountry.GetName] et le [concept_country|l] d’origine de la nouvelle moitié du [Character.GetPrimaryRoleTitle|l] [Character.GetFullName]"
 marry_ruler_or_heir_desc: "#lore [Character.GetFullName] cherchera sa moitié parmi la noblesse d’une nation alliée.#!"
 abdicate_monarch: "Abdication du trône"
 abdicate_monarch_info: "Le [concept_ruler|l] abdiquera le trône [Character.GetCountry.GetAltNameNoFormatting('Du')][Character.GetCountry.GetName], laissant le rôle de [Character.GetPrimaryRoleTitle|l] à son [concept_heir|l]"
